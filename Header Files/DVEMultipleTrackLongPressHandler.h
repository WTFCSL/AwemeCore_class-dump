//
//     Generated by private class-dump
//

@class UILongPressGestureRecognizer, NSString, DVEMultipleTrackView, UIView, DVESegmentClipView;
@protocol DVERootViewControllerProtocol;

@interface DVEMultipleTrackLongPressHandler : NSObject <UIGestureRecognizerDelegate> {
    DVEMultipleTrackView *_multipleTrackView;
    id<DVERootViewControllerProtocol> _rootViewService;
    UIView *_deskView;
    DVESegmentClipView *_borderView;
    UILongPressGestureRecognizer *_longPressGesture;
    long long _insertTargetSection;
    UIView *_alphaView;
    struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } _availableInsertTimeRange;
}

@property (weak, nonatomic) DVEMultipleTrackView *multipleTrackView;
@property (weak, nonatomic) id<DVERootViewControllerProtocol> rootViewService;
@property (retain, nonatomic) UIView *deskView;
@property (retain, nonatomic) DVESegmentClipView *borderView;
@property (retain, nonatomic) UILongPressGestureRecognizer *longPressGesture;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } availableInsertTimeRange;
@property (nonatomic) long long insertTargetSection;
@property (retain, nonatomic) UIView *alphaView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)multipleTrackView;
- (void)setMultipleTrackView:(id)arg0;
- (double)minOffsetBetweenSourcePoints:(id)arg0 targetPoints:(id)arg1;
- (BOOL)inMoveLimitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToRootView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateDeskViewWithMovingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 gesture:(id)arg1;
- (void)longPressBeginWithGesture:(id)arg0;
- (void)longPressChangedWithGesture:(id)arg0 atPoint:(struct CGPoint { double x0; double x1; })arg1 hPosition:(struct CGPoint { double x0; double x1; })arg2 vPosition:(struct CGPoint { double x0; double x1; })arg3;
- (void)longPressEndWithGesture:(id)arg0;
- (void)resetLongPressStatus;
- (id)rootViewService;
- (void)setAvailableInsertTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (void)setupLongPressSnapCellWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setDeskView:(id)arg0;
- (id)deskView;
- (void)setAlphaView:(id)arg0;
- (id)alphaView;
- (void)updateLongPressSnapCellFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)insertTargetSection;
- (BOOL)isNewInsert;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })longPressCellFrameInMultipleTrackView;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })availableInsertTimeRange;
- (void)setInsertTargetSection:(long long)arg0;
- (void)setupLongPressGestureIn:(id)arg0;
- (void)setRootViewService:(id)arg0;
- (id)mediaContext;
- (id)longPressGesture;
- (id)init;
- (void).cxx_destruct;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)handleLongPress:(id)arg0;
- (void)setLongPressGesture:(id)arg0;
- (id)borderView;
- (void)setBorderView:(id)arg0;

@end
