//
//     Generated by private class-dump
//

@class VEPixelBufferCopyUtils, VELensConfig;

@interface VELensEngine : NSObject {
    VELensConfig *_lensConfig;
    struct ILensEngineInterface { void /* function */ **x0; } *_enginePtr;
    struct ILensFlowGraphInterface { void /* function */ **x0; } *_algorithmPtr;
    long long _frameIndex;
    VEPixelBufferCopyUtils *_bufferCopyUtils;
    struct { int videoStabSmoothRadius; float videoStabMaxCropRatio; int videoStabMotionType; } _currentParam;
}

@property (retain, nonatomic) VELensConfig *lensConfig;
@property (nonatomic) struct ILensEngineInterface { void /* function */ **x0; } *enginePtr;
@property (nonatomic) struct ILensFlowGraphInterface { void /* function */ **x0; } *algorithmPtr;
@property (nonatomic) long long frameIndex;
@property (nonatomic) struct { int videoStabSmoothRadius; float videoStabMaxCropRatio; int videoStabMotionType; } currentParam;
@property (retain, nonatomic) VEPixelBufferCopyUtils *bufferCopyUtils;

- (id)lensConfig;
- (struct vImage_Buffer { void *x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })p_rotateBufferData:(char *)arg0 width:(unsigned long long)arg1 height:(unsigned long long)arg2 srcBytesPerRow:(unsigned long long)arg3;
- (int)getLensDataFormat:(unsigned int)arg0;
- (void)updateVideoStabParam:(struct { int x0; float x1; int x2; })arg0;
- (struct __CVBuffer { } *)processTwoPixelBuffer:(struct __CVBuffer { } *)arg0 secondBuffer:(struct __CVBuffer { } *)arg1 timeStamp:(double)arg2;
- (id)getVideoStabResult;
- (void)setLensConfig:(id)arg0;
- (struct { int x0; float x1; int x2; })currentParam;
- (void)setCurrentParam:(struct { int x0; float x1; int x2; })arg0;
- (id)bufferCopyUtils;
- (void)setBufferCopyUtils:(id)arg0;
- (struct ILensEngineInterface { void /* function */ **x0; } *)enginePtr;
- (void)setEnginePtr:(struct ILensEngineInterface { void /* function */ **x0; } *)arg0;
- (struct ILensFlowGraphInterface { void /* function */ **x0; } *)algorithmPtr;
- (void)setAlgorithmPtr:(struct ILensFlowGraphInterface { void /* function */ **x0; } *)arg0;
- (void).cxx_destruct;
- (id)initWithConfig:(id)arg0;
- (BOOL)processPixelBuffer:(struct __CVBuffer { } *)arg0;
- (void)dealloc;
- (long long)frameIndex;
- (void)setFrameIndex:(long long)arg0;

@end
