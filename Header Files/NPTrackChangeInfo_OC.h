//
//     Generated by private class-dump
//

@class NLETrack_OC, NSArray, NSString, NSMutableArray;

@interface NPTrackChangeInfo_OC : NSObject {
    struct shared_ptr<nle::preset::TrackChangeInfo> { struct TrackChangeInfo *__ptr_; struct __shared_weak_count *__cntrl_; } _cppValue;
    NSMutableArray *_slotChangeInfoArray;
}

@property (retain, nonatomic) NSMutableArray *slotChangeInfoArray;
@property (nonatomic) struct shared_ptr<nle::preset::TrackChangeInfo> { struct TrackChangeInfo *__ptr_; struct __shared_weak_count *__cntrl_; } cppValue;
@property (readonly, copy, nonatomic) NSArray *slotChangeInfos;
@property (readonly, copy, nonatomic) NSString *trackID;
@property (readonly, nonatomic) NLETrack_OC *trackOri;
@property (readonly, nonatomic) NLETrack_OC *trackNew;

+ (id)getTrackDiffInfosFromCPPArr:(struct vector<std::shared_ptr<nle::preset::TrackChangeInfo>, std::allocator<std::shared_ptr<nle::preset::TrackChangeInfo>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<nle::preset::TrackChangeInfo> *, std::allocator<std::shared_ptr<nle::preset::TrackChangeInfo>>> { void *x0; } x2; })arg0;

- (struct shared_ptr<nle::preset::TrackChangeInfo> { struct TrackChangeInfo *x0; struct __shared_weak_count *x1; })cppValue;
- (id)initWithCPPNode:(struct shared_ptr<nle::preset::TrackChangeInfo> { struct TrackChangeInfo *x0; struct __shared_weak_count *x1; })arg0;
- (void)setCppValue:(struct shared_ptr<nle::preset::TrackChangeInfo> { struct TrackChangeInfo *x0; struct __shared_weak_count *x1; })arg0;
- (id)slotChangeInfoArray;
- (id)slotChangeInfos;
- (id)trackOri;
- (id)trackNew;
- (id)initWithTrackID:(id)arg0;
- (void)setSlotChangeInfoArray:(id)arg0;
- (void).cxx_destruct;
- (id)trackID;
- (id).cxx_construct;

@end
