//
//     Generated by private class-dump
//

@class UICollectionView, AWEAIVideoClipFavoriteMusicViewModel, AWEAIVideoClipFooterView, NSDictionary, NSObject, AWEVideoRangeSlider, NSMutableArray, ACCAnimatedButton, UIView, NSString, AWEAIVideoClipRetryPanelView, AWEVideoPublishViewModel, HTSVideoSpeedControl, NSArray, AWESegmentedClipFooterPassThroughView, AWEAIVideoClipMusicPanelView, AWEAIVideoSegmentsView;
@protocol ACCInteractiveTransitionProtocol, ACCMusicModelProtocol, ACCChallengeModelProtocol, AWEAIVideoClipFooterViewControllerDelegate, UIViewControllerTransitioningDelegate;

@interface AWEAIVideoClipFooterViewController : UIViewController <AWEAIVideoClipFavoriteMusicViewModelDelegate, AWEVideoClipFooterView> {
    BOOL _enableVideoSegementsEdit;
    BOOL _favoriteMusicEnabled;
    BOOL _favoriteMusicNeedUpdate;
    BOOL _useSuggestClipRange;
    NSObject<AWEAIVideoClipFooterViewControllerDelegate> *_delegate;
    NSString *_createID;
    id<ACCChallengeModelProtocol> _challenge;
    NSArray *_proBindMusicIDArray;
    unsigned long long _currentPanelType;
    AWEAIVideoClipRetryPanelView *_loadingPanelView;
    AWEAIVideoClipMusicPanelView *_musicPanelView;
    AWEAIVideoSegmentsView *_videoSegmentsPanelView;
    AWEAIVideoClipFooterView *_videoClipPanelView;
    id<UIViewControllerTransitioningDelegate, ACCInteractiveTransitionProtocol> _transDelegate;
    NSArray *_assetModelArray;
    NSMutableArray *_musicList;
    AWEVideoPublishViewModel *_publishModel;
    AWEAIVideoClipFavoriteMusicViewModel *_favoriteMusicViewModel;
    NSDictionary *_referExtra;
    id<ACCMusicModelProtocol> _selectedMusic;
    double _startLocation;
}

@property (nonatomic) unsigned long long currentPanelType;
@property (retain, nonatomic) AWEAIVideoClipRetryPanelView *loadingPanelView;
@property (retain, nonatomic) AWEAIVideoClipMusicPanelView *musicPanelView;
@property (retain, nonatomic) AWEAIVideoSegmentsView *videoSegmentsPanelView;
@property (retain, nonatomic) AWEAIVideoClipFooterView *videoClipPanelView;
@property (retain, nonatomic) id<UIViewControllerTransitioningDelegate, ACCInteractiveTransitionProtocol> transDelegate;
@property (retain, nonatomic) NSArray *assetModelArray;
@property (retain, nonatomic) NSMutableArray *musicList;
@property (retain, nonatomic) AWEVideoPublishViewModel *publishModel;
@property (retain, nonatomic) AWEAIVideoClipFavoriteMusicViewModel *favoriteMusicViewModel;
@property (nonatomic) BOOL favoriteMusicEnabled;
@property (nonatomic) BOOL favoriteMusicNeedUpdate;
@property (retain, nonatomic) NSDictionary *referExtra;
@property (retain, nonatomic) id<ACCMusicModelProtocol> selectedMusic;
@property (nonatomic) double startLocation;
@property (nonatomic) BOOL useSuggestClipRange;
@property (weak, nonatomic) NSObject<AWEAIVideoClipFooterViewControllerDelegate> *delegate;
@property (nonatomic) BOOL enableVideoSegementsEdit;
@property (copy, nonatomic) NSString *createID;
@property (retain, nonatomic) id<ACCChallengeModelProtocol> challenge;
@property (copy, nonatomic) NSArray *proBindMusicIDArray;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } normalItemSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } coverItemSize;
@property (readonly, nonatomic) AWEVideoRangeSlider *videoRangeSlider;
@property (readonly, nonatomic) HTSVideoSpeedControl *speedControl;
@property (readonly, nonatomic) UICollectionView *framesCollectionView;
@property (readonly, nonatomic) UICollectionView *videosCollectionView;
@property (readonly, nonatomic) UIView *cursorView;
@property (readonly, nonatomic) AWESegmentedClipFooterPassThroughView *framesCollectionLeftMaskView;
@property (readonly, nonatomic) AWESegmentedClipFooterPassThroughView *framesCollectionRightMaskView;
@property (readonly, nonatomic) ACCAnimatedButton *rotateButton;
@property (readonly, nonatomic) ACCAnimatedButton *deleteButton;
@property (readonly, nonatomic) ACCAnimatedButton *speedControlButton;
@property (readonly, nonatomic) ACCAnimatedButton *aniCloseButton;
@property (readonly, nonatomic) ACCAnimatedButton *aniOkButton;
@property (nonatomic) unsigned long long currentVideoIndex;

- (id)publishModel;
- (void)setPublishModel:(id)arg0;
- (BOOL)useSuggestClipRange;
- (void)setUseSuggestClipRange:(BOOL)arg0;
- (id)cursorView;
- (id)addExtraParams:(id)arg0;
- (unsigned long long)currentVideoIndex;
- (void)setCurrentVideoIndex:(unsigned long long)arg0;
- (id)musicList;
- (void)setMusicList:(id)arg0;
- (double)currentPanelHeight;
- (id)assetModelArray;
- (id)referExtra;
- (id)loadingPanelView;
- (void)setLoadingPanelView:(id)arg0;
- (void)handleFavoriteStatusChangedNotification:(id)arg0;
- (void)setCreateID:(id)arg0;
- (void)setReferExtra:(id)arg0;
- (void)setSelectedMusic:(id)arg0;
- (id)musicPanelView;
- (void)setMusicPanelView:(id)arg0;
- (id)transDelegate;
- (id)selectedMusic;
- (void)setTransDelegate:(id)arg0;
- (id)createID;
- (void)moreDataDidLoad;
- (id)framesCollectionView;
- (id)videoRangeSlider;
- (id)framesCollectionLeftMaskView;
- (id)framesCollectionRightMaskView;
- (id)speedControl;
- (id)aniOkButton;
- (id)aniCloseButton;
- (struct CGSize { double x0; double x1; })normalItemSize;
- (struct CGSize { double x0; double x1; })coverItemSize;
- (id)videosCollectionView;
- (id)initWithSourceAssetModelArray:(id)arg0 referExtra:(id)arg1;
- (void)setAssetModelArray:(id)arg0;
- (void)setCurrentPanelType:(unsigned long long)arg0;
- (void)setFavoriteMusicEnabled:(BOOL)arg0;
- (BOOL)favoriteMusicEnabled;
- (void)setFavoriteMusicViewModel:(id)arg0;
- (id)favoriteMusicViewModel;
- (id)videoClipPanelView;
- (id)videoSegmentsPanelView;
- (void)p_showSelectMusicViewController;
- (void)fetchFavoriteMusicList;
- (BOOL)favoriteMusicNeedUpdate;
- (void)p_showPanel:(unsigned long long)arg0;
- (void)updateMusicItemList:(id)arg0 andUseMusic:(id)arg1;
- (void)updateFavoriteMusicListLoading:(BOOL)arg0;
- (void)setFavoriteMusicNeedUpdate:(BOOL)arg0;
- (void)segmentedClipsEndAnimationWithCompletion:(id /* block */)arg0;
- (unsigned long long)currentPanelType;
- (double)p_panelHeightForPanelType:(unsigned long long)arg0;
- (void)p_handleSelectMusic:(id)arg0 error:(id)arg1;
- (id)proBindMusicIDArray;
- (id)p_recommendMusic;
- (void)p_retryAction;
- (void)p_musicPanelConfirmAction:(id)arg0;
- (void)p_rotateAction:(id)arg0;
- (void)p_videoSegmentsFinishButtonAction;
- (void)updateMusicList:(id)arg0 error:(id)arg1;
- (BOOL)enableVideoSegementsEdit;
- (void)p_transitionFrom:(unsigned long long)arg0 to:(unsigned long long)arg1;
- (id)p_panelViewOfType:(unsigned long long)arg0;
- (BOOL)shouldContinueProceedure;
- (void)segmentedClipsStartAnimationWithCell:(id)arg0;
- (BOOL)isInSingleSegmentEditing;
- (BOOL)isInVideoSegmentsEditing;
- (void)footerViewWillAppear;
- (void)footerViewDidAppear;
- (void)footerViewWillDisappear;
- (void)footerViewDidDisappear;
- (id)speedControlButton;
- (void)undoMusicSelection;
- (void)didFinishDeleteAssetModelAtIndex:(long long)arg0;
- (void)setEnableVideoSegementsEdit:(BOOL)arg0;
- (id)initWithSourceAssetModelArray:(id)arg0 publishModel:(id)arg1;
- (void)setProBindMusicIDArray:(id)arg0;
- (void)setVideoSegmentsPanelView:(id)arg0;
- (void)setVideoClipPanelView:(id)arg0;
- (void).cxx_destruct;
- (id)challenge;
- (void)setChallenge:(id)arg0;
- (id)deleteButton;
- (id)delegate;
- (id)containerView;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (double)startLocation;
- (void)setStartLocation:(double)arg0;
- (id)rotateButton;

@end
