//
//     Generated by private class-dump
//

@class NSSet, NSPointerArray, NSString, TIMXSDKInstance, NSObject;
@protocol OS_dispatch_queue, TIMXLongConnectionClientUnderlayingWebSocket, TIMXLongConnectionServerErrorCheckProtocol;

@interface TIMXLongConnectionClient : NSObject <TIMXWebSocketReceiver, TIMXInstanceScopeSingleton> {
    BOOL _enableMeasureCallbackElapsedTime;
    BOOL _enableMeasureAllBusiness;
    id<TIMXLongConnectionClientUnderlayingWebSocket> _webSocket;
    TIMXSDKInstance *_r;
    NSPointerArray *_callbacks;
    NSObject<OS_dispatch_queue> *_messagingQueue;
    id<TIMXLongConnectionServerErrorCheckProtocol> _check;
    NSSet *_businessNameBlackList;
    NSSet *_businessNameWhiteList;
    long long _thresholdDuration;
}

@property (retain) NSPointerArray *callbacks;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *messagingQueue;
@property (retain, nonatomic) id<TIMXLongConnectionServerErrorCheckProtocol> check;
@property (nonatomic) BOOL enableMeasureCallbackElapsedTime;
@property (copy, nonatomic) NSSet *businessNameBlackList;
@property (copy, nonatomic) NSSet *businessNameWhiteList;
@property (nonatomic) long long thresholdDuration;
@property (nonatomic) BOOL enableMeasureAllBusiness;
@property (retain, nonatomic) id<TIMXLongConnectionClientUnderlayingWebSocket> webSocket;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setWebSocket:(id)arg0;
- (id)webSocket;
- (void)handleLongConnectionStateChange:(unsigned long long)arg0;
- (void)addWeakCallback:(id)arg0;
- (void)updateConnection;
- (void)setMessagingQueue:(id)arg0;
- (void)setCheck:(id)arg0;
- (id)messagingQueue;
- (void)handlePushMessageObject:(id)arg0;
- (id)postProcessMappingBlockResult:(id)arg0 originalMessage:(id)arg1;
- (BOOL)checkElapsedTime:(double)arg0;
- (long long)thresholdDuration;
- (void)setThresholdDuration:(long long)arg0;
- (void)measureElapsedTimeWithReceiveTimestamp:(double)arg0 logId:(unsigned long long)arg1;
- (void)handlePushMessageObjectV2:(id)arg0;
- (BOOL)enableMeasureCallbackElapsedTime;
- (void)notifyWillHandleMessageWithCallbacks:(id)arg0 message:(id)arg1;
- (void)notifyHandleMessageWithCallbacks:(id)arg0 message:(id)arg1;
- (void)trackProcessIfNeededWithProcessMonitor:(id)arg0 callback:(id)arg1;
- (long long)conditionCheckWithBusinessClassName:(id)arg0 elapsedTime:(long long)arg1;
- (BOOL)shouldTrackCurrentCallViaPVSampling;
- (BOOL)checkConditionWithbusinessClassName:(id)arg0;
- (id)businessNameBlackList;
- (BOOL)enableMeasureAllBusiness;
- (id)businessNameWhiteList;
- (void)setEnableMeasureCallbackElapsedTime:(BOOL)arg0;
- (void)setBusinessNameBlackList:(id)arg0;
- (void)setBusinessNameWhiteList:(id)arg0;
- (void)setEnableMeasureAllBusiness:(BOOL)arg0;
- (id)callbacks;
- (void).cxx_destruct;
- (id)check;
- (BOOL)enqueueRequest:(id)arg0;
- (BOOL)serverError;
- (void)setCallbacks:(id)arg0;
- (id)initWithRootObject:(id)arg0;
- (void)receiveMessage:(id)arg0;

@end
