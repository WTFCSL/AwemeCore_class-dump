//
//     Generated by private class-dump
//

@class XIGDanmakuClock, NSString, XIGDanmakuDataPool, XIGDanmakuPlayerView, XIGDanmakuRenderEngine, XIGDanmakuDispacher;
@protocol XIGDanmakuPlayerTimeSynchronizer, XIGDanmakuPlayerDelegate;

@interface XIGDanmakuPlayer : NSObject <XIGDanmakuDispacherDelegate, XIGDanmakuDispacherDatatSource, XIGDanmakuPlayerViewDelegate, XIGDanmakuRenderEngineDelegate> {
    BOOL _needsLayout;
    BOOL _needsDisplay;
    double _playbackTime;
    unsigned long long _status;
    id<XIGDanmakuPlayerTimeSynchronizer> _timeSynchronizer;
    id<XIGDanmakuPlayerDelegate> _delegate;
    XIGDanmakuPlayerView *_rootView;
    id /* block */ _filterBlock;
    XIGDanmakuDispacher *_dispatcher;
    XIGDanmakuDataPool *_dataPool;
    XIGDanmakuRenderEngine *_renderEngine;
    XIGDanmakuClock *_clock;
    unsigned long long _clockStepCount;
}

@property (class, nonatomic) BOOL canBookDanmaku;
@property (class, nonatomic) BOOL enableEngineTransaction;
@property (class, nonatomic) BOOL shouldBlockDanmakuDispatch;
@property (class, nonatomic) BOOL enableOptimizeUpdate;
@property (class, nonatomic) long long danmakuRenderClockStepLength;
@property (class, nonatomic) long long danmakuClockInterval;

@property (retain, nonatomic) XIGDanmakuDispacher *dispatcher;
@property (retain, nonatomic) XIGDanmakuDataPool *dataPool;
@property (retain, nonatomic) XIGDanmakuRenderEngine *renderEngine;
@property (retain, nonatomic) XIGDanmakuClock *clock;
@property (nonatomic) double playbackTime;
@property (nonatomic) unsigned long long status;
@property (nonatomic) unsigned long long clockStepCount;
@property (retain, nonatomic) XIGDanmakuPlayerView *rootView;
@property (nonatomic) BOOL needsLayout;
@property (nonatomic) BOOL needsDisplay;
@property (weak, nonatomic) id<XIGDanmakuPlayerTimeSynchronizer> timeSynchronizer;
@property (weak, nonatomic) id<XIGDanmakuPlayerDelegate> delegate;
@property (copy, nonatomic) id /* block */ filterBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)enableOptimizeUpdate;
+ (long long)danmakuClockInterval;
+ (BOOL)enableEngineTransaction;
+ (long long)danmakuRenderClockStepLength;
+ (BOOL)shouldBlockDanmakuDispatch;
+ (void)setShouldBlockDanmakuDispatch:(BOOL)arg0;
+ (void)setEnableEngineTransaction:(BOOL)arg0;
+ (void)setEnableOptimizeUpdate:(BOOL)arg0;
+ (void)setDanmakuRenderClockStepLength:(long long)arg0;
+ (void)setDanmakuClockInterval:(long long)arg0;
+ (BOOL)canBookDanmaku;
+ (void)setCanBookDanmaku:(BOOL)arg0;

- (void)setRenderEngine:(id)arg0;
- (id)renderEngine;
- (id)dataPool;
- (void)setDataPool:(id)arg0;
- (id)danmakusBeforeTime:(double)arg0;
- (BOOL)dispatchDanamku:(id)arg0;
- (void)didDroppedDanmakus:(id)arg0;
- (void)registerClass:(Class)arg0 forItemViewType:(id)arg1;
- (void)setupClock;
- (void)optimizedTimeUpdated:(double)arg0;
- (id)allDisplayingDanmakusArray;
- (unsigned long long)clockStepCount;
- (double)queryCurrentTime;
- (void)setClockStepCount:(unsigned long long)arg0;
- (void)clearAllDisplayingDanmakus;
- (id)timeSynchronizer;
- (BOOL)shouldFilterDanmaku:(id)arg0;
- (void)layoutDidChanged:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)prepareRePlayForLoop;
- (void)setPlaySpeedFactor:(double)arg0;
- (void)addDisplayingDanmaku:(id)arg0;
- (void)removeDisplayingDanmaku:(id)arg0;
- (id)allBookDanmakusArray;
- (void)clearDanmakusInDataPool;
- (id)allDanmakusInDataPool;
- (void)appendDanmakusToDataPool:(id)arg0;
- (void)setTimeSynchronizer:(id)arg0;
- (void)didDisplayDanmaku:(id)arg0 inContainerView:(id)arg1;
- (void)didEndDisplayDanmaku:(id)arg0 inContainerView:(id)arg1;
- (void)didTappedDanmaku:(id)arg0 inContainerView:(id)arg1;
- (void)pauseDisplayingDanmakuByID:(id)arg0;
- (void)resumeDisplayingDanmakuByID:(id)arg0;
- (void)removeDisplayingDanmakuByID:(id)arg0;
- (void)addTrackLayer:(id)arg0;
- (void)timeUpdated:(double)arg0;
- (id)dispatcher;
- (id)clock;
- (void)setPlaybackTime:(double)arg0;
- (void)setDispatcher:(id)arg0;
- (void)setClock:(id)arg0;
- (void)layoutIfNeeded;
- (id)init;
- (BOOL)needsLayout;
- (void).cxx_destruct;
- (void)setNeedsLayout;
- (void)setNeedsLayout:(BOOL)arg0;
- (unsigned long long)status;
- (void)stop;
- (BOOL)needsDisplay;
- (id /* block */)filterBlock;
- (id)delegate;
- (void)setStatus:(unsigned long long)arg0;
- (double)playbackTime;
- (void)setNeedsDisplay;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)seekToTime:(double)arg0;
- (void)displayIfNeeded;
- (void)setNeedsDisplay:(BOOL)arg0;
- (id)rootView;
- (void)setRootView:(id)arg0;
- (void)setFilterBlock:(id /* block */)arg0;

@end
