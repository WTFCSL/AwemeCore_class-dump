//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSDictionary, NSMutableSet, NSSet, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface BU_AFHTTPRequestSerializer : NSObject <BU_AFURLRequestSerialization, BUADRequestSerializerProtocol> {
    BOOL _allowsCellularAccess;
    BOOL _HTTPShouldHandleCookies;
    BOOL _HTTPShouldUsePipelining;
    unsigned long long _stringEncoding;
    unsigned long long _cachePolicy;
    unsigned long long _networkServiceType;
    double _timeoutInterval;
    NSSet *_HTTPMethodsEncodingParametersInURI;
    NSMutableSet *_mutableObservedChangedKeyPaths;
    NSMutableDictionary *_mutableHTTPRequestHeaders;
    NSObject<OS_dispatch_queue> *_requestHeaderModificationQueue;
    unsigned long long _queryStringSerializationStyle;
    id /* block */ _queryStringSerialization;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (retain, nonatomic) NSMutableSet *mutableObservedChangedKeyPaths;
@property (retain, nonatomic) NSMutableDictionary *mutableHTTPRequestHeaders;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *requestHeaderModificationQueue;
@property (nonatomic) unsigned long long queryStringSerializationStyle;
@property (copy, nonatomic) id /* block */ queryStringSerialization;
@property (nonatomic) unsigned long long stringEncoding;
@property (nonatomic) BOOL allowsCellularAccess;
@property (nonatomic) unsigned long long cachePolicy;
@property (nonatomic) BOOL HTTPShouldHandleCookies;
@property (nonatomic) BOOL HTTPShouldUsePipelining;
@property (nonatomic) unsigned long long networkServiceType;
@property (nonatomic) double timeoutInterval;
@property (readonly, nonatomic) NSDictionary *HTTPRequestHeaders;
@property (retain, nonatomic) NSSet *HTTPMethodsEncodingParametersInURI;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)serializer;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg0;
+ (BOOL)supportsSecureCoding;

- (id)multipartFormRequestWithMethod:(id)arg0 URLString:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(id /* block */)arg3 error:(id *)arg4;
- (void)setMutableHTTPRequestHeaders:(id)arg0;
- (void)setHTTPMethodsEncodingParametersInURI:(id)arg0;
- (void)setMutableObservedChangedKeyPaths:(id)arg0;
- (id)mutableHTTPRequestHeaders;
- (void)setQueryStringSerializationStyle:(unsigned long long)arg0;
- (void)setQueryStringSerialization:(id /* block */)arg0;
- (id)mutableObservedChangedKeyPaths;
- (id)requestBySerializingRequest:(id)arg0 withParameters:(id)arg1 error:(id *)arg2;
- (id)HTTPRequestHeaders;
- (id /* block */)queryStringSerialization;
- (unsigned long long)queryStringSerializationStyle;
- (id)HTTPMethodsEncodingParametersInURI;
- (void)setQueryStringSerializationWithStyle:(unsigned long long)arg0;
- (void)setQueryStringSerializationWithBlock:(id /* block */)arg0;
- (void)setRequestHeaderModificationQueue:(id)arg0;
- (id)requestHeaderModificationQueue;
- (void)setAllowsCellularAccess:(BOOL)arg0;
- (void)setCachePolicy:(unsigned long long)arg0;
- (void)setNetworkServiceType:(unsigned long long)arg0;
- (unsigned long long)cachePolicy;
- (id)requestWithMethod:(id)arg0 URLString:(id)arg1 parameters:(id)arg2 error:(id *)arg3;
- (BOOL)allowsCellularAccess;
- (id)init;
- (void)setTimeoutInterval:(double)arg0;
- (void).cxx_destruct;
- (void)setValue:(id)arg0 forHTTPHeaderField:(id)arg1;
- (id)valueForHTTPHeaderField:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (unsigned long long)networkServiceType;
- (double)timeoutInterval;
- (id)initWithCoder:(id)arg0;
- (void)encodeWithCoder:(id)arg0;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (BOOL)HTTPShouldHandleCookies;
- (void)setHTTPShouldHandleCookies:(BOOL)arg0;
- (BOOL)HTTPShouldUsePipelining;
- (void)setHTTPShouldUsePipelining:(BOOL)arg0;
- (unsigned long long)stringEncoding;
- (void)setStringEncoding:(unsigned long long)arg0;

@end
