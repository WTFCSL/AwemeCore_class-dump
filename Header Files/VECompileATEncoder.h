//
//     Generated by private class-dump
//

@interface VECompileATEncoder : IESMMObject {
    char *_aacBuffer;
    char *_extraData;
    struct AVFrame { char *x0[8]; int x1[8]; char **x2; int x3; int x4; int x5; int x6; int x7; int x8; struct AVRational { int x0; int x1; } x9; long long x10; long long x11; long long x12; int x13; int x14; int x15; void *x16; unsigned long long x17[8]; int x18; int x19; int x20; int x21; long long x22; int x23; unsigned long long x24; struct AVBufferRef *x25[8]; struct AVBufferRef **x26; int x27; struct AVFrameSideData **x28; int x29; int x30; int x31; int x32; int x33; int x34; int x35; long long x36; long long x37; long long x38; struct AVDictionary *x39; int x40; int x41; int x42; char *x43; int x44; int x45; struct AVBufferRef *x46; struct AVBufferRef *x47; struct AVBufferRef *x48; unsigned long long x49; unsigned long long x50; unsigned long long x51; unsigned long long x52; struct AVBufferRef *x53; } *inFrame;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_inBufferList;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_outBufferList;
    struct OpaqueAudioConverter { } *_audioConverter;
    long long _readedPacket;
    unsigned long long _packetNums;
    double _duration;
    double _startTime;
    double _timeOffset;
    BOOL _isPlanar;
    int _channels;
    double _currentTime;
    unsigned long long _status;
    struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _destinationFormat;
    struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _sourceFormat;
}

@property (nonatomic) double duration;
@property (nonatomic) double currentTime;
@property (readonly, nonatomic) struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } destinationFormat;
@property (readonly, nonatomic) struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } sourceFormat;
@property (readonly, nonatomic) unsigned long long status;

- (BOOL)initEncoderWithInFormat;
- (struct AudioClassDescription { unsigned int x0; unsigned int x1; unsigned int x2; } *)getAudioClassDescriptionWithType:(unsigned int)arg0 fromManufacturer:(unsigned int)arg1;
- (unsigned long long)copyPCMSamplesIntoBuffer:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (int)encodeAudioFrame:(struct AVFrame { char *x0[8]; int x1[8]; char **x2; int x3; int x4; int x5; int x6; int x7; int x8; struct AVRational { int x0; int x1; } x9; long long x10; long long x11; long long x12; int x13; int x14; int x15; void *x16; unsigned long long x17[8]; int x18; int x19; int x20; int x21; long long x22; int x23; unsigned long long x24; struct AVBufferRef *x25[8]; struct AVBufferRef **x26; int x27; struct AVFrameSideData **x28; int x29; int x30; int x31; int x32; int x33; int x34; int x35; long long x36; long long x37; long long x38; struct AVDictionary *x39; int x40; int x41; int x42; char *x43; int x44; int x45; struct AVBufferRef *x46; struct AVBufferRef *x47; struct AVBufferRef *x48; unsigned long long x49; unsigned long long x50; unsigned long long x51; unsigned long long x52; struct AVBufferRef *x53; } *)arg0 toAudioBuf:(struct AudioBufferList **)arg1;
- (id)initWithInFormat:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg0 outFormat:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg1;
- (void)setCurrentTime:(double)arg0;
- (unsigned long long)status;
- (double)duration;
- (double)currentTime;
- (void)dealloc;
- (void)setDuration:(double)arg0;
- (BOOL)setExtraData:(struct AVStream { int x0; int x1; struct AVCodecContext *x2; void *x3; struct AVFrac { long long x0; long long x1; long long x2; } x4; struct AVRational { int x0; int x1; } x5; long long x6; long long x7; long long x8; int x9; int x10; struct AVRational { int x0; int x1; } x11; struct AVDictionary *x12; struct AVRational { int x0; int x1; } x13; struct AVPacket { struct AVBufferRef *x0; long long x1; long long x2; char *x3; int x4; int x5; int x6; struct AVPacketSideData *x7; int x8; long long x9; long long x10; long long x11; } x14; struct AVPacketSideData *x15; int x16; int x17; struct AVRational { int x0; int x1; } x18; struct AVCodecParameters *x19; void *x20; int x21; long long x22; long long x23; long long x24; int x25; int x26; int x27; int x28; struct AVCodecParserContext *x29; void *x30; struct AVProbeData { char *x0; char *x1; int x2; char *x3; } x31; long long x32[17]; struct AVIndexEntry *x33; int x34; unsigned int x35; int x36; int x37; int x38; int x39; long long x40; long long x41; long long x42; long long x43; long long x44; int x45; long long x46; long long x47; int x48; int x49; long long x50[17]; unsigned char x51[17]; long long x52; unsigned char x53; unsigned char x54; int x55; char *x56; struct AVRational { int x0; int x1; } x57; struct FFFrac *x58; struct AVStreamInternal *x59; } *)arg0;
- (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })sourceFormat;
- (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })destinationFormat;

@end
