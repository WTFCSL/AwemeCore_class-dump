//
//     Generated by private class-dump
//

@interface AWEMVChannelUtils : NSObject

+ (BOOL)isLiveCard:(id)arg0;
+ (double)shimmerViewHeight;
+ (id)formateDuration:(id)arg0;
+ (long long)strategyInformationType;
+ (BOOL)isFakeLandscapeVideo:(id)arg0;
+ (BOOL)isLandscapeVideo:(id)arg0;
+ (BOOL)isLongVideo:(id)arg0;
+ (void)addToWatchLater:(id)arg0;
+ (BOOL)isPortraitVideo:(id)arg0;
+ (id)inflowRequestModel:(id)arg0 cardType:(unsigned long long)arg1;
+ (BOOL)isPaidLiveScene:(id)arg0;
+ (BOOL)isMixAlbum:(id)arg0;
+ (BOOL)enableForPad;
+ (void)createCardConfigIfNeeded:(id)arg0;
+ (id)countStrForNum:(id)arg0;
+ (id)preHandleColorStr:(id)arg0;
+ (id)countStrForNum:(id)arg0 type:(long long)arg1;
+ (void)setLineSpace:(double)arg0 withText:(id)arg1 inLabel:(id)arg2 iconType:(long long)arg3 config:(id)arg4;
+ (double)smallCardInfoViewHeight:(id)arg0;
+ (double)channelSectionMargin;
+ (double)smallCardVTHeight:(id)arg0;
+ (double)smallCardHZHeight:(id)arg0;
+ (long long)marginForPad;
+ (long long)insetForPad;
+ (double)smallCardHZHeightForPadWithColumn:(long long)arg0;
+ (BOOL)isRplayCard:(id)arg0;
+ (double)smallCardInfoViewOneLineHeight:(id)arg0;
+ (id)attributedStringForSmallCard:(id)arg0;
+ (BOOL)isLiveScene:(id)arg0;
+ (BOOL)isAppointment:(id)arg0;
+ (double)playCardInfoViewOneLineHeight:(id)arg0;
+ (BOOL)isLiveRoom:(id)arg0;
+ (BOOL)isReplay:(id)arg0;
+ (BOOL)isPlaylet:(id)arg0;
+ (void)saveCacheWithList:(id)arg0 isIdlePreloadCache:(BOOL)arg1;
+ (BOOL)isSmallCardLiveScene:(id)arg0;
+ (BOOL)isVSLiveMergePremiere:(id)arg0;
+ (void)setLineSpace:(double)arg0 withText:(id)arg1 inLabel:(id)arg2;
+ (BOOL)isVSLiveMergeLive:(id)arg0;
+ (double)smallCardCoverHZHeight:(id)arg0;
+ (BOOL)isSmallCardReplay:(id)arg0;
+ (id)cardCoverMatchingPlaceholderFromModel:(id)arg0;
+ (BOOL)isNotFinishVideoFromRecommend:(id)arg0;
+ (void)updateUIConfigIfNeeded:(id)arg0 isBigCard:(BOOL)arg1;
+ (BOOL)shouldAddToWatchLater:(id)arg0 model:(id)arg1;
+ (void)handleAfterDismissFeedback:(id)arg0 model:(id)arg1;
+ (void)showDislikeVCWithLocation:(struct CGPoint { double x0; double x1; })arg0 model:(id)arg1 logExtraDict:(id)arg2 cellLogExtra:(id)arg3 senderVC:(id)arg4 feedbackBlock:(id /* block */)arg5 afterDismissFeedbackBlock:(id /* block */)arg6;
+ (void)createLiveCardConfigIfNeeded:(id)arg0;
+ (void)updateLiveCardUIConfigIfNeeded:(id)arg0;
+ (void)configActionBlockForCell:(id)arg0 model:(id)arg1 context:(id)arg2 cardType:(id)arg3;
+ (BOOL)canShowWindowPlay:(id)arg0;
+ (double)smallCardCoverVTHeight:(id)arg0;
+ (double)smallCardCoverVTHeight;
+ (double)smallCardCoverHZHeight;
+ (BOOL)isSmallCardLiveRoom:(id)arg0;
+ (long long)getSmallCardVideoPreloadSize:(id)arg0;
+ (long long)currentColumnCountForPad;
+ (double)smallCardCoverHZHeightForPadWithColumn:(long long)arg0;
+ (double)smallCardCoverHeight:(id)arg0;
+ (id)attributedStringForLineSpace:(double)arg0 withText:(id)arg1 inLabel:(id)arg2 iconType:(long long)arg3 config:(id)arg4;
+ (BOOL)isForceInsert:(id)arg0;
+ (BOOL)hasBigCardUrl:(id)arg0;
+ (BOOL)shouldAddLiveModel:(id)arg0;
+ (BOOL)hasSmallCardUrl:(id)arg0;
+ (BOOL)is16_9RatioVideo:(id)arg0;
+ (BOOL)isLandscapeCover:(id)arg0;
+ (BOOL)isMixVideo:(id)arg0;
+ (id)mixVideoInfoStr:(id)arg0;
+ (id)playletInfoStr:(id)arg0;
+ (double)cardCornerRadius;

@end
