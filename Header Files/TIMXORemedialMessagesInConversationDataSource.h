//
//     Generated by private class-dump
//

@class NSString, TIMXOLoadMessageConversationInfo;
@protocol TIMXMessageModelProtocol;

@interface TIMXORemedialMessagesInConversationDataSource : TIMXOMessagesInConversationDataSource <IESIMSDKMessageInConversationDataSource, TIMXNotifierDelegate> {
    BOOL _forcePullRemoteForFirstPage;
    BOOL _isCompensating;
    BOOL _enableLoadMsgLinkTracker;
    long long _lastReadIndex;
    NSString *_notifierToken;
    NSString *_dbToken;
    id<TIMXMessageModelProtocol> _lastReadMsg;
    TIMXOLoadMessageConversationInfo *_conversationInfo;
}

@property (readonly, nonatomic) NSString *conversationID;
@property (weak, nonatomic) id delegate;
@property (readonly, nonatomic) BOOL hasOlderMessages;
@property (readonly, nonatomic) BOOL hasNewerMessages;
@property (readonly, nonatomic) long long lastReadIndex;
@property (nonatomic) BOOL forcePullRemoteForFirstPage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long lastReadIndex;
@property (copy, nonatomic) NSString *notifierToken;
@property (copy, nonatomic) NSString *dbToken;
@property (retain, nonatomic) id<TIMXMessageModelProtocol> lastReadMsg;
@property BOOL isCompensating;
@property (nonatomic) BOOL enableLoadMsgLinkTracker;
@property (retain, nonatomic) TIMXOLoadMessageConversationInfo *conversationInfo;
@property (nonatomic) BOOL forcePullRemoteForFirstPage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)conversationInfo;
- (void)setConversationInfo:(id)arg0;
- (long long)lastReadIndex;
- (void)setLastReadIndex:(long long)arg0;
- (void)preSetupExtOfMessageList:(id)arg0;
- (BOOL)checkMessagesContinuous:(id)arg0;
- (BOOL)checkMessageValid:(id)arg0;
- (void)cycleLoadMessagesBetweenMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 completionBlock:(id /* block */)arg2;
- (BOOL)forcePullRemoteForFirstPage;
- (void)setForcePullRemoteForFirstPage:(BOOL)arg0;
- (id)initPurelyWithRootObject:(id)arg0 conversationID:(id)arg1 loadFirstFrameDataFirst:(BOOL)arg2 conversation:(id)arg3;
- (BOOL)enableLoadMsgLinkTracker;
- (void)loadOlderMessagesRemedialyIgnoreEmptyRangeWithPriorityUseDB:(BOOL)arg0 conversationId:(id)arg1 targetMessageID:(id)arg2 limit:(long long)arg3 completionBlock:(id /* block */)arg4;
- (void)loadOlderMessagesRemedialyWithPriorityUseDB:(BOOL)arg0 targetMessageID:(id)arg1 replaceOldDataSource:(BOOL)arg2 limit:(long long)arg3 completionBlock:(id /* block */)arg4;
- (void)loadNewerMessagesRemedialyWithTargetMessageID:(id)arg0 completionBlock:(id /* block */)arg1;
- (void)loadOlderMessagesUntilLastReadMessageWithCountPerPage:(long long)arg0 maxLoadCount:(long long)arg1 completion:(id /* block */)arg2;
- (void)loadNewestMessagesWithCompletionBlock:(id /* block */)arg0;
- (void)fetchSpecifiedMessageWithConversationID:(id)arg0 ConversationShortID:(long long)arg1 specifiedMessageListType:(unsigned long long)arg2 offset:(long long)arg3 pageLimit:(unsigned long long)arg4 completionBlock:(id /* block */)arg5;
- (void)fetchMarkMessagesWithConversationID:(id)arg0 offset:(long long)arg1 limit:(unsigned long long)arg2 ascending:(BOOL)arg3 actionType:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (void)onMessagesCreated:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2 context:(id)arg3;
- (void)setEnableLoadMsgLinkTracker:(BOOL)arg0;
- (void)didResetHasMoreStateOfConversation:(id)arg0;
- (void)appendNewMessages:(id)arg0 needFixOrder:(BOOL)arg1 reason:(long long)arg2 context:(id)arg3;
- (void)appendNewMessages:(id)arg0 needFixOrder:(BOOL)arg1 context:(id)arg2;
- (void)setDbToken:(id)arg0;
- (void)setNotifierToken:(id)arg0;
- (id)initPurelyWithRootObject:(id)arg0 conversationID:(id)arg1 loadFirstFrameDataFirst:(BOOL)arg2;
- (id)createMonitorWithEvent:(id)arg0 monitors:(id)arg1;
- (void)handleResultMessages:(id)arg0 conversation:(id)arg1 limit:(long long)arg2 DBHasMore:(BOOL)arg3 compensation:(BOOL)arg4 context:(id)arg5 completionBlock:(id /* block */)arg6;
- (id)duplicateFilterMessages:(id)arg0;
- (BOOL)isCompensating;
- (void)setIsCompensating:(BOOL)arg0;
- (id)intergrityConversationInfoWithIntegrityManager:(id)arg0;
- (void)integrityIfNeededWithAllFilteredMessages:(id)arg0 minIndexV1:(long long)arg1 minIndexV2:(long long)arg2 limit:(long long)arg3 messages:(id)arg4 compensation:(BOOL)arg5 serverHasMore:(BOOL)arg6 conversation:(id)arg7 context:(id)arg8 compensationContext:(id)arg9 currentMessagesFiltered:(id)arg10 completionBlock:(id /* block */)arg11;
- (void)trackCompensationIfNeededWithContext:(id)arg0 compensationContext:(id)arg1 compensation:(BOOL)arg2 currentMessagesFiltered:(id)arg3;
- (id)_n_extractMessagesLogInfoWithMessagesArray:(id)arg0;
- (void)n_notifyNewData:(id)arg0 previousData:(id)arg1 reason:(long long)arg2 context:(id)arg3 completion:(id /* block */)arg4;
- (id)lastReadMsg;
- (void)setLastReadMsg:(id)arg0;
- (id)p_lastReadMessageInfo;
- (void)reconfigLastReadMessageWithMessagesIfNeed:(id)arg0;
- (void)cycleLoadOlderMessagesUntilLastReadMessageInMessageArray:(id)arg0 beforeMessage:(id)arg1 countPerPage:(long long)arg2 maxLoadCount:(long long)arg3 completion:(id /* block */)arg4;
- (id)initPurelyWithRootObject:(id)arg0 conversationID:(id)arg1;
- (void)n_notifyNewData:(id)arg0 previousData:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (BOOL)_sameArrayCompareSortedMessages:(id)arg0 withTargetSortedMessages:(id)arg1;
- (id)notifierToken;
- (id)dbToken;
- (void).cxx_destruct;
- (void)dealloc;

@end
