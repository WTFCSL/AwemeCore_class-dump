//
//     Generated by private class-dump
//

@class NSString, NSArray, IESMMEffectAlgorithmBach, HTSGLFramebuffer, NSMutableDictionary, NSDictionary, IESMMEffectConfig, HTSGLContext;

@interface IESMMEffectAlgorithm : NSObject <IVEEffectAlgorithmProtocol, IESMMEffectChangeFaceProtocol, IESMMEffectSLAMProtocol, IVEGestureProtocol, IVEGestureAmazingEngineProtocol> {
    BOOL _isFrontCamera;
    BOOL _slamWithoutExtraDeviceMotionData;
    BOOL _deviceMotionDetectStarted;
    BOOL _isDiableOrientation;
    BOOL _algorithmReplay;
    int _bufferWidth;
    int _bufferHeight;
    unsigned long long _usedEffect;
    struct __CVBuffer { } *_currentPixelBuffer;
    id /* block */ _algorithmDetectStatus;
    id /* block */ _facePointBlock;
    id /* block */ _faceResultBlock;
    id /* block */ _faceResultDataBlock;
    unsigned long long _autoTestFrameCout;
    long long _setBrightness;
    IESMMEffectAlgorithmBach *_bachManager;
    HTSGLFramebuffer *_refFrameBuffer;
    IESMMEffectConfig *_config;
    void *_renderMangerHandle;
    id /* block */ _slamBlock;
    id /* block */ _gyroscopeBlock;
    unsigned long long _extraAlgorithmRequirements;
    unsigned long long _extraAlgorithmParameters;
    unsigned long long _algorithmResultRequirement;
    unsigned long long _algorithmEffectBachResultRequirement;
    id /* block */ _algorithmResultsCallback;
    NSMutableDictionary *_algorithmResultsDict;
    double _timeStamp;
    long long _forceDetect;
    long long _forceRender;
    long long _forceDraw;
    HTSGLContext *_context;
    NSDictionary *_runtimeParam;
    NSArray *_safeAreas;
    long long _safeAreaType;
    struct CGSize { double width; double height; } _refSize;
}

@property (nonatomic) unsigned long long autoTestFrameCout;
@property (nonatomic) long long setBrightness;
@property (retain, nonatomic) IESMMEffectAlgorithmBach *bachManager;
@property (retain, nonatomic) HTSGLFramebuffer *refFrameBuffer;
@property (nonatomic) struct CGSize { double width; double height; } refSize;
@property (retain, nonatomic) IESMMEffectConfig *config;
@property (nonatomic) BOOL deviceMotionDetectStarted;
@property (nonatomic) void *renderMangerHandle;
@property (copy, nonatomic) id /* block */ slamBlock;
@property (copy, nonatomic) id /* block */ gyroscopeBlock;
@property (nonatomic) unsigned long long extraAlgorithmRequirements;
@property (nonatomic) unsigned long long extraAlgorithmParameters;
@property (nonatomic) unsigned long long algorithmResultRequirement;
@property (nonatomic) unsigned long long algorithmEffectBachResultRequirement;
@property (copy, nonatomic) id /* block */ algorithmResultsCallback;
@property (retain, nonatomic) NSMutableDictionary *algorithmResultsDict;
@property (nonatomic) double timeStamp;
@property (nonatomic) long long forceDetect;
@property (nonatomic) long long forceRender;
@property (nonatomic) long long forceDraw;
@property (nonatomic) BOOL isDiableOrientation;
@property (nonatomic) int bufferWidth;
@property (nonatomic) int bufferHeight;
@property (retain, nonatomic) HTSGLContext *context;
@property (nonatomic) BOOL algorithmReplay;
@property (retain, nonatomic) NSDictionary *runtimeParam;
@property (retain, nonatomic) NSArray *safeAreas;
@property (nonatomic) long long safeAreaType;
@property (nonatomic) unsigned long long usedEffect;
@property (nonatomic) BOOL isFrontCamera;
@property (nonatomic) struct __CVBuffer { } *currentPixelBuffer;
@property (nonatomic) BOOL slamWithoutExtraDeviceMotionData;
@property (copy, nonatomic) id /* block */ algorithmDetectStatus;
@property (copy, nonatomic) id /* block */ facePointBlock;
@property (copy, nonatomic) id /* block */ faceResultBlock;
@property (copy, nonatomic) id /* block */ faceResultDataBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (int)getPixelFormatFromPixelBuffer:(struct __CVBuffer { } *)arg0;

- (BOOL)setScanParam:(id)arg0;
- (BOOL)handleTouchDown:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handleTouchUp:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handlePanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 location:(struct CGPoint { double x0; double x1; })arg1;
- (BOOL)handleLongPressEventWithLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)handleScaleEvent:(double)arg0;
- (BOOL)handleDoubleClickEvent:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)toggleGestureRecognition:(BOOL)arg0 type:(int)arg1;
- (long long)getSLAMStatus;
- (BOOL)isSLAMRunning;
- (BOOL)getSLAMPlaneDetectStatus;
- (BOOL)setHandDetectLowpower:(BOOL)arg0;
- (BOOL)updatFaceDectectIntervalTime:(int)arg0;
- (void)setAlgorithmRuntimeParam:(id)arg0;
- (BOOL)setMattingDetectModel:(BOOL)arg0;
- (void)setAlgorithmRequirement:(unsigned long long)arg0 algorithmParam:(unsigned long long)arg1 enableDetect:(BOOL)arg2;
- (void)setAlgorithmResultsRequirement:(unsigned long long)arg0 callback:(id /* block */)arg1;
- (void)forceDetectBuffer:(long long)arg0;
- (void)addBachAlgorithmName:(id)arg0 config:(id)arg1 algoType:(unsigned long long)arg2;
- (void)removeAllBachAlgorithm;
- (id)getBachAlgorithmResultWithAlgoType:(unsigned long long)arg0;
- (void)setRenderMangerHandle:(void *)arg0;
- (id /* block */)facePointBlock;
- (void *)renderMangerHandle;
- (unsigned long long)usedEffect;
- (void)setAlgorithmResultRequirement:(unsigned long long)arg0;
- (void)setFacePointBlock:(id /* block */)arg0;
- (void)resetFacePointBlock:(id /* block */)arg0;
- (void)updateAlgorithmResultAccordMsg:(unsigned long long)arg0;
- (void)setUsedEffect:(unsigned long long)arg0;
- (void)setIsFrontCamera:(BOOL)arg0;
- (unsigned long long)algorithmResultRequirement;
- (void)forceRenderBuffer:(long long)arg0;
- (void)forceDrawBuffer:(long long)arg0;
- (void)releaseAlgorithm;
- (void)cleanPipelineProcessorTask;
- (int)p_processFrameForAlgorithmWithFrameBuffers:(id)arg0 timeStamp:(double)arg1;
- (void)setAlgorithmPreConfig:(id)arg0;
- (void)setAlgorithmExtraParam:(id)arg0;
- (void)setAlgorithmReplayMmode:(long long)arg0 filePath:(id)arg1;
- (unsigned long long)currentExtraAlgorithmRequirements;
- (void)enableRefFrame:(BOOL)arg0 withFrameBuffer:(id)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (void)detectFramewithBuffer:(struct __CVBuffer { } *)arg0;
- (void)detectFramewithImageData:(const void *)arg0 imageSize:(struct CGSize { double x0; double x1; })arg1;
- (void)resetFaceResultBlock:(id /* block */)arg0;
- (void)resetFaceResultDataBlock:(id /* block */)arg0;
- (void)diableOrientationWhenAlgorithmDetect:(BOOL)arg0;
- (BOOL)setSafeAreas:(id)arg0 type:(long long)arg1;
- (BOOL)updateTouchInfoForRecognition:(struct _VETouchInfo { unsigned int x0; struct CGPoint { double x0; double x1; } x1; float x2; float x3; int x4; long long x5; })arg0;
- (BOOL)isTouchGestureRecognitionEnabled:(int)arg0;
- (void)applyEffectKey:(id)arg0 pixelBuffer:(struct __CVBuffer { } *)arg1;
- (BOOL)slamWithoutExtraDeviceMotionData;
- (void)setSlamWithoutExtraDeviceMotionData:(BOOL)arg0;
- (void)setExternalFaceMakeupOpacity:(id)arg0 maleOpacity:(double)arg1 femaleOpacity:(double)arg2;
- (void)setSafeAreas:(id)arg0;
- (void)setSetBrightness:(long long)arg0;
- (int)bufferWidth;
- (BOOL)deviceMotionDetectStarted;
- (void)setDeviceMotionDetectStarted:(BOOL)arg0;
- (void)p_processFaceResult;
- (void)p_processAlgorithmResultRequirement;
- (id /* block */)algorithmDetectStatus;
- (void)setAlgorithmDetectStatus:(id /* block */)arg0;
- (void)setBufferWidth:(int)arg0;
- (void)setBachManager:(id)arg0;
- (id /* block */)algorithmResultsCallback;
- (void)setAlgorithmResultsDict:(id)arg0;
- (void)p_processExpressionResult;
- (void)p_processHandResult;
- (void)p_processSceneResultRequirement;
- (void)p_processSkeletonResultRequirement;
- (void)p_processFaceAttributesResultRequirement;
- (unsigned long long)algorithmEffectBachResultRequirement;
- (id)algorithmResultsDict;
- (id /* block */)faceResultDataBlock;
- (id /* block */)faceResultBlock;
- (void)p_startDeviceMotionDetect;
- (void)p_stopDeviceMotionDetect;
- (BOOL)isDiableOrientation;
- (id /* block */)slamBlock;
- (void)setSlamBlock:(id /* block */)arg0;
- (id /* block */)gyroscopeBlock;
- (void)setGyroscopeBlock:(id /* block */)arg0;
- (unsigned long long)extraAlgorithmRequirements;
- (void)setExtraAlgorithmRequirements:(unsigned long long)arg0;
- (unsigned long long)extraAlgorithmParameters;
- (void)setExtraAlgorithmParameters:(unsigned long long)arg0;
- (void)p_setAlgorithmInformationToEffect:(id)arg0;
- (long long)forceDetect;
- (long long)forceRender;
- (long long)forceDraw;
- (id)refFrameBuffer;
- (struct CGSize { double x0; double x1; })refSize;
- (id)runtimeParam;
- (void)setForceDetect:(long long)arg0;
- (void)setForceRender:(long long)arg0;
- (void)setForceDraw:(long long)arg0;
- (void)setAutoTestFrameCout:(unsigned long long)arg0;
- (long long)safeAreaType;
- (id)safeAreas;
- (void)setAlgorithmResultsCallback:(id /* block */)arg0;
- (void)setIsDiableOrientation:(BOOL)arg0;
- (void)setFaceResultBlock:(id /* block */)arg0;
- (void)setFaceResultDataBlock:(id /* block */)arg0;
- (void)setRuntimeParam:(id)arg0;
- (id)bachManager;
- (void)setAlgorithmEffectBachResultRequirement:(unsigned long long)arg0;
- (void)p_syncSetAlgorithmRequirement:(unsigned long long)arg0 algorithmParam:(unsigned long long)arg1 enableDetect:(BOOL)arg2;
- (void)setRefFrameBuffer:(id)arg0;
- (void)setRefSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setSafeAreaType:(long long)arg0;
- (void)renderToTextureWithFrameBuffers:(id)arg0 timeStamp:(double)arg1;
- (BOOL)isFaceRequirment;
- (int)bef_effect_set_auxiliary_texture:(id)arg0 textureKey:(const char *)arg1 widht:(unsigned int)arg2 height:(unsigned int)arg3;
- (int)bef_effect_slam_get_auxiliary_texture_keys:(char *)arg0 max_key_length:(int)arg1 max_key_count:(int)arg2 key_count:(int *)arg3;
- (unsigned long long)autoTestFrameCout;
- (BOOL)algorithmReplay;
- (void)setAlgorithmReplay:(BOOL)arg0;
- (id)initWithConfig:(id)arg0 effectHandle:(void *)arg1 context:(id)arg2;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (double)timeStamp;
- (id)config;
- (BOOL)handleTouchEvent:(struct CGPoint { double x0; double x1; })arg0;
- (id)context;
- (void)dealloc;
- (void)setTimeStamp:(double)arg0;
- (int)bufferHeight;
- (void)setBufferHeight:(int)arg0;
- (long long)setBrightness;
- (struct __CVBuffer { } *)currentPixelBuffer;
- (void)setCurrentPixelBuffer:(struct __CVBuffer { } *)arg0;
- (BOOL)handleRotationEvent:(double)arg0;
- (BOOL)isFrontCamera;

@end
