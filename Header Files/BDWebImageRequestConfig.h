//
//     Generated by private class-dump
//

@class BDWebImageCryptoKey, NSString, BDImageCropConfig, BDBaseTransformer, NSDictionary, BDBlurHashConfig;

@interface BDWebImageRequestConfig : NSObject {
    BOOL _isPrefetchOptionsFirst;
    NSString *_requestKey;
    unsigned long long _memoryLimit;
    double _timeoutInterval;
    NSString *_cacheName;
    long long _insulatedCacheType;
    BDBlurHashConfig *_blurHashConfig;
    BDWebImageCryptoKey *_cryptoKey;
    BDImageCropConfig *_cropConfig;
    BDBaseTransformer *_transformer;
    id _userInfo;
    NSString *_bizTag;
    NSString *_sceneTag;
    NSString *_pageTag;
    unsigned long long _randomSamplingPointCount;
    double _transitionDurationPrecisely;
    NSDictionary *_requestHeaders;
    NSDictionary *_customParam;
    NSDictionary *_customParamParsingInfo;
    struct CGSize { double width; double height; } _sizeLimit;
}

@property (copy, nonatomic) NSString *requestKey;
@property (nonatomic) BOOL isPrefetchOptionsFirst;
@property (nonatomic) struct CGSize { double width; double height; } sizeLimit;
@property (nonatomic) unsigned long long memoryLimit;
@property (nonatomic) double timeoutInterval;
@property (copy, nonatomic) NSString *cacheName;
@property (nonatomic) long long insulatedCacheType;
@property (copy, nonatomic) BDBlurHashConfig *blurHashConfig;
@property (retain, nonatomic) BDWebImageCryptoKey *cryptoKey;
@property (retain, nonatomic) BDImageCropConfig *cropConfig;
@property (retain, nonatomic) BDBaseTransformer *transformer;
@property (retain, nonatomic) id userInfo;
@property (copy, nonatomic) NSString *bizTag;
@property (copy, nonatomic) NSString *sceneTag;
@property (copy, nonatomic) NSString *pageTag;
@property (nonatomic) unsigned long long randomSamplingPointCount;
@property (nonatomic) double transitionDurationPrecisely;
@property (copy, nonatomic) NSDictionary *requestHeaders;
@property (copy, nonatomic) NSDictionary *customParam;
@property (copy, nonatomic) NSDictionary *customParamParsingInfo;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) unsigned long long transitionDuration;

+ (void)setDefaultTransitionDuration:(double)arg0;

- (void)setBizTag:(id)arg0;
- (id)bizTag;
- (id)blurHashConfig;
- (unsigned long long)randomSamplingPointCount;
- (id)sceneTag;
- (void)setSceneTag:(id)arg0;
- (void)setPageTag:(id)arg0;
- (id)cropConfig;
- (void)setCropConfig:(id)arg0;
- (long long)insulatedCacheType;
- (void)setInsulatedCacheType:(long long)arg0;
- (id)customParam;
- (void)setCustomParam:(id)arg0;
- (id)customParamParsingInfo;
- (void)setCustomParamParsingInfo:(id)arg0;
- (void)setBlurHashConfig:(id)arg0;
- (void)setRandomSamplingPointCount:(unsigned long long)arg0;
- (void)setTransitionDurationPrecisely:(double)arg0;
- (BOOL)isPrefetchOptionsFirst;
- (void)setIsPrefetchOptionsFirst:(BOOL)arg0;
- (double)transitionDurationPrecisely;
- (id)requestKey;
- (id)init;
- (void)setTimeoutInterval:(double)arg0;
- (unsigned long long)transitionDuration;
- (void).cxx_destruct;
- (id)transformer;
- (void)setUserInfo:(id)arg0;
- (void)setTransformer:(id)arg0;
- (double)timeoutInterval;
- (void)setMemoryLimit:(unsigned long long)arg0;
- (id)userInfo;
- (struct CGSize { double x0; double x1; })size;
- (unsigned long long)memoryLimit;
- (void)setSize:(struct CGSize { double x0; double x1; })arg0;
- (id)cacheName;
- (void)setTransitionDuration:(unsigned long long)arg0;
- (void)setRequestKey:(id)arg0;
- (struct CGSize { double x0; double x1; })sizeLimit;
- (id)cryptoKey;
- (void)setCryptoKey:(id)arg0;
- (id)pageTag;
- (id)requestHeaders;
- (void)setRequestHeaders:(id)arg0;
- (void)setSizeLimit:(struct CGSize { double x0; double x1; })arg0;
- (void)setCacheName:(id)arg0;

@end
