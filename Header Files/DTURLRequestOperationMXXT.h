//
//     Generated by private class-dump
//

@class NSError, NSData, NSString, NSRecursiveLock, NSThread, NSOutputStream, NSSet, NSURLResponse, NSInputStream, NSMutableURLRequest, NSURLConnection;

@interface DTURLRequestOperationMXXT : NSOperation <NSURLConnectionDataDelegate> {
    BOOL _networkActivityIndicatorVisible;
    BOOL _requestBodyGZip;
    int _state;
    NSMutableURLRequest *_request;
    NSURLResponse *_response;
    NSData *_responseData;
    NSString *_responseString;
    NSError *_error;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    NSSet *_runLoopModes;
    long long _totalBytesRead;
    NSRecursiveLock *_lock;
    NSThread *_runningThread;
    NSThread *_createdThread;
    NSURLConnection *_connection;
    id _responseObject;
    NSThread *_subThread;
}

@property (retain, nonatomic) NSURLConnection *connection;
@property (retain, nonatomic) id responseObject;
@property (nonatomic) int state;
@property (weak, nonatomic) NSThread *subThread;
@property (retain, nonatomic) NSMutableURLRequest *request;
@property (retain, nonatomic) NSURLResponse *response;
@property (retain, nonatomic) NSData *responseData;
@property (retain, nonatomic) NSString *responseString;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSInputStream *inputStream;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (retain, nonatomic) NSSet *runLoopModes;
@property (nonatomic) long long totalBytesRead;
@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSThread *runningThread;
@property (retain, nonatomic) NSThread *createdThread;
@property (nonatomic) BOOL networkActivityIndicatorVisible;
@property (nonatomic) BOOL requestBodyGZip;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)stateTransitionIsValid:(int)arg0 toState:(int)arg1 cancelled:(BOOL)arg2;
+ (id)keyPathFromState:(int)arg0;
+ (id)URLRequestThread;
+ (void)URLRequestThreadProc:(id)arg0;
+ (id)defaultOperationQueue;

- (void)setResponseObject:(id)arg0;
- (void)setCreatedThread:(id)arg0;
- (void)setRequestBodyGZip:(BOOL)arg0;
- (id)subThread;
- (void)tmpCancel;
- (id)initWithRequest:(id)arg0 outputStream:(id)arg1;
- (id)runningThread;
- (void)setRunningThread:(id)arg0;
- (id)createdThread;
- (BOOL)requestBodyGZip;
- (void)setSubThread:(id)arg0;
- (BOOL)isFinished;
- (void)setResponseData:(id)arg0;
- (void)connection:(id)arg0 didFailWithError:(id)arg1;
- (id)initWithRequest:(id)arg0;
- (id)init;
- (BOOL)isConcurrent;
- (id)responseData;
- (void).cxx_destruct;
- (BOOL)isExecuting;
- (int)state;
- (void)setResponse:(id)arg0;
- (void)connectionDidFinishLoading:(id)arg0;
- (void)finish;
- (void)startConnection;
- (void)setConnection:(id)arg0;
- (void)setState:(int)arg0;
- (void)commonInit;
- (void)setInputStream:(id)arg0;
- (BOOL)isReady;
- (void)setRequest:(id)arg0;
- (id)response;
- (void)connection:(id)arg0 didReceiveResponse:(id)arg1;
- (void)setOutputStream:(id)arg0;
- (id)request;
- (void)connection:(id)arg0 didReceiveData:(id)arg1;
- (id)outputStream;
- (id)lock;
- (void)cancel;
- (id)connection;
- (void)setError:(id)arg0;
- (id)inputStream;
- (void)start;
- (void)dealloc;
- (void)setLock:(id)arg0;
- (id)error;
- (void)setRunLoopModes:(id)arg0;
- (id)runLoopModes;
- (void)setTotalBytesRead:(long long)arg0;
- (void)setNetworkActivityIndicatorVisible:(BOOL)arg0;
- (BOOL)networkActivityIndicatorVisible;
- (void)didFinish;
- (void)didStart;
- (void)cancelConnection;
- (id)responseString;
- (long long)totalBytesRead;
- (void)setResponseString:(id)arg0;
- (id)responseObject;

@end
