//
//     Generated by private class-dump
//

@class NSURL;

@interface IESMMGIFConverterData : NSObject <NSCopying> {
    NSURL *_srcVideoURL;
    long long _frameRate;
    double _frameDuration;
    struct CGSize { double width; double height; } _outputSize;
    struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } _timeRange;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _transform;
}

@property (retain, nonatomic) NSURL *srcVideoURL;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } timeRange;
@property (nonatomic) long long frameRate;
@property (nonatomic) double frameDuration;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transform;

- (id)srcVideoURL;
- (void)setSrcVideoURL:(id)arg0;
- (void)setTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (struct CGSize { double x0; double x1; })outputSize;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRange;
- (void)setFrameRate:(long long)arg0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (long long)frameRate;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (double)frameDuration;
- (void)setFrameDuration:(double)arg0;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;

@end
