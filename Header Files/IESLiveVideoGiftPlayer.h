//
//     Generated by private class-dump
//

@class NSMutableDictionary, UILabel, NSDictionary, IESLiveCountTimer, IESLiveGiftPlayerPerfSampler, IESLiveAlphaVideoPlayerButtonView, HTSLiveEffectPlayerStringPiece, UIView, IESLiveVideoGiftController, IESLiveEffectPlayerView, NSString, HTSEventContext, IESLiveMultiVideoGiftController, IESLiveRebornGiftAnimationNode, IESLiveGiftAnimationSuperResolutionConfig;
@protocol IESLiveGiftPlayerDelegate, IESLivePerfSamplerAdapter, IESLiveGiftFullLinkMonitor, IESLiveRoomRealStreamingServiceAdapter, IESLiveHierarchyContainerView, IESLiveRoomServiceAdapter;

@interface IESLiveVideoGiftPlayer : NSObject <IESLiveVideoGiftControllerDelegate, HTSLiveAnimationEngineProvider, HTSLiveAnimationEngine, IESLiveMultiVideoGiftControllerDelegate> {
    BOOL _isAnchor;
    BOOL _needUpdateLayoutTag;
    BOOL _hasMannualOpenAEC;
    BOOL _is3DPlayer;
    BOOL _isInteract3DPlayer;
    BOOL _giftSoundVolumeDynamicAdjust;
    BOOL _liveGiftEnableAudioOptimise;
    BOOL _liveGiftEnableOutAuxStreamAudioFile;
    BOOL _liveAudioGiftDisableAec;
    BOOL _couldAutoRelease;
    BOOL _bpeaAudioCertEnable;
    BOOL _videoGiftStackOverFlowFix;
    id<IESLiveGiftPlayerDelegate> _delegate;
    id<IESLiveRoomServiceAdapter> _room;
    HTSEventContext *_trackContext;
    IESLiveVideoGiftController *_giftController;
    IESLiveMultiVideoGiftController *_multiVideoGiftController;
    unsigned long long _currentLayoutStyle;
    UIView *_videoGiftContainerView;
    UIView<IESLiveHierarchyContainerView> *_containerView;
    IESLiveEffectPlayerView *_effectPlayerView;
    id<IESLivePerfSamplerAdapter> _perfSampler;
    IESLiveGiftPlayerPerfSampler *_playerPerfSampler;
    UILabel *_videoDebugInfoLabel;
    IESLiveRebornGiftAnimationNode *_node;
    HTSLiveEffectPlayerStringPiece *_stringPiece;
    id<IESLiveRoomRealStreamingServiceAdapter> _realStreamingService;
    IESLiveAlphaVideoPlayerButtonView *_buttonView;
    NSMutableDictionary *_deleteFrequencyMap;
    IESLiveGiftAnimationSuperResolutionConfig *_superResolutionConfig;
    NSDictionary *_soundGiftVolumeConfigs;
    double _liveAudioGiftAECDelayTime;
    long long _liveAudioGiftAECRetryTime;
    unsigned long long _superResolutionTriggerType;
    id<IESLiveGiftFullLinkMonitor> _giftFullLinkMonitor;
    IESLiveCountTimer *_videoGiftPlayerReleaseTimer;
    NSString *_bpeaAudioCertToken;
}

@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveVideoGiftController *giftController;
@property (retain, nonatomic) IESLiveMultiVideoGiftController *multiVideoGiftController;
@property (nonatomic) unsigned long long currentLayoutStyle;
@property (retain, nonatomic) UIView *videoGiftContainerView;
@property (weak, nonatomic) UIView<IESLiveHierarchyContainerView> *containerView;
@property (retain, nonatomic) IESLiveEffectPlayerView *effectPlayerView;
@property (nonatomic) BOOL isAnchor;
@property (weak, nonatomic) id<IESLivePerfSamplerAdapter> perfSampler;
@property (retain, nonatomic) IESLiveGiftPlayerPerfSampler *playerPerfSampler;
@property (retain, nonatomic) UILabel *videoDebugInfoLabel;
@property (retain, nonatomic) IESLiveRebornGiftAnimationNode *node;
@property (retain, nonatomic) HTSLiveEffectPlayerStringPiece *stringPiece;
@property (nonatomic) BOOL needUpdateLayoutTag;
@property (retain, nonatomic) id<IESLiveRoomRealStreamingServiceAdapter> realStreamingService;
@property (nonatomic) BOOL hasMannualOpenAEC;
@property (retain, nonatomic) IESLiveAlphaVideoPlayerButtonView *buttonView;
@property (nonatomic) BOOL is3DPlayer;
@property (nonatomic) BOOL isInteract3DPlayer;
@property (retain, nonatomic) NSMutableDictionary *deleteFrequencyMap;
@property (retain, nonatomic) IESLiveGiftAnimationSuperResolutionConfig *superResolutionConfig;
@property (copy, nonatomic) NSDictionary *soundGiftVolumeConfigs;
@property (nonatomic) BOOL giftSoundVolumeDynamicAdjust;
@property (nonatomic) BOOL liveGiftEnableAudioOptimise;
@property (nonatomic) BOOL liveGiftEnableOutAuxStreamAudioFile;
@property (nonatomic) BOOL liveAudioGiftDisableAec;
@property (nonatomic) double liveAudioGiftAECDelayTime;
@property (nonatomic) long long liveAudioGiftAECRetryTime;
@property (nonatomic) unsigned long long superResolutionTriggerType;
@property (retain, nonatomic) id<IESLiveGiftFullLinkMonitor> giftFullLinkMonitor;
@property (nonatomic) BOOL couldAutoRelease;
@property (retain, nonatomic) IESLiveCountTimer *videoGiftPlayerReleaseTimer;
@property (nonatomic) BOOL bpeaAudioCertEnable;
@property (copy, nonatomic) NSString *bpeaAudioCertToken;
@property (nonatomic) BOOL videoGiftStackOverFlowFix;
@property (weak, nonatomic) id<IESLiveGiftPlayerDelegate> delegate;
@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> room;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (void)didFinishPlayingWithError:(id)arg0;
- (void)frameCallBack:(double)arg0;
- (void)videoGiftController:(id)arg0 playingWithNonFatalError:(id)arg1;
- (void)videoGiftController:(id)arg0 willPlayFrame:(id)arg1;
- (void)videoGiftController:(id)arg0 didFrameCommandBufferCommitted:(id)arg1 error:(id)arg2;
- (void)videoGiftController:(id)arg0 sceneError:(id)arg1 scene:(unsigned long long)arg2;
- (void)successParseConfigResourceModel:(id)arg0;
- (BOOL)videoControllerShouldDelayPlayIfAudioResouces:(id)arg0;
- (void)videoGiftController:(id)arg0 didSetMetalViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (float)audioPlayVolume;
- (id)videoGiftController:(id)arg0 externalAudioPlayer:(id)arg1 resource:(id)arg2 error:(id *)arg3;
- (void)setIsAnchor:(BOOL)arg0;
- (void)didSetAttachingDIContext;
- (void)multiVideoGiftController:(id)arg0 successParseConfigResourceModel:(id)arg1;
- (void)multiVideoGiftController:(id)arg0 player:(id)arg1 playingWithNonFatalError:(id)arg2;
- (void)multiVideoGiftController:(id)arg0 player:(id)arg1 willPlayFrame:(id)arg2;
- (void)multiVideoGiftController:(id)arg0 player:(id)arg1 didFrameCommandBufferCommitted:(id)arg2 error:(id)arg3;
- (void)multiVideoGiftController:(id)arg0 player:(id)arg1 sceneError:(id)arg2 scene:(unsigned long long)arg3;
- (BOOL)multiVideoGiftController:(id)arg0 videoControllerShouldDelayPlayIfAudioResouces:(id)arg1;
- (void)multiVideoGiftController:(id)arg0 viewDidLoadOnPlayer:(id)arg1;
- (float)multiVideoAudioPlayVolume;
- (id)multiVideoGiftController:(id)arg0 externalAudioPlayer:(id)arg1 resource:(id)arg2 error:(id *)arg3;
- (void)multiVideoGiftController:(id)arg0 didFinishPlayingWithForegroundError:(id)arg1 backgroundError:(id)arg2;
- (BOOL)bpeaAudioCertEnable;
- (id)bpeaAudioCertToken;
- (void)setBpeaAudioCertEnable:(BOOL)arg0;
- (void)setBpeaAudioCertToken:(id)arg0;
- (void)setGiftController:(id)arg0;
- (id)giftController;
- (id)perfSampler;
- (void)setPerfSampler:(id)arg0;
- (void)updateLayoutStyle:(unsigned long long)arg0;
- (id)getResourceModel;
- (id)realStreamingService;
- (BOOL)isHeadsetPluggedIn;
- (void)setRealStreamingService:(id)arg0;
- (id)initWithTrackContext:(id)arg0;
- (void)setCurrentLayoutStyle:(unsigned long long)arg0;
- (void)updateVideoLayout;
- (void)addPadModeMaskLayerWithSize:(struct CGSize { double x0; double x1; })arg0 rate:(double)arg1;
- (void)closePlayer;
- (BOOL)enableVibrate;
- (void)setEnableVibrate:(BOOL)arg0;
- (void)setGiftSoundVolumeDynamicAdjust:(BOOL)arg0;
- (void)setEnableSound:(BOOL)arg0;
- (void)setLiveAudioGiftDisableAec:(BOOL)arg0;
- (void)setLiveAudioGiftAECDelayTime:(double)arg0;
- (void)setLiveAudioGiftAECRetryTime:(long long)arg0;
- (BOOL)enableSound;
- (void)didClickVibrateButton;
- (void)loadButtonView:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 withAction:(SEL)arg2;
- (BOOL)vibrateButtonDidShow;
- (void)setVibrateButtonDidShow:(BOOL)arg0;
- (void)updateVibrateButton:(id)arg0 completion:(id /* block */)arg1;
- (void)didClickSoundButton;
- (BOOL)soundButtonDidShow;
- (void)setSoundButtonDidShow:(BOOL)arg0;
- (void)updateSoundButton:(id)arg0 completion:(id /* block */)arg1;
- (void)didClickVibrateAndSoundButton;
- (void)updateVibrateAndSoundButton:(id)arg0 completion:(id /* block */)arg1;
- (void)destroyButtonView;
- (BOOL)hasMannualOpenAEC;
- (void)closeEchoCancellation;
- (void)showVibrateAndSoundButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)showSoundButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)showVibrateButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)execActionSafely:(id /* block */)arg0;
- (BOOL)shouldDelayPlayIfAudioResouces:(id)arg0;
- (BOOL)liveAudioGiftDisableAec;
- (void)openEchoCancellation;
- (double)liveAudioGiftAECDelayTime;
- (long long)liveAudioGiftAECRetryTime;
- (id)stringPiece;
- (BOOL)giftSoundVolumeDynamicAdjust;
- (float)_getAudioPlayVolumeFromPlayerStreamSound;
- (id)soundGiftVolumeConfigs;
- (void)setSoundGiftVolumeConfigs:(id)arg0;
- (void)setHasMannualOpenAEC:(BOOL)arg0;
- (void)setStringPiece:(id)arg0;
- (id)giftFullLinkMonitor;
- (void)setGiftFullLinkMonitor:(id)arg0;
- (unsigned long long)superResolutionTriggerType;
- (void)setSuperResolutionTriggerType:(unsigned long long)arg0;
- (BOOL)isPlayingCurrentUserEffect;
- (void)transferToIdleState;
- (void)startPlayingVideoWith:(id)arg0;
- (void)removeGiftUserInfoView;
- (void)cancelVideoGiftReleaseTimer;
- (id)deleteFrequencyMap;
- (void)setNeedUpdateLayoutTag:(BOOL)arg0;
- (void)setLiveGiftEnableAudioOptimise:(BOOL)arg0;
- (void)setLiveGiftEnableOutAuxStreamAudioFile:(BOOL)arg0;
- (void)setDeleteFrequencyMap:(id)arg0;
- (void)setPlayerPerfSampler:(id)arg0;
- (id)playerPerfSampler;
- (void)setSuperResolutionConfig:(id)arg0;
- (id)superResolutionConfig;
- (void)setVideoGiftStackOverFlowFix:(BOOL)arg0;
- (id)animationEngine;
- (void)startPlayingOnEffectPlayerWith:(id)arg0;
- (void)startPlayingOnGiftPlayerWith:(id)arg0;
- (BOOL)couldAutoRelease;
- (void)removeEffectPlayer;
- (void)setEffectPlayerView:(id)arg0;
- (id)effectPlayerView;
- (void)showVideoGiftDebugInfo;
- (void)setCouldAutoRelease:(BOOL)arg0;
- (BOOL)needUpdateLayoutTag;
- (id)videoGiftContainerView;
- (void)setVideoGiftContainerView:(id)arg0;
- (void)updateGiftController;
- (void)p_logSuperResolutionInfoWithAnimationNode:(id)arg0;
- (BOOL)liveGiftEnableAudioOptimise;
- (BOOL)liveGiftEnableOutAuxStreamAudioFile;
- (id)p_mp4ConfigInfoWithMetalConfiguration:(id)arg0;
- (BOOL)is3DPlayer;
- (void)setIs3DPlayer:(BOOL)arg0;
- (id)multiVideoGiftController;
- (void)setIsInteract3DPlayer:(BOOL)arg0;
- (void)playFlyMicGiftWithEffectMaker:(id /* block */)arg0 startMP4Block:(id /* block */)arg1;
- (void)showGiftStringPiece:(id)arg0 videoRatio:(double)arg1 needCircle:(BOOL)arg2;
- (void)closeVideoGiftDebugInfo;
- (void)autoReleaseStopEngine;
- (void)monitorEffectAnimationWithNode:(id)arg0 error:(id)arg1;
- (void)didfinishPlayingWithAllError:(id)arg0 foregroundError:(id)arg1 backgroundError:(id)arg2;
- (id)monitorParamsWithNode:(id)arg0;
- (void)trackSuperResolutionEventWithResourceModel:(id)arg0;
- (void)playFlyMicGift:(id /* block */)arg0;
- (void)asyncPlayWithCheckAECState:(long long)arg0 queue:(id)arg1;
- (void)monitorFirstFrameRenderWithError:(id)arg0 isMultiVideo:(BOOL)arg1;
- (BOOL)isInteract3DPlayer;
- (void)stopVideoGift;
- (id)videoDebugInfoLabel;
- (void)setVideoDebugInfoLabel:(id)arg0;
- (void)trackForButtonShow:(id)arg0;
- (void)resetVideoGiftPlayerReleaseTimerWithSource:(id)arg0;
- (void)deleteResourceIfNeededWithError:(id)arg0 node:(id)arg1;
- (BOOL)videoGiftStackOverFlowFix;
- (void)trackForButtonClick:(BOOL)arg0 withShowType:(id)arg1;
- (id)videoGiftPlayerReleaseTimer;
- (void)setVideoGiftPlayerReleaseTimer:(id)arg0;
- (void)autoReleaseClosePlayer;
- (void)setMultiVideoGiftController:(id)arg0;
- (id)node;
- (id)buttonView;
- (BOOL)isRunning;
- (void).cxx_destruct;
- (BOOL)isAnchor;
- (void)setContainerView:(id)arg0;
- (id)delegate;
- (id)containerView;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setButtonView:(id)arg0;
- (void)setNode:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (unsigned long long)currentLayoutStyle;
- (void)startEngine;
- (void)stopEngine;

@end
