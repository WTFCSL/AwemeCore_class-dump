//
//     Generated by private class-dump
//

@class TIMXMessageChecker, NSString, NSArray, NSMutableDictionary, NSDictionary, TIMXRange, NSObject, NSMutableArray, TIMXSDKInstance, NSCache;
@protocol TIMXOMessagesDataSourceDelegate, OS_dispatch_semaphore, TIMXMessageStoreProtocol, OS_dispatch_queue;

@interface TIMXOMessagesInConversationDataSource : NSObject <TIMXMessageStoreChangesObserver> {
    BOOL _hasOlderMessages;
    BOOL _hasNewerMessages;
    BOOL _autoInsertNewMessages;
    BOOL _loadOlderDoNotNeedNetwork;
    BOOL _enableLoadingMessageSwitchingThreadOptimization;
    BOOL _loadFirstFrameDataFirst;
    BOOL _shouldDelayTask;
    BOOL _enableLoadFirstFrameDataFirstOptimization;
    BOOL _enableFirstFrameQueryConversationOptimization;
    NSArray *_currentMessagesFiltered;
    NSString *_conversationID;
    id<TIMXOMessagesDataSourceDelegate> _delegate;
    NSString *_lastHasReadMessageIdentifier;
    NSCache *_referMessageCache;
    NSMutableArray *_delayTasks;
    NSObject<OS_dispatch_semaphore> *_delayTasksLock;
    TIMXSDKInstance *_r;
    NSArray *_currentMessagesAll;
    NSDictionary *_currentMessagesDict;
    NSMutableDictionary *_updatedModels;
    id<TIMXMessageStoreProtocol> _db;
    id /* block */ _shouldIncludeMessageFilter;
    unsigned long long _messageCountPerPage;
    NSArray *_skipRanges;
    TIMXRange *_displayRange;
    TIMXMessageChecker *_checker;
    long long _currentMaxIndexV2;
    long long _currentMinIndexV2;
    NSObject<OS_dispatch_semaphore> *_lock;
    NSObject<OS_dispatch_queue> *_processQueue;
}

@property (retain, nonatomic) NSCache *referMessageCache;
@property (retain, nonatomic) NSMutableArray *delayTasks;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *delayTasksLock;
@property (retain, nonatomic) NSString *conversationID;
@property (retain, nonatomic) NSArray *currentMessagesAll;
@property (retain, nonatomic) NSArray *currentMessagesFiltered;
@property (retain, nonatomic) NSDictionary *currentMessagesDict;
@property (retain, nonatomic) NSMutableDictionary *updatedModels;
@property (retain, nonatomic) id<TIMXMessageStoreProtocol> db;
@property (nonatomic) BOOL hasOlderMessages;
@property (nonatomic) BOOL hasNewerMessages;
@property (retain, nonatomic) NSString *lastHasReadMessageIdentifier;
@property (nonatomic) BOOL autoInsertNewMessages;
@property (nonatomic) BOOL loadOlderDoNotNeedNetwork;
@property (copy, nonatomic) id /* block */ shouldIncludeMessageFilter;
@property (nonatomic) unsigned long long messageCountPerPage;
@property (retain) NSArray *skipRanges;
@property (retain, nonatomic) TIMXRange *displayRange;
@property (retain, nonatomic) TIMXMessageChecker *checker;
@property (nonatomic) long long currentMaxIndexV2;
@property (nonatomic) long long currentMinIndexV2;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *lock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *processQueue;
@property (nonatomic) BOOL enableLoadingMessageSwitchingThreadOptimization;
@property (nonatomic) BOOL loadFirstFrameDataFirst;
@property (nonatomic) BOOL shouldDelayTask;
@property (nonatomic) BOOL enableLoadFirstFrameDataFirstOptimization;
@property (nonatomic) BOOL enableFirstFrameQueryConversationOptimization;
@property (weak, nonatomic) id<TIMXOMessagesDataSourceDelegate> delegate;
@property (readonly, copy, nonatomic) NSArray *currentMessageBriefs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setChecker:(id)arg0;
- (void)setProcessQueue:(id)arg0;
- (void)loadOlderMessagesWithCompletionBlock:(id /* block */)arg0;
- (BOOL)hasOlderMessages;
- (unsigned long long)messageCountPerPage;
- (void)setMessageCountPerPage:(unsigned long long)arg0;
- (id)initWithRootObject:(id)arg0 conversationID:(id)arg1 fromTopMessage:(id)arg2 options:(id)arg3 delegate:(id)arg4;
- (id)currentMessageBriefs;
- (id)currentMessagesFiltered;
- (void)onConversationCheckMessageEnd:(id)arg0 messageIdentifiers:(id)arg1;
- (long long)getCurrentTimeInterval;
- (void)onMessagesCreated:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2;
- (void)onConversationsDeleted:(id)arg0;
- (void)onConversationCleared:(id)arg0;
- (id /* block */)shouldIncludeMessageFilter;
- (void)setShouldIncludeMessageFilter:(id /* block */)arg0;
- (void)setUpdatedModels:(id)arg0;
- (void)setLoadOlderDoNotNeedNetwork:(BOOL)arg0;
- (void)setCurrentMessagesAll:(id)arg0;
- (id)filteredMessagesOfMessages:(id)arg0 reason:(long long)arg1;
- (void)setCurrentMessagesFiltered:(id)arg0;
- (void)setHasNewerMessages:(BOOL)arg0;
- (void)setAutoInsertNewMessages:(BOOL)arg0;
- (BOOL)loadOlderDoNotNeedNetwork;
- (void)setHasOlderMessages:(BOOL)arg0;
- (void)setLastHasReadMessageIdentifier:(id)arg0;
- (void)calcAndLogWrongOrder;
- (id)currentMessagesDict;
- (id)currentMessagesAll;
- (id)extractMessagesLogInfoWithMessagesArray:(id)arg0;
- (long long)currentMaxIndexV2;
- (void)setCurrentMaxIndexV2:(long long)arg0;
- (id)updatedModels;
- (BOOL)hasNewerMessages;
- (void)setCurrentMessagesDict:(id)arg0;
- (id)itemForMessageId:(id)arg0;
- (void)filterOutMessagesWithIdentifiers:(id)arg0;
- (id)lastHasReadMessageIdentifier;
- (BOOL)autoInsertNewMessages;
- (long long)currentMinIndexV2;
- (void)setCurrentMinIndexV2:(long long)arg0;
- (void)loadNewestMessagesWithCompletionBlock:(id /* block */)arg0;
- (void)loadMessageDetailWithServerMessageID:(long long)arg0 conversationShortId:(long long)arg1 conversationId:(id)arg2 conversationType:(int)arg3 completion:(id /* block */)arg4;
- (void)onMessagesUpdated:(id)arg0 belongingConversationMap:(id)arg1 updateReasonMap:(id)arg2;
- (void)onMessagesDeleted:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2 context:(id)arg3;
- (BOOL)enableLoadingMessageSwitchingThreadOptimization;
- (void)setEnableLoadingMessageSwitchingThreadOptimization:(BOOL)arg0;
- (id)delayTasks;
- (void)setDelayTasks:(id)arg0;
- (BOOL)enableLoadFirstFrameDataFirstOptimization;
- (void)setEnableLoadFirstFrameDataFirstOptimization:(BOOL)arg0;
- (BOOL)enableFirstFrameQueryConversationOptimization;
- (void)setEnableFirstFrameQueryConversationOptimization:(BOOL)arg0;
- (id)initWithRootObject:(id)arg0 initialLocationFirstUnreadMessageForConversationId:(id)arg1 unreadMentioned:(BOOL)arg2 offset:(unsigned long long)arg3 options:(id)arg4 delegate:(id)arg5;
- (void)applyNewResult:(id)arg0 reason:(long long)arg1 context:(id)arg2;
- (void)setReferMessageCache:(id)arg0;
- (id)referMessageCache;
- (id)skipRanges;
- (void)_handleNewerMessages:(id)arg0 completionBlock:(id /* block */)arg1;
- (void)jumpToNewestMessagesPageWithCompletionBlock:(id /* block */)arg0;
- (void)applyNewResult:(id)arg0 reason:(long long)arg1 context:(id)arg2 completion:(id /* block */)arg3;
- (void)deleteWithIdentifiers:(id)arg0 reason:(long long)arg1 context:(id)arg2;
- (void)setSkipRanges:(id)arg0;
- (id)getUpdatedMessagesWithOriginMessages:(id)arg0 needUpdatedMessages:(id)arg1 updatedModels:(id)arg2;
- (id)delayTasksLock;
- (BOOL)shouldDelayTask;
- (void)excuteDelayedTasksCore;
- (void)setShouldDelayTask:(BOOL)arg0;
- (void)dispatch_async:(id)arg0 block:(id /* block */)arg1;
- (id)initWithRootObject:(id)arg0 initialLocationForConversationID:(id)arg1 messageID:(id)arg2 offset:(unsigned long long)arg3 options:(id)arg4 delegate:(id)arg5;
- (id)initWithRootObject:(id)arg0 initialLocationFirstUnreadMessageToLatestMessageForConversationID:(id)arg1 offset:(unsigned long long)arg2 messageID:(id)arg3 options:(id)arg4 delegate:(id)arg5;
- (void)loadNewerMessagesWithCompletionBlock:(id /* block */)arg0;
- (void)jumpToNewestMessagesPage;
- (void)updateSkipRangeList:(id)arg0;
- (void)excuteDelayedTasks;
- (void)setDelayTasksLock:(id)arg0;
- (BOOL)loadFirstFrameDataFirst;
- (void)setLoadFirstFrameDataFirst:(BOOL)arg0;
- (id)itemAtIndex:(unsigned long long)arg0;
- (unsigned long long)numberOfItems;
- (void)setDb:(id)arg0;
- (id)db;
- (void).cxx_destruct;
- (id)conversationID;
- (id)delegate;
- (id)lock;
- (void)setDelegate:(id)arg0;
- (void)setLock:(id)arg0;
- (void)setConversationID:(id)arg0;
- (void)setDisplayRange:(id)arg0;
- (id)displayRange;
- (id)initWithRootObject:(id)arg0;
- (id)checker;
- (void)commonSetup;
- (id)processQueue;

@end
