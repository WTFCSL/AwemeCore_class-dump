//
//     Generated by private class-dump
//

@class BDPDynamicPluginConfigLoader, NSString, BDPUniqueID, NSMutableDictionary, BDPDynamicPluginLoader, BDPPromise, BDPSchema, BDPBootManager;

@interface BDPDynamicPluginLoadInstance : NSObject <BDPFileHandleForSubpkgProtocol, BDPDynamicPluginLoadMessage> {
    BDPDynamicPluginLoader *_coldBootPluginLoader;
    BDPSchema *_schema;
    BDPUniqueID *_uniqueID;
    BDPPromise *_pluginConfigLoadPromise;
    BDPDynamicPluginConfigLoader *_configLoader;
    BDPBootManager *_bootManager;
    NSMutableDictionary *_dynamicPlugins;
}

@property (retain, nonatomic) BDPSchema *schema;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) BDPPromise *pluginConfigLoadPromise;
@property (retain, nonatomic) BDPDynamicPluginConfigLoader *configLoader;
@property (weak, nonatomic) BDPBootManager *bootManager;
@property (retain, nonatomic) NSMutableDictionary *dynamicPlugins;
@property (retain, nonatomic) BDPDynamicPluginLoader *coldBootPluginLoader;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)wrapRuntimeServiceLoaderForceForUniqueID:(id)arg0;
+ (id)getDynamicPluginLoaderForName:(id)arg0;
+ (id)instanceWithBootManager:(id)arg0 schema:(id)arg1;
+ (void)wrapRuntimeServiceLoaderForUniqueID:(id)arg0;

- (id)bootManager;
- (void)setBootManager:(id)arg0;
- (void)readDataFromMemoryPkgsWithPath:(id)arg0 completion:(id /* block */)arg1;
- (id)configLoader;
- (void)setConfigLoader:(id)arg0;
- (void)getPuginConfigWithPluginId:(id)arg0 completion:(id /* block */)arg1;
- (void)loadFile:(id)arg0 fromUniqueID:(id)arg1 pluginID:(id)arg2 readMode:(long long)arg3 dispatchQueue:(id)arg4 completion:(id /* block */)arg5;
- (id)dynamicPluginLoaderForName:(id)arg0;
- (id)getLoadedConfigWithPluginID:(id)arg0;
- (id)dynamicPlugins;
- (void)setColdBootPluginLoader:(id)arg0;
- (id)pluginConfigLoadPromise;
- (id)coldBootPluginLoader;
- (void)mergeDynamicPluginLoaders:(id)arg0;
- (void)setDynamicPlugins:(id)arg0;
- (void)startLoadPluginWithPluginID:(id)arg0;
- (void)updateAppConfigData:(id)arg0;
- (id)dynamicPluginLaunchParams;
- (id)dynamicPluginParams;
- (id)secondDynamicPluginParamsWithPluginId:(id)arg0;
- (void)loadPuginConfigWithPluginId:(id)arg0 completion:(id /* block */)arg1;
- (void)setPluginConfigLoadPromise:(id)arg0;
- (void)setSchema:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (void)dealloc;
- (id)schema;

@end
