//
//     Generated by private class-dump
//

@class NSArray, HMDHTTPTrackerConfig, NSMutableSet, NSString;
@protocol HMDPerformanceReporterDataSource;

@interface HMDHTTPRequestTracker : HMDTracker <HMDPerformanceReporterDataSource> {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _allowListOpRWLock;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _callbackRWLock;
    BOOL _ignoreCancelError;
    BOOL _recordResponseBodyEnabled;
    BOOL _enableNSURLProtocolAndChromium;
    BOOL _enableWebViewMonitor;
    BOOL _isNewAllowedCheck;
    NSArray<HMDPerformanceReporterDataSource> *_uploaders;
    long long _responseBodyThreshold;
    double _lastUploadAllTime;
    NSMutableSet *_visitorSet;
    NSMutableSet *_trackerCallbacks;
}

@property (retain, nonatomic) NSArray<HMDPerformanceReporterDataSource> *uploaders;
@property (nonatomic) BOOL ignoreCancelError;
@property (nonatomic) BOOL recordResponseBodyEnabled;
@property (nonatomic) BOOL enableNSURLProtocolAndChromium;
@property (nonatomic) BOOL enableWebViewMonitor;
@property (nonatomic) long long responseBodyThreshold;
@property double lastUploadAllTime;
@property (retain, nonatomic) NSMutableSet *visitorSet;
@property (nonatomic) BOOL isNewAllowedCheck;
@property (retain, nonatomic) NSMutableSet *trackerCallbacks;
@property (readonly, nonatomic) HMDHTTPTrackerConfig *trackerConfig;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedTracker;

- (void)updateConfig:(id)arg0;
- (BOOL)needSyncStart;
- (BOOL)performanceDataSource;
- (void)updateRecordWithConfig:(id)arg0;
- (void)flushRecord:(id)arg0 async:(BOOL)arg1 trackerBlock:(id /* block */)arg2;
- (long long)dbMaxSize;
- (void)didCollectOneRecord:(id)arg0;
- (void)prepareForDefaultStart;
- (id)trackerConfig;
- (id)recordsFilteredByConditions:(id)arg0;
- (void)dropAllDataForServerState;
- (unsigned long long)reporterPriority;
- (unsigned long long)properLimitCount;
- (id)performanceDataWithCountLimit:(long long)arg0;
- (id)debugRealPerformanceDataWithConfig:(id)arg0;
- (void)cleanupPerformanceDataWithConfig:(id)arg0;
- (void)performanceDataDidReportSuccess:(BOOL)arg0;
- (id)performanceSDKDataWitLimitCount:(long long)arg0 sdkAid:(id)arg1;
- (id)performanceDataWithLimitSize:(unsigned long long)arg0 limitCount:(long long)arg1 currentSize:(unsigned long long *)arg2;
- (void)performanceSizeLimitedDataDidReportSuccess:(BOOL)arg0;
- (double)properLimitSizeWeight;
- (void)dropAllDataForServerStateWithAid:(id)arg0;
- (void)updateHMDURLProtocolConfig:(id)arg0;
- (BOOL)checkIfURLInBlockList:(id)arg0;
- (BOOL)checkIfRequestCanceled:(id)arg0 withError:(id)arg1 andNetType:(id)arg2;
- (BOOL)checkIfURLInWhiteList:(id)arg0;
- (BOOL)shouldRecordResponsebBodyForRecord:(id)arg0 rawData:(id)arg1;
- (long long)responseBodyThreshold;
- (void)sampleAllowHeaderToRecord:(id)arg0 withRequestHeader:(id)arg1 andResponseHeader:(id)arg2;
- (void)sampleAllowHeaderToRecord:(id)arg0 withRequestHeader:(id)arg1 andResponseHeader:(id)arg2 isMovingLine:(BOOL)arg3;
- (void)setupReportModules;
- (void)setUploaders:(id)arg0;
- (void)judgeMonitorPriority;
- (BOOL)isTTNetAvailable;
- (void)recieveTTNetImpChangeNotification:(id)arg0;
- (void)setTTNetMonitorSwitch:(BOOL)arg0;
- (void)setURLLoadingMonitorSwitch:(BOOL)arg0;
- (void)setWebViewMonitorSwitch:(BOOL)arg0;
- (BOOL)shouldMonitorTTNet;
- (BOOL)shouldMonitorURLLoadingSystem;
- (BOOL)shouldMonitorWebView;
- (BOOL)isTTNetChromiumIMP;
- (BOOL)isHMDURLProtocolAvailable;
- (void)setRecordResponseBodyEnabled:(BOOL)arg0;
- (void)setTTNetMonitorUpdateConfig;
- (BOOL)recordResponseBodyEnabled;
- (void)httpDetailRecordWillCollected:(id)arg0;
- (id)instanceWithAid:(id)arg0;
- (void)httpDetailRecordDidCollected:(id)arg0;
- (id)visitorSet;
- (void)removeData:(id)arg0 WithAid:(id)arg1;
- (id)uploaders;
- (void)setLastUploadAllTime:(double)arg0;
- (void)cleanupReportedHTTPDetailRecordData;
- (void)cleanupUnSampleAPIAllPerformanceData;
- (void)cleanupUselessImageMonitorPerformanceData;
- (double)lastUploadAllTime;
- (id)trackerCallbacks;
- (void)setIsNewAllowedCheck:(BOOL)arg0;
- (BOOL)isHMDWebViewMonitorAvailable;
- (void)cleanupNotUploadAndReportedPerformanceData;
- (void)addRecordVisitor:(id)arg0;
- (void)removeRecordVisitor:(id)arg0;
- (void)addHTTPRequestTrackerCallback:(id /* block */)arg0;
- (void)removeHTTPRequestTrackerCallback:(id /* block */)arg0;
- (id)callHTTPRequestTrackerCallback:(id)arg0;
- (void)urlAllowedCheckOptimized:(BOOL)arg0;
- (void)setVisitorSet:(id)arg0;
- (BOOL)isNewAllowedCheck;
- (void)setTrackerCallbacks:(id)arg0;
- (BOOL)enableNSURLProtocolAndChromium;
- (void)setEnableNSURLProtocolAndChromium:(BOOL)arg0;
- (BOOL)ignoreCancelError;
- (void)setIgnoreCancelError:(BOOL)arg0;
- (void)setResponseBodyThreshold:(long long)arg0;
- (BOOL)enableWebViewMonitor;
- (void)setEnableWebViewMonitor:(BOOL)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)stop;
- (void)addRecord:(id)arg0;
- (void)start;
- (Class)storeClass;

@end
