//
//     Generated by private class-dump
//

@class AWEHPMessageManagerConfig, NSMutableDictionary, MMKV, NSString;

@interface AWEHPMessageManager : NSObject <AWEHPMessageManagerProtocol, AWEHPMessageDataObserverProtocol> {
    AWEHPMessageManagerConfig *_config;
    MMKV *_mmkv;
    NSMutableDictionary *_observers;
    NSMutableDictionary *_trackLog;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutexLock;
}

@property (retain, nonatomic) AWEHPMessageManagerConfig *config;
@property (retain, nonatomic) MMKV *mmkv;
@property (retain, nonatomic) NSMutableDictionary *observers;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } mutexLock;
@property (retain, nonatomic) NSMutableDictionary *trackLog;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMmkv:(id)arg0;
- (id)mmkv;
- (struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })mutexLock;
- (void)setMutexLock:(struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })arg0;
- (void)revokeMessageIfNeedWithCmd:(long long)arg0 res:(id)arg1 version:(long long)arg2;
- (id)getMessageWithCmd:(long long)arg0 res:(id)arg1;
- (void)registerMessageObserver:(id)arg0 withCmd:(long long)arg1 res:(id)arg2;
- (void)handleHPMessageData:(id)arg0;
- (id)p_readMessageWithCmd:(long long)arg0 res:(id)arg1;
- (id)keyWithCmd:(long long)arg0 res:(id)arg1;
- (void)p_revokeMessageIfNeedWithCmd:(long long)arg0 res:(id)arg1 version:(long long)arg2;
- (BOOL)p_checkMessageDataValid:(id)arg0 error:(id *)arg1;
- (id)p_writeMessageData:(id)arg0;
- (void)p_sendMsg:(id)arg0 withObservers:(id)arg1;
- (id)p_getCacheMessageWithCmd:(long long)arg0 res:(id)arg1 error:(id *)arg2;
- (void)trackMessageReadIfNeedWithCmd:(long long)arg0 res:(id)arg1 params:(id)arg2;
- (void)trackMessageRevokeWithParams:(id)arg0;
- (BOOL)p_cacheMessage:(id)arg0;
- (BOOL)p_checkMessageValid:(id)arg0 error:(id *)arg1;
- (void)trackMessageHandleWithMessage:(id)arg0 status:(long long)arg1 localVersion:(id)arg2 errorCode:(id)arg3;
- (id)trackLog;
- (void)unregisterMessageObserver:(id)arg0;
- (void)setTrackLog:(id)arg0;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (id)observers;
- (id)initWithConfig:(id)arg0;
- (void)setObservers:(id)arg0;
- (void)dealloc;

@end
