//
//     Generated by private class-dump
//

@class IESLiveInteractionLayoutCanvasView, IESLiveBigPartyPreStreamUserService, IESLiveInteractionLayout, IESLiveLinkmicRoomEnterTracker, IESLiveInteractPreStreamTrackDataSourceImpl, UIView, IESLiveLinkMicSEIParserResult, NSString, IESLiveInteractionAudienceLayoutManager, HTSLiveRoomLinkMicSyncData, NSArray, NSNumber, IESLiveInteractionLayoutCanvasViewModel, IESLiveInteractionAudienceEnterServiceImp;
@protocol IESLiveBigPartyPreStreamStageHelperAdapter, IESLiveBigPartyPreStreamDelegate, IESLiveBigPartyPreStreamStageRoomThemeUpdater, IESLiveBigPartyPreStreamStage, IESLiveInteractionAsyncResourceLoader, IESLiveBigPartyPreStreamDataSource, IESLiveBigPartyPreStreamStageRoomGetterAdapter;

@interface IESLiveBigPartyPreStreamController : NSObject <IESLiveSEIListener, IESLiveBigPartyPreStreamUserServiceDelegate, IESLiveBigPartyPreStreamUserServiceDataSource, IESLiveBigPartyPreStreamStageDataSource, IESLiveInteractionLayoutCanvasFactory, IESLiveInteractionStreamPlayerService, IESLiveBigPartyPreStreamProtocol> {
    BOOL _enableAudio;
    BOOL _isSmoothEnterRoom;
    BOOL _hasDealWithFirstSEI;
    id<IESLiveBigPartyPreStreamDataSource> _dataSource;
    id<IESLiveBigPartyPreStreamDelegate> _delegate;
    id<IESLiveBigPartyPreStreamStageRoomThemeUpdater> _roomThemeUpdaterForStage;
    id<IESLiveBigPartyPreStreamStageHelperAdapter> _helperForStage;
    id<IESLiveBigPartyPreStreamStageRoomGetterAdapter> _roomGetterForStage;
    id<IESLiveInteractionAsyncResourceLoader> _asyncResourceLoader;
    IESLiveLinkmicRoomEnterTracker *_roomEnterTracker;
    NSArray *_curListModel;
    NSNumber *_currentUILayout;
    IESLiveInteractionLayout *_currentLayout;
    id<IESLiveBigPartyPreStreamStage> _stage;
    IESLiveBigPartyPreStreamUserService *_userService;
    UIView *_bizView;
    IESLiveInteractPreStreamTrackDataSourceImpl *_trackDataSource;
    double _createTime;
    IESLiveInteractionAudienceEnterServiceImp *_renderTrack;
    IESLiveInteractionAudienceLayoutManager *_layoutManagerFromSEI;
    IESLiveInteractionLayoutCanvasView *_canvasView;
    IESLiveInteractionLayoutCanvasViewModel *_canvasViewModel;
    NSArray *_lastUserList;
    HTSLiveRoomLinkMicSyncData *_firstSyncData;
    IESLiveLinkMicSEIParserResult *_firstSEIResult;
    IESLiveInteractionLayout *_preStreamEnterRoomLayout;
}

@property (retain, nonatomic) NSNumber *currentUILayout;
@property (retain, nonatomic) IESLiveInteractionLayout *currentLayout;
@property (retain, nonatomic) id<IESLiveBigPartyPreStreamStage> stage;
@property (retain, nonatomic) IESLiveBigPartyPreStreamUserService *userService;
@property (retain, nonatomic) UIView *bizView;
@property (nonatomic) BOOL isSmoothEnterRoom;
@property (retain, nonatomic) IESLiveInteractPreStreamTrackDataSourceImpl *trackDataSource;
@property (nonatomic) double createTime;
@property (retain, nonatomic) IESLiveInteractionAudienceEnterServiceImp *renderTrack;
@property (retain, nonatomic) IESLiveInteractionAudienceLayoutManager *layoutManagerFromSEI;
@property (retain, nonatomic) IESLiveInteractionLayoutCanvasView *canvasView;
@property (retain, nonatomic) IESLiveInteractionLayoutCanvasViewModel *canvasViewModel;
@property (copy, nonatomic) NSArray *lastUserList;
@property (retain, nonatomic) HTSLiveRoomLinkMicSyncData *firstSyncData;
@property (retain, nonatomic) IESLiveLinkMicSEIParserResult *firstSEIResult;
@property (nonatomic) BOOL hasDealWithFirstSEI;
@property (retain, nonatomic) IESLiveInteractionLayout *preStreamEnterRoomLayout;
@property (nonatomic) BOOL enableAudio;
@property (retain, nonatomic) NSArray *curListModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<IESLiveBigPartyPreStreamStageRoomThemeUpdater> roomThemeUpdaterForStage;
@property (retain, nonatomic) id<IESLiveBigPartyPreStreamStageHelperAdapter> helperForStage;
@property (retain, nonatomic) id<IESLiveBigPartyPreStreamStageRoomGetterAdapter> roomGetterForStage;
@property (weak, nonatomic) id<IESLiveBigPartyPreStreamDataSource> dataSource;
@property (weak, nonatomic) id<IESLiveBigPartyPreStreamDelegate> delegate;
@property (weak, nonatomic) IESLiveLinkmicRoomEnterTracker *roomEnterTracker;
@property (weak, nonatomic) id<IESLiveInteractionAsyncResourceLoader> asyncResourceLoader;

- (BOOL)enableAudio;
- (id)enterFrom;
- (void)didSetAttachingDIContext;
- (void)setEnableAudio:(BOOL)arg0;
- (id)userService;
- (void)setUserService:(id)arg0;
- (BOOL)beInBigPartyLayoutStyle;
- (BOOL)hasDealWithFirstSEI;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bigPartyPlayerFrameWithOriginFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (unsigned long long)bigPartyStreamStyle;
- (void)setBizView:(id)arg0;
- (id)preStreamEnterRoomLayout;
- (void)setPreStreamEnterRoomLayout:(id)arg0;
- (id)preStreamEnterRoomUserList;
- (id)roomEnterTracker;
- (void)setRoomEnterTracker:(id)arg0;
- (void)setRoomThemeUpdaterForStage:(id)arg0;
- (void)setRoomGetterForStage:(id)arg0;
- (void)setHelperForStage:(id)arg0;
- (void)setAsyncResourceLoader:(id)arg0;
- (void)setupWithFrom:(id)arg0;
- (void)layoutPlayerIfNeeded;
- (void)onMessageReceivedFromPrestream:(id)arg0 withDict:(id)arg1;
- (id)asyncResourceLoader;
- (void)playerWillReset;
- (void)playerDidReset;
- (void)playerMediaSizeDidChange:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isFromFeedVideo;
- (void)roomDidEnd;
- (BOOL)needCustomPlayerFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })customPlayFrame;
- (void)smoothEnterRoom;
- (id)seiReceiverForBigParty;
- (long long)bigPartyContentModeForEqual;
- (long long)bigPartyContentModeForNonOverlapping;
- (id)playModeListForBigParty;
- (id)bizView;
- (void)setIsSmoothEnterRoom:(BOOL)arg0;
- (BOOL)isSmoothEnterRoom;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (id)canvasViewModel;
- (void)updateWithLayout:(id)arg0;
- (void)setCanvasViewModel:(id)arg0;
- (id)stageWithLayout:(id)arg0;
- (void)setHasDealWithFirstSEI:(BOOL)arg0;
- (void)updateSinger:(id)arg0;
- (id)mergeAllMembersList:(id)arg0 otherlist:(id)arg1;
- (id)layoutManagerFromSEI;
- (void)loadStageFromLayout:(id)arg0 to:(id)arg1;
- (void)setCurListModel:(id)arg0;
- (id)roomGetterForStage;
- (void)initRenderTrackerWithroomOwner:(id)arg0 roomModel:(id)arg1 from:(id)arg2;
- (void)setFirstSyncData:(id)arg0;
- (void)setFirstSEIResult:(id)arg0;
- (void)setLastUserList:(id)arg0;
- (id)lastUserList;
- (id)allMembersListWithListModel:(id)arg0;
- (id)trackDataSource;
- (id)renderTrack;
- (void)handleWithLinkmicResult:(id)arg0;
- (void)handleWithNormalResult:(id)arg0;
- (void)handleWithKTVSEIInfo:(id)arg0;
- (void)updateStageWithList:(id)arg0;
- (struct CGSize { double x0; double x1; })mediaSizeForStage;
- (id)playerForStage;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })containerFrameForStage;
- (void)preDealWithBizViewIfNeeded;
- (void)didActivateTo:(id)arg0;
- (void)didDeactivateFrom:(id)arg0;
- (id)firstSEIResult;
- (id)firstSyncData;
- (void)listDidChange:(id)arg0 source:(long long)arg1 micPostionItem:(id)arg2;
- (id)currentLayoutForUserService:(id)arg0;
- (BOOL)isAudioLive:(id)arg0;
- (id)roomForUserService;
- (BOOL)isSameSizeAsRoom;
- (id)roomThemeUpdaterForStage;
- (id)helperForStage;
- (id)containerForStage;
- (id)playerContainerForStage;
- (id)bigPartyPreStreamUserService;
- (id)currentCanvasWithLayout:(id)arg0;
- (void)onCurrentLayoutChanged:(id /* block */)arg0;
- (id)curListModel;
- (id)currentUILayout;
- (void)setCurrentUILayout:(id)arg0;
- (void)setTrackDataSource:(id)arg0;
- (void)setRenderTrack:(id)arg0;
- (void)setLayoutManagerFromSEI:(id)arg0;
- (id)canvasView;
- (id)currentLayout;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (void).cxx_destruct;
- (void)setCreateTime:(double)arg0;
- (void)setCurrentLayout:(id)arg0;
- (id)stage;
- (id)delegate;
- (double)createTime;
- (void)prepareForReuse;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setStage:(id)arg0;
- (void)setCanvasView:(id)arg0;
- (id)currentCanvas;
- (struct CGSize { double x0; double x1; })placeholderSize;
- (void)clearCanvas;

@end
