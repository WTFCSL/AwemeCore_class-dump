//
//     Generated by private class-dump
//

@class NSString, NSDictionary, NSURL, HybridResourceSchemaParam, NSNumber;

@interface HybridSchemaParam : NSObject {
    BOOL _originURLProcessed;
    BOOL _enablePrefetch;
    BOOL _subscribeNetworkLevel;
    NSNumber *_disableBuiltIn;
    NSNumber *_disableGurd;
    NSString *_bid;
    NSDictionary *_extra;
    NSURL *_originURL;
    NSURL *_resolvedURL;
    NSURL *_originURLBeforeCustomProcess;
    long long _engineType;
    NSDictionary *_preloadSettingKeys;
    HybridResourceSchemaParam *_resourceParam;
}

@property (retain, nonatomic) NSNumber *disableBuiltIn;
@property (retain, nonatomic) NSNumber *disableGurd;
@property (retain, nonatomic) NSString *bid;
@property (retain, nonatomic) NSDictionary *extra;
@property (retain, nonatomic) NSURL *originURL;
@property (retain, nonatomic) NSURL *resolvedURL;
@property (nonatomic) BOOL originURLProcessed;
@property (retain, nonatomic) NSURL *originURLBeforeCustomProcess;
@property (nonatomic) long long engineType;
@property (retain, nonatomic) NSDictionary *preloadSettingKeys;
@property (nonatomic) BOOL enablePrefetch;
@property (retain, nonatomic) HybridResourceSchemaParam *resourceParam;
@property (nonatomic) BOOL subscribeNetworkLevel;

+ (id)resolverWithSchema:(id)arg0 contextInfo:(id)arg1;
+ (id)prefetchUrlWithSchema:(id)arg0;
+ (void)triggerPrefetchIfNeeded:(id)arg0 contextInfo:(id)arg1;
+ (void)registerPrefetchInitDataIfNeeded:(id)arg0 prefetchSchema:(id)arg1 contextInfo:(id)arg2;
+ (BOOL)__schemaQueryWithChannelStyle:(id)arg0;
+ (BOOL)__schemaQueryWithUrlStyle:(id)arg0;
+ (id)extractUrlDetail:(id)arg0 withPrefix:(id)arg1;
+ (id)paramWithDictionary:(id)arg0 context:(id)arg1;
+ (BOOL)__schemaQueryWithFallbackUrlStyle:(id)arg0;
+ (id)paramWithDictionary:(id)arg0;
+ (id)__resolveHttpStyleToHybridSchema:(id)arg0 withQueries:(id)arg1;
+ (id)__resolveURLStyleToHybridSchema:(id)arg0 withQueries:(id)arg1;
+ (id)__resolveChannelStyleToHybridSchema:(id)arg0 withQueries:(id)arg1;
+ (id)hybrid_stringByAddingQueryDict:(id)arg0 withDict:(id)arg1;
+ (id)hybrid_stringByAddingPercentEscapes:(id)arg0;
+ (void)prefetchMonitor:(id)arg0 apis:(id)arg1 context:(id)arg2;
+ (BOOL)canResolveUrl:(id)arg0;

- (void)setExtra:(id)arg0;
- (void)setBid:(id)arg0;
- (id)bid;
- (BOOL)enablePrefetch;
- (void)setEnablePrefetch:(BOOL)arg0;
- (void)updateWithParam:(id)arg0;
- (id)disableGurd;
- (void)setDisableGurd:(id)arg0;
- (id)preloadSettingKeys;
- (id)resourceParam;
- (id)dictionaryWithInnerUrlQueryItems:(id)arg0;
- (void)setDisableBuiltIn:(id)arg0;
- (void)setPreloadSettingKeys:(id)arg0;
- (void)setResourceParam:(id)arg0;
- (void)setSubscribeNetworkLevel:(BOOL)arg0;
- (id)disableBuiltIn;
- (BOOL)originURLProcessed;
- (void)setOriginURLProcessed:(BOOL)arg0;
- (id)originURLBeforeCustomProcess;
- (void)setOriginURLBeforeCustomProcess:(id)arg0;
- (BOOL)subscribeNetworkLevel;
- (id)resolvedURL;
- (void)updateWithDictionary:(id)arg0;
- (long long)engineType;
- (void).cxx_destruct;
- (id)extra;
- (void)setEngineType:(long long)arg0;
- (id)originURL;
- (void)setOriginURL:(id)arg0;
- (void)updateWithDictionary:(id)arg0 context:(id)arg1;
- (void)setResolvedURL:(id)arg0;

@end
