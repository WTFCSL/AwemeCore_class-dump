//
//     Generated by private class-dump
//

@class NSArray, UIImage, HTSLiveImage, NSAttributedString;

@interface IESLiveDanmakuVariousViewModel : NSObject {
    BOOL _showAvatar;
    BOOL _showAvatarBadge;
    BOOL _showContentBorder;
    BOOL _pinModeRequired;
    NSArray *_avatarURLs;
    UIImage *_avatarImage;
    double _avatarLeadingOffset;
    double _officialAvatarSize;
    double _avatarBadgeSize;
    HTSLiveImage *_avatarBadge;
    NSArray *_backgroundColors;
    UIImage *_backgroundSkin;
    NSArray *_borderColors;
    NSAttributedString *_content;
    NSArray *_contentTextColors;
    NSArray *_contentOuterStrokeColors;
    double _outerStrokeWidth;
    double _horizontalSpacing;
    HTSLiveImage *_badgeIcon;
    long long _atmosphereCols;
    NSAttributedString *_atmosphereContent;
    double _atmosphereSpacingMax;
    double _atmosphereSpacingMin;
    double _atmosphereContentHeight;
    double _mainContentHeight;
    double _danmakuHeight;
    struct CGSize { double width; double height; } _avatarSize;
}

@property (copy, nonatomic) NSArray *avatarURLs;
@property (retain, nonatomic) UIImage *avatarImage;
@property (nonatomic) BOOL showAvatar;
@property (nonatomic) double avatarLeadingOffset;
@property (nonatomic) double officialAvatarSize;
@property (nonatomic) struct CGSize { double width; double height; } avatarSize;
@property (nonatomic) double avatarBadgeSize;
@property (nonatomic) BOOL showAvatarBadge;
@property (retain, nonatomic) HTSLiveImage *avatarBadge;
@property (copy, nonatomic) NSArray *backgroundColors;
@property (retain, nonatomic) UIImage *backgroundSkin;
@property (nonatomic) BOOL showContentBorder;
@property (copy, nonatomic) NSArray *borderColors;
@property (copy, nonatomic) NSAttributedString *content;
@property (copy, nonatomic) NSArray *contentTextColors;
@property (copy, nonatomic) NSArray *contentOuterStrokeColors;
@property (nonatomic) double outerStrokeWidth;
@property (nonatomic) double horizontalSpacing;
@property (retain, nonatomic) HTSLiveImage *badgeIcon;
@property (nonatomic) long long atmosphereCols;
@property (retain, nonatomic) NSAttributedString *atmosphereContent;
@property (nonatomic) double atmosphereSpacingMax;
@property (nonatomic) double atmosphereSpacingMin;
@property (nonatomic) double atmosphereContentHeight;
@property (nonatomic) double mainContentHeight;
@property (nonatomic) double danmakuHeight;
@property (nonatomic) BOOL pinModeRequired;

- (id)avatarURLs;
- (void)setAvatarURLs:(id)arg0;
- (BOOL)showAvatar;
- (double)outerStrokeWidth;
- (void)setOuterStrokeWidth:(double)arg0;
- (void)setBorderColors:(id)arg0;
- (id)borderColors;
- (void)setBadgeIcon:(id)arg0;
- (id)badgeIcon;
- (id)atmosphereContent;
- (void)setAtmosphereContent:(id)arg0;
- (BOOL)showContentBorder;
- (void)setShowContentBorder:(BOOL)arg0;
- (double)danmakuHeight;
- (void)setDanmakuHeight:(double)arg0;
- (void)setContentTextColors:(id)arg0;
- (void)setShowAvatar:(BOOL)arg0;
- (void)setOfficialAvatarSize:(double)arg0;
- (void)setAvatarBadgeSize:(double)arg0;
- (void)setShowAvatarBadge:(BOOL)arg0;
- (void)setAvatarBadge:(id)arg0;
- (void)setAvatarLeadingOffset:(double)arg0;
- (id)contentTextColors;
- (BOOL)pinModeRequired;
- (void)setAtmosphereSpacingMax:(double)arg0;
- (void)setAtmosphereSpacingMin:(double)arg0;
- (void)setMainContentHeight:(double)arg0;
- (void)setAtmosphereContentHeight:(double)arg0;
- (void)setPinModeRequired:(BOOL)arg0;
- (double)officialAvatarSize;
- (BOOL)showAvatarBadge;
- (id)avatarBadge;
- (double)avatarBadgeSize;
- (id)contentOuterStrokeColors;
- (double)avatarLeadingOffset;
- (id)backgroundSkin;
- (void)setContentOuterStrokeColors:(id)arg0;
- (void)setBackgroundSkin:(id)arg0;
- (long long)atmosphereCols;
- (double)atmosphereSpacingMax;
- (double)atmosphereSpacingMin;
- (double)atmosphereContentHeight;
- (double)mainContentHeight;
- (void)setAtmosphereCols:(long long)arg0;
- (void).cxx_destruct;
- (id)content;
- (void)setContent:(id)arg0;
- (id)backgroundColors;
- (void)setAvatarImage:(id)arg0;
- (id)avatarImage;
- (struct CGSize { double x0; double x1; })avatarSize;
- (void)setAvatarSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setBackgroundColors:(id)arg0;
- (double)horizontalSpacing;
- (void)setHorizontalSpacing:(double)arg0;

@end
