//
//     Generated by private class-dump
//

@class NSTimer, NSString, NSURL, AVAssetWriter, BDPUniqueID, BDPCameraInstanceConfig, NSDictionary, AVCaptureMetadataOutput, NSObject, BDPCameraView, BDPGLResizeView, AVAssetWriterInput;
@protocol OS_dispatch_queue;

@interface BDPPluginCamera : BDPBridgeInstancePlugin <BDPCameraViewDelegate, BDPCameraInstanceProtocol, AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCapturePhotoCaptureDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVAudioRecorderDelegate, BDPAppRouteChangeMessage> {
    BOOL _isSerialQueueRunning;
    BOOL _destoryed;
    BOOL _needCameraFrame;
    BOOL _discardsLateFrame;
    BOOL _timeOut;
    BOOL _appended;
    BOOL _canWritting;
    BOOL _firingScanCode;
    BOOL _recordingVideo;
    BOOL _stoppingRecord;
    BOOL _compressedVideo;
    BOOL _firstTimeUpdate;
    BOOL _webviewNewCamera;
    long long _pageID;
    BDPUniqueID *_uniqueID;
    id /* block */ _callback;
    BDPCameraInstanceConfig *_cameraConfig;
    NSObject<OS_dispatch_queue> *_tempQueue;
    NSObject<OS_dispatch_queue> *_audioQueue;
    NSObject<OS_dispatch_queue> *_videoQueue;
    NSObject<OS_dispatch_queue> *_captureQueue;
    NSObject<OS_dispatch_queue> *_scanQueue;
    BDPCameraView *_cameraView;
    BDPGLResizeView *_resizeView;
    NSString *_scanUrl;
    NSString *_cameraID;
    NSURL *_videoURL;
    NSURL *_videoURLOutPut;
    long long _callbackID;
    long long _cameraMode;
    long long _timeCount;
    NSTimer *_timer;
    NSDictionary *_videoSettings;
    AVAssetWriter *_writer;
    AVAssetWriterInput *_writerAudioInput;
    AVAssetWriterInput *_writerVideoInput;
    AVCaptureMetadataOutput *_metadataOutput;
    struct CGSize { double width; double height; } _cameraFrameSize;
}

@property (nonatomic) long long pageID;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (copy, nonatomic) id /* block */ callback;
@property (nonatomic) BOOL isSerialQueueRunning;
@property (nonatomic) BOOL timeOut;
@property (nonatomic) BOOL appended;
@property (nonatomic) BOOL canWritting;
@property (nonatomic) BOOL firingScanCode;
@property (nonatomic) BOOL recordingVideo;
@property (nonatomic) BOOL stoppingRecord;
@property (nonatomic) BOOL compressedVideo;
@property (nonatomic) BOOL firstTimeUpdate;
@property (nonatomic) BOOL webviewNewCamera;
@property (copy, nonatomic) NSString *scanUrl;
@property (copy, nonatomic) NSString *cameraID;
@property (retain, nonatomic) NSURL *videoURL;
@property (retain, nonatomic) NSURL *videoURLOutPut;
@property (nonatomic) long long callbackID;
@property (nonatomic) long long cameraMode;
@property (nonatomic) long long timeCount;
@property (retain, nonatomic) NSTimer *timer;
@property (copy, nonatomic) NSDictionary *videoSettings;
@property (retain, nonatomic) AVAssetWriter *writer;
@property (retain, nonatomic) AVAssetWriterInput *writerAudioInput;
@property (retain, nonatomic) AVAssetWriterInput *writerVideoInput;
@property (retain, nonatomic) AVCaptureMetadataOutput *metadataOutput;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)errMsgForErrCode:(long long)arg0;
+ (BOOL)isAuthorizedCameraForUniqueID:(id)arg0;

- (void)applicationEnterBackground;
- (long long)callbackID;
- (void)setCallbackID:(long long)arg0;
- (void)onAppRouteChangePageDidEnterWithPageID:(long long)arg0 pageURL:(id)arg1 uniqueID:(id)arg2;
- (void)onAppRouteChangePageDidLeaveWithPageID:(long long)arg0 pageURL:(id)arg1 uniqueID:(id)arg2;
- (void)setTimeCount:(long long)arg0;
- (long long)timeCount;
- (void)setCameraID:(id)arg0;
- (BOOL)compressedVideo;
- (void)setCompressedVideo:(BOOL)arg0;
- (void)onCameraEndInterruption;
- (void)onCameraBeginInterruption;
- (void)onCameraStopped;
- (void)onCameraInitDoneWithMaxZoom:(double)arg0;
- (void)cameraView:(id)arg0 didClickedPoint:(struct CGPoint { double x0; double x1; })arg1;
- (void)setFirstTimeUpdate:(BOOL)arg0;
- (void)endRecrodingWithBackGrounds:(BOOL)arg0 callback:(id /* block */)arg1;
- (void)setIsSerialQueueRunning:(BOOL)arg0;
- (id)errorTypeForErrorCode:(long long)arg0;
- (void)setWebviewNewCamera:(BOOL)arg0;
- (BOOL)webviewNewCamera;
- (void)setScanUrl:(id)arg0;
- (void)setFiringScanCode:(BOOL)arg0;
- (id)getNormalOutputWithScanCode:(BOOL)arg0;
- (id)getCameraOutPut;
- (void)insertCameraViewForComponentWithCallback:(id /* block */)arg0 instance:(id)arg1 componentID:(id)arg2;
- (BOOL)recordingVideo;
- (BOOL)isSerialQueueRunning;
- (void)takePhotoProcess;
- (void)stopRecordVideoFromBackground:(BOOL)arg0 callback:(id /* block */)arg1;
- (id)getValidURL;
- (void)setupWriter;
- (void)writerProcessWithSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0 fromConnection:(id)arg1;
- (BOOL)canWritting;
- (void)setCanWritting:(BOOL)arg0;
- (id)writerVideoInput;
- (void)setAppended:(BOOL)arg0;
- (id)writerAudioInput;
- (id)pngWithCorrectPosition:(id)arg0;
- (id)croppedWithImage:(id)arg0;
- (id)bdp_imageMirroredWithSource:(id)arg0;
- (id)saveAndGetPathWithPhoto:(BOOL)arg0 data:(id)arg1 url:(id)arg2 extension:(id)arg3;
- (id)getPngWithInitialImage:(id)arg0;
- (id)scanUrl;
- (BOOL)firingScanCode;
- (id)insertCameraIdWithData:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })correctRectOfCropImageAndVideo:(struct CGSize { double x0; double x1; })arg0;
- (id)bdp_imageRotatedByDegrees:(double)arg0 originImg:(id)arg1 opaque:(BOOL)arg2;
- (void)setWriterAudioInput:(id)arg0;
- (void)setWriterVideoInput:(id)arg0;
- (void)setRecordingVideo:(BOOL)arg0;
- (BOOL)stoppingRecord;
- (void)setStoppingRecord:(BOOL)arg0;
- (void)stopAllActions;
- (BOOL)appended;
- (id)getVideoPreViewImageWithURL:(id)arg0;
- (void)getVideoSettingsOrFireTimeOut:(id)arg0 videoPath:(id)arg1 thumbImagePath:(id)arg2;
- (void)setVideoURLOutPut:(id)arg0;
- (id)videoURLOutPut;
- (void)convertVideoWithInputUrl:(id)arg0 outUrl:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)insertCameraWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)updateCameraWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)removeCameraWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)startCameraFrameWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)stopCameraFrameWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)setCameraZoomWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)takePhotoWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)startCameraRecordWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)stopCameraRecordWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (BOOL)firstTimeUpdate;
- (id)timer;
- (id)videoURL;
- (id)init;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setCallback:(id /* block */)arg0;
- (void)setPageID:(long long)arg0;
- (void)captureOutput:(id)arg0 didFinishProcessingPhoto:(id)arg1 error:(id)arg2;
- (void)setUniqueID:(id)arg0;
- (void)stopTimer;
- (id /* block */)callback;
- (long long)pageID;
- (id)metadataOutput;
- (void)setTimer:(id)arg0;
- (void)setVideoURL:(id)arg0;
- (void)dealloc;
- (void)setWriter:(id)arg0;
- (id)writer;
- (void)captureOutput:(id)arg0 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg1 fromConnection:(id)arg2;
- (void)setVideoSettings:(id)arg0;
- (id)videoSettings;
- (void)captureOutput:(id)arg0 didOutputMetadataObjects:(id)arg1 fromConnection:(id)arg2;
- (void)setTimeOut:(BOOL)arg0;
- (BOOL)timeOut;
- (id)cameraID;
- (long long)cameraMode;
- (void)setCameraMode:(long long)arg0;
- (void)setMetadataOutput:(id)arg0;

@end
