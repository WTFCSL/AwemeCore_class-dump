//
//     Generated by private class-dump
//

@class NSObject, NSMutableDictionary, XPlaySocketTracker, NSString, XPlayInstructionCache, TTPushManager;
@protocol OS_dispatch_queue;

@interface XPlaySocketManager : NSObject <WsDelegate, XPlaySocketManagerProtocol> {
    long long _state;
    NSObject<OS_dispatch_queue> *_socketQueue;
    TTPushManager *_pushManager;
    XPlayInstructionCache *_instCache;
    NSMutableDictionary *_handlers;
    XPlaySocketTracker *_tracker;
}

@property (nonatomic) long long state;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *socketQueue;
@property (retain, nonatomic) TTPushManager *pushManager;
@property (retain, nonatomic) XPlayInstructionCache *instCache;
@property (retain, nonatomic) NSMutableDictionary *handlers;
@property (retain, nonatomic) XPlaySocketTracker *tracker;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)onFrontierMessageReceived:(id)arg0 message:(id)arg1;
- (void)onFeedbackLog:(id)arg0 feedbacklog:(id)arg1;
- (void)onConnectionErrorWithState:(id)arg0 connectionState:(unsigned long long)arg1 url:(id)arg2 error:(id)arg3;
- (void)onConnectionStateChanged:(id)arg0 connectionState:(unsigned long long)arg1 url:(id)arg2;
- (id)cloudBusinessHandlerWithItem:(id)arg0;
- (void)removeHandler:(id)arg0 forItemId:(id)arg1 needForceDisconnect:(BOOL)arg2;
- (void)cancelCloudBusiness:(id)arg0;
- (id)instCache;
- (void)realSendInst:(id)arg0;
- (void)sendSocketMessage:(id)arg0 service:(int)arg1 method:(int)arg2;
- (void)addSocketHandler:(id)arg0 forItemId:(id)arg1;
- (void)sendAckInstructionForInst:(id)arg0 withExtra:(id)arg1 respInst:(id)arg2;
- (void)noticeReceiveMessage:(id)arg0;
- (void)noticeReceiveAckMessage:(id)arg0 forMessage:(id)arg1;
- (void)handleAckMessage:(id)arg0;
- (void)handleBusinessMessage:(id)arg0;
- (long long)translateToSocketState:(unsigned long long)arg0;
- (void)noticeSocketConnectionFailed:(id)arg0 with:(long long)arg1;
- (void)flushOverstockInst;
- (void)setInstCache:(id)arg0;
- (void)updateNetworkStatus;
- (void)noticeSocketStateChanged:(long long)arg0;
- (void)removeHandler:(id)arg0 forItemId:(id)arg1;
- (void)removeAllHandler;
- (void)sendInstruction:(id)arg0;
- (void)setSocketQueue:(id)arg0;
- (void)connect;
- (void)setHandlers:(id)arg0;
- (id)handlers;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (id)init;
- (void)disconnect;
- (void).cxx_destruct;
- (long long)state;
- (void)setState:(long long)arg0;
- (BOOL)connectionMode;
- (id)pushManager;
- (BOOL)isConnected;
- (void)setup;
- (void)setPushManager:(id)arg0;
- (void)dealloc;
- (void)addNotificationObserver;
- (id)socketQueue;

@end
