//
//     Generated by private class-dump
//

@class NSArray, LynxUIIntersectionObserverManager, LynxUI, NSMutableArray;

@interface LynxUIIntersectionObserver : NSObject {
    BOOL _observeAll;
    BOOL _isCustomEventObserver;
    BOOL _relativeToScreen;
    BOOL _enableNewIntersectionObserver;
    float _marginLeft;
    float _marginRight;
    float _marginTop;
    float _marginBottom;
    LynxUI *_attachedUI;
    long long _observerId;
    NSArray *_thresholds;
    long long _initialRatio;
    LynxUIIntersectionObserverManager *_manager;
    LynxUI *_container;
    LynxUI *_root;
    NSMutableArray *_observationTargets;
}

@property (nonatomic) long long observerId;
@property (nonatomic) float marginLeft;
@property (nonatomic) float marginRight;
@property (nonatomic) float marginTop;
@property (nonatomic) float marginBottom;
@property (retain, nonatomic) NSArray *thresholds;
@property (nonatomic) long long initialRatio;
@property (nonatomic) BOOL observeAll;
@property (nonatomic) BOOL isCustomEventObserver;
@property (weak, nonatomic) LynxUIIntersectionObserverManager *manager;
@property (weak, nonatomic) LynxUI *container;
@property (weak, nonatomic) LynxUI *root;
@property (nonatomic) BOOL relativeToScreen;
@property (retain, nonatomic) NSMutableArray *observationTargets;
@property (nonatomic) BOOL enableNewIntersectionObserver;
@property (readonly, weak, nonatomic) LynxUI *attachedUI;

- (long long)initialRatio;
- (void)setInitialRatio:(long long)arg0;
- (BOOL)enableNewIntersectionObserver;
- (id)initWithManager:(id)arg0 observerId:(long long)arg1 componentId:(id)arg2 options:(id)arg3;
- (void)relativeTo:(id)arg0 margins:(id)arg1;
- (void)relativeToViewportWithMargins:(id)arg0;
- (void)relativeToScreenWithMargins:(id)arg0;
- (void)observe:(id)arg0 callbackId:(long long)arg1;
- (void)setEnableNewIntersectionObserver:(BOOL)arg0;
- (id)initWithOptions:(id)arg0 manager:(id)arg1 attachedUI:(id)arg2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getRootRect;
- (void)checkForIntersectionWithTarget:(id)arg0 rootRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 isInitial:(BOOL)arg2;
- (void)parseMargin:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })computeTargetAndRootIntersection:(id)arg0 targetRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 rootRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (BOOL)hasCrossedThreshold:(id)arg0 newEntry:(id)arg1;
- (void)checkForIntersections;
- (id)attachedUI;
- (long long)observerId;
- (void)setObserverId:(long long)arg0;
- (BOOL)observeAll;
- (void)setObserveAll:(BOOL)arg0;
- (BOOL)isCustomEventObserver;
- (void)setIsCustomEventObserver:(BOOL)arg0;
- (BOOL)relativeToScreen;
- (void)setRelativeToScreen:(BOOL)arg0;
- (id)observationTargets;
- (void)setObservationTargets:(id)arg0;
- (id)root;
- (id)container;
- (void)setThresholds:(id)arg0;
- (void)disconnect;
- (void).cxx_destruct;
- (void)setContainer:(id)arg0;
- (id)thresholds;
- (void)setManager:(id)arg0;
- (id)manager;
- (void)setRoot:(id)arg0;
- (float)marginTop;
- (void)setMarginTop:(float)arg0;
- (float)marginRight;
- (void)setMarginRight:(float)arg0;
- (float)marginBottom;
- (void)setMarginBottom:(float)arg0;
- (float)marginLeft;
- (void)setMarginLeft:(float)arg0;

@end
