//
//     Generated by private class-dump
//

@class AVPlayerItem, HTSVideoData, NSMutableDictionary, HTSGLContext, NSString;
@protocol IVEPlayerUnitProtocol;

@interface VEPinUnit : NSObject <VEAppStatusProtocol> {
    BOOL _enableMultiTrack;
    BOOL _isNeedTimeMapping;
    BOOL _cancled;
    BOOL _crossplatInput;
    float _stickerStartTime;
    float _stickerDuration;
    float _pinDuration;
    float _pinTime;
    float _targetFps;
    float _currentFps;
    float _deltaFps;
    float _count;
    id<IVEPlayerUnitProtocol> _playerUnit;
    id /* block */ _progressBlock;
    double _forwardTime;
    double _backwardTime;
    AVPlayerItem *_item;
    NSMutableDictionary *_pinTimeMappingDicArray;
    HTSVideoData *_videoData;
    HTSGLContext *_htsGLContext;
}

@property (nonatomic) float pinDuration;
@property (nonatomic) float pinTime;
@property (nonatomic) double forwardTime;
@property (nonatomic) double backwardTime;
@property (nonatomic) BOOL cancled;
@property (retain, nonatomic) AVPlayerItem *item;
@property (nonatomic) float targetFps;
@property (nonatomic) float currentFps;
@property (nonatomic) float deltaFps;
@property (nonatomic) float count;
@property (nonatomic) BOOL crossplatInput;
@property (retain, nonatomic) NSMutableDictionary *pinTimeMappingDicArray;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (retain, nonatomic) HTSGLContext *htsGLContext;
@property (nonatomic) float stickerStartTime;
@property (nonatomic) float stickerDuration;
@property (retain, nonatomic) id<IVEPlayerUnitProtocol> playerUnit;
@property (nonatomic) BOOL enableMultiTrack;
@property (nonatomic) BOOL isNeedTimeMapping;
@property (copy, nonatomic) id /* block */ progressBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)readerSetting;
- (id)videoData;
- (void)setVideoData:(id)arg0;
- (BOOL)enableMultiTrack;
- (void)setEnableMultiTrack:(BOOL)arg0;
- (BOOL)crossplatInput;
- (void)setCrossplatInput:(BOOL)arg0;
- (void)setHtsGLContext:(id)arg0;
- (id)htsGLContext;
- (void)setTargetFps:(float)arg0;
- (void)setCurrentFps:(float)arg0;
- (void)setCancled:(BOOL)arg0;
- (void)setPinTime:(float)arg0;
- (void)setForwardTime:(double)arg0;
- (void)setBackwardTime:(double)arg0;
- (void)setStickerStartTime:(float)arg0;
- (void)setStickerDuration:(float)arg0;
- (BOOL)isNeedTimeMapping;
- (void)setPinTimeMappingDicArray:(id)arg0;
- (id)pinTimeMappingDicArray;
- (float)deltaFps;
- (id)playerUnit;
- (double)forwardTime;
- (double)backwardTime;
- (float)stickerStartTime;
- (BOOL)cancled;
- (void)lvProcessData:(id)arg0;
- (void)buildPinTimeMappingDic:(id)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)p_lvStartPinProcess:(id /* block */)arg0;
- (id)mergeVideodataItem:(id)arg0;
- (float)currentFps;
- (void)setDeltaFps:(float)arg0;
- (float)pinTime;
- (void)read:(id)arg0 range:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1 completionHandler:(id /* block */)arg2 bufferBlock:(id /* block */)arg3;
- (void)reverseRead:(id)arg0 range:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1 completionHandler:(id /* block */)arg2 bufferBlock:(id /* block */)arg3;
- (void)canclePin;
- (BOOL)buildPinWithVideodata:(id)arg0 pinStartTime:(float)arg1 pinDuration:(float)arg2 pinTime:(float)arg3;
- (void)startPinProcesser:(id /* block */)arg0;
- (id)getPinTimeDic;
- (float)stickerDuration;
- (void)setPlayerUnit:(id)arg0;
- (void)setIsNeedTimeMapping:(BOOL)arg0;
- (float)pinDuration;
- (void)setPinDuration:(float)arg0;
- (void)becomeActive;
- (void)setCount:(float)arg0;
- (id)initWithContext:(id)arg0;
- (id)item;
- (float)targetFps;
- (id)init;
- (void).cxx_destruct;
- (void)resignActive;
- (void)enterBackground;
- (void)setProgressBlock:(id /* block */)arg0;
- (float)count;
- (void)enterForeground;
- (id /* block */)progressBlock;
- (void)dealloc;
- (void)processData:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)setItem:(id)arg0;
- (void)memoryWarning;

@end
