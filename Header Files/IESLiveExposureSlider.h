//
//     Generated by private class-dump
//

@class UIView, CAShapeLayer;

@interface IESLiveExposureSlider : UISlider {
    BOOL _thumbBackgroundClear;
    BOOL _trackHidden;
    double _trackHeight;
    double _thumbMargin;
    unsigned long long _direction;
    double _trackAlpha;
    CAShapeLayer *_minTrackMaskLayer;
    CAShapeLayer *_maxTrackMaskLayer;
    UIView *_originMinTrackView;
    UIView *_originMaxTrackView;
    UIView *_originThumbView;
    struct CGSize { double width; double height; } _thumbSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _thumbBackgroundClearRect;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } thumbBackgroundClearRect;
@property (retain, nonatomic) CAShapeLayer *minTrackMaskLayer;
@property (retain, nonatomic) CAShapeLayer *maxTrackMaskLayer;
@property (retain, nonatomic) UIView *originMinTrackView;
@property (retain, nonatomic) UIView *originMaxTrackView;
@property (retain, nonatomic) UIView *originThumbView;
@property (nonatomic) double trackHeight;
@property (nonatomic) struct CGSize { double width; double height; } thumbSize;
@property (nonatomic, getter=isThumbBackgroundClear) BOOL thumbBackgroundClear;
@property (nonatomic) double thumbMargin;
@property (nonatomic) unsigned long long direction;
@property (nonatomic) BOOL trackHidden;
@property (nonatomic) double trackAlpha;

- (double)trackHeight;
- (void)setTrackHeight:(double)arg0;
- (void)updateSubViews;
- (BOOL)isThumbBackgroundClear;
- (double)thumbMargin;
- (void)setThumbBackgroundClearRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)originThumbView;
- (double)trackAlpha;
- (id)originMinTrackView;
- (id)originMaxTrackView;
- (BOOL)trackHidden;
- (void)setMinTrackMaskLayer:(id)arg0;
- (id)minTrackMaskLayer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbBackgroundClearRect;
- (void)p_updatePathForMaskLayer:(id)arg0 withBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 insideRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (void)setMaxTrackMaskLayer:(id)arg0;
- (id)maxTrackMaskLayer;
- (void)setThumbScale:(double)arg0;
- (void)setThumbBackgroundClear:(BOOL)arg0;
- (void)setTrackHidden:(BOOL)arg0;
- (void)setTrackAlpha:(double)arg0;
- (void)setThumbMargin:(double)arg0;
- (void)setOriginMinTrackView:(id)arg0;
- (void)setOriginMaxTrackView:(id)arg0;
- (void)setOriginThumbView:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setThumbImage:(id)arg0 forState:(unsigned long long)arg1;
- (unsigned long long)direction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 trackRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 value:(float)arg2;
- (id)valueForUndefinedKey:(id)arg0;
- (void)layoutSubviews;
- (void)setDirection:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })thumbSize;
- (void)setThumbSize:(struct CGSize { double x0; double x1; })arg0;

@end
