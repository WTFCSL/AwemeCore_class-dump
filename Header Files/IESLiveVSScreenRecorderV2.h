//
//     Generated by private class-dump
//

@class UIView, NSString, NSURL, UIImage, AVAssetWriter, NSDictionary, NSMutableSet, NSMutableArray, NSObject, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor;
@protocol OS_dispatch_queue, HTSLiveStreamPlayerProviderAdapter, OS_dispatch_semaphore;

@interface IESLiveVSScreenRecorderV2 : NSObject <HTSLiveStreamPlayerAction, IESLiveVSScreenRecorderProtocol> {
    NSObject<OS_dispatch_queue> *_session_queue;
    NSObject<OS_dispatch_queue> *_render_queue;
    NSObject<OS_dispatch_semaphore> *_render_semaphore;
    BOOL _isRecording;
    BOOL _playerPixelEnabled;
    BOOL _isPlayerStall;
    int _channels;
    int _sampleRate;
    double _maxDuration;
    AVAssetWriter *_writer;
    AVAssetWriterInput *_videoWriterInput;
    AVAssetWriterInput *_audioWriterInput;
    AVAssetWriterInputPixelBufferAdaptor *_bufferAdaptor;
    NSMutableSet *_observerSet;
    UIView *_targetView;
    double _canvasScale;
    struct CGColorSpace { } *_colorSpace;
    UIImage *_cover;
    NSURL *_outputFileURL;
    id /* block */ _completed;
    NSDictionary *_configs;
    id<HTSLiveStreamPlayerProviderAdapter> _player;
    UIImage *_watermarkImage;
    unsigned long long _nullBufferCount;
    NSMutableArray *_cvReturnErrorCode;
    struct CGSize { double width; double height; } _canvasSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _beginTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _currentAudioTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _endTime;
}

@property (retain, nonatomic) AVAssetWriter *writer;
@property (retain, nonatomic) AVAssetWriterInput *videoWriterInput;
@property (retain, nonatomic) AVAssetWriterInput *audioWriterInput;
@property (retain, nonatomic) AVAssetWriterInputPixelBufferAdaptor *bufferAdaptor;
@property (retain, nonatomic) NSMutableSet *observerSet;
@property (nonatomic) int channels;
@property (nonatomic) int sampleRate;
@property (weak, nonatomic) UIView *targetView;
@property (nonatomic) struct CGSize { double width; double height; } canvasSize;
@property (nonatomic) double canvasScale;
@property (nonatomic) BOOL isRecording;
@property (nonatomic) struct CGColorSpace { } *colorSpace;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } beginTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } currentAudioTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } endTime;
@property (retain, nonatomic) UIImage *cover;
@property (retain, nonatomic) NSURL *outputFileURL;
@property (copy, nonatomic) id /* block */ completed;
@property (copy, nonatomic) NSDictionary *configs;
@property (nonatomic) BOOL playerPixelEnabled;
@property (nonatomic) BOOL isPlayerStall;
@property (retain, nonatomic) id<HTSLiveStreamPlayerProviderAdapter> player;
@property (retain, nonatomic) UIImage *watermarkImage;
@property (nonatomic) unsigned long long nullBufferCount;
@property (retain, nonatomic) NSMutableArray *cvReturnErrorCode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double seconds;
@property (nonatomic) double maxDuration;

- (id)cover;
- (void)onRenderVideoFrame:(struct __CVBuffer { } *)arg0 pts:(long long)arg1 width:(long long)arg2 height:(long long)arg3;
- (void)setCover:(id)arg0;
- (void)didSetAttachingDIContext;
- (void)setConfigs:(id)arg0;
- (BOOL)setupVideoInput;
- (void)setWatermarkImage:(id)arg0;
- (id)watermarkImage;
- (void)setObserverSet:(id)arg0;
- (id)getPixelBufferAttributes:(unsigned int)arg0 heigth:(int)arg1 width:(int)arg2;
- (void)playerWillOpenAudioProcessInAudioRecord:(int)arg0 channels:(int)arg1 duration:(int)arg2;
- (void)playerWillProcessAudioFrameInAudioRecord:(float **)arg0 samples:(int)arg1 timeStamp:(long long)arg2;
- (void)playerOnRenderAudioFrame:(id)arg0;
- (void)playerDidStall;
- (void)playerDidResume;
- (void)addInterruptObserver;
- (void)setPlayerPixelEnabled:(BOOL)arg0;
- (void)recreateWarterMarkWithScale:(double)arg0;
- (BOOL)isPlayerStall;
- (id)audioWriterInput;
- (void)monitorException:(id)arg0 code:(long long)arg1 description:(id)arg2;
- (void)setCurrentAudioTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setBufferAdaptor:(id)arg0;
- (void)setAudioWriterInput:(id)arg0;
- (BOOL)playerPixelEnabled;
- (void)renderVideoCover;
- (id)bufferAdaptor;
- (unsigned long long)nullBufferCount;
- (void)setIsPlayerStall:(BOOL)arg0;
- (BOOL)setupAudioInput;
- (void)setNullBufferCount:(unsigned long long)arg0;
- (id)initWithTargetView:(id)arg0 completed:(id /* block */)arg1;
- (void)updateTargetView:(id)arg0;
- (void)reportCVReturnError;
- (id)cvReturnErrorCode;
- (struct __CVBuffer { } *)copyPixelBufferWithPixelBuffer:(struct __CVBuffer { } *)arg0 width:(long long)arg1 height:(long long)arg2;
- (struct opaqueCMSampleBuffer { } *)transformBuffer:(id)arg0 timeStamp:(long long)arg1;
- (void)setCvReturnErrorCode:(id)arg0;
- (int)channels;
- (void)setCompleted:(id /* block */)arg0;
- (void)abort;
- (BOOL)isRecording;
- (id /* block */)completed;
- (void)setChannels:(int)arg0;
- (void).cxx_destruct;
- (void)setColorSpace:(struct CGColorSpace { } *)arg0;
- (int)sampleRate;
- (id)targetView;
- (id)observerSet;
- (void)setIsRecording:(BOOL)arg0;
- (void)stop;
- (void)setBeginTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setPlayer:(id)arg0;
- (double)seconds;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })endTime;
- (void)setTargetView:(id)arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGColorSpace { } *)colorSpace;
- (BOOL)prepare;
- (double)canvasScale;
- (void)cancel;
- (void)stopCaptureSession;
- (void)startCaptureSession;
- (void)start;
- (void)dealloc;
- (void)setEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setWriter:(id)arg0;
- (void)reset;
- (struct CGSize { double x0; double x1; })canvasSize;
- (id)writer;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })beginTime;
- (id)player;
- (void)setSampleRate:(int)arg0;
- (id)outputFileURL;
- (void)setOutputFileURL:(id)arg0;
- (void)setCanvasScale:(double)arg0;
- (double)maxDuration;
- (void)setMaxDuration:(double)arg0;
- (id)videoWriterInput;
- (void)setVideoWriterInput:(id)arg0;
- (id)configs;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentAudioTime;

@end
