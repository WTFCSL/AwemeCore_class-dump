//
//     Generated by private class-dump
//

@class NSArray, NSString, NSMutableDictionary;
@protocol HybridJSBServiceProtocol;

@interface HybridWebViewPureRuntime : NSObject <IESBridgeEngineInterceptor, BDXBridgeInterceptor, HybridRuntimeProtocol> {
    NSMutableDictionary *globalProps;
    NSArray *_bridgeNames;
    id<HybridJSBServiceProtocol> _jsbService;
    id /* block */ _decisionHandler;
    id /* block */ _navigateHandler;
}

@property (retain, nonatomic) id<HybridJSBServiceProtocol> jsbService;
@property (copy, nonatomic) id /* block */ decisionHandler;
@property (copy, nonatomic) id /* block */ navigateHandler;
@property (retain, nonatomic) NSArray *bridgeNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *globalProps;

- (void)sendEvent:(id)arg0 params:(id)arg1;
- (void)sendEvent:(id)arg0 params:(id)arg1 callback:(id /* block */)arg2;
- (void)setGlobalProps:(id)arg0;
- (id)globalProps;
- (BOOL)falconSchemeHandlerEnable:(id)arg0;
- (BOOL)bridgeEngine:(id)arg0 shouldHandleBridgeMessage:(id)arg1;
- (id)bridgeMethodInstanceWithName:(id)arg0;
- (void)setUpBridgeWithViewInstance:(id)arg0;
- (void)setupFalconWithUUID:(id)arg0 webview:(id)arg1;
- (void)registerBridgeMethods:(id)arg0;
- (void)registerBridgeMethodInstances:(id)arg0;
- (id /* block */)wrappedDecisionHandlerWithContext:(id)arg0 webView:(id)arg1 navigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)updateGlobalProps:(id)arg0 withView:(id)arg1;
- (void)configGlobalProps:(id)arg0 withView:(id)arg1;
- (id)supportedBridges;
- (void)setupGlobalFalconEnv;
- (void)setupSchemeHandlerWithView:(id)arg0 params:(id)arg1;
- (void)setDecisionHandler:(id /* block */)arg0;
- (void)setNavigateHandler:(id /* block */)arg0;
- (void)setJsbService:(id)arg0;
- (id)jsbService;
- (id /* block */)decisionHandler;
- (id /* block */)navigateHandler;
- (id)initWithDecisionHandler:(id /* block */)arg0 navigateHandler:(id /* block */)arg1;
- (id)bridgeNames;
- (BOOL)xBridgeShouldHandleMethod:(id)arg0 container:(id)arg1 params:(id)arg2;
- (void)setBridgeNames:(id)arg0;
- (void).cxx_destruct;
- (id)containerID;
- (long long)runtimeType;

@end
