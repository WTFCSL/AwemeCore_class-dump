//
//     Generated by private class-dump
//

@class HTSEventContext, CADisplayLink, NSString, IESLiveAudioPlayback, NSObject, IESLiveVoiceTranslater;
@protocol IESLiveRoomService, IESLiveAudioRecorderProvider, OS_dispatch_queue, IESLiveInternalRouter;

@interface IESLiveVoicePanelViewModel : NSObject {
    BOOL _preConnectEnable;
    BOOL _voiceTrans;
    BOOL _voiceMsg;
    BOOL _defaultVoiceMsg;
    BOOL _voiceMerge;
    id<IESLiveRoomService> _roomModel;
    HTSEventContext *_trackContext;
    IESLiveAudioPlayback *_audioPlayback;
    id<IESLiveAudioRecorderProvider> _recorder;
    IESLiveVoiceTranslater *_voiceTranslater;
    unsigned long long _status;
    NSString *_translateResult;
    NSString *_translateAvailablePartResult;
    long long _translateResultLengthLimit;
    id /* block */ _failure;
    id /* block */ _successTrans;
    id /* block */ _sendVoiceMessage;
    id /* block */ _volumeChanged;
    id<IESLiveInternalRouter> _internalRouter;
    CADisplayLink *_recorderMeterTimer;
    NSObject<OS_dispatch_queue> *_recordSerailQueue;
}

@property (retain, nonatomic) id<IESLiveInternalRouter> internalRouter;
@property (retain, nonatomic) CADisplayLink *recorderMeterTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *recordSerailQueue;
@property (nonatomic) unsigned long long status;
@property (nonatomic) BOOL preConnectEnable;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveAudioPlayback *audioPlayback;
@property (retain, nonatomic) id<IESLiveAudioRecorderProvider> recorder;
@property (retain, nonatomic) IESLiveVoiceTranslater *voiceTranslater;
@property (copy, nonatomic) NSString *translateResult;
@property (copy, nonatomic) NSString *translateAvailablePartResult;
@property (nonatomic) long long translateResultLengthLimit;
@property (nonatomic) BOOL voiceTrans;
@property (nonatomic) BOOL voiceMsg;
@property (nonatomic) BOOL defaultVoiceMsg;
@property (nonatomic) BOOL voiceMerge;
@property (copy, nonatomic) id /* block */ failure;
@property (copy, nonatomic) id /* block */ successTrans;
@property (copy, nonatomic) id /* block */ sendVoiceMessage;
@property (copy, nonatomic) id /* block */ volumeChanged;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)roomModel;
- (id)internalRouter;
- (void)setInternalRouter:(id)arg0;
- (void)startRecord;
- (void)cancelRecord;
- (void)setRoomModel:(id)arg0;
- (void)setVolumeChanged:(id /* block */)arg0;
- (id /* block */)volumeChanged;
- (id)recorderMeterTimer;
- (void)setRecorderMeterTimer:(id)arg0;
- (void)stopRecorderMeterTimer;
- (void)refreshRecorderMeter;
- (void)startRecorderMeterTimer;
- (BOOL)voiceMerge;
- (id)audioPlayback;
- (void)setVoiceTranslater:(id)arg0;
- (void)setVoiceTrans:(BOOL)arg0;
- (void)setVoiceMsg:(BOOL)arg0;
- (void)setDefaultVoiceMsg:(BOOL)arg0;
- (id)voiceTranslater;
- (void)setAudioPlayback:(id)arg0;
- (void)setVoiceMerge:(BOOL)arg0;
- (void)setSendVoiceMessage:(id /* block */)arg0;
- (id)recordSerailQueue;
- (void)setRecordSerailQueue:(id)arg0;
- (BOOL)defaultVoiceMsg;
- (BOOL)voiceMsg;
- (BOOL)voiceTrans;
- (void)trackMicButtonLongPressWithEntrance:(id)arg0;
- (void)trackRecordDidCanceledWithEntrance:(id)arg0;
- (void)sendRecordWithDuration:(double)arg0 maxDuration:(double)arg1;
- (BOOL)checkIfCanStartRecord;
- (void)showSetAlertView;
- (BOOL)preConnectEnable;
- (void)connectTranslate;
- (void)setTranslateResult:(id)arg0;
- (void)setTranslateAvailablePartResult:(id)arg0;
- (id /* block */)successTrans;
- (void)pauseTranslate;
- (id /* block */)sendVoiceMessage;
- (void)restartRecord;
- (void)translatePreConnect;
- (void)startTranslate;
- (void)cancelTranslate;
- (void)trackTranslateDidCompleted;
- (void)setPreConnectEnable:(BOOL)arg0;
- (id)translateResult;
- (id)translateAvailablePartResult;
- (long long)translateResultLengthLimit;
- (void)setTranslateResultLengthLimit:(long long)arg0;
- (void)setSuccessTrans:(id /* block */)arg0;
- (id)init;
- (void).cxx_destruct;
- (unsigned long long)status;
- (id)recorder;
- (void)setFailure:(id /* block */)arg0;
- (void)setStatus:(unsigned long long)arg0;
- (void)setRecorder:(id)arg0;
- (id /* block */)failure;

@end
