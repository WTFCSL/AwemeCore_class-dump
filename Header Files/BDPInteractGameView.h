//
//     Generated by private class-dump
//

@class NSString, BDPSonicInteractGameInstance, SonicView, BDPUniqueID, BDPVConsole, NSDictionary, BDPRuntimeInteractGame, BDPInteractGameSubView;
@protocol BDPInteractGameViewDelegate;

@interface BDPInteractGameView : UIView <SonicOnFrameDelegate, SonicViewPaintListener, BDPMonitorableObjectProtocol> {
    BOOL _isFirstFrame;
    NSDictionary *_extGameConfig;
    id<BDPInteractGameViewDelegate> _delegate;
    BDPUniqueID *_uniqueID;
    BDPRuntimeInteractGame *_runtime;
    SonicView *_sonicView;
    BDPVConsole *_vConsole;
    NSString *_sonicId;
    BDPSonicInteractGameInstance *_sonicInstance;
    BDPInteractGameSubView *_subGameView;
}

@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (weak, nonatomic) BDPRuntimeInteractGame *runtime;
@property (retain, nonatomic) SonicView *sonicView;
@property (retain, nonatomic) BDPVConsole *vConsole;
@property (retain, nonatomic) NSString *sonicId;
@property (retain, nonatomic) BDPSonicInteractGameInstance *sonicInstance;
@property (retain, nonatomic) BDPInteractGameSubView *subGameView;
@property (copy, nonatomic) NSDictionary *extGameConfig;
@property (weak, nonatomic) id<BDPInteractGameViewDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setSonicView:(id)arg0;
- (id)sonicView;
- (void)pausePresentCanvas;
- (void)resumePresentCanvas;
- (void)disableAdaptiveFpsMode:(int)arg0;
- (void)enableAdaptiveFpsMode:(int)arg0 lowestFps:(int)arg1 highestFps:(int)arg2 watchTouch:(BOOL)arg3;
- (void)onFrame;
- (void)fetchMonitorData:(id /* block */)arg0;
- (void)monitorDidStart;
- (void)monitorDidStop;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 runtime:(id)arg1 uniqueID:(id)arg2;
- (void)setVConsole:(id)arg0;
- (id)vConsole;
- (void)eventCpJsLoadStart;
- (void)stopExceptionMonitor;
- (void)startExceptionMonitor;
- (void)onFramebufferReady:(struct __CVBuffer { } *)arg0 withCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)operateFrameBufferState:(BOOL)arg0 extra:(id)arg1;
- (void)updateSonicViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateFramesPerSecond:(long long)arg0;
- (void)getPreferredFramesPerSecondWithComplete:(id /* block */)arg0;
- (void)getCanvasSnapshotWithComplete:(id /* block */)arg0;
- (void)setAppViewPause:(BOOL)arg0;
- (void)eventCpJsLoadResult:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 runtime:(id)arg1 subGameView:(id)arg2 uniqueID:(id)arg3;
- (void)setExtGameConfig:(id)arg0;
- (void)showVConsole:(id)arg0;
- (void)loadGameContent:(id /* block */)arg0;
- (id)sonicId;
- (void)setSonicId:(id)arg0;
- (void)setSubGameView:(id)arg0;
- (id)sonicInstance;
- (id)subGameView;
- (void)setSonicInstance:(id)arg0;
- (id)extGameConfig;
- (void)handleCastSettings:(id)arg0;
- (void)resume;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)pause;
- (id)runtime;
- (void)setRuntime:(id)arg0;

@end
