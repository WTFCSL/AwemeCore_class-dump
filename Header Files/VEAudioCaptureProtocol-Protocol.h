//
//     Generated by private class-dump
//

@protocol VEAudioCaptureProtocol <NSObject>

+ (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })audioDescription;

@property (copy, nonatomic) id /* block */ audioCaptureBlock;
@property (copy, nonatomic) id /* block */ audioConvertCallback;
@property (copy, nonatomic) id /* block */ audioBGMOutputCallback;
@property (copy, nonatomic) id /* block */ audioBGMResultCallback;
@property (copy, nonatomic) id /* block */ audioBGMStatusCallback;
@property (nonatomic) BOOL needConvert;

- (void)stopAudioCapture:(id)arg0;
- (void)startAudioCapture:(id /* block */)arg0 withPrivacyCert:(id)arg1;
- (id /* block */)audioConvertCallback;
- (BOOL)isAudioCaptureRuning;
- (void)releaseAudioCapture;
- (id /* block */)audioCaptureBlock;
- (void)setAudioCaptureBlock:(id /* block */)arg0;
- (void)setAudioConvertCallback:(id /* block */)arg0;
- (id /* block */)audioBGMOutputCallback;
- (void)setAudioBGMOutputCallback:(id /* block */)arg0;
- (id /* block */)audioBGMResultCallback;
- (void)setAudioBGMResultCallback:(id /* block */)arg0;
- (id /* block */)audioBGMStatusCallback;
- (void)setAudioBGMStatusCallback:(id /* block */)arg0;
- (BOOL)needConvert;
- (void)setNeedConvert:(BOOL)arg0;

@optional

- (void)setRecordVolume:(double)arg0;
- (double)recordVolume;
- (void)setMusicVolume:(double)arg0;
- (void)setAccompanyVolume:(double)arg0;
- (double)accompanyVolume;
- (void)setOriginalSingVolume:(double)arg0;
- (double)originalSingVolume;
- (void)setEnableEarBack:(BOOL)arg0;
- (void)echoEnable:(BOOL)arg0;
- (void)seekToAccompanyTime:(double)arg0 accompanyStartWritingTime:(double)arg1 originalSingTime:(double)arg2 originalSingStartWritingTime:(double)arg3;
- (void)accompanySeekToTime:(double)arg0;
- (void)originalSingSeekToTime:(double)arg0;
- (void)seekDuetKaraokeModeToTime:(double)arg0;
- (void)setDuetKaraokeModeMusic:(id)arg0 fromTime:(double)arg1;
- (void)setAccompanyMusicFile:(id)arg0 fromTime:(double)arg1 OriginalSingMusicFile:(id)arg2 startTime:(double)arg3;
- (double)getDuetKaraokeModeCurrentTime;
- (double)getAccompanyCurrentTime;
- (double)getOriginalSingCurrentTime;
- (void)mutedOrignalSing:(BOOL)arg0;
- (void)mutedAccompany:(BOOL)arg0;
- (void)routeChanged;
- (double)musicVolume;
- (void)play;
- (void)pause;

@end
