//
//     Generated by private class-dump
//

@class BDWKWebViewTerminateRescuer, NSString, BDXWebKitParams, UIProgressView, UIView, NSDictionary, MASConstraint, AnnieXMonitor, BDXWebFalconMonitorInterceptor, BDXWebViewLifeCycleDispatcher, UILabel;
@protocol BDPHostWebViewDelegate, BDXKitViewLifecycleProtocol;

@interface BDXWebView : IESWKWebView <BDPHostWebViewProtocol, WKNavigationDelegate, IESWebViewCommonDelegate, UIGestureRecognizerDelegate, BDWebSecureLinkSettingDelegate, BDXWebViewProtocol> {
    BOOL _didReportFirstScreen;
    BOOL _isFirstStartLoad;
    BOOL _isFirstFinishLoad;
    BOOL _webviewConfiged;
    BOOL _registeredAdBlockRules;
    BOOL _alreadyInjectSecPlugin;
    BOOL _keyboardShowing;
    BOOL _scrollviewScrollEnabledBeforeKeyboardShow;
    id<BDXKitViewLifecycleProtocol> lifecycleDelegate;
    NSString *_containerID;
    NSString *_requestURL;
    UIProgressView *_progressView;
    id /* block */ _webInterceptorBlock;
    id /* block */ _allowSkippingWebDidLoadFailedBlock;
    id _reporter;
    BDXWebKitParams *_params;
    UILabel *_sourceUrlLabel;
    BDXWebFalconMonitorInterceptor *_falconMonitor;
    long long _domStatusCode;
    BDXWebViewLifeCycleDispatcher *_lifeCycleDispatcher;
    NSDictionary *_globalProps;
    MASConstraint *_sourceLabelOffsetY;
    BDWKWebViewTerminateRescuer *_webViewTerminateRescuer;
    AnnieXMonitor *_annieXMonitor;
    struct CGPoint { double x; double y; } _scrollviewContentOffsetBeforeKeyboardShow;
}

@property (weak, nonatomic) id<BDPHostWebViewDelegate> bdp_webViewDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL bdxw_isTurnOnBlankDetect;
@property (nonatomic) BOOL bdxw_haveDetected;
@property (retain, nonatomic) id reporter;
@property (retain, nonatomic) BDXWebKitParams *params;
@property (nonatomic) BOOL didReportFirstScreen;
@property (nonatomic) BOOL isFirstStartLoad;
@property (nonatomic) BOOL isFirstFinishLoad;
@property (retain, nonatomic) UILabel *sourceUrlLabel;
@property (nonatomic) BOOL webviewConfiged;
@property (retain, nonatomic) BDXWebFalconMonitorInterceptor *falconMonitor;
@property (nonatomic) long long domStatusCode;
@property (retain, nonatomic) BDXWebViewLifeCycleDispatcher *lifeCycleDispatcher;
@property (copy, nonatomic) NSDictionary *globalProps;
@property (nonatomic) BOOL registeredAdBlockRules;
@property (nonatomic) BOOL alreadyInjectSecPlugin;
@property (retain, nonatomic) MASConstraint *sourceLabelOffsetY;
@property (nonatomic) BOOL keyboardShowing;
@property (nonatomic) struct CGPoint { double x; double y; } scrollviewContentOffsetBeforeKeyboardShow;
@property (nonatomic) BOOL scrollviewScrollEnabledBeforeKeyboardShow;
@property (retain, nonatomic) BDWKWebViewTerminateRescuer *webViewTerminateRescuer;
@property (retain, nonatomic) AnnieXMonitor *annieXMonitor;
@property (copy, nonatomic) NSString *requestURL;
@property (retain, nonatomic) UIProgressView *progressView;
@property (copy, nonatomic) id /* block */ webInterceptorBlock;
@property (copy, nonatomic) id /* block */ allowSkippingWebDidLoadFailedBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *containerID;
@property (readonly, nonatomic) UIView *rawView;
@property (readonly, nonatomic) id kitBridge;
@property (readonly, nonatomic) BOOL isLoading;
@property (weak, nonatomic) id<BDXKitViewLifecycleProtocol> lifecycleDelegate;

+ (void)registerCustomUserAgentOnce;
+ (BOOL)useTTnetWithContext:(id)arg0 url:(id)arg1;
+ (id)customUserAgent;
+ (void)initialize;

- (void)setupMonitor;
- (const void *)temp_computedKeyFromString:(id)arg0;
- (void)registerXBridgeMethod:(id)arg0;
- (void)ssrHydrateWithURL:(id)arg0 templateData:(id)arg1 initData:(id)arg2;
- (void)sendEvent:(id)arg0 params:(id)arg1;
- (id)rawView;
- (id)lifecycleDelegate;
- (void)setLifecycleDelegate:(id)arg0;
- (void)sendEvent:(id)arg0 params:(id)arg1 callback:(id /* block */)arg2;
- (void)onShow:(id)arg0;
- (void)onHide:(id)arg0;
- (void)setGlobalProps:(id)arg0;
- (id)globalProps;
- (void)configWithParams:(id)arg0;
- (void)registerXBridgeMethodInstance:(id)arg0;
- (void)configGlobalProps:(id)arg0;
- (void)setupBridge;
- (void)setupNotification;
- (id)tracertMonitor;
- (void)registerUserAgent:(id /* block */)arg0;
- (id)ies_namespace;
- (void)onAppResignActive:(id)arg0;
- (void)tryGoBackWhenSecLinkWithBolck:(id /* block */)arg0;
- (void)errorViewClick;
- (id)lifeCycleMonitor;
- (void)reloadWithParams:(id)arg0;
- (void)onAppBecomeActive:(id)arg0;
- (id)getXBridgeMethorInstanceWithName:(id)arg0;
- (id)kitBridge;
- (void)onKeyBoardChange:(id)arg0 keyBoardEvent:(unsigned long long)arg1;
- (void)setAllBounces:(BOOL)arg0;
- (void)stopAudioPlay;
- (void)pauseAudioAndVideoPlay;
- (void)registerTitleObserver;
- (void)updateSourceLabelOffsetY:(double)arg0 reset:(BOOL)arg1;
- (void)hideProgressView:(BOOL)arg0;
- (BOOL)isShowProgressView;
- (void)handleBroadcastNotification:(id)arg0;
- (id)paramDic;
- (void)setupProgressView;
- (id)containerOpenTime;
- (id)containerInitTimeStamp;
- (void)setLifeCycleDispatcher:(id)arg0;
- (id)lifeCycleDispatcher;
- (id)bdp_webViewDelegate;
- (void)setBdp_webViewDelegate:(id)arg0;
- (id)sourceUrlLabel;
- (void)didRedirect;
- (void)didReceiveShareRefreshNotification:(id)arg0;
- (void)webViewWillDisappear:(id)arg0;
- (id)p_urlByAppendCommonParamsIfNeeded:(id)arg0;
- (id)p_urlByAppendAddtionalParams:(id)arg0;
- (void)setSourceUrlString:(id)arg0;
- (void)setupSourceLabel;
- (void)setSourceUrlLabel:(id)arg0;
- (void)setSourceLabelOffsetY:(id)arg0;
- (id)sourceLabelOffsetY;
- (id)urlByAppendingQueryParams:(id)arg0 toURL:(id)arg1;
- (BOOL)p_matchedHostWhiteListWithUrl:(id)arg0;
- (void)setAllowSkippingWebDidLoadFailedBlock:(id /* block */)arg0;
- (void)setWebInterceptorBlock:(id /* block */)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1 bridgeClass:(Class)arg2;
- (id)annieXMonitor;
- (void)trackLifeCycleEvent:(id)arg0 withParam:(id)arg1;
- (id)resolveURL;
- (void)setAnnieXMonitor:(id)arg0;
- (BOOL)bdxw_isTurnOnBlankDetect;
- (void)bdxw_tryDetectWebViewBlankIfNeeded;
- (void)bdxw_removeFromSuperview;
- (BOOL)bdxw_haveDetected;
- (BOOL)bdxw_shouldDetectBlank;
- (void)setBdxw_haveDetected:(BOOL)arg0;
- (void)setBdxw_isTurnOnBlankDetect:(BOOL)arg0;
- (void)bdxw_switchXWebViewBlankDetect:(BOOL)arg0;
- (id)fetchWebViewTerminateRescuer;
- (id)p_configGlobalPropsOld:(id)arg0;
- (void)configWebView;
- (BOOL)alreadyInjectSecPlugin;
- (void)configSecureLintPluginWithParams:(id)arg0;
- (void)setAlreadyInjectSecPlugin:(BOOL)arg0;
- (void)setupOfflineConfig;
- (BOOL)webviewConfiged;
- (void)setWebviewConfiged:(BOOL)arg0;
- (void)setupPrefetch;
- (void)setupLifeCycle;
- (void)setupSaveImageGesture;
- (void)updateNavigationWithTitle:(id)arg0;
- (BOOL)_disableSelectMenus;
- (void)searchItemAction;
- (void)updateTitleByWebDocumentTitle;
- (void)updateSourceLabelColor;
- (BOOL)usePIA:(id)arg0;
- (id)getPIALifeCycle;
- (void)resetWebViewTerminateRescuerIfNeeded;
- (void)__load;
- (id)p_urlByAppendGlobalPropsParams:(id)arg0;
- (void)setRegisteredAdBlockRules:(BOOL)arg0;
- (id)falconMonitor;
- (void)resetMenuItems;
- (BOOL)registeredAdBlockRules;
- (void)setKeyboardShowing:(BOOL)arg0;
- (void)setScrollviewContentOffsetBeforeKeyboardShow:(struct CGPoint { double x0; double x1; })arg0;
- (void)setScrollviewScrollEnabledBeforeKeyboardShow:(BOOL)arg0;
- (void)setFalconMonitor:(id)arg0;
- (struct CGPoint { double x0; double x1; })scrollviewContentOffsetBeforeKeyboardShow;
- (BOOL)scrollviewScrollEnabledBeforeKeyboardShow;
- (id /* block */)webInterceptorBlock;
- (BOOL)isFirstStartLoad;
- (void)setIsFirstStartLoad:(BOOL)arg0;
- (void)__setSubViewsBounces:(BOOL)arg0 forView:(id)arg1;
- (long long)resourceStatusWithResFrom:(id)arg0;
- (long long)domStatusCode;
- (BOOL)isFirstFinishLoad;
- (void)setIsFirstFinishLoad:(BOOL)arg0;
- (BOOL)allowSkipErrorWithCodes:(id)arg0 errorCode:(long long)arg1;
- (id /* block */)allowSkippingWebDidLoadFailedBlock;
- (id)webViewTerminateRescuer;
- (void)setDomStatusCode:(long long)arg0;
- (id)containerInitStart;
- (id)containerInitEnd;
- (void)setupPIAEnv;
- (id)globalPropsScript:(id)arg0;
- (void)setWebViewTerminateRescuer:(id)arg0;
- (BOOL)didReportFirstScreen;
- (void)setDidReportFirstScreen:(BOOL)arg0;
- (void)webView:(id)arg0 didFailProvisionalNavigation:(id)arg1 withError:(id)arg2;
- (void)buildMenuWithBuilder:(id)arg0;
- (void)removeFromSuperview;
- (void)addDelegate:(id)arg0;
- (id)webView;
- (void).cxx_destruct;
- (void)webView:(id)arg0 decidePolicyForNavigationAction:(id)arg1 decisionHandler:(id /* block */)arg2;
- (void)webView:(id)arg0 didFinishNavigation:(id)arg1;
- (id)containerID;
- (id)reporter;
- (void)load;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)webView:(id)arg0 didFailNavigation:(id)arg1 withError:(id)arg2;
- (void)webView:(id)arg0 didReceiveServerRedirectForProvisionalNavigation:(id)arg1;
- (id)requestURL;
- (void)webView:(id)arg0 didCommitNavigation:(id)arg1;
- (id)progressView;
- (void)setProgressView:(id)arg0;
- (void)setReporter:(id)arg0;
- (void)viewDidAppear;
- (void)webView:(id)arg0 decidePolicyForNavigationResponse:(id)arg1 decisionHandler:(id /* block */)arg2;
- (BOOL)canPerformAction:(SEL)arg0 withSender:(id)arg1;
- (void)setRequestURL:(id)arg0;
- (id)params;
- (void)layoutSubviews;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (id)progressTintColor;
- (void)webView:(id)arg0 didStartProvisionalNavigation:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg0;
- (void)handleLongPressGesture:(id)arg0;
- (id)loadRequest:(id)arg0;
- (void)setParams:(id)arg0;
- (void)viewDidDisappear;
- (void)reloadWithContext:(id)arg0;
- (void)updateMenuItems;
- (BOOL)keyboardShowing;
- (void)updateNavigationTitle;
- (id)webViewBackgroundColor;

@end
