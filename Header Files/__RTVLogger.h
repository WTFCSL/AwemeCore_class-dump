//
//     Generated by private class-dump
//

@class NSString;
@protocol RxInjector;

@interface __RTVLogger : NSObject <RTVLoggerInterface> {
    struct SpinLock { void /* function */ **_vptr$LockingInterface; struct atomic_flag { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { _Atomic BOOL __a_value; } __a_; } locked; } _spin;
    id<RxInjector> _injector;
    NSString *_moduleTag;
}

@property (copy, nonatomic) NSString *moduleTag;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)rxInjectorCreateWithArgs:(id)arg0 injector:(id)arg1;

- (void)infoTags:(id)arg0 file:(const char *)arg1 line:(int)arg2 contents:(id)arg3;
- (void)errorTags:(id)arg0 file:(const char *)arg1 line:(int)arg2 contents:(id)arg3;
- (id)initWithModuleTag:(id)arg0;
- (void)__addContents:(id)arg0 tags:(id)arg1 file:(const char *)arg2 line:(int)arg3 logLevel:(unsigned long long)arg4;
- (void)warningTags:(id)arg0 file:(const char *)arg1 line:(int)arg2 contents:(id)arg3;
- (id)moduleTag;
- (void)setModuleTag:(id)arg0;
- (void).cxx_destruct;
- (id)injector;
- (id).cxx_construct;

@end
