//
//     Generated by private class-dump
//

@class AWECampaignTaskStateActionModel, NSArray, NSString, AWECampaignTaskRuleMatcherModel, AWECampaignFloatViewModel, AWECampaignEvadeRuleModel, NSDictionary;

@interface AWECampaignWatchTaskModel : MTLModel <MTLJSONSerializing> {
    double _taskValidInterval;
    long long _countDownDuration;
    long long _countDownInterval;
    long long _detailRefresh;
    NSArray *_triggers;
    NSArray *_scene;
    NSArray *_stateOutputer;
    NSString *_refer;
    AWECampaignFloatViewModel *_floatViewModel;
    AWECampaignTaskRuleMatcherModel *_taskRuleMathcerModel;
    AWECampaignEvadeRuleModel *_evadeRuleModel;
    AWECampaignTaskStateActionModel *_taskActionModel;
    NSDictionary *_logParam;
}

@property (nonatomic) double taskValidInterval;
@property (nonatomic) long long countDownDuration;
@property (nonatomic) long long countDownInterval;
@property (nonatomic) long long detailRefresh;
@property (copy, nonatomic) NSArray *triggers;
@property (copy, nonatomic) NSArray *scene;
@property (copy, nonatomic) NSArray *stateOutputer;
@property (copy, nonatomic) NSString *refer;
@property (retain, nonatomic) AWECampaignFloatViewModel *floatViewModel;
@property (retain, nonatomic) AWECampaignTaskRuleMatcherModel *taskRuleMathcerModel;
@property (retain, nonatomic) AWECampaignEvadeRuleModel *evadeRuleModel;
@property (retain, nonatomic) AWECampaignTaskStateActionModel *taskActionModel;
@property (copy, nonatomic) NSDictionary *logParam;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)JSONKeyPathsByPropertyKey;
+ (id)JSONTransformerForKey:(id)arg0;

- (void)setRefer:(id)arg0;
- (id)refer;
- (void)setCountDownInterval:(long long)arg0;
- (long long)countDownInterval;
- (void)setLogParam:(id)arg0;
- (id)logParam;
- (id)taskRuleMathcerModel;
- (id)floatViewModel;
- (id)evadeRuleModel;
- (id)taskActionModel;
- (double)taskValidInterval;
- (void)setTaskValidInterval:(double)arg0;
- (long long)detailRefresh;
- (void)setDetailRefresh:(long long)arg0;
- (id)stateOutputer;
- (void)setStateOutputer:(id)arg0;
- (void)setFloatViewModel:(id)arg0;
- (void)setTaskRuleMathcerModel:(id)arg0;
- (void)setEvadeRuleModel:(id)arg0;
- (void)setTaskActionModel:(id)arg0;
- (void)setTriggers:(id)arg0;
- (id)triggers;
- (void)setScene:(id)arg0;
- (void).cxx_destruct;
- (id)scene;
- (long long)countDownDuration;
- (void)setCountDownDuration:(long long)arg0;

@end
