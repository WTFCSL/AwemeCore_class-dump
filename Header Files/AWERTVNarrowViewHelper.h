//
//     Generated by private class-dump
//

@class RTVVoipSession, NSString, NSNumber, RTVAnimatorViewPanGestureRecognizer;
@protocol RTVVoipContextManagerInterface, RxInjector, RTVTopViewControllerInterface;

@interface AWERTVNarrowViewHelper : NSObject <RTVNarrowViewHelperInterface> {
    id<RxInjector> _injector;
    RTVAnimatorViewPanGestureRecognizer *_viewGesture;
    id<RTVTopViewControllerInterface> _topViewControllerGetter;
    id<RTVVoipContextManagerInterface> _voipContextManager;
    RTVVoipSession *_session;
    NSNumber *_keyboardHeight;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, nonatomic) RTVAnimatorViewPanGestureRecognizer *viewGesture;
@property (readonly, nonatomic) id<RTVTopViewControllerInterface> topViewControllerGetter;
@property (readonly, nonatomic) id<RTVVoipContextManagerInterface> voipContextManager;
@property (readonly, weak, nonatomic) RTVVoipSession *session;
@property (retain, nonatomic) NSNumber *keyboardHeight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rxAwakeFromPropertyInjection;
- (void)renderModel:(id)arg0 context:(id)arg1;
- (void)__addObservers;
- (id)voipContextManager;
- (void)__feedDidAppear;
- (void)__keyboardWillShow:(id)arg0;
- (void)__keyboardWillHide:(id)arg0;
- (double)__heightInNoti:(id)arg0;
- (id)viewGesture;
- (id)topViewControllerGetter;
- (id)__defaultSafeAreas;
- (BOOL)__isFirstLevelPage;
- (long long)__tabbarSelectedButtonType;
- (id)__feedSideSafeArea;
- (id)__currentTopViewController;
- (id)__navBarSafeArea;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalFrameWithSuggestFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 useDefaultSafeArea:(BOOL)arg1 attachCorner:(BOOL)arg2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalFrameWithSuggestFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 useDefaultSafeArea:(BOOL)arg1 attachCorner:(BOOL)arg2 preferredAlignment:(long long)arg3 verticalAlignment:(long long)arg4;
- (id)narrowViewExtraSafeAreas;
- (id)__line:(id)arg0 minusRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (id)__flattenArray:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalFrameWithSuggestFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 useDefaultSafeArea:(BOOL)arg1;
- (long long)verticalAlignmentWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)horizontalAlignmentWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)callIconStringWithSession:(id)arg0 type:(long long)arg1;
- (id)stringForWaitingWithSession:(id)arg0;
- (id)__tcCurrentViewController;
- (id)keyboardHeight;
- (void).cxx_destruct;
- (void)setKeyboardHeight:(id)arg0;
- (id)session;
- (id)injector;
- (void)dealloc;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })__safeAreaInsets;

@end
