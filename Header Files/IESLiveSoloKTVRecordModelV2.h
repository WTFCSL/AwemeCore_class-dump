//
//     Generated by private class-dump
//

@class IESLiveSoloKTVApi, NSString, IESSoloKTVTuningViewModel, HTSEventContext, IESSoloKTVDraftMainModel, IESSoloKTVMusicManager, IESSoloKTVResourceManager, IESLiveSoloKTVEditModelV2, IESSoloKTVAudioRecordManager, IESLiveKtvSongStruct;

@interface IESLiveSoloKTVRecordModelV2 : NSObject {
    BOOL _needShowSkip;
    BOOL _autoStartRecord;
    BOOL _notFirstShowPanel;
    int _source;
    IESLiveKtvSongStruct *_currentSong;
    IESSoloKTVDraftMainModel *_draftModel;
    IESSoloKTVAudioRecordManager *_recordManager;
    IESSoloKTVResourceManager *_resourceManager;
    long long _downloadState;
    IESSoloKTVTuningViewModel *_tuningViewModel;
    IESLiveSoloKTVEditModelV2 *_editModel;
    long long _sessionId;
    double _currentPlayTime;
    NSString *_enterSource;
    NSString *_pageFrom;
    HTSEventContext *_trackContext;
    IESSoloKTVMusicManager *_musicManager;
    double _recordStartTS;
    double _recordDuration;
    double _downloadTime;
    id /* block */ _onPlayEnd;
    id /* block */ _onPlayingTimeChanged;
    IESLiveSoloKTVApi *_api;
    double _recordStartTime;
    double _downloadStartTime;
}

@property (retain, nonatomic) IESLiveSoloKTVApi *api;
@property (nonatomic) double recordStartTime;
@property (nonatomic) double downloadStartTime;
@property (nonatomic) int source;
@property (retain, nonatomic) IESLiveKtvSongStruct *currentSong;
@property (retain, nonatomic) IESSoloKTVDraftMainModel *draftModel;
@property (retain, nonatomic) IESSoloKTVAudioRecordManager *recordManager;
@property (retain, nonatomic) IESSoloKTVResourceManager *resourceManager;
@property (nonatomic) long long downloadState;
@property (retain, nonatomic) IESSoloKTVTuningViewModel *tuningViewModel;
@property (retain, nonatomic) IESLiveSoloKTVEditModelV2 *editModel;
@property (nonatomic) long long sessionId;
@property (nonatomic) BOOL needShowSkip;
@property (nonatomic) double currentPlayTime;
@property (nonatomic) BOOL autoStartRecord;
@property (copy, nonatomic) NSString *enterSource;
@property (copy, nonatomic) NSString *pageFrom;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (weak, nonatomic) IESSoloKTVMusicManager *musicManager;
@property (nonatomic) BOOL notFirstShowPanel;
@property (nonatomic) double recordStartTS;
@property (nonatomic) double recordDuration;
@property (nonatomic) double downloadTime;
@property (copy, nonatomic) id /* block */ onPlayEnd;
@property (copy, nonatomic) id /* block */ onPlayingTimeChanged;

- (void)setEnterSource:(id)arg0;
- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)enterSource;
- (double)currentPlayTime;
- (void)setRecordDuration:(double)arg0;
- (double)recordDuration;
- (double)recordStartTime;
- (void)setRecordStartTime:(double)arg0;
- (void)setCurrentPlayTime:(double)arg0;
- (id)recordManager;
- (void)setRecordManager:(id)arg0;
- (void)setDownloadTime:(double)arg0;
- (double)downloadTime;
- (void)setDraftModel:(id)arg0;
- (id)draftModel;
- (id)editModel;
- (void)setEditModel:(id)arg0;
- (id)musicManager;
- (void)setMusicManager:(id)arg0;
- (BOOL)notFirstShowPanel;
- (void)setNotFirstShowPanel:(BOOL)arg0;
- (void)setPageFrom:(id)arg0;
- (id)initWithSong:(id)arg0 source:(int)arg1 enterSource:(id)arg2;
- (void)setAutoStartRecord:(BOOL)arg0;
- (void)releaseByteAudio;
- (id)pageFrom;
- (void)pauseRecordFromResign:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)setOnPlayEnd:(id /* block */)arg0;
- (void)setOnPlayingTimeChanged:(id /* block */)arg0;
- (id)tuningViewModel;
- (BOOL)canOpenEarReturn;
- (void)updateEarReturn:(BOOL)arg0;
- (void)fetchAndDownloadData:(id /* block */)arg0 completion:(id /* block */)arg1 allCompletion:(id /* block */)arg2;
- (BOOL)autoStartRecord;
- (BOOL)isFirstPartDownloaded;
- (BOOL)isResourceDownloaded;
- (BOOL)userOrigin;
- (void)switchOrigin:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)requestStartKTV:(id /* block */)arg0;
- (void)restart:(id /* block */)arg0 completion:(id /* block */)arg1;
- (void)fillEndInfo:(id)arg0;
- (void)requestEndKTV:(double)arg0 completion:(id /* block */)arg1;
- (id)currentSong;
- (void)setCurrentSong:(id)arg0;
- (void)setNeedShowSkip:(BOOL)arg0;
- (BOOL)needShowSkip;
- (double)recordStartTS;
- (void)setRecordStartTS:(double)arg0;
- (void)resumeRecordWithDelay:(double)arg0 fromResign:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setTuningViewModel:(id)arg0;
- (id /* block */)onPlayEnd;
- (id /* block */)onPlayingTimeChanged;
- (void)trackRecordManagerState:(long long)arg0;
- (void)downloadRecordData:(id /* block */)arg0 completion:(id /* block */)arg1 allCompletion:(id /* block */)arg2;
- (void)fetchRecordData:(id /* block */)arg0;
- (void)requestTemplateList:(id /* block */)arg0;
- (void)dispatchDownloadState:(int)arg0 userOrigin:(BOOL)arg1 song:(id)arg2 video:(id)arg3 error:(id)arg4 completion:(id /* block */)arg5;
- (void)trackDownloadUserWaitingTime:(double)arg0;
- (void)downloadRetry:(long long)arg0 userOrigin:(BOOL)arg1 completion:(id /* block */)arg2 allCompletion:(id /* block */)arg3;
- (void)trackStartSingState;
- (void)saveAudioToDraft:(id)arg0 startTime:(double)arg1 duration:(double)arg2;
- (void)setDownloadState:(long long)arg0;
- (int)source;
- (void)setSessionId:(long long)arg0;
- (void).cxx_destruct;
- (long long)sessionId;
- (id)resourceManager;
- (double)downloadStartTime;
- (void)setSource:(int)arg0;
- (void)setDownloadStartTime:(double)arg0;
- (long long)downloadState;
- (void)seekTo:(double)arg0;
- (id)api;
- (void)setResourceManager:(id)arg0;
- (void)setApi:(id)arg0;

@end
