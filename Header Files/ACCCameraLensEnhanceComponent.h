//
//     Generated by private class-dump
//

@class NSString;
@protocol ACCCameraService, ACCRecordFlowService, ACCRecordSwitchModeService, ACCCameraSwapService, ACCRecordPropService;

@interface ACCCameraLensEnhanceComponent : ACCFeatureComponent <ACCCameraLifeCircleEvent, ACCCameraControlEvent, ACCRecordSwitchModeServiceSubscriber, ACCRecordPropServiceSubscriber, ACCRecordFlowServiceSubscriber> {
    BOOL _isCapture;
    BOOL _enableLensAlgorithm;
    id<ACCRecordFlowService> _flowService;
    id<ACCCameraService> _cameraService;
    id<ACCCameraSwapService> _cameraSwapService;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCRecordPropService> _propService;
}

@property (retain, nonatomic) id<ACCRecordFlowService> flowService;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (retain, nonatomic) id<ACCCameraSwapService> cameraSwapService;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (nonatomic) BOOL isCapture;
@property (nonatomic) BOOL enableLensAlgorithm;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (unsigned long long)preferredLoadPhase;
- (id)flowService;
- (id)switchModeService;
- (void)flowServiceWillBeginTakePicture;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (void)cameraService:(id)arg0 startVideoCaptureWithError:(id)arg1;
- (void)cameraService:(id)arg0 stopVideoCaptureWithError:(id)arg1;
- (void)setFlowService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (id)propService;
- (void)setPropService:(id)arg0;
- (void)propServiceDidApplyProp:(id)arg0 success:(BOOL)arg1;
- (id)cameraSwapService;
- (void)setCameraSwapService:(id)arg0;
- (void)onWillSwitchToCameraPosition:(long long)arg0;
- (void)onDidSwitchToCameraPosition:(long long)arg0;
- (void)updateLensEnhanceAlgorithmStateWithWillSwitch:(BOOL)arg0;
- (void)turnCameraLensAlgorithm:(BOOL)arg0;
- (BOOL)enableLensAlgorithm;
- (void)setEnableLensAlgorithm:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setIsCapture:(BOOL)arg0;
- (BOOL)isCapture;

@end
