//
//     Generated by private class-dump
//

@class UIColor, NSArray, LOTBezierData, NSNumber;

@interface LOTKeyframe : NSObject {
    BOOL _isHold;
    NSNumber *_keyframeTime;
    double _floatValue;
    UIColor *_colorValue;
    LOTBezierData *_pathData;
    NSArray *_arrayValue;
    struct CGPoint { double x; double y; } _inTangent;
    struct CGPoint { double x; double y; } _outTangent;
    struct CGPoint { double x; double y; } _spatialInTangent;
    struct CGPoint { double x; double y; } _spatialOutTangent;
    struct CGPoint { double x; double y; } _pointValue;
    struct CGSize { double width; double height; } _sizeValue;
}

@property (readonly, nonatomic) NSNumber *keyframeTime;
@property (readonly, nonatomic) BOOL isHold;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } inTangent;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } outTangent;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } spatialInTangent;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } spatialOutTangent;
@property (readonly, nonatomic) double floatValue;
@property (readonly, nonatomic) struct CGPoint { double x; double y; } pointValue;
@property (readonly, nonatomic) struct CGSize { double width; double height; } sizeValue;
@property (readonly, nonatomic) UIColor *colorValue;
@property (readonly, nonatomic) LOTBezierData *pathData;
@property (readonly, nonatomic) NSArray *arrayValue;

- (struct CGPoint { double x0; double x1; })_pointFromValueDict:(id)arg0;
- (struct CGPoint { double x0; double x1; })_pointFromValueArray:(id)arg0;
- (void)setupOutputWithData:(id)arg0;
- (struct CGPoint { double x0; double x1; })spatialInTangent;
- (struct CGPoint { double x0; double x1; })spatialOutTangent;
- (id)initWithLOTKeyframe:(id)arg0;
- (id)_colorValueFromArray:(id)arg0;
- (id)initWithKeyframe:(id)arg0;
- (id)copyWithData:(id)arg0;
- (void)remapValueWithBlock:(id /* block */)arg0;
- (id)pathData;
- (id)keyframeTime;
- (BOOL)isHold;
- (struct CGPoint { double x0; double x1; })outTangent;
- (struct CGPoint { double x0; double x1; })inTangent;
- (double)floatValue;
- (struct CGPoint { double x0; double x1; })pointValue;
- (void).cxx_destruct;
- (void)setData:(id)arg0;
- (id)arrayValue;
- (id)initWithValue:(id)arg0;
- (struct CGSize { double x0; double x1; })sizeValue;
- (id)colorValue;

@end
