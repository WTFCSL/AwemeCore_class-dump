//
//     Generated by private class-dump
//

@class NSString, NSTimer, NSMutableSet, YYTextWeakProxy, AWEFeedAdControlResponse, AWEAwemeResponseModel;
@protocol AWEHttpTask;

@interface AWEFeedAdController : NSObject <AWEFeedAdControllerProtocol> {
    BOOL _enableRerank;
    BOOL _isInitFetch;
    BOOL _isOpenSSR;
    BOOL _isOpenSSRWithSplash;
    BOOL _moveBackOpenSSRAdProbably;
    id /* block */ _didReload;
    double _timeIntervalLowerBoundForLongTimeNoAd;
    double _timeIntervalLowerBoundForNextRequest;
    double _timeIntervalUpperBoundForTooSoonToShowAnotherAd;
    id /* block */ _updateDataSource;
    id /* block */ _contextProvider;
    double _lastAdReadTime;
    double _lastRequestTime;
    NSTimer *_adReadTimer;
    NSTimer *_requestTimer;
    YYTextWeakProxy *_timerProxy;
    id<AWEHttpTask> _networkTask;
    long long _backmostReadIndex;
    long long _currentAwemeIndex;
    NSMutableSet *_awemeIDsRequestedOn;
    AWEAwemeResponseModel *_recentFeedResponse;
    AWEFeedAdControlResponse *_reRankResponse;
}

@property (nonatomic) double lastAdReadTime;
@property (nonatomic) double lastRequestTime;
@property (retain, nonatomic) NSTimer *adReadTimer;
@property (retain, nonatomic) NSTimer *requestTimer;
@property (retain, nonatomic) YYTextWeakProxy *timerProxy;
@property (retain, nonatomic) id<AWEHttpTask> networkTask;
@property (nonatomic) long long backmostReadIndex;
@property (nonatomic) long long currentAwemeIndex;
@property (retain, nonatomic) NSMutableSet *awemeIDsRequestedOn;
@property (retain, nonatomic) AWEAwemeResponseModel *recentFeedResponse;
@property (retain, nonatomic) AWEFeedAdControlResponse *reRankResponse;
@property (copy, nonatomic) id /* block */ contextProvider;
@property (copy, nonatomic) id /* block */ updateDataSource;
@property (copy, nonatomic) id /* block */ didReload;
@property (readonly, nonatomic) double timeIntervalLowerBoundForLongTimeNoAd;
@property (readonly, nonatomic) double timeIntervalUpperBoundForTooSoonToShowAnotherAd;
@property (readonly, nonatomic) double timeIntervalLowerBoundForNextRequest;
@property (nonatomic) BOOL isInitFetch;
@property (nonatomic) BOOL enableRerank;
@property (nonatomic) BOOL isOpenSSR;
@property (nonatomic) BOOL isOpenSSRWithSplash;
@property (nonatomic) BOOL moveBackOpenSSRAdProbably;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)awemeReceived:(id)arg0;

- (long long)currentAwemeIndex;
- (double)lastRequestTime;
- (void)setLastRequestTime:(double)arg0;
- (void)setBackmostReadIndex:(long long)arg0;
- (id)awemeIDsRequestedOn;
- (void)updateRequestTime;
- (BOOL)isDisableSSRPolicy;
- (void)setIsOpenSSR:(BOOL)arg0;
- (void)_updateCurrentAwemeIndex:(long long)arg0;
- (void)setReRankResponse:(id)arg0;
- (id)networkTask;
- (void)setNetworkTask:(id)arg0;
- (void)updateAdReadTime;
- (long long)backmostReadIndex;
- (void)tryReloadWithContext:(id)arg0;
- (void)setLastAdReadTime:(double)arg0;
- (id)adReadTimer;
- (double)timeIntervalLowerBoundForLongTimeNoAd;
- (id)timerProxy;
- (void)setAdReadTimer:(id)arg0;
- (double)timeIntervalLowerBoundForNextRequest;
- (void)setRecentFeedResponse:(id)arg0;
- (void)setEnableRerank:(BOOL)arg0;
- (id)recentFeedResponse;
- (double)lastAdReadTime;
- (BOOL)isOpenSSR;
- (double)timeIntervalUpperBoundForTooSoonToShowAnotherAd;
- (BOOL)enableRerank;
- (void)trackAdReRankIfNeededWithStatus:(id)arg0 message:(id)arg1 currentAwemeArr:(id)arg2 returnAwemeArr:(id)arg3 currentIndex:(long long)arg4 requestId:(id)arg5 paramsDict:(id)arg6;
- (void)trackAdOpenSSRIfNeededWithStatus:(id)arg0 message:(id)arg1 currentAwemeArr:(id)arg2 returnAwemeArr:(id)arg3 currentIndex:(long long)arg4 requestId:(id)arg5 paramsDict:(id)arg6;
- (void)trackAdReloadWithRemovedAwemes:(id)arg0 insertedAwemes:(id)arg1 success:(BOOL)arg2 info:(id)arg3 isNetowrkError:(BOOL)arg4 requestID:(id)arg5 logReqID:(id)arg6;
- (void)addRerankResultMonitorWithType:(long long)arg0 requestTime:(double)arg1 insertedAwemes:(id)arg2 removedAwemes:(id)arg3 requestId:(id)arg4;
- (BOOL)moveBackOpenSSRAdProbably;
- (BOOL)isOpenSSRWithSplash;
- (id /* block */)didReload;
- (BOOL)isInitFetch;
- (BOOL)reloadAdPostponeDataWithRemovedAwemes:(id)arg0 insertedAwemes:(id)arg1 startIndexForReload:(long long)arg2 insertedFirstAweme:(id)arg3;
- (BOOL)reloadNotAdPostponeDataWithRemovedAwemes:(id)arg0 insertedAwemes:(id)arg1 startIndexForReload:(long long)arg2 insertedFirstAweme:(id)arg3;
- (void)trackAdReRankIfNeededWithStatus:(id)arg0 message:(id)arg1 currentAwemeArr:(id)arg2 removeAwemeArr:(id)arg3 insertAwemeArr:(id)arg4 beforeAwemeArr:(id)arg5 returnAwemeArr:(id)arg6 currentIndex:(long long)arg7 requestId:(id)arg8 startReplaceTime:(double)arg9;
- (id)collectAwemeItemIDsWithAwemes:(id)arg0;
- (void)trackAdDeletionWithRemovedAwemes:(id)arg0 insertedAwemes:(id)arg1;
- (void)reRankAndOpenSSRResultDeDuplicateIfNeeded:(id)arg0;
- (void)setMoveBackOpenSSRAdProbably:(BOOL)arg0;
- (void)trackAdReRankIfNeededWithStatus:(id)arg0 message:(id)arg1 paramsDict:(id)arg2;
- (id)reRankResponse;
- (id /* block */)updateDataSource;
- (id)filterDuplicatedAwemes:(id)arg0 otherAwemes:(id)arg1;
- (id)collectAwemeItemIDsWithResponseItems:(id)arg0;
- (void)updateCurrentAwemeIndex:(long long)arg0;
- (void)setFeedResponse:(id)arg0;
- (void)trackAdReRankIfNeededWithStatus:(id)arg0 message:(id)arg1 currentAwemeArr:(id)arg2 returnAwemeArr:(id)arg3 paramsDict:(id)arg4;
- (void)trackAdOpenSSRIfNeededWithStatus:(id)arg0 message:(id)arg1 currentAwemeArr:(id)arg2 returnAwemeArr:(id)arg3 paramsDict:(id)arg4;
- (void)setUpdateDataSource:(id /* block */)arg0;
- (void)setDidReload:(id /* block */)arg0;
- (void)setIsInitFetch:(BOOL)arg0;
- (void)setIsOpenSSRWithSplash:(BOOL)arg0;
- (void)setTimerProxy:(id)arg0;
- (void)setCurrentAwemeIndex:(long long)arg0;
- (void)setAwemeIDsRequestedOn:(id)arg0;
- (void)timerDidFire:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)reset;
- (id)requestTimer;
- (void)setRequestTimer:(id)arg0;
- (void)reloadWithContext:(id)arg0;
- (id /* block */)contextProvider;
- (void)setContextProvider:(id /* block */)arg0;

@end
