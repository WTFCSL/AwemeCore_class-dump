//
//     Generated by private class-dump
//

@class NSDictionary, TTVideoEnginePlayer, NSMutableArray, NSString, TTVideoEnginePlayDuration, NSTimer, NSMutableDictionary, TTVideoEngineDNSParser, TTVideoEngineLogView, NSObject, TTVideoEngineAVPlayerItemAccessLog, UIView, NSData, AVPlayerItem, TTVideoEngineGearContext, TTVideoEngineAutoResolutionParams, TTVideoEngineOptions, TTVideoEngineFragmentLoader, TTVideoEngineURLInfo, NSMapTable, TTVideoEngineAVAIBarrager, NSNumber;
@protocol TTVideoEngineFFmpegProtocol, TTVideoEngineNetClient, TTAVPlayerLoadControlInterface, TTVideoEngineSubDecInfoProtocol, AVAssetResourceLoaderDelegate, TTVideoEngineInternalDelegate, TTVideoEngineAIBarrageDelegate, TTVideoEngineSubtitleDelegate, OS_dispatch_queue, TTVideoEngineDataSource, TTVideoEngineDelegate, TTVideoEnginePlaySource, TTVideoEngineResolutionDelegate, TTVideoEngineABRDelegate, TTVideoEngineNetworkPredictorDelegate, TTVideoEngineMaskDelegate, TTVideoEngineVRDelegate, TTVideoEngineNetworkPredictorAction, TTVideoEngineEventLoggerProtocol, IVCABRModule;

@interface TTVideoEngine : NSObject <TTVideoDataCenterProtocol, TTVideoEngineVRReaction, TTVideoEngineDNSProtocol, TTVideoPlayerStateProtocol, TTVideoEngineEventLoggerDelegate, IVCABRInfoListener, IVCABRPlayStateSupplier, TTAVPlayerSubInfoInterface, TTAVPlayerMaskInfoInterface, TTVideoEngineNetworkPredictorReaction, TTVideoEngineMDLFetcherDelegate> {
    BOOL _enableNNSR;
    BOOL _enableAllResolutionVideoSR;
    BOOL _enableRange;
    BOOL _terminalAudioUnitPool;
    BOOL _audioLatencyQueueByTime;
    BOOL _videoEndIsAllEof;
    BOOL _enableBufferingMilliSeconds;
    BOOL _enable720pSR;
    BOOL _enableKeepFormatThreadAlive;
    BOOL _enableFFCodecerHeaacV2Compat;
    BOOL _hardwareDecode;
    BOOL _muted;
    BOOL _radioMode;
    BOOL _looping;
    BOOL _cacheEnable;
    BOOL _supportBarrageMask;
    BOOL _isOwnPlayer;
    BOOL _autoModeEnabled;
    BOOL _supportPictureInPictureMode;
    BOOL _engineCloseIsDone;
    BOOL _isGetFromEnginePool;
    BOOL _isFirstURL;
    BOOL _isSwitchingDefinition;
    BOOL _isSeamlessSwitching;
    BOOL _isSuggestingReduceResolution;
    BOOL _isRetrying;
    BOOL _hasShownFirstFrame;
    BOOL _hasAudioRenderStarted;
    BOOL _isSeeking;
    BOOL _isUserStopped;
    BOOL _isComplete;
    BOOL _isViewWrapperSet;
    BOOL _playerIsPreparing;
    BOOL _didCallPrepareToPlay;
    BOOL _firstGetWidthHeight;
    BOOL _didSetHardware;
    BOOL _didSetAESrcLoudness;
    BOOL _didSetAESrcPeak;
    BOOL _didSetAEVolumVer;
    BOOL _needPlayBack;
    BOOL _hasPrepared;
    BOOL _shouldUseAudioRenderStart;
    BOOL _boeEnable;
    BOOL _serverDecodingMode;
    BOOL _dnsCacheEnable;
    BOOL _bashEnable;
    BOOL _hlsSeamlessSwitch;
    BOOL _barrageMaskThreadEnable;
    BOOL _aiBarrageThreadEnable;
    BOOL _subThreadEnable;
    BOOL _maskEnableDataLoader;
    BOOL _barrageMaskEnable;
    BOOL _aiBarrageEnable;
    BOOL _subEnable;
    BOOL _drmRetry;
    BOOL _preloadDurationCheck;
    BOOL _isEnablePreloadCheckTimer;
    BOOL _isEnablePreloadCheckByPlay;
    BOOL _supportExpiredModel;
    BOOL _httpsEnabled;
    BOOL _enableHttps;
    BOOL _retryEnableHttps;
    BOOL _performanceLogEnable;
    BOOL _checkHijack;
    BOOL _hijackRetryEnable;
    BOOL _isHijackRetried;
    BOOL _seekEndEnabled;
    BOOL _disableShortSeek;
    BOOL _reportRequestHeaders;
    BOOL _reportResponseHeaders;
    BOOL _enableTimerBarPercentage;
    BOOL _enableDashAbr;
    BOOL _isUsedAbr;
    BOOL _isRegistedObservePlayViewBound;
    BOOL _enableIndexCache;
    BOOL _enableFragRange;
    BOOL _enableAsync;
    BOOL _skipFindStreamInfo;
    BOOL _enableOpenTimeout;
    BOOL _enableTTHlsDrm;
    BOOL _enableEnterBufferingDirectly;
    BOOL _audioEffectEnabled;
    BOOL _aeForbidCompressor;
    BOOL _optimizeMemoryUsage;
    BOOL _audioUnitPoolEnabled;
    BOOL _avSyncStartEnable;
    BOOL _codecDropSkippedFrame;
    BOOL _playerLazySeek;
    BOOL _useFallbackApi;
    BOOL _fallbackApiMDLRetry;
    BOOL _useEphemeralSession;
    BOOL _dummyAudioSleep;
    BOOL _usingEngineQueue;
    BOOL _notifyBufferBeforeFirstFrame;
    BOOL _enableRefreshByTime;
    BOOL _enableFallbackSWDecode;
    BOOL _preferSpdl4HDR;
    BOOL _stopSourceAsync;
    BOOL _enableSeekInterrupt;
    BOOL _enableRangeCacheDuration;
    BOOL _enableVoiceSplitHeaacV2;
    BOOL _enableAudioHardwareDecode;
    BOOL _delayBufferingUpdate;
    BOOL _noBufferingUpdate;
    BOOL _keepVoiceDuration;
    BOOL _preferSpdl4HDRUrl;
    BOOL _enableSRBound;
    BOOL _filePlayNoBuffering;
    BOOL _skipSetSameWindow;
    BOOL _cacheVoiceId;
    BOOL _recheckVPLSforDirectBuffering;
    BOOL _enableReportPreloadTraceId;
    BOOL _enableRemoveTaskQueue;
    BOOL _enablePostStart;
    BOOL _asyncClose;
    BOOL _enablePlayerPreloadGear;
    BOOL _enableUseMachTime;
    BOOL _enableClearMdlCache;
    BOOL _disableEngineDns;
    BOOL _medialoaderEnable;
    BOOL _medialoaderNativeEnable;
    BOOL _medialoaderProtocolRegistered;
    BOOL _hlsproxyProtocolRegistered;
    BOOL _firstNativeMdlEnable;
    BOOL _byteVC1Enabled;
    BOOL _smoothlySwitching;
    BOOL _asyncInit;
    BOOL _asyncPrepare;
    BOOL _isUsingAVResolver;
    BOOL _resolutionServerControlEnabled;
    BOOL _cacheVideoInfoEnable;
    BOOL _useExternDirEnable;
    BOOL _reuseSocket;
    BOOL _dashEnabled;
    BOOL _disableAccurateStart;
    BOOL _isEnablePostPrepareMsg;
    BOOL _postprepareWay;
    BOOL _preferNearstSampleEnable;
    BOOL _isEnableBackGroundPlay;
    BOOL _isEnablePlayCallbackHitCacheSize;
    int _currentDownloadAudioBitrate;
    int _enableOnePlayMerge;
    long long _enableAVStack;
    long long _defaultBufferingEndMilliSeconds;
    long long _maxBufferEndMilliSeconds;
    long long _decreaseVtbStackSize;
    long long _videoRenderStallThreshold;
    id<TTVideoEngineDataSource> _dataSource;
    id<TTVideoEngineDelegate> _delegate;
    id<TTVideoEngineResolutionDelegate> _resolutionDelegate;
    id<TTVideoEngineABRDelegate> _dashABRDelegate;
    id<TTVideoEngineNetworkPredictorDelegate> _networkPredictorDelegate;
    id<TTVideoEngineVRDelegate> _videoVRDelegate;
    id<AVAssetResourceLoaderDelegate> _resourceLoaderDelegate;
    double _playbackSpeed;
    id<TTVideoEngineNetClient> _netClient;
    UIView *_playerView;
    unsigned long long _state;
    long long _playbackState;
    unsigned long long _loadState;
    unsigned long long _stallReason;
    unsigned long long _currentResolution;
    NSString *_currentQualityDesc;
    id<TTAVPlayerLoadControlInterface> _loadControl;
    long long _lastUserAction;
    NSDictionary *_resolutionMap;
    id<TTVideoEngineEventLoggerProtocol> _eventLogger;
    NSMapTable *_mapTable;
    NSString *_currentHostnameURL;
    NSString *_currentIPURL;
    NSMutableDictionary *_urlIPDict;
    unsigned long long _lastResolution;
    TTVideoEngineDNSParser *_dnsParser;
    NSMutableDictionary *_header;
    TTVideoEngineFragmentLoader *_fragmentLoader;
    id<TTVideoEngineNetworkPredictorAction> _networkPredictorAction;
    AVPlayerItem *_osplayerItem;
    NSString *_logInfoTag;
    id /* block */ _configResolutionComplete;
    unsigned long long _audioDeviceType;
    double _duration;
    double _playableDuration;
    NSTimer *_timer;
    NSTimer *_speedTimer;
    unsigned long long _errorCount;
    unsigned long long _accumulatedErrorCount;
    long long _playerUrlDNSRetryCount;
    unsigned long long _bufferCount;
    double _lastPlaybackTime;
    unsigned long long _apiVersion;
    NSString *_auth;
    NSString *_cacheFilePathWhenUsingDirectURL;
    double _beforeSeekTimeInterval;
    id /* block */ _temSeekFinishBlock;
    id /* block */ _temSeekRenderCompleteBlock;
    TTVideoEngineLogView *_debugView;
    id<IVCABRModule> _abrModule;
    NSMutableDictionary *_bashDefaultMDLKeysMap;
    long long _mdlCacheSize;
    long long _easyPreloadThreshold;
    double _easyPreloadNotifyTime;
    NSString *_deviceID;
    NSMutableArray *_fileHashArray;
    unsigned long long _playerType;
    TTVideoEngineAVAIBarrager *_aiBarrager;
    NSTimer *_pcdnTimer;
    NSTimer *_checkPreloadTimer;
    TTVideoEngineGearContext *_gearStrategyContext;
    TTVideoEnginePlayDuration *_playDuration;
    id<TTVideoEngineAIBarrageDelegate> _aiBarrageInfoDelegate;
    id<TTVideoEngineMaskDelegate> _maskInfoDelegate;
    id<TTVideoEngineFFmpegProtocol> _ffmpegProtocol;
    id<TTVideoEnginePlaySource> _playSource;
    TTVideoEnginePlayer *_player;
    TTVideoEngineOptions *_options;
    long long _cacheMaxSeconds;
    long long _rotateType;
    long long _bufferingTimeOut;
    long long _maxBufferEndTime;
    NSMutableArray *_localServerTaskKeys;
    long long _loopWay;
    long long _dnsExpiredTime;
    long long _currentNetworkStatus;
    unsigned long long _settingMask;
    NSString *_barrageMaskUrl;
    long long _maskHeadLen;
    NSString *_maskFileHash;
    long long _currentSubLangId;
    NSDictionary *_subtitleInfo;
    NSString *_subLangQuery;
    TTVideoEngineURLInfo *_currentVideoInfo;
    TTVideoEngineURLInfo *_dynamicVideoInfo;
    TTVideoEngineURLInfo *_dynamicAudioInfo;
    void /* function */ *_drmCreater;
    unsigned long long _drmType;
    long long _drmDowngrade;
    long long _fpsAppId;
    NSData *_fpsCertificateData;
    NSString *_fpsLicenseUrl;
    id<AVAssetResourceLoaderDelegate> _fpsResourceLoaderDelegate;
    NSString *_tokenUrlTemplate;
    NSString *_checkInfoString;
    NSString *_playUrl;
    long long _limitMediaCacheSize;
    long long _preloadUpperBufferMs;
    long long _preloadLowerBufferMs;
    NSDictionary *_currentParams;
    unsigned long long _hijackRetryMainDnsType;
    unsigned long long _hijackRetryBackupDnsType;
    NSString *_subtag;
    NSString *_customStr;
    long long _codecType;
    long long _abrSwitchMode;
    long long _segmentFormatFlag;
    long long _mABR4GMaxResolutionIndex;
    unsigned long long _rangeMode;
    unsigned long long _readMode;
    long long _videoRangeSize;
    long long _audioRangeSize;
    long long _videoRangeTime;
    long long _audioRangeTime;
    unsigned long long _updateTimestampMode;
    NSString *_ttHlsDrmToken;
    long long _nnsrFpsThreshold;
    NSDictionary *_firstFrameMetrics;
    NSString *_playerLog;
    long long _idleTimerAutoMode;
    long long _mirrorType;
    long long _outputFramesWaitNum;
    long long _startPlayAudioBufferThreshold;
    double _audioEffectPregain;
    double _audioEffectThreshold;
    double _audioEffectRatio;
    double _audioEffectPredelay;
    double _audioEffectPostgain;
    long long _audioEffectType;
    double _audioEffectSrcLoudness;
    double _audioEffectSrcPeak;
    double _audioEffectTarLoudness;
    double _audioEffectReleaseTime;
    double _audioEffectLookAheadTime;
    double _audioEffectLuRange;
    double _audioEffectLuStart;
    double _audioEffectLuEnd;
    double _audioEffectMaxMomLu;
    double _audioEffectMaxShortermLu;
    long long _audioEffectVolumInfoVer;
    long long _audioEffectDevicePlayAbility;
    NSString *_audioEffectConfigJson;
    NSString *_audioEffectVolumeInfoJson;
    NSString *_audioEffectGraphConfig;
    long long _threadWaitTimeMS;
    NSDictionary *_videoInfoDict;
    long long _abrTimerInterval;
    long long _startPlayTimestamp;
    long long _detect_time;
    NSString *_engineHash;
    NSString *_playSourceId;
    NSObject<OS_dispatch_queue> *_taskQueue;
    long long _defaultBufferEndTime;
    unsigned long long _decoderOutputType;
    long long _prepareMaxCacheMs;
    long long _mdlCacheMode;
    long long _httpAutoRangeOffset;
    long long _normalClockType;
    long long _skipBufferLimit;
    long long _enableReportAllBufferUpdate;
    id<TTVideoEngineNetClient> _subtitleNetworkClient;
    long long _findStreamInfoProbeSize;
    long long _findStreamInfoProbeDuration;
    long long _liveStartIndex;
    long long _maxAccumulatedErrCount;
    long long _hdr10VideoModelLowBound;
    long long _hdr10VideoModelHighBound;
    long long _audioCodecId;
    long long _videoCodecId;
    long long _audioCodecProfile;
    long long _videoCodecProfile;
    long long _changeVtbSizePicSizeBound;
    long long _voiceBlockDuration;
    long long _srLongDimensionLowerBound;
    long long _srLongDimensionUpperBound;
    long long _srShortDimensionLowerBound;
    long long _srShortDimensionUpperBound;
    long long _maskStopTimeout;
    long long _subtitleStopTimeout;
    NSString *_responderChain;
    NSString *_mMDLGroupID;
    long long _enableGetPlayerReqOffset;
    long long _curMetricAblity;
    long long _curMetricIntval;
    double _userSetVolume;
    NSString *_mCompanyId;
    NSString *_traceId;
    NSString *_initialUrlBeforeMdlProxy;
    NSNumber *_isIgnoreAudioInterruptionValue;
    long long _bufferingStartIDLTime;
    NSNumber *_businessSessionId;
    long long _specialFunctionType;
    NSString *_subtitleHostName;
    id<TTVideoEngineSubtitleDelegate> _subtitleDelegate;
    id<TTVideoEngineSubDecInfoProtocol> _subDecInfoModel;
    long long _medialoaderCdnType;
    long long _mediaLoaderPcdnTimerInterval;
    long long _netSpeedUpdateInterval;
    id<TTVideoEngineInternalDelegate> _internalDelegate;
    TTVideoEngineAutoResolutionParams *_startUpParams;
    long long _embellishVolumeMilliseconds;
    double _startTime;
    double _loopStartTime;
    double _loopEndTime;
    long long _smoothDelayedSeconds;
    NSString *_decryptionKey;
    NSString *_encryptedDecryptionKey;
    unsigned long long _testSpeedMode;
    unsigned long long _imageScaleType;
    unsigned long long _enhancementType;
    unsigned long long _imageLayoutType;
    long long _scaleMode;
    long long _alignMode;
    double _alignRatio;
    unsigned long long _renderType;
    unsigned long long _renderEngine;
    NSString *_externCacheDir;
    long long _openTimeOut;
    long long _preferNearstSampleMaxPosOffset;
    long long _isEnableVsyncHelper;
    long long _customizedVideoRenderingFrameRate;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _normalizeCropArea;
}

@property (class, nonatomic) long long preloadStrategy;
@property (class, nonatomic) BOOL useHttpsForApiFetch;

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<TTVideoEngineEventLoggerProtocol> eventLogger;
@property (retain, nonatomic) NSMapTable *mapTable;
@property (copy, nonatomic) NSString *currentHostnameURL;
@property (copy, nonatomic) NSString *currentIPURL;
@property (retain, nonatomic) NSMutableDictionary *urlIPDict;
@property (nonatomic) unsigned long long state;
@property (nonatomic) unsigned long long currentResolution;
@property (nonatomic) unsigned long long lastResolution;
@property (retain, nonatomic) TTVideoEngineDNSParser *dnsParser;
@property (nonatomic) BOOL isFirstURL;
@property (retain, nonatomic) NSMutableDictionary *header;
@property (retain, nonatomic) TTVideoEngineFragmentLoader *fragmentLoader;
@property (retain, nonatomic) id<TTVideoEngineNetworkPredictorAction> networkPredictorAction;
@property (retain, nonatomic) AVPlayerItem *osplayerItem;
@property (copy, nonatomic) NSString *logInfoTag;
@property (nonatomic) BOOL isOwnPlayer;
@property (nonatomic) BOOL autoModeEnabled;
@property (copy, nonatomic) id /* block */ configResolutionComplete;
@property (nonatomic) unsigned long long audioDeviceType;
@property (nonatomic) long long playbackState;
@property (nonatomic) unsigned long long loadState;
@property (nonatomic) unsigned long long stallReason;
@property (nonatomic) double duration;
@property (nonatomic) double playableDuration;
@property (retain, nonatomic) UIView *playerView;
@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) NSTimer *speedTimer;
@property (nonatomic) unsigned long long errorCount;
@property (nonatomic) unsigned long long accumulatedErrorCount;
@property (nonatomic) long long playerUrlDNSRetryCount;
@property (nonatomic) unsigned long long bufferCount;
@property (nonatomic) double lastPlaybackTime;
@property (nonatomic) BOOL isSwitchingDefinition;
@property (nonatomic) BOOL isSeamlessSwitching;
@property (nonatomic) BOOL isSuggestingReduceResolution;
@property (nonatomic) BOOL isRetrying;
@property (nonatomic) BOOL hasShownFirstFrame;
@property (nonatomic) BOOL hasAudioRenderStarted;
@property (nonatomic) BOOL isSeeking;
@property (nonatomic) BOOL isUserStopped;
@property (nonatomic) BOOL isComplete;
@property (nonatomic) BOOL isViewWrapperSet;
@property (nonatomic) long long lastUserAction;
@property (nonatomic) unsigned long long apiVersion;
@property (copy, nonatomic) NSString *auth;
@property (copy, nonatomic) NSString *cacheFilePathWhenUsingDirectURL;
@property (nonatomic) double beforeSeekTimeInterval;
@property (copy, nonatomic) id /* block */ temSeekFinishBlock;
@property (copy, nonatomic) id /* block */ temSeekRenderCompleteBlock;
@property (retain, nonatomic) TTVideoEngineLogView *debugView;
@property (nonatomic) BOOL playerIsPreparing;
@property (nonatomic) BOOL didCallPrepareToPlay;
@property (nonatomic) BOOL firstGetWidthHeight;
@property (retain, nonatomic) id<IVCABRModule> abrModule;
@property (nonatomic) int currentDownloadAudioBitrate;
@property (retain, nonatomic) NSMutableDictionary *bashDefaultMDLKeysMap;
@property (nonatomic) long long mdlCacheSize;
@property (nonatomic) long long easyPreloadThreshold;
@property (nonatomic) double easyPreloadNotifyTime;
@property (nonatomic) BOOL didSetHardware;
@property (nonatomic) BOOL didSetAESrcLoudness;
@property (nonatomic) BOOL didSetAESrcPeak;
@property (nonatomic) BOOL didSetAEVolumVer;
@property (copy, nonatomic) NSString *deviceID;
@property (retain, nonatomic) NSMutableArray *fileHashArray;
@property (nonatomic) BOOL needPlayBack;
@property (nonatomic) BOOL hasPrepared;
@property (nonatomic) BOOL shouldUseAudioRenderStart;
@property (nonatomic) unsigned long long playerType;
@property (retain, nonatomic) TTVideoEngineAVAIBarrager *aiBarrager;
@property (retain, nonatomic) NSTimer *pcdnTimer;
@property (retain, nonatomic) NSTimer *checkPreloadTimer;
@property (retain, nonatomic) TTVideoEngineGearContext *gearStrategyContext;
@property (retain, nonatomic) TTVideoEnginePlayDuration *playDuration;
@property (weak, nonatomic) id<TTVideoEngineAIBarrageDelegate> aiBarrageInfoDelegate;
@property (weak, nonatomic) id<TTVideoEngineMaskDelegate> maskInfoDelegate;
@property (weak, nonatomic) id<TTVideoEngineFFmpegProtocol> ffmpegProtocol;
@property (retain, nonatomic) id<TTVideoEnginePlaySource> playSource;
@property (retain, nonatomic) TTVideoEnginePlayer *player;
@property (retain, nonatomic) TTVideoEngineOptions *options;
@property (nonatomic) long long cacheMaxSeconds;
@property (nonatomic) long long rotateType;
@property (nonatomic) long long bufferingTimeOut;
@property (nonatomic) long long maxBufferEndTime;
@property (retain, nonatomic) NSMutableArray *localServerTaskKeys;
@property (nonatomic) long long loopWay;
@property (nonatomic) BOOL boeEnable;
@property (nonatomic) BOOL serverDecodingMode;
@property (nonatomic) BOOL dnsCacheEnable;
@property (nonatomic) long long dnsExpiredTime;
@property (nonatomic) long long currentNetworkStatus;
@property (nonatomic) unsigned long long settingMask;
@property (readonly, nonatomic) long long bitrate;
@property (readonly, nonatomic) long long audioBitrate;
@property (readonly, nonatomic) long long videoAreaFrame;
@property (nonatomic) BOOL bashEnable;
@property (nonatomic) BOOL hlsSeamlessSwitch;
@property (nonatomic) BOOL barrageMaskThreadEnable;
@property (nonatomic) BOOL aiBarrageThreadEnable;
@property (nonatomic) BOOL subThreadEnable;
@property (nonatomic) BOOL maskEnableDataLoader;
@property (nonatomic) BOOL barrageMaskEnable;
@property (nonatomic) BOOL aiBarrageEnable;
@property (copy, nonatomic) NSString *barrageMaskUrl;
@property (nonatomic) long long maskHeadLen;
@property (copy, nonatomic) NSString *maskFileHash;
@property (nonatomic) BOOL subEnable;
@property (nonatomic) long long currentSubLangId;
@property (copy, nonatomic) NSDictionary *subtitleInfo;
@property (copy, nonatomic) NSString *subLangQuery;
@property (retain, nonatomic) TTVideoEngineURLInfo *currentVideoInfo;
@property (retain, nonatomic) TTVideoEngineURLInfo *dynamicVideoInfo;
@property (retain, nonatomic) TTVideoEngineURLInfo *dynamicAudioInfo;
@property (nonatomic) void /* function */ *drmCreater;
@property (nonatomic) unsigned long long drmType;
@property (nonatomic) long long drmDowngrade;
@property (nonatomic) BOOL drmRetry;
@property (nonatomic) long long fpsAppId;
@property (retain, nonatomic) NSData *fpsCertificateData;
@property (retain, nonatomic) NSString *fpsLicenseUrl;
@property (retain, nonatomic) id<AVAssetResourceLoaderDelegate> fpsResourceLoaderDelegate;
@property (copy, nonatomic) NSString *tokenUrlTemplate;
@property (copy, nonatomic) NSString *checkInfoString;
@property (copy, nonatomic) NSString *playUrl;
@property (nonatomic) long long limitMediaCacheSize;
@property (nonatomic) long long preloadUpperBufferMs;
@property (nonatomic) long long preloadLowerBufferMs;
@property (nonatomic) BOOL preloadDurationCheck;
@property (nonatomic) BOOL isEnablePreloadCheckTimer;
@property (nonatomic) BOOL isEnablePreloadCheckByPlay;
@property (nonatomic) BOOL supportExpiredModel;
@property (copy) NSDictionary *currentParams;
@property (nonatomic) BOOL httpsEnabled;
@property (nonatomic) BOOL enableHttps;
@property (nonatomic) BOOL retryEnableHttps;
@property (nonatomic) BOOL performanceLogEnable;
@property (nonatomic) BOOL checkHijack;
@property (nonatomic) BOOL hijackRetryEnable;
@property (nonatomic) BOOL isHijackRetried;
@property (nonatomic) unsigned long long hijackRetryMainDnsType;
@property (nonatomic) unsigned long long hijackRetryBackupDnsType;
@property (nonatomic) BOOL seekEndEnabled;
@property (copy, nonatomic) NSString *subtag;
@property (copy, nonatomic) NSString *customStr;
@property (nonatomic) BOOL disableShortSeek;
@property (nonatomic) BOOL reportRequestHeaders;
@property (nonatomic) BOOL reportResponseHeaders;
@property (readonly, nonatomic) double videoOutputFPS;
@property (readonly, nonatomic) double containerFPS;
@property (nonatomic) BOOL enableTimerBarPercentage;
@property (nonatomic) BOOL enableDashAbr;
@property (nonatomic) long long codecType;
@property (nonatomic) BOOL isUsedAbr;
@property (nonatomic) long long abrSwitchMode;
@property (readonly, nonatomic) long long abrProbeCount;
@property (readonly, nonatomic) long long abrSwitchCount;
@property (readonly, nonatomic) long long abrAverageBitrate;
@property (readonly, nonatomic) double abrAveragePlaySpeed;
@property (readonly, nonatomic) long long abrDiddAbs;
@property (nonatomic) long long segmentFormatFlag;
@property (nonatomic) long long mABR4GMaxResolutionIndex;
@property (nonatomic) BOOL isRegistedObservePlayViewBound;
@property (nonatomic) BOOL enableIndexCache;
@property (nonatomic) BOOL enableFragRange;
@property (nonatomic) BOOL enableAsync;
@property (nonatomic) unsigned long long rangeMode;
@property (nonatomic) unsigned long long readMode;
@property (nonatomic) long long videoRangeSize;
@property (nonatomic) long long audioRangeSize;
@property (nonatomic) long long videoRangeTime;
@property (nonatomic) long long audioRangeTime;
@property (nonatomic) BOOL skipFindStreamInfo;
@property (nonatomic) unsigned long long updateTimestampMode;
@property (nonatomic) BOOL enableOpenTimeout;
@property (nonatomic) BOOL enableTTHlsDrm;
@property (copy, nonatomic) NSString *ttHlsDrmToken;
@property (nonatomic) BOOL enableNNSR;
@property (nonatomic) long long nnsrFpsThreshold;
@property (nonatomic) BOOL enableAllResolutionVideoSR;
@property (nonatomic) BOOL enableRange;
@property (nonatomic) long long videoRenderStallThreshold;
@property (copy, nonatomic) NSDictionary *firstFrameMetrics;
@property (copy, nonatomic) NSString *playerLog;
@property (readonly, nonatomic) long long playBytes;
@property (nonatomic) long long idleTimerAutoMode;
@property (nonatomic) BOOL enableEnterBufferingDirectly;
@property (nonatomic) long long mirrorType;
@property (nonatomic) long long outputFramesWaitNum;
@property (nonatomic) long long startPlayAudioBufferThreshold;
@property (nonatomic) BOOL audioEffectEnabled;
@property (nonatomic) BOOL aeForbidCompressor;
@property (nonatomic) double audioEffectPregain;
@property (nonatomic) double audioEffectThreshold;
@property (nonatomic) double audioEffectRatio;
@property (nonatomic) double audioEffectPredelay;
@property (nonatomic) double audioEffectPostgain;
@property (nonatomic) long long audioEffectType;
@property (nonatomic) double audioEffectSrcLoudness;
@property (nonatomic) double audioEffectSrcPeak;
@property (nonatomic) double audioEffectTarLoudness;
@property (nonatomic) double audioEffectReleaseTime;
@property (nonatomic) double audioEffectLookAheadTime;
@property (nonatomic) double audioEffectLuRange;
@property (nonatomic) double audioEffectLuStart;
@property (nonatomic) double audioEffectLuEnd;
@property (nonatomic) double audioEffectMaxMomLu;
@property (nonatomic) double audioEffectMaxShortermLu;
@property (nonatomic) long long audioEffectVolumInfoVer;
@property (nonatomic) long long audioEffectDevicePlayAbility;
@property (copy, nonatomic) NSString *audioEffectConfigJson;
@property (copy, nonatomic) NSString *audioEffectVolumeInfoJson;
@property (copy, nonatomic) NSString *audioEffectGraphConfig;
@property (nonatomic) BOOL optimizeMemoryUsage;
@property (nonatomic) BOOL audioUnitPoolEnabled;
@property (nonatomic) BOOL avSyncStartEnable;
@property (nonatomic) long long threadWaitTimeMS;
@property (nonatomic) BOOL codecDropSkippedFrame;
@property (nonatomic) BOOL playerLazySeek;
@property (retain, nonatomic) NSDictionary *videoInfoDict;
@property (nonatomic) long long abrTimerInterval;
@property (nonatomic) long long startPlayTimestamp;
@property (nonatomic) long long detect_time;
@property (nonatomic) BOOL useFallbackApi;
@property (nonatomic) BOOL fallbackApiMDLRetry;
@property (copy, nonatomic) NSString *engineHash;
@property (nonatomic) BOOL useEphemeralSession;
@property (nonatomic) BOOL dummyAudioSleep;
@property (copy, nonatomic) NSString *playSourceId;
@property (nonatomic) BOOL usingEngineQueue;
@property (readonly, nonatomic) long long currentVideoTime;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;
@property (nonatomic) long long defaultBufferEndTime;
@property (nonatomic) unsigned long long decoderOutputType;
@property (nonatomic) long long prepareMaxCacheMs;
@property (nonatomic) long long mdlCacheMode;
@property (nonatomic) long long httpAutoRangeOffset;
@property (nonatomic) long long normalClockType;
@property (nonatomic) long long skipBufferLimit;
@property (nonatomic) long long enableReportAllBufferUpdate;
@property (retain, nonatomic) id<TTVideoEngineNetClient> subtitleNetworkClient;
@property (nonatomic) BOOL notifyBufferBeforeFirstFrame;
@property (nonatomic) long long enableAVStack;
@property (nonatomic) BOOL terminalAudioUnitPool;
@property (nonatomic) BOOL audioLatencyQueueByTime;
@property (nonatomic) BOOL videoEndIsAllEof;
@property (nonatomic) BOOL enableBufferingMilliSeconds;
@property (nonatomic) BOOL enableKeepFormatThreadAlive;
@property (nonatomic) BOOL enable720pSR;
@property (nonatomic) BOOL enableFFCodecerHeaacV2Compat;
@property (nonatomic) long long defaultBufferingEndMilliSeconds;
@property (nonatomic) long long maxBufferEndMilliSeconds;
@property (nonatomic) long long decreaseVtbStackSize;
@property (nonatomic) long long findStreamInfoProbeSize;
@property (nonatomic) long long findStreamInfoProbeDuration;
@property (nonatomic) BOOL enableRefreshByTime;
@property (nonatomic) long long liveStartIndex;
@property (nonatomic) BOOL enableFallbackSWDecode;
@property (nonatomic) long long maxAccumulatedErrCount;
@property (nonatomic) long long hdr10VideoModelLowBound;
@property (nonatomic) long long hdr10VideoModelHighBound;
@property (nonatomic) BOOL preferSpdl4HDR;
@property (nonatomic) BOOL stopSourceAsync;
@property (nonatomic) BOOL enableSeekInterrupt;
@property (readonly, nonatomic) BOOL audioEffectOpened;
@property (nonatomic) long long audioCodecId;
@property (nonatomic) long long videoCodecId;
@property (nonatomic) long long audioCodecProfile;
@property (nonatomic) long long videoCodecProfile;
@property (nonatomic) long long changeVtbSizePicSizeBound;
@property (nonatomic) BOOL enableRangeCacheDuration;
@property (nonatomic) BOOL enableVoiceSplitHeaacV2;
@property (nonatomic) BOOL enableAudioHardwareDecode;
@property (nonatomic) BOOL delayBufferingUpdate;
@property (nonatomic) BOOL noBufferingUpdate;
@property (nonatomic) BOOL keepVoiceDuration;
@property (nonatomic) long long voiceBlockDuration;
@property (nonatomic) BOOL preferSpdl4HDRUrl;
@property (nonatomic) BOOL enableSRBound;
@property (nonatomic) long long srLongDimensionLowerBound;
@property (nonatomic) long long srLongDimensionUpperBound;
@property (nonatomic) long long srShortDimensionLowerBound;
@property (nonatomic) long long srShortDimensionUpperBound;
@property (nonatomic) BOOL filePlayNoBuffering;
@property (nonatomic) long long maskStopTimeout;
@property (nonatomic) long long subtitleStopTimeout;
@property (nonatomic) BOOL skipSetSameWindow;
@property (nonatomic) BOOL cacheVoiceId;
@property (readonly, nonatomic) long long qualityType;
@property (nonatomic) BOOL recheckVPLSforDirectBuffering;
@property (copy, nonatomic) NSString *responderChain;
@property (readonly, copy, nonatomic) NSString *statisticsVid;
@property (copy, nonatomic) NSString *mMDLGroupID;
@property (nonatomic) BOOL enableReportPreloadTraceId;
@property (nonatomic) BOOL enableRemoveTaskQueue;
@property (nonatomic) BOOL enablePostStart;
@property (nonatomic) BOOL asyncClose;
@property (nonatomic) BOOL enablePlayerPreloadGear;
@property (nonatomic) long long enableGetPlayerReqOffset;
@property (nonatomic) BOOL enableUseMachTime;
@property (nonatomic) long long curMetricAblity;
@property (nonatomic) long long curMetricIntval;
@property (nonatomic) BOOL enableClearMdlCache;
@property (nonatomic) double userSetVolume;
@property (copy, nonatomic) NSString *mCompanyId;
@property (nonatomic) BOOL disableEngineDns;
@property (copy, nonatomic) NSString *traceId;
@property (copy, nonatomic) NSString *initialUrlBeforeMdlProxy;
@property (retain, nonatomic) NSNumber *isIgnoreAudioInterruptionValue;
@property (nonatomic) long long bufferingStartIDLTime;
@property (retain, nonatomic) NSNumber *businessSessionId;
@property (nonatomic) int enableOnePlayMerge;
@property (nonatomic) long long specialFunctionType;
@property (copy, nonatomic) NSString *subtitleHostName;
@property (weak, nonatomic) id<TTVideoEngineSubtitleDelegate> subtitleDelegate;
@property (retain, nonatomic) id<TTVideoEngineSubDecInfoProtocol> subDecInfoModel;
@property (nonatomic) BOOL proxyServerEnable;
@property (nonatomic) BOOL medialoaderEnable;
@property (nonatomic) BOOL medialoaderNativeEnable;
@property (nonatomic) BOOL medialoaderProtocolRegistered;
@property (nonatomic) BOOL hlsproxyProtocolRegistered;
@property (nonatomic) long long medialoaderCdnType;
@property (nonatomic) long long mediaLoaderPcdnTimerInterval;
@property (nonatomic) BOOL firstNativeMdlEnable;
@property (nonatomic) long long netSpeedUpdateInterval;
@property (weak, nonatomic) id<TTVideoEngineInternalDelegate> internalDelegate;
@property (retain, nonatomic) TTVideoEngineAutoResolutionParams *startUpParams;
@property (nonatomic) long long embellishVolumeMilliseconds;
@property (nonatomic) BOOL ksyByteVC1Decode;
@property (nonatomic) BOOL byteVC1Enabled;
@property (nonatomic) BOOL smoothlySwitching;
@property (nonatomic) BOOL asyncInit;
@property (nonatomic) BOOL asyncPrepare;
@property (nonatomic) double startTime;
@property (nonatomic) double loopStartTime;
@property (nonatomic) double loopEndTime;
@property (nonatomic) long long smoothDelayedSeconds;
@property (nonatomic) BOOL isUsingAVResolver;
@property (copy, nonatomic) NSString *decryptionKey;
@property (copy, nonatomic) NSString *encryptedDecryptionKey;
@property (nonatomic) BOOL resolutionServerControlEnabled;
@property (nonatomic) unsigned long long testSpeedMode;
@property (nonatomic) unsigned long long imageScaleType;
@property (nonatomic) unsigned long long enhancementType;
@property (nonatomic) unsigned long long imageLayoutType;
@property (nonatomic) long long scaleMode;
@property (nonatomic) long long alignMode;
@property (nonatomic) double alignRatio;
@property (nonatomic) unsigned long long renderType;
@property (nonatomic) unsigned long long renderEngine;
@property (readonly, nonatomic) long long videoSize;
@property (readonly, nonatomic) long long mediaSize;
@property (readonly, nonatomic) long long hijackCode;
@property (nonatomic) BOOL cacheVideoInfoEnable;
@property (nonatomic) BOOL useExternDirEnable;
@property (copy, nonatomic) NSString *externCacheDir;
@property (nonatomic) BOOL reuseSocket;
@property (nonatomic) BOOL dashEnabled;
@property (nonatomic) BOOL disableAccurateStart;
@property (nonatomic) long long openTimeOut;
@property (nonatomic) BOOL isEnablePostPrepareMsg;
@property (nonatomic) BOOL postprepareWay;
@property (nonatomic) BOOL preferNearstSampleEnable;
@property (nonatomic) long long preferNearstSampleMaxPosOffset;
@property (nonatomic) BOOL isEnableBackGroundPlay;
@property (nonatomic) BOOL isEnablePlayCallbackHitCacheSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } normalizeCropArea;
@property (nonatomic) long long isEnableVsyncHelper;
@property (nonatomic) long long customizedVideoRenderingFrameRate;
@property (weak, nonatomic) id<TTVideoEngineDataSource> dataSource;
@property (weak, nonatomic) id<TTVideoEngineDelegate> delegate;
@property (weak, nonatomic) id<TTVideoEngineResolutionDelegate> resolutionDelegate;
@property (weak, nonatomic) id<TTVideoEngineABRDelegate> dashABRDelegate;
@property (weak, nonatomic) id<TTVideoEngineNetworkPredictorDelegate> networkPredictorDelegate;
@property (weak, nonatomic) id<TTVideoEngineVRDelegate> videoVRDelegate;
@property (weak, nonatomic) id<AVAssetResourceLoaderDelegate> resourceLoaderDelegate;
@property (nonatomic) double playbackSpeed;
@property (nonatomic) double volume;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL radioMode;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL looping;
@property (nonatomic) BOOL cacheEnable;
@property (nonatomic) BOOL supportBarrageMask;
@property (retain, nonatomic) id<TTVideoEngineNetClient> netClient;
@property (readonly, nonatomic) double currentPlaybackTime;
@property (readonly, nonatomic) double durationWatched;
@property (readonly, nonatomic) TTVideoEngineAVPlayerItemAccessLog *accessLog;
@property (readonly, nonatomic) BOOL shouldPlay;
@property (copy, nonatomic) NSString *currentQualityDesc;
@property (readonly, nonatomic) UIView *debugInfoView;
@property (retain, nonatomic) id<TTAVPlayerLoadControlInterface> loadControl;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (nonatomic) BOOL engineCloseIsDone;
@property (nonatomic) BOOL isGetFromEnginePool;
@property (retain, nonatomic) NSDictionary *resolutionMap;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isSupportMetal;
+ (void)startOpenGLESActivity;
+ (void)stopOpenGLESActivity;
+ (void)setIgnoreAudioInterruption:(BOOL)arg0;
+ (void)suspendSocketCheck;
+ (void)resumeSocketCheck;
+ (id)getAppSessionID;
+ (id)ls_localServerConfigure;
+ (BOOL)ls_isStarted;
+ (void)ls_start;
+ (void)ls_addTaskWithVideoModelItem:(id)arg0;
+ (void)ls_addTaskWithVidItem:(id)arg0;
+ (void)ls_removeFileCacheByKey:(id)arg0;
+ (void)configureAppInfo:(id)arg0;
+ (void)setLogDelegate:(id)arg0;
+ (void)setPreloadStrategy:(long long)arg0;
+ (BOOL)switchToDefaultNetwork;
+ (BOOL)switchToCellularNetwork;
+ (long long)preloadStrategy;
+ (void)changePreloadTaskRunMode:(id)arg0 RunMode:(long long)arg1;
+ (void)setPreloadTaskMaxTaskNum:(id)arg0 num:(int)arg1;
+ (void)pausePreloadTask:(id)arg0;
+ (void)resumePreloadTask:(id)arg0;
+ (void)setStackSizeOptimized:(BOOL)arg0;
+ (void)configThreadWaitMilliSeconds:(int)arg0;
+ (void)_putWithKey:(id)arg0 method:(id)arg1;
+ (void)_printAllMethod;
+ (void)setHTTPDNSServerIP:(id)arg0;
+ (float)ls_getNetspeed;
+ (long long)ls_getDNSParallel;
+ (long long)ls_getDNSRefresh;
+ (long long)ls_getCacheSizeByKey:(id)arg0;
+ (id)viewWrapperWithType:(unsigned long long)arg0;
+ (id)_ls_keyFromFilePath:(id)arg0;
+ (id)_getAutoResolutionInfo:(id)arg0 infoModel:(id)arg1;
+ (Class)reportHelperClass;
+ (id)preloadDelegate;
+ (void)ls_addTask:(id)arg0 vid:(id)arg1 preSize:(long long)arg2 urls:(id)arg3;
+ (void)ls_addTaskForUrls:(id)arg0 vid:(id)arg1 preSize:(long long)arg2 filePath:(id)arg3;
+ (id)_processFileInfo:(id)arg0;
+ (long long)ls_getCacheFileSize:(id)arg0 resolution:(unsigned long long)arg1;
+ (void)_ls_addObserver:(id)arg0 forKey:(id)arg1;
+ (void)ls_setPreloadDelegate:(id)arg0;
+ (void)ls_addPreloadListener:(id)arg0;
+ (void)ls_removePreloadListener:(id)arg0;
+ (void)ls_setMaxConcurrentNumber:(long long)arg0;
+ (void)ls_close;
+ (void *)ls_getNativeMedialoaderHandle;
+ (void)ls_addTask:(id)arg0 vidItem:(id)arg1;
+ (void)ls_addTask:(id)arg0 resolution:(unsigned long long)arg1 preloadSize:(long long)arg2;
+ (void)ls_addTask:(id)arg0 resolution:(unsigned long long)arg1 preloadSize:(long long)arg2 filePath:(id /* block */)arg3;
+ (void)ls_addTask:(id)arg0 resolution:(unsigned long long)arg1 params:(id)arg2 preloadSize:(long long)arg3;
+ (void)ls_addTaskWithURLItem:(id)arg0;
+ (void)ls_addTask:(id)arg0 vid:(id)arg1 preSize:(long long)arg2 url:(id)arg3;
+ (void)ls_addTaskForUrl:(id)arg0 vid:(id)arg1 preSize:(long long)arg2 filePath:(id)arg3;
+ (void)ls_preConnectUrl:(id)arg0;
+ (void)ls_copyCache:(id)arg0;
+ (void)ls_cancelTaskByKey:(id)arg0;
+ (void)ls_cancelTaskByFilePath:(id)arg0;
+ (void)ls_cancelTaskByVideoId:(id)arg0;
+ (void)ls_cancelAllTasks;
+ (void)ls_cancelAllIdlePreloadTasks;
+ (void)ls_clearAllCaches;
+ (long long)ls_getClearSizeByClearAll;
+ (long long)ls_getAllCacheSize;
+ (void)ls_getAllCacheSizeWithCompletion:(id /* block */)arg0;
+ (long long)ls_tryQuickGetCacheSizeByKey:(id)arg0;
+ (long long)ls_tryQuickQueryCacheSizeByKey:(id)arg0;
+ (int)ls_getIoWriteError:(id)arg0;
+ (void)ls_cleanSpecifiedCacheDir:(id)arg0 force:(long long)arg1;
+ (id)ls_getIoStatInfo;
+ (void)ls_disableAutoTrimForKey:(id)arg0;
+ (id)ls_getCDNLog:(id)arg0;
+ (long long)ls_getDownloadCountByVid:(id)arg0;
+ (void)ls_setNetClient:(id)arg0;
+ (void)ls_setNetClientV1:(id /* block */)arg0;
+ (void)ls_DNSTTL:(long long)arg0;
+ (long long)ls_getDNSTTL;
+ (void)ls_mainDNSParseType:(unsigned long long)arg0 backup:(unsigned long long)arg1;
+ (unsigned long long)ls_getMainDNSParseType;
+ (unsigned long long)ls_getBackupDNSParseType;
+ (void)ls_backupDNSParserWaitTime:(double)arg0;
+ (double)ls_getBackupDNSParserWaitTime;
+ (void)ls_setDNSParallel:(long long)arg0;
+ (void)ls_setDNSRefresh:(long long)arg0;
+ (void)ls_clearAllDNSCache;
+ (void)ls_enableAutoTrimForKey:(id)arg0;
+ (long long)ls_getCacheSizeByFilePath:(id)arg0;
+ (id)ls_getCacheFileInfoByKey:(id)arg0;
+ (id)ls_getCacheFileInfoByFilePath:(id)arg0;
+ (void)ls_getCacheSizeByKey:(id)arg0 result:(id /* block */)arg1;
+ (void)ls_getCacheSizeByFilePath:(id)arg0 result:(id /* block */)arg1;
+ (void)ls_getCacheFileSize:(id)arg0 resolution:(unsigned long long)arg1 result:(id /* block */)arg2;
+ (id)_ls_getMDLVersion;
+ (void)_ls_removeObserver:(id)arg0 forKeys:(id)arg1;
+ (void)_ls_forceRemoveFileCacheByKey:(id)arg0;
+ (long long)_ls_getPreloadTaskNumber;
+ (id)_ls_downloadUrl:(id)arg0 rawKey:(id)arg1 urls:(id)arg2;
+ (void)_ls_startDownload:(id)arg0;
+ (void)_ls_cancelDownloadByKey:(id)arg0;
+ (void)setMDLNetUnReachableStopRetry:(BOOL)arg0;
+ (void)requestSubtitleInfoWith:(id)arg0 vid:(id)arg1 fileId:(id)arg2 language:(id)arg3 client:(id)arg4 completion:(id /* block */)arg5;
+ (void)setAutoTraceReportOpen:(BOOL)arg0;
+ (void)configExtraInfoProtocol:(id)arg0;
+ (double)getLastTargetBitrate;
+ (id)_getAutoResolutionInfo:(id)arg0 playSource:(id)arg1;
+ (void)startSpeedPredictor:(long long)arg0 congifModel:(id)arg1;
+ (void)setLogEnabled:(BOOL)arg0;
+ (void)setLogFlag:(long long)arg0;
+ (void)setDNSType:(unsigned long long)arg0 backupDns:(unsigned long long)arg1;
+ (id)getDNSType;
+ (void)setHTTPDNSFirst:(BOOL)arg0;
+ (BOOL)getHTTPDNSFirst;
+ (void)setQualityInfos:(id)arg0;
+ (id)getQualityInfos;
+ (void)sendCustomMessage:(id)arg0;
+ (void)setDefaultABRAlgorithm:(long long)arg0;
+ (void)setDefaultOnceSelectAlgoType:(int)arg0;
+ (void)setDefaultABRFlowAlgoType:(int)arg0;
+ (void)setUseHttpsForApiFetch:(BOOL)arg0;
+ (BOOL)useHttpsForApiFetch;
+ (void)setNetworkRTTLevelListener:(id)arg0;
+ (long long)getPredictAlgoType;
+ (int)getOnceSelectAlgoType;
+ (id)_engineVersionString;
+ (void)setGlobalForKey:(long long)arg0 value:(id)arg1;
+ (void)setEffect:(id)arg0;

- (unsigned long long)imageLayoutType;
- (void)setImageLayoutType:(unsigned long long)arg0;
- (id)supportedResolutionTypes;
- (void)setVideoWrapper:(struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *)arg0;
- (id)initWithOwnPlayer:(BOOL)arg0;
- (void)setHardwareDecode:(BOOL)arg0;
- (BOOL)hardwareDecode;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (long long)videoAreaFrame;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)supportPictureInPictureMode;
- (void)setAudioProcessor:(struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *)arg0;
- (void)setPlayUrl:(id)arg0;
- (void)setVRModeEnabled:(BOOL)arg0;
- (void)configVRWithUserInfo:(id)arg0;
- (void)startRenderVROutlet;
- (void)recenter;
- (void)updateConfigurationWithParams:(id)arg0;
- (void)rotateWithPitch:(double)arg0 andYaw:(double)arg1 andRoll:(double)arg2;
- (void)setScopicType:(long long)arg0;
- (void)setHeadTrackingEnabled:(BOOL)arg0;
- (void)setEffectParams:(id)arg0;
- (void)setPerf_isaHook:(id)arg0;
- (id)perf_isaHook;
- (long long)rotateType;
- (void)setRotateType:(long long)arg0;
- (unsigned long long)imageScaleType;
- (void)setImageScaleType:(unsigned long long)arg0;
- (unsigned long long)enhancementType;
- (void)setEnhancementType:(unsigned long long)arg0;
- (unsigned long long)renderType;
- (BOOL)radioMode;
- (void)setRadioMode:(BOOL)arg0;
- (BOOL)enableNNSR;
- (void)setEnableNNSR:(BOOL)arg0;
- (BOOL)isDashSource;
- (void)removeTimeObserver;
- (void)setLoadControl:(id)arg0;
- (void)setDecreaseVtbStackSize:(long long)arg0;
- (void)setSkipBufferLimit:(long long)arg0;
- (void)setVideoModel:(id)arg0;
- (void)setNormalClockType:(long long)arg0;
- (void)setVideoInfo:(id)arg0;
- (id)videoInfoDict;
- (void)setVideoInfoDict:(id)arg0;
- (int)getCurrentPlaybackTime;
- (void)setRenderEngine:(unsigned long long)arg0;
- (unsigned long long)renderEngine;
- (BOOL)medialoaderEnable;
- (void)setMedialoaderEnable:(BOOL)arg0;
- (BOOL)cacheVideoInfoEnable;
- (void)setCacheVideoInfoEnable:(BOOL)arg0;
- (void)setOptionForKey:(long long)arg0 value:(id)arg1;
- (void)configResolution:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (void)setNetClient:(id)arg0;
- (BOOL)asyncClose;
- (BOOL)boeEnable;
- (void)setCacheEnable:(BOOL)arg0;
- (void)setPlayDuration:(id)arg0;
- (void)onLog:(id)arg0;
- (int)getTrackType;
- (void)setEnableHttps:(BOOL)arg0;
- (BOOL)enableHttps;
- (void)setCustomHeaderValue:(id)arg0 forKey:(id)arg1;
- (void)setTraceId:(id)arg0;
- (BOOL)hasPrepared;
- (void)setHasPrepared:(BOOL)arg0;
- (void)setPlayerType:(unsigned long long)arg0;
- (void)setIsSeeking:(BOOL)arg0;
- (long long)audioBitrate;
- (BOOL)asyncInit;
- (void)setAsyncInit:(BOOL)arg0;
- (long long)openTimeOut;
- (void)setOpenTimeOut:(long long)arg0;
- (id)subtag;
- (void)setSubtag:(id)arg0;
- (long long)alignMode;
- (void)setAlignMode:(long long)arg0;
- (void)pauseAsync;
- (long long)getVideoWidth;
- (long long)getVideoHeight;
- (long long)getVideoRotation;
- (void)setDirectPlayURLs:(id)arg0;
- (void)closeAysnc;
- (id)getOptionBykey:(id)arg0;
- (void)setStallReason:(unsigned long long)arg0;
- (void)setDrmCreater:(void /* function */ *)arg0;
- (void)resetPlayerVideoProcessor;
- (id)getStreamInfo;
- (unsigned long long)stallReason;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })normalizeCropArea;
- (void)setNormalizeCropArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)getExtraViewForViewType:(long long)arg0;
- (double)alignRatio;
- (void)setAlignRatio:(double)arg0;
- (id)getMetaData;
- (void)setBufferCount:(unsigned long long)arg0;
- (void)updateSingleNetworkSpeed:(id)arg0 audioInfo:(id)arg1 realInterval:(int)arg2;
- (id)bytesInfoForEventLogger:(id)arg0;
- (id)currentQualityDesc;
- (long long)getLogValueInt:(long long)arg0;
- (id)getLogValueStr:(long long)arg0;
- (long long)getLogValueInt64:(long long)arg0;
- (void)onInfo:(long long)arg0 value:(long long)arg1 extraInfo:(id)arg2;
- (double)getLogValueFloat:(long long)arg0;
- (id)barrageMaskUrl;
- (void)setBarrageMaskUrl:(id)arg0;
- (id)dynamicVideoInfo;
- (void)setDynamicVideoInfo:(id)arg0;
- (id)resolutionMap;
- (long long)videoSizeForType:(unsigned long long)arg0;
- (id)supportedQualityInfos;
- (BOOL)hasEmbeddedSubtitle;
- (id)subtitleInfos;
- (void)setResolutionMap:(id)arg0;
- (long long)playerCoreBuffer:(BOOL)arg0;
- (id)localServerTaskKeys;
- (void)updateCacheProgress:(id)arg0 flag:(long long)arg1 observer:(id)arg2 progress:(double)arg3;
- (id)playSource;
- (void)setPlaySource:(id)arg0;
- (id)currentHostnameURL;
- (void)setCurrentHostnameURL:(id)arg0;
- (id)currentIPURL;
- (void)setCurrentIPURL:(id)arg0;
- (id)urlIPDict;
- (void)setUrlIPDict:(id)arg0;
- (id)dnsParser;
- (void)setDnsParser:(id)arg0;
- (BOOL)isFirstURL;
- (void)setIsFirstURL:(BOOL)arg0;
- (double)lastPlaybackTime;
- (void)setLastPlaybackTime:(double)arg0;
- (void)onMaskInfoCallBack:(id)arg0 pts:(unsigned long long)arg1;
- (void)parser:(id)arg0 didFailedWithError:(id)arg1;
- (void)parserDidCancelled;
- (id)customStr;
- (id)mMDLGroupID;
- (id)versionInfoForEventLogger:(id)arg0;
- (unsigned long long)lastResolution;
- (void)setLastResolution:(unsigned long long)arg0;
- (void)setCurrentQualityDesc:(id)arg0;
- (void)setCustomStr:(id)arg0;
- (void)setMMDLGroupID:(id)arg0;
- (id)getGlobalMuteDic:(id)arg0;
- (void)onOnePlayFinish:(id)arg0;
- (void)setReuseSocket:(BOOL)arg0;
- (void)setDisableAccurateStart:(BOOL)arg0;
- (void)setPlayAPIVersion:(unsigned long long)arg0 auth:(id)arg1;
- (void)setCustomInfo:(long long)arg0 value:(id)arg1;
- (void)setCheckHijack:(BOOL)arg0;
- (void)setMaskFileHash:(id)arg0;
- (void)loggerVideoProcessorEffectParam:(id)arg0;
- (void)parser:(id)arg0 didFinishWithAddress:(id)arg1 error:(id)arg2;
- (void)onMdlRetryStart:(id)arg0;
- (id)getFallbackApi;
- (void)onMdlRetryEnd;
- (void)onError:(id)arg0 fileHash:(id)arg1;
- (void)onCompletion:(id)arg0 newModel:(BOOL)arg1 fileHash:(id)arg2;
- (void)setTraitObjectForKey:(long long)arg0 value:(id)arg1;
- (id)initWithType:(unsigned long long)arg0 async:(BOOL)arg1;
- (void)playerDidCreateKernelPlayer;
- (id)getFFmpegProtocolObject;
- (void)playerViewWillRemove;
- (void)setCacheMaxSeconds:(long long)arg0;
- (void)setBufferingTimeOut:(long long)arg0;
- (void)setMaxBufferEndTime:(long long)arg0;
- (void)setOutputFramesWaitNum:(long long)arg0;
- (void)setStartPlayAudioBufferThreshold:(long long)arg0;
- (void)setAudioEffectEnabled:(BOOL)arg0;
- (void)setAudioUnitPoolEnabled:(BOOL)arg0;
- (void)setAvSyncStartEnable:(BOOL)arg0;
- (void)setThreadWaitTimeMS:(long long)arg0;
- (void)setCodecDropSkippedFrame:(BOOL)arg0;
- (void)setPlayerLazySeek:(BOOL)arg0;
- (void)setDummyAudioSleep:(BOOL)arg0;
- (void)setDefaultBufferEndTime:(long long)arg0;
- (void)setDecoderOutputType:(unsigned long long)arg0;
- (void)setMdlCacheMode:(long long)arg0;
- (void)setHttpAutoRangeOffset:(long long)arg0;
- (void)setEnableRange:(BOOL)arg0;
- (void)setAudioEffectType:(long long)arg0;
- (void)setAudioEffectVolumInfoVer:(long long)arg0;
- (void)setAudioEffectDevicePlayAbility:(long long)arg0;
- (void)setEnableAllResolutionVideoSR:(BOOL)arg0;
- (void)setEnableAVStack:(long long)arg0;
- (void)setTerminalAudioUnitPool:(BOOL)arg0;
- (void)setAudioLatencyQueueByTime:(BOOL)arg0;
- (void)setVideoEndIsAllEof:(BOOL)arg0;
- (void)setEnableBufferingMilliSeconds:(BOOL)arg0;
- (void)setDefaultBufferingEndMilliSeconds:(long long)arg0;
- (void)setMaxBufferEndMilliSeconds:(long long)arg0;
- (void)setIsEnablePostPrepareMsg:(BOOL)arg0;
- (void)setDisableShortSeek:(BOOL)arg0;
- (void)setEnable720pSR:(BOOL)arg0;
- (void)setEnableKeepFormatThreadAlive:(BOOL)arg0;
- (void)setFindStreamInfoProbeSize:(long long)arg0;
- (void)setFindStreamInfoProbeDuration:(long long)arg0;
- (void)setLiveStartIndex:(long long)arg0;
- (void)setEnableFallbackSWDecode:(BOOL)arg0;
- (void)setEnableFFCodecerHeaacV2Compat:(BOOL)arg0;
- (void)setPreferSpdl4HDR:(BOOL)arg0;
- (void)setStopSourceAsync:(BOOL)arg0;
- (void)setEnableSeekInterrupt:(BOOL)arg0;
- (void)setChangeVtbSizePicSizeBound:(long long)arg0;
- (void)setEnableRangeCacheDuration:(BOOL)arg0;
- (void)setEnableVoiceSplitHeaacV2:(BOOL)arg0;
- (void)setEnableAudioHardwareDecode:(BOOL)arg0;
- (void)setDelayBufferingUpdate:(BOOL)arg0;
- (void)setNoBufferingUpdate:(BOOL)arg0;
- (void)setKeepVoiceDuration:(BOOL)arg0;
- (void)setVoiceBlockDuration:(long long)arg0;
- (void)setEnableSRBound:(BOOL)arg0;
- (void)setSrLongDimensionLowerBound:(long long)arg0;
- (void)setSrLongDimensionUpperBound:(long long)arg0;
- (void)setSrShortDimensionLowerBound:(long long)arg0;
- (void)setSrShortDimensionUpperBound:(long long)arg0;
- (void)setFilePlayNoBuffering:(BOOL)arg0;
- (void)setEnableHookVoice:(BOOL)arg0;
- (void)setEnablePostStart:(BOOL)arg0;
- (void)setEnablePlayerPreloadGear:(BOOL)arg0;
- (void)setIsEnableVsyncHelper:(long long)arg0;
- (void)setCustomizedVideoRenderingFrameRate:(long long)arg0;
- (void)setAudioEffectPregain:(double)arg0;
- (void)setAudioEffectThreshold:(double)arg0;
- (void)setAudioEffectRatio:(double)arg0;
- (void)setAudioEffectPredelay:(double)arg0;
- (void)setAudioEffectPostgain:(double)arg0;
- (void)setAudioEffectSrcLoudness:(double)arg0;
- (void)setAudioEffectTarLoudness:(double)arg0;
- (void)setAudioEffectSrcPeak:(double)arg0;
- (void)setAudioEffectReleaseTime:(double)arg0;
- (void)setAudioEffectLookAheadTime:(double)arg0;
- (void)setAudioEffectLuRange:(double)arg0;
- (void)setAudioEffectLuStart:(double)arg0;
- (void)setAudioEffectLuEnd:(double)arg0;
- (void)setAudioEffectMaxMomLu:(double)arg0;
- (void)setAudioEffectMaxShortermLu:(double)arg0;
- (unsigned long long)decoderOutputType;
- (unsigned long long)playerSeekMode;
- (void)setEnableEnterBufferingDirectly:(BOOL)arg0;
- (void)playerVideoSizeChange:(long long)arg0 height:(long long)arg1;
- (void)playerVideoBitrateChanged:(long long)arg0;
- (void)playerDeviceOpened:(long long)arg0;
- (void)playerAudioRenderStart;
- (void)playerMediaInfoDidChanged:(long long)arg0;
- (void)playerAVOutsyncStateChange:(long long)arg0 pts:(long long)arg1;
- (void)playerNOVARenderStateChange:(unsigned long long)arg0 noRenderType:(int)arg1;
- (void)playerStartTimeNoVideoFrame:(int)arg0;
- (void)playerPreBuffering:(long long)arg0;
- (void)playerOutleterPaused:(long long)arg0;
- (void)playerBarrageMaskInfoCompleted:(long long)arg0;
- (void)playerShowedFirstAVSyncFrame;
- (void)playerVideoAbnormalOccur:(long long)arg0;
- (id)usingSerialTaskQueue;
- (void)setEnableTimerBarPercentage:(BOOL)arg0;
- (void)setEnableTTHlsDrm:(BOOL)arg0;
- (void)setTtHlsDrmToken:(id)arg0;
- (void /* function */ *)drmCreater;
- (unsigned long long)drmType;
- (void)setDrmType:(unsigned long long)arg0;
- (long long)drmDowngrade;
- (void)setDrmDowngrade:(long long)arg0;
- (id)tokenUrlTemplate;
- (void)setTokenUrlTemplate:(id)arg0;
- (id)playUrl;
- (BOOL)reportRequestHeaders;
- (void)setReportRequestHeaders:(BOOL)arg0;
- (BOOL)reportResponseHeaders;
- (void)setReportResponseHeaders:(BOOL)arg0;
- (BOOL)enableDashAbr;
- (void)setEnableDashAbr:(BOOL)arg0;
- (BOOL)enableIndexCache;
- (void)setEnableIndexCache:(BOOL)arg0;
- (BOOL)enableFragRange;
- (void)setEnableFragRange:(BOOL)arg0;
- (BOOL)enableAsync;
- (void)setEnableAsync:(BOOL)arg0;
- (void)setRangeMode:(unsigned long long)arg0;
- (unsigned long long)readMode;
- (void)setReadMode:(unsigned long long)arg0;
- (long long)videoRangeSize;
- (void)setVideoRangeSize:(long long)arg0;
- (long long)audioRangeSize;
- (void)setAudioRangeSize:(long long)arg0;
- (long long)videoRangeTime;
- (void)setVideoRangeTime:(long long)arg0;
- (long long)audioRangeTime;
- (void)setAudioRangeTime:(long long)arg0;
- (BOOL)skipFindStreamInfo;
- (void)setSkipFindStreamInfo:(BOOL)arg0;
- (unsigned long long)updateTimestampMode;
- (void)setUpdateTimestampMode:(unsigned long long)arg0;
- (BOOL)enableOpenTimeout;
- (void)setEnableOpenTimeout:(BOOL)arg0;
- (id)loadControl;
- (long long)cacheMaxSeconds;
- (long long)bufferingTimeOut;
- (long long)maxBufferEndTime;
- (BOOL)enableTimerBarPercentage;
- (BOOL)enableTTHlsDrm;
- (id)ttHlsDrmToken;
- (BOOL)enableEnterBufferingDirectly;
- (long long)outputFramesWaitNum;
- (long long)startPlayAudioBufferThreshold;
- (BOOL)audioEffectEnabled;
- (double)audioEffectPregain;
- (double)audioEffectThreshold;
- (double)audioEffectRatio;
- (double)audioEffectPredelay;
- (double)audioEffectPostgain;
- (long long)audioEffectType;
- (double)audioEffectSrcLoudness;
- (double)audioEffectSrcPeak;
- (double)audioEffectTarLoudness;
- (double)audioEffectReleaseTime;
- (double)audioEffectLookAheadTime;
- (double)audioEffectLuRange;
- (double)audioEffectLuStart;
- (double)audioEffectLuEnd;
- (double)audioEffectMaxMomLu;
- (double)audioEffectMaxShortermLu;
- (long long)audioEffectVolumInfoVer;
- (long long)audioEffectDevicePlayAbility;
- (id)audioEffectConfigJson;
- (void)setAudioEffectConfigJson:(id)arg0;
- (id)audioEffectVolumeInfoJson;
- (void)setAudioEffectVolumeInfoJson:(id)arg0;
- (id)audioEffectGraphConfig;
- (void)setAudioEffectGraphConfig:(id)arg0;
- (BOOL)audioUnitPoolEnabled;
- (BOOL)avSyncStartEnable;
- (BOOL)codecDropSkippedFrame;
- (long long)threadWaitTimeMS;
- (BOOL)playerLazySeek;
- (BOOL)dummyAudioSleep;
- (long long)defaultBufferEndTime;
- (long long)mdlCacheMode;
- (long long)httpAutoRangeOffset;
- (BOOL)enableRange;
- (long long)normalClockType;
- (BOOL)enableAllResolutionVideoSR;
- (long long)skipBufferLimit;
- (long long)enableAVStack;
- (BOOL)terminalAudioUnitPool;
- (BOOL)audioLatencyQueueByTime;
- (BOOL)videoEndIsAllEof;
- (BOOL)enableBufferingMilliSeconds;
- (BOOL)enableKeepFormatThreadAlive;
- (BOOL)enable720pSR;
- (BOOL)enableFFCodecerHeaacV2Compat;
- (long long)defaultBufferingEndMilliSeconds;
- (long long)maxBufferEndMilliSeconds;
- (long long)decreaseVtbStackSize;
- (BOOL)isEnablePostPrepareMsg;
- (BOOL)disableShortSeek;
- (long long)findStreamInfoProbeSize;
- (long long)findStreamInfoProbeDuration;
- (long long)liveStartIndex;
- (BOOL)enableFallbackSWDecode;
- (BOOL)preferSpdl4HDR;
- (BOOL)stopSourceAsync;
- (BOOL)enableSeekInterrupt;
- (long long)changeVtbSizePicSizeBound;
- (BOOL)enableRangeCacheDuration;
- (BOOL)enableVoiceSplitHeaacV2;
- (BOOL)enableAudioHardwareDecode;
- (BOOL)delayBufferingUpdate;
- (BOOL)noBufferingUpdate;
- (BOOL)keepVoiceDuration;
- (long long)voiceBlockDuration;
- (BOOL)enableSRBound;
- (long long)srLongDimensionLowerBound;
- (long long)srLongDimensionUpperBound;
- (long long)srShortDimensionLowerBound;
- (long long)srShortDimensionUpperBound;
- (BOOL)filePlayNoBuffering;
- (BOOL)enablePostStart;
- (BOOL)enablePlayerPreloadGear;
- (long long)isEnableVsyncHelper;
- (long long)customizedVideoRenderingFrameRate;
- (void)setUseFallbackApi:(BOOL)arg0;
- (void)setPlayItem:(id)arg0;
- (BOOL)useFallbackApi;
- (id)netClient;
- (BOOL)useEphemeralSession;
- (void)setUseEphemeralSession:(BOOL)arg0;
- (void)setAsyncClose:(BOOL)arg0;
- (id)resourceLoaderDelegate;
- (void)playbackDidFinish:(id)arg0;
- (void)setCurrentPlaybackTime:(double)arg0 complete:(id /* block */)arg1 renderComplete:(id /* block */)arg2;
- (void)setCurrentPlaybackTime:(double)arg0 complete:(id /* block */)arg1;
- (void)loadStateDidChange:(unsigned long long)arg0 stallReason:(unsigned long long)arg1;
- (void)playableDurationUpdate:(double)arg0;
- (void)playerIsPrepared;
- (void)playerReadyToDisplay;
- (void)playerIsReadyToPlay;
- (void)setEnableReportAllBufferUpdate:(BOOL)arg0;
- (void)setUpPlayerViewWrapper:(id)arg0;
- (void)dynamicGaussianBlurResetViewSize:(long long)arg0;
- (unsigned long long)testSpeedMode;
- (void)setTestSpeedMode:(unsigned long long)arg0;
- (long long)mirrorType;
- (void)setMirrorType:(long long)arg0;
- (BOOL)optimizeMemoryUsage;
- (void)setOptimizeMemoryUsage:(BOOL)arg0;
- (long long)loopWay;
- (void)setLoopWay:(long long)arg0;
- (BOOL)asyncPrepare;
- (void)setAsyncPrepare:(BOOL)arg0;
- (BOOL)ksyByteVC1Decode;
- (void)setKsyByteVC1Decode:(BOOL)arg0;
- (BOOL)barrageMaskEnable;
- (void)setBarrageMaskEnable:(BOOL)arg0;
- (BOOL)aiBarrageEnable;
- (void)setAiBarrageEnable:(BOOL)arg0;
- (long long)smoothDelayedSeconds;
- (void)setSmoothDelayedSeconds:(long long)arg0;
- (void)setResourceLoaderDelegate:(id)arg0;
- (long long)enableReportAllBufferUpdate;
- (BOOL)subEnable;
- (void)setSubEnable:(BOOL)arg0;
- (BOOL)enableRemoveTaskQueue;
- (void)setEnableRemoveTaskQueue:(BOOL)arg0;
- (void)setAbrModule:(id)arg0;
- (id)abrModule;
- (float)getSpeedConfidence;
- (id)getCoverImage;
- (id)engineMemoryKey;
- (id)optionRole:(unsigned long long)arg0;
- (id)_itemForKey:(long long)arg0;
- (void)setConfigValue:(id)arg0 forKey:(long long)arg1;
- (id)configValueForKey:(long long)arg0;
- (id)configItemForKey:(long long)arg0;
- (void)setConfigurations:(id)arg0 forTag:(id)arg1;
- (id)getMediaTrackInfos;
- (void)_setOption:(id)arg0 value:(id)arg1;
- (void)ls_setDirectURL:(id)arg0 key:(id)arg1 videoId:(id)arg2;
- (void)ls_setDirectURLs:(id)arg0 filePath:(id)arg1;
- (void)ls_setDirectURLs:(id)arg0 key:(id)arg1 videoId:(id)arg2;
- (void)setInitialUrlBeforeMdlProxy:(id)arg0;
- (id)_ls_proxyUrl:(id)arg0 rawKey:(id)arg1 urls:(id)arg2 extraInfo:(id)arg3 filePath:(id)arg4;
- (void)setDirectPlayURL:(id)arg0 cacheFile:(id)arg1;
- (void)_ls_addTask:(id)arg0 key:(id)arg1 resolution:(unsigned long long)arg2 proxyUrl:(id)arg3 decryptionKey:(id)arg4 info:(id)arg5 urls:(id)arg6;
- (id)_ls_proxyUrl:(id)arg0;
- (void)setMDLGroupID:(id)arg0;
- (void)ls_setDirectURLs:(id)arg0 key:(id)arg1 videoId:(id)arg2 extraInfo:(id)arg3;
- (BOOL)medialoaderNativeEnable;
- (void)_registerMdlProtocolHandle;
- (BOOL)medialoaderProtocolRegistered;
- (BOOL)firstNativeMdlEnable;
- (BOOL)firstNativeRegister;
- (BOOL)_removeThirdPartyProtocolHead:(id)arg0;
- (long long)limitMediaCacheSize;
- (id)_addThirdPartyProtocolHead:(id)arg0;
- (void)_ls_logProxyUrl:(id)arg0;
- (void)setPlaySourceId:(id)arg0;
- (id)playSourceId;
- (id)ffmpegProtocol;
- (void)ls_setDirectURL:(id)arg0 key:(id)arg1;
- (void)ls_setDirectURL:(id)arg0 filePath:(id)arg1;
- (void)ls_setDirectURLs:(id)arg0 key:(id)arg1;
- (void)ls_setDirectURLItem:(id)arg0;
- (void)ls_setGroupID:(id)arg0;
- (void)ls_setDirectURLs:(id)arg0 filePath:(id)arg1 key:(id)arg2;
- (void)ls_setDirectURL:(id)arg0 key:(id)arg1 videoId:(id)arg2 extraInfo:(id)arg3;
- (void)ls_setPlayInfo:(long long)arg0 Traceid:(id)arg1 Value:(long long)arg2;
- (void)setSpeedPredictBlock:(id /* block */)arg0;
- (void)_ls_removePlayTaskByKeys:(id)arg0;
- (id)_ls_getMDLPlayLog:(id)arg0;
- (id)_ls_getPreloadTraceId:(id)arg0;
- (void)_ls_resetPreloadTraceId:(id)arg0;
- (void)setBoeEnable:(BOOL)arg0;
- (id)ls_proxyUrl:(id)arg0 rawKey:(id)arg1 urls:(id)arg2 extraInfo:(id)arg3 filePath:(id)arg4;
- (id)subtitleDelegate;
- (void)setSubtitleInfo:(id)arg0;
- (id)subtitleNetworkClient;
- (id)_getSubtitleUrlWithHostName:(id)arg0 vid:(id)arg1 fileId:(id)arg2 language:(id)arg3 format:(id)arg4;
- (void)_requestSubtitleInfoWithUrlString:(id)arg0 handler:(id /* block */)arg1;
- (id)subtitleInfo;
- (id)requestedSubtitleInfo;
- (id)vrAction;
- (void)setVREffectParamter:(id)arg0;
- (id)isAlreadySetParam;
- (void)setIsAlreadySetParam:(id)arg0;
- (void)didUpdateVRHeadPoseWithYaw:(double)arg0 pitch:(double)arg1 roll:(double)arg2;
- (void)setVrAction:(id)arg0;
- (void)setIntOptionValue:(long long)arg0 forKey:(long long)arg1;
- (void)setCurrentNetworkStatus:(long long)arg0;
- (void)setFileHashArray:(id)arg0;
- (void)setCurMetricAblity:(long long)arg0;
- (void)_registerHLSProxyProtocolHandle;
- (void)audioDeviceNotification:(id)arg0;
- (void)setSettingMask:(unsigned long long)arg0;
- (void)setStartPlayTimestamp:(long long)arg0;
- (void)setEasyPreloadNotifyTime:(double)arg0;
- (BOOL)fallbackApiMDLRetry;
- (id)_engineDebugInfo;
- (void)releaseLog;
- (void)removeConfigurations;
- (id)eventLogger;
- (void)logUrlConnectToFirstFrameTime;
- (BOOL)isRegistedObservePlayViewBound;
- (void)removeObserversForAbr;
- (void)setIsRegistedObservePlayViewBound:(BOOL)arg0;
- (id)fragmentLoader;
- (void)setAudioDeviceType:(unsigned long long)arg0;
- (void)resetOnRefreshSource;
- (void)_needStopBeforePlayerWithPlaySource:(id)arg0;
- (BOOL)supportExpiredModel;
- (void)logFetchedVideoInfo:(id)arg0;
- (void)setCacheFilePathWhenUsingDirectURL:(id)arg0;
- (void)setDirectPlayURL:(id)arg0;
- (id)osplayerItem;
- (void)setOsplayerItem:(id)arg0;
- (long long)abrSwitchMode;
- (unsigned long long)_getAutoResolution;
- (void)setAutoModeEnabled:(BOOL)arg0;
- (void)setCurrentParams:(id)arg0;
- (id)_resolutionStringForType:(unsigned long long)arg0;
- (void)switchToDefinition:(unsigned long long)arg0 params:(id)arg1;
- (void)setConfigResolutionComplete:(id /* block */)arg0;
- (BOOL)configResolution:(unsigned long long)arg0 params:(id)arg1;
- (void)notifyDelegateSwitchComplete:(BOOL)arg0;
- (BOOL)configResolution:(unsigned long long)arg0;
- (unsigned long long)settingMask;
- (double)loopEndTime;
- (void)setCurMetricIntval:(long long)arg0;
- (long long)mABR4GMaxResolutionIndex;
- (void)_initSetMediaInfo;
- (void)_markFirstPlay;
- (id)responderChain;
- (void)setIdleTimerDisabledOnMainQueue:(BOOL)arg0;
- (BOOL)performanceLogEnable;
- (void)setAccumulatedErrorCount:(unsigned long long)arg0;
- (void)setPlayerIsPreparing:(BOOL)arg0;
- (void)_logDNSMode:(long long)arg0;
- (void)_ls_cancelPreload:(id)arg0 info:(id)arg1;
- (void)_prepareToPlay:(BOOL)arg0;
- (BOOL)postprepareWay;
- (void)setNeedPlayBack:(BOOL)arg0;
- (long long)startPlayTimestamp;
- (Class)networkPredictorActionClass;
- (id)logInfoTag;
- (long long)hijackCode;
- (long long)abrProbeCount;
- (long long)abrSwitchCount;
- (long long)abrAverageBitrate;
- (double)abrAveragePlaySpeed;
- (BOOL)isUsedAbr;
- (long long)abrDiddAbs;
- (void)_userWillLeave;
- (id)fileHashArray;
- (BOOL)isOwnPlayer;
- (long long)lastUserAction;
- (void)setLastUserAction:(long long)arg0;
- (void)_buryDataWhenUserWillLeave;
- (void)_buryDataWhenSendOneplayEvent;
- (void)setEngineCloseIsDone:(BOOL)arg0;
- (BOOL)isGetFromEnginePool;
- (void)syncPauseVideo;
- (void)seekToTime:(double)arg0 switchingResolution:(BOOL)arg1 complete:(id /* block */)arg2 renderComplete:(id /* block */)arg3;
- (id)speedTimer;
- (void)setSpeedTimer:(id)arg0;
- (double)beforeSeekTimeInterval;
- (void)setBeforeSeekTimeInterval:(double)arg0;
- (id)mCompanyId;
- (void)_createCacheFileDirAndDeleteInvalidDataIfNeed;
- (void)fetchVideoInfo;
- (void)_startToPlay;
- (BOOL)playerIsPreparing;
- (BOOL)retryEnableHttps;
- (void)setHttpsEnabled:(BOOL)arg0;
- (BOOL)byteVC1Enabled;
- (BOOL)dashEnabled;
- (BOOL)httpsEnabled;
- (void)logUserCancelled;
- (void)setDidCallPrepareToPlay:(BOOL)arg0;
- (void)logFetchInfoError:(id)arg0;
- (BOOL)isUserStopped;
- (BOOL)autoModeEnabled;
- (BOOL)resolutionServerControlEnabled;
- (id)currentParams;
- (void)_fetchVideoInfo;
- (BOOL)isViewWrapperSet;
- (void)setIsViewWrapperSet:(BOOL)arg0;
- (BOOL)dnsCacheEnable;
- (long long)dnsExpiredTime;
- (void)updateURLArray;
- (void)setShouldUseAudioRenderStart:(BOOL)arg0;
- (id)_traceIdBaseTime:(double)arg0;
- (id)networkPredictorAction;
- (long long)netSpeedUpdateInterval;
- (id)engineHash;
- (void)_configHardwareDecode;
- (void)_updateOptionsToLogger;
- (BOOL)seekEndEnabled;
- (long long)embellishVolumeMilliseconds;
- (BOOL)reuseSocket;
- (BOOL)disableAccurateStart;
- (BOOL)isEnablePlayCallbackHitCacheSize;
- (void)_updateMDLHitCacheSize;
- (BOOL)isUsingAVResolver;
- (BOOL)isSwitchingDefinition;
- (id)maskInfoDelegate;
- (BOOL)barrageMaskThreadEnable;
- (BOOL)aiBarrageThreadEnable;
- (id)aiBarrager;
- (void)setSupportBarrageMask:(BOOL)arg0;
- (id)maskFileHash;
- (void)setMaskHeadLen:(long long)arg0;
- (long long)maskHeadLen;
- (BOOL)maskEnableDataLoader;
- (BOOL)didSetAESrcPeak;
- (BOOL)didSetAESrcLoudness;
- (id)dynamicAudioInfo;
- (id)currentVideoInfo;
- (BOOL)didSetAEVolumVer;
- (BOOL)cacheVoiceId;
- (BOOL)skipSetSameWindow;
- (BOOL)checkHijack;
- (BOOL)hijackRetryEnable;
- (BOOL)isHijackRetried;
- (BOOL)isSupportSeamlessSwitch;
- (void)setIsUsedAbr:(BOOL)arg0;
- (void)setDashEnabled:(BOOL)arg0;
- (void)configAudioInterruption;
- (void)setFpsResourceLoaderDelegate:(id)arg0;
- (id)fpsResourceLoaderDelegate;
- (id)produceUserAgentString;
- (id)isIgnoreAudioInterruptionValue;
- (void)setMdlCacheSize:(long long)arg0;
- (long long)mdlCacheSize;
- (id)bashDefaultMDLKeysMap;
- (id)initialUrlBeforeMdlProxy;
- (BOOL)didCallPrepareToPlay;
- (void)_setUpPlayer;
- (BOOL)isEnablePreloadCheckByPlay;
- (void)_startCheckPreloadTimer;
- (void)setBashEnable:(BOOL)arg0;
- (BOOL)bashEnable;
- (BOOL)hlsSeamlessSwitch;
- (BOOL)isSupportHLSSeamlessSwitch;
- (id)startUpParams;
- (void)configAutoStartUpResolutionIfNeeded;
- (void)startUpGearByGearStrategy;
- (BOOL)isHDR10Video:(id)arg0;
- (BOOL)isSupportUseBash;
- (void)setDynamicAudioInfo:(id)arg0;
- (void)setCurrentVideoInfo:(id)arg0;
- (id)getMemUrl;
- (void)_setMdlForbidP2pFlag:(id)arg0;
- (id)generateMdlUrlForSpeedTest:(id)arg0 temUrl:(id)arg1;
- (BOOL)disableEngineDns;
- (void)parseDNS:(id)arg0;
- (long long)segmentFormatFlag;
- (void)setCurrentDownloadAudioBitrate:(int)arg0;
- (int)currentDownloadAudioBitrate;
- (void)setTemSeekFinishBlock:(id /* block */)arg0;
- (void)setTemSeekRenderCompleteBlock:(id /* block */)arg0;
- (BOOL)isNSDictionary:(id)arg0 EqualToNSDictionary:(id)arg1;
- (void)switchBitrate:(long long)arg0 type:(long long)arg1;
- (BOOL)isSuggestingReduceResolution;
- (void)setIsSuggestingReduceResolution:(BOOL)arg0;
- (id)resolutionDelegate;
- (void)setIsSeamlessSwitching:(BOOL)arg0;
- (void)switchDefinitionCompleted:(BOOL)arg0;
- (unsigned long long)accumulatedErrorCount;
- (void)setPlayerUrlDNSRetryCount:(long long)arg0;
- (long long)maxAccumulatedErrCount;
- (long long)playerUrlDNSRetryCount;
- (unsigned long long)hijackRetryMainDnsType;
- (unsigned long long)hijackRetryBackupDnsType;
- (void)_removeCacheFile;
- (void)setIsHijackRetried:(BOOL)arg0;
- (void)setRetryEnableHttps:(BOOL)arg0;
- (BOOL)drmRetry;
- (BOOL)enableClearMdlCache;
- (void)tryNextURL;
- (id /* block */)configResolutionComplete;
- (BOOL)isSeamlessSwitching;
- (void)setIsSwitchingDefinition:(BOOL)arg0;
- (id /* block */)temSeekFinishBlock;
- (id /* block */)temSeekRenderCompleteBlock;
- (void)setFirstFrameMetrics:(id)arg0;
- (void)setPlayerLog:(id)arg0;
- (void)_reportVideoProcessorData;
- (void)_reportPreloadGearData;
- (long long)getVRIntValueForKey:(long long)arg0;
- (float)getVRFloatValueForKey:(long long)arg0;
- (void)updateURLWithIP:(id)arg0;
- (void)_syncPlayInfoToMdlForKey:(long long)arg0 Value:(long long)arg1;
- (void)movieStalled;
- (void)_doMetrics;
- (void)_ls_tryToNotifyPrelaod;
- (void)seekToLastPlaytimeAfterSwitchResolution;
- (void)_buryDataWhenPrepareToDisplay;
- (void)_setupSubtitleInfo;
- (void)_manualSendRenderStart;
- (void)_tryConfigVodStrategyInfo;
- (BOOL)needPlayBack;
- (void)_startTimerToSyncPlayInfo;
- (BOOL)shouldPlay;
- (void)_buryDataWhenPlayerPrepared;
- (void)_stopTimerToSyncPlayInfo;
- (void)_stopCheckPreloadTimer;
- (BOOL)enableReportPreloadTraceId;
- (long long)enableGetPlayerReqOffset;
- (BOOL)usingEngineQueue;
- (id)dashABRDelegate;
- (long long)abrTimerInterval;
- (id)networkPredictorDelegate;
- (void)predictorSpeedNetworkChanged:(float)arg0 timestamp:(long long)arg1;
- (id)getEventLogger;
- (id)_defaultCacheFileDataDirectory;
- (double)easyPreloadNotifyTime;
- (long long)easyPreloadThreshold;
- (BOOL)preloadDurationCheck;
- (id)subDecInfoModel;
- (void)__setupSubtitleInfoWithSubModel;
- (void)__setupSubtitleInfoWithRequest;
- (BOOL)subThreadEnable;
- (id)subtitleHostName;
- (id)subLangQuery;
- (void)setBarrageMaskURL:(id)arg0 fileHash:(id)arg1;
- (long long)curMetricAblity;
- (long long)curMetricIntval;
- (long long)medialoaderCdnType;
- (long long)mediaLoaderPcdnTimerInterval;
- (id)pcdnTimer;
- (void)setPcdnTimer:(id)arg0;
- (BOOL)isEnablePreloadCheckTimer;
- (id)checkPreloadTimer;
- (void)setCheckPreloadTimer:(id)arg0;
- (id)statisticsVid;
- (long long)detect_time;
- (void)setMCompanyId:(id)arg0;
- (void)onInfo:(int)arg0 withDetail:(int)arg1;
- (float)getPlaySpeed;
- (float)getNetworkSpeed;
- (int)getNetworkState;
- (int)getLoaderType;
- (int)getCurrentDownloadVideoBitrate;
- (int)getCurrentDownloadAudioBitrate;
- (int)getMaxCacheVideoTime;
- (int)getMaxCacheAudioTime;
- (int)getPlayerVideoCacheTime;
- (int)getPlayerAudioCacheTime;
- (long long)getExpectedBitrate;
- (id)getTimelineNetworkSpeed;
- (id)getVideoBufferInfo;
- (id)getAudioBufferInfo;
- (void)onSubInfoCallBack:(id)arg0;
- (void)onSubSwitchCompleted:(BOOL)arg0 languageId:(long long)arg1;
- (void)onSubLoadFinished:(BOOL)arg0 code:(long long)arg1;
- (void)onSubLoadFinished:(BOOL)arg0 code:(long long)arg1 info:(id)arg2;
- (long long)getCurrentVideoBufLength;
- (long long)getCurrentAudioBufLength;
- (long long)getPlayerVideoMaxCacheBufferLength;
- (long long)getPlayerAudioMaxCacheBufferLength;
- (id)getDubbedMemUrl:(id)arg0;
- (void)resetAllOptions;
- (void)setFallbackApiMDLRetry:(BOOL)arg0;
- (long long)getVideoBufferLength;
- (BOOL)getStreamEnabled:(long long)arg0;
- (long long)getVideoSRWidth;
- (long long)getVideoSRHeight;
- (BOOL)isBashSource;
- (unsigned long long)getStartUpAutoResolutionResult:(id)arg0 defaultResolution:(unsigned long long)arg1;
- (void)setLiveID:(id)arg0;
- (void)setPreloaderItem:(id)arg0;
- (void)setMemoryDataSource:(id)arg0;
- (void)configResolution:(unsigned long long)arg0 params:(id)arg1 completion:(id /* block */)arg2;
- (void)setGearStrategyDelegate:(id)arg0 userData:(id)arg1;
- (void)setByteVC1Enabled:(BOOL)arg0;
- (BOOL)proxyServerEnable;
- (void)setProxyServerEnable:(BOOL)arg0;
- (void)setMedialoaderNativeEnable:(BOOL)arg0;
- (void)setMedialoaderCdnType:(long long)arg0;
- (void)setLoopEndTime:(double)arg0;
- (void)setServerDecodingMode:(BOOL)arg0;
- (void)setHlsSeamlessSwitch:(BOOL)arg0;
- (void)setAiBarrageThreadEnable:(BOOL)arg0;
- (void)setDnsCacheEnable:(BOOL)arg0;
- (void)setEncryptedDecryptionKey:(id)arg0;
- (void)setMetricAbility:(long long)arg0;
- (void)setMetricInterVal:(long long)arg0;
- (void)setSeekEndEnabled:(BOOL)arg0;
- (void)setFpsCertificateData:(id)arg0 fpsId:(long long)arg1 fpsLicenseUrl:(id)arg2;
- (id)debugInfoView;
- (void)setPerformanceLogEnable:(BOOL)arg0;
- (void)setAudioEffectShortermLu:(double)arg0;
- (void)setAudioEffectJsonConfig:(id)arg0;
- (void)setPrepareMaxCacheMs:(long long)arg0;
- (void)setNnsrFpsThreshold:(long long)arg0;
- (void)setVideoRenderStallThreshold:(long long)arg0;
- (void)setBufferingStartIDLTime:(long long)arg0;
- (void)setBusinessSessionId:(id)arg0;
- (void)setEnableOnePlayMerge:(int)arg0;
- (void)setSubtitleDelegate:(id)arg0;
- (void)setSubtitleHostName:(id)arg0;
- (id)getSubtitleInfo:(long long)arg0;
- (void)setSubThreadEnable:(BOOL)arg0;
- (void)setSubDecInfoModel:(id)arg0;
- (void)setCurrentSubLangId:(long long)arg0;
- (void)switchNewSubtitleModel:(id)arg0;
- (void)setPreferNearstSampleEnable:(BOOL)arg0;
- (void)setPreferNearstSampleMaxPosOffset:(long long)arg0;
- (void)setEnableRefreshByTime:(BOOL)arg0;
- (void)setSkipSetSameWindow:(BOOL)arg0;
- (void)setCacheVoiceId:(BOOL)arg0;
- (void)setEnableUseMachTime:(BOOL)arg0;
- (id)playerLog;
- (long long)currentVideoTime;
- (long long)videoCodecId;
- (long long)audioCodecId;
- (long long)audioCodecProfile;
- (long long)videoCodecProfile;
- (BOOL)audioEffectOpened;
- (void)setSpecialFunctionType:(long long)arg0;
- (void)addSpeedTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)removeSpeedTimeObserver;
- (double)videoOutputFPS;
- (double)containerFPS;
- (long long)playBytes;
- (id)getCurPreloaderItem;
- (void)_removeMdlCacheFile;
- (float)getProbeInterval;
- (BOOL)_isMainUrl;
- (id)getFileFormat;
- (id)getStreamTrackInfo;
- (void)_printEngineCallTrace;
- (void)setBarrageMaskURL:(id)arg0;
- (void)setMaskInfoDelegate:(id)arg0;
- (void)setAiBarrageInfoDelegate:(id)arg0;
- (void)setMaskStopTimeout:(long long)arg0;
- (void)setSubtitleStopTimeout:(long long)arg0;
- (void)setHdr10VideoModelLowBound:(long long)arg0;
- (void)setHdr10VideoModelHighBound:(long long)arg0;
- (void)setPreferSpdl4HDRUrl:(BOOL)arg0;
- (void)setFFmpegProtocol:(id)arg0;
- (id)getUrlInfoList;
- (void)setRecheckVPLSforDirectBuffering:(BOOL)arg0;
- (id)crosstalkHappen:(id)arg0 liveEngineDict:(id)arg1;
- (id)getEnginePlayInfo;
- (void)setCustomCompanyID:(id)arg0;
- (long long)videoRenderStallThreshold;
- (void)setResolutionDelegate:(id)arg0;
- (void)setDashABRDelegate:(id)arg0;
- (void)setNetworkPredictorDelegate:(id)arg0;
- (id)videoVRDelegate;
- (void)setVideoVRDelegate:(id)arg0;
- (BOOL)cacheEnable;
- (BOOL)supportBarrageMask;
- (void)setIsOwnPlayer:(BOOL)arg0;
- (BOOL)engineCloseIsDone;
- (void)setIsGetFromEnginePool:(BOOL)arg0;
- (void)setEventLogger:(id)arg0;
- (void)setFragmentLoader:(id)arg0;
- (void)setNetworkPredictorAction:(id)arg0;
- (void)setLogInfoTag:(id)arg0;
- (unsigned long long)audioDeviceType;
- (BOOL)hasShownFirstFrame;
- (void)setHasShownFirstFrame:(BOOL)arg0;
- (BOOL)hasAudioRenderStarted;
- (void)setHasAudioRenderStarted:(BOOL)arg0;
- (void)setIsUserStopped:(BOOL)arg0;
- (id)cacheFilePathWhenUsingDirectURL;
- (BOOL)firstGetWidthHeight;
- (void)setFirstGetWidthHeight:(BOOL)arg0;
- (void)setBashDefaultMDLKeysMap:(id)arg0;
- (void)setEasyPreloadThreshold:(long long)arg0;
- (BOOL)didSetHardware;
- (void)setDidSetHardware:(BOOL)arg0;
- (void)setDidSetAESrcLoudness:(BOOL)arg0;
- (void)setDidSetAESrcPeak:(BOOL)arg0;
- (void)setDidSetAEVolumVer:(BOOL)arg0;
- (BOOL)shouldUseAudioRenderStart;
- (void)setAiBarrager:(id)arg0;
- (id)gearStrategyContext;
- (void)setGearStrategyContext:(id)arg0;
- (id)aiBarrageInfoDelegate;
- (void)setFfmpegProtocol:(id)arg0;
- (void)setLocalServerTaskKeys:(id)arg0;
- (BOOL)serverDecodingMode;
- (void)setDnsExpiredTime:(long long)arg0;
- (void)setBarrageMaskThreadEnable:(BOOL)arg0;
- (void)setMaskEnableDataLoader:(BOOL)arg0;
- (long long)currentSubLangId;
- (void)setSubLangQuery:(id)arg0;
- (void)setDrmRetry:(BOOL)arg0;
- (long long)fpsAppId;
- (void)setFpsAppId:(long long)arg0;
- (id)fpsCertificateData;
- (void)setFpsCertificateData:(id)arg0;
- (id)fpsLicenseUrl;
- (void)setFpsLicenseUrl:(id)arg0;
- (id)checkInfoString;
- (void)setCheckInfoString:(id)arg0;
- (void)setLimitMediaCacheSize:(long long)arg0;
- (long long)preloadUpperBufferMs;
- (void)setPreloadUpperBufferMs:(long long)arg0;
- (long long)preloadLowerBufferMs;
- (void)setPreloadLowerBufferMs:(long long)arg0;
- (void)setPreloadDurationCheck:(BOOL)arg0;
- (void)setIsEnablePreloadCheckTimer:(BOOL)arg0;
- (void)setIsEnablePreloadCheckByPlay:(BOOL)arg0;
- (void)setSupportExpiredModel:(BOOL)arg0;
- (void)setHijackRetryEnable:(BOOL)arg0;
- (void)setHijackRetryMainDnsType:(unsigned long long)arg0;
- (void)setHijackRetryBackupDnsType:(unsigned long long)arg0;
- (void)setAbrSwitchMode:(long long)arg0;
- (void)setSegmentFormatFlag:(long long)arg0;
- (void)setMABR4GMaxResolutionIndex:(long long)arg0;
- (long long)nnsrFpsThreshold;
- (id)firstFrameMetrics;
- (long long)idleTimerAutoMode;
- (void)setIdleTimerAutoMode:(long long)arg0;
- (BOOL)aeForbidCompressor;
- (void)setAeForbidCompressor:(BOOL)arg0;
- (void)setAbrTimerInterval:(long long)arg0;
- (void)setDetect_time:(long long)arg0;
- (void)setEngineHash:(id)arg0;
- (void)setUsingEngineQueue:(BOOL)arg0;
- (long long)prepareMaxCacheMs;
- (void)setSubtitleNetworkClient:(id)arg0;
- (BOOL)notifyBufferBeforeFirstFrame;
- (void)setNotifyBufferBeforeFirstFrame:(BOOL)arg0;
- (BOOL)enableRefreshByTime;
- (void)setMaxAccumulatedErrCount:(long long)arg0;
- (long long)hdr10VideoModelLowBound;
- (long long)hdr10VideoModelHighBound;
- (void)setAudioCodecId:(long long)arg0;
- (void)setVideoCodecId:(long long)arg0;
- (void)setAudioCodecProfile:(long long)arg0;
- (void)setVideoCodecProfile:(long long)arg0;
- (BOOL)preferSpdl4HDRUrl;
- (long long)maskStopTimeout;
- (long long)subtitleStopTimeout;
- (BOOL)recheckVPLSforDirectBuffering;
- (void)setResponderChain:(id)arg0;
- (void)setEnableReportPreloadTraceId:(BOOL)arg0;
- (void)setEnableGetPlayerReqOffset:(long long)arg0;
- (BOOL)enableUseMachTime;
- (void)setEnableClearMdlCache:(BOOL)arg0;
- (double)userSetVolume;
- (void)setUserSetVolume:(double)arg0;
- (void)setDisableEngineDns:(BOOL)arg0;
- (void)setIsIgnoreAudioInterruptionValue:(id)arg0;
- (long long)bufferingStartIDLTime;
- (id)businessSessionId;
- (int)enableOnePlayMerge;
- (long long)specialFunctionType;
- (void)setMedialoaderProtocolRegistered:(BOOL)arg0;
- (BOOL)hlsproxyProtocolRegistered;
- (void)setHlsproxyProtocolRegistered:(BOOL)arg0;
- (void)setMediaLoaderPcdnTimerInterval:(long long)arg0;
- (void)setFirstNativeMdlEnable:(BOOL)arg0;
- (void)setNetSpeedUpdateInterval:(long long)arg0;
- (void)setStartUpParams:(id)arg0;
- (void)setEmbellishVolumeMilliseconds:(long long)arg0;
- (BOOL)smoothlySwitching;
- (void)setSmoothlySwitching:(BOOL)arg0;
- (void)setIsUsingAVResolver:(BOOL)arg0;
- (id)encryptedDecryptionKey;
- (void)setResolutionServerControlEnabled:(BOOL)arg0;
- (BOOL)useExternDirEnable;
- (void)setUseExternDirEnable:(BOOL)arg0;
- (id)externCacheDir;
- (void)setExternCacheDir:(id)arg0;
- (void)setPostprepareWay:(BOOL)arg0;
- (BOOL)preferNearstSampleEnable;
- (long long)preferNearstSampleMaxPosOffset;
- (BOOL)isEnableBackGroundPlay;
- (void)setIsEnableBackGroundPlay:(BOOL)arg0;
- (void)setIsEnablePlayCallbackHitCacheSize:(BOOL)arg0;
- (void)perf_play;
- (void)perf_prepareToPlay;
- (id)timer;
- (BOOL)isComplete;
- (long long)playbackState;
- (double)currentPlaybackTime;
- (void)setDataSource:(id)arg0;
- (id)init;
- (void)setZoom:(float)arg0;
- (id)dataSource;
- (void)setDeviceID:(id)arg0;
- (void)setStartTime:(double)arg0;
- (id)debugView;
- (void).cxx_destruct;
- (BOOL)muted;
- (id)deviceID;
- (id)traceId;
- (unsigned long long)state;
- (unsigned long long)loadState;
- (void)setEffect:(id)arg0;
- (void)setTaskQueue:(id)arg0;
- (double)volume;
- (void)setState:(unsigned long long)arg0;
- (void)setMuted:(BOOL)arg0;
- (id)taskQueue;
- (id)getId;
- (void)_close:(BOOL)arg0;
- (void)close;
- (void)stop;
- (id)header;
- (void)setOptions:(id)arg0;
- (void)setOptions:(id)arg0;
- (long long)bitrate;
- (id)initWithType:(unsigned long long)arg0;
- (void)setPlayer:(id)arg0;
- (double)duration;
- (void)setTag:(id)arg0;
- (id)delegate;
- (void)setTimer:(id)arg0;
- (double)startTime;
- (id)decryptionKey;
- (void)setApiVersion:(unsigned long long)arg0;
- (void)setHeader:(id)arg0;
- (void)reachabilityChanged:(id)arg0;
- (void)setVolume:(double)arg0;
- (void)setErrorCount:(unsigned long long)arg0;
- (id)playerView;
- (BOOL)isSeeking;
- (id)description;
- (id)internalDelegate;
- (void)setInternalDelegate:(id)arg0;
- (void)setDelegate:(id)arg0;
- (id)options;
- (void)dealloc;
- (void)setLooping:(BOOL)arg0;
- (void)play;
- (void)setPlayerView:(id)arg0;
- (void)pause;
- (void)setRenderType:(unsigned long long)arg0;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)pause:(BOOL)arg0;
- (void)setDecryptionKey:(id)arg0;
- (unsigned long long)errorCount;
- (void)setPlaybackState:(long long)arg0;
- (unsigned long long)apiVersion;
- (void)setIsComplete:(BOOL)arg0;
- (id)player;
- (void)setDuration:(double)arg0;
- (id)mapTable;
- (void)setDebugView:(id)arg0;
- (BOOL)looping;
- (void)didReceiveError:(id)arg0;
- (double)playbackSpeed;
- (void)setPlaybackSpeed:(double)arg0;
- (void)prepareToPlay;
- (void)setAVPlayerItem:(id)arg0;
- (unsigned long long)playerType;
- (void)setLocalURL:(id)arg0;
- (void)resetOptions;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)accessLog;
- (double)durationWatched;
- (void)setIsRetrying:(BOOL)arg0;
- (BOOL)isRetrying;
- (double)playableDuration;
- (long long)qualityType;
- (void)setVideoID:(id)arg0;
- (unsigned long long)bufferCount;
- (void)_play;
- (void)clearScreen;
- (double)loopStartTime;
- (void)setLoopStartTime:(double)arg0;
- (long long)codecType;
- (void)setCodecType:(long long)arg0;
- (long long)mediaSize;
- (long long)videoSize;
- (void)voiceOverStatusDidChange;
- (long long)getStartTime;
- (void)_playVideo;
- (void)setMapTable:(id)arg0;
- (void)setScaleMode:(long long)arg0;
- (long long)scaleMode;
- (void)playVideo;
- (long long)currentNetworkStatus;
- (id)auth;
- (void)setAuth:(id)arg0;
- (id)playDuration;
- (void)stopVideo;
- (unsigned long long)currentResolution;
- (void)setCurrentResolution:(unsigned long long)arg0;
- (void)pauseVideo:(BOOL)arg0;
- (unsigned long long)rangeMode;
- (void)setLoadState:(unsigned long long)arg0;
- (void)onRetry:(id)arg0;
- (void)setPlayableDuration:(double)arg0;
- (void)playbackStateDidChange:(long long)arg0;

@end
