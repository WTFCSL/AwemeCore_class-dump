//
//     Generated by private class-dump
//

@class NSTimer, NSString;
@protocol AWEUGCampaignTaskTimerStateDelegate;

@interface AWEUGCampaignTaskTimer : NSObject <AWEUGCampaignTaskTimerProtocol> {
    BOOL _fixBDTimerFirstCallback;
    BOOL _isNotFirstStart;
    BOOL _timerPaused;
    id<AWEUGCampaignTaskTimerStateDelegate> countDownStatsDelegate;
    long long status;
    double progress;
    double _totalTimeInterval;
    double _hasProgressTimeInterval;
    double _timeInterval;
    NSString *_taskToken;
    NSTimer *_timer;
}

@property (nonatomic) BOOL fixBDTimerFirstCallback;
@property (nonatomic) BOOL isNotFirstStart;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) BOOL timerPaused;
@property (nonatomic) double totalTimeInterval;
@property (nonatomic) double hasProgressTimeInterval;
@property (nonatomic) double timeInterval;
@property (copy, nonatomic) NSString *taskToken;
@property (nonatomic) double progress;
@property (nonatomic) long long status;
@property (weak, nonatomic) id<AWEUGCampaignTaskTimerStateDelegate> countDownStatsDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)taskToken;
- (void)setTaskToken:(id)arg0;
- (double)totalTaskTime;
- (void)didTaskProgressUpdateWithRule:(id)arg0;
- (void)didTaskStatusChange:(long long)arg0;
- (void)updateTaskStatus:(long long)arg0;
- (void)trackLogWithKey:(id)arg0 message:(id)arg1;
- (void)p_startTimer;
- (double)totalTimeInterval;
- (void)setTotalTimeInterval:(double)arg0;
- (BOOL)p_checkTimerStatus;
- (id)countDownStatsDelegate;
- (double)hasProgressTimeInterval;
- (void)p_countTime;
- (void)p_resumeTimer;
- (void)p_pauseTimer;
- (BOOL)isNotFirstStart;
- (void)setIsNotFirstStart:(BOOL)arg0;
- (BOOL)fixBDTimerFirstCallback;
- (void)setFixBDTimerFirstCallback:(BOOL)arg0;
- (void)setCountDownStatsDelegate:(id)arg0;
- (void)setHasProgressTimeInterval:(double)arg0;
- (BOOL)timerPaused;
- (void)setTimerPaused:(BOOL)arg0;
- (id)timer;
- (BOOL)isRunning;
- (double)timeInterval;
- (void).cxx_destruct;
- (void)setTimeInterval:(double)arg0;
- (long long)status;
- (id)taskID;
- (void)setTimer:(id)arg0;
- (void)setStatus:(long long)arg0;
- (id)initWithCoder:(id)arg0;
- (double)progress;
- (id)rules;
- (void)encodeWithCoder:(id)arg0;
- (void)start;
- (void)dealloc;
- (void)setProgress:(double)arg0;
- (void)pause;
- (double)speed;
- (void)releaseTimer;

@end
