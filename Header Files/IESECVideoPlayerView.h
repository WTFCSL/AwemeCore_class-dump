//
//     Generated by private class-dump
//

@class UIView, IESECommerceSpeakerView, IESECommercePlayerView, IESECommerceProgressSlider, UIImage, UIImageView, IESECGradientView, IESECVideoPlayerController, CADisplayLink, NSString, UILabel, IESECVideoPlayerConfig;
@protocol IESECVideoPlayerViewDelegate, IESECAwemeVideoViewProtocol, IESECVideoPlayerViewSampleDelegate;

@interface IESECVideoPlayerView : UIView <IESECVideoPlayerControllerDelegate, IESECAwemeVideoViewDelegate> {
    BOOL _isPlayOver;
    BOOL _isAutoPlayEnd;
    BOOL _isSliding;
    BOOL _pauseOnResignActive;
    BOOL _needResumePlay;
    BOOL _needAutoPlayAfterLoad;
    id<IESECVideoPlayerViewDelegate> _delegate;
    id<IESECVideoPlayerViewSampleDelegate> _sampleDelegate;
    IESECVideoPlayerConfig *_playerConfig;
    unsigned long long _currentPlayState;
    NSString *_playerTag;
    NSString *_playerSubTag;
    unsigned long long _contentFillMode;
    unsigned long long _previewFillMode;
    IESECVideoPlayerController *_player;
    UIView<IESECAwemeVideoViewProtocol> *_awemePlayerView;
    UIImageView *_coverImageView;
    UIImageView *_playButtonImageView;
    IESECommerceProgressSlider *_progressSlider;
    UIView *_playerUserControllerContainerView;
    UIView *_userCtrlDivider;
    IESECommerceSpeakerView *_speakerView;
    IESECommercePlayerView *_playerView;
    UIImage *_thumbImageNormal;
    UIImage *_thumbImageHighlight;
    UIView *_durationView;
    UILabel *_playedDurationLabel;
    UILabel *_durationDivider;
    UILabel *_totalDurationLabel;
    IESECGradientView *_gradientView;
    UIImage *_minimunImageNormal;
    UIImage *_maximunImageNormal;
    UIImage *_minimunImage;
    UIImage *_maximunImage;
    unsigned long long _prePlayState;
    double _prePlayTime;
    CADisplayLink *_displayLink;
    long long _runloopCount;
    double _gradientViewHeight;
    double _progressBarY;
    double _volumeAlpha;
    struct CGSize { double width; double height; } _playButtonSize;
}

@property (retain, nonatomic) IESECVideoPlayerConfig *playerConfig;
@property (nonatomic) BOOL isAutoPlayEnd;
@property (retain, nonatomic) IESECVideoPlayerController *player;
@property (retain, nonatomic) UIView<IESECAwemeVideoViewProtocol> *awemePlayerView;
@property (retain, nonatomic) UIImageView *coverImageView;
@property (retain, nonatomic) UIImageView *playButtonImageView;
@property (nonatomic) struct CGSize { double width; double height; } playButtonSize;
@property (retain, nonatomic) IESECommerceProgressSlider *progressSlider;
@property (retain, nonatomic) UIView *playerUserControllerContainerView;
@property (retain, nonatomic) UIView *userCtrlDivider;
@property (nonatomic) BOOL isSliding;
@property (retain, nonatomic) IESECommerceSpeakerView *speakerView;
@property (retain, nonatomic) IESECommercePlayerView *playerView;
@property (retain, nonatomic) UIImage *thumbImageNormal;
@property (retain, nonatomic) UIImage *thumbImageHighlight;
@property (retain, nonatomic) UIView *durationView;
@property (retain, nonatomic) UILabel *playedDurationLabel;
@property (retain, nonatomic) UILabel *durationDivider;
@property (retain, nonatomic) UILabel *totalDurationLabel;
@property (retain, nonatomic) IESECGradientView *gradientView;
@property (nonatomic) unsigned long long currentPlayState;
@property (retain, nonatomic) UIImage *minimunImageNormal;
@property (retain, nonatomic) UIImage *maximunImageNormal;
@property (retain, nonatomic) UIImage *minimunImage;
@property (retain, nonatomic) UIImage *maximunImage;
@property (nonatomic) unsigned long long prePlayState;
@property (nonatomic) double prePlayTime;
@property (nonatomic) BOOL pauseOnResignActive;
@property (nonatomic) BOOL needResumePlay;
@property (retain, nonatomic) CADisplayLink *displayLink;
@property (nonatomic) long long runloopCount;
@property (nonatomic) BOOL isPlayOver;
@property (nonatomic) double gradientViewHeight;
@property (nonatomic) double progressBarY;
@property (nonatomic) double volumeAlpha;
@property (nonatomic) BOOL needAutoPlayAfterLoad;
@property (weak, nonatomic) id<IESECVideoPlayerViewDelegate> delegate;
@property (weak, nonatomic) id<IESECVideoPlayerViewSampleDelegate> sampleDelegate;
@property (readonly, nonatomic) BOOL mute;
@property (readonly, nonatomic) double currentPlayTime;
@property (readonly, nonatomic) double totalDuration;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } realVideoSize;
@property (copy, nonatomic) NSString *playerTag;
@property (copy, nonatomic) NSString *playerSubTag;
@property (nonatomic) unsigned long long contentFillMode;
@property (nonatomic) unsigned long long previewFillMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)progressWithPlayDuration:(double)arg0 totalDuration:(double)arg1;

- (void)registerObserver;
- (double)currentPlayTime;
- (void)setLoopPlayerWithLoopState:(BOOL)arg0 loopWay:(long long)arg1 loopStartTime:(double)arg2 loopEndTime:(double)arg3;
- (void)setPlayerSubTag:(id)arg0;
- (void)setPlayerTag:(id)arg0;
- (void)progressSliderTouchEnded:(id)arg0;
- (id)playerConfig;
- (void)setPlayerConfig:(id)arg0;
- (void)setCoverImageView:(id)arg0;
- (id)coverImageView;
- (void)setPreviewFillMode:(unsigned long long)arg0;
- (unsigned long long)previewFillMode;
- (struct CGSize { double x0; double x1; })realVideoSize;
- (void)mutePlayer:(BOOL)arg0;
- (unsigned long long)currentPlayState;
- (void)setCurrentPlayState:(unsigned long long)arg0;
- (void)addPeriodicTimeObserver;
- (BOOL)isSliding;
- (void)setIsSliding:(BOOL)arg0;
- (id)playerTag;
- (id)playerSubTag;
- (void)videoView:(id)arg0 didChangePlayState:(unsigned long long)arg1;
- (id)thumbImageNormal;
- (void)setThumbImageNormal:(id)arg0;
- (double)gradientViewHeight;
- (id)speakerView;
- (void)setSpeakerView:(id)arg0;
- (id)realPlayerView;
- (void)playerController:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (id)minimunImage;
- (id)maximunImage;
- (void)setMinimunImage:(id)arg0;
- (void)setMaximunImage:(id)arg0;
- (void)progressSlideChangeValue:(id)arg0;
- (void)loadCoverImage;
- (void)setupVideoPlayer;
- (id)durationView;
- (void)setDurationView:(id)arg0;
- (id)awemePlayerView;
- (BOOL)allowAwemePlayer;
- (void)setAwemePlayerView:(id)arg0;
- (void)videoReadyToDisplayOfPlayerController:(id)arg0;
- (id)initWithPlayerConfig:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)hideVolume:(BOOL)arg0;
- (void)updatePauseButtonUI:(id)arg0 pauseButtonSize:(struct CGSize { double x0; double x1; })arg1;
- (long long)runloopCount;
- (void)setRunloopCount:(long long)arg0;
- (void)recoverState;
- (void)storeStateWithoutPrepare;
- (void)updateVideoPlayerConfig:(id)arg0;
- (void)setContentFillMode:(unsigned long long)arg0;
- (double)oncePlayTime;
- (BOOL)isPlayOver;
- (void)setProgressSliderAlpha:(double)arg0;
- (id)trackVideoTypeWithWindow;
- (void)setVolumeAlpha:(double)arg0;
- (void)setNeedResumePlay:(BOOL)arg0;
- (BOOL)needResumePlay;
- (void)hideProgressSlider:(BOOL)arg0;
- (double)prePlayTime;
- (void)setPrePlayTime:(double)arg0;
- (void)setIsPlayOver:(BOOL)arg0;
- (BOOL)supportFloat;
- (void)seekToPlaybackTime:(double)arg0 complete:(id /* block */)arg1;
- (void)setPauseOnResignActive:(BOOL)arg0;
- (BOOL)pauseOnResignActive;
- (void)setupUIOld;
- (BOOL)needAutoPlayAfterLoad;
- (id)playButtonImageView;
- (void)setPlayButtonImageView:(id)arg0;
- (void)tapPlayVideo;
- (double)volumeAlpha;
- (void)setProgressBarY:(double)arg0;
- (void)setGradientViewHeight:(double)arg0;
- (void)setDurationDivider:(id)arg0;
- (id)durationDivider;
- (void)setPlayedDurationLabel:(id)arg0;
- (id)playedDurationLabel;
- (void)setTotalDurationLabel:(id)arg0;
- (id)totalDurationLabel;
- (void)setThumbImageHighlight:(id)arg0;
- (id)thumbImageHighlight;
- (void)setPlayerUserControllerContainerView:(id)arg0;
- (id)playerUserControllerContainerView;
- (void)setUserCtrlDivider:(id)arg0;
- (id)userCtrlDivider;
- (void)trackSpeakerAndPlayerIconHide:(BOOL)arg0;
- (double)progressBarY;
- (BOOL)awemePlayerValid;
- (id)formatTimeString:(double)arg0;
- (id)minimunImageNormal;
- (id)maximunImageNormal;
- (double)playDurationWithProgress:(double)arg0;
- (void)updateVideoTimeDurationText:(id)arg0;
- (void)setNeedAutoPlayAfterLoad:(BOOL)arg0;
- (BOOL)isAutoPlayEnd;
- (void)setIsAutoPlayEnd:(BOOL)arg0;
- (void)periodTimeObserver;
- (id)sampleDelegate;
- (void)hideGradientView:(BOOL)arg0;
- (id)trackVideoType;
- (void)updateSpeakerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setSampleDelegate:(id)arg0;
- (unsigned long long)contentFillMode;
- (void)setMinimunImageNormal:(id)arg0;
- (void)setMaximunImageNormal:(id)arg0;
- (unsigned long long)prePlayState;
- (void)setPrePlayState:(unsigned long long)arg0;
- (BOOL)mute;
- (double)totalDuration;
- (void)setDisplayLink:(id)arg0;
- (void).cxx_destruct;
- (struct CGSize { double x0; double x1; })playButtonSize;
- (void)stop;
- (void)setGradientView:(id)arg0;
- (void)setPlayer:(id)arg0;
- (void)handleGesture:(id)arg0;
- (id)delegate;
- (void)didBecomeActive:(id)arg0;
- (id)displayLink;
- (void)willResignActive:(id)arg0;
- (id)playerView;
- (void)setPlayButtonSize:(struct CGSize { double x0; double x1; })arg0;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)setPlayerView:(id)arg0;
- (id)gradientView;
- (void)pause;
- (id)player;
- (void)setupUI;
- (void)setupPlayer;
- (id)progressSlider;
- (void)setProgressSlider:(id)arg0;
- (void)playVideo;
- (void)muteVideo;
- (void)storeState;

@end
