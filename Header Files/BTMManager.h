//
//     Generated by private class-dump
//

@interface BTMManager : NSObject

@property (class, nonatomic) BOOL optimizedV2;
@property (class, nonatomic) BOOL initialNodeEnable;
@property (class, nonatomic) BOOL optimizedLog;
@property (class, nonatomic) BOOL optimizedNode;
@property (class, nonatomic) BOOL feFreeDevelopmentEnabled;
@property (class) BOOL realStepValidate;

+ (void)setupWithConfig:(id)arg0;
+ (id)createBtmWithBtmInfo:(id)arg0 clickedView:(id)arg1 enterNewPage:(BOOL)arg2;
+ (id)createJumpSourceBtmTokenWithBtm:(id)arg0 host:(id)arg1 bcm:(id)arg2;
+ (id)createReportParamsWithBtm:(id)arg0 host:(id)arg1;
+ (void)forwardToCustomPage:(id)arg0;
+ (void)returnFromCustomPage:(id)arg0;
+ (id)fillEventParamOrigin:(id)arg0 eventName:(id)arg1;
+ (id)createBtmChainWithBtmInfo:(id)arg0 clickedView:(id)arg1 enterNewPage:(BOOL)arg2 addBtmChain:(BOOL)arg3 chainLength:(long long)arg4 targetPages:(id)arg5;
+ (id)createBtmChainWithBtmInfo:(id)arg0 clickedView:(id)arg1 enterNewPage:(BOOL)arg2 addBtmChain:(BOOL)arg3 chainLength:(long long)arg4 targetPages:(id)arg5 description:(id)arg6;
+ (void)externalEvokeWithMode:(unsigned long long)arg0 source:(unsigned long long)arg1 info:(id)arg2;
+ (void)getPageBtmWithSchema:(id)arg0 handler:(id /* block */)arg1;
+ (BOOL)registerPageShowWillEndHandler:(id /* block */)arg0 forPage:(id)arg1;
+ (BOOL)registerPageDidAppearHandler:(id /* block */)arg0 forPage:(id)arg1;
+ (id)getBTMPageInfo:(id)arg0;
+ (id)preBtmIdIfNeedAppendFrom:(id)arg0 fromBtm:(id)arg1 to:(id)arg2 targetPages:(id)arg3 bcmDes:(id)arg4;
+ (id)btmIdOfCurrentJumpNode;
+ (void)reenqueueJumpNodeWithBtmId:(id)arg0;
+ (void)dequeueJumpNodeWithBtmId:(id)arg0;
+ (void)markResponderAsBtmPage:(id)arg0;
+ (BOOL)registerBtmPage:(id)arg0 pageBtm:(id)arg1 sourceBtmToken:(id)arg2;
+ (BOOL)registerBtmPage:(id)arg0 params:(id /* block */)arg1;
+ (BOOL)updateBtmPage:(id)arg0 sourceBtmToken:(id)arg1;
+ (BOOL)setBcmPageParams:(id)arg0 host:(id)arg1 clearOldValue:(BOOL)arg2;
+ (id)getBcmChainWithHost:(id)arg0 chainLength:(unsigned long long)arg1;
+ (void)appendBcmChainForTrackerEvent:(id)arg0 params:(id)arg1;
+ (void)appendBtmForTrackerEvent:(id)arg0 params:(id)arg1;
+ (void)registerTrackHandler:(id /* block */)arg0;
+ (void)registerLogUploadHandler:(id /* block */)arg0;
+ (void)onLogEventLevel:(unsigned long long)arg0 domain:(id)arg1 page:(id)arg2 errorCode:(id)arg3 message:(id)arg4 extraCategory:(id)arg5;
+ (id)getBridges;
+ (id)getBcmChainWithHost:(id)arg0 chainLength:(unsigned long long)arg1 isDomainStandard:(BOOL)arg2;
+ (void)setOptimizedV2:(BOOL)arg0;
+ (void)setOptimizedLog:(BOOL)arg0;
+ (void)setOptimizedNode:(BOOL)arg0;
+ (void)setFeFreeDevelopmentEnabled:(BOOL)arg0;
+ (void)setRealStepValidate:(BOOL)arg0;
+ (BOOL)feFreeDevelopmentEnabled;
+ (BOOL)optimizedV2;
+ (BOOL)realStepValidate;
+ (void)setupHooks;
+ (void)registerServiceProtocol:(id)arg0 withImpl:(Class)arg1;
+ (void)registerLogHandler:(id /* block */)arg0;
+ (void)registerServiceMonitorHandler:(id /* block */)arg0;
+ (void)setSchemaMapFetchHandler:(id /* block */)arg0;
+ (id)createBtmWithBtmInfo:(id)arg0 clickedView:(id)arg1 enterNewPage:(BOOL)arg2 targetPageIdentifiers:(id)arg3;
+ (void)denoteBtmPageId:(id)arg0 withResponder:(id)arg1;
+ (BOOL)optimizedLog;
+ (BOOL)optimizedNode;
+ (void)testModeEnable;
+ (BOOL)initialNodeEnable;
+ (void)setInitialNodeEnable:(BOOL)arg0;
+ (void)registerBtmCacheGet:(id /* block */)arg0 Set:(id /* block */)arg1 Clear:(id /* block */)arg2;
+ (void)registerGeckoHandler:(id /* block */)arg0;
+ (id)createBtmWithBtmInfo:(id)arg0 enterNewPage:(BOOL)arg1;
+ (id)createBtmChainWithBtmInfo:(id)arg0 clickedView:(id)arg1 enterNewPage:(BOOL)arg2 addBtmChain:(BOOL)arg3 chainLength:(long long)arg4;
+ (void)setBtmIdAsEnterNewJump:(id)arg0;
+ (void)setOnExceptionReportEnable:(BOOL)arg0;
+ (id)obtainPreBtmOfClickedView:(id)arg0;
+ (id)obtainPpreBtmOfClickedView:(id)arg0;
+ (void)setPreBtmId:(id)arg0 forResponderInPage:(id)arg1;
+ (id)preBtmIdIfNeedAppendFrom:(id)arg0 fromBtm:(id)arg1 to:(id)arg2;
+ (BOOL)enableGenerateShowIdWithBtm:(id)arg0 host:(id)arg1;
+ (id)getBcmChainWithBtmModel:(id)arg0 chainLength:(unsigned long long)arg1 isDomainStandard:(BOOL)arg2;
+ (id)getBcmChainWithSourceBtmToken:(id)arg0 chainLength:(long long)arg1 isDomainStandard:(BOOL)arg2;
+ (id)getXBridges;
+ (BOOL)isValid;
+ (void)invalidate;

@end
