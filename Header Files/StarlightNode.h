//
//     Generated by private class-dump
//

@class NSMutableArray;
@protocol StarlightMeasureDelegate;

@interface StarlightNode : NSObject {
    struct unique_ptr<SLMeasureDelegateDarwin, std::default_delete<SLMeasureDelegateDarwin>> { struct __compressed_pair<SLMeasureDelegateDarwin *, std::default_delete<SLMeasureDelegateDarwin>> { struct SLMeasureDelegateDarwin *__value_; } __ptr_; } _delegateImp;
    id<StarlightMeasureDelegate> _delegate;
    void *_node;
    NSMutableArray *_children;
    StarlightNode *_parent;
    struct CGSize { double width; double height; } _size;
    struct CGPoint { double x; double y; } _point;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _contentInsets;
}

@property (readonly, nonatomic) void *node;
@property (retain, nonatomic) NSMutableArray *children;
@property (weak, nonatomic) StarlightNode *parent;
@property (nonatomic) struct CGSize { double width; double height; } size;
@property (nonatomic) struct CGPoint { double x; double y; } point;
@property (weak, nonatomic) id<StarlightMeasureDelegate> delegate;
@property (nonatomic, getter=isDirty) BOOL dirty;
@property (readonly, nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } contentInsets;

- (void)setAlignContent:(long long)arg0;
- (void)setAlignSelf:(long long)arg0;
- (void)setAlignItems:(long long)arg0;
- (void)setJustifyContent:(long long)arg0;
- (void)setFlexBasis:(struct { double x0; int x1; })arg0;
- (void)setFlexShrink:(double)arg0;
- (void)setFlexGrow:(double)arg0;
- (void)setFlexWrap:(long long)arg0;
- (void)setFlexDirection:(long long)arg0;
- (void)updateViewport:(float)arg0 viewportHeight:(float)arg1 viewportWidthMode:(long long)arg2 viewportHeightMode:(long long)arg3;
- (float)layoutMargin:(long long)arg0;
- (void)removeAllChild;
- (void)updateLayoutResult;
- (void)setStyleWithName:(id)arg0 value:(id)arg1;
- (BOOL)resetStyleWithName:(id)arg0;
- (void)insertChild:(id)arg0;
- (float)layoutPadding:(long long)arg0;
- (float)layoutBorder:(long long)arg0;
- (struct SLSize { float x0; float x1; })onMeasure:(void *)arg0;
- (float)onBaseline:(void *)arg0;
- (void)setAspectRatio:(double)arg0;
- (void)setDisplay:(long long)arg0;
- (void *)node;
- (void)setPadding:(struct { double x0; int x1; })arg0;
- (BOOL)isDirty;
- (id)init;
- (void)setChildren:(id)arg0;
- (void)setParent:(id)arg0;
- (void)setDirty:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setMaxWidth:(struct { double x0; int x1; })arg0;
- (struct { double x0; int x1; })height;
- (void)setPaddingRight:(struct { double x0; int x1; })arg0;
- (void)setPaddingBottom:(struct { double x0; int x1; })arg0;
- (id)parent;
- (struct CGPoint { double x0; double x1; })point;
- (void)setPosition:(long long)arg0;
- (void)setMinHeight:(struct { double x0; int x1; })arg0;
- (void)setPaddingTop:(struct { double x0; int x1; })arg0;
- (void)setPaddingLeft:(struct { double x0; int x1; })arg0;
- (void)setMaxHeight:(struct { double x0; int x1; })arg0;
- (id)initWithConfig:(id)arg0;
- (void)setTop:(struct { double x0; int x1; })arg0;
- (void)setBorder:(struct { double x0; int x1; })arg0;
- (id)delegate;
- (void)setMargin:(struct { double x0; int x1; })arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInsets;
- (void)setBottom:(struct { double x0; int x1; })arg0;
- (void)setWidth:(struct { double x0; int x1; })arg0;
- (void)setMinWidth:(struct { double x0; int x1; })arg0;
- (struct CGSize { double x0; double x1; })size;
- (void)setSize:(struct CGSize { double x0; double x1; })arg0;
- (id)children;
- (void)setHeight:(struct { double x0; int x1; })arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (struct { double x0; int x1; })width;
- (struct CGSize { double x0; double x1; })performLayout;
- (unsigned long long)childCount;
- (id).cxx_construct;
- (void)setDirection:(long long)arg0;
- (void)setPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setMarginTop:(struct { double x0; int x1; })arg0;
- (void)removeChild:(id)arg0;
- (void)setLeft:(struct { double x0; int x1; })arg0;
- (void)insertChild:(id)arg0 atIndex:(unsigned int)arg1;
- (id)childAtIndex:(unsigned int)arg0;
- (void)setRight:(struct { double x0; int x1; })arg0;
- (void)setBorderTop:(struct { double x0; int x1; })arg0;
- (void)setBorderRight:(struct { double x0; int x1; })arg0;
- (void)setBorderBottom:(struct { double x0; int x1; })arg0;
- (void)setBorderLeft:(struct { double x0; int x1; })arg0;
- (void)setMarginRight:(struct { double x0; int x1; })arg0;
- (void)setMarginBottom:(struct { double x0; int x1; })arg0;
- (void)setMarginLeft:(struct { double x0; int x1; })arg0;
- (void)removeChildAtIndex:(unsigned int)arg0;

@end
