//
//     Generated by private class-dump
//

@class NSMutableDictionary, HTSGLFilterGroup, HTSRawDataOutputRender, VEAmazingEffectFilterConfig, IESMMEffectConfig, HTSGLFilterInput, HTSGLTC21RedpackageFilter, VEHdrEffectOptFilter, HTSGLResizeRotateFilter, VEAmazingEffectFilter, HTSGLCropFilter, HTSGLContext, HTSGLFilterCustomBlend, VEGLCicleFilter;
@protocol IESMMEffectGroupProtocol;

@interface VEPreprocessInnerUnit : NSObject {
    BOOL _needRoundEffect;
    BOOL _needProcessedBufferCallback;
    BOOL _enableTC21RedpackageRecord;
    BOOL _enableAmazingFilter;
    BOOL _abHdrEffectOptimization;
    BOOL _isFilterChainInited;
    BOOL _enableMultiInput;
    BOOL _beginOfStream;
    BOOL _isDisableEffect;
    BOOL _enable10bitRtRender;
    BOOL _enablePreviewEncodeSplit;
    HTSGLFilterGroup<IESMMEffectGroupProtocol> *_effectFilter;
    HTSGLResizeRotateFilter *_preRotateFilter;
    VEAmazingEffectFilter *_amazingFilter;
    HTSGLResizeRotateFilter *_postRotateFilter;
    HTSGLTC21RedpackageFilter *_redPackageFilter;
    HTSGLFilterCustomBlend *_blendFilter;
    unsigned long long _originVideoRotation;
    unsigned long long _cropType;
    unsigned long long _rotationMode;
    VEAmazingEffectFilterConfig *_amazingFilterConfig;
    IESMMEffectConfig *_effectConfig;
    HTSGLContext *_context;
    HTSGLFilterInput *_inputFilter;
    HTSGLCropFilter *_cropBeforeEffectFilter;
    HTSGLCropFilter *_cropAfterEffectFilter;
    VEGLCicleFilter *_cicleFilter;
    HTSRawDataOutputRender *_outputRender;
    HTSRawDataOutputRender *_writeOutputRender;
    NSMutableDictionary *_filtersUpStream;
    VEHdrEffectOptFilter *_hdrEffectOptFilter;
    struct CGSize { double width; double height; } _outputSize;
    struct CGSize { double width; double height; } _effectRenderSize;
}

@property (retain, nonatomic) IESMMEffectConfig *effectConfig;
@property (retain, nonatomic) HTSGLContext *context;
@property (retain, nonatomic) HTSGLFilterInput *inputFilter;
@property (retain, nonatomic) HTSGLCropFilter *cropBeforeEffectFilter;
@property (retain, nonatomic) HTSGLFilterGroup<IESMMEffectGroupProtocol> *effectFilter;
@property (retain, nonatomic) HTSGLResizeRotateFilter *preRotateFilter;
@property (retain, nonatomic) VEAmazingEffectFilter *amazingFilter;
@property (retain, nonatomic) HTSGLResizeRotateFilter *postRotateFilter;
@property (retain, nonatomic) HTSGLCropFilter *cropAfterEffectFilter;
@property (retain, nonatomic) VEGLCicleFilter *cicleFilter;
@property (retain, nonatomic) HTSGLTC21RedpackageFilter *redPackageFilter;
@property (retain, nonatomic) HTSGLFilterCustomBlend *blendFilter;
@property (retain, nonatomic) HTSRawDataOutputRender *outputRender;
@property (retain, nonatomic) HTSRawDataOutputRender *writeOutputRender;
@property (retain, nonatomic) NSMutableDictionary *filtersUpStream;
@property (nonatomic) BOOL abHdrEffectOptimization;
@property (retain, nonatomic) VEHdrEffectOptFilter *hdrEffectOptFilter;
@property (nonatomic) BOOL isFilterChainInited;
@property (nonatomic) BOOL enableMultiInput;
@property (nonatomic, getter=isBeginOfStream) BOOL beginOfStream;
@property (nonatomic) BOOL isDisableEffect;
@property (nonatomic) BOOL enable10bitRtRender;
@property (nonatomic) BOOL enablePreviewEncodeSplit;
@property (readonly, nonatomic) struct __CVBuffer { } *processedPixbuf;
@property (nonatomic) unsigned long long originVideoRotation;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) struct CGSize { double width; double height; } effectRenderSize;
@property (nonatomic) unsigned long long cropType;
@property (nonatomic) BOOL needRoundEffect;
@property (nonatomic) BOOL needProcessedBufferCallback;
@property (nonatomic) BOOL enableTC21RedpackageRecord;
@property (nonatomic) BOOL enableAmazingFilter;
@property (nonatomic) unsigned long long rotationMode;
@property (retain, nonatomic) VEAmazingEffectFilterConfig *amazingFilterConfig;

- (id)effectFilter;
- (unsigned long long)originVideoRotation;
- (void)setOriginVideoRotation:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })effectRenderSize;
- (void)setEffectRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setNeedBlendSecond:(BOOL)arg0 pixelbuffer:(struct __CVBuffer { } *)arg1 mix:(float)arg2;
- (void)setEffectConfig:(id)arg0;
- (void)setAbHdrEffectOptimization:(BOOL)arg0;
- (void)setEnable10bitRtRender:(BOOL)arg0;
- (BOOL)enable10bitRtRender;
- (id)hdrEffectOptFilter;
- (void)setHdrEffectOptFilter:(id)arg0;
- (BOOL)abHdrEffectOptimization;
- (void)setEffectFilter:(id)arg0;
- (id)initWithEffectConfig:(id)arg0 context:(id)arg1;
- (void)setNeedRoundEffect:(BOOL)arg0;
- (void)setEnableTC21RedpackageRecord:(BOOL)arg0;
- (void)setEnableAmazingFilter:(BOOL)arg0;
- (void)setAmazingFilterConfig:(id)arg0;
- (id)amazingFilterConfig;
- (void)setFiltersUpStream:(id)arg0;
- (void)setIsFilterChainInited:(BOOL)arg0;
- (void)setEnableMultiInput:(BOOL)arg0;
- (void)setNeedProcessedBufferCallback:(BOOL)arg0;
- (void)setEnablePreviewEncodeSplit:(BOOL)arg0;
- (BOOL)isFilterChainInited;
- (void)setInputFilter:(id)arg0;
- (id)inputFilter;
- (BOOL)enableMultiInput;
- (void)setOutputRender:(id)arg0;
- (void)setCropBeforeEffectFilter:(id)arg0;
- (id)cropBeforeEffectFilter;
- (BOOL)enableTC21RedpackageRecord;
- (BOOL)enableAmazingFilter;
- (void)setAmazingFilter:(id)arg0;
- (void)setPreRotateFilter:(id)arg0;
- (id)preRotateFilter;
- (void)setPostRotateFilter:(id)arg0;
- (id)postRotateFilter;
- (void)setCropAfterEffectFilter:(id)arg0;
- (id)cropAfterEffectFilter;
- (BOOL)needRoundEffect;
- (void)setCicleFilter:(id)arg0;
- (void)insertFilter:(id)arg0 afterFilter:(id)arg1;
- (id)amazingFilter;
- (id)cicleFilter;
- (id)redPackageFilter;
- (id)outputRender;
- (id)filtersUpStream;
- (BOOL)isBeginOfStream;
- (void)setIsDisableEffect:(BOOL)arg0;
- (void)removeFilterFromChain:(id)arg0;
- (id)blendFilter;
- (void)setBlendFilter:(id)arg0;
- (id)writeOutputRender;
- (void)setWriteOutputRender:(id)arg0;
- (BOOL)isDisableEffect;
- (void)p_updateHdrEffectOptFilter:(id)arg0;
- (BOOL)needProcessedBufferCallback;
- (BOOL)enablePreviewEncodeSplit;
- (id)initWithOutEffect;
- (id)initWithOutEffect:(id)arg0;
- (void)buildFilterChain;
- (void)updateCropType:(unsigned long long)arg0 andOutputSize:(struct CGSize { double x0; double x1; })arg1;
- (BOOL)getAndResetBeginOfStreamFlag;
- (void)cleanFrameBufferReference;
- (void)setDisableEffect:(BOOL)arg0;
- (void)setEffectRenderCropFillMode:(long long)arg0;
- (void)insertEncodeNodeWithPos:(unsigned long long)arg0;
- (struct __CVBuffer { } *)processedPixbuf;
- (BOOL)processSampleData:(id)arg0 downStreams:(id)arg1;
- (void)setRedPackageFilter:(id)arg0;
- (void)setBeginOfStream:(BOOL)arg0;
- (void).cxx_destruct;
- (id)effectConfig;
- (void)setContext:(id)arg0;
- (struct CGSize { double x0; double x1; })outputSize;
- (id)context;
- (unsigned long long)rotationMode;
- (void)setRotationMode:(unsigned long long)arg0;
- (unsigned long long)cropType;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCropType:(unsigned long long)arg0;

@end
