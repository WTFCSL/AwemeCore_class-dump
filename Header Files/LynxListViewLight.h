//
//     Generated by private class-dump
//

@class LynxListCachedCellManager, LynxUIListScrollManager, NSArray, NSString, LynxListLayoutManager, LynxUIListDataSource, LynxListReusePool, LynxEventEmitter, LynxListAnchorManager, NSMutableArray, LynxUIContext;
@protocol LynxListLayoutProtocol;

@interface LynxListViewLight : UIScrollView <LynxListEventsProtocol> {
    BOOL _verticalOrientation;
    BOOL _anchorPriorityFromBegin;
    BOOL _deleteRegressPolicyToTop;
    BOOL _insertAnchorModeInside;
    BOOL _anchorAlignToBottom;
    BOOL _isAsync;
    BOOL _needsVisibleCells;
    BOOL _isHandlingEmptyDisplayingCells;
    BOOL _isSelfSizing;
    long long _numberOfColumns;
    long long _preloadBufferCount;
    long long _anchorVisibility;
    LynxListLayoutManager *_innerLayout;
    id<LynxListLayoutProtocol> _customizedLayout;
    LynxUIListDataSource *_dataSource;
    LynxUIListScrollManager *_scrollManager;
    LynxListAnchorManager *_anchorManager;
    LynxEventEmitter *_eventEmitter;
    LynxListCachedCellManager *_cachedCells;
    LynxListReusePool *_reusePool;
    NSMutableArray *_reuseIdentifiers;
    LynxUIContext *_context;
    long long _sign;
    NSArray *_stickyTopItems;
    NSArray *_stickyBottomItems;
    long long _initialScrollIndex;
}

@property (retain, nonatomic) LynxListLayoutManager *innerLayout;
@property (weak, nonatomic) id<LynxListLayoutProtocol> customizedLayout;
@property (weak, nonatomic) LynxUIListDataSource *dataSource;
@property (retain, nonatomic) LynxUIListScrollManager *scrollManager;
@property (retain, nonatomic) LynxListAnchorManager *anchorManager;
@property (weak, nonatomic) LynxEventEmitter *eventEmitter;
@property (retain, nonatomic) LynxListCachedCellManager *cachedCells;
@property (retain, nonatomic) LynxListReusePool *reusePool;
@property (retain, nonatomic) NSMutableArray *reuseIdentifiers;
@property (weak, nonatomic) LynxUIContext *context;
@property (nonatomic) long long sign;
@property (retain, nonatomic) NSArray *stickyTopItems;
@property (retain, nonatomic) NSArray *stickyBottomItems;
@property (nonatomic) long long initialScrollIndex;
@property (nonatomic) BOOL needsVisibleCells;
@property (nonatomic) BOOL isHandlingEmptyDisplayingCells;
@property (nonatomic) BOOL isSelfSizing;
@property (nonatomic) long long numberOfColumns;
@property (nonatomic) BOOL verticalOrientation;
@property (nonatomic) long long preloadBufferCount;
@property (nonatomic) BOOL anchorPriorityFromBegin;
@property (nonatomic) BOOL deleteRegressPolicyToTop;
@property (nonatomic) BOOL insertAnchorModeInside;
@property (nonatomic) long long anchorVisibility;
@property (nonatomic) BOOL anchorAlignToBottom;
@property (nonatomic) BOOL isAsync;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)sign;
- (void)setSign:(long long)arg0;
- (void)updateFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 withPadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg1 border:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg2 margin:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg3 withLayoutAnimation:(BOOL)arg4;
- (long long)cellPosition:(id)arg0;
- (id)innerLayout;
- (id)dequeueReusableCellForIndex:(long long)arg0;
- (id)anchorManager;
- (void)setAnchorManager:(id)arg0;
- (id)stickyTopItems;
- (id)stickyBottomItems;
- (long long)initialScrollIndex;
- (void)setInitialScrollIndex:(long long)arg0;
- (void)setStickyTopItems:(id)arg0;
- (void)setStickyBottomItems:(id)arg0;
- (double)orientationTopOrigin:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateModelsWithRemovals:(id)arg0;
- (void)updateModelsWithInsertions:(id)arg0;
- (BOOL)verticalOrientation;
- (void)setVerticalOrientation:(BOOL)arg0;
- (double)orientationMaxScrollableDistance;
- (double)orientationMinScrollableDistance;
- (id)findHitTestTarget:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (void)onAsyncComponentLayoutUpdated:(id)arg0 operationID:(long long)arg1;
- (void)setCachedCells:(id)arg0;
- (void)setAnchorPriorityFromBegin:(BOOL)arg0;
- (void)setDeleteRegressPolicyToTop:(BOOL)arg0;
- (void)setInsertAnchorModeInside:(BOOL)arg0;
- (void)updateScrollThresholds:(id)arg0;
- (id)cachedCells;
- (void)setReuseIdentifiers:(id)arg0;
- (long long)preloadBufferCount;
- (long long)nextIndexForUpperCache:(id)arg0;
- (BOOL)isSticky:(long long)arg0;
- (id)upperCacheIndexes;
- (id)loadNewCellAtIndex:(long long)arg0;
- (void)invalidLayoutForCellIfNecessaryAndSync:(id)arg0;
- (void)recycleCell:(id)arg0;
- (double)orientationBottomOfRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)nextIndexForLowerCache:(id)arg0;
- (id)lowerCacheIndexes;
- (void)performBatchUpdatesWithContext:(id)arg0;
- (void)performGeneralPropsUpdate:(id)arg0;
- (void)performInitialScrollIndex:(long long)arg0;
- (void)adjustWithBoundsChange;
- (void)performScrollThresholdsUpdate:(id)arg0;
- (void)performSelfSizing:(id)arg0;
- (void)performScrollToPosition:(id)arg0;
- (void)updateStickyItems:(id)arg0;
- (void)updateCellAtIndex:(long long)arg0 toIndex:(long long)arg1;
- (void)invalidLayoutFromIndex:(long long)arg0;
- (BOOL)needsVisibleCells;
- (void)setNeedsVisibleCells:(BOOL)arg0;
- (struct CGPoint { double x0; double x1; })targetContentOffsetAtIndex:(long long)arg0 offset:(double)arg1 sticky:(BOOL)arg2 scrollPosition:(id)arg3;
- (struct CGPoint { double x0; double x1; })orientationPointConverter:(double)arg0;
- (void)invalidLayoutForCellIfNecessary:(id)arg0;
- (void)refreshDisplayCells;
- (void)offloadStickyTop;
- (void)fillToUpperBoundsIfNecessary;
- (void)fillToLowerBoundsIfNecessary;
- (void)handleSticky;
- (BOOL)isHandlingEmptyDisplayingCells;
- (void)loadAppropriateCellInCurrentOffset;
- (void)adjustLowerCache;
- (void)adjustUpperCache;
- (long long)triggerLayoutManuallyToFindNextIndex:(id)arg0 toTop:(BOOL)arg1;
- (BOOL)needFillToBottom:(id)arg0;
- (void)insertInEmptyDisplayingCells;
- (struct { BOOL x0; BOOL x1; BOOL x2; })makeAnchorPolicies;
- (id)getAnchorCellInIndex:(long long)arg0;
- (struct { double x0; double x1; double x2; double x3; })makeAnchorDistance:(id)arg0;
- (void)updateUpdateToPathAfterInsertion:(id)arg0;
- (void)adjustContentOffsetBasedOnPolicy:(struct { double x0; double x1; double x2; double x3; })arg0 anchor:(id)arg1;
- (void)setIsHandlingEmptyDisplayingCells:(BOOL)arg0;
- (void)updateUpdateToPathAfterRemoval:(id)arg0;
- (BOOL)anchorPriorityFromBegin;
- (struct CGPoint { double x0; double x1; })idealTargetContentOffset:(struct { double x0; double x1; double x2; double x3; })arg0 anchor:(id)arg1;
- (long long)anchorVisibility;
- (BOOL)anchorAlignToBottom;
- (double)orientationMainSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)findfirstStickyIndex;
- (long long)convertToScrollPosition:(id)arg0;
- (void)dispatchInvalidationContext:(id)arg0;
- (BOOL)deleteRegressPolicyToTop;
- (BOOL)insertAnchorModeInside;
- (id)attachedCells;
- (void)setUIContext:(id)arg0;
- (void)registerCellClass:(Class)arg0 reuseIdentifiers:(id)arg1;
- (void)updateReuseIdentifiers:(id)arg0;
- (id)visibleCellAtPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setPreloadBufferCount:(long long)arg0;
- (void)setAnchorVisibility:(long long)arg0;
- (void)setAnchorAlignToBottom:(BOOL)arg0;
- (void)setInnerLayout:(id)arg0;
- (id)customizedLayout;
- (void)setCustomizedLayout:(id)arg0;
- (void)setScrollManager:(id)arg0;
- (id)visibleCells;
- (id)reusePool;
- (void)setDataSource:(id)arg0;
- (id)init;
- (id)dataSource;
- (void)setLayout:(id)arg0;
- (id)scrollManager;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (long long)numberOfColumns;
- (id)context;
- (void)setNumberOfColumns:(long long)arg0;
- (id)layout;
- (void)setReusePool:(id)arg0;
- (long long)totalItemsCount;
- (BOOL)isAsync;
- (void)setIsAsync:(BOOL)arg0;
- (id)reuseIdentifiers;
- (void)insertItemsAtIndexes:(id)arg0;
- (void)deleteItemsAtIndexes:(id)arg0;
- (id)eventEmitter;
- (void)setEventEmitter:(id)arg0;
- (double)orientationOffset;
- (BOOL)isSelfSizing;
- (void)setIsSelfSizing:(BOOL)arg0;

@end
