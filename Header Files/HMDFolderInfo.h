//
//     Generated by private class-dump
//

@class NSMutableDictionary, HMDFolderInfoModel, NSMutableSet, NSDictionary, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface HMDFolderInfo : NSObject <HMDDiskVisitor> {
    BOOL _allowCustomLevel;
    unsigned long long _fileMaxRecursionDepth;
    long long _collectMinSize;
    NSMutableDictionary *_customFolderMap;
    HMDFolderInfoModel *_rootFolder;
    NSMutableDictionary *_customConfigDict;
    NSMutableSet *_customRegConfigSet;
    NSMutableDictionary *_documentsAndDataSizeDict;
    unsigned long long _libraryCacheSize;
    NSObject<OS_dispatch_queue> *_operationQueue;
    NSDictionary *_customDepthInfo;
}

@property (retain, nonatomic) NSMutableDictionary *customFolderMap;
@property (retain, nonatomic) HMDFolderInfoModel *rootFolder;
@property (retain, nonatomic) NSMutableDictionary *customConfigDict;
@property (retain, nonatomic) NSMutableSet *customRegConfigSet;
@property (retain, nonatomic) NSMutableDictionary *documentsAndDataSizeDict;
@property (nonatomic) unsigned long long libraryCacheSize;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (copy, nonatomic) NSDictionary *customDepthInfo;
@property (nonatomic) BOOL allowCustomLevel;
@property (nonatomic) unsigned long long fileMaxRecursionDepth;
@property (nonatomic) long long collectMinSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)getAPPHomeDirectory;
- (void)visitFile:(id)arg0 size:(unsigned long long)arg1 lastAccessDate:(id)arg2 deepLevel:(long long)arg3;
- (void)visitDirectory:(id)arg0 size:(unsigned long long)arg1 deepLevel:(unsigned long long)arg2;
- (id)translateAbsolutePathToRelative:(id)arg0;
- (unsigned long long)fileMaxRecursionDepth;
- (void)setFileMaxRecursionDepth:(unsigned long long)arg0;
- (void)customPathWithConfigDict:(id)arg0;
- (void)addCustomSearchDepathConfig:(id)arg0;
- (void)setAllowCustomLevel:(BOOL)arg0;
- (void)setCollectMinSize:(long long)arg0;
- (long long)sizeOfDocumentsAndData;
- (id)reportDiskFolderInfoWithAppFolderSize:(double)arg0 compliancePaths:(id)arg1;
- (void)setCustomFolderMap:(id)arg0;
- (void)setCustomConfigDict:(id)arg0;
- (void)setCustomRegConfigSet:(id)arg0;
- (void)setDocumentsAndDataSizeDict:(id)arg0;
- (long long)collectMinSize;
- (BOOL)checkCustomPathWithPath:(id)arg0 size:(unsigned long long)arg1 isFolder:(BOOL)arg2;
- (void)recordFolderInfoWithRelativePath:(id)arg0 size:(unsigned long long)arg1 deepLevel:(unsigned long long)arg2 isFolder:(BOOL)arg3;
- (BOOL)needAddToReportFolderInfo:(id)arg0 depthLevel:(unsigned long long)arg1;
- (id)infoModelWithPath:(id)arg0 size:(unsigned long long)arg1 isFolder:(BOOL)arg2 isUserCustomPath:(BOOL)arg3 level:(unsigned long long)arg4;
- (id)documentsAndDataSizeDict;
- (void)setLibraryCacheSize:(unsigned long long)arg0;
- (BOOL)allowCustomLevel;
- (id)customDepthInfo;
- (id)customConfigDict;
- (id)customRegConfigSet;
- (id)formatPathWithOriginPath:(id)arg0;
- (id)resolutionCustomDepthDict:(id)arg0;
- (void)setCustomDepthInfo:(id)arg0;
- (id)folderInfosDictWithAppFolderSize:(double)arg0 folderInfo:(id)arg1 compliancePaths:(id)arg2 matchedPrefix:(id)arg3;
- (id)customFolderMap;
- (unsigned long long)libraryCacheSize;
- (id)reportDiskFolderInfoWithAppFolderSize:(double)arg0;
- (id)folderInfosDictWithAppFolderSize:(double)arg0 folderInfo:(id)arg1;
- (void)setRootFolder:(id)arg0;
- (id)init;
- (void)setOperationQueue:(id)arg0;
- (id)rootFolder;
- (void).cxx_destruct;
- (void)clearData;
- (id)operationQueue;
- (void)setupData;

@end
