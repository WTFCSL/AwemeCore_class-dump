//
//     Generated by private class-dump
//

@class NSString, AWEInnerPushControlModel, NSArray, NSDictionary;

@interface AWEInnerNotificationRequest : NSObject <NSCopying> {
    BOOL _needLimitNoticeFrequency;
    BOOL _kickNotificationIfDequeueEnable;
    BOOL _requireLogin;
    BOOL _needEnqueue;
    BOOL _ignorePriorityReset;
    NSString *_identifier;
    NSString *_businessType;
    NSString *_bizID;
    long long _type;
    Class _contentClass;
    AWEInnerPushControlModel *_pushControlModel;
    id _businessData;
    long long _priority;
    id /* block */ _isEnableToDisplayNotification;
    NSArray *_unblockBusinessList;
    NSString *_trackIdentifier;
    NSDictionary *_extraTrackParams;
}

@property (nonatomic) long long pushLevel;
@property (nonatomic) long long orderIndex;
@property (nonatomic) long long addTimeStamp;
@property (copy, nonatomic) NSString *ruleID;
@property (copy, nonatomic) NSString *groupID;
@property (copy, nonatomic) NSString *vibrateTrackPushType;
@property (copy, nonatomic) NSString *vibrateTrackChatType;
@property (copy, nonatomic) NSString *vibrateTrackFromUserID;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSString *businessType;
@property (copy, nonatomic) NSString *bizID;
@property (nonatomic) BOOL needLimitNoticeFrequency;
@property (readonly, nonatomic) long long type;
@property (readonly, nonatomic) Class contentClass;
@property (retain, nonatomic) AWEInnerPushControlModel *pushControlModel;
@property (retain, nonatomic) id businessData;
@property (nonatomic) long long priority;
@property (copy, nonatomic) id /* block */ isEnableToDisplayNotification;
@property (nonatomic) BOOL kickNotificationIfDequeueEnable;
@property (nonatomic) BOOL requireLogin;
@property (nonatomic) BOOL needEnqueue;
@property (copy, nonatomic) NSArray *unblockBusinessList;
@property (readonly, copy, nonatomic) NSString *trackIdentifier;
@property (copy, nonatomic) NSDictionary *extraTrackParams;
@property (nonatomic) BOOL ignorePriorityReset;

+ (id)requestWithIdentifier:(id)arg0 type:(long long)arg1 contentClass:(id)arg2;

- (id)businessData;
- (void)setBusinessData:(id)arg0;
- (void)setBusinessType:(id)arg0;
- (void)setBizID:(id)arg0;
- (void)setExtraTrackParams:(id)arg0;
- (id)extraTrackParams;
- (void)setPushLevel:(long long)arg0;
- (void)setRequireLogin:(BOOL)arg0;
- (void)setUnblockBusinessList:(id)arg0;
- (void)setPushControlModel:(id)arg0;
- (id)pushControlModel;
- (BOOL)requireLogin;
- (void)setIsEnableToDisplayNotification:(id /* block */)arg0;
- (void)setKickNotificationIfDequeueEnable:(BOOL)arg0;
- (void)setNeedEnqueue:(BOOL)arg0;
- (void)setIgnorePriorityReset:(BOOL)arg0;
- (void)setVibrateTrackPushType:(id)arg0;
- (BOOL)kickNotificationIfDequeueEnable;
- (id)unblockBusinessList;
- (id /* block */)isEnableToDisplayNotification;
- (void)setAddTimeStamp:(long long)arg0;
- (BOOL)needEnqueue;
- (long long)addTimeStamp;
- (BOOL)ignorePriorityReset;
- (id)vibrateTrackFromUserID;
- (id)vibrateTrackChatType;
- (id)vibrateTrackPushType;
- (long long)pushLevel;
- (void)setRuleID:(id)arg0;
- (void)setVibrateTrackChatType:(id)arg0;
- (void)setVibrateTrackFromUserID:(id)arg0;
- (id)initWithRequestIdentifier:(id)arg0 type:(long long)arg1 contentClass:(id)arg2;
- (void)copyFromRequest:(id)arg0;
- (BOOL)needLimitNoticeFrequency;
- (void)setNeedLimitNoticeFrequency:(BOOL)arg0;
- (void)setGroupID:(id)arg0;
- (id)businessType;
- (long long)orderIndex;
- (id)groupID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (long long)type;
- (void)setPriority:(long long)arg0;
- (id)identifier;
- (id)description;
- (long long)priority;
- (id)trackIdentifier;
- (void)setOrderIndex:(long long)arg0;
- (id)ruleID;
- (id)bizID;
- (Class)contentClass;

@end
