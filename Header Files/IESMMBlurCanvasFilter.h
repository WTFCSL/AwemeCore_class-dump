//
//     Generated by private class-dump
//

@class HTSGLFilterGaussianBlur;

@interface IESMMBlurCanvasFilter : IESMMCanvasBaseFilter {
    BOOL _isSkipCanvas;
    HTSGLFilterGaussianBlur *_blurFilter;
}

@property (retain, nonatomic) HTSGLFilterGaussianBlur *blurFilter;
@property (nonatomic) BOOL isSkipCanvas;

- (void)renderToTextureWithVertices:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)setupFilterForSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setInputRotation:(unsigned long long)arg0 atIndex:(long long)arg1;
- (void)setInputFramebuffer:(id)arg0 atIndex:(long long)arg1;
- (void)setInputSize:(struct CGSize { double x0; double x1; })arg0 atIndex:(long long)arg1;
- (void)initializeRenderer:(id)arg0;
- (id)initWithConfig:(id)arg0 observable:(id /* block */)arg1 canvasSize:(struct CGSize { double x0; double x1; })arg2 context:(id)arg3;
- (void)setBlurFilter:(id)arg0;
- (BOOL)isSkipCanvas;
- (void)renderBlurToTexture:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)setCanvasRender;
- (void)drawCanvas:(BOOL)arg0;
- (void)drawWithoutEffectRenderer;
- (void)setIsSkipCanvas:(BOOL)arg0;
- (void)updateBlurRadiusInPixels:(double)arg0;
- (void).cxx_destruct;
- (id)blurFilter;

@end
