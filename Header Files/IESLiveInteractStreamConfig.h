//
//     Generated by private class-dump
//

@class IESLiveInteractUser, NSString, NSDictionary, NSNumber;

@interface IESLiveInteractStreamConfig : NSObject <IESLivePushStreamEntryConfig> {
    BOOL _enableExternVideo;
    BOOL _retainLastVideoFrame;
    BOOL _enableExternAudio;
    BOOL _enableMixedLivePush;
    BOOL _enableMixedLiveCoreLivePush;
    BOOL _useExternalRender;
    BOOL _useExternalAudioRender;
    BOOL _enableSetupAudioPushStream;
    BOOL _forceGlobalAPIServer;
    BOOL _audioCaptureAsync;
    BOOL _defaultAudioScenarioIsMedia;
    BOOL _needSecondMix;
    BOOL _needBypassFOV;
    IESLiveInteractUser *_roomOwner;
    IESLiveInteractUser *_currentUser;
    long long _mode;
    long long _playMode;
    long long _videoProfile;
    NSString *_publishUrl;
    long long _streamWidth;
    long long _streamHeight;
    long long _streamFps;
    long long _streamBitrate;
    long long _streamAudioCodec;
    long long _streamVideoCodec;
    long long _customizedAudioProfile;
    unsigned long long _externAudioSampleRate;
    unsigned long long _externAudioChannelsPerFrame;
    NSString *_projectKey;
    NSString *_appID;
    NSString *_appVersion;
    NSString *_appChannelType;
    long long _streamGop;
    long long _streamAudioChannels;
    long long _streamAduioSamplerate;
    long long _streamAudiobitrate;
    NSDictionary *_rtcExtInfo;
    long long _envMode;
    NSString *_abTestConfig;
    NSString *_channelName;
    NSNumber *_clientType;
    NSString *_deviceId;
    NSDictionary *_sdkParams;
    NSString *_metaDataString;
    NSDictionary *_audioMetricConfig;
    struct IESLiveVideoProfile_s { long long width; long long height; long long fps; long long bitrate; } _userCustomizedProfile;
}

@property (retain, nonatomic) IESLiveInteractUser *roomOwner;
@property (retain, nonatomic) IESLiveInteractUser *currentUser;
@property (nonatomic) long long mode;
@property (nonatomic) long long playMode;
@property (nonatomic) long long videoProfile;
@property (copy, nonatomic) NSString *publishUrl;
@property (nonatomic) long long streamWidth;
@property (nonatomic) long long streamHeight;
@property (nonatomic) long long streamFps;
@property (nonatomic) long long streamBitrate;
@property (nonatomic) long long streamAudioCodec;
@property (nonatomic) long long streamVideoCodec;
@property (nonatomic) long long customizedAudioProfile;
@property (nonatomic) struct IESLiveVideoProfile_s { long long width; long long height; long long fps; long long bitrate; } userCustomizedProfile;
@property (nonatomic) BOOL enableExternVideo;
@property BOOL retainLastVideoFrame;
@property (nonatomic) BOOL enableExternAudio;
@property (nonatomic) unsigned long long externAudioSampleRate;
@property (nonatomic) unsigned long long externAudioChannelsPerFrame;
@property (copy, nonatomic) NSString *projectKey;
@property (nonatomic) BOOL enableMixedLivePush;
@property (nonatomic) BOOL enableMixedLiveCoreLivePush;
@property (nonatomic) BOOL useExternalRender;
@property (nonatomic) BOOL useExternalAudioRender;
@property (nonatomic) BOOL enableSetupAudioPushStream;
@property (copy, nonatomic) NSString *appID;
@property (copy, nonatomic) NSString *appVersion;
@property (copy, nonatomic) NSString *appChannelType;
@property (nonatomic) long long streamGop;
@property (nonatomic) long long streamAudioChannels;
@property (nonatomic) long long streamAduioSamplerate;
@property (nonatomic) long long streamAudiobitrate;
@property (copy, nonatomic) NSDictionary *rtcExtInfo;
@property (nonatomic) BOOL forceGlobalAPIServer;
@property (nonatomic) long long envMode;
@property (copy, nonatomic) NSString *abTestConfig;
@property (copy, nonatomic) NSString *channelName;
@property (retain, nonatomic) NSNumber *clientType;
@property (copy, nonatomic) NSString *deviceId;
@property (nonatomic) BOOL audioCaptureAsync;
@property (copy, nonatomic) NSDictionary *sdkParams;
@property (copy, nonatomic) NSString *metaDataString;
@property (nonatomic) BOOL defaultAudioScenarioIsMedia;
@property (copy, nonatomic) NSDictionary *audioMetricConfig;
@property (nonatomic) BOOL needSecondMix;
@property (nonatomic) BOOL needBypassFOV;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setProjectKey:(id)arg0;
- (id)sdkParams;
- (void)setSdkParams:(id)arg0;
- (id)abTestConfig;
- (id)rtcExtInfo;
- (long long)videoProfile;
- (void)setVideoProfile:(long long)arg0;
- (void)setRtcExtInfo:(id)arg0;
- (void)setEnableMixedLivePush:(BOOL)arg0;
- (void)setEnableExternAudio:(BOOL)arg0;
- (void)setRetainLastVideoFrame:(BOOL)arg0;
- (void)setAbTestConfig:(id)arg0;
- (id)appChannelType;
- (void)setAppChannelType:(id)arg0;
- (id)projectKey;
- (BOOL)enableMixedLivePush;
- (BOOL)enableExternAudio;
- (BOOL)retainLastVideoFrame;
- (id)metaDataString;
- (void)setStreamWidth:(long long)arg0;
- (void)setStreamHeight:(long long)arg0;
- (id)publishUrl;
- (void)setPublishUrl:(id)arg0;
- (long long)streamWidth;
- (long long)streamHeight;
- (long long)streamFps;
- (void)setStreamFps:(long long)arg0;
- (long long)streamBitrate;
- (void)setStreamBitrate:(long long)arg0;
- (long long)streamAudioCodec;
- (void)setStreamAudioCodec:(long long)arg0;
- (long long)streamVideoCodec;
- (void)setStreamVideoCodec:(long long)arg0;
- (long long)customizedAudioProfile;
- (void)setCustomizedAudioProfile:(long long)arg0;
- (struct IESLiveVideoProfile_s { long long x0; long long x1; long long x2; long long x3; })userCustomizedProfile;
- (void)setUserCustomizedProfile:(struct IESLiveVideoProfile_s { long long x0; long long x1; long long x2; long long x3; })arg0;
- (BOOL)enableExternVideo;
- (void)setEnableExternVideo:(BOOL)arg0;
- (unsigned long long)externAudioChannelsPerFrame;
- (void)setExternAudioChannelsPerFrame:(unsigned long long)arg0;
- (BOOL)enableMixedLiveCoreLivePush;
- (BOOL)useExternalRender;
- (void)setUseExternalRender:(BOOL)arg0;
- (BOOL)useExternalAudioRender;
- (void)setUseExternalAudioRender:(BOOL)arg0;
- (long long)streamGop;
- (void)setStreamGop:(long long)arg0;
- (long long)streamAudioChannels;
- (void)setStreamAudioChannels:(long long)arg0;
- (long long)streamAduioSamplerate;
- (long long)streamAudiobitrate;
- (void)setStreamAudiobitrate:(long long)arg0;
- (BOOL)forceGlobalAPIServer;
- (void)setForceGlobalAPIServer:(BOOL)arg0;
- (BOOL)audioCaptureAsync;
- (void)setAudioCaptureAsync:(BOOL)arg0;
- (BOOL)defaultAudioScenarioIsMedia;
- (void)setDefaultAudioScenarioIsMedia:(BOOL)arg0;
- (BOOL)needSecondMix;
- (void)setNeedSecondMix:(BOOL)arg0;
- (BOOL)needBypassFOV;
- (void)setNeedBypassFOV:(BOOL)arg0;
- (id)audioMetricConfig;
- (void)setExternAudioSampleRate:(unsigned long long)arg0;
- (unsigned long long)externAudioSampleRate;
- (BOOL)enableSetupAudioPushStream;
- (void)setEnableSetupAudioPushStream:(BOOL)arg0;
- (void)setMetaDataString:(id)arg0;
- (void)setAudioMetricConfig:(id)arg0;
- (void)setStreamAduioSamplerate:(long long)arg0;
- (void)setEnableMixedLiveCoreLivePush:(BOOL)arg0;
- (id)init;
- (void)setAppID:(id)arg0;
- (void)setAppVersion:(id)arg0;
- (void).cxx_destruct;
- (id)deviceId;
- (id)channelName;
- (id)clientType;
- (long long)mode;
- (void)setMode:(long long)arg0;
- (id)appVersion;
- (id)appID;
- (id)currentUser;
- (void)setClientType:(id)arg0;
- (void)setCurrentUser:(id)arg0;
- (void)setDeviceId:(id)arg0;
- (void)setChannelName:(id)arg0;
- (void)setEnvMode:(long long)arg0;
- (long long)envMode;
- (void)setPlayMode:(long long)arg0;
- (long long)playMode;
- (id)roomOwner;
- (void)setRoomOwner:(id)arg0;

@end
