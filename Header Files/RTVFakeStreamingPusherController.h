//
//     Generated by private class-dump
//

@class NSString, CADisplayLink;
@protocol RTVXREngine;

@interface RTVFakeStreamingPusherController : NSObject <RTVXREngineDelegate, RTVFakeStreamingPusherController> {
    struct Mutex { int _type; union { struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _plain; struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _recursive; } ; } _lock;
    struct __CVBuffer { } *_preFrame;
    BOOL _joinRoomSucceed;
    BOOL _needStartPushFakeStream;
    CADisplayLink *_displayLink;
    id /* block */ _captureBlock;
    id<RTVXREngine> _xrEngine;
    struct CGSize { double width; double height; } _outputSize;
}

@property (retain, nonatomic) CADisplayLink *displayLink;
@property (copy, nonatomic) id /* block */ captureBlock;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (weak, nonatomic) id<RTVXREngine> xrEngine;
@property (nonatomic) BOOL joinRoomSucceed;
@property (nonatomic) BOOL needStartPushFakeStream;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct __CVBuffer { } *)createDarkFrameWithFrameSize:(struct CGSize { double x0; double x1; })arg0;

- (void)rxAwakeFromPropertyInjection;
- (id)xrEngine;
- (void)setXrEngine:(id)arg0;
- (void)xrEngine:(id)arg0 didJoinRoom:(id)arg1 withUid:(id)arg2;
- (void)xrEngine:(id)arg0 didLeaveRoom:(id)arg1;
- (void)updateFrame:(struct __CVBuffer { } *)arg0;
- (void)configWithXREngine:(id)arg0 outputSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setJoinRoomSucceed:(BOOL)arg0;
- (void)setPreFrame:(struct __CVBuffer { } *)arg0;
- (void)__createFrame;
- (void)setNeedStartPushFakeStream:(BOOL)arg0;
- (BOOL)joinRoomSucceed;
- (void)__pushFrame:(id)arg0;
- (struct __CVBuffer { } *)preFrame;
- (BOOL)needStartPushFakeStream;
- (void)setCaptureBlock:(id /* block */)arg0;
- (BOOL)running;
- (void)setDisplayLink:(id)arg0;
- (void).cxx_destruct;
- (id /* block */)captureBlock;
- (struct CGSize { double x0; double x1; })outputSize;
- (id)displayLink;
- (void)dealloc;
- (id).cxx_construct;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)startStreaming;
- (void)stopStreaming;

@end
