//
//     Generated by private class-dump
//

@class NSArray, NSDictionary, NSURL, NSString, NSNumber;
@protocol IESLivePlayerProtocol;

@protocol HTSLiveStreamPlayerProvider <NSObject>

@property (readonly, nonatomic) id<IESLivePlayerProtocol> player;
@property (readonly, nonatomic) unsigned long long loadState;
@property (readonly, nonatomic) unsigned long long playbackState;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } mediaSize;
@property (readonly, copy, nonatomic) NSDictionary *metaInfoReceived;
@property (nonatomic) unsigned long long alignMode;
@property (nonatomic) long long scaleType;
@property (readonly, nonatomic) NSURL *streamURL;
@property (readonly, nonatomic) NSDictionary *debugInfo;
@property (readonly, nonatomic) BOOL needToShowLoading;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } renderViewFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentViewFrame;
@property (readonly, nonatomic) long long delayTime;
@property (retain, nonatomic) NSNumber *doubleInterationDistance;
@property (readonly, nonatomic) NSNumber *multiLinkerDistance;
@property (readonly, copy, nonatomic) NSArray *multiLinkerGridRatioFrames;
@property (nonatomic) BOOL isNeedUpdateMultiLinkerLayoutParam;
@property (nonatomic) BOOL enableVideoRenderInAudioRoom;
@property (nonatomic) long long ntpDiffTime;
@property (readonly, nonatomic) BOOL isInPKMode;
@property (readonly, nonatomic) BOOL isInMultiLinkerMode;
@property (nonatomic) BOOL disableMuteOperation;
@property (readonly, nonatomic) BOOL shouldHasViceView;
@property (readonly, nonatomic) BOOL isGameViceViewExist;
@property (nonatomic) BOOL isSonicShareScreen;
@property (nonatomic) BOOL enableReplacePauseToStopInRtm;
@property (readonly, nonatomic) BOOL supportsTimeShift;
@property (readonly, nonatomic) double currentWatchTime;
@property (readonly, nonatomic) double liveStartTime;
@property (readonly, nonatomic) double serverTime;
@property (readonly, nonatomic) double latestLiveTime;
@property (readonly, nonatomic) NSString *resolutionKey;
@property (readonly, nonatomic) BOOL isVerticalStream;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } specifyRatio;

- (id)player;

@optional

- (BOOL)isInAvoidVideoRenderingMode;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (void)setEnableReplacePauseToStopInRtm:(BOOL)arg0;
- (long long)currentAudioStreamDecibel;
- (BOOL)enableReplacePauseToStopInRtm;
- (long long)ntpDiffTime;
- (void)setNtpDiffTime:(long long)arg0;
- (BOOL)isPause;
- (id)previewFps;
- (unsigned long long)alignMode;
- (void)setAlignMode:(unsigned long long)arg0;
- (BOOL)supportsTimeShift;
- (double)liveStartTime;
- (double)currentWatchTime;
- (void)playWithCallTrace:(id)arg0;
- (void)pauseWithCallTrace:(id)arg0;
- (void)stopWithCallTrace:(id)arg0;
- (void)closeWithCallTrace:(id)arg0;
- (void)startVideoRenderingWithCallTrace:(id)arg0;
- (void)stopVideoRenderingWithCallTrace:(id)arg0;
- (void)startAudioRenderingWithCallTrace:(id)arg0;
- (void)stopAudioRenderingWithCallTrace:(id)arg0;
- (BOOL)isBufferFull;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderViewFrame;
- (void)setEnableVideoSDR2HDR:(BOOL)arg0 callTrace:(id)arg1;
- (id)previewViewWithCallTrace:(id)arg0;
- (id)playerViewWithCallTrace:(id)arg0;
- (id)viceViewWithCallTrace:(id)arg0;
- (void)lockFrameWithCallTrace:(id)arg0;
- (void)unlockFrameWithCallTrace:(id)arg0;
- (void)viewWillAppearWithCallTrace:(id)arg0;
- (void)viewWillDisappearWithCallTrace:(id)arg0;
- (void)resetFrameWithCallTrace:(id)arg0;
- (void)togglePlayerOpaque:(BOOL)arg0 callTrace:(id)arg1;
- (void)stopAndClearCurrentMediaWithCallTrace:(id)arg0;
- (void)pauseCurrentMediaWithCallTrace:(id)arg0;
- (void)resumeCurrentMediaWithCallTrace:(id)arg0;
- (void)resumePreviousMediaWithCallTrace:(id)arg0;
- (void)reloadPreviousMediaWithCallTrace:(id)arg0;
- (void)reloadMediaWithURL:(id)arg0 callTrace:(id)arg1 complete:(id /* block */)arg2;
- (void)reloadWithRoomModel:(id)arg0 callTrace:(id)arg1;
- (void)setMuteForce:(BOOL)arg0 callTrace:(id)arg1;
- (void)setMute:(BOOL)arg0 callTrace:(id)arg1;
- (void)detachWindowPlayerWithCallTrace:(id)arg0;
- (void)attachWindow:(id)arg0 callTrace:(id)arg1;
- (void)attachWindow:(id)arg0 callTrace:(id)arg1 channel:(long long)arg2;
- (void)resetAttachViewWithCallTrace:(id)arg0;
- (void)lockInWindowPlayerView:(BOOL)arg0 callTrace:(id)arg1;
- (void)layoutWithType:(unsigned long long)arg0 callTrace:(id)arg1;
- (struct CGPoint { double x0; double x1; })playerOffsetWithPlayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 videoSize:(struct CGSize { double x0; double x1; })arg1 callTrace:(id)arg2;
- (void)setPlayerViewHidden:(BOOL)arg0 callTrace:(id)arg1;
- (void)removePreEnterViewWithLayout:(unsigned long long)arg0 callTrace:(id)arg1;
- (struct __CVBuffer { } *)cropCopyPixelBuffer:(float)arg0 topLeftY:(float)arg1 cropW:(float)arg2 cropH:(float)arg3 callTrace:(id)arg4;
- (void)scalePlayerWithBottomOffset:(double)arg0 callTrace:(id)arg1;
- (void)scalePlayerByRightPanelResetFrame:(BOOL)arg0 callTrace:(id)arg1;
- (void)closeWithCloseRoomType:(unsigned long long)arg0 callTrace:(id)arg1 preferOptions:(id)arg2;
- (BOOL)isVRStream;
- (BOOL)isInWindowPlayerView;
- (BOOL)isViceLayoutTypeGame;
- (BOOL)isCameraHidden;
- (void)logLatency:(double)arg0 vendor:(id)arg1;
- (BOOL)lockedInWindowPlayerView;
- (BOOL)liveEnableRenderVideoOptimize;
- (unsigned long long)streamLayoutType;
- (id)streamLayoutClassName;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentPlayerFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentPlayerFrameWithLayoutType:(unsigned long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })playViewFrameWithLayoutType:(unsigned long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })streamFrameInView:(id)arg0;
- (struct __CVBuffer { } *)copyInstantPixelBuffer;
- (double)getCurrentDuration;
- (double)getWatchedDuration;
- (void)seekStreamProgress:(double)arg0 callTrace:(id)arg1 complete:(id /* block */)arg2;
- (void)updateCurrentTime:(double)arg0 callTrace:(id)arg1;
- (id)getSeiMetaInfo;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })vsLandscapePlayerFrame;
- (double)bottomOffsetForPlayerCalculate;
- (double)bottomOffsetForPlayerInTemplateRoom;
- (void)changeCameraTo:(id)arg0 callTrace:(id)arg1;
- (void)changeCameraToID:(id)arg0 callTrace:(id)arg1;
- (void)changeCameraToID:(id)arg0 callTrace:(id)arg1 source:(long long)arg2;
- (void)changeRoomStyleCallTrace:(id)arg0;
- (void)reloadCurrentViceStateWithCallTrace:(id)arg0;
- (void)storageUsedSpecifyRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getUsedSpecifyRatioFrame;
- (float)getStreamSouceLuft;
- (float)getStreamSourcePeak;
- (float)getStreamTargetLufs;
- (BOOL)getIsStreamEnableExternalAETargetLufs;
- (id)metaInfoReceived;
- (BOOL)needToShowLoading;
- (id)doubleInterationDistance;
- (void)setDoubleInterationDistance:(id)arg0;
- (id)multiLinkerDistance;
- (id)multiLinkerGridRatioFrames;
- (BOOL)isNeedUpdateMultiLinkerLayoutParam;
- (void)setIsNeedUpdateMultiLinkerLayoutParam:(BOOL)arg0;
- (BOOL)enableVideoRenderInAudioRoom;
- (void)setEnableVideoRenderInAudioRoom:(BOOL)arg0;
- (BOOL)isInPKMode;
- (BOOL)isInMultiLinkerMode;
- (BOOL)disableMuteOperation;
- (void)setDisableMuteOperation:(BOOL)arg0;
- (BOOL)shouldHasViceView;
- (BOOL)isGameViceViewExist;
- (BOOL)isSonicShareScreen;
- (double)latestLiveTime;
- (id)resolutionKey;
- (BOOL)isVerticalStream;
- (struct CGSize { double x0; double x1; })specifyRatio;
- (unsigned long long)playbackState;
- (void)layoutIfNeeded;
- (double)serverTime;
- (unsigned long long)loadState;
- (id)debugInfo;
- (long long)delayTime;
- (BOOL)isRendered;
- (BOOL)isPlaying;
- (id)streamURL;
- (id)resolutionType;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentViewFrame;
- (struct CGSize { double x0; double x1; })mediaSize;
- (long long)scaleType;
- (void)setScaleType:(long long)arg0;
- (BOOL)isMute;
- (void)setIsSonicShareScreen:(BOOL)arg0;

@end
