//
//     Generated by private class-dump
//

@interface LVCutSameConsumer : NSObject

+ (void)p_replaceVideoMaterial:(struct VideoMaterial { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; float x6; float x7; float x8; int x9; int x10; int x11; long long x12; long long x13; long long x14; long long x15; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x16; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x17; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x18; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x20; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x21; })arg0 toNLE:(struct shared_ptr<cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1;
+ (struct VideoMaterial { void /* function */ **x0; BOOL x1; BOOL x2; BOOL x3; float x4; float x5; float x6; float x7; float x8; int x9; int x10; int x11; long long x12; long long x13; long long x14; long long x15; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x16; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x17; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x18; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x19; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x20; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x21; })generateVideoMaterial:(id)arg0 videoPayload:(id)arg1;
+ (int)addCutSame:(id)arg0 toNLE:(id)arg1;
+ (int)removeCutSame:(id)arg0;
+ (void)updateRelativeSizeWhileGlobalCanvasChanged:(id)arg0 prevGlobalCanvasRatio:(double)arg1 globalCanvasRatio:(double)arg2;
+ (id)getTrackSlotForPayloadId:(id)arg0 forTrack:(unsigned long long)arg1 fromCutSameDraft:(id)arg2 toNLE:(id)arg3;
+ (id)getMutableTextMaterials:(id)arg0;
+ (float)getRatio:(id)arg0;
+ (BOOL)replaceVideoAssetWithResourceID:(id)arg0 PayloadID:(id)arg1 path:(id)arg2 nleFolder:(id)arg3 sourceTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg4 fromCutSameDraft:(id)arg5 toNLE:(id)arg6;
+ (BOOL)replaceImagePathWithResourceID:(id)arg0 payloadID:(id)arg1 nleFolder:(id)arg2 imagePath:(id)arg3 imageSize:(struct CGSize { double x0; double x1; })arg4 sourceTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg5 fromCutSameDraft:(id)arg6 toNLE:(id)arg7;
+ (void)replaceVideoMaterial:(id)arg0 toNLE:(id)arg1;
+ (BOOL)replaceSourceTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 payloadID:(id)arg1 fromCutSameDraft:(id)arg2 toNLE:(id)arg3;
+ (BOOL)replaceVideoCrops:(id)arg0 payloadID:(id)arg1 fromCutSameDraft:(id)arg2 toNLE:(id)arg3;
+ (BOOL)replaceTextWithPayloadID:(id)arg0 text:(id)arg1 fromCutSameDraft:(id)arg2 toNLE:(id)arg3;
+ (void)replaceText:(id)arg0 toNLE:(id)arg1;
+ (id)getVideoMaterials:(id)arg0;

@end
