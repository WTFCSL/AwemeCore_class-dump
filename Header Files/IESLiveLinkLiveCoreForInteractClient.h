//
//     Generated by private class-dump
//

@class NSMutableDictionary, IESLiveLinkRTCInteractConfiguration, IESLiveLinkLiveCoreForInteractClientConfig, LiveCore, NSLock, NSString;
@protocol IESLiveLinkLiveCoreForInteractReportDelegate;

@interface IESLiveLinkLiveCoreForInteractClient : NSObject <ILiveCoreForInteract> {
    struct unique_ptr<avframework::VideoInfoStatisticManager, std::default_delete<avframework::VideoInfoStatisticManager>> { struct __compressed_pair<avframework::VideoInfoStatisticManager *, std::default_delete<avframework::VideoInfoStatisticManager>> { struct VideoInfoStatisticManager *__value_; } __ptr_; } statisticManager;
    struct __CVBuffer { } *ref;
    BOOL _mixOnClient;
    BOOL _enableTempExternalClientMix;
    BOOL _firstChorusFrame;
    BOOL _isChorus;
    BOOL _isFrame;
    LiveCore *_livecore;
    long long _interactState;
    IESLiveLinkRTCInteractConfiguration *_interactConfig;
    id<IESLiveLinkLiveCoreForInteractReportDelegate> _reportDelegate;
    NSMutableDictionary *_user_layer_map;
    NSMutableDictionary *_chorus_layer_map;
    NSLock *_chorus_map_lock;
    NSLock *_userLayerMap_lock;
    NSLock *_mixPicLock;
    IESLiveLinkLiveCoreForInteractClientConfig *_liveLinkLiveCoreConfig;
    id /* block */ _getAudioCallback;
}

@property (weak, nonatomic) LiveCore *livecore;
@property (nonatomic) long long interactState;
@property (retain, nonatomic) IESLiveLinkRTCInteractConfiguration *interactConfig;
@property (weak, nonatomic) id<IESLiveLinkLiveCoreForInteractReportDelegate> reportDelegate;
@property (retain, nonatomic) NSMutableDictionary *user_layer_map;
@property (retain, nonatomic) NSMutableDictionary *chorus_layer_map;
@property (retain, nonatomic) NSLock *chorus_map_lock;
@property (retain, nonatomic) NSLock *userLayerMap_lock;
@property (retain, nonatomic) NSLock *mixPicLock;
@property (nonatomic) BOOL enableTempExternalClientMix;
@property (nonatomic) BOOL firstChorusFrame;
@property (nonatomic) BOOL isChorus;
@property (nonatomic) BOOL isFrame;
@property (retain, nonatomic) IESLiveLinkLiveCoreForInteractClientConfig *liveLinkLiveCoreConfig;
@property (copy, nonatomic) id /* block */ getAudioCallback;
@property (nonatomic) BOOL mixOnClient;
@property (nonatomic) BOOL forceCompositingLayout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)reportToServer:(id)arg0;
- (void)setGetAudioCallback:(id /* block */)arg0;
- (void)setForceCompositingLayout:(BOOL)arg0;
- (BOOL)fetchSingleViewStatus;
- (void)enableAudioPushStream:(BOOL)arg0;
- (void)setUser_layer_map:(id)arg0;
- (void)setMixOnClient:(BOOL)arg0;
- (BOOL)mixOnClient;
- (int)sendSEIMsgWithKey:(id)arg0 value:(id)arg1 repeatTimes:(long long)arg2;
- (void)setupCapturePipeline;
- (void)updateStreamingConfiguration:(id)arg0;
- (int)sendSEIMsgWithKey:(id)arg0 value:(id)arg1 repeatTimes:(long long)arg2 keyFrameOnly:(BOOL)arg3 allowsCovered:(BOOL)arg4 timeGap:(int)arg5 seiFlag:(int)arg6;
- (id /* block */)getAudioCallback;
- (id)getAudioQosInfo;
- (id)user_layer_map;
- (id)userLayerMap_lock;
- (void)setUserLayerMap_lock:(id)arg0;
- (BOOL)forceCompositingLayout;
- (void)setLiveCoreForInteractDelegate:(id)arg0;
- (void)pushAudioData:(short *)arg0 size:(long long)arg1;
- (void)pushFLTAudioData:(float **)arg0 size:(long long)arg1;
- (void)setMovieMixVolume:(float)arg0 captureVolume:(float)arg1;
- (void)setMoviePlayVolume:(float)arg0;
- (void)setMoviePlayVolume:(float)arg0 captureVolume:(float)arg1;
- (id)getVideoInfoMessage;
- (BOOL)renderOnSingleView;
- (void)setAudioSink:(id)arg0;
- (id)getRmsInfo;
- (void)setVideoProcessedCallback:(id /* block */)arg0;
- (void)setCameraOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (id)getStatisticInfo;
- (void)startPlayOnly;
- (void)reportMoviePlayStats;
- (void)setMovieMixerMode:(long long)arg0;
- (id)getMixerVideoInfoMessage;
- (void)setSingleView:(BOOL)arg0;
- (void)setReportDelegate:(id)arg0;
- (void)setIsChorus:(BOOL)arg0;
- (BOOL)isChorus;
- (id)reportDelegate;
- (BOOL)audioCaptureInterrupted;
- (id)interactConfig;
- (void)startMovieInteract;
- (void)stopMovieInteract;
- (void)switchToPlayMode:(long long)arg0;
- (void)pauseMovie:(BOOL)arg0;
- (void)switchMixType:(long long)arg0;
- (id)livecore;
- (void)setLivecore:(id)arg0;
- (void)updateStreamingOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)reportAudioKeyApiCallWithEventKey:(id)arg0 params:(id)arg1 reason:(id)arg2;
- (id)initWithLiveCore:(id)arg0 config:(id)arg1;
- (void)playMovie;
- (void)prepareMovieWithSampleRate:(int)arg0 channels:(int)arg1;
- (BOOL)p_shouldUseLCAudioUnit;
- (id)liveLinkLiveCoreConfig;
- (BOOL)isByteAudioMode;
- (void)setInteractState:(long long)arg0;
- (void)p_didJoinedChannel;
- (void)p_didLeaveChannel;
- (id)p_getlayerIDMappingDic;
- (BOOL)enableTempExternalClientMix;
- (id)chorus_layer_map;
- (id)chorus_map_lock;
- (void)setFirstChorusFrame:(BOOL)arg0;
- (unsigned long long)changeRenderModeFrom:(unsigned long long)arg0;
- (BOOL)firstChorusFrame;
- (void)switchMixType:(long long)arg0 canStopPushStreaming:(BOOL)arg1;
- (void)setEnableTempExternalClientMix:(BOOL)arg0;
- (void)p_setCaptureBypassOutput;
- (void)p_startRTCClientMixing;
- (void)p_stopRTCClientMixing;
- (BOOL)p_shouldCheckSessionRunning;
- (void)updateChorusLayout:(id)arg0;
- (void)p_updateLayoutSeiInfo:(id)arg0;
- (void)p_updateStreamingLayout:(id)arg0;
- (id)mixPicLock;
- (void)setMixPicLock:(id)arg0;
- (unsigned long long)convertRendermode:(long long)arg0;
- (id)p_getLiveStreamConfiguration;
- (void)reportALog:(id)arg0 warn:(BOOL)arg1;
- (struct LCLiveStreamConfig { long long x0; long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; id x15; BOOL x16; BOOL x17; BOOL x18; id x19; })getLiveStreamConfig;
- (void)updateAudioDevice;
- (void)setInteractConfig:(id)arg0;
- (void)setupSendVideoToInteract:(BOOL)arg0;
- (void)networkRTCQuality:(unsigned long long)arg0;
- (id)getVideoFrameElapseFromLiveCore;
- (void)interactStateChanged:(long long)arg0;
- (void)setLiveCoreForInteractReportDelegate:(id)arg0;
- (void)sessionFrameRenderCall:(struct CGSize { double x0; double x1; })arg0 strUid:(id)arg1;
- (void)setVideoOutputFormat:(struct CGSize { double x0; double x1; })arg0 pixelFormat:(unsigned int)arg1 enable:(BOOL)arg2;
- (void)setVideoOutputFormat:(struct CGSize { double x0; double x1; })arg0 pixelFormat:(unsigned int)arg1 enable:(BOOL)arg2 isLandscapeVideo:(BOOL)arg3;
- (BOOL)enableBGAudioCapture;
- (id)getRenderFilter;
- (void)pushRTCVideoBuffer:(struct __CVBuffer { } *)arg0 withCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 toUID:(id)arg2;
- (void)setAudioSourceWithBlock:(id /* block */)arg0;
- (void)pushRTCExtraDataToKTV:(id)arg0;
- (void)setVideoSink:(id)arg0;
- (id)createAudioSink;
- (void)preJoinChannelStartPushData;
- (void)pushMixingVideoBuffer:(struct __CVBuffer { } *)arg0 withCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)pushMixingAudioBuffer:(id)arg0 dataSize:(long long)arg1 samples:(long long)arg2 timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg3;
- (void)startChorus;
- (void)pushMixingCacheSyncVideo:(struct __CFArray { } *)arg0 withUids:(id)arg1 withLayout:(id)arg2;
- (void)stopSignleWayChorus;
- (void)pushLastFrameForChorus:(struct __CVBuffer { } *)arg0 pts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)enableSingleDirChorusPipeline:(BOOL)arg0;
- (void)setSingleChorusAVSyncParams:(BOOL)arg0 frameBufferMaxAllowSize:(long long)arg1 auxMaxAllowDelay:(long long)arg2;
- (void)pushSingleDirChorusAudioData:(short *)arg0 samplesPerChannel:(int)arg1 sampleRate:(int)arg2 numChannels:(int)arg3 timestamp:(long long)arg4;
- (void)startAudioCaptureWithSetupPipline:(BOOL)arg0 reason:(id)arg1;
- (void)setAudioMute:(BOOL)arg0 reason:(id)arg1;
- (void)startMixing:(long long)arg0;
- (void)stopMixing;
- (void)updateMixing:(id)arg0;
- (void)startPushMixWaterMarks:(id)arg0;
- (void)stopPushMixWaterMarks:(id)arg0;
- (void)stopPushMixWaterMarkWithId:(id)arg0;
- (BOOL)isEnableBFrame;
- (id)getRtcPushStreamElapse;
- (id)getVideoPipelineInfo;
- (void)updateAECFlagBeforeSetupAudioUnit:(BOOL)arg0;
- (BOOL)shouldUseLCAudioUnit;
- (void)stopAudioCaptureWiteReason:(id)arg0;
- (void)p_updateMixOnClientStreamingBitrate;
- (long long)interactState;
- (void)setChorus_layer_map:(id)arg0;
- (void)setChorus_map_lock:(id)arg0;
- (void)setLiveLinkLiveCoreConfig:(id)arg0;
- (void).cxx_destruct;
- (id)currentUser;
- (id).cxx_construct;
- (void)startVideoCapture;
- (void)setShouldAutoReconnect:(BOOL)arg0;
- (BOOL)isFrame;
- (void)setIsFrame:(BOOL)arg0;

@end
