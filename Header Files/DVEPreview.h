//
//     Generated by private class-dump
//

@class DVEVCContext, NSString, DVETrackerPreviewGesture, DVECanvasVideoBorderView, NSMutableArray, UIGestureRecognizer;
@protocol DVEPreviewRotationDelegate, DVECoreCanvasProtocol, DVENLEInterfaceProtocol, DVEPreviewEdgeDelegate, DVEPreviewAlignmentDelegate;

@interface DVEPreview : UIView <UIGestureRecognizerDelegate, DVECoreActionDelegate> {
    BOOL _isFullscreen;
    BOOL _autoSelectSlotWhenTap;
    BOOL _isRotateEnd;
    BOOL _isScaleEnd;
    DVEVCContext *_vcContext;
    DVECanvasVideoBorderView *_canvasBorderView;
    id<DVEPreviewAlignmentDelegate> _alignDelegate;
    id<DVEPreviewRotationDelegate> _rotationDelegate;
    id<DVEPreviewEdgeDelegate> _edgeDelegate;
    UIGestureRecognizer *_tapGR;
    UIGestureRecognizer *_pinchGR;
    UIGestureRecognizer *_rotateGR;
    UIGestureRecognizer *_panGR;
    double _scale;
    double _angle;
    id<DVECoreCanvasProtocol> _canvasEditor;
    id<DVENLEInterfaceProtocol> _nle;
    double _magnetDistance;
    double _magnetEscapeDistance;
    unsigned long long _hMagState;
    unsigned long long _vMagState;
    double _hMagingDistance;
    double _vMagingDistance;
    double _horizontalEdgeMagnetDistance;
    double _verticalEdgeMagnetDistance;
    NSMutableArray *_megneticEdgePan;
    NSMutableArray *_megneticEdgePinch;
    double _originalScale;
    DVETrackerPreviewGesture *_tracker;
    struct CGPoint { double x; double y; } _translation;
}

@property (nonatomic) double scale;
@property (nonatomic) struct CGPoint { double x; double y; } translation;
@property (nonatomic) double angle;
@property (weak, nonatomic) id<DVECoreCanvasProtocol> canvasEditor;
@property (weak, nonatomic) id<DVENLEInterfaceProtocol> nle;
@property (nonatomic) double magnetDistance;
@property (nonatomic) double magnetEscapeDistance;
@property (nonatomic) unsigned long long hMagState;
@property (nonatomic) unsigned long long vMagState;
@property (nonatomic) double hMagingDistance;
@property (nonatomic) double vMagingDistance;
@property (nonatomic) double horizontalEdgeMagnetDistance;
@property (nonatomic) double verticalEdgeMagnetDistance;
@property (retain, nonatomic) NSMutableArray *megneticEdgePan;
@property (retain, nonatomic) NSMutableArray *megneticEdgePinch;
@property (nonatomic) BOOL isRotateEnd;
@property (nonatomic) BOOL isScaleEnd;
@property (nonatomic) double originalScale;
@property (retain, nonatomic) DVETrackerPreviewGesture *tracker;
@property (weak, nonatomic) DVEVCContext *vcContext;
@property (retain, nonatomic) DVECanvasVideoBorderView *canvasBorderView;
@property (weak, nonatomic) id<DVEPreviewAlignmentDelegate> alignDelegate;
@property (weak, nonatomic) id<DVEPreviewRotationDelegate> rotationDelegate;
@property (weak, nonatomic) id<DVEPreviewEdgeDelegate> edgeDelegate;
@property (nonatomic) BOOL isFullscreen;
@property (nonatomic) BOOL autoSelectSlotWhenTap;
@property (retain, nonatomic) UIGestureRecognizer *tapGR;
@property (retain, nonatomic) UIGestureRecognizer *pinchGR;
@property (retain, nonatomic) UIGestureRecognizer *rotateGR;
@property (retain, nonatomic) UIGestureRecognizer *panGR;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)isShow;
- (BOOL)needShow;
- (void)nleEditorDidChange;
- (void)undoRedoClikedByUser;
- (void)setAlignDelegate:(id)arg0;
- (void)setRotationDelegate:(id)arg0;
- (void)setEdgeDelegate:(id)arg0;
- (void)showCanvasBorderEnableGesture:(BOOL)arg0;
- (void)hideCanvasBorder;
- (id)vcContext;
- (void)setVcContext:(id)arg0;
- (id)nle;
- (void)setNle:(id)arg0;
- (void)initDataDefault;
- (void)updateCanvasBorderWithSlot:(id)arg0;
- (id)canvasBorderView;
- (void)setupCanvasGestures:(id)arg0;
- (void)dispatchGesture:(id)arg0;
- (void)setRotateGR:(id)arg0;
- (id)rotateGR;
- (void)setHorizontalEdgeMagnetDistance:(double)arg0;
- (void)setVerticalEdgeMagnetDistance:(double)arg0;
- (void)handleTranslation:(id)arg0 view:(id)arg1 pan:(id)arg2;
- (void)handleScaleFotSlot:(id)arg0 pinch:(id)arg1;
- (void)handleRotationForSlot:(id)arg0 view:(id)arg1 rotation:(id)arg2;
- (void)setIsScaleEnd:(BOOL)arg0;
- (void)setOriginalScale:(double)arg0;
- (void)setCanvasStyleForSlotIfNeed:(id)arg0;
- (id)megneticEdgePinch;
- (void)magnetEdgeForPinch:(double)arg0 Pinch:(id)arg1;
- (BOOL)isScaleEnd;
- (BOOL)isRotateEnd;
- (id)edgeDelegate;
- (double)horizontalEdgeMagnetDistance;
- (double)verticalEdgeMagnetDistance;
- (void)magnetState:(unsigned long long *)arg0 isHorAligh:(BOOL)arg1 magingDistance:(double *)arg2 trans:(struct CGPoint { double x0; double x1; })arg3 inMagArea:(BOOL)arg4 alignLineDistance:(double)arg5;
- (id)megneticEdgePan;
- (void)magnetEdgeForPan:(double)arg0 View:(id)arg1 Point:(struct CGPoint { double x0; double x1; })arg2;
- (id)alignDelegate;
- (BOOL)autoSelectSlotWhenTap;
- (void)selectSegment:(id)arg0 touchPoint:(struct CGPoint { double x0; double x1; })arg1 inView:(id)arg2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateFrame:(id)arg0 inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setIsRotateEnd:(BOOL)arg0;
- (double)MagnetRotationForPositive:(double)arg0;
- (double)MagnetRotationForNegative:(double)arg0;
- (id)rotationDelegate;
- (void)disableGesture:(BOOL)arg0;
- (void)updateCanvasEditorWithSlot:(id)arg0;
- (void)setCanvasBorderView:(id)arg0;
- (void)setAutoSelectSlotWhenTap:(BOOL)arg0;
- (double)magnetDistance;
- (void)setMagnetDistance:(double)arg0;
- (double)magnetEscapeDistance;
- (void)setMagnetEscapeDistance:(double)arg0;
- (unsigned long long)hMagState;
- (void)setHMagState:(unsigned long long)arg0;
- (unsigned long long)vMagState;
- (void)setVMagState:(unsigned long long)arg0;
- (double)hMagingDistance;
- (void)setHMagingDistance:(double)arg0;
- (double)vMagingDistance;
- (void)setVMagingDistance:(double)arg0;
- (void)setMegneticEdgePan:(id)arg0;
- (void)setMegneticEdgePinch:(id)arg0;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void)refresh;
- (void).cxx_destruct;
- (struct CGPoint { double x0; double x1; })translation;
- (BOOL)isFullscreen;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)scale;
- (id)tapGR;
- (double)angle;
- (void)setTapGR:(id)arg0;
- (void)dealloc;
- (void)setScale:(double)arg0;
- (void)addObserver;
- (void)setTranslation:(struct CGPoint { double x0; double x1; })arg0;
- (void)setAngle:(double)arg0;
- (id)pinchGR;
- (void)setPinchGR:(id)arg0;
- (void)setIsFullscreen:(BOOL)arg0;
- (void)handleTapGesture:(id)arg0;
- (double)originalScale;
- (id)panGR;
- (void)setPanGR:(id)arg0;
- (void)setCanvasEditor:(id)arg0;
- (id)canvasEditor;

@end
