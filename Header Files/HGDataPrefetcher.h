//
//     Generated by private class-dump
//

@class NSNumber, NSMapTable, NSDictionary, NSObject, HGUniqueID;
@protocol OS_dispatch_semaphore;

@interface HGDataPrefetcher : NSObject {
    BOOL _canUseTTNet;
    NSNumber *_hasFirstFrame;
    HGUniqueID *_uniqueID;
    NSMapTable *_prefetchTask;
    NSDictionary *_prefetchDataDic;
    double _taskDuration;
    long long _maxUrlCount;
    long long _maxConcurrentCount;
    NSObject<OS_dispatch_semaphore> *_dataSemaphore;
    NSObject<OS_dispatch_semaphore> *_taskSemaphore;
}

@property (nonatomic) BOOL canUseTTNet;
@property (retain, nonatomic) HGUniqueID *uniqueID;
@property (copy, nonatomic) NSMapTable *prefetchTask;
@property (copy, nonatomic) NSDictionary *prefetchDataDic;
@property (nonatomic) double taskDuration;
@property (nonatomic) long long maxUrlCount;
@property (nonatomic) long long maxConcurrentCount;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *dataSemaphore;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *taskSemaphore;
@property (nonatomic) NSNumber *hasFirstFrame;

- (void)setMaxConcurrentCount:(long long)arg0;
- (void)setHasFirstFrame:(id)arg0;
- (BOOL)canUseTTNetFromSettings;
- (void)setCanUseTTNet:(BOOL)arg0;
- (void)setDataSemaphore:(id)arg0;
- (void)setTaskSemaphore:(id)arg0;
- (void)setPrefetchDataDic:(id)arg0;
- (long long)maxUrlCount;
- (void)setPrefetchTask:(id)arg0;
- (void)setTaskDuration:(double)arg0;
- (void)setMaxUrlCount:(long long)arg0;
- (double)taskDuration;
- (id)hasFirstFrame;
- (id)taskSemaphore;
- (id)prefetchTask;
- (id)prefetchDataDic;
- (id)realListWithPrefetchRulesDict:(id)arg0;
- (BOOL)canUseTTNet;
- (void)_eventWithName:(id)arg0 params:(id)arg1;
- (void)checkAndCancelTask;
- (id)environmentDict;
- (id)fillPrefetchUrl:(id)arg0 header:(id)arg1 withDict:(id)arg2;
- (long long)getMatchTypeFrom:(id)arg0 withKey:(id)arg1;
- (id)initWithUniqueID:(id)arg0 config:(id)arg1;
- (BOOL)prefetchWithSchema:(id)arg0 prefetchRulesDict:(id)arg1 isFromPlugin:(BOOL)arg2;
- (BOOL)shouldUsePrefetchCacheWithParam:(id)arg0 uniqueID:(id)arg1 requestCompletion:(id /* block */)arg2;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (id)dataSemaphore;
- (long long)maxConcurrentCount;

@end
