//
//     Generated by private class-dump
//

@class IESLiveKTVLyricsReceiver, IESLiveKTVCountdownView, IESLiveGCDTimer, IESLiveIndicatorTitleView, UILabel, IESLiveKTVComponentChallengeProgressView, IESLiveKTVLyricsSender, RACDisposable, ReportMidiScoreResponse, IESLiveMultiKTVKSongMidiFeedbackTagView, IESLiveKTVMIDIView, NSString, NSTimer, IESLiveKTVLyricAnimationView, NSNumber, IESLiveKTVExclusiveTool, UIImageView;
@protocol IESLiveKTVSongIndicatorViewModelProtocol;

@interface IESLiveKTVSongIndicatorView : HTSEventForwardingView <IESLiveKTVLyricActions, IESLiveLayoutSceneActions, IESLiveKTVLyricsHandlerDelegate, IESLiveInteractAction, IESLiveIndicatorTitleViewDelegate, IESLiveKTVExclusiveDelegate, HTSLiveMessageSubscriber, IESLiveKTVMultiChorusActions, HTSLivePluginLayoutView> {
    BOOL _noLyrics;
    BOOL _isStatusLabelTitleShowing;
    BOOL _isFetching;
    BOOL _feedbackShownEnough;
    BOOL _isCPUOptimize;
    BOOL _coverMidi;
    id<IESLiveKTVSongIndicatorViewModelProtocol> _viewModel;
    IESLiveKTVLyricAnimationView *_lyricAnimationView;
    IESLiveKTVMIDIView *_midiView;
    RACDisposable *_dispose;
    IESLiveIndicatorTitleView *_titleView;
    UILabel *_feedbackLabel;
    UIImageView *_midiTagView;
    ReportMidiScoreResponse *_scoreResult;
    NSTimer *_hideScoreResultTimer;
    IESLiveKTVCountdownView *_singCountdownView;
    IESLiveKTVComponentChallengeProgressView *_challengeProgressView;
    IESLiveGCDTimer *_progressTimer;
    IESLiveKTVLyricsSender *_lyricsSender;
    IESLiveKTVLyricsReceiver *_lyricsReceiver;
    NSNumber *_visibleLyricLineNum;
    unsigned long long _roleType;
    double _playDuration;
    NSString *_preLyricUrl;
    IESLiveMultiKTVKSongMidiFeedbackTagView *_midiFeedbackTagView;
    IESLiveKTVExclusiveTool *_exclusiveTool;
    double _advanceTime;
    NSString *_nextMusicId;
    double _playTime;
    double _lastShowNextMusicTime;
    id /* block */ _showMidiAction;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _pluginLayoutContentInsets;
}

@property (retain, nonatomic) id<IESLiveKTVSongIndicatorViewModelProtocol> viewModel;
@property (retain, nonatomic) IESLiveKTVLyricAnimationView *lyricAnimationView;
@property (retain, nonatomic) IESLiveKTVMIDIView *midiView;
@property (retain, nonatomic) RACDisposable *dispose;
@property (retain, nonatomic) IESLiveIndicatorTitleView *titleView;
@property (retain, nonatomic) UILabel *feedbackLabel;
@property (retain, nonatomic) UIImageView *midiTagView;
@property (nonatomic) BOOL noLyrics;
@property (nonatomic) BOOL isStatusLabelTitleShowing;
@property (nonatomic) BOOL isFetching;
@property (retain, nonatomic) ReportMidiScoreResponse *scoreResult;
@property (retain, nonatomic) NSTimer *hideScoreResultTimer;
@property (retain, nonatomic) IESLiveKTVCountdownView *singCountdownView;
@property (weak, nonatomic) IESLiveKTVComponentChallengeProgressView *challengeProgressView;
@property (retain, nonatomic) IESLiveGCDTimer *progressTimer;
@property (retain, nonatomic) IESLiveKTVLyricsSender *lyricsSender;
@property (retain, nonatomic) IESLiveKTVLyricsReceiver *lyricsReceiver;
@property (retain, nonatomic) NSNumber *visibleLyricLineNum;
@property (nonatomic) unsigned long long roleType;
@property (nonatomic) double playDuration;
@property (copy, nonatomic) NSString *preLyricUrl;
@property (retain, nonatomic) IESLiveMultiKTVKSongMidiFeedbackTagView *midiFeedbackTagView;
@property (retain, nonatomic) IESLiveKTVExclusiveTool *exclusiveTool;
@property (nonatomic) double advanceTime;
@property (retain, nonatomic) NSString *nextMusicId;
@property (nonatomic) double playTime;
@property (nonatomic) double lastShowNextMusicTime;
@property (nonatomic) BOOL feedbackShownEnough;
@property (copy, nonatomic) id /* block */ showMidiAction;
@property (nonatomic) BOOL isCPUOptimize;
@property (nonatomic) BOOL coverMidi;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } pluginLayoutContentInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)showLyricView;
- (void)didSetAttachingDIContext;
- (void)setPlayDuration:(double)arg0;
- (void)setPlayTime:(double)arg0;
- (void)setRoleType:(unsigned long long)arg0;
- (unsigned long long)roleType;
- (void)setFeedbackLabel:(id)arg0;
- (id)feedbackLabel;
- (struct CGSize { double x0; double x1; })pluginLayoutContentSize;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })pluginLayoutContentInsets;
- (void)updateUnreadCount:(long long)arg0;
- (void)showPanel:(BOOL)arg0;
- (void)startInteractiveWithScene:(unsigned long long)arg0;
- (void)endInteractiveWithScene:(unsigned long long)arg0;
- (void)setDispose:(id)arg0;
- (void)setPluginLayoutContentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (void)subSceneDidAdd:(unsigned long long)arg0;
- (void)subSceneDidRemove:(unsigned long long)arg0;
- (void)setIsCPUOptimize:(BOOL)arg0;
- (BOOL)isCPUOptimize;
- (id)challengeProgressView;
- (void)setChallengeProgressView:(id)arg0;
- (void)bindChallengeModel:(id)arg0;
- (long long)liveKtvMidiMigrationSetting;
- (void)didUpdateMultiChorusRoleType:(unsigned long long)arg0;
- (void)p_layoutLabels;
- (void)willShowMusicInfoAfterTime:(double)arg0;
- (void)hideLyricView;
- (void)hideNoLyricsView;
- (id)getLyricsType;
- (void)updatePlayingTime:(double)arg0;
- (void)p_orderListChange;
- (void)trackKsongIconShow;
- (void)addIconPanGestureRecognizer:(id)arg0;
- (BOOL)selfIsPlay;
- (id)exclusiveTool;
- (id)midiView;
- (void)setMidiView:(id)arg0;
- (void)showAnchorLyricsView;
- (void)removeChallengeView;
- (void)setExclusiveTool:(id)arg0;
- (void)lyricsHandler:(id)arg0 setupInitialLyrics:(id)arg1;
- (void)lyricsHandler:(id)arg0 rollAnimated:(BOOL)arg1 nextSentence:(id)arg2 completion:(id /* block */)arg3;
- (void)lyricsHandler:(id)arg0 refreshActiveLyricRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 progress:(double)arg2;
- (void)lyricsHandlerDidFinished:(id)arg0;
- (id)lyricAnimationView;
- (void)showAudienceLyricsView;
- (void)bindMixKTV;
- (void)closeAnchorLyricsView;
- (void)closeAudienceLyricsView;
- (void)p_dismissMIDIView;
- (void)p_showMIDIView;
- (id)lyricsReceiver;
- (BOOL)isAlreadyInLyricEnd;
- (void)reportMidiScoreIfNeeded;
- (id /* block */)showMidiAction;
- (void)reportMidiScoreIfNeededWithMusic:(id)arg0;
- (id)lyricsSender;
- (void)setShowMidiAction:(id /* block */)arg0;
- (void)setNoLyrics:(BOOL)arg0;
- (void)setLastShowNextMusicTime:(double)arg0;
- (void)setCoverMidi:(BOOL)arg0;
- (void)finishMidiFeedbackShow;
- (void)setNextMusicId:(id)arg0;
- (id)nextMusicId;
- (void)showNextMusicIsStrong:(BOOL)arg0;
- (void)addChallengeView;
- (BOOL)isCurrentLoginUserWithUserID:(id)arg0;
- (void)pr_handleSEIModel:(id)arg0;
- (void)pr_handleMidiFeedbackSEIModel:(id)arg0;
- (id)midiFeedbackTagView;
- (BOOL)feedbackShownEnough;
- (void)setAdvanceTime:(double)arg0;
- (BOOL)isLyricShow;
- (void)p_conductExclusionForTitles;
- (BOOL)noLyrics;
- (void)strongShowTitleLabel:(id)arg0 forTime:(long long)arg1;
- (void)p_updateAnchorLyricView;
- (void)conductExclusionForTitlesIfNeed;
- (void)pr_resetAnchorLyrivView;
- (void)startAnchorRefreshTimer:(id /* block */)arg0;
- (id)visibleLyricLineNum;
- (void)addAudienceLyricsView;
- (BOOL)shouldShowMidiView;
- (void)setFeedbackShownEnough:(BOOL)arg0;
- (void)setHideScoreResultTimer:(id)arg0;
- (id)scoreResult;
- (void)setupMidiTimer;
- (void)setScoreResult:(id)arg0;
- (BOOL)isCurrentUserHitMidiScoreRecordTest;
- (void)showMidiFeedbackTagViewWithConfig:(id)arg0 uid:(id)arg1 songId:(id)arg2;
- (void)showMidiFeedbackWithString:(id)arg0 uid:(id)arg1 songId:(id)arg2 score:(id)arg3 isHighScore:(BOOL)arg4;
- (void)setMidiFeedbackTagView:(id)arg0;
- (BOOL)isCurrentPlayingUserWithUserID:(id)arg0;
- (BOOL)isCurrentPlayingMusicWithMusicId:(id)arg0;
- (id)midiTagView;
- (void)holdbackLyric:(id /* block */)arg0;
- (BOOL)coverMidi;
- (id)singCountdownView;
- (void)setSingCountdownView:(id)arg0;
- (void)pr_finishForce;
- (void)setVisibleLyricLineNum:(id)arg0;
- (void)pr_resumeInsets;
- (void)didTapIndicatorActions:(id)arg0;
- (id)preLyricUrl;
- (void)setPreLyricUrl:(id)arg0;
- (void)downloadLyricAndUpdateView:(id)arg0 musicID:(id)arg1 lyricType:(unsigned long long)arg2 lyricsOffset:(id)arg3 duration:(unsigned long long)arg4;
- (void)pr_handleAudienceScoreWith:(id)arg0;
- (void)startSingCountdownOffset:(double)arg0;
- (double)advanceTime;
- (double)lastShowNextMusicTime;
- (BOOL)hasHighScoreCount:(id)arg0;
- (void)p_removeLabels;
- (void)setLyricAnimationView:(id)arg0;
- (void)setMidiTagView:(id)arg0;
- (BOOL)isStatusLabelTitleShowing;
- (void)setIsStatusLabelTitleShowing:(BOOL)arg0;
- (id)hideScoreResultTimer;
- (void)setLyricsSender:(id)arg0;
- (void)setLyricsReceiver:(id)arg0;
- (id)dispose;
- (void).cxx_destruct;
- (id)initWithViewModel:(id)arg0;
- (double)playTime;
- (void)setViewModel:(id)arg0;
- (void)setTitleView:(id)arg0;
- (id)viewModel;
- (id)viewType;
- (id)titleView;
- (void)messageReceived:(id)arg0;
- (BOOL)isFetching;
- (void)setIsFetching:(BOOL)arg0;
- (void)invalidateDisplayLinkIfNeeded;
- (void)turnOn:(id)arg0;
- (void)turnOff:(id)arg0;
- (id)progressTimer;
- (void)setProgressTimer:(id)arg0;
- (double)playDuration;
- (void)p_addObservers;

@end
