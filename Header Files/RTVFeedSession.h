//
//     Generated by private class-dump
//

@class NSDate, RTVInteractionFeedContext, NSTimer, NSString, RxMultipleDelegate, NSDictionary, RTVFeedShareModel, RxDeferred;
@protocol RTVSettingsManager, RTVFeedMonitorInterface, RTVXREngine, RTVChatController, RTVFeedVolumeSettingController, RTVXRCaptureController, RTVVoipFeatureCheckController, RTVFeedSessionContentDelegate, RTVInteractionConfigureManagerInterface, RTVSessionSettingManager, RTVFakeStreamingPusherController, RTVUserProfileManagerInterface, RTVFeedSessionObsever, RTVXRSettingsInterface, RTVFeedRequestSyncCommandControllerInterface, RTVXRRoomClockController, RTVFeedManagerInterface, RTVFeedConfigureManagerInterface, RTVXRRoomMessageSender;

@interface RTVFeedSession : RTVInteractionSession <RTVXRRoomSessionControllerObserver, RTVXRRoomMessageSenderObserver, RTVXRCaptureControllerObserver, RTVFeedSessionInterface> {
    BOOL _getFirstFrame;
    BOOL _seiChannelValid;
    BOOL _rtmChannelValid;
    BOOL _isPaused;
    BOOL _tryToFeedShareProcessing;
    NSString *_textChatConversationID;
    double _feedVideoVolume;
    id<RTVFeedSessionContentDelegate> _contentDelegate;
    id<RTVFeedManagerInterface> _feedManager;
    id<RTVXREngine> _xrEngine;
    id<RTVFakeStreamingPusherController> _darkStreamingPusher;
    id<RTVFeedMonitorInterface> _monitor;
    id<RTVInteractionConfigureManagerInterface> _interactionConfigManager;
    id<RTVFeedConfigureManagerInterface> _feedConfigureManager;
    id<RTVFeedVolumeSettingController> _volumeController;
    id<RTVChatController> _chatController;
    id<RTVXRCaptureController> _captureController;
    id<RTVXRRoomMessageSender> _engineMessageSender;
    id<RTVSessionSettingManager> _sessionSettingManager;
    id<RTVSettingsManager> _settingManager;
    id<RTVXRSettingsInterface> _fuseSettings;
    id<RTVXRRoomClockController> _roomClockController;
    id<RTVVoipFeatureCheckController> _featureChecker;
    id<RTVUserProfileManagerInterface> _profileManager;
    RTVFeedShareModel *_shareModel;
    RTVInteractionFeedContext *_context;
    RxMultipleDelegate<RTVFeedSessionObsever> *_observers;
    long long _shareState;
    id<RTVFeedRequestSyncCommandControllerInterface> _commandRequester;
    NSDictionary *_commandSenderMapper;
    double _speakVolume;
    RxDeferred *_firstFrameDefer;
    long long _rtmChannelValidCount;
    long long _channelMonitorCount;
    long long _seiValidCount;
    long long _seiSendMonitorCount;
    NSTimer *_seiMonitorTimer;
    double _beginTime;
    long long _lastFinishReason;
    unsigned long long _textChatEnablementSource;
    NSDate *_contentFirstOnScreenTimestamp;
    NSDate *_textChatEnableTimestamp;
    unsigned long long _numberOfMessagesSentBeforeReady;
}

@property (readonly, weak, nonatomic) id<RTVFeedManagerInterface> feedManager;
@property (readonly, weak, nonatomic) id<RTVXREngine> xrEngine;
@property (weak, nonatomic) id<RTVFakeStreamingPusherController> darkStreamingPusher;
@property (readonly, weak, nonatomic) id<RTVFeedMonitorInterface> monitor;
@property (readonly, nonatomic) id<RTVInteractionConfigureManagerInterface> interactionConfigManager;
@property (readonly, weak, nonatomic) id<RTVFeedConfigureManagerInterface> feedConfigureManager;
@property (readonly, weak, nonatomic) id<RTVFeedVolumeSettingController> volumeController;
@property (readonly, weak, nonatomic) id<RTVChatController> chatController;
@property (readonly, weak, nonatomic) id<RTVXRCaptureController> captureController;
@property (readonly, weak, nonatomic) id<RTVXRRoomMessageSender> engineMessageSender;
@property (readonly, weak, nonatomic) id<RTVSessionSettingManager> sessionSettingManager;
@property (readonly, nonatomic) id<RTVSettingsManager> settingManager;
@property (readonly, nonatomic) id<RTVXRSettingsInterface> fuseSettings;
@property (readonly, weak, nonatomic) id<RTVXRRoomClockController> roomClockController;
@property (readonly, weak, nonatomic) id<RTVVoipFeatureCheckController> featureChecker;
@property (readonly, nonatomic) id<RTVUserProfileManagerInterface> profileManager;
@property (retain) RTVFeedShareModel *shareModel;
@property (retain, nonatomic) RTVInteractionFeedContext *context;
@property (retain, nonatomic) RxMultipleDelegate<RTVFeedSessionObsever> *observers;
@property (nonatomic) long long shareState;
@property (readonly, weak, nonatomic) id<RTVFeedRequestSyncCommandControllerInterface> commandRequester;
@property (readonly, copy, nonatomic) NSDictionary *commandSenderMapper;
@property (nonatomic) double feedVideoVolume;
@property (nonatomic) double speakVolume;
@property (retain, nonatomic) RxDeferred *firstFrameDefer;
@property (nonatomic) BOOL getFirstFrame;
@property (nonatomic) BOOL seiChannelValid;
@property (nonatomic) BOOL rtmChannelValid;
@property (nonatomic) long long rtmChannelValidCount;
@property (nonatomic) long long channelMonitorCount;
@property (nonatomic) long long seiValidCount;
@property (nonatomic) long long seiSendMonitorCount;
@property (retain, nonatomic) NSTimer *seiMonitorTimer;
@property (nonatomic) double beginTime;
@property (nonatomic) BOOL isPaused;
@property (nonatomic) long long lastFinishReason;
@property (nonatomic) unsigned long long textChatEnablementSource;
@property (retain, nonatomic) NSDate *contentFirstOnScreenTimestamp;
@property (retain, nonatomic) NSDate *textChatEnableTimestamp;
@property (nonatomic) unsigned long long numberOfMessagesSentBeforeReady;
@property (nonatomic) BOOL tryToFeedShareProcessing;
@property (weak, nonatomic) id<RTVFeedSessionContentDelegate> contentDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *textChatConversationID;

- (long long)enterFrom;
- (void)rtv_awakeFromControllerInjector;
- (long long)roomType;
- (id)monitorInfo;
- (void)renderBusinessHandler:(id)arg0 context:(id)arg1;
- (id)contentDelegate;
- (void)setContentDelegate:(id)arg0;
- (BOOL)isRoomOwner;
- (id)interactionConfigManager;
- (BOOL)disableHostSliding;
- (BOOL)disableGuestSliding;
- (BOOL)useCastingPanelV2;
- (id)textChatConversationID;
- (id)roomSettings;
- (BOOL)isShareTerminal;
- (id)sharingFromUserID;
- (long long)feedSource;
- (BOOL)enableTextChat;
- (void)sendCMDMessage:(id)arg0 bySEI:(BOOL)arg1;
- (void)setVideoPlayVolume:(double)arg0;
- (void)setVoipVoiceVolume:(double)arg0;
- (double)validVideoPlayVolume;
- (double)validVoipVoiceVolume;
- (BOOL)isCameraOff;
- (void)handleFeedShareTerminal;
- (BOOL)isSupportRichAweme;
- (void)renderWithModel:(id)arg0 context:(id)arg1;
- (float)normalizedFeedVolume;
- (id)stopFeedShareWithReason:(long long)arg0;
- (id)commandRequester;
- (BOOL)enableGuestControl;
- (void)endFirstFrameWithResult:(id)arg0;
- (id)roomClockController;
- (void)rtvSession:(id)arg0 stateMachineDidChangeTo:(long long)arg1 fromState:(long long)arg2;
- (void)rtvSession:(id)arg0 participatorsDidChange:(id)arg1 oldParticipators:(id)arg2;
- (void)voipSession:(id)arg0 didDistributeRoomWithResult:(id)arg1;
- (void)roomController:(id)arg0 didUpdateTextChatInfo:(id)arg1 withBusinessModel:(id)arg2;
- (void)enableAudioVolumeReport:(BOOL)arg0;
- (id)xrEngine;
- (id)featureChecker;
- (void)messageSender:(id)arg0 didReceiveMessageIncludeMultipleChannel:(id)arg1;
- (id)feedConfigureManager;
- (void)setNumberOfMessagesSentBeforeReady:(unsigned long long)arg0;
- (unsigned long long)numberOfMessagesSentBeforeReady;
- (long long)lastFinishReason;
- (void)setLastFinishReason:(long long)arg0;
- (void)__renderChatControllerWithTextChatInfo:(id)arg0;
- (void)notifyFeedShareDidFinish;
- (double)audioMixPushInterval;
- (void)startFirstFrameIfNeeded;
- (void)markFeedShareContentDidAppear;
- (long long)roomParticipatorCount;
- (id)engineMessageSender;
- (void)handleReceiveFeedCommand:(id)arg0;
- (BOOL)mergeWithModel:(id)arg0 strategy:(long long)arg1;
- (void)checkRoomSettingsConsistenceWithShareMode:(id)arg0;
- (BOOL)getFirstFrame;
- (void)__stopSEIMonitor;
- (void)__configFeedCommandSender;
- (id)sessionSettingManager;
- (void)__startSEIMonitor;
- (void)__configureVoipVoiceVolume;
- (void)__configureFeedVideoVolumeGain;
- (void)__configChatController;
- (void)__startFeedRequestCheckIfNeeded;
- (void)__handleShareRoomSettingsInitiated;
- (void)__finishFeedShareWithReason:(long long)arg0;
- (id)firstFrameDefer;
- (void)__reportTextChatEnablementIfNeeded;
- (id)contentFirstOnScreenTimestamp;
- (void)setContentFirstOnScreenTimestamp:(id)arg0;
- (void)setFirstFrameDefer:(id)arg0;
- (void)setGetFirstFrame:(BOOL)arg0;
- (double)feedVideoVolume;
- (id)fuseSettings;
- (BOOL)__needEnableTextChat;
- (void)setTextChatEnablementSource:(unsigned long long)arg0;
- (void)setTextChatEnableTimestamp:(id)arg0;
- (unsigned long long)textChatEnablementSource;
- (BOOL)tryToFeedShareProcessing;
- (void)setTryToFeedShareProcessing:(BOOL)arg0;
- (id)commandSenderMapper;
- (void)setSeiChannelValid:(BOOL)arg0;
- (void)setRtmChannelValid:(BOOL)arg0;
- (void)__monitorCmdSend:(id)arg0;
- (void)setFeedVideoVolume:(double)arg0;
- (void)setSpeakVolume:(double)arg0;
- (double)speakVolume;
- (void)__refreshVolumeGainWhenOntheCall;
- (void)__handleFeedShareOwnerLeave;
- (void)setSeiValidCount:(long long)arg0;
- (void)setChannelMonitorCount:(long long)arg0;
- (void)setRtmChannelValidCount:(long long)arg0;
- (BOOL)seiChannelValid;
- (long long)seiValidCount;
- (BOOL)rtmChannelValid;
- (long long)rtmChannelValidCount;
- (long long)channelMonitorCount;
- (void)setSeiMonitorTimer:(id)arg0;
- (id)seiMonitorTimer;
- (long long)seiSendMonitorCount;
- (id)darkStreamingPusher;
- (void)setSeiSendMonitorCount:(long long)arg0;
- (BOOL)__isNeedFakePushFakeStream;
- (void)__monitorToggleFakeStream:(BOOL)arg0;
- (void)setDarkStreamingPusher:(id)arg0;
- (id)textChatEnableTimestamp;
- (void).cxx_destruct;
- (id)monitor;
- (void)setContext:(id)arg0;
- (id)volumeController;
- (id)observers;
- (void)setBeginTime:(double)arg0;
- (void)setObservers:(id)arg0;
- (id)captureController;
- (id)version;
- (id)context;
- (BOOL)isPaused;
- (void)addObserver:(id)arg0;
- (id)feedManager;
- (void)dealloc;
- (double)beginTime;
- (void)removeObserver:(id)arg0;
- (void)setIsPaused:(BOOL)arg0;
- (id)firstItem;
- (BOOL)isSharing;
- (id)chatController;
- (long long)shareState;
- (id)settingManager;
- (id)trackInfo;
- (id)initialAction;
- (id)profileManager;
- (void)setShareState:(long long)arg0;
- (id)shareModel;
- (void)setShareModel:(id)arg0;

@end
