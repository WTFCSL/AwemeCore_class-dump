//
//     Generated by private class-dump
//

@class NSTimer, NSString, IESLiveIMRoomMessageCache, NSHashTable, IESLiveMessageProcesser, NSMutableDictionary, IESLiveIMReplayManager, NSSet, NSObject, IESLiveIMBizDispatchConfig;
@protocol IESLiveIMMessageReciever, IESLiveDataSyncService, IESLiveIMMessageFilter, OS_dispatch_queue;

@interface IESLiveIMMessageNormalDispatcher : NSObject <IESLiveMessageProcessOutput, IESLiveIMMessageReciever, IESLiveIMMessageDispatchProvider, IESLiveIMPreprocesserProvider> {
    BOOL useHeartBeatSEI;
    BOOL enableMessageReplay;
    BOOL _messageDispatchStarted;
    BOOL _needCache;
    long long ntpDiffTime;
    id<IESLiveIMMessageReciever> _nextReceiver;
    id<IESLiveIMMessageFilter> _nextFilter;
    IESLiveIMBizDispatchConfig *_dispatchConfig;
    id<IESLiveDataSyncService> _wrdsManager;
    NSTimer *_timer;
    IESLiveMessageProcesser *_preprocessor;
    double _dispatchInterval;
    long long _dispatchCount;
    NSString *_processQueueLabel;
    NSObject<OS_dispatch_queue> *_messageProcessQueue;
    IESLiveIMRoomMessageCache *_messageCache;
    NSHashTable *_subscribersForAll;
    NSMutableDictionary *_subscriberDic;
    double _seiTime;
    double _seiReceiveTime;
    IESLiveIMReplayManager *_replayManager;
    NSSet *_needReplaySubscribersSet;
    NSSet *_needReplayMessagesSet;
}

@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) BOOL messageDispatchStarted;
@property (retain, nonatomic) IESLiveMessageProcesser *preprocessor;
@property (nonatomic) BOOL needCache;
@property (nonatomic) double dispatchInterval;
@property (nonatomic) long long dispatchCount;
@property (copy, nonatomic) NSString *processQueueLabel;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *messageProcessQueue;
@property (retain, nonatomic) IESLiveIMRoomMessageCache *messageCache;
@property (retain, nonatomic) NSHashTable *subscribersForAll;
@property (retain, nonatomic) NSMutableDictionary *subscriberDic;
@property (nonatomic) double seiTime;
@property (nonatomic) double seiReceiveTime;
@property (retain, nonatomic) IESLiveIMReplayManager *replayManager;
@property (retain, nonatomic) NSSet *needReplaySubscribersSet;
@property (retain, nonatomic) NSSet *needReplayMessagesSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<IESLiveIMMessageReciever> nextReceiver;
@property (retain, nonatomic) IESLiveIMBizDispatchConfig *dispatchConfig;
@property (weak, nonatomic) id<IESLiveDataSyncService> wrdsManager;
@property (nonatomic) BOOL enableMessageReplay;
@property (retain, nonatomic) id<IESLiveIMMessageFilter> nextFilter;
@property (nonatomic) long long ntpDiffTime;
@property (nonatomic) BOOL useHeartBeatSEI;

- (long long)ntpDiffTime;
- (void)setNtpDiffTime:(long long)arg0;
- (BOOL)needCache;
- (void)setNeedCache:(BOOL)arg0;
- (long long)dispatchCount;
- (void)setDispatchCount:(long long)arg0;
- (void)addSubscriber:(id)arg0 forWRDSMessage:(Class)arg1 firstCallbackWithSubkey:(id)arg2;
- (void)asyncQueryWRDSMessage:(Class)arg0 withSubkey:(id)arg1 completion:(id /* block */)arg2;
- (id)subscribersForAll;
- (void)setSubscribersForAll:(id)arg0;
- (void)addSubscriber:(id)arg0 forMessages:(id)arg1;
- (void)addSubscriber:(id)arg0 forWRDSMessages:(id)arg1;
- (void)setDispatchInterval:(double)arg0;
- (void)setWrdsManager:(id)arg0;
- (id)wrdsManager;
- (void)setNextReceiver:(id)arg0;
- (void)setMessageProcessQueue:(id)arg0;
- (id)messageProcessQueue;
- (id)messageCache;
- (id)subscriberDic;
- (void)setSubscriberDic:(id)arg0;
- (void)setMessageCache:(id)arg0;
- (void)didRecieveMessages:(id)arg0;
- (void)didRecievePacket:(id)arg0;
- (id)nextReceiver;
- (BOOL)doFilter:(id)arg0;
- (id)nextFilter;
- (void)setNextFilter:(id)arg0;
- (void)seiPlayerTS:(id)arg0;
- (void)seiHeartBeatTS:(id)arg0;
- (BOOL)useHeartBeatSEI;
- (void)setUseHeartBeatSEI:(BOOL)arg0;
- (void)startDispatch;
- (void)stopDispatch;
- (void)startReplay;
- (void)stopReplay;
- (void)addSubscriber:(id)arg0 forMessages:(id)arg1 needReplay:(BOOL)arg2;
- (id)dispatchConfig;
- (void)setDispatchConfig:(id)arg0;
- (BOOL)enableMessageReplay;
- (void)setEnableMessageReplay:(BOOL)arg0;
- (void)dispatchMessage:(id)arg0 needFilter:(BOOL)arg1;
- (void)addMessageProcesser:(id)arg0;
- (id)getMessages:(long long)arg0 withCount:(long long)arg1;
- (void)logWith:(id)arg0 params:(id)arg1;
- (double)dispatchInterval;
- (id)needReplayMessagesSet;
- (void)setNeedReplayMessagesSet:(id)arg0;
- (BOOL)messageDispatchStarted;
- (void)setMessageDispatchStarted:(BOOL)arg0;
- (id)replayManager;
- (void)runOnMessageProcessSerialQueue:(id /* block */)arg0;
- (void)messagesReplay;
- (id)processQueueLabel;
- (void)realDispatchMessage:(id)arg0;
- (long long)decideMessageCacheType:(id)arg0;
- (double)decideDelayMessageDispatchTime:(id)arg0;
- (void)doTimerLoopAction;
- (void)putMessagesToReplayBuffer:(id)arg0;
- (double)seiTime;
- (double)seiReceiveTime;
- (void)realDispatchReplayMessage:(id)arg0;
- (BOOL)messageNeedReplay:(id)arg0;
- (BOOL)filterBeforeDispatchMessage:(id)arg0;
- (void)enumerate:(id)arg0 sendMessage:(id)arg1;
- (void)messageDidDispatch:(id)arg0;
- (void)setSeiTime:(double)arg0;
- (void)setSeiReceiveTime:(double)arg0;
- (void)processer:(id)arg0 message:(id)arg1;
- (void)setProcessQueueLabel:(id)arg0;
- (void)setReplayManager:(id)arg0;
- (id)needReplaySubscribersSet;
- (void)setNeedReplaySubscribersSet:(id)arg0;
- (id)timer;
- (id)init;
- (void)processMessage:(id)arg0;
- (void).cxx_destruct;
- (void)stopTimer;
- (void)setup;
- (void)setTimer:(id)arg0;
- (void)addSubscriber:(id)arg0;
- (void)removeSubscriber:(id)arg0;
- (id)preprocessor;
- (void)setPreprocessor:(id)arg0;
- (void)startTimerWithInterval:(double)arg0;

@end
