//
//     Generated by private class-dump
//

@class NSData, NSString, NSRecursiveLock, NSError, NSSet, NSURLCredential, NSOutputStream, NSURLResponse, NSURLRequest, NSInputStream, NSDictionary, NSURLConnection;

@interface APURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSCoding, NSCopying> {
    BOOL _cancelled;
    BOOL _allowsInvalidSSLCertificate;
    BOOL _shouldUseCredentialStorage;
    short _state;
    int _SSLPinningMode;
    NSURLConnection *_connection;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    long long _totalBytesRead;
    NSOutputStream *_outputStream;
    NSURLCredential *_credential;
    NSDictionary *_userInfo;
    unsigned long long _backgroundTaskIdentifier;
    id /* block */ _uploadProgress;
    id /* block */ _downloadProgress;
    id /* block */ _authenticationChallenge;
    id /* block */ _cacheResponse;
    id /* block */ _redirectResponse;
    NSRecursiveLock *_lock;
}

@property (nonatomic) short state;
@property (nonatomic, getter=isCancelled) BOOL cancelled;
@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSURLConnection *connection;
@property (retain, nonatomic) NSURLRequest *request;
@property (retain, nonatomic) NSURLResponse *response;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSData *responseData;
@property (copy, nonatomic) NSString *responseString;
@property (nonatomic) unsigned long long responseStringEncoding;
@property (nonatomic) long long totalBytesRead;
@property (nonatomic) unsigned long long backgroundTaskIdentifier;
@property (copy, nonatomic) id /* block */ uploadProgress;
@property (copy, nonatomic) id /* block */ downloadProgress;
@property (copy, nonatomic) id /* block */ authenticationChallenge;
@property (copy, nonatomic) id /* block */ cacheResponse;
@property (copy, nonatomic) id /* block */ redirectResponse;
@property (retain, nonatomic) NSSet *runLoopModes;
@property (nonatomic) BOOL allowsInvalidSSLCertificate;
@property (nonatomic) BOOL shouldUseCredentialStorage;
@property (retain, nonatomic) NSURLCredential *credential;
@property (nonatomic) int SSLPinningMode;
@property (retain, nonatomic) NSInputStream *inputStream;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (retain, nonatomic) NSDictionary *userInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)pinnedPublicKeys;
+ (id)pinnedCertificates;
+ (void)networkRequestThreadEntryPoint:(id)arg0;
+ (id)networkRequestThread;

- (void)setShouldUseCredentialStorage:(BOOL)arg0;
- (unsigned long long)responseStringEncoding;
- (void)setResponseStringEncoding:(unsigned long long)arg0;
- (BOOL)shouldUseCredentialStorage;
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(id /* block */)arg0;
- (void)setSSLPinningMode:(int)arg0;
- (int)SSLPinningMode;
- (BOOL)allowsInvalidSSLCertificate;
- (void)setAllowsInvalidSSLCertificate:(BOOL)arg0;
- (id /* block */)downloadProgress;
- (BOOL)isFinished;
- (void)setResponseData:(id)arg0;
- (void)setCancelled:(BOOL)arg0;
- (void)connection:(id)arg0 didFailWithError:(id)arg1;
- (id)initWithRequest:(id)arg0;
- (BOOL)isConcurrent;
- (id)responseData;
- (void)resume;
- (void).cxx_destruct;
- (BOOL)isExecuting;
- (short)state;
- (void)setResponse:(id)arg0;
- (void)connectionDidFinishLoading:(id)arg0;
- (void)finish;
- (void)setConnection:(id)arg0;
- (id)credential;
- (void)setState:(short)arg0;
- (void)setInputStream:(id)arg0;
- (void)connection:(id)arg0 willSendRequestForAuthenticationChallenge:(id)arg1;
- (BOOL)isReady;
- (void)setUserInfo:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)connection:(id)arg0 didSendBodyData:(long long)arg1 totalBytesWritten:(long long)arg2 totalBytesExpectedToWrite:(long long)arg3;
- (void)setRequest:(id)arg0;
- (void)setCompletionBlock:(id /* block */)arg0;
- (id)response;
- (void)connection:(id)arg0 didReceiveResponse:(id)arg1;
- (void)setOutputStream:(id)arg0;
- (id)request;
- (void)setDownloadProgress:(id /* block */)arg0;
- (void)connection:(id)arg0 didReceiveData:(id)arg1;
- (id)outputStream;
- (id)lock;
- (id)initWithCoder:(id)arg0;
- (id)userInfo;
- (void)cancel;
- (id)connection;
- (BOOL)isPaused;
- (void)setError:(id)arg0;
- (id)description;
- (id)inputStream;
- (void)setUploadProgressBlock:(id /* block */)arg0;
- (void)encodeWithCoder:(id)arg0;
- (void)start;
- (void)dealloc;
- (BOOL)isCancelled;
- (void)pause;
- (void)setLock:(id)arg0;
- (id)error;
- (void)setRunLoopModes:(id)arg0;
- (id)runLoopModes;
- (void)setTotalBytesRead:(long long)arg0;
- (id /* block */)authenticationChallenge;
- (id)connection:(id)arg0 willSendRequest:(id)arg1 redirectResponse:(id)arg2;
- (id)connection:(id)arg0 willCacheResponse:(id)arg1;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg0;
- (id)connection:(id)arg0 needNewBodyStream:(id)arg1;
- (unsigned long long)backgroundTaskIdentifier;
- (void)setCredential:(id)arg0;
- (id /* block */)cacheResponse;
- (void)setCacheResponse:(id /* block */)arg0;
- (void)setBackgroundTaskIdentifier:(unsigned long long)arg0;
- (void)cancelConnection;
- (void)setDownloadProgressBlock:(id /* block */)arg0;
- (id /* block */)uploadProgress;
- (id /* block */)redirectResponse;
- (void)setRedirectResponse:(id /* block */)arg0;
- (id)responseString;
- (long long)totalBytesRead;
- (void)operationDidStart;
- (void)setCacheResponseBlock:(id /* block */)arg0;
- (void)setRedirectResponseBlock:(id /* block */)arg0;
- (void)setResponseString:(id)arg0;
- (void)setUploadProgress:(id /* block */)arg0;
- (void)setAuthenticationChallenge:(id /* block */)arg0;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(id /* block */)arg0;

@end
