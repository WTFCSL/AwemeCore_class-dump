//
//     Generated by private class-dump
//

@class NSDictionary, IESLiveSchemeRedirectInfo, NSMutableDictionary;

@interface IESLiveSchemeRedirectResolver : NSObject {
    NSDictionary *_settingConfig;
    NSDictionary *_geckoConfig;
    IESLiveSchemeRedirectInfo *_redirectInfo;
    NSMutableDictionary *_extraEnvInfo;
}

@property (copy, nonatomic) NSDictionary *settingConfig;
@property (copy, nonatomic) NSDictionary *geckoConfig;
@property (retain, nonatomic) IESLiveSchemeRedirectInfo *redirectInfo;
@property (retain, nonatomic) NSMutableDictionary *extraEnvInfo;

+ (void)resolveTargetSchemeWith:(id)arg0 settingConfig:(id)arg1 geckoConfig:(id)arg2 completion:(id /* block */)arg3;

- (void)setSettingConfig:(id)arg0;
- (id)settingConfig;
- (id)geckoConfig;
- (id)initWithSettingConfig:(id)arg0 geckoConfig:(id)arg1 redirectSchemeExtraParams:(id)arg2;
- (id)extraEnvInfo;
- (void)getResolvedSchemeWith:(id /* block */)arg0;
- (void)resolveRedirecrSchemeExtraParams:(id)arg0;
- (void)setRedirectInfo:(id)arg0;
- (id)redirectInfo;
- (id)_getResolvedScheme:(id *)arg0 ruleType:(long long *)arg1 schemeSource:(id *)arg2;
- (id)getResolvedSchemeWithConfig:(id)arg0 error:(id *)arg1 ruleType:(long long *)arg2;
- (id)customError:(unsigned long long)arg0 userInfo:(id)arg1;
- (void)injectExtraEnvInfo:(id)arg0 forKey:(id)arg1;
- (id)resolveItem:(id)arg0 error:(id *)arg1 ruleType:(long long *)arg2;
- (BOOL)checkVersionRegex:(id)arg0;
- (BOOL)isRuleMatchedForVersion:(id)arg0 error:(id *)arg1;
- (BOOL)isRuleMatchedForTime:(id)arg0 error:(id *)arg1;
- (BOOL)isRuleMatchedForBlockKeys:(id)arg0 error:(id *)arg1;
- (BOOL)isRuleMatched:(id)arg0 ruleType:(long long)arg1 error:(id *)arg2;
- (void)setExtraEnvInfo:(id)arg0;
- (void)setGeckoConfig:(id)arg0;
- (void).cxx_destruct;

@end
