//
//     Generated by private class-dump
//

@class NSArray, NSMutableDictionary, NSHashTable, NSString, NSMutableArray, NSMutableSet;

@interface HMDDiskUsage : NSObject {
    BOOL _checkSparseFile;
    BOOL _isProcessExit;
    NSMutableDictionary *_outDatedfilesDictionary;
    NSMutableArray *_allFileList;
    NSMutableArray *_abnormalFolders;
    NSArray *_ignoredRelativePathes;
    long long _folderSpace;
    long long _abnormalFolderSize;
    long long _abnormalFolderFileNumber;
    double _outdatedDays;
    double _sparseFileLeastDifferPercentage;
    unsigned long long _sparseFileLeastDifferSize;
    NSHashTable *_visitors;
    NSString *_currenFolderPath;
    unsigned long long _minCollectSize;
    NSMutableSet *_hardLinkSet;
    id /* block */ _switchBlock;
}

@property (retain, nonatomic) NSMutableDictionary *outDatedfilesDictionary;
@property (retain, nonatomic) NSMutableArray *allFileList;
@property (retain, nonatomic) NSMutableArray *abnormalFolders;
@property (copy, nonatomic) NSArray *ignoredRelativePathes;
@property (nonatomic) long long folderSpace;
@property (nonatomic) long long abnormalFolderSize;
@property (nonatomic) long long abnormalFolderFileNumber;
@property (nonatomic) double outdatedDays;
@property (nonatomic) double sparseFileLeastDifferPercentage;
@property (nonatomic) unsigned long long sparseFileLeastDifferSize;
@property (nonatomic) BOOL checkSparseFile;
@property (retain, nonatomic) NSHashTable *visitors;
@property (copy, nonatomic) NSString *currenFolderPath;
@property BOOL isProcessExit;
@property (nonatomic) unsigned long long minCollectSize;
@property (retain, nonatomic) NSMutableSet *hardLinkSet;
@property (copy, nonatomic) id /* block */ switchBlock;

+ (unsigned long long)folderSizeAtPath:(id)arg0;
+ (double)getTotalDiskSpace;
+ (id)fetchTopSizeFilesAtPath:(id)arg0 topRank:(unsigned long long)arg1;
+ (double)getFreeDiskSpaceWithWaitTime:(double)arg0;
+ (unsigned long long)getFreeDiskSpaceByStatf;
+ (double)getRecentCachedFreeDiskSpace;
+ (unsigned long long)folderSizeAtPath:(id)arg0 switchBlock:(id /* block */)arg1;
+ (int)getTotalDiskSizeLevel;
+ (long long)getFreeDisk300MBlockSizeWithWaitTime:(double)arg0;
+ (long long)getFreeDisk300MBlockSize;
+ (long long)getFreeDisk300MBlockSizeByStatf;
+ (long long)getRecentCachedFreeDisk300MBlockSize;
+ (long long)getDisk300MBBlocksFrom:(long long)arg0;
+ (void)setFreeDiskSpaceCacheTimeInterval:(double)arg0;
+ (unsigned long long)folderSizeAtPath:(id)arg0 visitor:(id)arg1;
+ (unsigned long long)folderSizeAtPath:(id)arg0 visitor:(id)arg1 switchBlock:(id /* block */)arg2;
+ (double)getFreeDiskSpace;

- (void)purifyAndStoreTheIgnorePathes:(id)arg0;
- (void)currentProcessExit;
- (id)translateRelativePathToAbsolute:(id)arg0;
- (id)currenFolderPath;
- (long long)recursiveCalculateAtPath:(const char *)arg0 isAbnormal:(BOOL *)arg1 isOutdated:(BOOL *)arg2 needCheckIgnorePath:(BOOL)arg3 depthLevel:(unsigned long long)arg4;
- (id)initWithOutdatedDays:(double)arg0 abnormalFolderSize:(long long)arg1 abnormalFolderFileNumber:(long long)arg2 ignoreRelativePathes:(id)arg3 checkSparseFile:(BOOL)arg4 sparseFileLeastDifferPercentage:(double)arg5 sparseFileLeastDifferSize:(unsigned long long)arg6 targetFolderPath:(id)arg7 minCollectSize:(unsigned long long)arg8 visitors:(id)arg9 switchBlock:(id /* block */)arg10;
- (id)initWithOutdatedDays:(double)arg0 abnormalFolderSize:(long long)arg1 abnormalFolderFileNumber:(long long)arg2 ignoreRelativePathes:(id)arg3 checkSparseFile:(BOOL)arg4 sparseFileLeastDifferPercentage:(double)arg5 sparseFileLeastDifferSize:(unsigned long long)arg6 targetFolderPath:(id)arg7 minCollectSize:(unsigned long long)arg8 visitors:(id)arg9;
- (id)initWithOutdatedDays:(double)arg0 abnormalFolderSize:(long long)arg1 abnormalFolderFileNumber:(long long)arg2 ignoreRelativePathes:(id)arg3 checkSparseFile:(BOOL)arg4 sparseFileLeastDifferPercentage:(double)arg5 sparseFileLeastDifferSize:(unsigned long long)arg6 visitors:(id)arg7;
- (id)initWithOutdatedDays:(double)arg0 abnormalFolderSize:(long long)arg1 abnormalFolderFileNumber:(long long)arg2 ignoreRelativePathes:(id)arg3 checkSparseFile:(BOOL)arg4 sparseFileLeastDifferPercentage:(double)arg5 sparseFileLeastDifferSize:(unsigned long long)arg6;
- (id)initWithFolderPath:(id)arg0 switchBlock:(id /* block */)arg1;
- (BOOL)isProcessExit;
- (void)setIsProcessExit:(BOOL)arg0;
- (long long)folderSpace;
- (id)getAPPHomeDirectory;
- (unsigned long long)folderSizeAtPath:(id)arg0 isAbnormal:(BOOL *)arg1 isOutdated:(BOOL *)arg2;
- (id)getCurrentFileListForTopRank:(unsigned long long)arg0;
- (long long)recursiveCalculateAtPath:(const char *)arg0 isAbnormal:(BOOL *)arg1 isOutdated:(BOOL *)arg2 needCheckIgnorePath:(BOOL)arg3;
- (id /* block */)switchBlock;
- (id)ignoredRelativePathes;
- (id)hardLinkSet;
- (BOOL)checkSparseFile;
- (unsigned long long)sparseFileLeastDifferSize;
- (double)sparseFileLeastDifferPercentage;
- (void)calculateTopFiles:(id)arg0 fileSize:(long long)arg1;
- (id)calculateOutDateFilesAtPath:(const char *)arg0 fileSize:(long long)arg1 isOutdated:(BOOL *)arg2 fileCount:(long long)arg3;
- (id)visitors;
- (void)calculateExceptionFilesAtFolderPath:(const char *)arg0 folderSize:(long long)arg1 isAbnormal:(BOOL *)arg2 fileCount:(unsigned long long *)arg3;
- (id)outDatedfilesDictionary;
- (id)getFileAccessLastDateAtPath:(id)arg0;
- (long long)abnormalFolderSize;
- (long long)abnormalFolderFileNumber;
- (id)translateAbsolutePathToRelative:(id)arg0;
- (id)abnormalFolders;
- (unsigned long long)minCollectSize;
- (id)allFileList;
- (void)setCurrenFolderPath:(id)arg0;
- (void)setFolderSpace:(long long)arg0;
- (id)getFileListsAtPath:(id)arg0 forTopRank:(unsigned long long)arg1;
- (double)outdatedDays;
- (void)setIgnoredRelativePathes:(id)arg0;
- (id)getAPPBundlePath;
- (id)initWithOutdatedDays:(double)arg0 abnormalFolderSize:(long long)arg1 abnormalFolderFileNumber:(long long)arg2 ignoreRelativePathes:(id)arg3 checkSparseFile:(BOOL)arg4 sparseFileLeastDifferPercentage:(double)arg5 sparseFileLeastDifferSize:(unsigned long long)arg6 minCollectSize:(unsigned long long)arg7 visitors:(id)arg8;
- (BOOL)isAbnormalReturnValue;
- (double)getThisAppSpace;
- (long long)getCurrenFolderSpace;
- (id)getExceptionFolders;
- (id)getExceptionFoldersWithTopRank:(long long)arg0;
- (id)getAppFileListForTopRank:(unsigned long long)arg0;
- (id)getOutDateFiles;
- (id)getOutDateFilesWithTopRank:(long long)arg0;
- (void)setOutDatedfilesDictionary:(id)arg0;
- (void)setAllFileList:(id)arg0;
- (void)setAbnormalFolders:(id)arg0;
- (void)setAbnormalFolderSize:(long long)arg0;
- (void)setAbnormalFolderFileNumber:(long long)arg0;
- (void)setOutdatedDays:(double)arg0;
- (void)setSparseFileLeastDifferPercentage:(double)arg0;
- (void)setSparseFileLeastDifferSize:(unsigned long long)arg0;
- (void)setCheckSparseFile:(BOOL)arg0;
- (void)setVisitors:(id)arg0;
- (void)setMinCollectSize:(unsigned long long)arg0;
- (void)setHardLinkSet:(id)arg0;
- (void)setSwitchBlock:(id /* block */)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (unsigned long long)fileSizeAtPath:(id)arg0;
- (id)initWithFolderPath:(id)arg0;

@end
