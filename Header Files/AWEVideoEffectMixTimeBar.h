//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, AWEVideoEffectScalableRangeView, AWEVideoPlayControl, AWETimeSelectControl, UIView, IESMMEffectTimeRange;
@protocol AWEVideoEffectMixTimeBarDelegate;

@interface AWEVideoEffectMixTimeBar : UIView <AWEVideoEffectScalableRangeViewDelegate> {
    BOOL _needReverseTime;
    BOOL _isShowingToolEffectRangeView;
    BOOL _isShowingTimeEffectRangeView;
    AWEVideoPlayControl *_playProgressControl;
    AWETimeSelectControl *_timeSelectControl;
    UIView *_timeReverseMask;
    IESMMEffectTimeRange *_currentEffectTimeRange;
    id<AWEVideoEffectMixTimeBarDelegate> _delegate;
    NSMutableDictionary *_fragmentsContainers;
    NSMutableDictionary *_effectRangeViewMap;
    AWEVideoPlayControl *_willMovingView;
    AWEVideoPlayControl *_movingView;
    AWEVideoEffectScalableRangeView *_toolEffectRangeView;
    NSMutableDictionary *_timeFragmentsContainers;
    NSMutableDictionary *_timeEffectRangeViewMap;
    AWEVideoEffectScalableRangeView *_timeEffectRangeView;
    struct CGPoint { double x; double y; } _touchBeganPoint;
    struct CGPoint { double x; double y; } _originalPoint;
}

@property (retain, nonatomic) NSMutableDictionary *fragmentsContainers;
@property (retain, nonatomic) NSMutableDictionary *effectRangeViewMap;
@property (retain, nonatomic) AWEVideoPlayControl *willMovingView;
@property (retain, nonatomic) AWEVideoPlayControl *movingView;
@property (nonatomic) struct CGPoint { double x; double y; } touchBeganPoint;
@property (nonatomic) struct CGPoint { double x; double y; } originalPoint;
@property (retain, nonatomic) AWEVideoEffectScalableRangeView *toolEffectRangeView;
@property (nonatomic) BOOL isShowingToolEffectRangeView;
@property (retain, nonatomic) NSMutableDictionary *timeFragmentsContainers;
@property (retain, nonatomic) NSMutableDictionary *timeEffectRangeViewMap;
@property (retain, nonatomic) AWEVideoEffectScalableRangeView *timeEffectRangeView;
@property (nonatomic) BOOL isShowingTimeEffectRangeView;
@property (retain, nonatomic) AWEVideoPlayControl *playProgressControl;
@property (retain, nonatomic) AWETimeSelectControl *timeSelectControl;
@property (retain, nonatomic) UIView *timeReverseMask;
@property (retain, nonatomic) IESMMEffectTimeRange *currentEffectTimeRange;
@property (nonatomic) BOOL needReverseTime;
@property (weak, nonatomic) id<AWEVideoEffectMixTimeBarDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)timeBarHeight;

- (id)movingView;
- (void)setMovingView:(id)arg0;
- (void)setTouchBeganPoint:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })touchBeganPoint;
- (void)updatePlayProgressWithTime:(double)arg0 totalDuration:(double)arg1;
- (id)playProgressControl;
- (void)refreshBarWithEffectArray:(id)arg0 totalDuration:(double)arg1;
- (void)updateShowingToolEffectRangeViewIfNeededWithCategoryKey:(id)arg0 effectSelected:(BOOL)arg1;
- (double)getPlayControlViewProgress;
- (void)refreshBarWithImageArray:(id)arg0;
- (void)updateShowingTimeEffectRangeViewIfNeededWithType:(long long)arg0;
- (id)timeSelectControl;
- (id)timeReverseMask;
- (void)refreshTimeEffectRangeViewWithRange:(id)arg0 totalDuration:(double)arg1;
- (void)setUpTimeEffectRangeViewAlpha:(double)arg0;
- (void)setNeedReverseTime:(BOOL)arg0;
- (void)setUpPlayProgressControlTintColor:(BOOL)arg0;
- (void)animateElements;
- (void)setCurrentEffectTimeRange:(id)arg0;
- (id)currentEffectTimeRange;
- (id)fragmentsContainers;
- (void)setIsShowingToolEffectRangeView:(BOOL)arg0;
- (void)p_updateToolEffectRangeView:(id)arg0;
- (id)timeFragmentsContainers;
- (void)setIsShowingTimeEffectRangeView:(BOOL)arg0;
- (void)p_updateTimeEffectRangeView:(id)arg0;
- (id)timeEffectRangeView;
- (id)timeEffectRangeViewMap;
- (BOOL)isShowingTimeEffectRangeView;
- (void)setTimeEffectRangeView:(id)arg0;
- (BOOL)isShowingToolEffectRangeView;
- (void)setToolEffectRangeView:(id)arg0;
- (id)effectRangeViewMap;
- (void)refreshEffectRangeViewWithRange:(id)arg0 totalDuration:(double)arg1;
- (double)getLocationWithTime:(double)arg0 totalDuration:(double)arg1;
- (void)updateView:(id)arg0 toLocation:(double)arg1;
- (double)getMovingViewProgress;
- (void)sendControlDidMoveAction;
- (void)setWillMovingView:(id)arg0;
- (struct CGPoint { double x0; double x1; })originalPoint;
- (id)willMovingView;
- (id)toolEffectRangeView;
- (void)setOriginalPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)updateMovingControlWithTouches:(id)arg0;
- (void)userDidMoveControl;
- (void)p_adjustPlayProgressControl:(BOOL)arg0;
- (void)p_sendControlDidMoveAction:(id)arg0 progress:(double)arg1;
- (double)rangeViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 couldChangeFrameWithType:(long long)arg1;
- (void)rangeView:(id)arg0 willChangeFrameWithType:(long long)arg1;
- (void)rangeView:(id)arg0 didChangeFrameWithType:(long long)arg1;
- (void)rangeView:(id)arg0 didFinishChangeFrameWithType:(long long)arg1;
- (void)updateSelectTime:(double)arg0 totalDuration:(double)arg1;
- (void)p_userDidMoveControl:(id)arg0 progress:(double)arg1;
- (void)setPlayProgressControl:(id)arg0;
- (void)setTimeSelectControl:(id)arg0;
- (void)setTimeReverseMask:(id)arg0;
- (BOOL)needReverseTime;
- (void)setFragmentsContainers:(id)arg0;
- (void)setEffectRangeViewMap:(id)arg0;
- (void)setTimeFragmentsContainers:(id)arg0;
- (void)setTimeEffectRangeViewMap:(id)arg0;
- (void).cxx_destruct;
- (unsigned long long)accessibilityTraits;
- (void)touchesBegan:(id)arg0 withEvent:(id)arg1;
- (void)accessibilityDecrement;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)touchesEnded:(id)arg0 withEvent:(id)arg1;
- (id)delegate;
- (void)touchesMoved:(id)arg0 withEvent:(id)arg1;
- (void)touchesCancelled:(id)arg0 withEvent:(id)arg1;
- (void)accessibilityIncrement;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (BOOL)isAccessibilityElement;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;

@end
