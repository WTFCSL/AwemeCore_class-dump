//
//     Generated by private class-dump
//

@interface DiffMatchPc : NSObject {
    double Diff_Timeout;
    unsigned long long Diff_EditCost;
    double Match_Threshold;
    long long Match_Distance;
    float pc_DeleteThreshold;
    unsigned short pc_Margin;
    unsigned long long Match_MaxBits;
}

@property (nonatomic) double Diff_Timeout;
@property (nonatomic) unsigned long long Diff_EditCost;
@property (nonatomic) double Match_Threshold;
@property (nonatomic) long long Match_Distance;
@property (nonatomic) float pc_DeleteThreshold;
@property (nonatomic) unsigned short pc_Margin;

- (id)pc_fromText:(id)arg0 error:(id *)arg1;
- (id)pc_apply:(id)arg0 toString:(id)arg1;
- (id)diff_mainOfOldString:(id)arg0 andNewString:(id)arg1 checkLines:(BOOL)arg2;
- (id)diff_mainOfOldString:(id)arg0 andNewString:(id)arg1 checkLines:(BOOL)arg2 deadline:(double)arg3;
- (id)diff_computeFromOldString:(id)arg0 andNewString:(id)arg1 checkLines:(BOOL)arg2 deadline:(double)arg3;
- (void)diff_cleanupMerge:(id)arg0;
- (id)diff_lineModeFromOldString:(id)arg0 andNewString:(id)arg1 deadline:(double)arg2;
- (id)diff_bisectOfOldString:(id)arg0 andNewString:(id)arg1 deadline:(double)arg2;
- (id)diff_linesToCharsForFirstString:(id)arg0 andSecondString:(id)arg1;
- (void)diff_chars:(id)arg0 toLines:(id)arg1;
- (void)diff_cleanupSemantic:(id)arg0;
- (id)diff_bisectSplitOfOldString:(id)arg0 andNewString:(id)arg1 x:(unsigned long long)arg2 y:(unsigned long long)arg3 deadline:(double)arg4;
- (void)diff_cleanupSemanticLossless:(id)arg0;
- (unsigned long long)match_bitapOfText:(id)arg0 andPattern:(id)arg1 near:(unsigned long long)arg2;
- (id)match_alphabet:(id)arg0;
- (double)match_bitapScoreForErrorCount:(unsigned long long)arg0 location:(unsigned long long)arg1 near:(unsigned long long)arg2 pattern:(id)arg3;
- (void)diff_cleanupEfficiency:(id)arg0;
- (id)pc_makeFromOldString:(id)arg0 andDiffs:(id)arg1;
- (id)diff_text1:(id)arg0;
- (void)pc_addContextToPc:(id)arg0 sourceText:(id)arg1;
- (id)pc_deepCopy:(id)arg0;
- (id)pc_addPadding:(id)arg0;
- (void)pc_splitMax:(id)arg0;
- (unsigned long long)match_mainForText:(id)arg0 pattern:(id)arg1 near:(unsigned long long)arg2;
- (id)diff_text2:(id)arg0;
- (unsigned long long)diff_levenshtein:(id)arg0;
- (unsigned long long)diff_xIndexIn:(id)arg0 location:(unsigned long long)arg1;
- (unsigned short)pc_Margin;
- (id)diff_mainOfOldString:(id)arg0 andNewString:(id)arg1;
- (unsigned long long)diff_commonPrefixOfFirstString:(id)arg0 andSecondString:(id)arg1;
- (unsigned long long)diff_commonSuffixOfFirstString:(id)arg0 andSecondString:(id)arg1;
- (unsigned long long)diff_commonOverlapOfFirstString:(id)arg0 andSecondString:(id)arg1;
- (id)diff_halfMatchOfFirstString:(id)arg0 andSecondString:(id)arg1;
- (id)diff_halfMatchIOfLongString:(id)arg0 andShortString:(id)arg1 index:(long long)arg2;
- (long long)diff_cleanupSemanticScoreOfFirstString:(id)arg0 andSecondString:(id)arg1;
- (id)diff_prettyHtml:(id)arg0;
- (id)diff_toDelta:(id)arg0;
- (id)diff_fromDeltaWithText:(id)arg0 andDelta:(id)arg1 error:(id *)arg2;
- (id)pc_makeFromOldString:(id)arg0 andNewString:(id)arg1;
- (id)pc_makeFromDiffs:(id)arg0;
- (id)pc_makeFromOldString:(id)arg0 newString:(id)arg1 diffs:(id)arg2;
- (id)pc_toText:(id)arg0;
- (double)Diff_Timeout;
- (void)setDiff_Timeout:(double)arg0;
- (unsigned long long)Diff_EditCost;
- (void)setDiff_EditCost:(unsigned long long)arg0;
- (double)Match_Threshold;
- (void)setMatch_Threshold:(double)arg0;
- (long long)Match_Distance;
- (void)setMatch_Distance:(long long)arg0;
- (float)pc_DeleteThreshold;
- (void)setPc_DeleteThreshold:(float)arg0;
- (void)setPc_Margin:(unsigned short)arg0;
- (id)init;
- (void)dealloc;

@end
