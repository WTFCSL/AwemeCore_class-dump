//
//     Generated by private class-dump
//

@class NSArray, NSString, NSDictionary, AWEAwemeModel, UIView, NSNumber, AWEVideoBSModel;
@protocol AWEPlayInteractionViewControllerNewProtocol, AWEPlayVideoDelegate, AWEPlayVideoViewControllerStatusDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEPlayInteractionBizControllerProtocol, AWEAwemePlayInteractionPlayDelegate, IESVideoPlayerDelegate, AWEPlayVideoViewControllerContainerProtocol, IESVideoPlayerProtocol, ALMVideoPlayerAudioWrapperProtocol, AWEPlayVideoViewControllerDelegate, AWEAwemePlayInteractionPanelDelegate;

@protocol AWEPlayVideoViewControllerProtocol <AWEAwemePlayVideoProtocol, AWEAwemePlayVideoTrackProtocol, AWEAwemeDisplayViewController, IESVideoPlayerDelegate, AWEAwemePlayVideoControllerProtocol, AFDPlayVideoViewControllerExtension>

+ (long long)contentModeForVideo:(id)arg0;
+ (long long)contentModeForVideo:(id)arg0;

@property (nonatomic, weak) id<AWEPlayVideoViewControllerDelegate> delegate;
@property (nonatomic) double speedModeStartNewTimestamp;
@property (nonatomic, weak) id<AWEPlayVideoDelegate> playerDelegate;
@property (nonatomic, readonly) UIView *loadingView;
@property (nonatomic, retain) NSNumber *clickEnter;
@property (nonatomic, retain) NSNumber *slideType;
@property (nonatomic, retain) NSNumber *detailSlide;
@property (nonatomic) BOOL hasReportClickEnter;
@property (nonatomic, copy) NSString *originEntryEnterMethod;
@property (nonatomic, copy) NSString *pageType;
@property (nonatomic, copy) NSString *enterFrom;
@property (nonatomic, copy) NSDictionary *context;
@property (nonatomic, copy) NSString *ruleId;
@property (nonatomic, copy) NSDictionary *logExtraDict;
@property (nonatomic, copy) NSDictionary *adExtraData;
@property (nonatomic, retain) AWEAwemeModel *model;
@property (nonatomic) long long playType;
@property (nonatomic) BOOL isScrolledAutomatically;
@property (nonatomic, copy) NSString *cityInfoString;
@property (nonatomic, copy) NSString *adEventName;
@property (nonatomic, retain) id<IESVideoPlayerProtocol> playerController;
@property (nonatomic) long long playState;
@property (nonatomic, copy) id /* block */ playerFinishedPlayingBlock;
@property (nonatomic) struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *audioWrapper;
@property (nonatomic) struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *videoWrapper;
@property (nonatomic, retain) id<ALMVideoPlayerAudioWrapperProtocol> audioWrapperV2;
@property (nonatomic, weak) id<AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionPlayDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEPlayInteractionBizControllerProtocol> interactionDelegate;
@property (nonatomic, weak) id<AWEPlayInteractionViewControllerNewProtocol> interactionNewDelegate;
@property (nonatomic, weak) id<IESVideoPlayerDelegate> videoPlayerDelegate;
@property (nonatomic, weak) id<AWEPlayVideoViewControllerStatusDelegate> statusDelegate;
@property (nonatomic, weak) id<AWEPlayVideoViewControllerContainerProtocol> container;
@property (nonatomic, readonly) id /* block */ playVideo;
@property (nonatomic) double defaultSeekToTime;
@property (nonatomic, copy) NSString *reactId;
@property (nonatomic) double landScapeStartTimestamp;
@property (nonatomic) BOOL isAppear;
@property (nonatomic) BOOL hasShownDisconnectToast;
@property (nonatomic, retain) AWEVideoBSModel *bsModel;
@property (nonatomic) BOOL isFullScreen;
@property (nonatomic) BOOL useNormalCover;
@property (nonatomic) BOOL disableCoverPlaceholder;
@property (nonatomic) BOOL disableTrackerService;
@property (nonatomic) long long coverContentMode;
@property (nonatomic) BOOL hasInlandscape;
@property (nonatomic, readonly) NSArray *playURLs;
@property (nonatomic) BOOL needsRespondingToVideoResourceRecall;
@property (nonatomic) BOOL needToPauseLive;
@property (nonatomic, retain) NSNumber *usingLogExtraDictEnterMethod;
@property (nonatomic, copy) id /* block */ willLoopPlaying;
@property (nonatomic, copy) id /* block */ playbackStateDidChange;

- (id)reactId;
- (void)setReactId:(id)arg0;
- (id)cityInfoString;
- (void)setCityInfoString:(id)arg0;
- (id)originEntryEnterMethod;
- (void)setOriginEntryEnterMethod:(id)arg0;
- (void)setEnterFrom:(id)arg0;
- (void)setAdExtraData:(id)arg0;
- (void)setLogExtraDict:(id)arg0;
- (id)logExtraDict;
- (id)enterFrom;
- (id)adEventName;
- (void)setAdEventName:(id)arg0;
- (void)updatePlayerIfNeeded;
- (void)setPlayerSeekTime:(double)arg0 completion:(id /* block */)arg1;
- (void)setPlayerDelegate:(id)arg0;
- (id)detailSlide;
- (void)setDetailSlide:(id)arg0;
- (id)playerDelegate;
- (id)videoPlayerDelegate;
- (void)setVideoPlayerDelegate:(id)arg0;
- (double)defaultSeekToTime;
- (void)setDefaultSeekToTime:(double)arg0;
- (long long)coverContentMode;
- (void)setCoverContentMode:(long long)arg0;
- (BOOL)useNormalCover;
- (void)setUseNormalCover:(BOOL)arg0;
- (BOOL)isScrolledAutomatically;
- (void)setIsScrolledAutomatically:(BOOL)arg0;
- (void)updatePlayerController:(id)arg0 withPlayVideoVC:(id)arg1;
- (BOOL)isAutoPlaying;
- (id)interactionNewDelegate;
- (void)setInteractionNewDelegate:(id)arg0;
- (id)clickEnter;
- (void)setClickEnter:(id)arg0;
- (id)slideType;
- (void)setSlideType:(id)arg0;
- (BOOL)hasReportClickEnter;
- (void)setHasReportClickEnter:(BOOL)arg0;
- (id)adExtraData;
- (struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *)audioWrapper;
- (void)setAudioWrapper:(struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *)arg0;
- (struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *)videoWrapper;
- (void)setVideoWrapper:(struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *)arg0;
- (id)usingLogExtraDictEnterMethod;
- (void)setUsingLogExtraDictEnterMethod:(id)arg0;
- (id)internalLogExtraDict;
- (id)getPlayModeWithAutoPlayMode;
- (long long)currCacheSize;
- (void)updateCoverImage;
- (double)speedModeStartNewTimestamp;
- (void)setSpeedModeStartNewTimestamp:(double)arg0;
- (long long)playType;
- (void)setPlayType:(long long)arg0;
- (id /* block */)playerFinishedPlayingBlock;
- (void)setPlayerFinishedPlayingBlock:(id /* block */)arg0;
- (id)audioWrapperV2;
- (void)setAudioWrapperV2:(id)arg0;
- (double)landScapeStartTimestamp;
- (void)setLandScapeStartTimestamp:(double)arg0;
- (BOOL)isAppear;
- (void)setIsAppear:(BOOL)arg0;
- (BOOL)hasShownDisconnectToast;
- (void)setHasShownDisconnectToast:(BOOL)arg0;
- (id)bsModel;
- (void)setBsModel:(id)arg0;
- (BOOL)disableCoverPlaceholder;
- (void)setDisableCoverPlaceholder:(BOOL)arg0;
- (BOOL)disableTrackerService;
- (void)setDisableTrackerService:(BOOL)arg0;
- (BOOL)hasInlandscape;
- (void)setHasInlandscape:(BOOL)arg0;
- (id)playURLs;
- (BOOL)needsRespondingToVideoResourceRecall;
- (void)setNeedsRespondingToVideoResourceRecall:(BOOL)arg0;
- (BOOL)needToPauseLive;
- (void)setNeedToPauseLive:(BOOL)arg0;
- (id /* block */)willLoopPlaying;
- (void)setWillLoopPlaying:(id /* block */)arg0;
- (void)trackVideoPauseEvent;
- (BOOL)videoShouldPlay;
- (BOOL)alertIfNotValid;
- (void)trackVideoPlaySubTasksWithAttributes:(id)arg0;
- (void)trackVideoPlaySubTasksWithAttributes:(id)arg0;
- (id)getRepostItemFromSubclass;
- (id)getRepostFromAwemeForTrack;
- (id)getPlayExtraFromSubclass;
- (long long)contentModeForDefaultVideoCover;
- (long long)scaleModeForVideo;
- (id)currentCoverImage;
- (id)getVideoLength;
- (id)playerTypeString;
- (id)localVideoURL;
- (void)triggerComponentActionAfter:(double)arg0 block:(id /* block */)arg1;
- (void)triggerComponentActionAfter:(double)arg0 block:(id /* block */)arg1;
- (void)anchorTriggerComponentActionBlock:(id /* block */)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })realMediaFrame;
- (void)trackPlayTimeIfNeeded;
- (void)trackVideoPlayFinishEvent;
- (void)trackAlbumPlayFinishEvent;
- (void)trackVideoPlayEvent;
- (void)onAppllicationWillTerminate;
- (id)_getParamsForBSPredict;
- (void)setShouldShowCoverWhenSeekToTime:(BOOL)arg0;
- (void)setNormalClockType:(long long)arg0;
- (void)_tracePlaybackSpeedInfo;
- (void)preloadPlayerWithModel:(id)arg0;
- (void)preloadPlayerWithModel:(id)arg0;
- (id)getBitrateGearNameSet;
- (void)videoSafetyCheckIfNeeded;
- (void)hideAllScreenAdaptationViewIfNeeded;
- (void)showAllScreenAdaptationViewIfNeeded;
- (void)resetSingleImageAlbumFinishFlag;
- (id)pageType;
- (id)container;
- (void)setModel:(id)arg0;
- (double)currentPlaybackTime;
- (id /* block */)playbackStateDidChange;
- (BOOL)isFullScreen;
- (void)setContext:(id)arg0;
- (id)model;
- (id)playerController;
- (void)setContainer:(id)arg0;
- (void)setInteractionDelegate:(id)arg0;
- (BOOL)stop;
- (id)interactionDelegate;
- (void)setPlayerController:(id)arg0;
- (id)delegate;
- (id)context;
- (BOOL)isActive;
- (id)statusDelegate;
- (void)setPageType:(id)arg0;
- (void)setStatusDelegate:(id)arg0;
- (void)setDelegate:(id)arg0;
- (BOOL)play;
- (BOOL)pause;
- (void)reset;
- (void)setPlaybackStateDidChange:(id /* block */)arg0;
- (void)setIsFullScreen:(BOOL)arg0;
- (id)loadingView;
- (long long)playState;
- (void)setPlayState:(long long)arg0;
- (long long)videoSize;
- (void)willDisplay;
- (id /* block */)playVideo;
- (void)setRuleId:(id)arg0;
- (id)ruleId;

@optional

- (void)updatePlayerIfNeededFromInnerPlayer;

@end
