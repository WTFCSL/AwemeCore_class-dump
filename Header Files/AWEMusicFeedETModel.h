//
//     Generated by private class-dump
//

@class NSString, NSDictionary;

@interface AWEMusicFeedETModel : MTLModel <NSCopying> {
    BOOL _isPlaylistScene;
    BOOL _hasLyrics;
    BOOL _isVideo;
    NSString *_authorId;
    NSString *_musicId;
    NSString *_songGroupId;
    NSString *_playlistID;
    NSString *_mediaType;
    NSString *_metaSongId;
    NSDictionary *_trackParams;
    double _playedDuration;
    NSString *_queueName;
    NSString *_queueType;
    NSString *_sceneName;
    NSString *_sourceType;
    NSString *_videoId;
    NSString *_requestId;
    NSString *_groupId;
    NSString *_groupType;
    NSString *_fromGroupId;
    NSString *_fromGroupType;
    NSString *_artistId;
}

@property (nonatomic) BOOL isPlaylistScene;
@property (copy, nonatomic) NSString *authorId;
@property (copy, nonatomic) NSString *musicId;
@property (copy, nonatomic) NSString *songGroupId;
@property (copy, nonatomic) NSString *playlistID;
@property (nonatomic) BOOL hasLyrics;
@property (nonatomic) BOOL isVideo;
@property (copy, nonatomic) NSString *mediaType;
@property (copy, nonatomic) NSString *metaSongId;
@property (retain, nonatomic) NSDictionary *trackParams;
@property (nonatomic) double playedDuration;
@property (copy, nonatomic) NSString *queueName;
@property (copy, nonatomic) NSString *queueType;
@property (copy, nonatomic) NSString *sceneName;
@property (copy, nonatomic) NSString *sourceType;
@property (copy, nonatomic) NSString *videoId;
@property (copy, nonatomic) NSString *requestId;
@property (copy, nonatomic) NSString *groupId;
@property (copy, nonatomic) NSString *groupType;
@property (copy, nonatomic) NSString *fromGroupId;
@property (copy, nonatomic) NSString *fromGroupType;
@property (copy, nonatomic) NSString *artistId;

+ (id)encodingBehaviorsByPropertyKey;

- (void)setFromGroupId:(id)arg0;
- (void)setMusicId:(id)arg0;
- (id)trackParams;
- (id)musicId;
- (void)setMetaSongId:(id)arg0;
- (void)setArtistId:(id)arg0;
- (void)setPlaylistID:(id)arg0;
- (void)setTrackParams:(id)arg0;
- (id)fromGroupId;
- (id)queueName;
- (void)setQueueName:(id)arg0;
- (double)playedDuration;
- (void)setPlayedDuration:(double)arg0;
- (id)metaSongId;
- (void)setFromGroupType:(id)arg0;
- (id)songGroupId;
- (BOOL)isPlaylistScene;
- (void)setIsPlaylistScene:(BOOL)arg0;
- (id)fromGroupType;
- (id)artistId;
- (void)setSongGroupId:(id)arg0;
- (void)setSourceType:(id)arg0;
- (id)sourceType;
- (BOOL)hasLyrics;
- (void)setMediaType:(id)arg0;
- (void)setVideoId:(id)arg0;
- (void).cxx_destruct;
- (void)setGroupId:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)mediaType;
- (id)groupType;
- (id)groupId;
- (id)videoId;
- (void)setGroupType:(id)arg0;
- (id)sceneName;
- (id)requestId;
- (BOOL)isVideo;
- (void)setIsVideo:(BOOL)arg0;
- (void)setHasLyrics:(BOOL)arg0;
- (void)setRequestId:(id)arg0;
- (id)playlistID;
- (id)queueType;
- (void)setSceneName:(id)arg0;
- (void)setQueueType:(id)arg0;
- (id)authorId;
- (void)setAuthorId:(id)arg0;

@end
