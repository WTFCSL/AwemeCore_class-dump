//
//     Generated by private class-dump
//

@class UIView, NSString, ACCTCECropResource, UIImageView, UIButton, CAShapeLayer, ACCTCEPlayerSliderProgressView, UIVisualEffectView, ACCTCECropMediaContainerView;
@protocol ACCTCECropPreviewDelegate;

@interface ACCTCECropPreview : UIView <UIScrollViewDelegate, UIGestureRecognizerDelegate, ACCTCEPlayerSliderProgressViewListener> {
    id<ACCTCECropPreviewDelegate> _delegate;
    ACCTCECropMediaContainerView *_mediaContainerView;
    UIImageView *_coverImageView;
    ACCTCECropResource *_cropResource;
    long long _position;
    CAShapeLayer *_maskLayer;
    CAShapeLayer *_panMaskLayer;
    UIVisualEffectView *_effectView;
    CAShapeLayer *_effectLayer;
    UIView *_contentView;
    UIView *_cropView;
    UIImageView *_leftUpArrow;
    UIImageView *_leftDownArrow;
    UIImageView *_rightUpArrow;
    UIImageView *_rightDownArrow;
    UIView *_cropFrameLine;
    UIView *_leftVerticalLine;
    UIView *_rightVerticalLine;
    UIView *_topHorizontalLine;
    UIView *_bottomHorizontalLine;
    UIView *_currentView;
    long long _currentEditType;
    UIButton *_flipButton;
    UIButton *_rotateButton;
    double _maximumZoomScale;
    ACCTCEPlayerSliderProgressView *_progressView;
    struct CGPoint { double x; double y; } _diagonalPoint;
    struct CGPoint { double x; double y; } _prePoint;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _maxCropRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pinchBeforeRect;
}

@property (retain, nonatomic) ACCTCECropResource *cropResource;
@property (nonatomic) long long position;
@property (nonatomic) struct CGPoint { double x; double y; } diagonalPoint;
@property (retain, nonatomic) ACCTCECropMediaContainerView *mediaContainerView;
@property (retain, nonatomic) CAShapeLayer *maskLayer;
@property (retain, nonatomic) CAShapeLayer *panMaskLayer;
@property (retain, nonatomic) UIVisualEffectView *effectView;
@property (retain, nonatomic) CAShapeLayer *effectLayer;
@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) UIView *cropView;
@property (retain, nonatomic) UIImageView *leftUpArrow;
@property (retain, nonatomic) UIImageView *leftDownArrow;
@property (retain, nonatomic) UIImageView *rightUpArrow;
@property (retain, nonatomic) UIImageView *rightDownArrow;
@property (retain, nonatomic) UIView *cropFrameLine;
@property (retain, nonatomic) UIView *leftVerticalLine;
@property (retain, nonatomic) UIView *rightVerticalLine;
@property (retain, nonatomic) UIView *topHorizontalLine;
@property (retain, nonatomic) UIView *bottomHorizontalLine;
@property (retain, nonatomic) UIView *currentView;
@property (nonatomic) long long currentEditType;
@property (nonatomic) struct CGPoint { double x; double y; } prePoint;
@property (retain, nonatomic) UIButton *flipButton;
@property (retain, nonatomic) UIButton *rotateButton;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } maxCropRect;
@property (nonatomic) double maximumZoomScale;
@property (retain, nonatomic) ACCTCEPlayerSliderProgressView *progressView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pinchBeforeRect;
@property (weak, nonatomic) id<ACCTCECropPreviewDelegate> delegate;
@property (readonly, nonatomic) UIImageView *coverImageView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)hideProgressView;
- (void)showProgressView;
- (id)coverImageView;
- (id)mediaContainerView;
- (void)setMediaContainerView:(id)arg0;
- (void)pinchGestureHandler:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 cropResource:(id)arg1;
- (void)updatePlayButtonStatusWithIsPlaying:(BOOL)arg0;
- (void)updateWithRatioOption:(id)arg0;
- (void)setProgressViewPlayTime:(double)arg0 animated:(BOOL)arg1;
- (id)calculateCropPointInfo;
- (double)cropRatioValue;
- (id)cropResource;
- (void)updateCropResource:(id)arg0 animated:(BOOL)arg1;
- (void)resetCropResource:(id)arg0;
- (void)updateMediaContainerViewWithCropResoure:(id)arg0;
- (void)setCropResource:(id)arg0;
- (void)setMaxCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setPrePoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)updateCropPointInfo:(id)arg0;
- (void)updateWithRotationAngle:(double)arg0 hasFlipped:(BOOL)arg1 onlyMediaContainerView:(BOOL)arg2;
- (void)zoomCropViewAnimated:(BOOL)arg0 onlyMediaContainerView:(BOOL)arg1;
- (void)updateWithNeedProgressView:(BOOL)arg0 delegate:(id)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maxCropRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })resourceShowRect:(id)arg0 maxRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)updateCropView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)flipButtonDidClick;
- (void)rotateButtonDidClick;
- (void)setLeftUpArrow:(id)arg0;
- (id)leftUpArrow;
- (void)setLeftDownArrow:(id)arg0;
- (id)leftDownArrow;
- (void)setRightUpArrow:(id)arg0;
- (id)rightUpArrow;
- (void)setRightDownArrow:(id)arg0;
- (id)rightDownArrow;
- (void)setCropFrameLine:(id)arg0;
- (id)cropFrameLine;
- (void)setLeftVerticalLine:(id)arg0;
- (id)leftVerticalLine;
- (void)setRightVerticalLine:(id)arg0;
- (id)rightVerticalLine;
- (void)setTopHorizontalLine:(id)arg0;
- (id)topHorizontalLine;
- (void)setBottomHorizontalLine:(id)arg0;
- (id)bottomHorizontalLine;
- (void)updateEffectLayerWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1;
- (id)effectLayer;
- (void)updateViewRectWithUpperLeftPoint:(struct CGPoint { double x0; double x1; })arg0 lowerRight:(struct CGPoint { double x0; double x1; })arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fixCropRectWithRatio:(double)arg0;
- (BOOL)isOddCountRotationAngle;
- (void)hideCropingUI;
- (id)panMaskLayer;
- (void)showCropingUI;
- (void)imageSpringBack;
- (void)completeCrop;
- (struct CGPoint { double x0; double x1; })prePoint;
- (BOOL)isFreeRatioType;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromLeftTop:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromLeftBottom:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromRightTop:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromRightBottom:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromTopLine:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromLeftLine:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromBottomLine:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panFromRightLine:(struct CGPoint { double x0; double x1; })arg0 isFreeRatioType:(BOOL)arg1;
- (void)updatePanMaskLayerPathWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGPoint { double x0; double x1; })diagonalPoint;
- (void)setPinchBeforeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pinchBeforeRect;
- (void)updateMaskLayerPathWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setDiagonalPoint:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isInTopLineRect:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isInLeftLineRect:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isInBottomLineRect:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isInRightLineRect:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })fixPointWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 point:(struct CGPoint { double x0; double x1; })arg1;
- (void)dragPlayTimeChanged:(double)arg0;
- (void)dragPlayTimeEnd:(double)arg0;
- (void)resetWithRatio:(id)arg0;
- (BOOL)isPoint:(struct CGPoint { double x0; double x1; })arg0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setPanMaskLayer:(id)arg0;
- (void)setEffectLayer:(id)arg0;
- (long long)currentEditType;
- (void)setCurrentEditType:(long long)arg0;
- (void)setFlipButton:(id)arg0;
- (id)flipButton;
- (void)setMaximumZoomScale:(double)arg0;
- (id)effectView;
- (void).cxx_destruct;
- (long long)position;
- (void)setPosition:(long long)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (id)contentView;
- (id)delegate;
- (void)setEffectView:(id)arg0;
- (id)progressView;
- (void)setProgressView:(id)arg0;
- (double)maximumZoomScale;
- (void)setDelegate:(id)arg0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (void)setContentView:(id)arg0;
- (id)maskLayer;
- (void)panGestureHandler:(id)arg0;
- (void)setupUI;
- (void)updateUI;
- (void)setMaskLayer:(id)arg0;
- (void)resetContext;
- (id)cropView;
- (id)rotateButton;
- (void)setRotateButton:(id)arg0;
- (void)setCropView:(id)arg0;
- (struct CGSize { double x0; double x1; })minimumCropSize;
- (id)currentView;
- (void)setCurrentView:(id)arg0;
- (void)tapGestureHandler:(id)arg0;

@end
