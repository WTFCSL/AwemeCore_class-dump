//
//     Generated by private class-dump
//

@class MPVolumeView, NSMutableDictionary, NSString, NSNumber, NSLock;

@interface AWESystemVolumnManager : NSObject {
    double _volumn;
    BOOL _isSystemVolumnCacheEnable;
    long long _coldLaunchSystemVolumeAdjustStatus;
    MPVolumeView *_volumeView;
    NSMutableDictionary *_volumeChangeDirectHandlers;
    NSMutableDictionary *_volumeChangeConvergentHandlers;
    NSNumber *_volumeBeforeLatestChange;
    NSNumber *_volumeAfterLatestChange;
    NSString *_latestAudioCategory;
    NSString *_latestChangeReason;
    NSNumber *_selfIncreasingID;
    NSLock *_increasingIDLock;
    NSLock *_dictOperationLock;
}

@property (retain, nonatomic) MPVolumeView *volumeView;
@property (retain, nonatomic) NSMutableDictionary *volumeChangeDirectHandlers;
@property (retain, nonatomic) NSMutableDictionary *volumeChangeConvergentHandlers;
@property (retain, nonatomic) NSNumber *volumeBeforeLatestChange;
@property (retain, nonatomic) NSNumber *volumeAfterLatestChange;
@property (copy, nonatomic) NSString *latestAudioCategory;
@property (copy, nonatomic) NSString *latestChangeReason;
@property (retain, nonatomic) NSNumber *selfIncreasingID;
@property (retain, nonatomic) NSLock *increasingIDLock;
@property (retain, nonatomic) NSLock *dictOperationLock;
@property (nonatomic) BOOL isSystemVolumnCacheEnable;
@property (nonatomic) double volumn;
@property (nonatomic) long long coldLaunchSystemVolumeAdjustStatus;

+ (BOOL)enableColdLaunchAdjustSystemVolume;
+ (BOOL)enableColdLaunchAdjustSystemVolumeByUserState;
+ (BOOL)coldLaunchAdjustSystemVolumeUserState;
+ (double)coldLaunchSystemVolumeThreshold;
+ (BOOL)isEarphone;
+ (BOOL)shouldAdjustVolumeWhenColdLaunch;
+ (double)adjustVolumeDelayTime;
+ (double)clearVolumeViewDelayTime;
+ (id)volumeString;
+ (void)updateColdLaunchAdjustSystemVolumeUserState:(BOOL)arg0;
+ (double)coldLaunchSystemVolumeAdjustTarget;
+ (BOOL)enableColdLaunchVolumeBuryPoint;
+ (id)sharedManager;

- (void)removeVolumeHandlerWithIndentifier:(id)arg0;
- (id)registerVolumeChangeHandler:(id /* block */)arg0 convergence:(BOOL)arg1;
- (double)volumn;
- (void)setVolumeView:(id)arg0;
- (id)volumnViewSlider;
- (void)setColdLaunchSystemVolumeAdjustStatus:(long long)arg0;
- (id)p_createVolumeView;
- (void)clearVolumeView;
- (void)delayOrNowStartRemoteEvents;
- (void)delayHoldMPVolumeView;
- (void)onVolumeChangeNotification:(id)arg0;
- (id)systemVolumeDidChangeNotification;
- (void)beginRemoteForSystemVolumeChange;
- (id)p_statusBarWindow;
- (id)selfIncreasingID;
- (id)dictOperationLock;
- (id)volumeChangeConvergentHandlers;
- (id)volumeChangeDirectHandlers;
- (id)increasingIDLock;
- (void)pOnVolumeChangeNotification:(id)arg0;
- (id)volumnNotificationParameter;
- (id)volumeBeforeLatestChange;
- (id)volumeAfterLatestChange;
- (void)setVolumeBeforeLatestChange:(id)arg0;
- (void)setVolumeAfterLatestChange:(id)arg0;
- (id)audioCategoryNotificationParameter;
- (void)setLatestAudioCategory:(id)arg0;
- (id)changeReasonNotificationParameter;
- (void)setLatestChangeReason:(id)arg0;
- (void)onVolumeValueChangedBeforeReduceFrequency;
- (void)onVolumeValueChangedAfterReduceFrequency;
- (id)latestAudioCategory;
- (id)latestChangeReason;
- (void)setVolumn:(double)arg0;
- (void)setVolumnWhenColdLaunch:(double)arg0 completion:(id /* block */)arg1;
- (void)dismissSystemVolumeView:(BOOL)arg0;
- (long long)coldLaunchSystemVolumeAdjustStatus;
- (void)setVolumeChangeDirectHandlers:(id)arg0;
- (void)setVolumeChangeConvergentHandlers:(id)arg0;
- (void)setSelfIncreasingID:(id)arg0;
- (void)setIncreasingIDLock:(id)arg0;
- (void)setDictOperationLock:(id)arg0;
- (BOOL)isSystemVolumnCacheEnable;
- (void)setIsSystemVolumnCacheEnable:(BOOL)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)volumeView;

@end
