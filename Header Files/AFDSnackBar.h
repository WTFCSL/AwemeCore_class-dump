//
//     Generated by private class-dump
//

@class UIViewController, NSString, NSTimer, UIView, NSNumber, UITapGestureRecognizer;
@protocol AFDSnackBarLifeCycleDelegate;

@interface AFDSnackBar : UIView <CAAnimationDelegate> {
    BOOL _dismissWhenTopVCDisappears;
    BOOL _aboveNaviBar;
    BOOL _dismissWhenWillResignActive;
    BOOL _dismissWhenTimeOut;
    BOOL _dismissWhenPointOutside;
    BOOL _isFirstLevelPage;
    BOOL _showing;
    BOOL _enabledTapGes;
    BOOL _hasSetIsFirstLevelPage;
    id<AFDSnackBarLifeCycleDelegate> _delegate;
    id /* block */ _dismissBlock;
    id /* block */ _tapBarBlock;
    double _displayDuration;
    UIViewController *_containerVC;
    NSNumber *_customBottomPadding;
    NSNumber *_customLeftPadding;
    UIView *_bodyView;
    NSTimer *_dismissalTimer;
    UITapGestureRecognizer *_tapGes;
}

@property (retain, nonatomic) UIView *bodyView;
@property (retain, nonatomic) NSTimer *dismissalTimer;
@property (retain, nonatomic) UITapGestureRecognizer *tapGes;
@property (nonatomic) BOOL showing;
@property (nonatomic) BOOL hasSetIsFirstLevelPage;
@property (retain, nonatomic) id<AFDSnackBarLifeCycleDelegate> delegate;
@property (copy, nonatomic) id /* block */ dismissBlock;
@property (copy, nonatomic) id /* block */ tapBarBlock;
@property (nonatomic) double displayDuration;
@property (weak, nonatomic) UIViewController *containerVC;
@property (nonatomic) BOOL dismissWhenTopVCDisappears;
@property (nonatomic) BOOL aboveNaviBar;
@property (nonatomic) BOOL dismissWhenWillResignActive;
@property (nonatomic) BOOL dismissWhenTimeOut;
@property (nonatomic) BOOL dismissWhenPointOutside;
@property (nonatomic) BOOL isFirstLevelPage;
@property (retain, nonatomic) NSNumber *customBottomPadding;
@property (retain, nonatomic) NSNumber *customLeftPadding;
@property (nonatomic) BOOL enabledTapGes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)cleanExistSnackBar;

- (void)setContainerVC:(id)arg0;
- (id)containerVC;
- (BOOL)isFirstLevelPage;
- (void)setDisplayDuration:(double)arg0;
- (double)displayDuration;
- (id)tapGes;
- (void)setTapGes:(id)arg0;
- (void)p_invalidateTimer;
- (void)setIsFirstLevelPage:(BOOL)arg0;
- (void)setDismissWhenPointOutside:(BOOL)arg0;
- (void)showWithBodyView:(id)arg0;
- (void)setDismissWhenTopVCDisappears:(BOOL)arg0;
- (void)setDismissWhenWillResignActive:(BOOL)arg0;
- (void)setDismissWhenTimeOut:(BOOL)arg0;
- (void)setEnabledTapGes:(BOOL)arg0;
- (void)p_handleAppWillResignActiveNotification;
- (BOOL)dismissWhenTopVCDisappears;
- (BOOL)enabledTapGes;
- (BOOL)hasSetIsFirstLevelPage;
- (double)snackBarBottomPadding:(BOOL)arg0;
- (double)snackBarLeftPadding;
- (void)showSnackBarAfterDismissOnView;
- (void)showSnackBarAnimation;
- (void)p_createTimer;
- (BOOL)dismissWhenPointOutside;
- (void)hideSnackBarAnimation:(BOOL)arg0;
- (void)p_reset;
- (BOOL)aboveNaviBar;
- (BOOL)p_optimizeReplaceAnimation;
- (void)replaceSnackBarAnimation;
- (id)p_getAnimationWithKeyPath:(id)arg0 fromValue:(id)arg1 toValue:(id)arg2 duration:(double)arg3 timingFunction:(id)arg4;
- (id)p_getAnimationGroup:(id)arg0 duration:(double)arg1;
- (id /* block */)tapBarBlock;
- (BOOL)dismissWhenWillResignActive;
- (BOOL)dismissWhenTimeOut;
- (void)p_timeoutForDismissal;
- (void)didClickedSnackBar;
- (id)customBottomPadding;
- (void)setHasSetIsFirstLevelPage:(BOOL)arg0;
- (void)showWithContext:(id /* block */)arg0;
- (void)setTapBarBlock:(id /* block */)arg0;
- (void)setAboveNaviBar:(BOOL)arg0;
- (void)setCustomBottomPadding:(id)arg0;
- (void)willMoveToSuperview:(id)arg0;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (void)dismiss;
- (void)dismissAnimated:(BOOL)arg0;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)delegate;
- (void)animationDidStop:(id)arg0 finished:(BOOL)arg1;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (BOOL)showing;
- (void)setShowing:(BOOL)arg0;
- (id)bodyView;
- (void)setBodyView:(id)arg0;
- (id)dismissalTimer;
- (void)setDismissalTimer:(id)arg0;
- (id /* block */)dismissBlock;
- (void)setDismissBlock:(id /* block */)arg0;
- (void)setCustomLeftPadding:(id)arg0;
- (id)customLeftPadding;

@end
