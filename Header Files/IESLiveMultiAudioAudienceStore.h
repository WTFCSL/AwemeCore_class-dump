//
//     Generated by private class-dump
//

@class IESLiveLinkmicMonitor, RACTwoTuple, IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData, IESLiveInteractFeedbackAPI, HTSLiveInteractiveAPI, NSDictionary, HTSLiveUser, IESLiveCombineSubject, IESLiveInteractionLayout, NSString, HTSInteractionStreamAppData, IESLiveInteractComponentLoader, HTSEventContext, IESLiveAudienceInteractPermissionChecker, IESLiveInteractFeedbackViewModel, IESLiveComponentContext, IESLiveInterativeTimeOutManager, NSNumber, NSData, IESLiveInteractMuteStateMachine;
@protocol IESLiveNoticeActions, IESLiveInteractUserModel, IESLiveMonitor, IESLiveRoomService, IESLiveInteractionLinkerService, IESLiveMultiAudioLinkerDelegate, IESLiveAudienceInteractiveRootPanelUserService, IESLiveDynamicActivityProvider, IESLiveInteractionSettingsRouter;

@interface IESLiveMultiAudioAudienceStore : NSObject <HTSLiveMessageSubscriber, HTSLiveAudienceActions, IESLiveAudienceInteractiveAnchorInvitationActions, IESLiveAudienceECommerceActions, IESLiveCommercialComponentsActions, IESLiveInteractiveAdminActions, IESLiveInteractComponentContext, IESLiveInteractionLinkerServiceAction, IESLiveFastMatchObserverAction, IESLiveSocialInteractAction, IESLiveAudienceInteractiveInviteInterestedListPanelDataSource> {
    BOOL _interactiveModeEnabled;
    BOOL _closeBySelf;
    BOOL _selectedFeedback;
    BOOL _isProcessingApply;
    BOOL _connected;
    BOOL _isInteractionRuning;
    BOOL _muteOnJoinChannel;
    BOOL _isTask;
    BOOL _isPaid;
    BOOL _isFromAudienceEnterRoom;
    BOOL _isEnlargeGuest;
    BOOL _showInvitePanel;
    BOOL _isGuestEnlargeBefore;
    BOOL _isFirstFetch;
    BOOL _isJoiningChannel;
    BOOL _isPreparingWaitingOffset;
    BOOL _isUserInProfile;
    BOOL _hasAppliedBefore;
    BOOL _isSelfEnlarge;
    int _kickOutSource;
    int _applyType;
    id<IESLiveDynamicActivityProvider> _activityProvider;
    id<IESLiveAudienceInteractiveRootPanelUserService> _rootPanelUserService;
    IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *_waitingOffsetResponse;
    RACTwoTuple *_attributeWaitingPromptsTuple;
    HTSLiveInteractiveAPI *_interactiveAPI;
    id<IESLiveRoomService> _room;
    IESLiveComponentContext *_componentContext;
    id<IESLiveMultiAudioLinkerDelegate> _delegate;
    long long _mode;
    NSNumber *_selfFanTicket;
    IESLiveInteractMuteStateMachine *_muteStateMachine;
    NSString *_rtcAppId;
    NSData *_rtcAppSign;
    NSString *_myLinkMicStrID;
    NSDictionary *_eventExtra;
    HTSInteractionStreamAppData *_appData;
    NSNumber *_waitingStartTime;
    IESLiveCombineSubject *_showReceivingPanel;
    IESLiveInteractFeedbackViewModel *_feedbackViewModel;
    NSNumber *_fetchTimeStamp;
    NSNumber *_localStart;
    NSString *_clickSource;
    NSDictionary *_rtcExtraInfo;
    double _interactModeStartTime;
    double _connectionStartTime;
    NSString *_channel;
    NSString *_toast;
    long long _linkMicStatus;
    long long _previousLinkMicStatus;
    long long _commerceRelateCount;
    NSString *_linkMicBtnClickSource;
    IESLiveLinkmicMonitor *_linkmicMonitor;
    HTSEventContext *_eventContext;
    NSString *_waitingPrompts;
    NSString *_activetyName;
    NSDictionary *_relevantShortVideoInfo;
    NSNumber *_enlargeGuestUserId;
    NSNumber *_inviteUserID;
    double _enlargeDuration;
    id<IESLiveMonitor> _monitor;
    id<IESLiveNoticeActions> _noticeActionCreator;
    NSNumber *_replyTimestamp;
    IESLiveInterativeTimeOutManager *_timeOutManager;
    NSString *_joinToken;
    double _enlargeStartTime;
    IESLiveAudienceInteractPermissionChecker *_permissionChecker;
    HTSLiveInteractiveAPI *_linkmicAPI;
    IESLiveInteractFeedbackAPI *_feedbackAPI;
    IESLiveInteractComponentLoader *_componentLoader;
    id<IESLiveInteractionLinkerService> _linkerService;
    id<IESLiveInteractionSettingsRouter> _interactionSettings;
}

@property (retain, nonatomic) HTSEventContext *eventContext;
@property (retain, nonatomic) NSNumber *selfFanTicket;
@property (retain, nonatomic) HTSInteractionStreamAppData *appData;
@property (nonatomic) BOOL interactiveModeEnabled;
@property (nonatomic) long long mode;
@property (retain, nonatomic) NSString *myLinkMicStrID;
@property (retain, nonatomic) NSNumber *waitingStartTime;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (retain, nonatomic) id<IESLiveNoticeActions> noticeActionCreator;
@property (nonatomic) BOOL connected;
@property (nonatomic) BOOL isInteractionRuning;
@property (nonatomic) BOOL isFirstFetch;
@property (nonatomic) long long commerceRelateCount;
@property (retain, nonatomic) IESLiveInteractFeedbackViewModel *feedbackViewModel;
@property (nonatomic) BOOL isJoiningChannel;
@property (nonatomic) BOOL isPreparingWaitingOffset;
@property (nonatomic) BOOL isUserInProfile;
@property (nonatomic) BOOL selectedFeedback;
@property (retain, nonatomic) NSNumber *replyTimestamp;
@property (retain, nonatomic) IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *waitingOffsetResponse;
@property (copy, nonatomic) NSString *waitingPrompts;
@property (retain, nonatomic) IESLiveInterativeTimeOutManager *timeOutManager;
@property (nonatomic) BOOL hasAppliedBefore;
@property (copy, nonatomic) NSString *joinToken;
@property (nonatomic) BOOL isPaid;
@property (nonatomic) int applyType;
@property (nonatomic) BOOL isEnlargeGuest;
@property (nonatomic) BOOL isSelfEnlarge;
@property (retain, nonatomic) NSNumber *enlargeGuestUserId;
@property (nonatomic) double enlargeStartTime;
@property (nonatomic) double enlargeDuration;
@property (nonatomic) BOOL isGuestEnlargeBefore;
@property (retain, nonatomic) IESLiveAudienceInteractPermissionChecker *permissionChecker;
@property (retain, nonatomic) HTSLiveInteractiveAPI *linkmicAPI;
@property (retain, nonatomic) IESLiveInteractFeedbackAPI *feedbackAPI;
@property (retain, nonatomic) IESLiveInteractComponentLoader *componentLoader;
@property (weak, nonatomic) id<IESLiveInteractionLinkerService> linkerService;
@property (nonatomic) long long linkMicStatus;
@property (nonatomic) long long previousLinkMicStatus;
@property (weak, nonatomic) id<IESLiveInteractionSettingsRouter> interactionSettings;
@property (retain, nonatomic) HTSLiveInteractiveAPI *interactiveAPI;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (readonly, nonatomic) HTSLiveUser *currentUser;
@property (weak, nonatomic) id<IESLiveMultiAudioLinkerDelegate> delegate;
@property (readonly, nonatomic) id<IESLiveInteractUserModel> activeRoomOwner;
@property (readonly, nonatomic) IESLiveInteractMuteStateMachine *muteStateMachine;
@property (readonly, copy, nonatomic) NSString *rtcAppId;
@property (readonly, copy, nonatomic) NSData *rtcAppSign;
@property (retain, nonatomic) NSDictionary *eventExtra;
@property (readonly, nonatomic) IESLiveCombineSubject *showReceivingPanel;
@property (retain, nonatomic) NSNumber *fetchTimeStamp;
@property (retain, nonatomic) NSNumber *localStart;
@property (nonatomic) BOOL closeBySelf;
@property (nonatomic) int kickOutSource;
@property (copy, nonatomic) NSString *clickSource;
@property (readonly, nonatomic) NSDictionary *rtcExtraInfo;
@property (nonatomic) double interactModeStartTime;
@property (nonatomic) double connectionStartTime;
@property (readonly, nonatomic) BOOL isProcessingApply;
@property (copy, nonatomic) NSString *channel;
@property (copy, nonatomic) NSString *toast;
@property (readonly, copy, nonatomic) NSString *linkMicBtnClickSource;
@property (readonly, nonatomic) IESLiveLinkmicMonitor *linkmicMonitor;
@property (readonly, nonatomic) unsigned long long subscene;
@property (readonly, nonatomic) BOOL muteOnJoinChannel;
@property (nonatomic) BOOL isTask;
@property (retain, nonatomic) NSString *activetyName;
@property (copy, nonatomic) NSDictionary *relevantShortVideoInfo;
@property (nonatomic) BOOL isFromAudienceEnterRoom;
@property (nonatomic) BOOL showInvitePanel;
@property (retain, nonatomic) NSNumber *inviteUserID;
@property (readonly, nonatomic) IESLiveInteractionLayout *currentLayout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) RACTwoTuple *attributeWaitingPromptsTuple;
@property (retain, nonatomic) id<IESLiveAudienceInteractiveRootPanelUserService> rootPanelUserService;
@property (retain, nonatomic) id<IESLiveDynamicActivityProvider> activityProvider;

- (void)showToast:(id)arg0;
- (id)componentContext;
- (void)setComponentContext:(id)arg0;
- (id)fetchTimeStamp;
- (void)setFetchTimeStamp:(id)arg0;
- (id)eventExtra;
- (void)setEventExtra:(id)arg0;
- (void)setEventContext:(id)arg0;
- (id)rtcAppId;
- (void)componentWillAppear;
- (BOOL)enableOptimize;
- (id)componentLoader;
- (void)setComponentLoader:(id)arg0;
- (void)didShowCommercialComponentEntrance;
- (void)didHideCommercialComponentEntrance;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (void)liveWillSuspend;
- (void)didShowShoppingToolBarItem;
- (void)didHideShoppingToolBarItem;
- (BOOL)isEnlargeGuest;
- (id)enlargeGuestUserId;
- (void)trackWithEvent:(id)arg0 extra:(id)arg1;
- (void)stopConnectionWithRequestSource:(id)arg0;
- (id)feedbackViewModel;
- (void)setFeedbackViewModel:(id)arg0;
- (void)setIsFirstFetch:(BOOL)arg0;
- (id)noticeActionCreator;
- (void)setNoticeActionCreator:(id)arg0;
- (void)currentLayoutUIWillUpdateFrom:(id)arg0 to:(id)arg1;
- (void)currentLayoutUIDidUpdateFrom:(id)arg0 to:(id)arg1;
- (id)linkmicMonitor;
- (id)rtcExtraInfo;
- (BOOL)askForLeave;
- (id)permissionChecker;
- (void)setPermissionChecker:(id)arg0;
- (int)kickOutSource;
- (BOOL)showInvitePanel;
- (id)interactiveAPI;
- (void)setInteractiveAPI:(id)arg0;
- (id)inviteUserID;
- (void)setInviteUserID:(id)arg0;
- (void)willAppearLogic;
- (void)inviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2;
- (void)muteOtherRoom:(id)arg0;
- (void)unMuteOtherRoom:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1 completion:(id /* block */)arg2;
- (void)userProfileWillAppear;
- (void)prepareForWaitingOffset;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2 extraParams:(id)arg3;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2 completion:(id /* block */)arg3;
- (void)adminMuteGuest:(id)arg0;
- (void)adminUnMuteGuest:(id)arg0;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 linkType:(id)arg2 requestSource:(id)arg3 completion:(id /* block */)arg4;
- (void)adminPermitUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2;
- (void)adminPermit:(id)arg0 extraInfo:(id)arg1;
- (void)cancelApplication;
- (void)cancelApplicationWithRequestSource:(id)arg0;
- (void)endInteractWaiting;
- (id)relevantShortVideoInfo;
- (BOOL)isInvitingUser:(id)arg0;
- (id)clickSource;
- (void)setClickSource:(id)arg0;
- (id)previousLayout;
- (BOOL)isTask;
- (void)setFeedbackAPI:(id)arg0;
- (id)feedbackAPI;
- (id)rtcAppSign;
- (BOOL)isInteractionRuning;
- (void)reportJoinRTCSucceed;
- (long long)linkMicStatus;
- (void)setLinkMicStatus:(long long)arg0;
- (id)replyTimestamp;
- (void)setReplyTimestamp:(id)arg0;
- (BOOL)muteOnJoinChannel;
- (id)timeOutManager;
- (id)getMuteGusetNicknameByUserID:(id)arg0;
- (void)setTimeOutManager:(id)arg0;
- (void)setInteractiveModeEnabled:(BOOL)arg0;
- (void)setInteractModeStartTime:(double)arg0;
- (BOOL)isProcessingApply;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3;
- (void)onInteractiveKickouted;
- (id)waitingStartTime;
- (void)setWaitingStartTime:(id)arg0;
- (BOOL)isJoiningChannel;
- (void)setIsJoiningChannel:(BOOL)arg0;
- (void)setJoinToken:(id)arg0;
- (BOOL)interactiveModeEnabled;
- (void)setdown;
- (BOOL)noAdminRight;
- (id)joinToken;
- (long long)determineFinalLinkTypeWithOrigin:(long long)arg0;
- (double)interactModeStartTime;
- (id)linkmicAPI;
- (void)setLinkmicAPI:(id)arg0;
- (void)onInteractiveModeStopped;
- (unsigned long long)sceneFromRoomType;
- (id)roleForLog;
- (id)sceneForLog;
- (void)pr_inviteEventWithUserID:(id)arg0 sourcePage:(id)arg1;
- (id)rootPanelUserService;
- (void)setRootPanelUserService:(id)arg0;
- (id)localStart;
- (void)setLocalStart:(id)arg0;
- (long long)commerceRelateCount;
- (void)setCommerceRelateCount:(long long)arg0;
- (id)waitingOffsetResponse;
- (void)setWaitingOffsetResponse:(id)arg0;
- (id)attributeWaitingPromptsTuple;
- (void)setAttributeWaitingPromptsTuple:(id)arg0;
- (void)loadInteractiveListInStatus:(int)arg0 withType:(unsigned long long)arg1 requestSource:(id)arg2;
- (void)logWithLinkMicMethod:(id)arg0;
- (void)updateRoomInfo;
- (void)p_fetchPlayModeInfoIfNeeded;
- (void)setMyLinkMicStrID:(id)arg0;
- (id)myLinkMicStrID;
- (id)showReceivingPanel;
- (void)leaveLinkPostAction:(int)arg0 paidCount:(long long)arg1 linkDuration:(long long)arg2;
- (void)setHasAppliedBefore:(BOOL)arg0;
- (BOOL)hasAppliedBefore;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3 trackParams:(id)arg4;
- (id)activeRoomOwner;
- (id)selfFanTicket;
- (void)setSelfFanTicket:(id)arg0;
- (long long)previousLinkMicStatus;
- (void)setPreviousLinkMicStatus:(long long)arg0;
- (id)linkMicBtnClickSource;
- (id)waitingPrompts;
- (void)setWaitingPrompts:(id)arg0;
- (void)interactionLinkerService:(id)arg0 serverUserListDidChangeFrom:(id)arg1 to:(id)arg2;
- (void)interactionLinkerService:(id)arg0 userDidLeaveUserList:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onSelfLinkTypeChanged:(int)arg1;
- (void)interactionLinkerService:(id)arg0 didJoinChannelWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 joinChannelError:(id)arg1;
- (void)interactionLinkerService:(id)arg0 didDisconnectWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 didCancelWaitingWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedInvite:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedReply:(id)arg1 isAgreed:(BOOL)arg2;
- (void)interactionLinkerService:(id)arg0 onReceivedPermit:(id)arg1 isAgreed:(BOOL)arg2;
- (void)interactionLinkerService:(id)arg0 onReceivedKickout:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedSwitchScene:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedEnlargeGuestReply:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedEnlargeGuestInvite:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceiveApplyResume:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onParseLinkerBaseInfo:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceiveRemoveWaitingUser:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedAudienceConFirmUnsilenceMessage:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onAudienceReceiveSEI:(id)arg1;
- (id)activetyName;
- (void)setIsTask:(BOOL)arg0;
- (void)setActivetyName:(id)arg0;
- (void)showPaidGuideViewWithExtra:(id)arg0;
- (void)uploadFeedbackWithCategoryName:(id)arg0 content:(id)arg1;
- (void)setupComponentLoader;
- (void)setShowInvitePanel:(BOOL)arg0;
- (BOOL)isGuestEnlargeBefore;
- (double)enlargeDuration;
- (void)followAnchorFromPopup:(id /* block */)arg0 trackParams:(id)arg1;
- (BOOL)selectedFeedback;
- (void)prefetchFeedbackListModelIfNeeded;
- (BOOL)isFromDistribution;
- (void)setSelectedFeedback:(BOOL)arg0;
- (void)setIsUserInProfile:(BOOL)arg0;
- (BOOL)isPreparingWaitingOffset;
- (void)setIsPreparingWaitingOffset:(BOOL)arg0;
- (BOOL)isUserInProfile;
- (void)setRelevantShortVideoInfo:(id)arg0;
- (unsigned long long)subscene;
- (void)onReceivedEnlargeGuestMessage:(id)arg0;
- (double)enlargeStartTime;
- (void)setEnlargeDuration:(double)arg0;
- (void)setIsGuestEnlargeBefore:(BOOL)arg0;
- (void)setEnlargeStartTime:(double)arg0;
- (id)linkerService;
- (void)setLinkerService:(id)arg0;
- (id)muteStateMachine;
- (void)enlargeGuestReply:(int)arg0 guestID:(id)arg1 actionType:(id)arg2 completion:(id /* block */)arg3;
- (void)setEnlargeGuestUserId:(id)arg0;
- (void)setIsEnlargeGuest:(BOOL)arg0;
- (void)p_trackStartEnlargeForCurrentLoginUserIfNeed;
- (void)p_trackEndEnlargeForCurrentLoginUserIfNeed;
- (void)p_clearEnlargeGuestStatus;
- (BOOL)isSelfEnlarge;
- (void)setIsSelfEnlarge:(BOOL)arg0;
- (void)tr_trackGuestStartEnlarge;
- (void)tr_trackGuestOverEnlarge:(long long)arg0;
- (id)p_currentLargeUserType;
- (BOOL)closeBySelf;
- (id)initWithRoom:(id)arg0 diContext:(id)arg1 eventContext:(id)arg2 componentContext:(id)arg3;
- (void)setIsFromAudienceEnterRoom:(BOOL)arg0;
- (void)onInteractiveModeStart;
- (void)dealWithDisconnectWithCcontext:(id)arg0;
- (void)prepareForAttributedWaitingPrompts;
- (void)applyConnectionWithParams:(id)arg0 finished:(id /* block */)arg1;
- (BOOL)shouldFetchWaitingUserAfterApply;
- (void)adminPermitUserID:(id)arg0 secUserID:(id)arg1 extraInfo:(id)arg2;
- (void)setCloseBySelf:(BOOL)arg0;
- (void)setKickOutSource:(int)arg0;
- (BOOL)isEnlargeGuestPlayMode;
- (void)setIsInteractionRuning:(BOOL)arg0;
- (BOOL)isFromAudienceEnterRoom;
- (void)showPaidGuideViewWithApplyParams:(id)arg0 applySourceNumber:(id)arg1;
- (void)handleAutoJoin:(BOOL)arg0;
- (void)tr_trackGuestConnectionApplyWithParams:(id)arg0 context:(id)arg1;
- (void)cancelApplicationWithRequestSource:(id)arg0 locally:(BOOL)arg1;
- (void)inviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2 params:(id)arg3;
- (void)pr_permitEvent:(id)arg0 extraInfo:(id)arg1;
- (void)p_adminPermit:(id)arg0 secUid:(id)arg1;
- (void)pr_kickOutEventWith:(id)arg0 linkType:(id)arg1;
- (void)p_replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3 trackParams:(id)arg4 completion:(id /* block */)arg5;
- (void)tr_trackEnlargeGuestReply:(id)arg0;
- (void)adminPermitWithLiveUser:(id)arg0;
- (void)followAnchorFromPopup:(id /* block */)arg0;
- (double)connectionStartTime;
- (id)currentLayout;
- (id)channel;
- (BOOL)isPaid;
- (void)setConnected:(BOOL)arg0;
- (void).cxx_destruct;
- (BOOL)connected;
- (id)monitor;
- (void)setChannel:(id)arg0;
- (long long)mode;
- (void)setMonitor:(id)arg0;
- (void)stopConnection;
- (void)setMode:(long long)arg0;
- (void)setup;
- (id)delegate;
- (void)setConnectionStartTime:(double)arg0;
- (id)eventContext;
- (id)currentUser;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)messageReceived:(id)arg0;
- (BOOL)isAdmin;
- (void)setAppData:(id)arg0;
- (id)appData;
- (void)setIsPaid:(BOOL)arg0;
- (void)setToast:(id)arg0;
- (id)toast;
- (id)interactionSettings;
- (BOOL)isFirstFetch;
- (int)applyType;
- (void)setApplyType:(int)arg0;
- (void)setInteractionSettings:(id)arg0;
- (id)activityProvider;
- (void)setActivityProvider:(id)arg0;
- (void)clean;

@end
