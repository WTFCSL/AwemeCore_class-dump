//
//     Generated by private class-dump
//

@class NSString;

@interface IESLiveEZDanmakuMutexSpirit : IESLiveEZDanmakuSpirit <IESLiveEZDanmakuSpiritMutexProtocol> {
    BOOL _activated;
    BOOL _verticalOffsetDown;
    BOOL _reverseDirection;
    double _leaveDuration;
    double _baseSpeed;
    double _verticalOffset;
    long long _relativeIndex;
    double _speedMultiple;
    double _targetAlphaScale;
    double _targetSizeScale;
    double _moveDistance;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _targetRect;
}

@property (nonatomic) BOOL activated;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } targetRect;
@property (nonatomic) double moveDistance;
@property (nonatomic) BOOL reverseDirection;
@property (nonatomic) double speedMultiple;
@property (nonatomic) double targetAlphaScale;
@property (nonatomic) double targetSizeScale;
@property (nonatomic) double leaveDuration;
@property (nonatomic) double baseSpeed;
@property (nonatomic) double verticalOffset;
@property (nonatomic) BOOL verticalOffsetDown;
@property (nonatomic) long long relativeIndex;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)deactive;
- (double)moveDistance;
- (void)setMoveDistance:(double)arg0;
- (void)setTargetSizeScale:(double)arg0;
- (void)setTargetAlphaScale:(double)arg0;
- (long long)relativeIndex;
- (void)setRelativeIndex:(long long)arg0;
- (void)setSpeedMultiple:(double)arg0;
- (void)setReverseDirection:(BOOL)arg0;
- (void)updateWithTime:(double)arg0;
- (double)leaveDuration;
- (void)setLeaveDuration:(double)arg0;
- (double)baseSpeed;
- (void)setBaseSpeed:(double)arg0;
- (BOOL)verticalOffsetDown;
- (void)setVerticalOffsetDown:(BOOL)arg0;
- (void)activeWithContext:(id)arg0;
- (void)confirmOriginWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)speedMultiple;
- (double)targetAlphaScale;
- (double)targetSizeScale;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })targetRect;
- (void)setActivated:(BOOL)arg0;
- (BOOL)activated;
- (void)setTargetRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)verticalOffset;
- (void)setVerticalOffset:(double)arg0;
- (BOOL)reverseDirection;

@end
