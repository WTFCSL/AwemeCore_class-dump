//
//     Generated by private class-dump
//

@class HTSEventContext, NSString, HTSLiveImage, NSAttributedString, NSArray, UIColor, UIImage, HTSLiveShareItemStyle, NSMutableArray, GPBMessage, HTSLiveText;
@protocol IESLiveRoomServiceAdapter, IESLiveAudioPlayAnimDelegate, IESLiveUserServiceAdapter;

@interface HTSLiveMessageListNode : NSObject <IESLiveAudioPlaybackDelegate, IESLiveUpdatableListItem> {
    BOOL _isMyMessage;
    BOOL _isFloatNode;
    BOOL _disableTapHighlight;
    BOOL _isDigged;
    BOOL _filterUserBadge;
    BOOL _isOtherLiveRoom;
    BOOL _intercomHideUserCard;
    NSString *_identifier;
    double _createTime;
    id<IESLiveRoomServiceAdapter> _room;
    GPBMessage *_message;
    long long _id;
    NSAttributedString *_attributedString;
    NSMutableArray *_actions;
    double _preferredMaxLayoutWidth;
    long long _groupIndex;
    NSArray *_associatedObjects;
    NSString *_title;
    NSString *_content;
    HTSLiveText *_displayTextContent;
    NSString *_imagePlaceHolderInDisplayText;
    NSString *_giftCountString;
    UIColor *_titleColor;
    UIColor *_contentColor;
    UIImage *_suffixIcon;
    UIImage *_tagIcon;
    long long _relationBadgeType;
    NSString *_accessibilityBadgeString;
    long long _displayRowCount;
    double _lastDisplayTime;
    long long _listCellStyle;
    Class _cellViewClass;
    UIColor *_backgroundColor;
    UIColor *_longPressBackgroundColor;
    NSString *_backgroundImageURL;
    id /* block */ _tapOtherAction;
    id /* block */ _displayAction;
    double _topMargin;
    double _bottomMargin;
    NSString *_accessibilityString;
    struct CGSize { double width; double height; } _size;
    struct CGSize { double width; double height; } _innerViewSize;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _textContainerInset;
}

@property (nonatomic) BOOL ac_isPlaying;
@property (nonatomic) double ac_fontSize;
@property (nonatomic) struct CGSize { double x0; double x1; } waveViewSize;
@property (copy, nonatomic) NSString *waveFilePath;
@property (nonatomic) BOOL needLayoutReturn;
@property (copy, nonatomic) NSAttributedString *sentenceString;
@property (copy, nonatomic) NSAttributedString *durationString;
@property (weak, nonatomic) id<IESLiveAudioPlayAnimDelegate> animDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (retain, nonatomic) id<IESLiveUserServiceAdapter> userService;
@property (nonatomic) BOOL tr_hasTrackedShow;
@property (nonatomic) BOOL isPinnedNode;
@property (nonatomic) long long style;
@property (nonatomic) double displayTime;
@property (nonatomic) double minPinnedTime;
@property (nonatomic) double pinnedTime;
@property (nonatomic) BOOL foldPinningNode;
@property (nonatomic) BOOL slideUpDismiss;
@property (nonatomic) BOOL removeAfterPinned;
@property (nonatomic) BOOL showRefreshTag;
@property (nonatomic) double pinnedPriority;
@property (nonatomic) double pinnedNodeWillPinTimeStamp;
@property (nonatomic) double pinnedNodeWillDisappearTimeStamp;
@property (retain, nonatomic) NSAttributedString *userNameAttrString;
@property (nonatomic) struct CGSize { double x0; double x1; } contentSize;
@property (retain, nonatomic) NSMutableArray *emojiURLListArray;
@property (nonatomic) BOOL isSingleEmoji;
@property (retain, nonatomic) HTSLiveImage *avartarBorder;
@property (nonatomic) BOOL isMention;
@property (nonatomic) BOOL hasRead;
@property (retain, nonatomic) HTSLiveShareItemStyle *itemStyle;
@property (nonatomic) long long replyID;
@property (retain, nonatomic) HTSLiveText *repliedLiveText;
@property (retain, nonatomic) NSAttributedString *repliedString;
@property (retain, nonatomic) NSString *identifier;
@property (nonatomic) double createTime;
@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> room;
@property (retain, nonatomic) GPBMessage *message;
@property (nonatomic) long long id;
@property (retain, nonatomic) NSAttributedString *attributedString;
@property (retain, nonatomic) NSMutableArray *actions;
@property (nonatomic) double preferredMaxLayoutWidth;
@property (nonatomic) long long groupIndex;
@property (copy, nonatomic) NSArray *associatedObjects;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) NSString *content;
@property (retain, nonatomic) HTSLiveText *displayTextContent;
@property (copy, nonatomic) NSString *imagePlaceHolderInDisplayText;
@property (retain, nonatomic) NSString *giftCountString;
@property (retain, nonatomic) UIColor *titleColor;
@property (retain, nonatomic) UIColor *contentColor;
@property (retain, nonatomic) UIImage *suffixIcon;
@property (retain, nonatomic) UIImage *tagIcon;
@property (nonatomic) struct CGSize { double width; double height; } size;
@property (nonatomic) struct CGSize { double width; double height; } innerViewSize;
@property (nonatomic) BOOL isMyMessage;
@property (nonatomic) long long relationBadgeType;
@property (retain, nonatomic) NSString *accessibilityBadgeString;
@property (nonatomic) long long displayRowCount;
@property (nonatomic) BOOL isFloatNode;
@property (nonatomic) BOOL disableTapHighlight;
@property (nonatomic) double lastDisplayTime;
@property (nonatomic) BOOL isDigged;
@property (nonatomic) BOOL filterUserBadge;
@property (nonatomic) BOOL isOtherLiveRoom;
@property (nonatomic) BOOL intercomHideUserCard;
@property (nonatomic) long long listCellStyle;
@property (retain, nonatomic) Class cellViewClass;
@property (retain, nonatomic) UIColor *backgroundColor;
@property (retain, nonatomic) UIColor *longPressBackgroundColor;
@property (copy, nonatomic) NSString *backgroundImageURL;
@property (copy, nonatomic) id /* block */ tapOtherAction;
@property (copy, nonatomic) id /* block */ displayAction;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } textContainerInset;
@property (nonatomic) double topMargin;
@property (nonatomic) double bottomMargin;
@property (copy, nonatomic) NSString *accessibilityString;
@property (copy, nonatomic) id /* block */ itemUpdateBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)internalRouter;
- (void)setInternalRouter:(id)arg0;
- (void)setReplyID:(long long)arg0;
- (BOOL)enableLongPress;
- (void)setEventContext:(id)arg0;
- (id)tagIcon;
- (void)setTagIcon:(id)arg0;
- (void)setIsDigged:(BOOL)arg0;
- (BOOL)isDigged;
- (id)userService;
- (void)setUserService:(id)arg0;
- (void)setHasRead:(BOOL)arg0;
- (id)itemStyle;
- (void)setItemStyle:(id)arg0;
- (BOOL)isOtherLiveRoom;
- (void)setIsOtherLiveRoom:(BOOL)arg0;
- (BOOL)intercomHideUserCard;
- (void)setIntercomHideUserCard:(BOOL)arg0;
- (long long)executedTapOtherActionWithCell:(id)arg0;
- (BOOL)executedTapTextActionWith:(struct CGPoint { double x0; double x1; })arg0 cell:(id)arg1;
- (id /* block */)tapOtherAction;
- (long long)executedTapActionWithPoint:(struct CGPoint { double x0; double x1; })arg0 cell:(id)arg1;
- (void)showCommentPanelAndAtUser;
- (BOOL)ac_isPlaying;
- (id)animDelegate;
- (double)ac_fontSize;
- (BOOL)needLayoutReturn;
- (id)waveFilePath;
- (struct CGSize { double x0; double x1; })waveViewSize;
- (void)setAc_isPlaying:(BOOL)arg0;
- (void)setAc_fontSize:(double)arg0;
- (void)puaseAudio;
- (void)setNeedLayoutReturn:(BOOL)arg0;
- (void)setWaveFilePath:(id)arg0;
- (void)setWaveViewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setAnimDelegate:(id)arg0;
- (id)delegateIdentifier;
- (void)playbackWillStart:(id)arg0;
- (void)playbackDidStop:(id)arg0;
- (void)playbackWithError:(id)arg0;
- (void)showUserModel:(id)arg0 isAnonymous:(BOOL)arg1 messageID:(long long)arg2;
- (id)userPreviewConfigWithNode:(id)arg0 user:(id)arg1;
- (BOOL)isOfficialMessageForScreenChatMessage;
- (void)showUserModel:(id)arg0;
- (void)showActionSheetAtCell:(id)arg0;
- (BOOL)tr_hasTrackedShow;
- (void)setTr_hasTrackedShow:(BOOL)arg0;
- (void)setLastDisplayTime:(double)arg0;
- (id)displayTextContent;
- (void)setDisplayTextContent:(id)arg0;
- (id)suffixIcon;
- (void)setSuffixIcon:(id)arg0;
- (BOOL)isPinnedNode;
- (void)setIsPinnedNode:(BOOL)arg0;
- (BOOL)showRefreshTag;
- (void)setShowRefreshTag:(BOOL)arg0;
- (double)minPinnedTime;
- (void)setMinPinnedTime:(double)arg0;
- (BOOL)removeAfterPinned;
- (void)setRemoveAfterPinned:(BOOL)arg0;
- (long long)relationBadgeType;
- (void)setRelationBadgeType:(long long)arg0;
- (id)userNameAttrString;
- (void)setUserNameAttrString:(id)arg0;
- (id)emojiURLListArray;
- (void)setEmojiURLListArray:(id)arg0;
- (BOOL)isSingleEmoji;
- (void)setIsSingleEmoji:(BOOL)arg0;
- (id)avartarBorder;
- (void)setAvartarBorder:(id)arg0;
- (id)accessibilityBadgeString;
- (void)addActionWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 piece:(id)arg1 tapAction:(id /* block */)arg2;
- (void)removeActions;
- (BOOL)isValidFoldNode;
- (BOOL)isValidNodeWithMaxWaitTime:(double)arg0;
- (void)setCellViewClass:(Class)arg0;
- (void)switchPropertyFromNode:(id)arg0;
- (id)accessibilityNodeString;
- (id)imagePlaceHolderInDisplayText;
- (void)setImagePlaceHolderInDisplayText:(id)arg0;
- (id)giftCountString;
- (void)setGiftCountString:(id)arg0;
- (struct CGSize { double x0; double x1; })innerViewSize;
- (void)setInnerViewSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isMyMessage;
- (void)setIsMyMessage:(BOOL)arg0;
- (void)setAccessibilityBadgeString:(id)arg0;
- (long long)displayRowCount;
- (void)setDisplayRowCount:(long long)arg0;
- (BOOL)isFloatNode;
- (void)setIsFloatNode:(BOOL)arg0;
- (BOOL)disableTapHighlight;
- (void)setDisableTapHighlight:(BOOL)arg0;
- (double)lastDisplayTime;
- (BOOL)filterUserBadge;
- (void)setFilterUserBadge:(BOOL)arg0;
- (long long)listCellStyle;
- (void)setListCellStyle:(long long)arg0;
- (id)longPressBackgroundColor;
- (void)setLongPressBackgroundColor:(id)arg0;
- (void)setTapOtherAction:(id /* block */)arg0;
- (id /* block */)displayAction;
- (void)setDisplayAction:(id /* block */)arg0;
- (BOOL)foldPinningNode;
- (double)pinnedTime;
- (BOOL)slideUpDismiss;
- (double)pinnedNodeWillDisappearTimeStamp;
- (double)pinnedNodeWillPinTimeStamp;
- (double)pinnedPriority;
- (void)setFoldPinningNode:(BOOL)arg0;
- (void)setPinnedTime:(double)arg0;
- (void)setSlideUpDismiss:(BOOL)arg0;
- (void)setPinnedNodeWillDisappearTimeStamp:(double)arg0;
- (void)setPinnedNodeWillPinTimeStamp:(double)arg0;
- (void)setPinnedPriority:(double)arg0;
- (BOOL)isValidFloatNodeWithDuration:(double)arg0;
- (BOOL)canDisplayInFloatArea;
- (BOOL)isMention;
- (void)setIsMention:(BOOL)arg0;
- (id)repliedLiveText;
- (id)repliedString;
- (void)setRepliedLiveText:(id)arg0;
- (void)setRepliedString:(id)arg0;
- (id)contentColor;
- (void)setMessage:(id)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })textContainerInset;
- (struct CGSize { double x0; double x1; })contentSize;
- (long long)style;
- (id)init;
- (Class)cellViewClass;
- (void)setPreferredMaxLayoutWidth:(double)arg0;
- (void).cxx_destruct;
- (double)topMargin;
- (id)copy;
- (void)setCreateTime:(double)arg0;
- (id)actions;
- (void)setContentSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isAnchor;
- (void)setAttributedString:(id)arg0;
- (id)content;
- (long long)id;
- (id)titleColor;
- (id)message;
- (id)identifier;
- (void)setTextContainerInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (id)title;
- (void)setActions:(id)arg0;
- (void)setContentColor:(id)arg0;
- (void)setContent:(id)arg0;
- (long long)groupIndex;
- (id)eventContext;
- (double)createTime;
- (struct CGSize { double x0; double x1; })size;
- (void)setTitleColor:(id)arg0;
- (id)backgroundColor;
- (void)setSize:(struct CGSize { double x0; double x1; })arg0;
- (double)bottomMargin;
- (id)attributedString;
- (void)setStyle:(long long)arg0;
- (double)preferredMaxLayoutWidth;
- (void)setBackgroundColor:(id)arg0;
- (void)setIdentifier:(id)arg0;
- (void)setTitle:(id)arg0;
- (void)setId:(long long)arg0;
- (id)accessibilityString;
- (void)setAccessibilityString:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)setTopMargin:(double)arg0;
- (void)setBottomMargin:(double)arg0;
- (id)playbackItem;
- (id)durationString;
- (void)setDurationString:(id)arg0;
- (void)playAudio;
- (void)setGroupIndex:(long long)arg0;
- (long long)replyID;
- (double)displayTime;
- (id)backgroundImageURL;
- (void)setBackgroundImageURL:(id)arg0;
- (id)sentenceString;
- (void)setSentenceString:(id)arg0;
- (id)associatedObjects;
- (void)setAssociatedObjects:(id)arg0;
- (BOOL)hasRead;
- (void)playbackDidStart:(id)arg0;
- (void)setDisplayTime:(double)arg0;

@end
