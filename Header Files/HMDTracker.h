//
//     Generated by private class-dump
//

@class NSLock, NSMutableArray, NSObject;
@protocol OS_dispatch_source;

@interface HMDTracker : HeimdallrModule {
    NSObject<OS_dispatch_source> *_timer;
    double _startTimestamp;
    BOOL _hasNewData;
    NSMutableArray *_records;
    double _refreshInterval;
    unsigned long long _insertIndex;
    NSLock *_lock;
}

@property (retain, nonatomic) NSMutableArray *records;
@property (nonatomic) double refreshInterval;
@property (nonatomic) unsigned long long insertIndex;
@property (nonatomic) BOOL hasNewData;
@property (retain, nonatomic) NSLock *lock;

+ (id)getLastSceneIfAvailable;
+ (id)getOperationTraceIfAvailable;
+ (void)asyncActionOnTrackerQueue:(id /* block */)arg0;
+ (id)sharedTracker;

- (void)updateConfig:(id)arg0;
- (BOOL)needSyncStart;
- (void)cleanupWithConfig:(id)arg0;
- (void)setInsertIndex:(unsigned long long)arg0;
- (void)setHasNewData:(BOOL)arg0;
- (void)didCollectOneRecord:(id)arg0 async:(BOOL)arg1;
- (void)didCollectOneRecord:(id)arg0 async:(BOOL)arg1 trackerBlock:(id /* block */)arg2;
- (void)updateRecordWithConfig:(id)arg0;
- (void)flushRecord:(id)arg0 async:(BOOL)arg1 trackerBlock:(id /* block */)arg2;
- (void)flush:(BOOL)arg0 trackerBlock:(id /* block */)arg1;
- (void)scheduleTimerWithInterval:(double)arg0;
- (void)flushWithTrackerBlock:(id /* block */)arg0;
- (unsigned long long)insertIndex;
- (long long)dbMaxSize;
- (void)didCollectOneRecord:(id)arg0;
- (void)didCollectOneRecord:(id)arg0 trackerBlock:(id /* block */)arg1;
- (void)dropAllRecordFromMemoryCacheOrDatabase;
- (void)performanceDataSaveImmediately;
- (void)performanceActionOnTrackerAsyncQueue:(id /* block */)arg0;
- (BOOL)hasNewData;
- (void)setupWithHeimdallr:(id)arg0;
- (void)setRecords:(id)arg0;
- (id)init;
- (id)records;
- (void).cxx_destruct;
- (void)stop;
- (id)lock;
- (void)start;
- (void)setLock:(id)arg0;
- (double)refreshInterval;
- (void)setRefreshInterval:(double)arg0;
- (void)flushAsync;

@end
