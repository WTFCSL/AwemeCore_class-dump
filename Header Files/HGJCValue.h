//
//     Generated by private class-dump
//

@class JSValue, NSString;

@interface HGJCValue : NSObject <HGValueProtocol> {
    JSValue *_JCValue;
}

@property (retain, nonatomic) JSValue *JCValue;
@property (readonly) BOOL isUndefined;
@property (readonly) BOOL isNull;
@property (readonly) BOOL isBoolean;
@property (readonly) BOOL isNumber;
@property (readonly) BOOL isString;
@property (readonly) BOOL isObject;
@property (readonly) BOOL isArray;
@property (readonly) BOOL isArrayBuffer;
@property (readonly, nonatomic) id value;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (id)valueWithData:(void *)arg0 size:(unsigned long long)arg1 inContext:(id)arg2;
+ (id)valueWithJSValueRef:(struct OpaqueJSValue { } *)arg0 inContext:(id)arg1;
+ (id)valueWithBool:(BOOL)arg0 inContext:(id)arg1;
+ (id)valueWithObject:(id)arg0 inContext:(id)arg1;
+ (id)valueWithInt32:(int)arg0 inContext:(id)arg1;
+ (id)valueWithDouble:(double)arg0 inContext:(id)arg1;
+ (id)valueWithUndefinedInContext:(id)arg0;

- (id)hg_object;
- (unsigned long long)arrayBufferLength;
- (char *)arrayBufferData;
- (long long)toInt;
- (BOOL)isArrayBuffer;
- (id)JCValue;
- (void)setJCValue:(id)arg0;
- (BOOL)isUndefined;
- (id)valueForProperty:(id)arg0;
- (void).cxx_destruct;
- (id)value;
- (BOOL)isBoolean;
- (id)objectForKeyedSubscript:(id)arg0;
- (BOOL)isObject;
- (id)initWithValue:(id)arg0;
- (void)setObject:(id)arg0 forKeyedSubscript:(id)arg1;
- (id)toDictionary;
- (BOOL)isNull;
- (BOOL)isNumber;
- (id)objectAtIndexedSubscript:(unsigned long long)arg0;
- (id)toObject;
- (id)toNumber;
- (id)toString;
- (BOOL)isString;
- (BOOL)isArray;
- (id)callWithArguments:(id)arg0;

@end
