//
//     Generated by private class-dump
//

@class NSTimer, NSString, NSSet, NSMutableDictionary, BDPAudioInterruptionConfig, BDPUniqueID, NSMutableArray, WKWebView;

@interface BDPPluginVideoComponent : BDPBridgeInstancePlugin <BDPVideoPlayerStateDelegate, BDPAppRouteChangeMessage, BDPContainerLifeCycleMessage, BDPElementFullscreenMessage, BDPPipStateDelegate, BDPUserScreenRecordDelegate, BDPAudioInterruptionDelegate, BDPVideoContainerProtocol> {
    long long _pageID;
    WKWebView *_page;
    BDPUniqueID *_uniqueID;
    NSMutableDictionary *_playerList;
    NSMutableArray *_pauseListAudioInterruption;
    NSMutableArray *_pauseListRouteChange;
    NSSet *_diagnoseEventsSet;
    NSMutableDictionary *_videoIdMap;
    BDPAudioInterruptionConfig *_audioInterruptionConfig;
    id /* block */ _preRenderDelayBlock;
    NSTimer *_preRenderTimer;
}

@property (nonatomic) long long pageID;
@property (weak, nonatomic) WKWebView *page;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) NSMutableDictionary *playerList;
@property (retain, nonatomic) NSMutableArray *pauseListAudioInterruption;
@property (retain, nonatomic) NSMutableArray *pauseListRouteChange;
@property (retain, nonatomic) NSSet *diagnoseEventsSet;
@property (retain, nonatomic) NSMutableDictionary *videoIdMap;
@property (retain, nonatomic) BDPAudioInterruptionConfig *audioInterruptionConfig;
@property (copy, nonatomic) id /* block */ preRenderDelayBlock;
@property (retain, nonatomic) NSTimer *preRenderTimer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)applicationExitWithUniqueID:(id)arg0;
- (void)enterFullscreenWithPageID:(long long)arg0 orientation:(long long)arg1 element:(id)arg2 uniqueID:(id)arg3;
- (void)exitFullscreenWithPageID:(long long)arg0 element:(id)arg1 uniqueID:(id)arg2;
- (void)onAppRouteChangePageDidEnterWithPageID:(long long)arg0 pageURL:(id)arg1 uniqueID:(id)arg2;
- (void)enableScreenRecord;
- (void)heapPhonesUnavailable;
- (void)pauseByInterrupt;
- (void)resumeByInterrupt;
- (id)getInterruptUniqueID;
- (long long)getPageID;
- (void)setAudioInterruptionConfig:(id)arg0;
- (id)audioInterruptionConfig;
- (id)pauseListAudioInterruption;
- (void)setPauseListAudioInterruption:(id)arg0;
- (void)disableScreenRecord;
- (void)appWillEnterForground;
- (id)videoIdMap;
- (void)bdp_videoPlayerStateChange:(long long)arg0 videoPlayer:(id)arg1 extra:(id)arg2;
- (id)playerList;
- (BOOL)preRenderMpIdEnable:(id)arg0;
- (BOOL)needDelayPreRender;
- (id /* block */)preRenderDelayBlock;
- (void)setPreRenderDelayBlock:(id /* block */)arg0;
- (id)preRenderTimer;
- (void)setPreRenderTimer:(id)arg0;
- (void)startPipWithPlayer:(id)arg0;
- (void)stopPipWithPlayer:(id)arg0;
- (BOOL)h265DeviceTypeEnable:(id)arg0;
- (void)bdp_trackVideoEventWithState:(long long)arg0 videoPlayer:(id)arg1 extra:(id)arg2;
- (void)trackVideoEventWithEventName:(id)arg0 params:(id)arg1;
- (void)subscribeHandlerToService:(id)arg0 data:(id)arg1;
- (void)subscribeHandlerToPage:(id)arg0 data:(id)arg1;
- (void)pausePipWithPlay:(id)arg0;
- (void)subscribeProgressEventWithVideoPlayer:(id)arg0 componentID:(id)arg1;
- (void)execPreRenderBlockIfNeed;
- (BOOL)needTransformPreRenderEvent:(id)arg0;
- (void)reportDiagnose:(id)arg0 params:(id)arg1;
- (id)diagnoseEventsSet;
- (id)pauseListRouteChange;
- (void)stopPipOnAppRouteChangePageDidEnterWithPageID:(long long)arg0;
- (void)stopPipByForce;
- (void)playerWillShowInPip:(id)arg0;
- (void)playerDidDismissFromPip:(id)arg0 showPip:(BOOL)arg1 resume:(BOOL)arg2;
- (void)playerDidCloseByUser:(id)arg0;
- (void)videoPlayerStateChange:(long long)arg0 videoPlayer:(id)arg1 extra:(id)arg2;
- (void)trackVideoEventWithState:(long long)arg0 videoPlayer:(id)arg1 extra:(id)arg2;
- (BOOL)useNativeControlVideo;
- (void)insertVideoPlayerWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)updateVideoPlayerWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)removeVideoPlayerWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)setVideoWaterMarkWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)operateVideoContextWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)setMediaVolumeWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)getMediaVolumeWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)canIUseVideoFormatWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)setPlayerList:(id)arg0;
- (void)setPauseListRouteChange:(id)arg0;
- (void)setDiagnoseEventsSet:(id)arg0;
- (void)setVideoIdMap:(id)arg0;
- (id)init;
- (id)page;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setPage:(id)arg0;
- (void)setPageID:(long long)arg0;
- (void)setUniqueID:(id)arg0;
- (long long)pageID;
- (void)dealloc;

@end
