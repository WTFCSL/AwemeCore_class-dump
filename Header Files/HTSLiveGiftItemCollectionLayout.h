//
//     Generated by private class-dump
//

@interface HTSLiveGiftItemCollectionLayout : UICollectionViewLayout {
    BOOL _useMultiSection;
    BOOL _enablePaging;
    double _sectionInsertLeft;
    double _minimumLineSpacing;
    double _minimumInteritemSpacing;
    double _headerInsertLeft;
    double _contentTopOffset;
    double _sectionTopAndBottomOffset;
    long long _direction;
    long long _rowsPerPage;
    long long _columnsPerPage;
    double _pagingIndicatorHeight;
    long long _rowsCount;
    long long _colsCount;
    long long _cellCount;
    long long _pageCount;
    struct CGSize { double width; double height; } _itemSize;
    struct CGSize { double width; double height; } _headerSize;
}

@property (nonatomic) long long cellCount;
@property (nonatomic) long long pageCount;
@property (nonatomic) double sectionInsertLeft;
@property (nonatomic) double minimumLineSpacing;
@property (nonatomic) double minimumInteritemSpacing;
@property (nonatomic) struct CGSize { double width; double height; } itemSize;
@property (nonatomic) BOOL useMultiSection;
@property (nonatomic) double headerInsertLeft;
@property (nonatomic) double contentTopOffset;
@property (nonatomic) struct CGSize { double width; double height; } headerSize;
@property (nonatomic) double sectionTopAndBottomOffset;
@property (nonatomic) BOOL enablePaging;
@property (nonatomic) long long direction;
@property (nonatomic) long long rowsPerPage;
@property (nonatomic) long long columnsPerPage;
@property (nonatomic) double pagingIndicatorHeight;
@property (nonatomic) long long rowsCount;
@property (nonatomic) long long colsCount;
@property (readonly, nonatomic) double collectionHeight;
@property (readonly, nonatomic) double collectionWidth;

- (void)setEnablePaging:(BOOL)arg0;
- (BOOL)enablePaging;
- (long long)rowsPerPage;
- (BOOL)useMultiSection;
- (double)contentTopOffset;
- (double)sectionHeightForSection:(long long)arg0;
- (long long)colsCount;
- (long long)columnsPerPage;
- (void)setColsCount:(long long)arg0;
- (void)setRowsCount:(long long)arg0;
- (double)sectionInsertLeft;
- (double)sectionYOffsetForSection:(long long)arg0;
- (double)sectionTopAndBottomOffset;
- (double)headerInsertLeft;
- (double)itemRowsHeightForSection:(long long)arg0;
- (double)collectionWidth;
- (void)setSectionInsertLeft:(double)arg0;
- (void)setUseMultiSection:(BOOL)arg0;
- (void)setHeaderInsertLeft:(double)arg0;
- (void)setContentTopOffset:(double)arg0;
- (void)setSectionTopAndBottomOffset:(double)arg0;
- (void)setRowsPerPage:(long long)arg0;
- (void)setColumnsPerPage:(long long)arg0;
- (double)pagingIndicatorHeight;
- (void)setPagingIndicatorHeight:(double)arg0;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg0 atIndexPath:(id)arg1;
- (void)prepareLayout;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)layoutAttributesForItemAtIndexPath:(id)arg0;
- (id)init;
- (struct CGSize { double x0; double x1; })collectionViewContentSize;
- (long long)direction;
- (void)setPageCount:(long long)arg0;
- (long long)pageCount;
- (struct CGSize { double x0; double x1; })itemSize;
- (void)setDirection:(long long)arg0;
- (void)setMinimumInteritemSpacing:(double)arg0;
- (void)setMinimumLineSpacing:(double)arg0;
- (void)setItemSize:(struct CGSize { double x0; double x1; })arg0;
- (double)minimumLineSpacing;
- (double)minimumInteritemSpacing;
- (struct CGSize { double x0; double x1; })headerSize;
- (void)setHeaderSize:(struct CGSize { double x0; double x1; })arg0;
- (double)collectionHeight;
- (long long)rowsCount;
- (long long)cellCount;
- (void)setCellCount:(long long)arg0;

@end
