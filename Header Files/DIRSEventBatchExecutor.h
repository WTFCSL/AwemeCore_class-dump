//
//     Generated by private class-dump
//

@class NSArray, NSDictionary, NSString, DIRSContext;
@protocol IRISEventStore, IRISServiceSchema, IRISDataCoder, IRISThrottlter;

@interface DIRSEventBatchExecutor : DIRSBasicModule <IRISTimer, IRISEventUploadExecutor> {
    unsigned long long batchId;
    double tickTime;
    double _interval;
    id<IRISServiceSchema> _serializer;
    NSArray *_compressors;
    id<IRISDataCoder> _encryptor;
    id<IRISDataCoder> _decryptor;
    id<IRISEventStore> _eventStore;
    id<IRISThrottlter> _throttlter;
    long long _priority;
    long long _execState;
    NSDictionary *_options;
}

@property (readonly, nonatomic) double timerInterval;
@property (nonatomic) double interval;
@property (weak, nonatomic) id<IRISServiceSchema> serializer;
@property (retain, nonatomic) NSArray *compressors;
@property (weak, nonatomic) id<IRISDataCoder> encryptor;
@property (weak, nonatomic) id<IRISDataCoder> decryptor;
@property (weak, nonatomic) id<IRISEventStore> eventStore;
@property (retain, nonatomic) id<IRISThrottlter> throttlter;
@property (nonatomic) long long priority;
@property (nonatomic) long long execState;
@property (retain, nonatomic) NSDictionary *options;
@property double tickTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property BOOL isEnabled;
@property long long state;
@property (readonly) DIRSContext *context;
@property (copy, nonatomic) NSString *category;

+ (id)moduleId;
+ (BOOL)isPlugin;
+ (id)moduleVersion;

- (double)timerInterval;
- (id)throttlter;
- (void)executeUpload:(long long)arg0;
- (void)onTimerTick;
- (double)tickTime;
- (void)setTickTime:(double)arg0;
- (id)compressors;
- (void)setCompressors:(id)arg0;
- (void)setDecryptor:(id)arg0;
- (void)setThrottlter:(id)arg0;
- (void)executeUpload:(long long)arg0 options:(id)arg1 completion:(id /* block */)arg2;
- (long long)execState;
- (void)setExecState:(long long)arg0;
- (id)serializer;
- (void).cxx_destruct;
- (void)setSerializer:(id)arg0;
- (void)commonInit;
- (double)interval;
- (void)stop;
- (void)setOptions:(id)arg0;
- (void)setPriority:(long long)arg0;
- (void)setInterval:(double)arg0;
- (id)eventStore;
- (void)start;
- (id)options;
- (long long)priority;
- (void)setEventStore:(id)arg0;
- (id)encryptor;
- (void)setEncryptor:(id)arg0;
- (id)decryptor;

@end
