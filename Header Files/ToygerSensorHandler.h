//
//     Generated by private class-dump
//

@interface ToygerSensorHandler : NSObject {
    struct zsensor { struct sensorResult { BOOL x0; BOOL x1; float x2; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x3; } x0; struct gyro_accumlate { float x0; float x1; float x2; } x1; struct zsensor_result { struct vector<zsensor::sensor_slice_data, std::__1::allocator<zsensor::sensor_slice_data> > { struct sensor_slice_data *x0; struct sensor_slice_data *x1; struct __compressed_pair<zsensor::sensor_slice_data *, std::__1::allocator<zsensor::sensor_slice_data> > { struct sensor_slice_data *x0; } x2; } x0; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x1; BOOL x2; } x2; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x3; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x4; unsigned long long x5; unsigned long long x6; float x7; int x8; float x9; int x10; int x11; int x12; int x13; int x14; BOOL x15; int x16; int x17; float x18; BOOL x19; BOOL x20; float x21; float x22; float x23; struct vector<float, std::__1::allocator<float> > { float *x0; float *x1; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x0; } x2; } x24; } *_sensor;
    float _offset;
}

@property (nonatomic) float offset;

- (void)processSensorData:(id)arg0;
- (struct ToygerSensorResult { BOOL x0; BOOL x1; float x2; })getSensorResult;
- (void)setOffset:(float)arg0;
- (float)offset;
- (id)initWithConfig:(id)arg0;
- (void)dealloc;
- (id)getSampleData;

@end
