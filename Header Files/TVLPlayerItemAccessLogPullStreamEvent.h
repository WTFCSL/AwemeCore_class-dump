//
//     Generated by private class-dump
//

@class NSDate, NSString, NSURL, NSLock, TVLNodeOptimizeInfo, NSDictionary, TVLSEIChecker, TVLAbnormalStreamChecker, NSMutableArray;

@interface TVLPlayerItemAccessLogPullStreamEvent : TVLPlayerItemLogEvent <TVLItemEventsCollectProtocol> {
    NSMutableArray *_retryEvents;
    NSMutableArray *_stallEvents;
    NSMutableArray *_renderStallEvents;
    NSMutableArray *_errorEvents;
    NSMutableArray *_videoBitrateSwitchEvents;
    NSDate *_startPreviewDate;
    long long _totalPlayTimePreview;
    NSLock *_logLock;
    BOOL _DNSCacheHitted;
    BOOL _serverAddressFromPlayerCore;
    NSURL *_playURL;
    NSDate *_pullStreamStartDate;
    NSDate *_SDKDNSFinishedDate;
    NSDate *_playerDNSFinishedDate;
    NSDate *_TCPConnectedDate;
    NSDate *_TCPFirstPacketArrivedDate;
    NSDate *_firstVideoPacketArrivedDate;
    NSDate *_firstAudioPacketArrivedDate;
    NSDate *_firstVideoFrameArrivedDate;
    NSDate *_firstAudioFrameArrivedDate;
    NSDate *_firstVideoFrameToDecodeDate;
    NSDate *_firstAudioFrameToDecodeDate;
    NSDate *_firstVideoFrameDecodedDate;
    NSDate *_firstAudioFrameDecodedDate;
    NSDate *_firstAudioFrameRenderDate;
    NSDate *_firstFrameRenderedDate;
    NSDate *_videoDeviceOpenStartDate;
    NSDate *_videoDeviceOpenEndDate;
    NSDate *_audioDeviceOpenStartDate;
    NSDate *_audioDeviceOpenEndDate;
    NSDate *_videoDeviceWaitStartDate;
    NSDate *_videoDeviceWaitEndDate;
    long long _firstAudioPacketDTS;
    long long _latestAudioPacketDTS;
    long long _firstRenderingAudioFrameDTS;
    long long _latestRenderingAudioFrameDTS;
    NSString *_serverAddress;
    NSDictionary *_contextInfo;
    long long _waitedTimeAfterFirstFrame;
    TVLNodeOptimizeInfo *_nodeOptimizeInfo;
    NSString *_missOptimizeInfo;
    NSDictionary *_responseHeaders;
    unsigned long long _downloadedDataSizeInBytes;
    unsigned long long _playSizeInBytes;
    long long _liveioHttpFlowSizeInBytes;
    long long _liveioP2pFlowSizeInBytes;
    long long _liveioP2pMobileSizeInBytes;
    long long _liveioHttpIOPlayTimeMs;
    long long _liveioP2pIOPlayTimeMs;
    TVLAbnormalStreamChecker *_abnormalStreamChecker;
    TVLSEIChecker *_SEIChecker;
    long long _currentChloCount;
    long long _firstFrameChloCount;
    NSDate *_prepareStartDate;
    NSDate *_prepareEndDate;
    NSDictionary *_metaData;
    long long _socketRecvBufferSize;
    long long _playerOpenInputStartDate;
    long long _httpOpenStartDate;
    long long _transOpenStartDate;
    long long _playerDnsAnalysisStartDate;
    long long _socketCreateEndDate;
    long long _redirectHappenTimeDate;
    long long _httpReqFinishTimeDate;
    long long _httpResFinishTimeDate;
    long long _roomPlayTimeMs;
    long long _streamInfoFindEndDate;
    NSDate *_roomPlayStartDate;
    long long _videoCodecID;
}

@property (retain, nonatomic) NSURL *playURL;
@property (retain, nonatomic) NSDate *pullStreamStartDate;
@property (retain, nonatomic) NSDate *SDKDNSFinishedDate;
@property (retain, nonatomic) NSDate *playerDNSFinishedDate;
@property (retain, nonatomic) NSDate *TCPConnectedDate;
@property (retain, nonatomic) NSDate *TCPFirstPacketArrivedDate;
@property (retain, nonatomic) NSDate *firstVideoPacketArrivedDate;
@property (retain, nonatomic) NSDate *firstAudioPacketArrivedDate;
@property (retain, nonatomic) NSDate *firstVideoFrameArrivedDate;
@property (retain, nonatomic) NSDate *firstAudioFrameArrivedDate;
@property (retain, nonatomic) NSDate *firstVideoFrameToDecodeDate;
@property (retain, nonatomic) NSDate *firstAudioFrameToDecodeDate;
@property (retain, nonatomic) NSDate *firstVideoFrameDecodedDate;
@property (retain, nonatomic) NSDate *firstAudioFrameDecodedDate;
@property (retain, nonatomic) NSDate *firstAudioFrameRenderDate;
@property (retain, nonatomic) NSDate *firstFrameRenderedDate;
@property (retain, nonatomic) NSDate *videoDeviceOpenStartDate;
@property (retain, nonatomic) NSDate *videoDeviceOpenEndDate;
@property (retain, nonatomic) NSDate *audioDeviceOpenStartDate;
@property (retain, nonatomic) NSDate *audioDeviceOpenEndDate;
@property (retain, nonatomic) NSDate *videoDeviceWaitStartDate;
@property (retain, nonatomic) NSDate *videoDeviceWaitEndDate;
@property (readonly, nonatomic) long long firstAudioPacketDTS;
@property (nonatomic) long long latestAudioPacketDTS;
@property (readonly, nonatomic) long long firstRenderingAudioFrameDTS;
@property (nonatomic) long long latestRenderingAudioFrameDTS;
@property (nonatomic, getter=isDNSCacheHitted) BOOL DNSCacheHitted;
@property (copy, nonatomic) NSString *serverAddress;
@property (nonatomic, getter=isServerAddressFromPlayerCore) BOOL serverAddressFromPlayerCore;
@property (retain, nonatomic) NSDictionary *contextInfo;
@property (nonatomic) long long waitedTimeAfterFirstFrame;
@property (retain, nonatomic) TVLNodeOptimizeInfo *nodeOptimizeInfo;
@property (retain, nonatomic) NSString *missOptimizeInfo;
@property (retain, nonatomic) NSDictionary *responseHeaders;
@property (nonatomic) unsigned long long downloadedDataSizeInBytes;
@property (nonatomic) unsigned long long playSizeInBytes;
@property (nonatomic) long long liveioHttpFlowSizeInBytes;
@property (nonatomic) long long liveioP2pFlowSizeInBytes;
@property (nonatomic) long long liveioP2pMobileSizeInBytes;
@property (nonatomic) long long liveioHttpIOPlayTimeMs;
@property (nonatomic) long long liveioP2pIOPlayTimeMs;
@property (retain, nonatomic) TVLAbnormalStreamChecker *abnormalStreamChecker;
@property (retain, nonatomic) TVLSEIChecker *SEIChecker;
@property (nonatomic) long long currentChloCount;
@property (nonatomic) long long firstFrameChloCount;
@property (readonly, nonatomic) BOOL isFirstFrameViewed;
@property (retain, nonatomic) NSDate *prepareStartDate;
@property (retain, nonatomic) NSDate *prepareEndDate;
@property (retain, nonatomic) NSDictionary *metaData;
@property (nonatomic) long long socketRecvBufferSize;
@property (nonatomic) long long playerOpenInputStartDate;
@property (nonatomic) long long httpOpenStartDate;
@property (nonatomic) long long transOpenStartDate;
@property (nonatomic) long long playerDnsAnalysisStartDate;
@property (nonatomic) long long socketCreateEndDate;
@property (nonatomic) long long redirectHappenTimeDate;
@property (nonatomic) long long httpReqFinishTimeDate;
@property (nonatomic) long long httpResFinishTimeDate;
@property (nonatomic) long long roomPlayTimeMs;
@property (nonatomic) long long streamInfoFindEndDate;
@property (retain, nonatomic) NSDate *roomPlayStartDate;
@property (nonatomic) long long videoCodecID;
@property (readonly, nonatomic) NSMutableArray *retryEvents;
@property (readonly, nonatomic) NSMutableArray *stallEvents;
@property (readonly, nonatomic) NSMutableArray *renderStallEvents;
@property (readonly, nonatomic) NSMutableArray *errorEvents;
@property (readonly, nonatomic) NSMutableArray *videoBitrateSwitchEvents;
@property (retain, nonatomic) NSDate *startPreviewDate;
@property (readonly, nonatomic) NSMutableArray *demuxStallEvents;
@property (readonly, nonatomic) NSMutableArray *decodeStallEvents;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)pullStreamEventWithPlayerItem:(id)arg0;

- (id)logInfo;
- (long long)socketRecvBufferSize;
- (void)setSocketRecvBufferSize:(long long)arg0;
- (id)playerDNSFinishedDate;
- (long long)firstAudioPacketDTS;
- (long long)firstRenderingAudioFrameDTS;
- (id)pullStreamStartDate;
- (id)SDKDNSFinishedDate;
- (id)firstVideoPacketArrivedDate;
- (id)firstAudioPacketArrivedDate;
- (id)firstVideoFrameDecodedDate;
- (id)firstAudioFrameDecodedDate;
- (id)firstAudioFrameRenderDate;
- (id)firstFrameRenderedDate;
- (id)videoDeviceOpenStartDate;
- (id)videoDeviceOpenEndDate;
- (id)audioDeviceOpenStartDate;
- (id)audioDeviceOpenEndDate;
- (BOOL)isDNSCacheHitted;
- (unsigned long long)downloadedDataSizeInBytes;
- (unsigned long long)playSizeInBytes;
- (long long)liveioHttpFlowSizeInBytes;
- (long long)liveioP2pFlowSizeInBytes;
- (long long)liveioP2pMobileSizeInBytes;
- (long long)liveioHttpIOPlayTimeMs;
- (long long)liveioP2pIOPlayTimeMs;
- (id)videoBitrateSwitchEvents;
- (id)stallEvents;
- (id)renderStallEvents;
- (void)appendRetryEvent:(id)arg0;
- (void)appendStallEvent:(id)arg0;
- (void)appendRenderStallEvent:(id)arg0;
- (void)appendErrorEvent:(id)arg0;
- (void)appendBitrateSwitchEvent:(id)arg0;
- (id)videoBitrateSwitchInfo;
- (unsigned long long)playDataSize;
- (long long)liveioHttpFlowSize;
- (long long)liveioP2pFlowSize;
- (long long)liveioP2pMobileSize;
- (long long)liveioHttpIOPlayTime;
- (long long)liveioP2pIOPlayTime;
- (void)endPreview;
- (long long)getPlayTimePreview;
- (struct TVLItemStallInfomation { long long x0; long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; long long x10; long long x11; long long x12; long long x13; long long x14; long long x15; })stallBaseInfomation;
- (id)retryEvents;
- (id)errorEvents;
- (id)startPreviewDate;
- (void)setStartPreviewDate:(id)arg0;
- (BOOL)isFirstFrameViewed;
- (id)TCPConnectedDate;
- (void)setLatestAudioPacketDTS:(long long)arg0;
- (void)setLatestRenderingAudioFrameDTS:(long long)arg0;
- (long long)currentChloCount;
- (void)updateChlo;
- (long long)totalStallDuration;
- (id)latestStallEvent;
- (void)setPullStreamStartDate:(id)arg0;
- (void)setSDKDNSFinishedDate:(id)arg0;
- (void)setPlayerDNSFinishedDate:(id)arg0;
- (void)setTCPConnectedDate:(id)arg0;
- (id)TCPFirstPacketArrivedDate;
- (void)setTCPFirstPacketArrivedDate:(id)arg0;
- (void)setFirstVideoPacketArrivedDate:(id)arg0;
- (void)setFirstAudioPacketArrivedDate:(id)arg0;
- (id)firstVideoFrameArrivedDate;
- (void)setFirstVideoFrameArrivedDate:(id)arg0;
- (id)firstAudioFrameArrivedDate;
- (void)setFirstAudioFrameArrivedDate:(id)arg0;
- (id)firstVideoFrameToDecodeDate;
- (void)setFirstVideoFrameToDecodeDate:(id)arg0;
- (id)firstAudioFrameToDecodeDate;
- (void)setFirstAudioFrameToDecodeDate:(id)arg0;
- (void)setFirstVideoFrameDecodedDate:(id)arg0;
- (void)setFirstAudioFrameDecodedDate:(id)arg0;
- (void)setFirstAudioFrameRenderDate:(id)arg0;
- (void)setFirstFrameRenderedDate:(id)arg0;
- (void)setVideoDeviceOpenStartDate:(id)arg0;
- (void)setVideoDeviceOpenEndDate:(id)arg0;
- (void)setAudioDeviceOpenStartDate:(id)arg0;
- (void)setAudioDeviceOpenEndDate:(id)arg0;
- (id)videoDeviceWaitStartDate;
- (void)setVideoDeviceWaitStartDate:(id)arg0;
- (id)videoDeviceWaitEndDate;
- (void)setVideoDeviceWaitEndDate:(id)arg0;
- (long long)latestAudioPacketDTS;
- (long long)latestRenderingAudioFrameDTS;
- (void)setDNSCacheHitted:(BOOL)arg0;
- (BOOL)isServerAddressFromPlayerCore;
- (void)setServerAddressFromPlayerCore:(BOOL)arg0;
- (long long)waitedTimeAfterFirstFrame;
- (void)setWaitedTimeAfterFirstFrame:(long long)arg0;
- (id)nodeOptimizeInfo;
- (void)setNodeOptimizeInfo:(id)arg0;
- (id)missOptimizeInfo;
- (void)setMissOptimizeInfo:(id)arg0;
- (void)setDownloadedDataSizeInBytes:(unsigned long long)arg0;
- (void)setPlaySizeInBytes:(unsigned long long)arg0;
- (void)setLiveioHttpFlowSizeInBytes:(long long)arg0;
- (void)setLiveioP2pFlowSizeInBytes:(long long)arg0;
- (void)setLiveioP2pMobileSizeInBytes:(long long)arg0;
- (void)setLiveioHttpIOPlayTimeMs:(long long)arg0;
- (void)setLiveioP2pIOPlayTimeMs:(long long)arg0;
- (id)abnormalStreamChecker;
- (void)setAbnormalStreamChecker:(id)arg0;
- (id)SEIChecker;
- (void)setSEIChecker:(id)arg0;
- (void)setCurrentChloCount:(long long)arg0;
- (long long)firstFrameChloCount;
- (void)setFirstFrameChloCount:(long long)arg0;
- (id)prepareStartDate;
- (void)setPrepareStartDate:(id)arg0;
- (id)prepareEndDate;
- (void)setPrepareEndDate:(id)arg0;
- (long long)playerOpenInputStartDate;
- (void)setPlayerOpenInputStartDate:(long long)arg0;
- (long long)httpOpenStartDate;
- (void)setHttpOpenStartDate:(long long)arg0;
- (long long)transOpenStartDate;
- (void)setTransOpenStartDate:(long long)arg0;
- (long long)playerDnsAnalysisStartDate;
- (void)setPlayerDnsAnalysisStartDate:(long long)arg0;
- (long long)socketCreateEndDate;
- (void)setSocketCreateEndDate:(long long)arg0;
- (long long)redirectHappenTimeDate;
- (void)setRedirectHappenTimeDate:(long long)arg0;
- (long long)httpReqFinishTimeDate;
- (void)setHttpReqFinishTimeDate:(long long)arg0;
- (long long)httpResFinishTimeDate;
- (void)setHttpResFinishTimeDate:(long long)arg0;
- (long long)roomPlayTimeMs;
- (void)setRoomPlayTimeMs:(long long)arg0;
- (long long)streamInfoFindEndDate;
- (void)setStreamInfoFindEndDate:(long long)arg0;
- (id)roomPlayStartDate;
- (void)setRoomPlayStartDate:(id)arg0;
- (long long)videoCodecID;
- (void)setVideoCodecID:(long long)arg0;
- (id)metaData;
- (id)init;
- (void).cxx_destruct;
- (void)setResponseHeaders:(id)arg0;
- (id)responseHeaders;
- (id)startDate;
- (id)endDate;
- (void)setMetaData:(id)arg0;
- (unsigned long long)downloadedDataSize;
- (id)contextInfo;
- (void)setContextInfo:(id)arg0;
- (id)serverAddress;
- (long long)totalStallCount;
- (void)setServerAddress:(id)arg0;
- (id)playURL;
- (void)setPlayURL:(id)arg0;

@end
