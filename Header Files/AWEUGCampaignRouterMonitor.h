//
//     Generated by private class-dump
//

@class NSString;

@interface AWEUGCampaignRouterMonitor : NSObject <AWERouterDelegate> {
    BOOL _isCaculating;
    double _startRouterMemory;
    double _startRouterAvailableMemory;
    double _startRouterTime;
    NSString *_logSchema;
    NSString *_logVC;
    double _lastRouterMemory;
    long long _compareCount;
    NSString *_timerIdentifer;
}

@property (nonatomic) double startRouterMemory;
@property (nonatomic) double startRouterAvailableMemory;
@property (nonatomic) double startRouterTime;
@property (nonatomic) BOOL isCaculating;
@property (copy, nonatomic) NSString *logSchema;
@property (copy, nonatomic) NSString *logVC;
@property (nonatomic) double lastRouterMemory;
@property (nonatomic) long long compareCount;
@property (copy, nonatomic) NSString *timerIdentifer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)_aweLazyRegisterLoad;
+ (id)sharedManager;

- (void)routerDidBeginTransferWithURLString:(id)arg0;
- (long long)compareCount;
- (void)setCompareCount:(long long)arg0;
- (void)routerDidTransferWithURLString:(id)arg0 fromViewController:(id)arg1 toViewController:(id)arg2 transitionType:(long long)arg3;
- (void)routerDidFailTransferingWithURLString:(id)arg0 errorMessage:(id)arg1;
- (void)campaignDidBeginTransferWithURLString:(id)arg0;
- (void)campaignDidTransferWithURLString:(id)arg0;
- (void)campaignDidFailTransferingWithURLString:(id)arg0;
- (id)getSchemaConfigWithSchema:(id)arg0 setting:(id)arg1;
- (void)setStartRouterMemory:(double)arg0;
- (void)setStartRouterAvailableMemory:(double)arg0;
- (void)setStartRouterTime:(double)arg0;
- (void)setIsCaculating:(BOOL)arg0;
- (id)logSchema;
- (void)setLogSchema:(id)arg0;
- (id)logVC;
- (void)setLogVC:(id)arg0;
- (void)delayXTimeReportMode:(id)arg0;
- (void)loadCompleteReportMode:(id)arg0;
- (void)logMemoryDiffInfo;
- (double)lastRouterMemory;
- (void)cancelLoadCompleteTimer;
- (void)setLastRouterMemory:(double)arg0;
- (void)setTimerIdentifer:(id)arg0;
- (id)timerIdentifer;
- (double)startRouterMemory;
- (BOOL)isCaculating;
- (id)paramerWithSchema:(id)arg0;
- (id)hostPathWithSchema:(id)arg0;
- (double)startRouterTime;
- (double)startRouterAvailableMemory;
- (void)excuteRouterStartWithSchema:(id)arg0;
- (void)excuteRouterFinishWithSchema:(id)arg0 vc:(id)arg1;
- (void).cxx_destruct;
- (void)resetContext;

@end
