//
//     Generated by private class-dump
//

@class AVAssetWriterInput, IESSCExportConfiguration, AVAssetReaderAudioMixOutput, NSCondition, NSObject, AVAudioMix, AVAssetWriter, AVAsset, AVVideoComposition, NSString, IESSCExportVideoConfiguration, AVAssetWriterInputPixelBufferAdaptor, IESSCExportAudioConfiguration, IESSCExportReader, NSError, AVAssetReaderVideoCompositionOutput;
@protocol OS_dispatch_queue;

@interface IESSCExportSession : NSObject <IESSCExportCancellable> {
    BOOL _ignoreDefaultSuspendPolicy;
    BOOL _suspended;
    BOOL _isReaderReady;
    BOOL _canceled;
    BOOL _pause;
    BOOL _videoCompleted;
    BOOL _audioCompleted;
    float _progress;
    AVAsset *_asset;
    AVVideoComposition *_videoComposition;
    AVAudioMix *_audioMix;
    IESSCExportConfiguration *_exportConfiguration;
    IESSCExportVideoConfiguration *_videoConfiguration;
    IESSCExportAudioConfiguration *_audioConfiguration;
    id /* block */ _progressHandler;
    id /* block */ _completionHandler;
    id /* block */ _videoExportTimeHandler;
    long long _status;
    NSError *_error;
    IESSCExportReader *_reader;
    AVAssetReaderVideoCompositionOutput *_videoOutput;
    AVAssetReaderAudioMixOutput *_audioOutput;
    AVAssetWriter *_writer;
    AVAssetWriterInput *_videoInput;
    AVAssetWriterInputPixelBufferAdaptor *_videoPixelBufferAdaptor;
    AVAssetWriterInput *_audioInput;
    NSObject<OS_dispatch_queue> *_inputQueue;
    double _duration;
    NSCondition *_pauseCondition;
    double _exportStartTime;
    long long _backgroundCount;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastVideoTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastAudioTime;
}

@property (retain, nonatomic) NSError *error;
@property (nonatomic) float progress;
@property (retain, nonatomic) IESSCExportReader *reader;
@property (retain, nonatomic) AVAssetReaderVideoCompositionOutput *videoOutput;
@property (retain, nonatomic) AVAssetReaderAudioMixOutput *audioOutput;
@property (retain, nonatomic) AVAssetWriter *writer;
@property (retain, nonatomic) AVAssetWriterInput *videoInput;
@property (retain, nonatomic) AVAssetWriterInputPixelBufferAdaptor *videoPixelBufferAdaptor;
@property (retain, nonatomic) AVAssetWriterInput *audioInput;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *inputQueue;
@property (nonatomic) double duration;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } lastVideoTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } lastAudioTime;
@property BOOL suspended;
@property BOOL isReaderReady;
@property (nonatomic, getter=isCanceled) BOOL canceled;
@property (nonatomic, getter=isPause) BOOL pause;
@property (retain, nonatomic) NSCondition *pauseCondition;
@property (nonatomic) BOOL videoCompleted;
@property (nonatomic) BOOL audioCompleted;
@property (nonatomic) double exportStartTime;
@property (nonatomic) long long backgroundCount;
@property (retain, nonatomic) AVAsset *asset;
@property (copy, nonatomic) AVVideoComposition *videoComposition;
@property (copy, nonatomic) AVAudioMix *audioMix;
@property (retain, nonatomic) IESSCExportConfiguration *exportConfiguration;
@property (retain, nonatomic) IESSCExportVideoConfiguration *videoConfiguration;
@property (retain, nonatomic) IESSCExportAudioConfiguration *audioConfiguration;
@property (copy, nonatomic) id /* block */ progressHandler;
@property (copy, nonatomic) id /* block */ completionHandler;
@property (copy, nonatomic) id /* block */ videoExportTimeHandler;
@property (nonatomic) long long status;
@property (nonatomic) BOOL ignoreDefaultSuspendPolicy;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)removeNotification;
- (void)applicationDidBecomeActiveNotification;
- (void)applicationWillResignActiveNotification;
- (void)setupNotification;
- (BOOL)isPause;
- (void)setAudioOutput:(id)arg0;
- (void)setLastVideoTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastVideoTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastAudioTime;
- (void)setLastAudioTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setInputQueue:(id)arg0;
- (BOOL)encodeReadySamplesFromOutput:(id)arg0 toInput:(id)arg1;
- (void)finishWithCancelled;
- (void)setBackgroundCount:(long long)arg0;
- (long long)backgroundCount;
- (void)cancelSourceExport;
- (void)setVideoCompleted:(BOOL)arg0;
- (void)setAudioCompleted:(BOOL)arg0;
- (BOOL)setupReaderWriterWithError:(id *)arg0;
- (void)setIsReaderReady:(BOOL)arg0;
- (void)startReadingAndWriting;
- (id)pauseCondition;
- (void)cancelExportWithCompletion:(id /* block */)arg0;
- (BOOL)videoCompleted;
- (BOOL)audioCompleted;
- (BOOL)shouldExportAudioAfterVideoComplete;
- (void)startExportingVideo;
- (void)startExportingAudio;
- (void)startAudioExportingAfterVideoCompleteIfNeeded;
- (unsigned long long)audioWriteStatusWithSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct opaqueCMSampleBuffer { } *)reconstructHalfWrittenAudioSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (id)currentVideoComposition;
- (BOOL)isReaderReady;
- (void)updateProgressForFrameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id /* block */)videoExportTimeHandler;
- (void)handleErrorReportWithError:(id)arg0;
- (void)handleSuccessReport;
- (BOOL)moveExportFileFromTemporaryURL;
- (void)setVideoPixelBufferAdaptor:(id)arg0;
- (BOOL)setupVideoInputWithError:(id *)arg0;
- (BOOL)setupAudioInputWithError:(id *)arg0;
- (id)buildDefaultVideoComposition;
- (BOOL)shouldMediaDataInRealTime;
- (BOOL)ignoreDefaultSuspendPolicy;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getReaderRestartTime;
- (void)resumeAudioAfterVideoExportWithTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (void)resumeDefaultExportWithTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (void)resumeAudioExportIfNeededWithTimeRenage:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (void)resumeVideoExportIfNeededWithTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (BOOL)startAudioReading;
- (void)startExport;
- (void)pauseExporting;
- (void)continueExporting;
- (id)getExportFailStatusInfo;
- (void)setVideoExportTimeHandler:(id /* block */)arg0;
- (void)setIgnoreDefaultSuspendPolicy:(BOOL)arg0;
- (id)videoPixelBufferAdaptor;
- (void)setPauseCondition:(id)arg0;
- (void)setSuspended:(BOOL)arg0;
- (BOOL)isCanceled;
- (void)setProgressHandler:(id /* block */)arg0;
- (id)videoConfiguration;
- (id)init;
- (BOOL)suspended;
- (void).cxx_destruct;
- (long long)status;
- (id /* block */)progressHandler;
- (void)finish;
- (void)setAudioMix:(id)arg0;
- (id)videoOutput;
- (void)setCompletionHandler:(id /* block */)arg0;
- (void)finishWithSuccess;
- (void)setPause:(BOOL)arg0;
- (double)duration;
- (void)setVideoOutput:(id)arg0;
- (id)audioSettings;
- (void)setStatus:(long long)arg0;
- (id)audioOutput;
- (float)progress;
- (id)reader;
- (void)setCanceled:(BOOL)arg0;
- (id)audioConfiguration;
- (id /* block */)completionHandler;
- (void)setError:(id)arg0;
- (id)asset;
- (id)initWithAsset:(id)arg0;
- (void)setAsset:(id)arg0;
- (void)dealloc;
- (void)setWriter:(id)arg0;
- (void)setProgress:(float)arg0;
- (void)reset;
- (id)writer;
- (void)setVideoConfiguration:(id)arg0;
- (id)error;
- (void)finishWithError:(id)arg0;
- (id)audioMix;
- (void)setDuration:(double)arg0;
- (id)audioInput;
- (void)setAudioInput:(id)arg0;
- (id)videoComposition;
- (void)setVideoComposition:(id)arg0;
- (id)videoSettings;
- (void)cancelExport;
- (id)videoInput;
- (id)exportConfiguration;
- (void)setExportConfiguration:(id)arg0;
- (void)setVideoInput:(id)arg0;
- (void)setReader:(id)arg0;
- (void)setAudioConfiguration:(id)arg0;
- (id)inputQueue;
- (double)exportStartTime;
- (void)setExportStartTime:(double)arg0;

@end
