//
//     Generated by private class-dump
//

@class NSString, RTVXREngineSettings, RTVXREngineCaptureDevices, ByteRTCVideoEncoderConfig, NSMutableDictionary, RxMultipleDelegate, ByteRTCVideo, NSMutableArray, __RTVXREngineRTCExtInfo, ByteRTCRoom, ByteRTCAudioDeviceManager;
@protocol RxInjector, RTVXREngineInternalConfiguration, RTVXREngineCore, RTVXREngineBusinessConfiguration, RTVXRSettingsInterface, RTVXREngineEffect, RTVDynamicResolutionManagerInterface, RTVXREngineVideoCapture, RTVXREngineAudioMixerInterface, RTVXREngineDelegate;

@interface __RTVXREngineInstanceRTC : UIViewController <RTVXREngineCore, RTVXREngineEffect, ByteRTCVideoDelegate, ByteRTCRoomDelegate, RTVXREngineVideoCaptureDelegate, RTVXREngineCaptureDevicesDelegate, RTVXRStreamRenderViewDelegate> {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _lock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _firstFrameDecodedUidsMutex;
    BOOL _audioCaptureInterrupted;
    BOOL _audioCaptureStopped;
    BOOL _rtcEngineDestroyed;
    BOOL _isMuteLocalAudio;
    BOOL _isMuteLocalVideo;
    BOOL _isVideoCaptureOn;
    BOOL _markNeedReleaseEngine;
    BOOL _markNeedDelayReleaseEngine;
    int _targetCameraFrame;
    id<RxInjector> _injector;
    id<RTVXREngineInternalConfiguration> _xrConfig;
    NSString *_uuid;
    ByteRTCVideo *_rtcVideo;
    ByteRTCRoom *_rtcRoom;
    id<RTVXREngineVideoCapture> _videoCapture;
    id /* block */ _videoProcessingCallback;
    __RTVXREngineRTCExtInfo *_rtcExtInfo;
    NSMutableDictionary *_previewMapper;
    NSMutableDictionary *_streamRenderViewMapper;
    NSMutableDictionary *_videoFrameInfoMapper;
    NSString *_roomID;
    id /* block */ _seiCallback;
    NSMutableArray *_extendedDataArray;
    ByteRTCAudioDeviceManager *_audioDeviceManager;
    RTVXREngineCaptureDevices *_captureDevices;
    id<RTVXRSettingsInterface> _xrSettings;
    RTVXREngineSettings *_engineSettings;
    id<RTVXREngineAudioMixerInterface> _audioMixer;
    RxMultipleDelegate<RTVXREngineDelegate> *_multipleDelegate;
    id<RTVDynamicResolutionManagerInterface> _dynamicResolutionManager;
    id<RTVXREngineBusinessConfiguration> _businessConfiguration;
    ByteRTCVideoEncoderConfig *_encoderConfig;
    NSMutableDictionary *_firstFrameDecodedUids;
    NSString *_sceneTag;
}

@property (copy, nonatomic) id /* block */ videoProcessingCallback;
@property (readonly, nonatomic) RTVXREngineSettings *engineSettings;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<RTVXREngineCore> core;
@property (readonly, weak, nonatomic) id<RTVXREngineEffect> effect;
@property (readonly, nonatomic) id<RTVDynamicResolutionManagerInterface> dynamicResolutionManager;
@property (weak, nonatomic) id<RTVXREngineBusinessConfiguration> businessConfiguration;
@property (retain, nonatomic) id<RTVXREngineVideoCapture> videoCapture;
@property (retain, nonatomic) ByteRTCVideoEncoderConfig *encoderConfig;
@property (retain, nonatomic) NSMutableDictionary *firstFrameDecodedUids;
@property (copy, nonatomic) NSString *sceneTag;
@property (nonatomic) int targetCameraFrame;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, nonatomic) id<RTVXREngineInternalConfiguration> xrConfig;
@property (readonly, copy, nonatomic) NSString *uuid;
@property (retain) ByteRTCVideo *rtcVideo;
@property (retain) ByteRTCRoom *rtcRoom;
@property (copy, nonatomic) id /* block */ videoProcessingCallback;
@property (retain, nonatomic) __RTVXREngineRTCExtInfo *rtcExtInfo;
@property (readonly, nonatomic) NSMutableDictionary *previewMapper;
@property (readonly, nonatomic) NSMutableDictionary *streamRenderViewMapper;
@property (readonly, nonatomic) NSMutableDictionary *videoFrameInfoMapper;
@property (copy, nonatomic) NSString *roomID;
@property (copy, nonatomic) id /* block */ seiCallback;
@property (retain, nonatomic) NSMutableArray *extendedDataArray;
@property (retain, nonatomic) ByteRTCAudioDeviceManager *audioDeviceManager;
@property (nonatomic) BOOL audioCaptureInterrupted;
@property (nonatomic) BOOL audioCaptureStopped;
@property (nonatomic) BOOL rtcEngineDestroyed;
@property (nonatomic) BOOL isMuteLocalAudio;
@property (nonatomic) BOOL isMuteLocalVideo;
@property (nonatomic) BOOL isVideoCaptureOn;
@property (nonatomic) BOOL markNeedReleaseEngine;
@property (nonatomic) BOOL markNeedDelayReleaseEngine;
@property (retain, nonatomic) RTVXREngineCaptureDevices *captureDevices;
@property (readonly, nonatomic) id<RTVXRSettingsInterface> xrSettings;
@property (readonly, nonatomic) RTVXREngineSettings *engineSettings;
@property (retain, nonatomic) id<RTVXREngineAudioMixerInterface> audioMixer;
@property (readonly, nonatomic) RxMultipleDelegate<RTVXREngineDelegate> *multipleDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rtcEngine:(id)arg0 onError:(long long)arg1;
- (void)rtcEngine:(id)arg0 onFirstLocalVideoFrameCaptured:(long long)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstRemoteVideoFrameRendered:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstRemoteVideoFrameDecoded:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstLocalAudioFrame:(long long)arg1;
- (void)rtcEngine:(id)arg0 onFirstRemoteAudioFrame:(id)arg1;
- (void)rtcEngine:(id)arg0 onSEIMessageReceived:(id)arg1 andMessage:(id)arg2;
- (void)rtcEngine:(id)arg0 onRemoteAudioPropertiesReport:(id)arg1 totalRemoteVolume:(long long)arg2;
- (void)rtcEngine:(id)arg0 onLocalAudioPropertiesReport:(id)arg1;
- (void)rtcEngine:(id)arg0 onLocalAudioStateChanged:(long long)arg1 error:(long long)arg2;
- (void)rtcEngine:(id)arg0 onRemoteAudioStateChanged:(id)arg1 state:(long long)arg2 reason:(long long)arg3;
- (void)rtcEngine:(id)arg0 onLocalVideoStateChanged:(long long)arg1 withStreamState:(long long)arg2 withStreamError:(long long)arg3;
- (void)rtcEngine:(id)arg0 onRemoteVideoStateChanged:(id)arg1 withVideoState:(long long)arg2 withVideoStateReason:(long long)arg3;
- (void)rtcEngine:(id)arg0 onAudioDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)rtcEngine:(id)arg0 onVideoDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)rtcEngine:(id)arg0 log:(id)arg1;
- (void)rtcRoom:(id)arg0 onRoomStateChanged:(id)arg1 withUid:(id)arg2 state:(long long)arg3 extraInfo:(id)arg4;
- (void)rtcRoom:(id)arg0 onLeaveRoom:(id)arg1;
- (void)rtcRoom:(id)arg0 onRoomStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onLocalStreamStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onRemoteStreamStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onUserJoined:(id)arg1 elapsed:(long long)arg2;
- (void)rtcRoom:(id)arg0 onUserLeave:(id)arg1 reason:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onUserPublishStream:(id)arg1 type:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onUserUnpublishStream:(id)arg1 type:(unsigned long long)arg2 reason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onStreamSubscribed:(long long)arg1 userId:(id)arg2 subscribeConfig:(id)arg3;
- (void)rtcRoom:(id)arg0 onStreamPublishSuccess:(id)arg1 isScreen:(BOOL)arg2;
- (void)rtcRoom:(id)arg0 onRoomMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onRoomBinaryMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserBinaryMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserMessageSendResult:(long long)arg1 error:(long long)arg2;
- (void)rtcRoom:(id)arg0 onRoomMessageSendResult:(long long)arg1 error:(long long)arg2;
- (void)rtcEngine:(id)arg0 onCreateRoomStateChanged:(id)arg1 errorCode:(long long)arg2;
- (void)rtcEngine:(id)arg0 onUserStartAudioCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStopAudioCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStartVideoCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStopVideoCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onConnectionStateChanged:(long long)arg1;
- (void)rtcEngine:(id)arg0 onAudioFrameSendStateChanged:(id)arg1 rtcUser:(id)arg2 state:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg0 onVideoFrameSendStateChanged:(id)arg1 rtcUser:(id)arg2 state:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg0 onAudioFramePlayStateChanged:(id)arg1 rtcUser:(id)arg2 state:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg0 onVideoFramePlayStateChanged:(id)arg1 rtcUser:(id)arg2 state:(unsigned long long)arg3;
- (void)pushExternalVideoFrame:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 rotation:(long long)arg2 extendedData:(id)arg3 supplementaryInfo:(id)arg4;
- (id)audioDeviceManager;
- (void)setAudioDeviceManager:(id)arg0;
- (long long)switchCamera;
- (void)setupWithConfig:(id)arg0;
- (BOOL)updateComposerNode:(id)arg0 key:(id)arg1 value:(double)arg2;
- (void)setAlgorithmRequirement:(unsigned long long)arg0 algorithmParam:(unsigned long long)arg1 enableDetect:(BOOL)arg2;
- (int)pauseEffect:(long long)arg0;
- (int)resumeEffect:(long long)arg0;
- (void)setEchoCancellationEnabled:(BOOL)arg0;
- (id /* block */)videoProcessingCallback;
- (void)setVideoProcessingCallback:(id /* block */)arg0;
- (void)pushEffectedVideoBufferAfterStarted:(struct __CVBuffer { } *)arg0 texture:(int)arg1 andCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2;
- (void)startPushEffectedFrame;
- (void)stopPushEffectedFrame;
- (void)rxAwakeFromPropertyInjection;
- (void)__appWillResignActive:(id)arg0;
- (id)sceneTag;
- (void)setSceneTag:(id)arg0;
- (void)logEvent:(id)arg0 params:(id)arg1;
- (int)adjustPlaybackSignalVolume:(long long)arg0;
- (int)muteLocalAudioStream:(BOOL)arg0;
- (id)getExpressionInfo;
- (void)addVideoInput:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 zOrder:(int)arg1 forLayer:(int)arg2;
- (void)setRtcVideo:(id)arg0;
- (id)rtcVideo;
- (id)multipleDelegate;
- (id)rtcExtInfo;
- (void)setRtcRoom:(id)arg0;
- (id)rtcRoom;
- (id)__logTag;
- (id)xrSettings;
- (void)__log:(id)arg0;
- (id)audioMixer;
- (int)enableAudioVolumeReport:(BOOL)arg0;
- (void)setRTCEngineParameters:(id)arg0;
- (id)engineSettings;
- (id)videoCapture;
- (void)removeComposerBeautyEffect:(id)arg0;
- (void)recognizeFaceWithTimeInterval:(double)arg0 repeatCount:(long long)arg1 repeatBlock:(id /* block */)arg2;
- (void)stopRecognizeFace;
- (void)appendComposerBeautyEffect:(id)arg0 ratio:(float)arg1 old:(id)arg2 ofGender:(long long)arg3;
- (void)startAudioCaptureWithReason:(id)arg0;
- (void)stopAudioCaptureWithReason:(id)arg0;
- (id)currentSticker;
- (void)updateRatio:(float)arg0 forEffect:(id)arg1;
- (id)businessConfiguration;
- (void)setBusinessConfiguration:(id)arg0;
- (BOOL)setAudioPlayoutMixStream:(BOOL)arg0 sampleRate:(long long)arg1 channelNum:(long long)arg2;
- (BOOL)pushAudioMixingStreamData:(void *)arg0 frameNum:(long long)arg1 sampleRate:(long long)arg2 channelNum:(long long)arg3;
- (id)__coreContext;
- (void)__setCoreContext:(id)arg0;
- (void)setMarkNeedReleaseEngine:(BOOL)arg0;
- (BOOL)markNeedDelayReleaseEngine;
- (void)__destoryEngine;
- (void)setMarkNeedDelayReleaseEngine:(BOOL)arg0;
- (void)stopInteract;
- (void)setRtcEngineDestroyed:(BOOL)arg0;
- (int)enableVideo:(BOOL)arg0 reason:(id)arg1;
- (BOOL)audioCaptureStopped;
- (void)setAudioCaptureStopped:(BOOL)arg0;
- (void)__setupWithConfig:(id)arg0;
- (void)__resetEngineCoreContext;
- (id)previewMapper;
- (id)videoFrameInfoMapper;
- (id)streamRenderViewMapper;
- (void)__setNeedReleaseEngine;
- (long long)currentCaptureDevicePosition;
- (void)__setupInteractWithConfiguration:(id)arg0;
- (void)__updateEncoderResolutionWithSize:(struct CGSize { double x0; double x1; })arg0;
- (void)__stopInteract;
- (void)__startAudioCaptureWithReason:(id)arg0;
- (void)__stopAudioCaptureWithReason:(id)arg0;
- (void)setIsMuteLocalAudio:(BOOL)arg0;
- (BOOL)audioCaptureInterrupted;
- (void)audioCaptureInterrupted:(BOOL)arg0 reason:(id)arg1;
- (void)setIsMuteLocalVideo:(BOOL)arg0;
- (id)xrConfig;
- (void)setAudioCaptureInterrupted:(BOOL)arg0;
- (void)updateCaptureSessionPreset:(id)arg0;
- (id)__mediaPlayer;
- (BOOL)rtcEngineDestroyed;
- (id)pixelBufferExtendedData;
- (void)setSeiCallback:(id /* block */)arg0;
- (id)__extDataWithPayloadBytes:(const void *)arg0 size:(unsigned long long)arg1;
- (id)extendedDataArray;
- (int)sendRoomMessage:(id)arg0;
- (id)__audioEffectPlayer;
- (int)unloadEffect:(long long)arg0;
- (int)stopEffect:(long long)arg0;
- (void)enterCommunicationScenario;
- (void)destoryEngine;
- (void)setupPreviewWithView:(id)arg0;
- (void)setupPreview:(id)arg0 forUser:(id)arg1;
- (void)setupPreview:(id)arg0 forUser:(id)arg1;
- (id)prepareForReuseForPreview:(id)arg0;
- (void)setNeedReleaseEngine;
- (long long)switchCameraWithForcingFront:(BOOL)arg0;
- (long long)switchCameraWithForcingBack:(BOOL)arg0;
- (void)setupInteractWithConfiguration:(id)arg0;
- (void)updateEncoderResolutionWithSize:(struct CGSize { double x0; double x1; })arg0;
- (void)startInteract;
- (void)stopInteractWithoutLeavingRoomCompletion;
- (void)setReleaseRTCEngineManually:(BOOL)arg0;
- (void)releaseRTCEngine:(id)arg0;
- (void)delayReleaseRTCEngine:(id)arg0 delta:(long long)arg1;
- (int)enableAudio:(BOOL)arg0 reason:(id)arg1;
- (int)muteLocalVideoStream:(BOOL)arg0;
- (int)muteRemoteVideoStream:(id)arg0 mute:(BOOL)arg1;
- (int)muteRemoteAudioStreamWithStringUid:(id)arg0 mute:(BOOL)arg1;
- (int)muteAllRemoteAudioStreams:(BOOL)arg0;
- (int)muteAllRemoteVideoStreams:(BOOL)arg0;
- (BOOL)enableSpeaker:(BOOL)arg0;
- (void)startAudioCaptureWithEnableEchoCancellation:(BOOL)arg0 reason:(id)arg1;
- (void)updateRTCExtInfo:(id)arg0;
- (void)switchToFullScreenLayout:(BOOL)arg0 animator:(id)arg1 targetFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (void)setSEIDidReceiveCallback:(id /* block */)arg0;
- (void)sendSEIMessage:(id)arg0 key:(id)arg1;
- (int)sendMessage:(id)arg0 toUserID:(id)arg1;
- (int)setVolumeOfEffect:(long long)arg0 withVolume:(long long)arg1;
- (int)playEffect:(long long)arg0 filePath:(id)arg1 loopback:(BOOL)arg2 cycle:(long long)arg3 withVolume:(long long)arg4;
- (int)preloadEffect:(long long)arg0 filePath:(id)arg1;
- (int)unloadAllEffects:(id)arg0;
- (int)stopAllEffects:(id)arg0;
- (void)delayReleaseRTCEngineWhenStopInteract;
- (void)appendComposerBeautyEffect:(id)arg0 ratio:(float)arg1 old:(id)arg2;
- (void)removeComposerBeautyEffect:(id)arg0 ofGender:(long long)arg1;
- (BOOL)replaceComposerBeautyEffect:(id)arg0 old:(id)arg1;
- (void)applyStickerWithStickerPath:(id)arg0;
- (void)applyStickerEffect:(id)arg0;
- (void)removeStickerEffect:(id)arg0;
- (void)showStickerTip:(id)arg0;
- (void)removeStickerTip;
- (void)__appendComposerBeautyEffect:(id)arg0 ratio:(float)arg1 ofGender:(long long)arg2;
- (id)__nodesPathsOfEffect:(id)arg0 withGender:(long long)arg1;
- (id)__nodePaths:(id)arg0;
- (void)__resetPreviewOnSelfViewIfNeededWithConfig:(id)arg0;
- (void)setCaptureDevices:(id)arg0;
- (id)captureDevices;
- (id)encoderConfig;
- (id)__rtcEngineParametersWithConfig:(id)arg0;
- (void)setEncoderConfig:(id)arg0;
- (id)dynamicResolutionManager;
- (void)setFirstFrameDecodedUids:(id)arg0;
- (id /* block */)seiCallback;
- (id)__fillObject:(id)arg0 withOriginal:(id)arg1;
- (BOOL)isMuteLocalAudio;
- (id)firstFrameDecodedUids;
- (unsigned long long)__rtcMirrorTypeWithMirrorType:(unsigned long long)arg0;
- (BOOL)setLocalVideoMirrorType:(unsigned long long)arg0;
- (void)__receiveExtendedData:(id)arg0;
- (void)__updateFirstFrameDecodedUid:(id)arg0;
- (long long)__rtvVideoState:(long long)arg0;
- (long long)__rtvVideoStateChangeReason:(long long)arg0;
- (long long)__rtvStreamIndex:(long long)arg0;
- (long long)__rtvLocalStreamState:(long long)arg0;
- (long long)__rtvLocalStreamError:(long long)arg0;
- (id)__audioStatusFromRTC:(id)arg0;
- (id)__videoStatusFromRTC:(id)arg0;
- (void)__xrEngine:(id)arg0 videoCaptureStateChange:(unsigned long long)arg1;
- (void)videoCapture:(id)arg0 onLocalVideoStateChanged:(long long)arg1;
- (BOOL)markNeedReleaseEngine;
- (void)setIsVideoCaptureOn:(BOOL)arg0;
- (void)videoCapture:(id)arg0 videoCaptureStateChange:(unsigned long long)arg1;
- (void)requireDelayReleaseEngineByDevice:(id)arg0 operationPromise:(id)arg1;
- (id)businessMonitorDataForEngineCaptureDevices:(id)arg0;
- (void)streamRenderView:(id)arg0 onFirstRemoteVideoFrameRendered:(id)arg1 withFrameInfo:(id)arg2;
- (id)internalEngine;
- (void)__resetFirstFrameDecodedUids;
- (unsigned long long)__rtvNetworkQualityWithByte:(unsigned long long)arg0;
- (long long)__convertToByteVideoRotation:(long long)arg0;
- (BOOL)isFirstFrameDecodedOfUid:(id)arg0;
- (void)setVideoCapture:(id)arg0;
- (void)setRtcExtInfo:(id)arg0;
- (void)setExtendedDataArray:(id)arg0;
- (BOOL)isMuteLocalVideo;
- (BOOL)isVideoCaptureOn;
- (void)setAudioMixer:(id)arg0;
- (int)targetCameraFrame;
- (void)setTargetCameraFrame:(int)arg0;
- (id)init;
- (id)effect;
- (void)addDelegate:(id)arg0;
- (void).cxx_destruct;
- (void)removeDelegate:(id)arg0;
- (id)injector;
- (id)uuid;
- (void)dealloc;
- (id)roomID;
- (void)setRoomID:(id)arg0;
- (id)core;
- (id)__engine;

@end
