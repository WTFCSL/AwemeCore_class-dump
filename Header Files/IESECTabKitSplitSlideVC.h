//
//     Generated by private class-dump
//

@class UIView, IESECTabKitSplitIndicatorView, UITapGestureRecognizer, NSString, IESECTabKitDIContext, UIPanGestureRecognizer, IESECServiceProxy, IESECTabKitSplitStyleConfig;
@protocol IESECTabKitEventService, IESECTabKitEventSubscriber, IESECTabKitAbilityService, IESECTabKitLayoutService, IESECTabKitHybridService, IESECTabKitDataService, IESECTabKitInterceptCloseService;

@interface IESECTabKitSplitSlideVC : UIViewController <UIGestureRecognizerDelegate, IESECTabKitEventSubscriber, IESECTabKitSplitSlideVC> {
    IESECTabKitDIContext *_tabKitCtx;
    BOOL _isFirstViewWillAppear;
    BOOL _isFirstViewDidAppear;
    struct CGPoint { double x; double y; } _panStartPoint;
    UIPanGestureRecognizer *_panGesture;
    UITapGestureRecognizer *_tapGesture;
    IESECTabKitSplitStyleConfig *_splitStyleConfig;
    BOOL _isPrePlaying;
    Class _feedPlayerControl;
    BOOL _willAutoSlideToFull;
    BOOL _isSlideFirstAnimated;
    BOOL _disableAutoSlide;
    BOOL _disableUpFullScreen;
    BOOL _disablePullDownClose;
    BOOL _splitIndicatorHidden;
    unsigned long long _screenState;
    double _upSlideMinY;
    double _fullScreenStateY;
    double _autoUpSlideToFullY;
    UIView *_slideContainerView;
    double _maskAlpha;
    long long _splitRadius;
    double _splitIndicatorTopOffset;
    IESECServiceProxy<IESECTabKitDataService> *_dataService;
    IESECServiceProxy<IESECTabKitLayoutService> *_layoutService;
    IESECServiceProxy<IESECTabKitHybridService> *_hybridService;
    IESECServiceProxy<IESECTabKitInterceptCloseService> *_interceptCloseService;
    IESECServiceProxy<IESECTabKitEventService, IESECTabKitEventSubscriber> *_eventService;
    IESECServiceProxy<IESECTabKitAbilityService> *_abilityService;
    UIView *_maskBgView;
    IESECTabKitSplitIndicatorView *_splitIndicatorView;
}

@property (retain, nonatomic) IESECServiceProxy<IESECTabKitDataService> *dataService;
@property (retain, nonatomic) IESECServiceProxy<IESECTabKitLayoutService> *layoutService;
@property (retain, nonatomic) IESECServiceProxy<IESECTabKitHybridService> *hybridService;
@property (retain, nonatomic) IESECServiceProxy<IESECTabKitInterceptCloseService> *interceptCloseService;
@property (retain, nonatomic) IESECServiceProxy<IESECTabKitEventService, IESECTabKitEventSubscriber> *eventService;
@property (retain, nonatomic) IESECServiceProxy<IESECTabKitAbilityService> *abilityService;
@property (retain, nonatomic) UIView *maskBgView;
@property (retain, nonatomic) IESECTabKitSplitIndicatorView *splitIndicatorView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned long long screenState;
@property (readonly, nonatomic) BOOL isSlideFirstAnimated;
@property (readonly, nonatomic) UIView *slideContainerView;
@property (readonly, nonatomic) double curSlideY;
@property (readonly, nonatomic) double slideInitialY;
@property (readonly, nonatomic) double slideFullMinY;
@property (readonly, nonatomic) double slideSplitMaxY;
@property (readonly, nonatomic) double curSlideDistance;
@property (readonly, nonatomic) double maxSlideDistance;
@property (nonatomic) double upSlideMinY;
@property (nonatomic) double fullScreenStateY;
@property (nonatomic) double autoUpSlideToFullY;
@property (nonatomic) double maskAlpha;
@property (nonatomic) long long splitRadius;
@property (nonatomic) BOOL disableAutoSlide;
@property (nonatomic) BOOL disableUpFullScreen;
@property (nonatomic) BOOL disablePullDownClose;
@property (nonatomic) BOOL splitIndicatorHidden;
@property (nonatomic) double splitIndicatorTopOffset;

+ (BOOL)scrollViewReachTop:(id)arg0;

- (double)maskAlpha;
- (void)setMaskAlpha:(double)arg0;
- (id)maskBgView;
- (void)addGestures;
- (id)currentScrollView;
- (void)setupBindings;
- (BOOL)panGestureShouldBegin:(id)arg0;
- (id)dataService;
- (void)setDataService:(id)arg0;
- (id)abilityService;
- (void)setFullScreenStateY:(double)arg0;
- (id)hybridService;
- (void)setHybridService:(id)arg0;
- (void)setAbilityService:(id)arg0;
- (id)layoutService;
- (void)setLayoutService:(id)arg0;
- (id)slideContainerView;
- (double)curSlideY;
- (void)configSlideEnabled;
- (long long)splitRadius;
- (void)setSplitRadius:(long long)arg0;
- (double)curSlideDistance;
- (double)maxSlideDistance;
- (double)slideSplitMaxY;
- (double)upSlideMinY;
- (BOOL)isSlideFirstAnimated;
- (double)slideInitialY;
- (void)setDisableAutoSlide:(BOOL)arg0;
- (void)setSplitIndicatorHidden:(BOOL)arg0;
- (void)iesectabkit_didMoveToTabItem:(id)arg0 moveType:(unsigned long long)arg1;
- (void)iesectabkit_didTapAtTopTabItem:(id)arg0;
- (void)updateScreenState;
- (id)interceptCloseService;
- (void)setInterceptCloseService:(id)arg0;
- (double)fullScreenStateY;
- (BOOL)disableAutoSlide;
- (double)splitIndicatorTopOffset;
- (void)setSplitIndicatorTopOffset:(double)arg0;
- (void)iesectabkit_tabItem:(id)arg0 hybridViewDidScroll:(id)arg1;
- (void)changeScreenState:(unsigned long long)arg0 animated:(BOOL)arg1;
- (void)setDisablePullDownClose:(BOOL)arg0;
- (void)setDisableUpFullScreen:(BOOL)arg0;
- (BOOL)disablePullDownClose;
- (BOOL)disableUpFullScreen;
- (BOOL)splitIndicatorHidden;
- (void)configSplitIndicatorView;
- (void)configSlideContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1;
- (void)playFeedPlayerIfNeeded;
- (void)configSlideContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1 updateScreenStateImmediate:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)setUpSlideMinY:(double)arg0;
- (void)setAutoUpSlideToFullY:(double)arg0;
- (id)splitIndicatorView;
- (double)slideFullMinY;
- (void)configCornerRadius;
- (void)configSlideContainerHeight;
- (void)reloadSplitStyleWithConfig:(id)arg0;
- (void)reloadSplitStyleIfNeeded;
- (void)autoSlideIfNeeded;
- (void)willUpdateScreenState;
- (void)configSlideFinalState;
- (BOOL)shouldSlideToFull;
- (void)interruptPan;
- (BOOL)validateSlideOffset:(double)arg0;
- (BOOL)shouldUpdateToFullScreenState;
- (void)configSplitIndictor;
- (BOOL)slideContainerNotReachFullMinY;
- (BOOL)slideContainerNotReachSplitMaxY;
- (BOOL)panGesture:(id)arg0 shouldRecognizeSimultaneouslyWithGesture:(id)arg1;
- (BOOL)tapGestureHitDismiss:(id)arg0;
- (double)autoUpSlideToFullY;
- (void)configSlideContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)configSlideContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1 updateScreenStateImmediate:(BOOL)arg2;
- (void)setMaskBgView:(id)arg0;
- (void)setSplitIndicatorView:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void)dismissAction;
- (id)init;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (void)viewWillDisappear:(BOOL)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setEventService:(id)arg0;
- (id)eventService;
- (void)viewWillAppear:(BOOL)arg0;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)sendScrollEvent;
- (void)setupViews;
- (void)handlePanGesture:(id)arg0;
- (unsigned long long)screenState;

@end
