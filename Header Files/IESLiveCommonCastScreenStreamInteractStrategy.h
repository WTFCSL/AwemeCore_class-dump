//
//     Generated by private class-dump
//

@class UIImage, IESLiveInteractOpenContainerCastInfo, IESLiveGCDTimer;
@protocol IESLiveStreamCaptureProvider;

@interface IESLiveCommonCastScreenStreamInteractStrategy : IESLiveCommonCastScreenStreamBaseStrategy {
    BOOL _shouldAddCameraPreviewInput;
    BOOL _isResume;
    id<IESLiveStreamCaptureProvider> _streamCaptureProvider;
    IESLiveInteractOpenContainerCastInfo *_processInfo;
    long long _runningStatus;
    IESLiveGCDTimer *_timer;
    unsigned long long _videoPreviewMode;
    struct __CVBuffer { } *_preFrame;
    UIImage *_castBackground;
    struct CGSize { double width; double height; } _openContainerAdaptedOutputSize;
    struct CGSize { double width; double height; } _canvasOutputSize;
    struct CGSize { double width; double height; } _openContainerOutputSize;
    struct CGSize { double width; double height; } _originalOutputSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _openContainerStreamLayout;
}

@property (retain, nonatomic) id<IESLiveStreamCaptureProvider> streamCaptureProvider;
@property (retain, nonatomic) IESLiveInteractOpenContainerCastInfo *processInfo;
@property (nonatomic) long long runningStatus;
@property (retain, nonatomic) IESLiveGCDTimer *timer;
@property (nonatomic) unsigned long long videoPreviewMode;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } openContainerStreamLayout;
@property (nonatomic) struct CGSize { double width; double height; } openContainerAdaptedOutputSize;
@property (nonatomic) struct __CVBuffer { } *preFrame;
@property (nonatomic) struct CGSize { double width; double height; } canvasOutputSize;
@property (nonatomic) struct CGSize { double width; double height; } openContainerOutputSize;
@property (nonatomic) BOOL shouldAddCameraPreviewInput;
@property (nonatomic) struct CGSize { double width; double height; } originalOutputSize;
@property (retain, nonatomic) UIImage *castBackground;
@property (nonatomic) BOOL isResume;

- (id)cameraPreview;
- (void)setIsResume:(BOOL)arg0;
- (BOOL)isResume;
- (void)setPreFrame:(struct __CVBuffer { } *)arg0;
- (struct __CVBuffer { } *)preFrame;
- (void)resumeScreenCastWithFirstFrame:(struct __CVBuffer { } *)arg0;
- (BOOL)shouldAddCameraPreviewInput;
- (void)setupCastContext;
- (void)resetCastContext;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })castScreenStreamLayoutWithHostLayout:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateAnchorPreviewLayout;
- (void)updateRTCInfoWithOpenContainerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)didSendFrameBuffer:(struct __CVBuffer { } *)arg0 withCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)castScreenChangedWithStatus:(long long)arg0;
- (void)setupBackgroundImage:(id)arg0;
- (void)stopPushLastFrameBuffer;
- (void)setShouldAddCameraPreviewInput:(BOOL)arg0;
- (void)setCanvasOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })canvasOutputSize;
- (void)setOriginalOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)switch2openContanerCastModeIfNeeded;
- (void)setupBackgroundImageStream;
- (void)switch2videoCaptureMode;
- (long long)runningStatus;
- (struct CGSize { double x0; double x1; })openContainerOutputSize;
- (void)setOpenContainerOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)switch2openContanerCastModeDefault;
- (id)streamCaptureProvider;
- (void)setRunningStatus:(long long)arg0;
- (void)startPushLastFrameBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })openContainerStreamLayoutWithHostLayout:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setCastBackground:(id)arg0;
- (void)switch2openContanerCastModeWithAnchorPreviewEnable;
- (void)setVideoPreviewMode:(unsigned long long)arg0;
- (unsigned long long)videoPreviewMode;
- (struct CGSize { double x0; double x1; })originalOutputSize;
- (id)castBackground;
- (void)handleBackgroundImageStream;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })openContainerStreamLayout;
- (void)setOpenContainerStreamLayout:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGSize { double x0; double x1; })openContainerAdaptedOutputSize;
- (void)setOpenContainerAdaptedOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setStreamCaptureProvider:(id)arg0;
- (id)timer;
- (id)processInfo;
- (void).cxx_destruct;
- (void)setProcessInfo:(id)arg0;
- (void)setTimer:(id)arg0;
- (void)dealloc;
- (void)startVideoCapture;
- (void)stopVideoCapture;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentPTS;

@end
