//
//     Generated by private class-dump
//

@class NSString, NSArray, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface TTRequestDispatcher : NSObject {
    BOOL _enableRequestDispatcher;
    BOOL _enableRequestDependency;
    BOOL _targetRequestStart;
    BOOL _hasRunDependencyTask;
    int _maxApiConcurrentCount;
    int _maxDownloadConcurrentCount;
    int _dependencyTimeoutToStart;
    int _dependencyExecuteTime;
    int _apiConcurrentCount;
    int _downloadConcurrentCount;
    NSString *_targetUri;
    NSArray *_dependencyUri;
    NSMutableArray *_pendingApiQueue;
    NSMutableArray *_pendingDownloadQueue;
    NSMutableArray *_dependencyQueue;
    unsigned long long _delayRequestCount;
    NSObject<OS_dispatch_queue> *_timer_queue;
}

@property BOOL enableRequestDispatcher;
@property (retain, nonatomic) NSMutableArray *pendingApiQueue;
@property (retain, nonatomic) NSMutableArray *pendingDownloadQueue;
@property (nonatomic) int apiConcurrentCount;
@property (nonatomic) int downloadConcurrentCount;
@property BOOL enableRequestDependency;
@property (retain, nonatomic) NSMutableArray *dependencyQueue;
@property (nonatomic) BOOL targetRequestStart;
@property (nonatomic) BOOL hasRunDependencyTask;
@property (nonatomic) unsigned long long delayRequestCount;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *timer_queue;
@property (nonatomic) int maxApiConcurrentCount;
@property (nonatomic) int maxDownloadConcurrentCount;
@property (copy, nonatomic) NSString *targetUri;
@property (copy, nonatomic) NSArray *dependencyUri;
@property (nonatomic) int dependencyTimeoutToStart;
@property (nonatomic) int dependencyExecuteTime;

+ (id)shareInstance;

- (void)onHttpTaskFinish:(id)arg0;
- (BOOL)onHttpTaskCancel:(id)arg0;
- (BOOL)onHttpTaskResume:(id)arg0;
- (BOOL)isRequestDispatcherWorking;
- (void)setEnableRequestDispatcher:(BOOL)arg0;
- (void)setPendingApiQueue:(id)arg0;
- (void)setPendingDownloadQueue:(id)arg0;
- (void)setApiConcurrentCount:(int)arg0;
- (void)setDownloadConcurrentCount:(int)arg0;
- (void)setMaxApiConcurrentCount:(int)arg0;
- (void)setMaxDownloadConcurrentCount:(int)arg0;
- (void)setEnableRequestDependency:(BOOL)arg0;
- (void)setDependencyQueue:(id)arg0;
- (void)setTargetRequestStart:(BOOL)arg0;
- (void)setHasRunDependencyTask:(BOOL)arg0;
- (void)setDependencyTimeoutToStart:(int)arg0;
- (void)setDependencyExecuteTime:(int)arg0;
- (void)setDelayRequestCount:(unsigned long long)arg0;
- (void)setTargetUri:(id)arg0;
- (void)setDependencyUri:(id)arg0;
- (void)setTimer_queue:(id)arg0;
- (BOOL)enableRequestDispatcher;
- (void)runPendingTask;
- (BOOL)enableRequestDependency;
- (int)dependencyTimeoutToStart;
- (void)runDependencyTask;
- (id)pendingApiQueue;
- (id)pendingDownloadQueue;
- (id)dependencyQueue;
- (BOOL)runDependencyStrategy:(id)arg0;
- (BOOL)runDispatcherStrategy:(id)arg0;
- (BOOL)hasRunDependencyTask;
- (id)dependencyUri;
- (id)targetUri;
- (BOOL)targetRequestStart;
- (int)dependencyExecuteTime;
- (int)apiConcurrentCount;
- (int)maxApiConcurrentCount;
- (int)downloadConcurrentCount;
- (int)maxDownloadConcurrentCount;
- (BOOL)runTaskCancel:(id)arg0 httpTask:(id)arg1;
- (void)runPendingTask:(id)arg0;
- (unsigned long long)delayRequestCount;
- (void)startRequestDispatcher;
- (void)stopRequestDispatcher;
- (void)startRequestDependency;
- (void)stopRequestDependency;
- (unsigned long long)getDelayRequestCount;
- (id)init;
- (void).cxx_destruct;
- (id)timer_queue;

@end
