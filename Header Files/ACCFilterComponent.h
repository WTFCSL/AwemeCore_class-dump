//
//     Generated by private class-dump
//

@class ACCFilterTrackerSender, AWETabFilterViewController, CADisplayLink, NSMutableSet, IESEffectModel, NSString;
@protocol ACCFilterPrivateService, ACCRecorderViewContainer, ACCCameraService, ACCRecordSwitchModeService, ACCFilterDataService, ACCRecordPropService;

@interface ACCFilterComponent : ACCFeatureComponent <UIGestureRecognizerDelegate, AWERecordFilterVCDelegate, ACCPanelViewDelegate, ACCRecordVideoEventHandler, ACCRecordSwitchModeServiceSubscriber, ACCRecordFlowServiceSubscriber> {
    BOOL _filterAniTiming;
    BOOL _isCompeleteWhenFilterAniBegin;
    BOOL _isSwitchFilter;
    AWETabFilterViewController *_filterController;
    NSMutableSet *_scrollBrowsedFilters;
    long long _switchFilterDirection;
    IESEffectModel *_switchToFilter;
    double _autoRenderProgress;
    CADisplayLink *_displayLink;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCCameraService> _cameraService;
    ACCFilterTrackerSender *_trackSender;
    id<ACCFilterDataService> _dataService;
    id<ACCRecordPropService> _propService;
    id<ACCFilterPrivateService> _filterService;
    id<ACCRecordSwitchModeService> _switchModeService;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _gestureResponseArea;
}

@property (retain, nonatomic) AWETabFilterViewController *filterController;
@property (retain, nonatomic) NSMutableSet *scrollBrowsedFilters;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } gestureResponseArea;
@property (nonatomic) long long switchFilterDirection;
@property (retain, nonatomic) IESEffectModel *switchToFilter;
@property (nonatomic) BOOL filterAniTiming;
@property (nonatomic) double autoRenderProgress;
@property (nonatomic) BOOL isCompeleteWhenFilterAniBegin;
@property (retain, nonatomic) CADisplayLink *displayLink;
@property (nonatomic) BOOL isSwitchFilter;
@property (retain, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (retain, nonatomic) ACCFilterTrackerSender *trackSender;
@property (retain, nonatomic) id<ACCFilterDataService> dataService;
@property (weak, nonatomic) id<ACCRecordPropService> propService;
@property (retain, nonatomic) id<ACCFilterPrivateService> filterService;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)showOnView:(id)arg0;
- (void)bindViewModel;
- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)componentDidUnmount;
- (void)componentDidAppear;
- (unsigned long long)preferredLoadPhase;
- (void)setFilterService:(id)arg0;
- (id)filterService;
- (void)bindServices:(id)arg0;
- (id)switchModeService;
- (void)flowServiceWillEnterNextPageWithMode:(id)arg0;
- (void)panelViewController:(id)arg0 willDismissPanelView:(id)arg1;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (void)setSwitchModeService:(id)arg0;
- (void)applyFilter:(id)arg0;
- (id)propService;
- (void)setPropService:(id)arg0;
- (id)serviceBindingArray;
- (id)recordVideoEvent;
- (void)applyFilter:(id)arg0 indensity:(float)arg1;
- (float)filterIndensity:(id)arg0;
- (id)currentFilterHelper;
- (BOOL)isSwitchFilter;
- (void)panSwitchFilter:(id)arg0;
- (id)dataService;
- (void)setDataService:(id)arg0;
- (id)trackSender;
- (void)setTrackSender:(id)arg0;
- (void)startSwitchDisplayLink;
- (void)stopSwitchDisplayLink;
- (BOOL)enableFilterIndensity;
- (id)tabNameForFilter:(id)arg0;
- (BOOL)enableFilterSwitch;
- (BOOL)switchFilterGestureShouldBegin;
- (void)configFilterSwitchComponent;
- (void)autoApplyLastUsedFilterIfNeeded;
- (void)addFilterSwitchGestureForView:(id)arg0 gestureResponseArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)refreshSelectedFilterWithModel:(id)arg0;
- (void)applyFilter:(id)arg0 withShowFilterName:(BOOL)arg1;
- (void)updateLastUsedFilterFlag:(id)arg0;
- (id)scrollBrowsedFilters;
- (void)removeLastUsedFilterInfo;
- (void)trackAutoApplyFilter:(id)arg0;
- (void)setGestureResponseArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })gestureResponseArea;
- (void)setIsSwitchFilter:(BOOL)arg0;
- (void)setSwitchFilterDirection:(long long)arg0;
- (long long)switchFilterDirection;
- (void)setSwitchToFilter:(id)arg0;
- (id)switchToFilter;
- (void)changeFilterRelatedUIWithProgress:(double)arg0;
- (void)applyFilterWithBeginProgress:(double)arg0 isCompelete:(BOOL)arg1;
- (void)setFilterAniTiming:(BOOL)arg0;
- (void)setIsCompeleteWhenFilterAniBegin:(BOOL)arg0;
- (void)setAutoRenderProgress:(double)arg0;
- (void)filterSwitchFinishWithModel:(id)arg0;
- (void)renderOnMainLoop;
- (BOOL)filterAniTiming;
- (BOOL)isCompeleteWhenFilterAniBegin;
- (double)autoRenderProgress;
- (void)handleClickFilterAction;
- (void)setScrollBrowsedFilters:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void)setDisplayLink:(id)arg0;
- (void).cxx_destruct;
- (void)setFilterController:(id)arg0;
- (id)filterController;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)displayLink;
- (void)dealloc;
- (id)currentFilter;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;

@end
