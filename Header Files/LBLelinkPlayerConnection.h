//
//     Generated by private class-dump
//

@class LBLelinkReverseSocket, NSString, LBLelinkPositiveSocket, LBInnerLelinkDeviceModel, NSDate;
@protocol LBLelinkPlayerConnectionDelegate;

@interface LBLelinkPlayerConnection : NSObject <LBLelinkPositiveSocketConnectionDelegate, LBLelinkReverseSocketConnectionDelegate> {
    BOOL _connected;
    LBInnerLelinkDeviceModel *_deviceModel;
    id<LBLelinkPlayerConnectionDelegate> _delegate;
    LBLelinkPositiveSocket *_lelinkPositiveSocket;
    LBLelinkReverseSocket *_lelinkReverseSocket;
    NSString *_sessionId;
    NSString *_uuId;
    NSString *_screenCode;
    NSDate *_startConnectDate;
}

@property (nonatomic, getter=isConnected) BOOL connected;
@property (retain, nonatomic) NSDate *startConnectDate;
@property (retain, nonatomic) LBInnerLelinkDeviceModel *deviceModel;
@property (weak, nonatomic) id<LBLelinkPlayerConnectionDelegate> delegate;
@property (retain, nonatomic) LBLelinkPositiveSocket *lelinkPositiveSocket;
@property (retain, nonatomic) LBLelinkReverseSocket *lelinkReverseSocket;
@property (copy, nonatomic) NSString *sessionId;
@property (copy, nonatomic) NSString *uuId;
@property (copy, nonatomic) NSString *screenCode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)disConnect;
- (id)initWithDeviceModel:(id)arg0 delegate:(id)arg1;
- (void)connectWithInnerLelinkDeviceModel:(id)arg0;
- (void)setStartConnectDate:(id)arg0;
- (id)startConnectDate;
- (void)lelinkBaseSocketDisconnect:(id)arg0;
- (void)lelinkBaseSocket:(id)arg0 connectSucceedToHost:(id)arg1 port:(unsigned short)arg2;
- (void)lelinkBaseSocket:(id)arg0 onError:(id)arg1;
- (void)lelinkBaseSocketVerifySecondReply:(id)arg0;
- (void)lelinkBaseSocketDisconnect:(id)arg0 error:(id)arg1;
- (id)uuId;
- (void)setUuId:(id)arg0;
- (id)lelinkReverseSocket;
- (id)lelinkPositiveSocket;
- (void)lelinkPlayerConnectionErrorWithReport:(id)arg0 isReport:(BOOL)arg1 sn:(id)arg2 et:(id)arg3;
- (id)screenCode;
- (void)setScreenCode:(id)arg0;
- (void)lelinkPlayerConnectionErrorLogUpload:(id)arg0 et:(id)arg1;
- (void)setLelinkPositiveSocket:(id)arg0;
- (void)setLelinkReverseSocket:(id)arg0;
- (void)lelinkPositiveSocket:(id)arg0 playerInfoReply:(id)arg1;
- (void)lelinkReverseSocket:(id)arg0 reverseReply:(id)arg1;
- (void)connect;
- (void)setDeviceModel:(id)arg0;
- (id)init;
- (void)setConnected:(BOOL)arg0;
- (void)setSessionId:(id)arg0;
- (void).cxx_destruct;
- (id)deviceModel;
- (id)sessionId;
- (BOOL)isConnected;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;

@end
