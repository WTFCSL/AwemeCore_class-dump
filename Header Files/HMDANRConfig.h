//
//     Generated by private class-dump
//

@interface HMDANRConfig : HMDTrackerConfig {
    BOOL _enableSample;
    BOOL _ignoreBackground;
    BOOL _ignoreDuplicate;
    BOOL _ignoreBacktrace;
    BOOL _suspend;
    BOOL _enableRunloopMonitorV2;
    int _maxContinuousReportTimes;
    double _timeoutInterval;
    long long _maxUploadCount;
    double _sampleInterval;
    double _sampleTimeoutInterval;
    double _launchThreshold;
    unsigned long long _runloopMonitorThreadSleepInterval;
}

@property (nonatomic) double timeoutInterval;
@property (nonatomic) long long maxUploadCount;
@property (nonatomic) BOOL enableSample;
@property (nonatomic) double sampleInterval;
@property (nonatomic) double sampleTimeoutInterval;
@property (nonatomic) double launchThreshold;
@property (nonatomic) BOOL ignoreBackground;
@property (nonatomic) BOOL ignoreDuplicate;
@property (nonatomic) BOOL ignoreBacktrace;
@property (nonatomic) BOOL suspend;
@property (nonatomic) int maxContinuousReportTimes;
@property (nonatomic) BOOL enableRunloopMonitorV2;
@property (nonatomic) unsigned long long runloopMonitorThreadSleepInterval;

+ (id)hmd_attributeMapDictionary;
+ (void)awe_energy_optimize_hook;
+ (id)configKey;

- (double)launchThreshold;
- (id)getModule;
- (long long)startWeight;
- (BOOL)ignoreDuplicate;
- (void)setIgnoreDuplicate:(BOOL)arg0;
- (void)setLaunchThreshold:(double)arg0;
- (void)setMaxUploadCount:(long long)arg0;
- (void)setSampleTimeoutInterval:(double)arg0;
- (void)setIgnoreBackground:(BOOL)arg0;
- (void)setIgnoreBacktrace:(BOOL)arg0;
- (void)setEnableSample:(BOOL)arg0;
- (int)maxContinuousReportTimes;
- (void)setMaxContinuousReportTimes:(int)arg0;
- (BOOL)enableRunloopMonitorV2;
- (void)setEnableRunloopMonitorV2:(BOOL)arg0;
- (unsigned long long)runloopMonitorThreadSleepInterval;
- (void)setRunloopMonitorThreadSleepInterval:(unsigned long long)arg0;
- (long long)maxUploadCount;
- (BOOL)enableSample;
- (double)sampleTimeoutInterval;
- (BOOL)ignoreBackground;
- (BOOL)ignoreBacktrace;
- (BOOL)awe_energy_optimize_enableRunloopMonitorV2;
- (unsigned long long)awe_energy_optimize_runloopMonitorThreadSleepInterval;
- (void)setTimeoutInterval:(double)arg0;
- (BOOL)isValid;
- (BOOL)suspend;
- (double)sampleInterval;
- (double)timeoutInterval;
- (void)setSampleInterval:(double)arg0;
- (BOOL)canStart;
- (void)setSuspend:(BOOL)arg0;

@end
