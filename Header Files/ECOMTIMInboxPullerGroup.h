//
//     Generated by private class-dump
//

@class ECOMTIMGCDTimer, NSString, ECOMTIMSingleStrategyPuller, ECOMTIMPBResponseLongConnectionCallback;
@protocol ECOMGetUserMessageInitProtocol, ECOMNewMessageNotifyProtocol, ECOMMessageBridge;

@interface ECOMTIMInboxPullerGroup : NSObject <ECOMTIMHistoryMessagePullerProtocol, ECOMTIMInboxPullerGroupDelegate> {
    BOOL _needReportUnread;
    BOOL _needCheck;
    int _inbox;
    long long _userID;
    unsigned long long _option;
    ECOMTIMPBResponseLongConnectionCallback *_notifyNewMessageCallback;
    ECOMTIMSingleStrategyPuller *_perUserPuller;
    ECOMTIMGCDTimer *_cyclePullTimer;
    id<ECOMMessageBridge> _ecomMessageManager;
    id<ECOMGetUserMessageInitProtocol> _ecomUserMessagePuller;
    id<ECOMNewMessageNotifyProtocol> _ecomMewMessageNotifyHanlder;
}

@property (nonatomic) long long userID;
@property (nonatomic) int inbox;
@property BOOL needReportUnread;
@property (retain, nonatomic) ECOMTIMPBResponseLongConnectionCallback *notifyNewMessageCallback;
@property (nonatomic) unsigned long long option;
@property (retain, nonatomic) ECOMTIMSingleStrategyPuller *perUserPuller;
@property (retain, nonatomic) ECOMTIMGCDTimer *cyclePullTimer;
@property (nonatomic) BOOL needCheck;
@property (retain, nonatomic) id<ECOMMessageBridge> ecomMessageManager;
@property (retain, nonatomic) id<ECOMGetUserMessageInitProtocol> ecomUserMessagePuller;
@property (retain, nonatomic) id<ECOMNewMessageNotifyProtocol> ecomMewMessageNotifyHanlder;
@property (readonly) long long perUserCursor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)couldUseNewPullerRefactor:(int)arg0;
+ (id)sharedOperationQueue;

- (id)notifyNewMessageCallback;
- (void)setNotifyNewMessageCallback:(id)arg0;
- (void)getConfigsWithNeedCheckConversationIntegrity:(BOOL)arg0;
- (void)setNeedsPullPerUserWithReason:(long long)arg0;
- (void)loadOlderMsgesRemedialyFromConversationId:(id)arg0 anchorMsgId:(id)arg1 msgesCount:(long long)arg2 priorityUseDB:(BOOL)arg3 forcePullRemote:(BOOL)arg4 currentMinIndexV2:(long long)arg5 currentMaxIndexV2:(long long)arg6 completionBlock:(id /* block */)arg7;
- (BOOL)checkContinousInRangeWithMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 inConversation:(id)arg2 emptyRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg3 includeRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg4 intersectantRangeStrs:(id)arg5;
- (void)remoteLoadMessagesBetweenMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 direction:(unsigned long long)arg2 inConversation:(id)arg3 completionBlock:(id /* block */)arg4;
- (BOOL)checkContinousInRangeWithMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 inConversation:(id)arg2 emptyRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg3 includeRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg4;
- (void)fetchAllMessagesFromConversationIdentifier:(id)arg0 minIndexV2:(long long)arg1 maxIndexV2:(long long)arg2 shouldCancelBlock:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 visibleLimit:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 limit:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadHistoryForConversation:(id)arg0 beforeIndex:(long long)arg1 totalCount:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadMessagesForConversation:(id)arg0 anchorMessage:(id)arg1 visibleLimit:(unsigned long long)arg2 direction:(unsigned long long)arg3 shouldContainBoundaryMessage:(BOOL)arg4 completionBlock:(id /* block */)arg5;
- (BOOL)checkContinousInRangeWithMinIndexV1:(long long)arg0 maxIndexV1:(long long)arg1 inConversation:(id)arg2;
- (void)getMessagesCheckInfoInInbox:(int)arg0 conversationShortId:(long long)arg1 conversationId:(id)arg2 conversationType:(int)arg3 cursorReverseBegin:(long long)arg4 cursorReverseEnd:(long long)arg5 expectMsgTotalCount:(int)arg6 completionBlock:(id /* block */)arg7;
- (void)fetchMessagesForConversation:(id)arg0 completionBlock:(id /* block */)arg1;
- (void)getMessagesWithIndexV2s:(id)arg0 Inbox:(int)arg1 conversationShortId:(long long)arg2 conversationId:(id)arg3 conversationType:(int)arg4 completionBlock:(id /* block */)arg5;
- (void)setNeedCheck:(BOOL)arg0;
- (void)setNeedReportUnread:(BOOL)arg0;
- (BOOL)isECOM;
- (void)setEcomMessageManager:(id)arg0;
- (id)ecomMessageManager;
- (void)setEcomUserMessagePuller:(id)arg0;
- (void)setEcomMewMessageNotifyHanlder:(id)arg0;
- (id)ecomMewMessageNotifyHanlder;
- (void)setPerUserPuller:(id)arg0;
- (id)perUserPuller;
- (id)ecomUserMessagePuller;
- (void)_local_loadMessagesForConversation:(id)arg0 anchorMessage:(id)arg1 visible:(BOOL)arg2 limit:(unsigned long long)arg3 direction:(unsigned long long)arg4 shouldContainBoundaryMessage:(BOOL)arg5 completionBlock:(id /* block */)arg6;
- (void)_remote_loadMessagesForConversation:(id)arg0 anchorMessage:(id)arg1 limit:(unsigned long long)arg2 allowNetwork:(BOOL)arg3 direction:(unsigned long long)arg4 shouldContainBoundaryMessage:(BOOL)arg5 completionBlock:(id /* block */)arg6;
- (void)_remote_loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 visibleLimit:(unsigned long long)arg2 container:(id)arg3 completionBlock:(id /* block */)arg4;
- (BOOL)needReportUnread;
- (BOOL)needCheck;
- (id)cyclePullTimer;
- (void)cyclePull;
- (void)setCyclePullTimer:(id)arg0;
- (void)_local_loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 visible:(BOOL)arg2 limit:(unsigned long long)arg3 completionBlock:(id /* block */)arg4;
- (void)_remote_loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 limit:(unsigned long long)arg2 allowNetwork:(BOOL)arg3 completionBlock:(id /* block */)arg4;
- (void)_forceRemoteLoadMessagesBeforeIndex:(long long)arg0 inConversation:(id)arg1 reason:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_loadHistoryForConversation:(id)arg0 beforeIndex:(long long)arg1 currentCount:(unsigned long long)arg2 totalCount:(unsigned long long)arg3 completionBlock:(id /* block */)arg4;
- (void)_forceRemoteLoadMessagesWithIndex:(long long)arg0 inConversation:(id)arg1 reason:(id)arg2 direction:(unsigned long long)arg3 shouldContainBoundaryMessage:(BOOL)arg4 completionBlock:(id /* block */)arg5;
- (id)initWithInbox:(int)arg0 userID:(long long)arg1 option:(unsigned long long)arg2;
- (long long)perUserCursor;
- (void)getMessageByServerMessageID:(long long)arg0 conversationShortId:(long long)arg1 conversationId:(id)arg2 conversationType:(int)arg3 completionBlock:(id /* block */)arg4;
- (id)_filterTopMessagesWithoutIndexV2WithMessages:(id)arg0 maxOrderIndex:(long long)arg1;
- (id)_filterMessagesBetweenMinAndMaxIndexV2:(id)arg0;
- (long long)userID;
- (void).cxx_destruct;
- (void)setUserID:(long long)arg0;
- (void)setOption:(unsigned long long)arg0;
- (void)kickoff;
- (int)inbox;
- (unsigned long long)option;
- (void)setInbox:(int)arg0;

@end
