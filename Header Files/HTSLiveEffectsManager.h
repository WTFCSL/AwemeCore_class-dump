//
//     Generated by private class-dump
//

@class RACSubject, NSDate, NSObject, IESLiveCountTimer, IESLiveEffectsDownloadOptimizeStrategyConfig, IESLiveGuestFaceGiftResourceMgr, IESLiveThreadSafeDictionary, NSString, NSSet, IESLiveGiftAlgorithmDownloader, IESLiveEffectsDownloadTaskStore, HTSLiveGiftSyncManager, NSArray, IESLiveGiftSyncOperation;
@protocol IESLiveEffectsAPI, IESLiveHTTPTask, OS_dispatch_queue, IESLiveMonitor;

@interface HTSLiveEffectsManager : NSObject <IESLiveEffectsManagerService> {
    BOOL _inLiveRoom;
    BOOL _downloading;
    BOOL _enable265;
    BOOL _enable265Super;
    BOOL _enableSpeedLimit;
    BOOL _hasPreloaded;
    BOOL _optimizeEffectDownload;
    BOOL _lruEffectsIgnoreLimit;
    BOOL _lruEffectsIgnoreLimitSendBySelf;
    BOOL _fixThreadSafeIssue;
    BOOL _enableZipSweepPromoteUse;
    int _displayPriority;
    id<IESLiveEffectsAPI> _effectsApi;
    HTSLiveGiftSyncManager *_syncManager;
    IESLiveGiftAlgorithmDownloader *_algorithmDownloader;
    IESLiveThreadSafeDictionary *_remoteEffectMap;
    NSDate *_firstRemoteEffectMapFetchDate;
    NSDate *_lastRemoteEffectMapArchiveDate;
    NSString *_channelName;
    RACSubject *_effectListUpdatedSubject;
    RACSubject *_effectDownloadedSubject;
    RACSubject *_effectModelsNRequirementsReadySubject;
    IESLiveThreadSafeDictionary *_effectDownloadLastDateDic;
    id<IESLiveMonitor> _monitor;
    NSObject *_downloadingToken;
    id<IESLiveHTTPTask> _fetchEffectListTask;
    IESLiveThreadSafeDictionary *_downloadPriorityMap;
    IESLiveGiftSyncOperation *_giftSyncOperation;
    IESLiveGuestFaceGiftResourceMgr *_guestFaceGiftResoureceMgr;
    IESLiveEffectsDownloadTaskStore *_downloadTaskStore;
    NSObject<OS_dispatch_queue> *_effectQueue;
    IESLiveEffectsDownloadOptimizeStrategyConfig *_downloadOptimizeStrategyConfig;
    NSArray *_zipSweepMarkAssetsArray;
    IESLiveThreadSafeDictionary *_assetUsedTimeRecord;
    IESLiveCountTimer *_resourceStratefyCleanTimer;
    IESLiveThreadSafeDictionary *_assetDownloadTimesRecord;
    NSDate *_lastFetchFullEffectListDate;
    NSDate *_lastDeleteInvalidCacheWithGiftListDate;
    double _deleteInvalidCacheWithGiftListTimeInterval;
    double _fetchFullEffectListTimeInterval;
    double _effectDownloadTimeInterval;
    unsigned long long _disableDownloadPriority;
    NSSet *_lynxRelatedAssetIDs;
}

@property (retain, nonatomic) id<IESLiveEffectsAPI> effectsApi;
@property (retain, nonatomic) HTSLiveGiftSyncManager *syncManager;
@property (retain, nonatomic) IESLiveGiftAlgorithmDownloader *algorithmDownloader;
@property (retain, nonatomic) IESLiveThreadSafeDictionary *remoteEffectMap;
@property (retain, nonatomic) NSDate *firstRemoteEffectMapFetchDate;
@property (retain, nonatomic) NSDate *lastRemoteEffectMapArchiveDate;
@property (copy, nonatomic) NSString *channelName;
@property (retain, nonatomic) RACSubject *effectListUpdatedSubject;
@property (retain, nonatomic) RACSubject *effectDownloadedSubject;
@property (retain, nonatomic) RACSubject *effectModelsNRequirementsReadySubject;
@property (retain, nonatomic) IESLiveThreadSafeDictionary *effectDownloadLastDateDic;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (nonatomic) BOOL downloading;
@property (retain) NSObject *downloadingToken;
@property (retain, nonatomic) id<IESLiveHTTPTask> fetchEffectListTask;
@property (nonatomic) BOOL enable265;
@property (nonatomic) BOOL enable265Super;
@property (copy, nonatomic) IESLiveThreadSafeDictionary *downloadPriorityMap;
@property (nonatomic) BOOL enableSpeedLimit;
@property (retain, nonatomic) IESLiveGiftSyncOperation *giftSyncOperation;
@property (retain, nonatomic) IESLiveGuestFaceGiftResourceMgr *guestFaceGiftResoureceMgr;
@property (retain, nonatomic) IESLiveEffectsDownloadTaskStore *downloadTaskStore;
@property (nonatomic) BOOL hasPreloaded;
@property (nonatomic) int displayPriority;
@property (nonatomic) BOOL optimizeEffectDownload;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *effectQueue;
@property (retain, nonatomic) IESLiveEffectsDownloadOptimizeStrategyConfig *downloadOptimizeStrategyConfig;
@property (retain, nonatomic) NSArray *zipSweepMarkAssetsArray;
@property (retain, nonatomic) IESLiveThreadSafeDictionary *assetUsedTimeRecord;
@property (retain, nonatomic) IESLiveCountTimer *resourceStratefyCleanTimer;
@property (retain, nonatomic) IESLiveThreadSafeDictionary *assetDownloadTimesRecord;
@property (retain, nonatomic) NSDate *lastFetchFullEffectListDate;
@property (retain, nonatomic) NSDate *lastDeleteInvalidCacheWithGiftListDate;
@property (nonatomic) double deleteInvalidCacheWithGiftListTimeInterval;
@property (nonatomic) double fetchFullEffectListTimeInterval;
@property (nonatomic) double effectDownloadTimeInterval;
@property (nonatomic) unsigned long long disableDownloadPriority;
@property (retain, nonatomic) NSSet *lynxRelatedAssetIDs;
@property (nonatomic) BOOL lruEffectsIgnoreLimit;
@property (nonatomic) BOOL lruEffectsIgnoreLimitSendBySelf;
@property (nonatomic) BOOL fixThreadSafeIssue;
@property (nonatomic) BOOL enableZipSweepPromoteUse;
@property BOOL inLiveRoom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)defaultManager;

- (void)preloadEffectIfNeeded:(id /* block */)arg0;
- (id)cacheItem;
- (void)setHasPreloaded:(BOOL)arg0;
- (BOOL)hasPreloaded;
- (id)effectWithID:(id)arg0;
- (void)fetchEffectListWithIDList:(id)arg0 liveRoomModel:(id)arg1 type:(long long)arg2 completion:(id /* block */)arg3;
- (BOOL)shouldEnable265SuperWithEffectId:(id)arg0;
- (id)effectWithoutResourceCheckWithID:(id)arg0;
- (void)fetchEffectListForced:(BOOL)arg0 type:(long long)arg1 liveRoomModel:(id)arg2 tintTags:(id)arg3;
- (id)zipSweepMarkAssetsArray;
- (void)setupEffectCleanPolicy;
- (void)setupDownloadPriorityQueuePolicy;
- (void)setEnable265:(BOOL)arg0;
- (void)setEnable265Super:(BOOL)arg0;
- (void)p_migrateLiveEffectResources;
- (void)setEnableSpeedLimit:(BOOL)arg0;
- (id)assetUsedTimeRecord;
- (id)assetDownloadTimesRecord;
- (void)cancelDownloadTaskWithPriority:(unsigned long long)arg0;
- (id)giftSyncOperation;
- (void)triggerResourceCleanStrategyIfNeededWithInLiveRoom:(BOOL)arg0;
- (void)loadCachedEffectMap:(BOOL)arg0 completion:(id /* block */)arg1;
- (id)effectDownloadLastDateDic;
- (BOOL)remoteEffectMapIsEmpty;
- (id)remoteEffectMap;
- (void)realDownloadUsingPriorityWithEffectList:(id)arg0 type:(long long)arg1 handleInCallerThread:(BOOL)arg2 liveRoomModel:(id)arg3;
- (void)fetchEffectListWithRoomModel:(id)arg0 type:(long long)arg1 tintTags:(id)arg2 forAssetIDs:(id)arg3 backgroundThread:(BOOL)arg4 completionBlock:(id /* block */)arg5;
- (BOOL)optimizeEffectDownload;
- (BOOL)lruEffectsIgnoreLimit;
- (BOOL)lruEffectsIgnoreLimitSendBySelf;
- (void)p_downloadRequirementsWithAsset:(id)arg0;
- (double)effectDownloadTimeInterval;
- (void)_downloadEPModelWithAssets:(id)arg0;
- (id)createGiftSyncModelWithAsset:(id)arg0;
- (void)downloadUsePriorityQueueWithResources:(id)arg0 type:(long long)arg1 downloadPriority:(unsigned long long)arg2 handleInCallerThread:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)downloadEffectResources:(id)arg0 type:(long long)arg1 completion:(id /* block */)arg2;
- (id)downloadOptimizeStrategyConfig;
- (id)lastFetchFullEffectListDate;
- (double)fetchFullEffectListTimeInterval;
- (void)setLastFetchFullEffectListDate:(id)arg0;
- (id)generateLocalAssetInfoString;
- (id)_obtainExtraInfoFromAssetList:(id)arg0;
- (void)_monitorGiftDiskStatusIfNeeded;
- (void)setZipSweepMarkAssetsArray:(id)arg0;
- (void)updateAndSyncEffectList:(id)arg0 fromRemote:(BOOL)arg1 enableMerge:(BOOL)arg2 fetchMomentType:(long long)arg3 inCurrentThread:(BOOL)arg4 completion:(id /* block */)arg5;
- (void)_recordLogIFetchRemoteEffectList:(id)arg0 type:(long long)arg1;
- (id)effectListUpdatedSubject;
- (id)effectsApi;
- (void)setFetchEffectListTask:(id)arg0;
- (void)updateAssetUsedTimeRecordWithID:(id)arg0;
- (void)setRemoteEffectMap:(id)arg0;
- (void)saveCachedEffectMap;
- (void)deleteInvalidCacheWithGiftList:(id)arg0;
- (BOOL)enableZipSweepPromoteUse;
- (void)_downloadEPModelWithAssets:(id)arg0 needAsync:(BOOL)arg1 optimizeHandling:(BOOL)arg2;
- (BOOL)liveEffectDownloadOptimizeUseGiftDisplayPriority;
- (id)downloadPriorityMap;
- (long long)localResourceTypeWithAsset:(id)arg0;
- (id)downloadingToken;
- (id)effectDownloadedSubject;
- (void)updateAndEffectMapWithResource:(id)arg0;
- (void)monitorNewResourcesDownload:(id)arg0 totalTime:(double)arg1;
- (void)_recordLogICompleteDownload:(id)arg0 type:(long long)arg1 downloadCostTime:(double)arg2;
- (void)_recordLogIStartDownloadingResources:(id)arg0 type:(long long)arg1;
- (id)guestFaceGiftResoureceMgr;
- (void)downloadGuestFaceGiftResource:(id)arg0 type:(long long)arg1;
- (void)occupyAssets:(id)arg0;
- (void)unoccupyAssets:(id)arg0;
- (id)downloadTaskStore;
- (void)_recordLogILoadLocalEffectList:(id)arg0;
- (id)firstRemoteEffectMapFetchDate;
- (void)setFirstRemoteEffectMapFetchDate:(id)arg0;
- (id)lastRemoteEffectMapArchiveDate;
- (void)setLastRemoteEffectMapArchiveDate:(id)arg0;
- (BOOL)_isRequirementsAndModelsReady:(id)arg0;
- (double)deleteInvalidCacheWithGiftListTimeInterval;
- (id)lastDeleteInvalidCacheWithGiftListDate;
- (void)setLastDeleteInvalidCacheWithGiftListDate:(id)arg0;
- (BOOL)liveExistResourceWithID:(id)arg0 md5:(id)arg1;
- (BOOL)enable265Super;
- (BOOL)enable265;
- (id)p_liveEffectResourcePath;
- (BOOL)cleanLiveGiftEffectsThroughForeground;
- (BOOL)cleanLiveGiftEffectsThoughLowDiskWithExtraParams:(id)arg0;
- (BOOL)inLiveRoom;
- (BOOL)fixThreadSafeIssue;
- (BOOL)enableSpeedLimit;
- (id)getLiveGiftEffectsReportInfoWithVisitType:(long long)arg0;
- (BOOL)cleanLiveGiftEffectsWithVisitType:(long long)arg0 extraParams:(id)arg1;
- (id)algorithmDownloader;
- (id)effectModelsNRequirementsReadySubject;
- (void)setDownloadOptimizeStrategyConfig:(id)arg0;
- (void)setAssetUsedTimeRecord:(id)arg0;
- (void)setAssetDownloadTimesRecord:(id)arg0;
- (void)cancelResourceStrategyCleanTimer;
- (void)resetResourceStrategyCleanTimer;
- (id)resourceStratefyCleanTimer;
- (void)setResourceStratefyCleanTimer:(id)arg0;
- (void)cleanLiveGiftEffectsThroughResourceCleanStrategy;
- (BOOL)liveEffectDownloadOptimizeGiftDisplayImmediatelyFullEnable;
- (BOOL)liveEffectDownloadOptimizeGiftDisplayImmediatelyPartlyEnable;
- (BOOL)liveEffectDownloadOptimizeGiftDisplayImmediatelyAllTabExceptPropertyEnable;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })liveEffectDownloadOptimizeGiftDisplayImmediatelyPartlyGiftRange;
- (void)generateGuestFaceGiftResourceAssetIdArrayWithGiftList:(id)arg0 type:(long long)arg1;
- (id)lynxRelatedAssetIDs;
- (BOOL)canFreeDisplayWithID:(id)arg0;
- (id)onEffectListChanged;
- (id)onEffectDownloaded;
- (id)onEffectModelsNRequirementsDownloaded;
- (void)cleanAllLiveGiftEffects;
- (void)deleteDownloadedAssetWithIdsArray:(id)arg0;
- (void)setDownloadPriorityMap:(id)arg0;
- (void)updateLocalEffects:(id)arg0 forError:(id)arg1 currentPath:(id)arg2;
- (void)downloadGuestFaceGiftResource;
- (BOOL)hasEffectDataFromCache;
- (void)asyncLoadCachedEffectMapIfNeedWithCompletion:(id /* block */)arg0;
- (void)debugCancelDownloadTaskWithPriority:(long long)arg0;
- (void)setLynxRelatedAssetIDs:(id)arg0;
- (void)setInLiveRoom:(BOOL)arg0;
- (void)updateDownloadBehaviorWithPriority:(unsigned long long)arg0 enableDownload:(BOOL)arg1;
- (id)getAssetLocalPathWithAssetIds:(id)arg0;
- (void)setEffectsApi:(id)arg0;
- (void)setAlgorithmDownloader:(id)arg0;
- (void)setEffectListUpdatedSubject:(id)arg0;
- (void)setEffectDownloadedSubject:(id)arg0;
- (void)setEffectModelsNRequirementsReadySubject:(id)arg0;
- (void)setEffectDownloadLastDateDic:(id)arg0;
- (void)setDownloadingToken:(id)arg0;
- (id)fetchEffectListTask;
- (void)setGiftSyncOperation:(id)arg0;
- (void)setGuestFaceGiftResoureceMgr:(id)arg0;
- (void)setDownloadTaskStore:(id)arg0;
- (void)setOptimizeEffectDownload:(BOOL)arg0;
- (void)setDeleteInvalidCacheWithGiftListTimeInterval:(double)arg0;
- (void)setFetchFullEffectListTimeInterval:(double)arg0;
- (void)setEffectDownloadTimeInterval:(double)arg0;
- (unsigned long long)disableDownloadPriority;
- (void)setDisableDownloadPriority:(unsigned long long)arg0;
- (void)setLruEffectsIgnoreLimit:(BOOL)arg0;
- (void)setLruEffectsIgnoreLimitSendBySelf:(BOOL)arg0;
- (void)setFixThreadSafeIssue:(BOOL)arg0;
- (void)setEnableZipSweepPromoteUse:(BOOL)arg0;
- (int)displayPriority;
- (id)init;
- (void).cxx_destruct;
- (id)monitor;
- (id)channelName;
- (void)setSyncManager:(id)arg0;
- (void)setMonitor:(id)arg0;
- (void)setDisplayPriority:(int)arg0;
- (id)syncManager;
- (BOOL)downloading;
- (void)setDownloading:(BOOL)arg0;
- (void)dealloc;
- (void)applicationWillTerminate;
- (id)effectQueue;
- (void)setEffectQueue:(id)arg0;
- (void)setChannelName:(id)arg0;

@end
