//
//     Generated by private class-dump
//

@class NSArray, NSHashTable;
@protocol IESFalconInterceptionDelegate;

@interface IESFalconManager : NSObject

@property (class, retain) id<IESFalconInterceptionDelegate> interceptionDelegate;
@property (class, nonatomic) BOOL interceptionLock;
@property (class, nonatomic) BOOL webpDecodeEnable;
@property (class, nonatomic) BOOL interceptionDisableWKHttpScheme;
@property (class, nonatomic) BOOL interceptionWKHttpScheme;
@property (class, nonatomic) BOOL interceptionEnable;
@property (class, nonatomic) BOOL interceptionInstanceLevelEnable;
@property (class, copy, nonatomic) id /* block */ defaultUABlock;
@property (class, nonatomic) BOOL interceptionUseFalconURLSchemaHandle;
@property (class, readonly, nonatomic) NSHashTable *monitorInterceptors;
@property (class, readonly, copy, nonatomic) NSArray *customInterceptors;

+ (void)setInterceptionEnable:(BOOL)arg0;
+ (void)addInterceptor:(id)arg0;
+ (void)bdw_URLProtocolTask:(id)arg0 didReceiveResponse:(id)arg1;
+ (void)removeInterceptor:(id)arg0;
+ (void)bdw_URLProtocolTask:(id)arg0 didLoadData:(id)arg1;
+ (void)bdw_URLProtocolTaskDidFinishLoading:(id)arg0;
+ (void)bdw_URLProtocolTask:(id)arg0 didFailWithError:(id)arg1;
+ (void)bdw_URLProtocolTask:(id)arg0 didPerformRedirection:(id)arg1 newRequest:(id)arg2;
+ (id)falconDataForURLRequest:(id)arg0;
+ (BOOL)shouldInterceptForRequest:(id)arg0;
+ (id)falconMetaDataForURLRequest:(id)arg0 webView:(id)arg1;
+ (id)falconMetaDataForURLRequest:(id)arg0;
+ (void)registerCustomInterceptor:(id)arg0;
+ (void)registerPatterns:(id)arg0 forGurdAccessKey:(id)arg1;
+ (void)registerPattern:(id)arg0 forGurdAccessKey:(id)arg1;
+ (BOOL)interceptionEnable;
+ (void)setWebpDecodeEnable:(BOOL)arg0;
+ (BOOL)webpDecodeEnable;
+ (void)setInterceptionUseFalconURLSchemaHandle:(BOOL)arg0;
+ (void)setInterceptionWKHttpScheme:(BOOL)arg0;
+ (void)callingOutFalconInterceptedRequest:(id)arg0 willLoadFromCache:(BOOL)arg1;
+ (BOOL)willBlockRequest:(id)arg0;
+ (id)willDecorateRequest:(id)arg0;
+ (void)willDecorateURLProtocolTask:(id)arg0;
+ (void)webView:(id)arg0 loadRequest:(id)arg1 metaData:(id)arg2;
+ (void)unregisterCustomInterceptor:(id)arg0;
+ (void)registerPattern:(id)arg0 forSearchPath:(id)arg1;
+ (void)registerPatterns:(id)arg0 forSearchPath:(id)arg1;
+ (void)unregisterPatterns:(id)arg0;
+ (id)interceptionDelegate;
+ (void)createFileInterceptorIfNeeded;
+ (void)createGurdInterceptorIfNeeded;
+ (unsigned long long)_findCustomInterceptionInsertIndex:(id)arg0 mutableContainer:(id)arg1;
+ (BOOL)shouldInterceptForRequest:(id)arg0 webView:(id)arg1;
+ (id)monitorInterceptors;
+ (id)__webviewWithUserAgent:(id)arg0;
+ (BOOL)interceptionInstanceLevelEnable;
+ (id)_customInterceptionFalconMetaDataForURLRequest:(id)arg0 additionalInterceptors:(id)arg1 disableGlobalInterceptors:(BOOL)arg2;
+ (id)_defaultInterceptionFalconMetaDataForURLRequest:(id)arg0;
+ (void)recordFalconMetaData:(id)arg0 forRequest:(id)arg1;
+ (id)_metaDataWithRequest:(id)arg0 interceptor:(id)arg1;
+ (BOOL)interceptionWKHttpScheme;
+ (BOOL)interceptionLock;
+ (BOOL)interceptionDisableWKHttpScheme;
+ (BOOL)interceptionUseFalconURLSchemaHandle;
+ (BOOL)__decoratedWebView:(id)arg0 withUUID:(id)arg1;
+ (id /* block */)defaultUABlock;
+ (id)__weakWebViewTable;
+ (id)__uuidFromUserAgent:(id)arg0 withPrefix:(id)arg1;
+ (id)falconDataForURLRequest:(id)arg0 webView:(id)arg1;
+ (id)_customInterceptionFalconMetaDataForURLRequest:(id)arg0;
+ (void)setInterceptionDisableWKHttpScheme:(BOOL)arg0;
+ (void)setInterceptionLock:(BOOL)arg0;
+ (void)setInterceptionDelegate:(id)arg0;
+ (id)customInterceptors;
+ (id)fetchGlobalMonitorsFromWebInterceptor;
+ (void)setInterceptionInstanceLevelEnable:(BOOL)arg0;
+ (void)setDefaultUABlock:(id /* block */)arg0;
+ (BOOL)decorateFalconWebView:(id)arg0 withUUID:(id)arg1;
+ (void)decoratedFalconUserAgentWithWebView:(id)arg0;
+ (id)webviewWithUserAgent:(id)arg0;
+ (void)initialize;
+ (void)webView:(id)arg0 didFinishNavigation:(id)arg1;

@end
