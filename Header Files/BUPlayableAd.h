//
//     Generated by private class-dump
//

@class UIView, NSString, NSArray, NSTimer, NSMutableDictionary, BUPlayableSafeArray, BUPlayableSafeDictionary, NSMutableArray, UIViewController, NSDictionary, UIScrollView;
@protocol BUPlayableAdDelegate, BUPlayableHapticPlayer, BUPInnerContainerProtocol;

@interface BUPlayableAd : NSObject {
    struct { BOOL webViewDidStartLoadFlag; BOOL webViewDidFinishLoadFlag; BOOL webViewDidFailLoadWithErrorFlag; BOOL webViewDidClose; } flags;
    BOOL _manualRegisterJSB;
    BOOL _isPrerender;
    BOOL _mute;
    BOOL _isContainerViewShow;
    BOOL _disablePlayableClickReport;
    BOOL _isDebug;
    BOOL _isPlayableFinish;
    BOOL _cancelDetectTask;
    BOOL _openBlankDetectFlag;
    BOOL _firstViewable;
    BOOL _firstInvisible;
    BOOL _loadJSSDKSuccess;
    BOOL _hasHandleError;
    BOOL _isPreload;
    BOOL _hasCaptureStuck;
    BOOL _userHasWaitedPlayableAd;
    BOOL _playableGlobalViewable;
    unsigned long long _renderType;
    unsigned long long _scenesType;
    UIView *_containerView;
    UIViewController *_viewController;
    UIView *_containerSuperView;
    UIViewController *_containerViewController;
    UIScrollView *_feedScrollView;
    id<BUPlayableAdDelegate> _delegate;
    NSString *_playableStyle;
    NSString *_idfaString;
    NSString *_deviceId;
    NSDictionary *_appInfoExt;
    NSString *_playable_url;
    NSString *_geckoKey;
    NSString *_geckoChannel;
    NSString *_gameId;
    NSDictionary *_hg_params;
    NSString *_appName;
    double _containerTimeout;
    double _jsSDKTimeout;
    NSString *_cid;
    NSArray *_playableAdAllPiperArray;
    long long _replayCount;
    long long _retryCount;
    long long _playableSequence;
    NSString *_playableCurrentSection;
    unsigned long long _playableEnterFrom;
    unsigned long long _playableLeft;
    unsigned long long _playableBackgroundShowType;
    long long _webLoadStatus;
    double _safeAreaTopHeightRatio;
    double _safeAreaBottomHeightRatio;
    double _autoDetectTimeInterval;
    double _manualDetectTimeInterval;
    NSString *_playableCardSession;
    NSString *_playableVideoSession;
    NSString *_lynxVersion;
    NSString *_itemID;
    id<BUPInnerContainerProtocol> _playableContainer;
    BUPlayableSafeDictionary *_logDictinary;
    BUPlayableSafeArray *_interceptArray;
    BUPlayableSafeArray *_switchBackgroundArray;
    NSMutableDictionary *_logH5Dictinary;
    NSString *_session_id;
    long long _user_perception_start_timestamp;
    long long _detect_stuck_timestamp;
    long long _page_show_timestamp;
    long long _page_load_timestamp;
    long long _page_load_finish_timestamp;
    long long _page_viewable_timestamp;
    long long _page_viewable_renderStart;
    long long _page_viewable_renderFinish;
    long long _page_show_duration;
    long long _page_material_interactable_load_duration;
    long long _res_request_times;
    long long _res_hit_times;
    long long _playable_back_count;
    long long _playable_leave_count;
    NSTimer *_jsbConnectingTimer;
    long long _webViewStatus;
    NSArray *_hostExistPiperArray;
    NSMutableArray *_playableAdJSBArray;
    NSString *_playableNetworkType;
    long long _detectStuckSendPingTime;
    long long _detectStuckReceivePongTime;
    id<BUPlayableHapticPlayer> _hapticPlayer;
}

@property (retain, nonatomic) UIView *containerView;
@property (retain, nonatomic) id<BUPInnerContainerProtocol> playableContainer;
@property (retain, nonatomic) BUPlayableSafeDictionary *logDictinary;
@property (retain, nonatomic) BUPlayableSafeArray *interceptArray;
@property (retain, nonatomic) BUPlayableSafeArray *switchBackgroundArray;
@property (retain, nonatomic) NSMutableDictionary *logH5Dictinary;
@property (copy, nonatomic) NSString *session_id;
@property (nonatomic) long long user_perception_start_timestamp;
@property (nonatomic) long long detect_stuck_timestamp;
@property (nonatomic) long long page_show_timestamp;
@property (nonatomic) long long page_load_timestamp;
@property (nonatomic) long long page_load_finish_timestamp;
@property (nonatomic) long long page_viewable_timestamp;
@property (nonatomic) long long page_viewable_renderStart;
@property (nonatomic) long long page_viewable_renderFinish;
@property (nonatomic) long long page_show_duration;
@property (nonatomic) long long page_material_interactable_load_duration;
@property (nonatomic) long long res_request_times;
@property (nonatomic) long long res_hit_times;
@property (nonatomic) long long playable_back_count;
@property (nonatomic) long long playable_leave_count;
@property (nonatomic) BOOL firstViewable;
@property (nonatomic) BOOL firstInvisible;
@property (retain, nonatomic) NSTimer *jsbConnectingTimer;
@property (nonatomic) long long webViewStatus;
@property (readonly, nonatomic) BOOL isPlayableShow;
@property (copy, nonatomic) NSArray *hostExistPiperArray;
@property (copy, nonatomic) NSArray *playableAdAllPiperArray;
@property (retain, nonatomic) NSMutableArray *playableAdJSBArray;
@property (nonatomic) BOOL loadJSSDKSuccess;
@property (nonatomic) BOOL hasHandleError;
@property (nonatomic) BOOL isPreload;
@property (nonatomic) BOOL hasCaptureStuck;
@property (copy, nonatomic) NSString *playableNetworkType;
@property (nonatomic) BOOL userHasWaitedPlayableAd;
@property (nonatomic) long long detectStuckSendPingTime;
@property (nonatomic) long long detectStuckReceivePongTime;
@property (nonatomic) BOOL playableGlobalViewable;
@property (retain, nonatomic) id<BUPlayableHapticPlayer> hapticPlayer;
@property (readonly, nonatomic) unsigned long long renderType;
@property (nonatomic) unsigned long long scenesType;
@property (weak, nonatomic) UIViewController *viewController;
@property (readonly, nonatomic) BOOL manualRegisterJSB;
@property (nonatomic) BOOL isPrerender;
@property (retain, nonatomic) UIView *containerSuperView;
@property (weak, nonatomic) UIViewController *containerViewController;
@property (weak, nonatomic) UIScrollView *feedScrollView;
@property (weak, nonatomic) id<BUPlayableAdDelegate> delegate;
@property (copy, nonatomic) NSString *playableStyle;
@property (copy, nonatomic) NSString *idfaString;
@property (copy, nonatomic) NSString *deviceId;
@property (copy, nonatomic) NSDictionary *appInfoExt;
@property (copy, nonatomic) NSString *playable_url;
@property (copy, nonatomic) NSString *geckoKey;
@property (copy, nonatomic) NSString *geckoChannel;
@property (copy, nonatomic) NSString *gameId;
@property (copy, nonatomic) NSDictionary *hg_params;
@property (copy, nonatomic) NSString *appName;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL isContainerViewShow;
@property (nonatomic) double containerTimeout;
@property (nonatomic) double jsSDKTimeout;
@property (nonatomic) BOOL disablePlayableClickReport;
@property (nonatomic) BOOL isDebug;
@property (copy, nonatomic) NSString *cid;
@property (nonatomic) long long replayCount;
@property (nonatomic) long long retryCount;
@property (nonatomic) long long playableSequence;
@property (copy, nonatomic) NSString *playableCurrentSection;
@property (nonatomic) unsigned long long playableEnterFrom;
@property (nonatomic) unsigned long long playableLeft;
@property (nonatomic) unsigned long long playableBackgroundShowType;
@property (nonatomic) BOOL isPlayableFinish;
@property (nonatomic) long long webLoadStatus;
@property (nonatomic) BOOL cancelDetectTask;
@property (nonatomic) double safeAreaTopHeightRatio;
@property (nonatomic) double safeAreaBottomHeightRatio;
@property (nonatomic) double autoDetectTimeInterval;
@property (nonatomic) double manualDetectTimeInterval;
@property (copy, nonatomic) NSString *playableCardSession;
@property (copy, nonatomic) NSString *playableVideoSession;
@property (copy, nonatomic) NSString *lynxVersion;
@property (nonatomic) BOOL openBlankDetectFlag;
@property (copy, nonatomic) NSString *itemID;

+ (id)shareProcessPool;

- (void)fireEvent:(id)arg0 params:(id)arg1;
- (void)trackEvent:(id)arg0 params:(id)arg1;
- (id)logExtraDic;
- (unsigned long long)renderType;
- (BOOL)isPreload;
- (void)setIsPreload:(BOOL)arg0;
- (id)feedScrollView;
- (BOOL)isLynx;
- (void)handlePlayableViewClose;
- (void)setIsContainerViewShow:(BOOL)arg0;
- (id)interceptArray;
- (void)handlePlayableViewFrameChange;
- (void)handleContainerViewDidStartLoad:(id)arg0;
- (void)handleContainerViewDidFinishLoad:(id)arg0;
- (void)handleContainerView:(id)arg0 didFailLoadWithError:(id)arg1;
- (void)jsCallNative_webview_time_trackWithParams:(id)arg0;
- (BOOL)csj_responseToJSBMethod:(id)arg0;
- (id)csj_excuteJSBMethod:(id)arg0 params:(id)arg1;
- (id)initWithExistPiperArray:(id)arg0 piperDelegate:(id)arg1;
- (void)configWithContainerView:(id)arg0;
- (void)setContainerTimeout:(double)arg0;
- (void)setJsSDKTimeout:(double)arg0;
- (id)playableStyle;
- (void)setPlayableStyle:(id)arg0;
- (void)setAppInfoExt:(id)arg0;
- (void)setPlayable_url:(id)arg0;
- (void)setIdfaString:(id)arg0;
- (void)setScenesType:(unsigned long long)arg0;
- (id)playable_url;
- (void)handleWebViewInterceptDictWithStartTime:(double)arg0 url:(id)arg1 isCache:(BOOL)arg2 extraDic:(id)arg3;
- (id)appInfoDictionary;
- (void)csj_fireEvent:(id)arg0 params:(id)arg1;
- (void)setIsPrerender:(BOOL)arg0;
- (void)setInterceptArray:(id)arg0;
- (void)setCurrentLogType:(id)arg0 extraDic:(id)arg1;
- (void)appDidEnterBackgroundNotification:(id)arg0;
- (void)switchBackgroundAndForegroundLog:(id)arg0 extraDic:(id)arg1;
- (void)appWillEnterForegroundNotification:(id)arg0;
- (id)logH5Dictinary;
- (id)switchBackgroundArray;
- (id)logDictinary;
- (void)setLogH5Dictinary:(id)arg0;
- (void)setSwitchBackgroundArray:(id)arg0;
- (id)idfaString;
- (void)setLogDictinary:(id)arg0;
- (id)geckoChannel;
- (void)setGeckoChannel:(id)arg0;
- (id)bupl_playable_haptic_engine_supportsWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_initWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_playWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_stopWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_pauseWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_resumeWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_play_fileWithParam:(id)arg0;
- (id)bupl_playable_haptic_engine_play_innerWithParam:(id)arg0;
- (void)startDetect;
- (void)setDetectStatus:(unsigned long long)arg0;
- (unsigned long long)detectStatus;
- (id)gameId;
- (void)setGameId:(id)arg0;
- (void)handelPlayableGlobalViewable:(BOOL)arg0;
- (unsigned long long)playableEnterFrom;
- (void)handelPlayableViewUserPerceptionStart;
- (BOOL)isContainerViewShow;
- (void)setPlayableLeft:(unsigned long long)arg0;
- (void)setPlayableEnterFrom:(unsigned long long)arg0;
- (void)playableSendReplay;
- (void)resetPlayable;
- (void)setPlayableBackgroundShowType:(unsigned long long)arg0;
- (void)handelPlayableHardwareDialogSetting:(unsigned long long)arg0;
- (void)handelPlayableHardwareDialogCancel:(unsigned long long)arg0;
- (long long)playableSequence;
- (id)playableCurrentSection;
- (long long)currentMaterialViewableTime;
- (BOOL)isPlayableFinish;
- (void)handleContainerRenderStart:(id)arg0;
- (void)handleContainerRenderFinish:(id)arg0;
- (void)handleContainerRenderFaild:(id)arg0 error:(id)arg1;
- (void)handleContainerRenderError:(id)arg0 error:(id)arg1;
- (id)initWithExistPiperArray:(id)arg0 piperDelegate:(id)arg1 type:(unsigned long long)arg2 manualRegisterJSB:(BOOL)arg3;
- (void)setGeckoKey:(id)arg0;
- (void)registerPiperBridge;
- (void)handlePlayableViewShow;
- (void)setSafeAreaTopHeightRatio:(double)arg0;
- (void)setSafeAreaBottomHeightRatio:(double)arg0;
- (void)setPlayableVideoSession:(id)arg0;
- (void)setPlayableCardSession:(id)arg0;
- (void)setLynxVersion:(id)arg0;
- (void)setCancelDetectTask:(BOOL)arg0;
- (void)setOpenBlankDetectFlag:(BOOL)arg0;
- (void)setAutoDetectTimeInterval:(double)arg0;
- (void)setManualDetectTimeInterval:(double)arg0;
- (id)excuteJSBMethod:(id)arg0 params:(id)arg1;
- (void)handelPlayableDetectBlankScreenResultWithDetectType:(unsigned long long)arg0 areaRate:(float)arg1;
- (void)setPlayableCurrentSection:(id)arg0;
- (void)setPlayableSequence:(long long)arg0;
- (BOOL)isPrerender;
- (void)handleContainerViewChanged:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 visibleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (id)lynxVersion;
- (id)bupl_closeWithParam:(id)arg0;
- (id)bupl_appInfoWithParam:(id)arg0;
- (void)appWillTerminateNotification:(id)arg0;
- (id)detectTimer;
- (BOOL)isUserOperateDetect;
- (id)clickAreaParams;
- (BOOL)cancelDetectTask;
- (BOOL)avaiableInContainer;
- (long long)webViewStatus;
- (unsigned long long)scenesType;
- (long long)webLoadStatus;
- (double)autoDetectTimeInterval;
- (void)runTimer;
- (void)setDetectTimer:(id)arg0;
- (void)setDetect_stuck_timestamp:(long long)arg0;
- (void)handleJSRunStuck;
- (void)testJSContextStuckCompletion:(id /* block */)arg0;
- (long long)detectStuckSendPingTime;
- (long long)detectStuckReceivePongTime;
- (void)setDetectStuckSendPingTime:(long long)arg0;
- (void)setDetectStuckReceivePongTime:(long long)arg0;
- (void)callDetectLynxFunction;
- (void)setIsUserOperateDetect:(BOOL)arg0;
- (void)setClickAreaParams:(id)arg0;
- (double)manualDetectTimeInterval;
- (void)detectIfRequired;
- (BOOL)hasCaptureStuck;
- (void)setHasCaptureStuck:(BOOL)arg0;
- (void)handlePageStuckWithType:(unsigned long long)arg0 reason:(id)arg1;
- (void)handlePlayablePageStuck:(id)arg0;
- (void)stopDetect;
- (BOOL)isWebView;
- (void)detectUserOperateStuck:(id)arg0;
- (void)registerPrivateJSMethod;
- (BOOL)isPlayableURL;
- (BOOL)isLynxFatalErrorCode:(long long)arg0;
- (BOOL)userHasWaitedPlayableAd;
- (void)setUserHasWaitedPlayableAd:(BOOL)arg0;
- (void)handelPlayableViewUserPerceptionStartTrackEvent:(BOOL)arg0;
- (BOOL)firstViewable;
- (void)setFirstViewable:(BOOL)arg0;
- (void)handelPlayableViewFirstVisibleTrackEvent;
- (void)handlePlayableShouldDetectBlankScreenWithType:(unsigned long long)arg0;
- (BOOL)firstInvisible;
- (void)setFirstInvisible:(BOOL)arg0;
- (void)handlePlayableViewTrackEventWithVisible:(long long)arg0;
- (void)handlePlayableViewClosedTrackEvent;
- (void)handelPlayableDestroyAnalyzeSummaryTrackEvent;
- (id)playableContainer;
- (void)handelPlayableDetectBlankScreenResultTrackEvent:(id)arg0;
- (BOOL)playableGlobalViewable;
- (void)setPlayableGlobalViewable:(BOOL)arg0;
- (long long)playable_back_count;
- (void)setPlayable_back_count:(long long)arg0;
- (long long)playable_leave_count;
- (void)setPlayable_leave_count:(long long)arg0;
- (void)handelPlayableGlobalViewableTrackEvent:(BOOL)arg0;
- (void)handelPlayableHardwareDialogSettingTrackEvent:(unsigned long long)arg0;
- (void)handelPlayableHardwareDialogCancelTrackEvent:(unsigned long long)arg0;
- (void)setWebLoadStatus:(long long)arg0;
- (void)handleContainerViewDidStartLoadTrackEvent;
- (void)handlePlayableHardWareDetectTrackEvent;
- (void)handleGlobalPageFailedWithErrorCode:(unsigned long long)arg0;
- (double)containerTimeout;
- (double)jsSDKTimeout;
- (BOOL)loadJSSDKSuccess;
- (void)handleContainerViewDidFinishLoadTrackEvent;
- (void)handleContainerViewDidFailLoadTrackEventWithError:(id)arg0;
- (long long)res_request_times;
- (void)setRes_request_times:(long long)arg0;
- (long long)res_hit_times;
- (void)setRes_hit_times:(long long)arg0;
- (id)interceptDictWithStartTime:(double)arg0 url:(id)arg1 type:(id)arg2 isCache:(BOOL)arg3 extraDic:(id)arg4;
- (void)handleContainerRenderStartTrackEvent;
- (void)handleContainerRenderFinishTrackEvent;
- (void)handleContainerRenderErrorTrackEventWithError:(id)arg0;
- (void)handleContainerRenderFaildTrackEventWithError:(id)arg0;
- (void)handleNativeAppStoreClickTrackEvent;
- (void)handleJSBEventTrackEvent:(id)arg0 params:(id)arg1;
- (BOOL)hasHandleError;
- (void)setHasHandleError:(BOOL)arg0;
- (void)handleGlobalPageFailedTrackEventWithErrorCode:(unsigned long long)arg0;
- (void)handlePlayablePageStuckTrackEvent:(id)arg0;
- (BOOL)openBlankDetectFlag;
- (void)handlePlayableViewVisible:(long long)arg0 repeat:(BOOL)arg1;
- (void)handlePlayableCellDisappear;
- (void)handleNativeAppStoreClick;
- (void)handleJSBEvent:(id)arg0 params:(id)arg1;
- (void)setPlayableAdAllPiperArray:(id)arg0;
- (id)playableAdAllPiperArray;
- (void)setPlayableAdJSBArray:(id)arg0;
- (id)hostExistPiperArray;
- (id)playableAdJSBArray;
- (BOOL)responseToJSBMethod:(id)arg0;
- (id)convertContainerViewChangedParams:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 visibleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setLoadJSSDKSuccess:(BOOL)arg0;
- (void)handlePlayableJSSDKloadSuccessTrackEvent;
- (id)unregisteredPiperDict;
- (BOOL)disablePlayableClickReport;
- (void)connectingLynxJsb;
- (void)setJsbConnectingTimer:(id)arg0;
- (id)jsbConnectingTimer;
- (void)handlePlayableMaterialInteractableTrackEvent;
- (void)setIsPlayableFinish:(BOOL)arg0;
- (BOOL)canThrowEvent;
- (double)safeAreaTopHeightRatio;
- (double)safeAreaBottomHeightRatio;
- (id)playableCardSession;
- (id)playableVideoSession;
- (id)playableNetworkType;
- (void)handlePlayableMaterialFirstFrameShowTrackEvent;
- (void)registerPiperBridgeInternal;
- (id)bupl_playable_eventWithParam:(id)arg0;
- (id)bupl_get_viewportWithParam:(id)arg0;
- (id)bupl_jssdk_load_finishWithParam:(id)arg0;
- (id)bupl_playable_material_render_resultWithParam:(id)arg0;
- (id)bupl_adInfoWithParam:(id)arg0;
- (id)bupl_playableSDKInfoWithParam:(id)arg0;
- (id)bupl_open_app_storeWithParam:(id)arg0;
- (id)bupl_webview_time_trackWithParam:(id)arg0;
- (id)bupl_isViewableWithParam:(id)arg0;
- (id)bupl_playable_styleWithParam:(id)arg0;
- (id)bupl_sendRewardWithParam:(id)arg0;
- (id)bupl_getVolumeWithParam:(id)arg0;
- (id)bupl_getScreenSizeWithParam:(id)arg0;
- (id)bupl_device_shakeWithParam:(id)arg0;
- (id)bupl_device_shake_shortWithParam:(id)arg0;
- (id)bupl_start_accelerometer_observerWithParam:(id)arg0;
- (id)bupl_close_accelerometer_observerWithParam:(id)arg0;
- (id)bupl_start_gyro_observerWithParam:(id)arg0;
- (id)bupl_close_gyro_observerWithParam:(id)arg0;
- (id)bupl_start_accelerometer_grativityless_observerWithParam:(id)arg0;
- (id)bupl_close_accelerometer_grativityless_observerWithParam:(id)arg0;
- (id)bupl_start_rotation_vector_observerWithParam:(id)arg0;
- (id)bupl_close_rotation_vector_observerWithParam:(id)arg0;
- (id)bupl_preventTouchEventWithParam:(id)arg0;
- (id)bupl_reportAdWithParam:(id)arg0;
- (id)bupl_preload_app_adWithParam:(id)arg0;
- (id)bupl_openAdLandPageLinksWithParam:(id)arg0;
- (id)bupl_playble_tool_lagWithParam:(id)arg0;
- (id)bupl_playable_tool_freezeWithParam:(id)arg0;
- (id)bupl_playable_tool_heart_beatWithParam:(id)arg0;
- (id)bupl_detect_change_playable_clickWithParam:(id)arg0;
- (void)connectToLynxJsbEnv;
- (id)bupl_playable_ready_eventWithParam:(id)arg0;
- (id)bupl_logWithParam:(id)arg0;
- (id)bupl_check_camera_permissionWithParam:(id)arg0;
- (id)bupl_check_external_storageWithParam:(id)arg0;
- (id)bupl_playable_open_cameraWithParam:(id)arg0;
- (id)bupl_playable_pick_photoWithParam:(id)arg0;
- (id)bupl_playable_download_media_in_photosWithParam:(id)arg0;
- (id)bupl_playable_load_main_sceneWithParam:(id)arg0;
- (id)bupl_playable_enter_sectionWithParam:(id)arg0;
- (id)bupl_playable_finish_play_playableWithParam:(id)arg0;
- (id)bupl_playable_endWithParam:(id)arg0;
- (id)bupl_playable_transfrom_module_showWithParam:(id)arg0;
- (id)bupl_playable_transfrom_module_change_colorWithParam:(id)arg0;
- (id)bupl_playable_set_scroll_rectWithParam:(id)arg0;
- (id)bupl_playable_click_areaWithParam:(id)arg0;
- (id)bupl_playable_settings_infoWithParam:(id)arg0;
- (id)bupl_playable_real_play_startWithParam:(id)arg0;
- (id)bupl_playable_material_first_frame_showWithParam:(id)arg0;
- (id)bupl_playable_material_adnormal_maskWithParam:(id)arg0;
- (id)bupl_playable_alpha_player_playWithParam:(id)arg0;
- (id)bupl_playable_transfrom_module_highlightWithParam:(id)arg0;
- (id)bupl_playable_send_click_eventWithParam:(id)arg0;
- (id)bupl_playable_long_press_panelWithParam:(id)arg0;
- (id)bupl_playable_query_media_permission_declareWithParam:(id)arg0;
- (id)bupl_playable_query_media_permission_enableWithParam:(id)arg0;
- (id)bupl_playable_apply_media_permissionWithParam:(id)arg0;
- (id)bupl_playable_video_preload_task_addWithParam:(id)arg0;
- (id)bupl_playable_video_preload_task_cancelWithParam:(id)arg0;
- (id)bupl_playable_stuck_check_pongWithParam:(id)arg0;
- (void)excuteJavaScriptMethodInternal;
- (id)geckoKey;
- (id)hg_params;
- (id)handleLynxPlayableUrl;
- (BOOL)isPlayableShow;
- (void)setUser_perception_start_timestamp:(long long)arg0;
- (id)publicParameters:(double)arg0;
- (void)setPage_show_timestamp:(long long)arg0;
- (void)setPage_viewable_timestamp:(long long)arg0;
- (long long)page_viewable_timestamp;
- (long long)page_show_duration;
- (void)setPage_show_duration:(long long)arg0;
- (unsigned long long)playableLeft;
- (unsigned long long)playableBackgroundShowType;
- (void)setPage_load_timestamp:(long long)arg0;
- (long long)page_show_timestamp;
- (long long)page_load_timestamp;
- (void)setPage_load_finish_timestamp:(long long)arg0;
- (long long)user_perception_start_timestamp;
- (void)setPage_material_interactable_load_duration:(long long)arg0;
- (void)setPage_viewable_renderStart:(long long)arg0;
- (long long)page_viewable_renderStart;
- (long long)detect_stuck_timestamp;
- (long long)page_load_finish_timestamp;
- (long long)page_material_interactable_load_duration;
- (void)handlePlayableViewFirstShowEventWithVisible:(long long)arg0;
- (id)initWithExistPiperArray:(id)arg0 piperDelegate:(id)arg1 type:(unsigned long long)arg2;
- (void)resetVariables;
- (void)setHostExistPiperArray:(id)arg0;
- (void)setPlayableContainer:(id)arg0;
- (id)containerSuperView;
- (void)setWebViewStatus:(long long)arg0;
- (id)appInfoExt;
- (id)netWorkStatus;
- (void)excuteJavaScriptMethod;
- (void)setContainerSuperView:(id)arg0;
- (void)updateInnerContainerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)loadPlayableAdUrl:(id)arg0;
- (void)changePlayableClick:(BOOL)arg0;
- (void)setFeedScrollView:(id)arg0;
- (BOOL)manualRegisterJSB;
- (void)setHg_params:(id)arg0;
- (void)setDisablePlayableClickReport:(BOOL)arg0;
- (long long)page_viewable_renderFinish;
- (void)setPage_viewable_renderFinish:(long long)arg0;
- (void)setPlayableNetworkType:(id)arg0;
- (void)setAppName:(id)arg0;
- (id)appName;
- (BOOL)mute;
- (void)setContainerViewController:(id)arg0;
- (id)hapticPlayer;
- (void)setViewController:(id)arg0;
- (id)viewController;
- (void).cxx_destruct;
- (id)deviceId;
- (void)setRetryCount:(long long)arg0;
- (id)containerViewController;
- (long long)retryCount;
- (void)setContainerView:(id)arg0;
- (id)itemID;
- (void)setItemID:(id)arg0;
- (void)setHapticPlayer:(id)arg0;
- (id)delegate;
- (id)containerView;
- (id)cid;
- (void)pauseTimer;
- (double)currentTime;
- (void)setDeviceId:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)resumeTimer;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)setMute:(BOOL)arg0;
- (id)session_id;
- (void)setSession_id:(id)arg0;
- (BOOL)isDebug;
- (long long)replayCount;
- (void)setReplayCount:(long long)arg0;
- (void)setIsDebug:(BOOL)arg0;
- (id)addCode:(id)arg0;
- (void)setCid:(id)arg0;

@end
