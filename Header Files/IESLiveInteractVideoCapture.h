//
//     Generated by private class-dump
//

@class NSArray, NSTimer, NSString, IESLiveInteractionDarkFrameStream, UIView;
@protocol IESLiveEffectModuleBeautyForAudienceService, IESLiveVideoEffectProcessing, IESLiveEffectProcessService, IESLiveRecoder, IESLiveInteractVideoCaptureSEIParserProtocol;

@interface IESLiveInteractVideoCapture : NSObject <IESLiveInteractVideoCaptureProvider> {
    BOOL _isDarkFrameMode;
    BOOL _isRendering;
    BOOL _isCapturing;
    BOOL _isUsedBeautyEffect;
    id<IESLiveRecoder> _camera;
    IESLiveInteractionDarkFrameStream *_darkFrameStream;
    UIView *_previewView;
    id<IESLiveEffectModuleBeautyForAudienceService> _beautyEffectConfig;
    NSArray *_beautyItems;
    NSTimer *_timer;
    id<IESLiveInteractVideoCaptureSEIParserProtocol> _pingingResult;
    id<IESLiveVideoEffectProcessing> _videoProcesser;
    id<IESLiveEffectProcessService> _effectProcesser;
    long long _currentCaptureInputType;
    struct CGSize { double width; double height; } _previewSize;
}

@property (retain, nonatomic) id<IESLiveRecoder> camera;
@property (retain, nonatomic) IESLiveInteractionDarkFrameStream *darkFrameStream;
@property (nonatomic) struct CGSize { double width; double height; } previewSize;
@property (retain, nonatomic) UIView *previewView;
@property (nonatomic) BOOL isRendering;
@property (nonatomic) BOOL isCapturing;
@property (nonatomic) BOOL isUsedBeautyEffect;
@property (retain, nonatomic) id<IESLiveEffectModuleBeautyForAudienceService> beautyEffectConfig;
@property (copy, nonatomic) NSArray *beautyItems;
@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) id<IESLiveInteractVideoCaptureSEIParserProtocol> pingingResult;
@property (retain, nonatomic) id<IESLiveVideoEffectProcessing> videoProcesser;
@property (retain, nonatomic) id<IESLiveEffectProcessService> effectProcesser;
@property (nonatomic) long long currentCaptureInputType;
@property (nonatomic) BOOL isDarkFrameMode;
@property (readonly, nonatomic) BOOL isDarkFrameStreamPushing;
@property (readonly, nonatomic) BOOL isPreviewing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIsCapturing:(BOOL)arg0;
- (void)removeEffectNodes:(id)arg0;
- (id)getCurrentComposerNodes;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2 userInfo:(id)arg3;
- (void)didSetAttachingDIContext;
- (void)switchCameraSource;
- (BOOL)isDarkFrameStreamPushing;
- (void)setBeautyItems:(id)arg0;
- (id)beautyItems;
- (void)setupEffectEnvironment;
- (id)effectProcesser;
- (void)setEffectProcesser:(id)arg0;
- (id)videoProcesser;
- (void)setVideoProcesser:(id)arg0;
- (BOOL)isUsedBeautyEffect;
- (void)useBeautyEffectWithBeautyItems:(id)arg0;
- (void)setIsUsedBeautyEffect:(BOOL)arg0;
- (void)loadBeautyResource;
- (id)beautyEffectConfig;
- (void)setBeautyEffectConfig:(id)arg0;
- (id)resetCameraPreviewView:(id)arg0;
- (void)changeCaptureInputType:(long long)arg0;
- (void)applyEffectNodes:(id)arg0 enableFakeFace:(BOOL)arg1;
- (BOOL)enableAudienceMediaCaptureOpt;
- (BOOL)enableUGCMV;
- (void)setDarkFrameStream:(id)arg0;
- (id)darkFrameStream;
- (void)startVideoCapture:(id)arg0 firstFrameRenderCallback:(id /* block */)arg1;
- (void)startVideoCapture:(id)arg0 firstFrameRenderCallback:(id /* block */)arg1 inputType:(long long)arg2;
- (void)resetCustomStream:(id)arg0;
- (void)startCapturePinging:(id /* block */)arg0;
- (void)stopCapturePinging;
- (void)cleanupCamera;
- (id)pingingResult;
- (void)setPingingResult:(id)arg0;
- (void)pingCurrentIsPreivewing:(BOOL)arg0;
- (id)currentVideoSeiKey;
- (BOOL)isDarkFrameMode;
- (void)setCurrentCaptureInputType:(long long)arg0;
- (long long)currentCaptureInputType;
- (void)loadPreviewWithPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)loadCameraWithPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setIsDarkFrameMode:(BOOL)arg0;
- (id)timer;
- (BOOL)isPreviewing;
- (id)camera;
- (void)setCamera:(id)arg0;
- (void).cxx_destruct;
- (BOOL)isCapturing;
- (void)setTimer:(id)arg0;
- (void)setPreviewView:(id)arg0;
- (long long)currentPosition;
- (id)previewView;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })previewSize;
- (void)setPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)startVideoCapture;
- (void)stopVideoCapture;
- (void)setIsRendering:(BOOL)arg0;
- (BOOL)isRendering;

@end
