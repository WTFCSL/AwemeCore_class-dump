//
//     Generated by private class-dump
//

@class NSString;
@protocol DVENLEInterfaceProtocol, DVEEditingContextProtocol, DVECoreActionServiceProtocol, DVEPlayerServiceProtocol, IESServiceProvider;

@interface DVECanvasEditor : NSObject <DVECoreActionDelegate, DVECoreCanvasProtocol> {
    id<IESServiceProvider> _serviceProvider;
    unsigned long long ratio;
    id<DVECoreActionServiceProtocol> _actionService;
    id<DVENLEInterfaceProtocol> _nle;
    id<DVEPlayerServiceProtocol> _playerService;
    id<DVEEditingContextProtocol> _mediaContext;
    struct CGSize { double width; double height; } canvasSize;
    struct CGSize { double width; double height; } originRatioSize;
}

@property (weak, nonatomic) id<DVECoreActionServiceProtocol> actionService;
@property (weak, nonatomic) id<DVENLEInterfaceProtocol> nle;
@property (weak, nonatomic) id<DVEPlayerServiceProtocol> playerService;
@property (weak, nonatomic) id<DVEEditingContextProtocol> mediaContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long ratio;
@property (nonatomic) struct CGSize { double width; double height; } canvasSize;
@property (nonatomic) struct CGSize { double width; double height; } originRatioSize;
@property (weak, nonatomic) id<IESServiceProvider> serviceProvider;

+ (struct CGSize { double x0; double x1; })fitMaxSizeForResolution:(double)arg0 originSize:(struct CGSize { double x0; double x1; })arg1;

- (id)actionService;
- (id)mediaContext;
- (id)playerService;
- (void)setPlayerService:(id)arg0;
- (void)setMediaContext:(id)arg0;
- (void)setActionService:(id)arg0;
- (void)saveCanvasSize;
- (void)restoreCanvasSize;
- (void)updateCanvasRatio:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })subViewScaleAspectFit:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGSize { double x0; double x1; })canvasSizeScaleAspectFitInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setCanvasRatio:(unsigned long long)arg0 inPreviewView:(id)arg1 needCommit:(BOOL)arg2;
- (void)updateVideoClipTranslation:(struct CGPoint { double x0; double x1; })arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (void)updateVideoClipScale:(double)arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (void)updateVideoClipRotation:(double)arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (struct CGSize { double x0; double x1; })originRatioSize;
- (void)setOriginRatioSize:(struct CGSize { double x0; double x1; })arg0;
- (id)nle;
- (void)setNle:(id)arg0;
- (id)initWithContext:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setServiceProvider:(id)arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (id)serviceProvider;
- (struct CGSize { double x0; double x1; })canvasSize;
- (unsigned long long)ratio;
- (void)setRatio:(unsigned long long)arg0;

@end
