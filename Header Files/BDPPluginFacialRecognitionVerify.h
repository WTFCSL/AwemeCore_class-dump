//
//     Generated by private class-dump
//

@class BDPFacialRecognitionAlertControllerLogic, BDPUniqueID;

@interface BDPPluginFacialRecognitionVerify : BDPBridgeInstancePlugin {
    BDPUniqueID *_uniqueID;
    BDPFacialRecognitionAlertControllerLogic *_alertVCLogic;
}

@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) BDPFacialRecognitionAlertControllerLogic *alertVCLogic;

- (id)encryptString:(id)arg0 key:(id)arg1 iv:(id)arg2;
- (void)setAlertVCLogic:(id)arg0;
- (id)errorMsgForErrorCode:(long long)arg0;
- (long long)callBackTypeForErrorCode:(long long)arg0;
- (void)handleError:(id)arg0 andCallBack:(id /* block */)arg1;
- (id)alertVCLogic;
- (id)callBackMsgForError:(id)arg0;
- (long long)errorCodeForAILabErrorCode:(long long)arg0;
- (void)handleHostFacialRecognitionComplteForServiceType:(long long)arg0 errorCode:(long long)arg1 orderNumber:(id)arg2 completion:(id /* block */)arg3;
- (id)commonRequestParamWithURL:(id)arg0 params:(id)arg1;
- (long long)errorCodeForServerErrorCode:(long long)arg0;
- (id)errorForAILabFacialRecognitionErrorCode:(long long)arg0;
- (BOOL)needReportCancelForAILabCode:(long long)arg0;
- (void)updateFacialRecognitionResultForServiceType:(long long)arg0 errorCode:(long long)arg1 cancel:(BOOL)arg2 orderNumber:(id)arg3 completion:(id /* block */)arg4;
- (id)facialSdkVersionForServiceType:(long long)arg0;
- (id)hostApplicationid;
- (id)decryptString:(id)arg0 key:(id)arg1 iv:(id)arg2;
- (long long)errorCodeForAILabV3ErrorCode:(long long)arg0;
- (void)startFacialRecognitionVerifyWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (id)errorTypeForErrorCode:(long long)arg0;
- (void)buildErrorForErrorCode:(long long)arg0 callback:(id /* block */)arg1;
- (void)useFacialRecognitionVerifyWithParams:(id)arg0 serviceType:(long long)arg1 callback:(id /* block */)arg2 instance:(id)arg3;
- (void)loginIfNeededWithAppID:(id)arg0 completion:(id /* block */)arg1;
- (void)buildErrorForErrorInformation:(long long)arg0 sdkCode:(long long)arg1 errorMsg:(id)arg2 callback:(id /* block */)arg3;
- (void)checkCameraPermissionAndRequestWithAppId:(id)arg0 completion:(id /* block */)arg1;
- (long long)callBackCodeForErrorCode:(long long)arg0;
- (unsigned long long)errNumForErrorCode:(long long)arg0;
- (long long)errCodeForErrorCode:(long long)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (id)errorWithCode:(long long)arg0;

@end
