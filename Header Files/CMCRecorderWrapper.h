//
//     Generated by private class-dump
//

@class CMCCameraSubscription, NSString, HTSVideoData, NSValue;
@protocol VERecorderPublicProtocol;

@interface CMCRecorderWrapper : NSObject <AFDMomentCameraBuildListener, CMCRecorderProtocol> {
    long long _cameraMode;
    unsigned long long _recorderState;
    id<VERecorderPublicProtocol> _camera;
    NSValue *_outputSize;
    CMCCameraSubscription *_subscription;
}

@property (retain, nonatomic) id<VERecorderPublicProtocol> camera;
@property (retain, nonatomic) CMCCameraSubscription *subscription;
@property (copy, nonatomic) NSValue *outputSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long cameraMode;
@property (nonatomic) unsigned long long recorderState;
@property (readonly, nonatomic) HTSVideoData *videoData;

- (void)setEnableEarBack:(BOOL)arg0;
- (BOOL)setMusicPlayMode:(long long)arg0;
- (void)applyMusicNodes:(id)arg0;
- (void)releaseCaptureImage:(id)arg0;
- (id)videoData;
- (void)setUseEffectRecognize:(BOOL)arg0;
- (id)resetPreviewView:(id)arg0;
- (void)setVideoBufferCallback:(id /* block */)arg0;
- (void)captureSourcePhotoAsImageByUser:(BOOL)arg0 completionHandler:(id /* block */)arg1 afterProcess:(BOOL)arg2;
- (void)captureImageWithOptions:(id)arg0 finishHandler:(id /* block */)arg1;
- (void)setIESCameraDurationBlock:(id /* block */)arg0;
- (void)startVideoRecordWithRate:(double)arg0;
- (void)pauseVideoRecord;
- (void)removeLastVideoFragment;
- (void)removeAllVideoFragments;
- (void)removeAllVideoFragments:(id /* block */)arg0;
- (void)setEnableMicPCMWrite:(BOOL)arg0;
- (void)setMaxLimitTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (double)getTotalDuration;
- (void)resetRecorderWriter;
- (void)resetVideoRecordReady;
- (void)setForceRecordAudio:(BOOL)arg0;
- (void)setForceRecordWithMusicEnd:(BOOL)arg0;
- (void)setDropFrame:(BOOL)arg0;
- (id)getFirstRecordFrame;
- (void)changeMusicStartTime:(double)arg0 clipDuration:(double)arg1;
- (void)musicSeekToTime:(double)arg0;
- (void)removePlayer;
- (void)setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 completeBlock:(id /* block */)arg3 didPlayToEndBlock:(id /* block */)arg4;
- (void)resetBGVideo;
- (void)bgVideoPlay;
- (void)bgVideoPause;
- (void)bgVideoMutePlayer:(BOOL)arg0;
- (float)bgVideoCurrentPlayPercent;
- (void)bgVideoSeekToPercent:(float)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)bgVideoIsPlaying;
- (void)setMultiVideoWithVideoURL:(id)arg0 rate:(float)arg1 completeBlock:(id /* block */)arg2;
- (void)setMultiVideoAutoRepeat:(BOOL)arg0;
- (void)multiVideoPlay;
- (void)multiVideoPause;
- (void)multiVideoSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)multiVideoChangeRate:(float)arg0 completeBlock:(id /* block */)arg1;
- (id)getMultiPlayer;
- (void)multiVideoIsReady;
- (void)enableTC21RedpackageRecord:(BOOL)arg0;
- (BOOL)aecStatus;
- (void)clearVideodata;
- (void)setAECEnabled:(BOOL)arg0 modelPath:(id)arg1;
- (void)setBalanceEnabled:(BOOL)arg0 targetLufs:(int)arg1;
- (void)setNewBalanceEnabled:(BOOL)arg0 newBalanceCallback:(id /* block */)arg1;
- (void)setTimeAlignEnabled:(BOOL)arg0 modelPath:(id)arg1 timeAlignCallback:(id /* block */)arg2;
- (long long)getCurrentLatency;
- (void)enableAudioEffectSticker:(BOOL)arg0;
- (void)setRecorderState:(unsigned long long)arg0;
- (void)setCameraProvider:(id)arg0;
- (unsigned long long)recorderState;
- (BOOL)p_verifyCameraContext;
- (void)onCameraInit:(id)arg0;
- (BOOL)exportWithVideo:(id)arg0;
- (void)bgVideoRestart;
- (void)enableEffectMusicTime:(BOOL)arg0;
- (void)getTC21RedpakageTracker:(id)arg0 queryPathHandler:(id /* block */)arg1;
- (void)syncCameraStatus:(long long)arg0;
- (void)p_cameraWrapperRemoveKVOObserver;
- (id)p_createPhotoColorTransferNode;
- (id)init;
- (unsigned long long)fragmentCount;
- (id)camera;
- (BOOL)isRecording;
- (void)setCamera:(id)arg0;
- (void).cxx_destruct;
- (id)outputSize;
- (void)removePlayer:(id /* block */)arg0;
- (void)setSubscription:(id)arg0;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)addSubscriber:(id)arg0;
- (id)subscription;
- (void)removeSubscriber:(id)arg0;
- (void)setOutputSize:(id)arg0;
- (long long)cameraMode;
- (void)setCameraMode:(long long)arg0;

@end
