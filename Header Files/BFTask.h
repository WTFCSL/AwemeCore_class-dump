//
//     Generated by private class-dump
//

@class NSCondition, NSError, NSMutableArray, NSObject;

@interface BFTask : NSObject {
    id _result;
    NSError *_error;
    BOOL _cancelled;
    BOOL _faulted;
    BOOL _completed;
    NSObject *_lock;
    NSCondition *_condition;
    NSMutableArray *_callbacks;
}

@property (nonatomic, getter=isCancelled) BOOL cancelled;
@property (nonatomic, getter=isFaulted) BOOL faulted;
@property (nonatomic, getter=isCompleted) BOOL completed;
@property (retain, nonatomic) NSObject *lock;
@property (retain, nonatomic) NSCondition *condition;
@property (retain, nonatomic) NSMutableArray *callbacks;
@property (readonly, nonatomic) id result;
@property (readonly, nonatomic) NSError *error;

+ (id)taskForCompletionOfAllTasks:(id)arg0;
+ (id)cancelledTask;
+ (id)taskForCompletionOfAllTasksWithResults:(id)arg0;
+ (id)taskForCompletionOfAnyTask:(id)arg0;
+ (id)taskWithDelay:(int)arg0;
+ (id)taskWithDelay:(int)arg0 cancellationToken:(id)arg1;
+ (id)taskFromExecutor:(id)arg0 withBlock:(id /* block */)arg1;
+ (id)taskWithResult:(id)arg0;
+ (id)taskWithError:(id)arg0;

- (id)continueWithSuccessBlock:(id /* block */)arg0;
- (id)continueWithExecutor:(id)arg0 withSuccessBlock:(id /* block */)arg1;
- (id)continueWithExecutor:(id)arg0 withBlock:(id /* block */)arg1;
- (void)runContinuations;
- (void)setFaulted:(BOOL)arg0;
- (id)continueWithExecutor:(id)arg0 block:(id /* block */)arg1 cancellationToken:(id)arg2;
- (id)continueWithExecutor:(id)arg0 successBlock:(id /* block */)arg1 cancellationToken:(id)arg2;
- (BOOL)isFaulted;
- (void)warnOperationOnMainThread;
- (id)continueWithBlock:(id /* block */)arg0 cancellationToken:(id)arg1;
- (id)continueWithSuccessBlock:(id /* block */)arg0 cancellationToken:(id)arg1;
- (BOOL)trySetResult:(id)arg0;
- (BOOL)trySetError:(id)arg0;
- (BOOL)trySetCancelled;
- (id)callbacks;
- (id)initWithError:(id)arg0;
- (id)condition;
- (void)setCancelled:(BOOL)arg0;
- (void)waitUntilFinished;
- (void)setCompleted:(BOOL)arg0;
- (id)init;
- (BOOL)isCompleted;
- (void).cxx_destruct;
- (id)result;
- (id)initWithResult:(id)arg0;
- (id)lock;
- (id)continueWithBlock:(id /* block */)arg0;
- (id)description;
- (void)setCondition:(id)arg0;
- (BOOL)isCancelled;
- (void)setCallbacks:(id)arg0;
- (void)setLock:(id)arg0;
- (id)error;
- (id)initCancelled;

@end
