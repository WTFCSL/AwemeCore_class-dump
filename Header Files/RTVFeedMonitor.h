//
//     Generated by private class-dump
//

@class RxScheduler, NSString;
@protocol RTVMonitor, RTVUserProfileManagerInterface, RxInjector, RTVXRControllerInjector, RTVXRRoomSessionControllerInterface, RTVPerformanceMonitorInterface;

@interface RTVFeedMonitor : NSObject <RTVXRControllerInterface, RTVFeedMonitorInterface> {
    BOOL _hasPreloadFeed;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVPerformanceMonitorInterface> _performanceMonitor;
    id<RTVMonitor> _rtvMonitor;
    id<RTVXRRoomSessionControllerInterface> _roomControlller;
    id<RTVUserProfileManagerInterface> _profileManager;
    RxScheduler *_commonScheduler;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, nonatomic) id<RTVPerformanceMonitorInterface> performanceMonitor;
@property (readonly, nonatomic) id<RTVMonitor> rtvMonitor;
@property (readonly, weak, nonatomic) id<RTVXRRoomSessionControllerInterface> roomControlller;
@property (readonly, nonatomic) id<RTVUserProfileManagerInterface> profileManager;
@property (readonly, nonatomic) RxScheduler *commonScheduler;
@property (readonly, nonatomic) BOOL hasPreloadFeed;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rxAwakeFromPropertyInjection;
- (id)controllerInjector;
- (void)renderBusinessHandler:(id)arg0 context:(id)arg1;
- (id)commonMonitorParamsWithSession:(id)arg0;
- (void)invokeFeedShareWithRoomID:(id)arg0 type:(long long)arg1 identifier:(id)arg2 isFirst:(BOOL)arg3;
- (void)feedShareInvokeResultWithSession:(id)arg0 identifier:(id)arg1 dictionary:(id)arg2 success:(BOOL)arg3 isFirst:(BOOL)arg4 error:(id)arg5;
- (void)joinFeedShareWithSession:(id)arg0;
- (void)monitorFeedShareSwitchWithSession:(id)arg0;
- (void)monitorFeedSharePageStartLoadWithSession:(id)arg0;
- (void)markStartFeedShareWithSession:(id)arg0;
- (void)monitorFirstFrameWithSession:(id)arg0 result:(id)arg1;
- (void)monitorPageShownWithSession:(id)arg0;
- (void)endFeedShareWithSession:(id)arg0 endReason:(long long)arg1;
- (void)monitorChannelAvailableWithSession:(id)arg0 duration:(double)arg1 monitorCount:(long long)arg2 seiAvailableCount:(long long)arg3 rtvAvaibleCount:(long long)arg4;
- (void)monitorSEICommandSendWithSession:(id)arg0 command:(id)arg1 dictionary:(id)arg2;
- (void)monitorFakeStreamWithSession:(id)arg0 dictionary:(id)arg1;
- (void)startTimedEventWithIdentifier:(id)arg0;
- (void)endTimedEventForIdentifier:(id)arg0 service:(id)arg1 dictionary:(id)arg2 success:(BOOL)arg3 error:(id)arg4;
- (void)monitorDragInteractionPreviewContainerWithSession:(id)arg0 dragType:(unsigned long long)arg1;
- (void)monitorChatEnablementWithSession:(id)arg0 conversationID:(id)arg1 source:(unsigned long long)arg2 duration:(long long)arg3 messagesCount:(unsigned long long)arg4;
- (void)monitorFeedRoomSettingsInconsistenceWithSession:(id)arg0;
- (void)updatePreloadFeedShare:(BOOL)arg0;
- (id)rtvMonitor;
- (void)__hmdTrackService:(id)arg0 metric:(id)arg1 category:(id)arg2 extra:(id)arg3;
- (id)performanceMonitor;
- (id)__monitorErrorInfoWithError:(id)arg0;
- (id)__commonParamsWithSession:(id)arg0;
- (id)__sourceStringWithFeedSource:(long long)arg0;
- (id)__markerWithRoomID;
- (BOOL)hasPreloadFeed;
- (id)__awemeTypeStringWithAwemeType:(long long)arg0;
- (id)roomControlller;
- (id)commonScheduler;
- (void).cxx_destruct;
- (id)injector;
- (id)profileManager;

@end
