//
//     Generated by private class-dump
//

@class NSString, NSArray, NSData;
@protocol BDImageDecoder;

@interface BDImage : UIImage {
    BOOL _isAllFramesLoaded;
    BOOL _isCustomHeicDecoder;
    BOOL _hasDownsampled;
    BOOL _hasCroped;
    id<BDImageDecoder> _decoder;
    unsigned long long _codeType;
    NSString *_filePath;
    unsigned long long _loopCount;
    NSArray *_framesCache;
    double _allFramesDuration;
    struct CGSize { double width; double height; } _originSize;
}

@property (class, nonatomic) BOOL bd_IsHeicSerialPreDecode;

@property (nonatomic) unsigned long long codeType;
@property (retain, nonatomic) NSString *filePath;
@property (nonatomic) unsigned long long loopCount;
@property (nonatomic) BOOL isAllFramesLoaded;
@property (copy) NSArray *framesCache;
@property (nonatomic) double allFramesDuration;
@property (retain, nonatomic) id<BDImageDecoder> decoder;
@property (readonly, nonatomic) NSData *animatedImageData;
@property (readonly, nonatomic) BOOL isAnimateImage;
@property (readonly, nonatomic) unsigned long long frameCount;
@property (nonatomic) BOOL isCustomHeicDecoder;
@property (nonatomic) BOOL hasDownsampled;
@property (nonatomic) BOOL hasCroped;
@property (nonatomic) struct CGSize { double width; double height; } originSize;

+ (id)imageWithData:(id)arg0 config:(id)arg1 error:(id *)arg2;
+ (id)imageWithData:(id)arg0 scale:(double)arg1 decodeForDisplay:(BOOL)arg2 error:(id *)arg3;
+ (id)imageWithData:(id)arg0 scale:(double)arg1 decodeForDisplay:(BOOL)arg2 shouldScaleDown:(BOOL)arg3 error:(id *)arg4;
+ (id)imageWithData:(id)arg0 scale:(double)arg1 decodeForDisplay:(BOOL)arg2 shouldScaleDown:(BOOL)arg3 downsampleSize:(struct CGSize { double x0; double x1; })arg4 cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg5 error:(id *)arg6;
+ (void)setBd_IsHeicSerialPreDecode:(BOOL)arg0;
+ (BOOL)bd_IsHeicSerialPreDecode;
+ (id)imageWithContentsOfFile:(id)arg0;
+ (id)imageNamed:(id)arg0;
+ (id)imageWithData:(id)arg0;
+ (id)imageWithData:(id)arg0 scale:(double)arg1;

- (id)bd_animatedImageData;
- (struct CGSize { double x0; double x1; })originSize;
- (void)setOriginSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isAnimateImage;
- (BOOL)hasCroped;
- (BOOL)isCustomHeicDecoder;
- (void)preloadAllFrames;
- (id)initWithCoderInternal:(id)arg0;
- (void)changeImageWithData:(id)arg0 finished:(BOOL)arg1;
- (id)animatedImageData;
- (void)setHasDownsampled:(BOOL)arg0;
- (void)setHasCroped:(BOOL)arg0;
- (void)setFramesCache:(id)arg0;
- (void)setIsAllFramesLoaded:(BOOL)arg0;
- (BOOL)isAllFramesLoaded;
- (id)framesCache;
- (void)setAllFramesDuration:(double)arg0;
- (double)allFramesDuration;
- (id)initWithAnimatedBDImage:(id)arg0;
- (void)setIsCustomHeicDecoder:(BOOL)arg0;
- (BOOL)hasDownsampled;
- (id)initWithContentsOfFile:(id)arg0;
- (id)images;
- (id)filePath;
- (void).cxx_destruct;
- (void)setFilePath:(id)arg0;
- (unsigned long long)frameCount;
- (void)setDecoder:(id)arg0;
- (double)duration;
- (id)initWithData:(id)arg0 scale:(double)arg1;
- (id)decoder;
- (id)initWithData:(id)arg0;
- (unsigned long long)loopCount;
- (id)frameAtIndex:(long long)arg0;
- (unsigned long long)codeType;
- (void)setCodeType:(unsigned long long)arg0;
- (void)setLoopCount:(unsigned long long)arg0;

@end
