//
//     Generated by private class-dump
//

@class NSString, YYMemoryCache, WCTDatabase, AWEIMDBUserChecker, NSObject;
@protocol OS_dispatch_queue;

@interface AWEIMUserDatabase : NSObject {
    BOOL _isIniting;
    BOOL _shouldTrackLaunchIO;
    NSString *_ownerUid;
    NSString *_dbRootPath;
    NSString *_dbFilePath;
    WCTDatabase *_database;
    YYMemoryCache *_memoryCache;
    AWEIMDBUserChecker *_checker;
    NSObject<OS_dispatch_queue> *_serialQueue;
}

@property (copy, nonatomic) NSString *ownerUid;
@property (readonly, copy, nonatomic) NSString *dbRootPath;
@property (readonly, copy, nonatomic) NSString *dbFilePath;
@property (retain, nonatomic) WCTDatabase *database;
@property (readonly, nonatomic) YYMemoryCache *memoryCache;
@property (retain, nonatomic) AWEIMDBUserChecker *checker;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property BOOL isIniting;
@property (nonatomic) BOOL shouldTrackLaunchIO;

- (void)didReceiveMemoryWarningNotification;
- (id)getTransaction;
- (long long)cacheCount;
- (void)setChecker:(id)arg0;
- (BOOL)isIniting;
- (BOOL)enableMemoryOptimizeWithNunki;
- (void)didReceiveMemeoryDangerLevelTopNotification;
- (void)updateFollowUsersForFullUpdate;
- (void)deleteUsersBeyoundMinute:(long long)arg0;
- (id)userWithId:(id)arg0;
- (id)userWithId:(id)arg0 forScene:(long long)arg1;
- (BOOL)updateBlockStatus:(long long)arg0 toUid:(id)arg1;
- (BOOL)updateHideHerPostStatus:(long long)arg0 toUid:(id)arg1;
- (id)userWithSecUid:(id)arg0;
- (id)usersWithSecUids:(id)arg0;
- (id)localUsersWithPageSize:(long long)arg0 lastUid:(id)arg1;
- (id)localUsersWithPageSize:(long long)arg0 lastUid:(id)arg1 beyondUpdateTime:(long long)arg2;
- (id)localUsersOrderByFollowStateWithPage:(long long)arg0 pageSize:(long long)arg1;
- (long long)localUsersCountWithFollowStatus:(long long)arg0 excludeUids:(id)arg1;
- (id)localUsersListWithFollowStatus:(long long)arg0 excludeUids:(id)arg1;
- (id)fetchFriendUsersWithLimits:(long long)arg0;
- (id)fetchFriendUsersWithLimits:(long long)arg0 excludeUids:(id)arg1;
- (id)fetchFriendAndFollowedUsersWithLimits:(long long)arg0;
- (id)fetchFriendAndFollowedUsersWithLimits:(long long)arg0 excludeUids:(id)arg1;
- (id)fetchFriendAndFollowedUsersWithLimits:(long long)arg0 excludeSecUids:(id)arg1;
- (long long)countOfFriendAndFollowUsers;
- (BOOL)clearAllUsers;
- (id)wcdb;
- (void)removeMemoryCacheUserWithUid:(id)arg0;
- (BOOL)saveUsers:(id)arg0 dataFrom:(long long)arg1;
- (BOOL)shouldTrackLaunchIO;
- (void)p_alogInfo;
- (void)setIsIniting:(BOOL)arg0;
- (id)p_initDBWithPath:(id)arg0;
- (BOOL)imconnect_isCorrupted:(id)arg0;
- (BOOL)p_createTableWithError:(id *)arg0;
- (unsigned long long)p_ioBeginTime;
- (void)p_trackLanchIO:(unsigned long long)arg0;
- (struct WCTPropertyList { struct __list_node_base<const WCTProperty, void *> { void *x0; void *x1; } x0; struct __compressed_pair<unsigned long, std::allocator<std::__list_node<const WCTProperty, void *>>> { unsigned long long x0; } x1; })p_spotlightRelationSaveBasePropertys;
- (BOOL)p_batchSaveSpolightRelationUsers:(id)arg0;
- (BOOL)p_insertUser:(id)arg0;
- (BOOL)p_insertOrUpdateProperties:(const void *)arg0 user:(id)arg1;
- (BOOL)p_updateProperties:(const void *)arg0 user:(id)arg1;
- (id)initWithOwnerUid:(id)arg0;
- (void)cleanMemoryCache;
- (id)localFollowedUsers;
- (id)userIdWithSecUserId:(id)arg0;
- (id)secUserIdWithUserId:(id)arg0;
- (id)usersWithUids:(id)arg0;
- (id)dbRootPath;
- (void)setShouldTrackLaunchIO:(BOOL)arg0;
- (id)database;
- (void).cxx_destruct;
- (void)setDatabase:(id)arg0;
- (id)serialQueue;
- (BOOL)deleteUser:(id)arg0;
- (id)dbFilePath;
- (id)memoryCache;
- (void)dealloc;
- (void)setupWithOptions:(id)arg0;
- (id)checker;
- (id)ownerUid;
- (void)setOwnerUid:(id)arg0;

@end
