//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSTimer, NSDictionary, NSMutableSet;

@interface AWERadarNetworkManager : NSObject {
    BOOL _isNeedBackup;
    BOOL _isHeartBreak;
    BOOL _isHeartBreakRequestOnAir;
    BOOL _isFollowRequestOnAir;
    BOOL _isErrorToastShown;
    BOOL _isFirstHeartBeat;
    BOOL _isHeartBeatGroup;
    BOOL _isHeartBeatRequestOnAirGroup;
    BOOL _isVerifyRequestOnAir;
    BOOL _isEnterRequestOnAir;
    BOOL _shouldCountWhenCompleteLastRequest;
    BOOL _isNeedErrorMsg;
    BOOL _isDataEmpty;
    BOOL _isBackDataEmpty;
    BOOL _isGroupDataEmpty;
    BOOL _needNeighbourhoodGroup;
    NSMutableDictionary *_noticeMap;
    unsigned long long _strategyType;
    id /* block */ _completion;
    NSTimer *_timer;
    double _headBreakFrequency;
    NSTimer *_timerGroup;
    double _heartBeatFrequencyGroup;
    NSDictionary *_heartBeatParams;
    id /* block */ _completionGroup;
    NSMutableDictionary *_requestInfoParams;
    NSMutableDictionary *_requestErrorInfoParams;
    NSMutableSet *_fakeFollowingSet;
}

@property (nonatomic) BOOL isHeartBreak;
@property (copy, nonatomic) id /* block */ completion;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) BOOL isHeartBreakRequestOnAir;
@property (nonatomic) BOOL isFollowRequestOnAir;
@property (nonatomic) double headBreakFrequency;
@property (nonatomic) BOOL isErrorToastShown;
@property (nonatomic) BOOL isFirstHeartBeat;
@property (retain, nonatomic) NSTimer *timerGroup;
@property (nonatomic) BOOL isHeartBeatGroup;
@property (nonatomic) BOOL isHeartBeatRequestOnAirGroup;
@property (nonatomic) BOOL isVerifyRequestOnAir;
@property (nonatomic) BOOL isEnterRequestOnAir;
@property (nonatomic) double heartBeatFrequencyGroup;
@property (copy, nonatomic) NSDictionary *heartBeatParams;
@property (copy, nonatomic) id /* block */ completionGroup;
@property (nonatomic) BOOL shouldCountWhenCompleteLastRequest;
@property (retain, nonatomic) NSMutableDictionary *requestInfoParams;
@property (retain, nonatomic) NSMutableDictionary *requestErrorInfoParams;
@property (nonatomic) BOOL isNeedErrorMsg;
@property (nonatomic) BOOL isDataEmpty;
@property (nonatomic) BOOL isBackDataEmpty;
@property (nonatomic) BOOL isGroupDataEmpty;
@property (retain, nonatomic) NSMutableSet *fakeFollowingSet;
@property (nonatomic) BOOL needNeighbourhoodGroup;
@property (retain, nonatomic) NSMutableDictionary *noticeMap;
@property (nonatomic) BOOL isNeedBackup;
@property (nonatomic) unsigned long long strategyType;

+ (id)allocWithZone:(struct _NSZone { } *)arg0;
+ (id)sharedInstance;

- (void)setStrategyType:(unsigned long long)arg0;
- (unsigned long long)strategyType;
- (void)p_stopTimer;
- (void)p_startTimer;
- (BOOL)isDataEmpty;
- (BOOL)isFollowRequestOnAir;
- (void)setIsFollowRequestOnAir:(BOOL)arg0;
- (void)removeItemFromFakeFollowingSet:(id)arg0;
- (void)requestFollowWithUserID:(id)arg0 extra:(id)arg1 prepare:(id /* block */)arg2 finish:(id /* block */)arg3;
- (void)addItemToFakeFollowingSet:(id)arg0;
- (void)requestVerifyGroupCommandWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)initEmptyGroupDataFlag;
- (void)stopGroupHeartBeat;
- (void)startGroupHeartBeatWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)requestExitRadarGroupWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)trackEmptyGroupDataFlag;
- (void)requestEnterRadarGroupWithParams:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)isFakeFollowing:(id)arg0;
- (id)noticeMap;
- (void)initGroupParams;
- (void)p_clearRequestCount;
- (BOOL)isHeartBreak;
- (void)setIsHeartBreak:(BOOL)arg0;
- (void)p_trackRequestInfo;
- (void)setIsHeartBreakRequestOnAir:(BOOL)arg0;
- (void)setIsErrorToastShown:(BOOL)arg0;
- (double)headBreakFrequency;
- (void)heartBreak;
- (BOOL)isHeartBreakRequestOnAir;
- (void)errorLogs:(id)arg0 andUrl:(id)arg1 andRequestID:(id)arg2;
- (void)updateNoticeMap:(id)arg0;
- (void)setIsDataEmpty:(BOOL)arg0;
- (void)setIsBackDataEmpty:(BOOL)arg0;
- (void)requestHeartBreakWithCompletion:(id /* block */)arg0;
- (BOOL)isFirstHeartBeat;
- (BOOL)isNeedBackup;
- (BOOL)needNeighbourhoodGroup;
- (void)p_addRequestCount:(id)arg0;
- (void)monitorHbGet:(id)arg0 error:(id)arg1;
- (void)p_logAFDRadarHeartBeatResponse:(id)arg0;
- (void)p_filterDuplicatedUserWithModel:(id)arg0;
- (BOOL)isErrorToastShown;
- (void)setIsFirstHeartBeat:(BOOL)arg0;
- (void)p_checkIsErrorInfo:(id)arg0 response:(id)arg1 error:(id)arg2;
- (void)setHeadBreakFrequency:(double)arg0;
- (void)setNeedNeighbourhoodGroup:(BOOL)arg0;
- (void)setIsNeedBackup:(BOOL)arg0;
- (id)p_filterWithexistedUsers:(id)arg0 list:(id)arg1;
- (void)requestFollowWithUserID:(id)arg0 extra:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)isHeartBeatGroup;
- (void)setIsHeartBeatGroup:(BOOL)arg0;
- (void)setHeartBeatParams:(id)arg0;
- (void)setIsHeartBeatRequestOnAirGroup:(BOOL)arg0;
- (void)setIsGroupDataEmpty:(BOOL)arg0;
- (void)p_logRequestHeartBeatWithiCompletion:(id)arg0;
- (id)heartBeatParams;
- (void)p_requestGroupWithAPIUrl:(id)arg0 params:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)isVerifyRequestOnAir;
- (void)setIsVerifyRequestOnAir:(BOOL)arg0;
- (BOOL)isEnterRequestOnAir;
- (void)setIsEnterRequestOnAir:(BOOL)arg0;
- (BOOL)shouldCountWhenCompleteLastRequest;
- (double)heartBeatFrequencyGroup;
- (void)p_heartBeat;
- (void)setTimerGroup:(id)arg0;
- (id)timerGroup;
- (BOOL)isHeartBeatRequestOnAirGroup;
- (void)setHeartBeatFrequencyGroup:(double)arg0;
- (void)requestHeartBeatWithiCompletion:(id /* block */)arg0;
- (void)p_checkIsErrorGroupInfo:(id)arg0 response:(id)arg1 error:(id)arg2;
- (void)p_getGroupLocation:(id)arg0 completion:(id /* block */)arg1;
- (id)fakeFollowingSet;
- (BOOL)switchShakeIsOpen;
- (BOOL)isGroupDataEmpty;
- (id)requestInfoParams;
- (id)requestErrorInfoParams;
- (void)p_trackRequestErrorInfo:(id)arg0;
- (void)p_clientError:(id)arg0 urlType:(id)arg1;
- (void)p_addRequestErrorCount:(id)arg0;
- (BOOL)isNeedErrorMsg;
- (void)startHeartBreakWithCompletion:(id /* block */)arg0;
- (void)stopHeartBreak;
- (void)requestExitRadarWithCompletion:(id /* block */)arg0;
- (void)requestExitRadarIfNeeded;
- (BOOL)switchHistroyIsOpen;
- (void)setSwitchShake:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)setSwitchHistroy:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)initEmptyDataFlag;
- (void)trackEmptyDataFlag;
- (void)setNoticeMap:(id)arg0;
- (void)setShouldCountWhenCompleteLastRequest:(BOOL)arg0;
- (void)setRequestInfoParams:(id)arg0;
- (void)setRequestErrorInfoParams:(id)arg0;
- (void)setIsNeedErrorMsg:(BOOL)arg0;
- (BOOL)isBackDataEmpty;
- (void)setFakeFollowingSet:(id)arg0;
- (id)timer;
- (id)init;
- (void)startTimer;
- (id /* block */)completion;
- (void).cxx_destruct;
- (void)setCompletion:(id /* block */)arg0;
- (void)stopTimer;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)setTimer:(id)arg0;
- (id /* block */)completionGroup;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone { } *)arg0;
- (void)setCompletionGroup:(id /* block */)arg0;
- (BOOL)isNetworkError:(id)arg0;

@end
