//
//     Generated by private class-dump
//

@interface ILACommonConvert : NSObject

+ (struct vector<std::string, std::allocator<std::string>> { void *x0; void *x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *x0; } x2; })convertToStringVector:(id)arg0;
+ (int)convertToInt:(unsigned long long)arg0 defaultValue:(unsigned long long)arg1;
+ (id)convertToNSString:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg0;
+ (id)convertValueWrappersToDictionary:(struct vector<ILASDK::ValueWrapper, std::allocator<ILASDK::ValueWrapper>> { struct ValueWrapper *x0; struct ValueWrapper *x1; struct __compressed_pair<ILASDK::ValueWrapper *, std::allocator<ILASDK::ValueWrapper>> { struct ValueWrapper *x0; } x2; })arg0;
+ (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })convertToString:(id)arg0;

@end
