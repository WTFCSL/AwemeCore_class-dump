//
//     Generated by private class-dump
//

@class AWEAwemeModel, NSString, UITapGestureRecognizer, UIView, AWEAwemePageContext, AWEPlayInteractionNotificationController, NSDictionary, UIViewController, AWEFeedInteractionModeManager, AWEVideoPlayTimeRecorder;
@protocol AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionLongPressDelegate, AFDPinchZoomTransitionHelperProtocol, AWEPlayInteractionViewControllerNewProtocol, AWEAwemeBizPlayVideoProtocol, AWEFeedTableViewCellControllerPlayerDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionCommerceDelegate, AWERightSidebarPinchZoomTransitionHelperProtocol, AWEAwemePlayInteractionPlayDelegate, AWEPlayInteractionViewControllerProtocol, AWEGlobalVisionPinchZoomTransitionHelperProtocol, AFDFeedPreloadControllerProtocol, AFDPureModePageViewControllerProtocol, AWEStoryContainerViewControllerDelegate, AWEAwemePlayVideoTrackProtocol, AFDPinchUpdateAnimatorProtocol, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemeBaseVideoContextProtocol;

@interface AWEAwemeBaseViewController : UIViewController <AFDPureModeCustomizableProtocol, AFDPureModePageLongPressPanelDelegate, AFDPureModePageExitTransitionDelegate, AFDPureModePagePinchTransitionDelegate, AFDPureModePageLandscapeDelegate, AFDPureModePageEventTrackerProtocol, AWEPreviewable, UIGestureRecognizerDelegate, IESVideoPlayerDelegate, AFDPlayRemotePlayerReuseMessage, AFDRichContentAlbumImageDelegateProtocol, AWEPlayVideoDelegate, AWEPlayVideoViewControllerDelegate, AWELandscapeFeedProtocol, AWEFeedPicoVRProtocol, AFDPureModePageOuterContextProvider, AWEGlobalVisionOuterContextProvider, AWEGlobalVisionPopInnerTransitionContextProvider, AFDRichContentContainerDelegate, AWEFeedDoubleColumnPinchProtocol, AWEVideoDescriptionMaskLayerProtocol, AWEGlobalVisionOutterFromGuideContextProvider, AWEAwemeBaseViewTrackProtocol, AWERightSidebarPinchZoomOuterContextProvider, AWEAwemeBaseViewControllerDelegate, AWEAwemePlayVideoBaseContainer, AWEPlayVideoViewControllerContainerProtocol, AFDRichContentProgressControllerDelegate, AWEFeedBaseCellViewControllerProtocol> {
    BOOL _innerInteractionDelay;
    BOOL _forbidResetVideo;
    BOOL _isEditing;
    BOOL _needsSetPureMode;
    BOOL _isRefreshingWhenPinching;
    BOOL _shouldUpdateProgressDirectly;
    BOOL _enterPureModeWithNonInteractTransiton;
    BOOL _enterPureModeByPause;
    BOOL _shouldShowCoverWhenSeekToTime;
    BOOL _isFromRecommendBigCard;
    BOOL _hideMusicInfoView;
    BOOL _showGoodsElementView;
    BOOL _showGoodsCardAnchorElementView;
    BOOL _isEndingTransition;
    BOOL _shouldEnterC2Feed;
    BOOL _bufferingPreparedNotified;
    BOOL _modernBufferingPreparedNotified;
    BOOL _bufferPreloadStarted;
    BOOL _isInteractionReplacing;
    BOOL _isValid;
    BOOL _isHeadphonesOn;
    BOOL _willPerformOnVideoPlayerViewSingleClicked;
    BOOL _isViewAppear;
    BOOL _isAppResignActive;
    BOOL _isFakeLandscape;
    BOOL _isRotating;
    id<AWEFeedTableViewCellControllerPlayerDelegate> _playerDelegate;
    id<AWEStoryContainerViewControllerDelegate> _storyDelegate;
    id<AFDFeedPreloadControllerProtocol> _preloadController;
    long long _mediaType;
    struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *_audioWrapper;
    struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *_videoWrapper;
    AWEAwemeModel *_model;
    NSString *_referString;
    NSDictionary *_context;
    NSDictionary *_logExtraDict;
    NSString *_enterFrom;
    NSString *_ruleId;
    NSString *_cityInfoString;
    NSString *_adEventName;
    long long _type;
    Class _interactionControllerClassType;
    id<AWEAwemePlayInteractionPlayDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionLongPressDelegate, AWEPlayInteractionViewControllerProtocol> _interactionController;
    UIViewController<AWEAwemeBizPlayVideoProtocol, AWEAwemePlayVideoTrackProtocol> *_videoController;
    unsigned long long _enterPinchMethod;
    UIViewController<AFDPureModePageViewControllerProtocol> *_pureModePageVC;
    double _defaultSeekToTime;
    NSString *_reactId;
    NSString *_previousPage;
    id /* block */ _playerWillStartNextLoopBlock;
    id /* block */ _shouldRespondSingleClickBlock;
    id /* block */ _isMaskViewShowing;
    AWEVideoPlayTimeRecorder *_playTimeRecoder;
    AWEAwemePageContext *_feedPageContext;
    AWEAwemeModel *_registerElementModel;
    UIView *_rightSidebarProgressView;
    AWEFeedInteractionModeManager *_interactionModeManager;
    UIView *_containerView;
    UIView *_blanketView;
    UIView *_pinchTargetView;
    id<AFDPinchUpdateAnimatorProtocol> _updateAnimatorForC2;
    double _lastBufferingPercent;
    id<AWEAwemePlayInteractionPlayDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionLongPressDelegate, AWEPlayInteractionViewControllerProtocol> _placeholderInteractionController;
    double _lastClickTimestamp;
    UITapGestureRecognizer *_tapGesture;
    AWEPlayInteractionNotificationController *_interactionNotificationController;
    id<AFDPinchZoomTransitionHelperProtocol> _pinchZoomTransitionHelper;
    id<AWEGlobalVisionPinchZoomTransitionHelperProtocol> _globalVisionPinchHelper;
    id<AWERightSidebarPinchZoomTransitionHelperProtocol> _rightSidebarPinchHelper;
    id<AWEAwemeBaseVideoContextProtocol> _videoContext;
    UIView *_fakeLandscapeTopView;
    UIView *_fakeLandscapeBottomView;
    struct CGPoint { double x; double y; } _singleClickedPoint;
    struct CGPoint { double x; double y; } _startPosition;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _beforeEnterLandscapeFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _beforeEnterPicoVRPageFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _beforeEnterVideoDescriptionMaskLayerFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastFrame;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) UIViewController<AWEAwemeBizPlayVideoProtocol, AWEAwemePlayVideoTrackProtocol> *videoController;
@property (retain, nonatomic) id<AWEAwemePlayInteractionPlayDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionLongPressDelegate, AWEPlayInteractionViewControllerProtocol> interactionController;
@property (retain, nonatomic) id<AWEAwemePlayInteractionPlayDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionLongPressDelegate, AWEPlayInteractionViewControllerProtocol> placeholderInteractionController;
@property (nonatomic) BOOL isInteractionReplacing;
@property (nonatomic) double lastClickTimestamp;
@property (retain, nonatomic) UITapGestureRecognizer *tapGesture;
@property (nonatomic) BOOL isValid;
@property (nonatomic) BOOL isHeadphonesOn;
@property (nonatomic) BOOL willPerformOnVideoPlayerViewSingleClicked;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } beforeEnterLandscapeFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } beforeEnterPicoVRPageFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } beforeEnterVideoDescriptionMaskLayerFrame;
@property (retain, nonatomic) AWEPlayInteractionNotificationController *interactionNotificationController;
@property (retain, nonatomic) id<AFDPinchZoomTransitionHelperProtocol> pinchZoomTransitionHelper;
@property (retain, nonatomic) id<AWEGlobalVisionPinchZoomTransitionHelperProtocol> globalVisionPinchHelper;
@property (retain, nonatomic) id<AWERightSidebarPinchZoomTransitionHelperProtocol> rightSidebarPinchHelper;
@property (nonatomic) BOOL isViewAppear;
@property (nonatomic) BOOL isAppResignActive;
@property (retain, nonatomic) id<AWEAwemeBaseVideoContextProtocol> videoContext;
@property (retain, nonatomic) UIView *fakeLandscapeTopView;
@property (retain, nonatomic) UIView *fakeLandscapeBottomView;
@property (nonatomic) BOOL isFakeLandscape;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } lastFrame;
@property (nonatomic) BOOL isRotating;
@property (weak, nonatomic) id<AWEFeedTableViewCellControllerPlayerDelegate> playerDelegate;
@property (weak, nonatomic) id<AWEStoryContainerViewControllerDelegate> storyDelegate;
@property (retain, nonatomic) id<AFDFeedPreloadControllerProtocol> preloadController;
@property (nonatomic) long long mediaType;
@property (nonatomic) struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *audioWrapper;
@property (nonatomic) struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *videoWrapper;
@property (retain, nonatomic) AWEAwemeModel *model;
@property (nonatomic) BOOL innerInteractionDelay;
@property (copy, nonatomic) NSString *referString;
@property (nonatomic) BOOL forbidResetVideo;
@property (copy, nonatomic) NSDictionary *context;
@property (retain, nonatomic) NSDictionary *logExtraDict;
@property (copy, nonatomic) NSString *enterFrom;
@property (copy, nonatomic) NSString *ruleId;
@property (copy, nonatomic) NSString *cityInfoString;
@property (copy, nonatomic) NSString *adEventName;
@property (nonatomic) long long type;
@property (nonatomic) BOOL isEditing;
@property (nonatomic) BOOL needsSetPureMode;
@property (retain, nonatomic) Class interactionControllerClassType;
@property (readonly, nonatomic) id<AWEPlayInteractionViewControllerNewProtocol> interactionNewController;
@property (nonatomic) BOOL isRefreshingWhenPinching;
@property (nonatomic) BOOL shouldUpdateProgressDirectly;
@property (nonatomic) unsigned long long enterPinchMethod;
@property (nonatomic) BOOL enterPureModeWithNonInteractTransiton;
@property (nonatomic) BOOL enterPureModeByPause;
@property (weak, nonatomic) UIViewController<AFDPureModePageViewControllerProtocol> *pureModePageVC;
@property (nonatomic) double defaultSeekToTime;
@property (nonatomic) BOOL shouldShowCoverWhenSeekToTime;
@property (nonatomic) BOOL isFromRecommendBigCard;
@property (copy, nonatomic) NSString *reactId;
@property (copy, nonatomic) NSString *previousPage;
@property (copy, nonatomic) id /* block */ playerWillStartNextLoopBlock;
@property (nonatomic) BOOL hideMusicInfoView;
@property (nonatomic) BOOL showGoodsElementView;
@property (nonatomic) BOOL showGoodsCardAnchorElementView;
@property (copy, nonatomic) id /* block */ shouldRespondSingleClickBlock;
@property (copy, nonatomic) id /* block */ isMaskViewShowing;
@property (retain, nonatomic) AWEVideoPlayTimeRecorder *playTimeRecoder;
@property (retain, nonatomic) AWEAwemePageContext *feedPageContext;
@property (retain, nonatomic) AWEAwemeModel *registerElementModel;
@property (weak, nonatomic) UIView *rightSidebarProgressView;
@property (nonatomic) struct CGPoint { double x; double y; } singleClickedPoint;
@property (retain, nonatomic) AWEFeedInteractionModeManager *interactionModeManager;
@property (retain, nonatomic) UIView *containerView;
@property (retain, nonatomic) UIView *blanketView;
@property (retain, nonatomic) UIView *pinchTargetView;
@property (retain, nonatomic) id<AFDPinchUpdateAnimatorProtocol> updateAnimatorForC2;
@property (nonatomic) BOOL isEndingTransition;
@property (nonatomic) BOOL shouldEnterC2Feed;
@property (nonatomic) struct CGPoint { double x; double y; } startPosition;
@property (nonatomic) double lastBufferingPercent;
@property (nonatomic) BOOL bufferingPreparedNotified;
@property (nonatomic) BOOL modernBufferingPreparedNotified;
@property (nonatomic) BOOL bufferPreloadStarted;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)aAWEPadModuleAdapterClass;

- (id)reactId;
- (void)setReactId:(id)arg0;
- (id)cityInfoString;
- (void)setCityInfoString:(id)arg0;
- (void)setOriginEntryEnterMethod:(id)arg0;
- (id)referString;
- (void)setEnterFrom:(id)arg0;
- (void)pauseWithAnimation;
- (void)playWithAnimation;
- (void)holdStop;
- (void)setPlayerAudioDevice:(unsigned long long)arg0;
- (void)player:(id)arg0 downloadProgressWithKey:(id)arg1 videoId:(id)arg2 cacheSize:(long long)arg3 mediaSize:(long long)arg4;
- (void)player:(id)arg0 didChangePlaybackRate:(double)arg1;
- (unsigned long long)pinchTransition_destinatedType;
- (BOOL)transition_shouldStartPinchInteractiveTranstionForZoomType:(unsigned long long)arg0 gestureRecognizer:(id)arg1;
- (id)transition_destinatedViewControllerForZoomType:(unsigned long long)arg0 gestureRecognizer:(id)arg1;
- (BOOL)transition_shouldStartPinchInteractiveTranstionToVC:(id)arg0;
- (id)feedPageContext;
- (void)setFeedPageContext:(id)arg0;
- (void)setReferString:(id)arg0;
- (void)setLogExtraDict:(id)arg0;
- (void)setPureMode:(BOOL)arg0;
- (id)logExtraDict;
- (id)enterFrom;
- (id)adEventName;
- (void)setAdEventName:(id)arg0;
- (void)setPureModeBlock:(id /* block */)arg0;
- (void)willSetPureModeBlock:(BOOL)arg0;
- (BOOL)shouldUseTTPlayerForXiGuaVideo;
- (void)updateCurrentAwemeModel:(id)arg0;
- (void)richContainerDidCreateProgressView:(id)arg0;
- (id)progressConfig;
- (BOOL)canPlayerPlayAfterTouch;
- (void)setStoryDelegate:(id)arg0;
- (id)storyDelegate;
- (id)preloadController;
- (void)setPreloadController:(id)arg0;
- (id)interactionNewController;
- (BOOL)isPlayingFirstStory;
- (id)currentAwemeModel;
- (void)rotateConfigAfterQuitFromLandscapeFeed:(id)arg0;
- (void)containerWillBeginDragging:(id)arg0;
- (void)containerDidEndDragging:(id)arg0;
- (void)configBeforEnterToLandscapeFeed;
- (void)configAfterQuitFromLandscapeFeed:(id)arg0;
- (void)player:(id)arg0 updatePlayTime:(double)arg1 canPlayTime:(double)arg2 totalTime:(double)arg3;
- (void)setPlayerDelegate:(id)arg0;
- (void)pauseIfNotStop;
- (void)pauseWithAnimationUsingCustomPauseIcon:(id)arg0;
- (void)prepareForDisplayWithoutCoverImage;
- (void)setDetailSlide:(id)arg0;
- (void)resetPauseIcon;
- (void)player:(id)arg0 updatePlayProgressWithTime:(double)arg1 totalDuration:(double)arg2;
- (void)player:(id)arg0 updateTotalPlayDuration:(double)arg1;
- (void)playerWillStartNextLoop:(id)arg0;
- (void)player:(id)arg0 bufferingUpdate:(double)arg1;
- (void)playerDidStopped:(id)arg0;
- (void)player:(id)arg0 didChangePlaybackToAction:(long long)arg1;
- (void)videoResourceDidRecallInPlayer:(id)arg0;
- (void)player:(id)arg0 maskInfoCallBackWithSVG:(id)arg1 pts:(unsigned long long)arg2;
- (id)playerDelegate;
- (double)defaultSeekToTime;
- (void)setDefaultSeekToTime:(double)arg0;
- (BOOL)isScrolledAutomatically;
- (void)setIsScrolledAutomatically:(BOOL)arg0;
- (BOOL)pauseBySingleClick;
- (void)setPauseBySingleClick:(BOOL)arg0;
- (void)hideInteractionViews:(BOOL)arg0;
- (void)bufferStart;
- (void)bufferEnd;
- (BOOL)shouldReponseToVideoRecallInPlayer:(id)arg0;
- (BOOL)shouldAddPlayerPeriodicTimerForPlayer:(id)arg0;
- (void)showLoadingAnimation;
- (void)stopLoadingAniamtion;
- (double)interactionInfoAreaHeight;
- (id)interactionViewForPlayer:(id)arg0;
- (void)setClickEnter:(id)arg0;
- (void)setSlideType:(id)arg0;
- (struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *)audioWrapper;
- (void)setAudioWrapper:(struct EngineAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; } *)arg0;
- (struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *)videoWrapper;
- (void)setVideoWrapper:(struct EngineVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *)arg0;
- (id)getPlayModeWithAutoPlayMode;
- (BOOL)isShowingDislike;
- (BOOL)isAITextPanelShowing;
- (BOOL)isVideoDescriptionPanelShowing;
- (BOOL)isVideoRelatedPanelShowing;
- (id)pinch_pinchZoomEventParamsWithModel:(id)arg0 isEnterPinchView:(BOOL)arg1 isPinchTransition:(BOOL)arg2;
- (id)pinch_pinchViewDurationEventParamsWithModel:(id)arg0;
- (void)pinch_updateOutContainerWithPureModeVC:(id)arg0;
- (void)pinch_startExitAnimationWithPinchTargetView:(id)arg0 updateAnimator:(id)arg1;
- (id)pinch_getAlbumContainer;
- (void)inner_pinchTransitionWillBegin;
- (void)inner_pinchTransitionDidFinish;
- (void)inner_pinchTransitionDidCancel;
- (void)outer_pinchTransitionWillBegin;
- (void)outer_pinchTransitionDidFinish;
- (void)outer_pinchTransitionDidCancel;
- (id)pinchTransitionDelegate;
- (id)pinchTransitionBackgroundColor;
- (void)imageConfigMsg:(id)arg0;
- (id)relatedViewControllerForPrefetch;
- (id)pinchTargetView;
- (id)pinch_getTargetViewForContainerView:(id)arg0;
- (void)pinch_updateToContainerWithPureModeVC:(id)arg0;
- (void)transition_didEndPinchTransitionWithContext:(id)arg0;
- (id)pinch_getBackgroundViewForContainerView:(id)arg0;
- (void)pinch_recoverFromContainerWithPureModeVC:(id)arg0;
- (void)pinch_forceExitPureModeIfNeeded:(id)arg0;
- (id)aAWEPadModuleAdapter;
- (void)transition_didStartPinchTransitionWithContext:(id)arg0;
- (Class)pinchGestureRecognizerClass;
- (id)speedManager;
- (BOOL)isHeadphonesOn;
- (void)setShowFollowStatus:(BOOL)arg0;
- (void)setIsHotSearchStatus:(BOOL)arg0;
- (void)setIsBottomHotBarShowing:(BOOL)arg0;
- (void)setControlOffset:(double)arg0;
- (BOOL)isFromRecommendBigCard;
- (void)setIsFromRecommendBigCard:(BOOL)arg0;
- (BOOL)needsSetPureMode;
- (void)setNeedsSetPureMode:(BOOL)arg0;
- (void)setPureMode:(BOOL)arg0 animated:(BOOL)arg1;
- (void)setPureMode:(BOOL)arg0 animateDuration:(double)arg1;
- (void)setShouldShowCoverWhenSeekToTime:(BOOL)arg0;
- (void)setRelatedPanelWillAppearBlock:(id /* block */)arg0;
- (void)setRelatedPanelDidDismissBlock:(id /* block */)arg0;
- (BOOL)alertIfNotValidForAction:(long long)arg0;
- (id)longPressTagsManager;
- (BOOL)adOperationGuideShowing;
- (id)pureModeExitTransitionDelegate;
- (BOOL)pinch_enableLongPressPanel;
- (id)pureModeLongPressPanelDelegate;
- (BOOL)pinch_enableLandscape;
- (id)pureModeLandscapeDelegate;
- (BOOL)pinch_enableDanmaku;
- (BOOL)pureModeAlbumPinchKeepScale;
- (BOOL)pinch_shouldHandleDismissSelfWhenDislike;
- (id)pureModePageVC;
- (void)setPureModePageVC:(id)arg0;
- (void)configBeforEnterToVideoDescriptionMaskLayer;
- (void)configAfterQuitFromVideoDescriptionMaskLayer:(id)arg0;
- (BOOL)canPinchToGlobalVision;
- (BOOL)isCommentListShowing;
- (BOOL)isLikeUserListShowing;
- (void)performLikeAction;
- (void)performCommentAction;
- (void)showSharePanel;
- (void)showVoteDetailPanel:(id)arg0;
- (BOOL)shouldShowShoppingEntrance;
- (void)showGoodsPanelWithProuctId:(id)arg0;
- (void)showGoodsPanelWithProuctId:(id)arg0 shoudEnterGoodsDetail:(BOOL)arg1;
- (void)showGoodsPanelWithProuctId:(id)arg0 shoudEnterGoodsDetail:(BOOL)arg1 autoPop:(BOOL)arg2;
- (void)showPOIGoodsPanelWithGoodsID:(id)arg0;
- (void)showCommentPanelWithInsertIDs:(id)arg0;
- (void)showCommentPanelWithInsertIDs:(id)arg0 isForcedToShowInputView:(BOOL)arg1;
- (void)showCommentPanelWithInsertIDs:(id)arg0 isForcedToShowInputView:(BOOL)arg1 shouldShowDefaultText:(BOOL)arg2;
- (id /* block */)isMaskViewShowing;
- (BOOL)isViewAppear;
- (void)setIsViewAppear:(BOOL)arg0;
- (long long)currentVideoScaleMode;
- (void)handleAppWillResignActiveNotification:(id)arg0;
- (void)_onVideoPlayerViewSingleClicked:(id)arg0;
- (double)lastClickTimestamp;
- (void)_onVideoPlayerViewDoubleClicked:(id)arg0;
- (void)setLastClickTimestamp:(double)arg0;
- (void)_onVideoPlayerViewClicked:(id)arg0;
- (void)stateOfHeadphones:(id)arg0;
- (void)resetPromptCardIfNeeded;
- (void)resetAdOperationWebViewIfNeeded;
- (void)preparePinchZoomTransition;
- (id)pinchZoomTransitionHelper;
- (void)resetPinchZoomTransition;
- (void)setPinchZoomTransitionHelper:(id)arg0;
- (void)setContainerIsPinchingIfNeeded:(BOOL)arg0;
- (void)setContainerPlayEnableIfNeeded:(BOOL)arg0;
- (void)videoControllerWillStartNextLoop:(id)arg0;
- (id)registerElementModel;
- (void)setRegisterElementModel:(id)arg0;
- (void)afterDidEndDisplaying;
- (void)resetRefreshFlag;
- (void)addInteract;
- (void)doActionIfNotValid;
- (void)doActionIfNotValidWithText:(id)arg0;
- (id)previewingViewControllerForView:(id)arg0 atPoint:(struct CGPoint { double x0; double x1; })arg1;
- (void)didCommitViewController:(id)arg0;
- (void)seekPlayTime:(double)arg0;
- (BOOL)isShrinkingVideo;
- (void)setIsHeadphonesOn:(BOOL)arg0;
- (void)videoController:(id)arg0 downloadProgressWithKey:(id)arg1 videoId:(id)arg2 cacheSize:(long long)arg3 mediaSize:(long long)arg4;
- (void)videoController:(id)arg0 bufferingUpdate:(double)arg1;
- (BOOL)rootViewTapGestureRecognizer:(id)arg0 shouldReceiveTouch:(id)arg1;
- (void)initInteractController;
- (BOOL)shouldRespondDoubleClick;
- (BOOL)innerInteractionDelay;
- (void)setHideMusicInfoView:(BOOL)arg0;
- (void)setShowGoodsElementView:(BOOL)arg0;
- (void)setShowGoodsCardAnchorElementView:(BOOL)arg0;
- (BOOL)shouldRespondSingleClick;
- (void)enterPureMode;
- (BOOL)enableVideoVCResetLayout;
- (Class)interactionControllerClassType;
- (void)setInteractionControllerClassType:(Class)arg0;
- (void)setInnerInteractionDelay:(BOOL)arg0;
- (BOOL)forbidResetVideo;
- (void)setForbidResetVideo:(BOOL)arg0;
- (void)setPlayerViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 clipsToBounds:(BOOL)arg1;
- (void)setPlayTimeRecoder:(id)arg0;
- (void)setPlayerWillStartNextLoopBlock:(id /* block */)arg0;
- (void)showLikePanel;
- (BOOL)isPaidMixScreenRecording;
- (void)setShouldRespondSingleClickBlock:(id /* block */)arg0;
- (void)showCommentPanelWithInsertIDs:(id)arg0 params:(id)arg1;
- (id /* block */)shouldRespondSingleClickBlock;
- (id)playTimeRecoder;
- (id)createInteractionController;
- (void)setIsMaskViewShowing:(id /* block */)arg0;
- (void)initVideoController;
- (void)setUpVideoController:(id)arg0;
- (void)setPinchTargetView:(id)arg0;
- (void)setBlanketView:(id)arg0;
- (id)blanketView;
- (BOOL)isEndingTransition;
- (void)setIsEndingTransition:(BOOL)arg0;
- (id)rightSidebarProgressView;
- (BOOL)isRichContent;
- (id)commerceDelegate;
- (BOOL)pinch_isLongPressPanelShowing;
- (void)pinch_showLongPressPanelWithContext:(id)arg0;
- (void)handleAppDidBecomeActiveNotification:(id)arg0;
- (void)setSingleClickedPoint:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })singleClickedPoint;
- (id)pinch_landscapeTransitionProvider;
- (id)pinch_getLandScapeDelegate;
- (void)pinch_configBeforeEnterLandscapeWithCurrentModel:(id)arg0;
- (void)pinch_pureModeDidBeRemoved;
- (void)_silentUpdate;
- (unsigned long long)enterPinchMethod;
- (void)setEnterPinchMethod:(unsigned long long)arg0;
- (void)p_hideInteractionElementIfNeeded;
- (void)requestReuseVideoPlayer:(id)arg0;
- (void)updateLogExtraDict;
- (id)fakeLandscapeTopView;
- (id)fakeLandscapeBottomView;
- (void)setFakeLandscapeTopView:(id)arg0;
- (void)setFakeLandscapeBottomView:(id)arg0;
- (BOOL)bufferPreloadStarted;
- (void)setBufferPreloadStarted:(BOOL)arg0;
- (BOOL)isCurrentLandscape;
- (id)videoContext;
- (void)setVideoContext:(id)arg0;
- (void)setShouldUpdateProgressDirectly:(BOOL)arg0;
- (BOOL)shouldUpdateProgressDirectly;
- (void)awe_forbidFirstVideoInteractionCompletion;
- (void)awe_recordVideoId;
- (BOOL)awe_ifDelayFirstVideoInteraction;
- (void)awe_delayAddFirstVideoInteraction;
- (BOOL)awe_ifCurrentPlayIsFirstVideo;
- (double)lastBufferingPercent;
- (BOOL)bufferingPreparedNotified;
- (void)setBufferingPreparedNotified:(BOOL)arg0;
- (void)setLastBufferingPercent:(double)arg0;
- (BOOL)modernBufferingPreparedNotified;
- (void)setModernBufferingPreparedNotified:(BOOL)arg0;
- (void)checkNeedPercentPreloadWithVideoController:(id)arg0 bufferingUpdate:(double)arg1;
- (void)checkNeedPercentPreloadWithPlayer:(id)arg0 key:(id)arg1 videoId:(id)arg2 cacheSize:(long long)arg3 mediaSize:(long long)arg4;
- (void)checkNeedBufferPreloadWithPlayer:(id)arg0 videoDuration:(double)arg1 key:(id)arg2 videoId:(id)arg3 cacheSize:(long long)arg4 mediaSize:(long long)arg5;
- (void)setLongPressTagsManager:(id)arg0;
- (void)pinch_trackShowLongPressPanelWithContext:(id)arg0;
- (BOOL)isRefreshingWhenPinching;
- (void)pinch_playFromBeginning:(id)arg0;
- (BOOL)pinch_canShowProgressForAweme:(id)arg0;
- (void)updateSpeedIfNeeded;
- (void)configBeforEnterToLandscapeFeedWithShouldCheck:(BOOL)arg0 fromPinch:(BOOL)arg1;
- (void)normalRecoverWhenBackFromPinch;
- (BOOL)enterPureModeWithNonInteractTransiton;
- (void)setShouldEnterC2Feed:(BOOL)arg0;
- (void)setUpdateAnimatorForC2:(id)arg0;
- (id)updateAnimatorForC2;
- (BOOL)shouldEnterC2Feed;
- (void)awe_pinchToC2FeedStart:(id)arg0;
- (void)awe_pinchToC2FeedChanged:(id)arg0;
- (void)awe_pinchToC2FeedEnd:(id)arg0;
- (void)resetPinchToC2IfNeeded;
- (void)setEnterPureModeByPause:(BOOL)arg0;
- (void)enterPureModeSlides;
- (id)interactionModeManager;
- (void)dismissPauseFramework;
- (void)showPauseFramework;
- (BOOL)isUserCommonAweme;
- (BOOL)shouldSlidesClickEnterSilent;
- (BOOL)checkFullPageOnClickFromFeedABWithOtherAB:(BOOL)arg0;
- (void)onVideoPlayerSingleClickWithCommenAlbum:(BOOL)arg0;
- (void)onVideoPlayerSingleClickWithPinch;
- (BOOL)isClickedPlayButtonToPlay;
- (void)onVideoPlayerSingleClickWithInteractionMode;
- (void)onVideoPlayerSingleClickByPause;
- (void)onVideoPlayerSingleClickInCommonSence;
- (BOOL)p_isFromSearchDisableAlbumAutoplayScene;
- (void)onVideoPlayerSingleClickWithAdsAlbum;
- (void)onVideoPlayerSingleClick;
- (BOOL)p_isFromGeneralSearchAndExperienceSearchScene;
- (void)addInteractController;
- (void)setInteractionModeManager:(id)arg0;
- (void)configVideoContext;
- (void)showGlobalVisionFromGuideView:(id)arg0;
- (id)interactionNotificationController;
- (void)configFakeLandscapeMaskView;
- (void)checkAndReBuileRichAwemeContentIfNeeded;
- (BOOL)shouldExitInteractionModeWithTopVC:(id)arg0;
- (void)setIsAppResignActive:(BOOL)arg0;
- (void)configInteractController:(id)arg0;
- (BOOL)hideMusicInfoView;
- (BOOL)showGoodsElementView;
- (BOOL)showGoodsCardAnchorElementView;
- (BOOL)__canShowBottomViewedView;
- (BOOL)__isFromHomepagePostWorkList;
- (void)p_hideLeftInteractionIfNeeded;
- (void)p_hideRightInteractionIfNeeded;
- (void)p_hideBottomInteractionIfNeeded;
- (BOOL)shouldShowCoverWhenSeekToTime;
- (void)initRichContentWithFactory;
- (void)initRichContentIfNeeded;
- (void)setRightSidebarPinchStyle:(id)arg0;
- (void)__checkPreloadVideoController;
- (void)setModel:(id)arg0 forPreloadInteraction:(id)arg1;
- (id)placeholderInteractionController;
- (void)replaceInteractionController:(id)arg0;
- (void)adaptFakeLandscapeIfNeeded:(id)arg0;
- (void)__silentUpdateInnerMethod;
- (void)setIsInteractionReplacing:(BOOL)arg0;
- (BOOL)isInteractionReplacing;
- (void)silentUpdateForPreloadInteraction;
- (BOOL)enableAdapeFakeLandscape;
- (BOOL)isValidFakeLandscapeVideo:(id)arg0;
- (void)setIsFakeLandscape:(BOOL)arg0;
- (BOOL)isFakeLandscape;
- (void)updatePlayerFrameForModel:(id)arg0;
- (void)hideFakeMaskView;
- (void)setBeforeEnterVideoDescriptionMaskLayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })beforeEnterVideoDescriptionMaskLayerFrame;
- (void)setBeforeEnterLandscapeFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })beforeEnterLandscapeFrame;
- (void)setBeforeEnterPicoVRPageFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)shouldRemoveConstraintAfterExitVRPage;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })beforeEnterPicoVRPageFrame;
- (id /* block */)playerWillStartNextLoopBlock;
- (BOOL)enablePresentCampaignBigRedPacketWithCampaignID:(id)arg0;
- (void)updateMixWatchedRecordIfNeedWith:(id)arg0 curTime:(double)arg1 totalTime:(double)arg2;
- (void)setEnterPureModeWithNonInteractTransiton:(BOOL)arg0;
- (void)setWillPerformOnVideoPlayerViewSingleClicked:(BOOL)arg0;
- (BOOL)isAppResignActive;
- (BOOL)willPerformOnVideoPlayerViewSingleClicked;
- (void)videoPlayerSingleClick;
- (void)initRichContentIfNeededWithExperiment;
- (void)setRightSidebarProgressView:(id)arg0;
- (BOOL)getIsRefreshing;
- (void)prepareRightSidebarPinchZoomTransition;
- (BOOL)isGlobalVisionShouldStartPinchForZoomType:(unsigned long long)arg0 gestureRecognizer:(id)arg1;
- (void)prepareGlobalVisionPinchZoomTransition;
- (id)rightSidebarPinchHelper;
- (id)globalVisionPinchHelper;
- (id)rsf_pinchTargetVideoController;
- (id)rsf_pinchTargetTableViewController;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rsf_targetFrame;
- (void)rsf_pushAnimationComplete;
- (id)rsf_pinchCurrentAweme;
- (void)rsf_pinchStart;
- (void)resetGlobalVisionPinchZoomTransitionIfNeeded;
- (void)resetRightSidebarPinchZoomTransitionIfNeeded;
- (void)setIsRotating:(BOOL)arg0;
- (BOOL)isAwemeInFeed:(id)arg0;
- (void)setGlobalVisionPinchHelper:(id)arg0;
- (void)setRightSidebarPinchHelper:(id)arg0;
- (void)setIsRefreshingWhenPinching:(BOOL)arg0;
- (BOOL)enterPureModeByPause;
- (void)resetPureModeStatus;
- (void)configBeforEnterToPicoVRPage;
- (void)configAfterQuitFromPicoVRPage:(id)arg0;
- (BOOL)shouldHandlePinchToDoubleColumn;
- (void)rsf_pinchUpdateWithInteractionHidden:(BOOL)arg0;
- (void)rsf_pinchFinish;
- (void)rsf_pinchStartIn;
- (void)pushIntoPureMode:(unsigned long long)arg0;
- (BOOL)__canAccessToAnalysisView:(id)arg0;
- (BOOL)musicTrackAlertIfNotValid;
- (BOOL)adPromptModalShowing;
- (BOOL)shouldShowGeofencingVideo;
- (void)setPlaceholderInteractionController:(id)arg0;
- (void)setInteractionNotificationController:(id)arg0;
- (void)setModel:(id)arg0;
- (double)currentPlaybackTime;
- (id)init;
- (void)setMediaType:(long long)arg0;
- (id)transitionContext;
- (void)viewDidLayoutSubviews;
- (void)setIsValid:(BOOL)arg0;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (id)model;
- (void)setInteractionController:(id)arg0;
- (void)setIndexPath:(long long)arg0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })arg0 withTransitionCoordinator:(id)arg1;
- (void)stop;
- (long long)mediaType;
- (long long)type;
- (BOOL)isEditing;
- (void)viewWillDisappear:(BOOL)arg0;
- (BOOL)isValid;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)play:(id)arg0;
- (void)setContainerView:(id)arg0;
- (void)viewDidDisappear:(BOOL)arg0;
- (id)tapGesture;
- (BOOL)gestureRecognizer:(id)arg0 shouldReceiveTouch:(id)arg1;
- (void)setType:(long long)arg0;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)interactionController;
- (id)containerView;
- (id)context;
- (void)setVolume:(float)arg0;
- (id)initWithMediaType:(long long)arg0;
- (BOOL)isRotating;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)reset;
- (void)viewDidLoad;
- (void)pause:(id)arg0;
- (BOOL)accessibilityScroll:(long long)arg0;
- (id)previousPage;
- (void)setPreviousPage:(id)arg0;
- (struct CGPoint { double x0; double x1; })startPosition;
- (void)setStartPosition:(struct CGPoint { double x0; double x1; })arg0;
- (void)handlePinchGesture:(id)arg0;
- (unsigned long long)playerType;
- (void)setLastFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lastFrame;
- (void)setTapGesture:(id)arg0;
- (id)videoController;
- (void)setVideoController:(id)arg0;
- (void)pauseIfPlaying;
- (void)setIsEditing:(BOOL)arg0;
- (void)setRuleId:(id)arg0;
- (id)ruleId;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;
- (void)pageDidAppear:(BOOL)arg0;
- (void)pageWillDisappear:(BOOL)arg0;

@end
