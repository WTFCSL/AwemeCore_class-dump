//
//     Generated by private class-dump
//

@interface WCTSelectBase : WCTChainCall {
    BOOL _prepared;
    struct RecyclableStatement { struct RecyclableHandle { struct shared_ptr<WCDB::HandleWrap> { struct HandleWrap *__ptr_; struct __shared_weak_count *__cntrl_; } m_value; struct Recyclable<std::shared_ptr<WCDB::HandleWrap>> { struct shared_ptr<WCDB::HandleWrap> { struct HandleWrap *__ptr_; struct __shared_weak_count *__cntrl_; } m_value; void *m_reference; struct function<void (std::shared_ptr<WCDB::HandleWrap> &)> { struct __value_func<void (std::shared_ptr<WCDB::HandleWrap> &)> { struct type { unsigned char __lx[24]; } __buf_; void *__f_; } __f_; } m_onRecycled; } m_recyclable; } m_handle; struct shared_ptr<WCDB::StatementHandle> { struct StatementHandle *__ptr_; struct __shared_weak_count *__cntrl_; } m_statementHandle; } _statementHandle;
    struct StatementSelect { void /* function */ **_vptr$Statement; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned long long __cap_; } __l; struct __short { char __data_[23]; struct { unsigned char __size_; } ; } __s; struct __raw { unsigned long long __words[3]; } __r; } ; } __value_; } __r_; } m_description; } _statement;
}

- (id)initWithCore:(const void *)arg0;
- (BOOL)extractValueToRow:(id)arg0;
- (id)extractValue;
- (BOOL)extractPropertyToObject:(id)arg0 atIndex:(int)arg1 withColumnBinding:(const void *)arg2;
- (id)initWithResultList:(const void *)arg0 fromTables:(id)arg1;
- (BOOL)lazyPrepare;
- (id)where:(const void *)arg0;
- (id)orderBy:(const void *)arg0;
- (id)limit:(const void *)arg0;
- (id)having:(const void *)arg0;
- (const void *)statement;
- (BOOL)next;
- (void)finalize;
- (id)groupBy:(const void *)arg0;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)offset:(const void *)arg0;

@end
