//
//     Generated by private class-dump
//

@class NSRecursiveLock, NSMutableDictionary, IESEffectPlatformResponseModel, NSLock, NSDictionary, NSObject, NSMutableArray;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface AWEEffectFilterDataManager : NSObject {
    BOOL _isFetching;
    BOOL _enableEffectPrefetchOptimize;
    NSDictionary *_trackExtraDic;
    NSMutableDictionary *_effectIdAndEffectCache;
    NSRecursiveLock *_effectIdAndEffectCacheLock;
    NSMutableDictionary *_effectNameAndEffectCache;
    NSRecursiveLock *_effectNameAndEffectCacheLock;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSObject<OS_dispatch_queue> *_downloadQueue;
    NSMutableArray *_downloadingEffects;
    long long _nextDownloadIndex;
    IESEffectPlatformResponseModel *_p_effectPlatformModelResponseModel;
    NSLock *_lock;
}

@property (retain, nonatomic) NSMutableDictionary *effectIdAndEffectCache;
@property (retain, nonatomic) NSRecursiveLock *effectIdAndEffectCacheLock;
@property (retain, nonatomic) NSMutableDictionary *effectNameAndEffectCache;
@property (retain, nonatomic) NSRecursiveLock *effectNameAndEffectCacheLock;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *downloadQueue;
@property (retain, nonatomic) NSMutableArray *downloadingEffects;
@property (nonatomic) long long nextDownloadIndex;
@property (nonatomic) BOOL isFetching;
@property (retain, nonatomic) IESEffectPlatformResponseModel *p_effectPlatformModelResponseModel;
@property (retain, nonatomic) NSLock *lock;
@property (nonatomic) BOOL enableEffectPrefetchOptimize;
@property (copy, nonatomic) NSDictionary *trackExtraDic;

+ (id)defaultManager;

- (void)setTrackExtraDic:(id)arg0;
- (id)trackExtraDic;
- (void)appendDownloadedEffect:(id)arg0;
- (id)effectWithID:(id)arg0;
- (id /* block */)pathConvertBlock;
- (long long)downloadStatusOfEffect:(id)arg0;
- (id)downloadingEffects;
- (void)setDownloadingEffects:(id)arg0;
- (void)setEnableEffectPrefetchOptimize:(BOOL)arg0;
- (BOOL)effectsPanelCached;
- (void)updateEffectFilters;
- (void)addEffectToDownloadQueue:(id)arg0;
- (void)addEffectToDownloadQueue:(id)arg0 preload:(BOOL)arg1;
- (id)builtinEffects;
- (id)effectPlatformModel;
- (double)effectDurationForEffect:(id)arg0;
- (id)maskColorForEffect:(id)arg0;
- (id)effectIdWithType:(unsigned long long)arg0;
- (void)setNextDownloadIndex:(long long)arg0;
- (void)addNextEffectToDownloadQueue;
- (long long)nextDownloadIndex;
- (BOOL)enableEffectPrefetchOptimize;
- (id)effectIdAndEffectCacheLock;
- (id)effectIdAndEffectCache;
- (id)effectNameAndEffectCacheLock;
- (id)effectNameAndEffectCache;
- (void)setP_effectPlatformModelResponseModel:(id)arg0;
- (void)downloadEffect:(id)arg0 isPreload:(BOOL)arg1;
- (id)p_effectPlatformModelResponseModel;
- (void)setEffectIdAndEffectCache:(id)arg0;
- (void)setEffectIdAndEffectCacheLock:(id)arg0;
- (void)setEffectNameAndEffectCache:(id)arg0;
- (void)setEffectNameAndEffectCacheLock:(id)arg0;
- (id)init;
- (id)semaphore;
- (void).cxx_destruct;
- (void)setSemaphore:(id)arg0;
- (void)setDownloadQueue:(id)arg0;
- (id)lock;
- (id)downloadQueue;
- (void)setLock:(id)arg0;
- (id)effectWithName:(id)arg0;
- (BOOL)isFetching;
- (void)setIsFetching:(BOOL)arg0;
- (id)availableEffects;

@end
