//
//     Generated by private class-dump
//

@class NSMutableDictionary, HMDThreadMonitorConfig, NSString, NSDictionary;

@interface HMDThreadCountMonitorPlugin : NSObject <HMDThreadMonitorPluginProtocol> {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _rwlock;
    BOOL _isRunning;
    HMDThreadMonitorConfig *_config;
    double _nextUploadTime;
    NSMutableDictionary *_threadNameMap;
    NSMutableDictionary *_pthreadNameMap;
    NSMutableDictionary *_pthreadBacktraceMap;
    NSString *_specialThread;
    NSDictionary *_specialThreadWhiteList;
}

@property (nonatomic) BOOL isRunning;
@property (retain, nonatomic) HMDThreadMonitorConfig *config;
@property (nonatomic) double nextUploadTime;
@property (retain, nonatomic) NSMutableDictionary *threadNameMap;
@property (retain, nonatomic) NSMutableDictionary *pthreadNameMap;
@property (retain, nonatomic) NSMutableDictionary *pthreadBacktraceMap;
@property (copy) NSString *specialThread;
@property (copy, nonatomic) NSDictionary *specialThreadWhiteList;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)pluginInstance;

- (void)setSpecialThread:(id)arg0;
- (void)initializeThreadCountMonitorEnv;
- (void)registerThreadCallback;
- (double)nextUploadTime;
- (id)specialThread;
- (void)uploadSpecialThread:(id)arg0 backtrace:(id)arg1;
- (id)pthreadBacktraceMap;
- (void)getPthreadBacktrace:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0;
- (void)addGCDtoThreadNameMap:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0;
- (void)reciveAllThreadCountException:(long long)arg0;
- (void)removeThreadNameMap:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0;
- (id)pthreadNameMap;
- (id)threadNameMap;
- (void)setNextUploadTime:(double)arg0;
- (void)getGCDBacktrace:(id)arg0;
- (void)threadCreated:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0;
- (void)threadDestroy:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0;
- (void)addPthreadtoThreadNameMap:(struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec *x1; char x2[8176]; } *)arg0 pthreadName:(id)arg1;
- (void)setThreadNameMap:(id)arg0;
- (void)setPthreadNameMap:(id)arg0;
- (void)setPthreadBacktraceMap:(id)arg0;
- (id)specialThreadWhiteList;
- (void)setSpecialThreadWhiteList:(id)arg0;
- (void)setupThreadConfig:(id)arg0;
- (void)setIsRunning:(BOOL)arg0;
- (BOOL)isRunning;
- (id)init;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (void)stop;
- (void)start;

@end
