//
//     Generated by private class-dump
//

@class AWEMaskWindow, AWEPlayInteractionViewController, NSString, AWEAwemeModel, UIView;
@protocol AWEFeedProgressSliderProtocol;

@interface AWEProgressOptimizeManager : NSObject <AWEHPLifeCycleProtocol, UIGestureRecognizerDelegate, AWEMaskWindowFakeGestureDelegate> {
    BOOL _tempAreaIsLongPressHotZoneForOthers;
    BOOL _isPowering;
    BOOL _lowPowerResumeActivited;
    BOOL _hotResumeActivited;
    BOOL _currentSliderIsShowing;
    BOOL _enableIMDynamicLibraryLoadOpt;
    long long _currentState;
    long long _currentBattery;
    AWEAwemeModel *_currentAweme;
    UIView<AWEFeedProgressSliderProtocol> *_currentSlider;
    UIView *_currentInteractionView;
    AWEMaskWindow *_currentMaskWindow;
    AWEPlayInteractionViewController *_currentInteractionViewController;
    NSString *_groupIDForFalseTouch;
    NSString *_authorIDForFalseTouch;
    NSString *_referStringForFalseTouch;
    double _enterTimeForFalseTouch;
    NSString *_tabIDForFalseTouch;
    NSString *_privioudTabIDForFalseTouch;
    NSString *_musicGroupIDForFalseTouch;
    NSString *_musicAuthorIDForFalseTouch;
    NSString *_musicReferStringForFalseTouch;
    double _musicEnterTimeForFalseTouch;
    NSString *_descriptionGroupIDForFalseTouch;
    NSString *_descriptionAuthorIDForFalseTouch;
    NSString *_descriptionReferStringForFalseTouch;
    double _descriptionEnterTimeForFalseTouch;
    NSString *_detailGroupIDForFalseTouch;
    NSString *_detailAuthorIDForFalseTouch;
    NSString *_detailReferStringForFalseTouch;
    double _detailEnterTimeForFalseTouch;
}

@property (nonatomic) long long currentState;
@property (nonatomic) long long currentBattery;
@property (nonatomic) BOOL isPowering;
@property (nonatomic) BOOL lowPowerResumeActivited;
@property (nonatomic) BOOL hotResumeActivited;
@property (retain, nonatomic) AWEAwemeModel *currentAweme;
@property (weak, nonatomic) UIView<AWEFeedProgressSliderProtocol> *currentSlider;
@property (weak, nonatomic) UIView *currentInteractionView;
@property (weak, nonatomic) AWEMaskWindow *currentMaskWindow;
@property (nonatomic) BOOL currentSliderIsShowing;
@property (weak, nonatomic) AWEPlayInteractionViewController *currentInteractionViewController;
@property (retain, nonatomic) NSString *groupIDForFalseTouch;
@property (retain, nonatomic) NSString *authorIDForFalseTouch;
@property (retain, nonatomic) NSString *referStringForFalseTouch;
@property (nonatomic) double enterTimeForFalseTouch;
@property (retain, nonatomic) NSString *tabIDForFalseTouch;
@property (retain, nonatomic) NSString *privioudTabIDForFalseTouch;
@property (retain, nonatomic) NSString *musicGroupIDForFalseTouch;
@property (retain, nonatomic) NSString *musicAuthorIDForFalseTouch;
@property (retain, nonatomic) NSString *musicReferStringForFalseTouch;
@property (nonatomic) double musicEnterTimeForFalseTouch;
@property (retain, nonatomic) NSString *descriptionGroupIDForFalseTouch;
@property (retain, nonatomic) NSString *descriptionAuthorIDForFalseTouch;
@property (retain, nonatomic) NSString *descriptionReferStringForFalseTouch;
@property (nonatomic) double descriptionEnterTimeForFalseTouch;
@property (retain, nonatomic) NSString *detailGroupIDForFalseTouch;
@property (retain, nonatomic) NSString *detailAuthorIDForFalseTouch;
@property (retain, nonatomic) NSString *detailReferStringForFalseTouch;
@property (nonatomic) double detailEnterTimeForFalseTouch;
@property (nonatomic) BOOL enableIMDynamicLibraryLoadOpt;
@property (nonatomic) BOOL tempAreaIsLongPressHotZoneForOthers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)enableProgressGestureOnDetailCommentView;
+ (void)registSelfToHPLifeCycleIfNeed;
+ (double)fastSpeedHotAreaPercent;
+ (BOOL)shouldOptimizeBottomBarGesture;
+ (BOOL)enableProgressRangeSlide;
+ (BOOL)isHitLongPressProgressTest;
+ (BOOL)enableProgressFalseTouch;
+ (double)getProgressUpdateMinOffset;
+ (double)sliderThumbLeftRightOffset;
+ (double)sliderThumbTopOffset;
+ (BOOL)shouldPreferLowFrame;
+ (double)longPressProgressDuration;
+ (BOOL)isShowingPanelsWithViewController:(id)arg0 dispatcherManager:(id)arg1;
+ (BOOL)areaIsLongPressHotZoneForOthers:(id)arg0 model:(id)arg1 referString:(id)arg2;
+ (BOOL)hideProgressWhileDrag;
+ (BOOL)enableProgressAnimation;
+ (BOOL)enableFixProgress;
+ (BOOL)isShortProgress;
+ (void)setIsProgressSliding:(BOOL)arg0;
+ (void)calculateProgressSliderHotZoneWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 awemeModel:(id)arg1 isPause:(BOOL)arg2 referString:(id)arg3 down:(double *)arg4 up:(double *)arg5 bottomElement:(id)arg6;
+ (id)progressHozeZoneArea;
+ (id)progressNewHotZone;
+ (id)progressPauseRangeConfig;
+ (BOOL)shouldChangeHotZoneWithBottomBar:(id)arg0;
+ (BOOL)enableProgressGesturePriority;
+ (id)classPriorityListForWindowsGesture;
+ (BOOL)enableProgressRefactor;
+ (double)getRealMinColorAlphaWithOriginAlpha:(double)arg0 maximumAlpha:(double)arg1;
+ (long long)progressAlphaType;
+ (id)getOptimizedProgressIconImageWithAlphaType:(long long)arg0;
+ (BOOL)referStringIsReadyForLongPressProgress:(id)arg0;
+ (BOOL)areaEnableLongPressProgressWithProgressFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 point:(struct CGPoint { double x0; double x1; })arg1;
+ (BOOL)isProgressSliding;
+ (BOOL)isEmoticonPanelShowingOnIMFeedDetailViewWithViewController:(id)arg0;
+ (BOOL)enableProgressGestureLower;
+ (id)classLowerListForWindowsGesture;
+ (BOOL)shouldOptimizeProgressIconAlpha;
+ (id)getImageWithColor:(id)arg0;
+ (id)progressRefactorTestDict;
+ (long long)hotResumeType;
+ (long long)lowPowerResumeTarget;
+ (id)longPressProgressTestDict;
+ (id)progressFalseTouchEnableTabDict;
+ (id)sharedInstance;

- (id)currentAweme;
- (void)recordDetailCoverClickedWithAweme:(id)arg0 referString:(id)arg1 commentInputViewExternScene:(unsigned long long)arg2 commentInputViewPosition:(unsigned long long)arg3;
- (void)trackDetailCoverFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1 commentInputViewExternScene:(unsigned long long)arg2 commentInputViewPosition:(unsigned long long)arg3;
- (void)resetDetailCoverFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1 commentInputViewExternScene:(unsigned long long)arg2 commentInputViewPosition:(unsigned long long)arg3;
- (void)windowFakeGestureTriggered:(id)arg0;
- (BOOL)enableIMDynamicLibraryLoadOpt;
- (void)setEnableIMDynamicLibraryLoadOpt:(BOOL)arg0;
- (void)setCurrentAweme:(id)arg0;
- (void)enterPublishEntrance;
- (void)leavePublishEntrance;
- (void)enterBottomTabChannelWithTabId:(id)arg0 enterModel:(id)arg1;
- (void)leaveBottomTabChannelWithTabId:(id)arg0 leaveModel:(id)arg1;
- (void)onBatteryStateChange;
- (void)onThermalStateChange:(id)arg0;
- (void)onBatteryLevelChange;
- (void)setReferStringForFalseTouch:(id)arg0;
- (id)referStringForFalseTouch;
- (void)resetDescriptionFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1;
- (void)trackDescriptionFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1;
- (void)recordDescriptionClickedWithAweme:(id)arg0 referString:(id)arg1;
- (void)resetMusicCoverFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1;
- (void)trackMusicCoverFalseTouchIfNeedWithAweme:(id)arg0 referString:(id)arg1;
- (void)recordMusicCoverClickedWithAweme:(id)arg0 referString:(id)arg1;
- (BOOL)shouldResumeHot;
- (BOOL)shouldResumeLowPower;
- (void)setIsDisplaying:(BOOL)arg0 currentSlider:(id)arg1;
- (BOOL)isInTopVC;
- (void)resetGestureDelegateIfNeed;
- (void)setToWindowsGestureIfNeed:(id)arg0 progress:(id)arg1 model:(id)arg2 interactionView:(id)arg3 referString:(id)arg4 currentInteractionVC:(id)arg5;
- (void)setTempAreaIsLongPressHotZoneForOthers:(BOOL)arg0;
- (void)setupResumeDataIfNeeded;
- (void)setCurrentBattery:(long long)arg0;
- (void)setIsPowering:(BOOL)arg0;
- (void)refreshHotResume;
- (void)refreshLowPowerResume;
- (BOOL)isPowering;
- (void)setLowPowerResumeActivited:(BOOL)arg0;
- (long long)currentBattery;
- (void)setHotResumeActivited:(BOOL)arg0;
- (BOOL)hotResumeActivited;
- (BOOL)lowPowerResumeActivited;
- (BOOL)tempAreaIsLongPressHotZoneForOthers;
- (void)setTabIDForFalseTouch:(id)arg0;
- (void)setGroupIDForFalseTouch:(id)arg0;
- (void)setAuthorIDForFalseTouch:(id)arg0;
- (void)setPrivioudTabIDForFalseTouch:(id)arg0;
- (void)setMusicGroupIDForFalseTouch:(id)arg0;
- (void)setMusicAuthorIDForFalseTouch:(id)arg0;
- (void)setMusicReferStringForFalseTouch:(id)arg0;
- (void)setMusicEnterTimeForFalseTouch:(double)arg0;
- (id)musicGroupIDForFalseTouch;
- (id)musicReferStringForFalseTouch;
- (double)musicEnterTimeForFalseTouch;
- (id)musicAuthorIDForFalseTouch;
- (void)p_resetMusicCoverFalseTouch;
- (BOOL)p_enableDetailCoverSceneWithReferString:(id)arg0 aweme:(id)arg1 commentInputViewExternScene:(unsigned long long)arg2 commentInputViewPosition:(unsigned long long)arg3;
- (void)setDetailGroupIDForFalseTouch:(id)arg0;
- (void)setDetailAuthorIDForFalseTouch:(id)arg0;
- (void)setDetailReferStringForFalseTouch:(id)arg0;
- (void)setDetailEnterTimeForFalseTouch:(double)arg0;
- (id)detailGroupIDForFalseTouch;
- (id)detailReferStringForFalseTouch;
- (double)detailEnterTimeForFalseTouch;
- (id)detailAuthorIDForFalseTouch;
- (void)p_resetDetailCoverFalseTouch;
- (void)setDescriptionGroupIDForFalseTouch:(id)arg0;
- (void)setDescriptionAuthorIDForFalseTouch:(id)arg0;
- (void)setDescriptionReferStringForFalseTouch:(id)arg0;
- (void)setDescriptionEnterTimeForFalseTouch:(double)arg0;
- (id)descriptionGroupIDForFalseTouch;
- (id)descriptionReferStringForFalseTouch;
- (double)descriptionEnterTimeForFalseTouch;
- (id)descriptionAuthorIDForFalseTouch;
- (void)p_resetDescriptionFalseTouch;
- (void)setEnterTimeForFalseTouch:(double)arg0;
- (id)tabIDForFalseTouch;
- (id)privioudTabIDForFalseTouch;
- (double)enterTimeForFalseTouch;
- (id)groupIDForFalseTouch;
- (id)authorIDForFalseTouch;
- (void)resetProgressFalseTouch;
- (id)currentMaskWindow;
- (void)setCurrentMaskWindow:(id)arg0;
- (void)setCurrentSlider:(id)arg0;
- (void)setCurrentInteractionView:(id)arg0;
- (void)setCurrentInteractionViewController:(id)arg0;
- (void)setCurrentSliderIsShowing:(BOOL)arg0;
- (BOOL)checkIsAvailable;
- (id)currentSlider;
- (id)currentInteractionView;
- (BOOL)currentSliderIsShowing;
- (id)currentInteractionViewController;
- (void)setCurrentState:(long long)arg0;
- (id)init;
- (void).cxx_destruct;
- (long long)currentState;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)dealloc;

@end
