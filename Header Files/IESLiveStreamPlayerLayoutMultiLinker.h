//
//     Generated by private class-dump
//

@class NSString, NSArray, IESLiveLinkMicSEIParserResult;
@protocol IESLiveMultiLinkerService;

@interface IESLiveStreamPlayerLayoutMultiLinker : IESLiveStreamPlayerLayoutBase <IESLiveAutoRotateAction, IESLiveSEIListener> {
    BOOL _isInMultiLinker;
    BOOL _isNeedUpdateMultiLinkerLayoutParam;
    double _multiLinkerDistance;
    double _multiLinkerSpacing;
    NSArray *_multiLinkerGridRatioFrames;
    id<IESLiveMultiLinkerService> _multilinkerService;
    unsigned long long _currentLayoutGridCount;
    long long _currentLayoutType;
    long long _currentScaleType;
    long long _currentAlignMode;
    NSString *_currentFocusId;
    NSArray *_regions;
    IESLiveLinkMicSEIParserResult *_lastSEIResult;
    NSString *_backgroundColor;
    NSString *_multilinkerBackgroundColor;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _multiLinkerRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _multiLinkerCropFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentCropRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _originContentFrame;
}

@property (retain, nonatomic) id<IESLiveMultiLinkerService> multilinkerService;
@property (nonatomic) unsigned long long currentLayoutGridCount;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } currentCropRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } originContentFrame;
@property (nonatomic) long long currentLayoutType;
@property (nonatomic) long long currentScaleType;
@property (nonatomic) long long currentAlignMode;
@property (copy, nonatomic) NSString *currentFocusId;
@property (copy, nonatomic) NSArray *regions;
@property (retain, nonatomic) IESLiveLinkMicSEIParserResult *lastSEIResult;
@property (copy, nonatomic) NSString *backgroundColor;
@property (copy, nonatomic) NSString *multilinkerBackgroundColor;
@property (nonatomic) BOOL isInMultiLinker;
@property (nonatomic) double multiLinkerDistance;
@property (copy, nonatomic) NSArray *multiLinkerGridRatioFrames;
@property (nonatomic) double multiLinkerSpacing;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerCropFrame;
@property (nonatomic) BOOL isNeedUpdateMultiLinkerLayoutParam;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (BOOL)isValidRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })originContentFrame;
- (void)setOriginContentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)multiLinkerDistance;
- (id)multiLinkerGridRatioFrames;
- (BOOL)isNeedUpdateMultiLinkerLayoutParam;
- (void)setIsNeedUpdateMultiLinkerLayoutParam:(BOOL)arg0;
- (id)multilinkerService;
- (void)setMultilinkerService:(id)arg0;
- (void)setMultiLinkerGridRatioFrames:(id)arg0;
- (BOOL)layoutWithMetaInfo:(id)arg0;
- (void)setMultilinkerBackgroundColor:(id)arg0;
- (void)setCurrentScaleType:(long long)arg0;
- (void)setCurrentAlignMode:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })losePrecisionRectWith:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)multilinkerBackgroundColor;
- (long long)currentScaleType;
- (long long)currentAlignMode;
- (void)animationForAutoRotateToOrientation:(long long)arg0 duration:(double)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (unsigned long long)seiDispatchPriority;
- (unsigned long long)typeToCheckIfLaterThanWhenReuseSEI;
- (BOOL)shouldReceiveImmidiatelySEI;
- (BOOL)shouldUseCurrentLayoutType;
- (void)layoutWithPreviousType:(unsigned long long)arg0;
- (BOOL)isInMultiLinker;
- (BOOL)isPreStreamPlayer;
- (BOOL)unifyPlayerLayout;
- (BOOL)useLayoutMachine;
- (void)setIsInMultiLinker:(BOOL)arg0;
- (void)setMultiLinkerDistance:(double)arg0;
- (void)setMultiLinkerSpacing:(double)arg0;
- (void)setMultiLinkerRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setMultiLinkerCropFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)multiLinkerSpacing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multiLinkerRatioFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multiLinkerCropFrame;
- (id)lastSEIResult;
- (void)resetPlayerCropParam;
- (void)setLastSEIResult:(id)arg0;
- (void)setupPlayerCropParamIfNeeded;
- (void)updatePlayerRatioFrameLayoutWithScreenSize:(struct CGSize { double x0; double x1; })arg0 isLandscape:(BOOL)arg1;
- (unsigned long long)currentLayoutGridCount;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentCropRatioFrame;
- (id)currentFocusId;
- (void)setCurrentLayoutGridCount:(unsigned long long)arg0;
- (void)setCurrentFocusId:(id)arg0;
- (void)updateLayoutMachineCropParamWithContainerSize:(struct CGSize { double x0; double x1; })arg0 isLandscape:(BOOL)arg1;
- (void)setCurrentCropRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)resetMultiLinkerParam;
- (void)updatePlayerBackgroundColor;
- (BOOL)shouldUpdateLayout:(long long)arg0 scaleType:(long long)arg1 focusId:(id)arg2;
- (void)setupMultiLinkerPlayerWithSEIResult:(id)arg0 contentRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 distance:(double)arg2 background:(id)arg3 layoutType:(long long)arg4 scaleType:(long long)arg5 alignMode:(long long)arg6 focusId:(id)arg7;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })layoutFrame;
- (id)regions;
- (id)backgroundColor;
- (void)prepareForReuse;
- (void)setRegions:(id)arg0;
- (void)setBackgroundColor:(id)arg0;
- (long long)currentLayoutType;
- (void)setCurrentLayoutType:(long long)arg0;

@end
