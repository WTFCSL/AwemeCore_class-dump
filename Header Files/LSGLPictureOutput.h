//
//     Generated by private class-dump
//

@class NSString, LSGLContext, LSGLFramebuffer, LSGLProgram;
@protocol LSGLPictureOutputDelegate;

@interface LSGLPictureOutput : NSObject <LSGLInput> {
    LSGLProgram *_swizzleProgram;
    int _swizzlePositionAttribute;
    int _swizzleTextureCoordinateAttribute;
    int _swizzleInputTextureUniform;
    unsigned int _framebuffer;
    unsigned int _renderbuffer;
    struct __CVBuffer { } *_renderTarget;
    struct __CVBuffer { } *_renderYUVTarget;
    struct __CVBuffer { } *_renderTexture;
    float _cropTextureCoordinates[8];
    float _squareVertices[8];
    BOOL _needUpdateOutputSizeFromInput;
    struct CGSize { double width; double height; } _lastInputSize;
    struct CGSize { double width; double height; } _lastOutputSize;
    BOOL _enabled;
    BOOL _skipRender;
    unsigned int _outputPixelFormat;
    unsigned long long _outputRotation;
    NSString *_name;
    id<LSGLPictureOutputDelegate> _delegate;
    LSGLContext *_gpuContext;
    LSGLFramebuffer *_inputFrameBuffer;
    LSGLFramebuffer *_outputFrameBuffer;
    struct CGSize { double width; double height; } _inputSize;
    struct CGSize { double width; double height; } _outputSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropRegion;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _vertexRect;
}

@property (retain, nonatomic) LSGLContext *gpuContext;
@property (retain, nonatomic) LSGLFramebuffer *inputFrameBuffer;
@property (retain, nonatomic) LSGLFramebuffer *outputFrameBuffer;
@property (retain, nonatomic) LSGLContext *gpuContext;
@property (retain, nonatomic) LSGLFramebuffer *inputFrameBuffer;
@property (retain, nonatomic) LSGLFramebuffer *outputFrameBuffer;
@property (readonly, nonatomic) unsigned int outputPixelFormat;
@property (nonatomic) unsigned long long outputRotation;
@property (readonly, nonatomic) struct CGSize { double width; double height; } inputSize;
@property (nonatomic) BOOL enabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cropRegion;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } vertexRect;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (copy, nonatomic) NSString *name;
@property (nonatomic) BOOL skipRender;
@property (weak, nonatomic) id<LSGLPictureOutputDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setInputRotation:(unsigned long long)arg0 atIndex:(long long)arg1;
- (void)setInputFramebuffer:(id)arg0 atIndex:(long long)arg1;
- (void)needRender:(BOOL)arg0;
- (void)newFrameReadyAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 atIndex:(long long)arg1;
- (void)setInputSize:(struct CGSize { double x0; double x1; })arg0 atIndex:(long long)arg1;
- (void)endProcessing;
- (long long)nextAvailableTextureIndex;
- (id)inputFrameBuffer;
- (void)setInputFrameBuffer:(id)arg0;
- (struct CGSize { double x0; double x1; })maximumOutputSize;
- (BOOL)shouldIgnoreUpdatesToThisTarget;
- (void)updateCropTextureCoordinate;
- (void)setCropRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setOutputRotation:(unsigned long long)arg0;
- (unsigned long long)outputRotation;
- (id)initWithOutputFormat:(unsigned int)arg0 needUpdateOutputSizeFromInput:(BOOL)arg1;
- (id)getFragmentShader;
- (void)setVertexRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)destroyFBO;
- (void)convertToI420;
- (void)outputFrameBufferAt:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)renderToFramebuffer:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })vertexRect;
- (id)outputFrameBuffer;
- (void)setOutputFrameBuffer:(id)arg0;
- (void)updateConfiguration:(id)arg0;
- (BOOL)skipRender;
- (id)init;
- (BOOL)enabled;
- (void)setSkipRender:(BOOL)arg0;
- (void).cxx_destruct;
- (struct CGSize { double x0; double x1; })outputSize;
- (struct CGSize { double x0; double x1; })inputSize;
- (id)delegate;
- (void)setName:(id)arg0;
- (void)setEnabled:(BOOL)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (unsigned int)outputPixelFormat;
- (id)name;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (id)gpuContext;
- (void)setGpuContext:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRegion;

@end
