//
//     Generated by private class-dump
//

@class AnnieXMonitorConfig, NSString, BDXSchemaParam, NSArray, NSMutableArray;
@protocol AnnieXLynxKitModelProtocol, BDXBridgeNetworkServiceProtocol, AnnieXWebKitModelProtocol, BDXBridgeProviderProtocol;

@interface AnnieXCardModel : MTLModel <AnnieXCardModelProtocol> {
    NSString *originURL;
    BDXSchemaParam *_schemaParams;
    id<BDXBridgeProviderProtocol> bridgeProvider;
    long long viewContentMode;
    id<AnnieXLynxKitModelProtocol> lynxKitParams;
    id<AnnieXWebKitModelProtocol> webKitParams;
    AnnieXMonitorConfig *monitorConfig;
    id<BDXBridgeNetworkServiceProtocol> networkService;
    NSArray *preloadPathsForForbiddenRouter;
    NSString *prefetchBusiness;
    NSString *_bid;
    NSString *_engineType;
    NSMutableArray *_delegates;
}

@property (retain, nonatomic) NSMutableArray *delegates;
@property (copy, nonatomic) NSString *bid;
@property (copy, nonatomic) NSString *engineType;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (retain, nonatomic) NSString *originURL;
@property (retain, nonatomic) BDXSchemaParam *schemaParams;
@property (nonatomic) long long viewContentMode;
@property (retain, nonatomic) id<AnnieXLynxKitModelProtocol> lynxKitParams;
@property (retain, nonatomic) id<AnnieXWebKitModelProtocol> webKitParams;
@property (retain, nonatomic) AnnieXMonitorConfig *monitorConfig;
@property (retain, nonatomic) id<BDXBridgeNetworkServiceProtocol> networkService;
@property (copy, nonatomic) NSArray *preloadPathsForForbiddenRouter;
@property (copy, nonatomic) NSString *prefetchBusiness;
@property (weak, nonatomic) id<BDXBridgeProviderProtocol> bridgeProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setBid:(id)arg0;
- (void)setSchemaParams:(id)arg0;
- (id)schemaParams;
- (void)setMonitorConfig:(id)arg0;
- (id)monitorConfig;
- (void)setPrefetchBusiness:(id)arg0;
- (id)bid;
- (id)lynxKitParams;
- (void)setBridgeProvider:(id)arg0;
- (id)webKitParams;
- (void)removeCardModelDelegate:(id)arg0;
- (void)weakAddCardModelDelegate:(id)arg0;
- (void)notifyPreserveDataDidChangeByNative:(id)arg0;
- (void)strongAddCardModelDelegate:(id)arg0;
- (void)notifyPreserveDataDidChangeByFront:(id)arg0 mainThread:(BOOL)arg1;
- (long long)viewContentMode;
- (void)setViewContentMode:(long long)arg0;
- (void)setLynxKitParams:(id)arg0;
- (void)setWebKitParams:(id)arg0;
- (id)preloadPathsForForbiddenRouter;
- (void)setPreloadPathsForForbiddenRouter:(id)arg0;
- (id)prefetchBusiness;
- (id)bridgeProvider;
- (id)kitParams;
- (id)delegates;
- (void)setDelegates:(id)arg0;
- (id)init;
- (id)networkService;
- (id)engineType;
- (void).cxx_destruct;
- (id)sessionID;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)setNetworkService:(id)arg0;
- (void)dealloc;
- (void)setEngineType:(id)arg0;
- (id)originURL;
- (void)setOriginURL:(id)arg0;

@end
