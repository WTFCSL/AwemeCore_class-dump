//
//     Generated by private class-dump
//

@class NSString, NSMapTable, NSRecursiveLock;

@interface BDPAPIInterruptionManager : NSObject <BDPWarmBootMessage, BDPContainerLifeCycleMessage> {
    NSRecursiveLock *_locker;
    NSMapTable *_interruptionStatus;
    NSMapTable *_subscribeHandlerPendingTimers;
    NSMapTable *_APIInvokingPendingQueues;
}

@property (retain, nonatomic) NSRecursiveLock *locker;
@property (retain, nonatomic) NSMapTable *interruptionStatus;
@property (retain, nonatomic) NSMapTable *subscribeHandlerPendingTimers;
@property (retain, nonatomic) NSMapTable *APIInvokingPendingQueues;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (BOOL)shouldInterruptSubscribeHandler:(id)arg0;
+ (void)executeAllPendingAPI:(id)arg0;
+ (void)removeSubscribeHandlerInterrupter:(id)arg0;
+ (void)clearAllPendingAPI:(id)arg0;
+ (void)addPendingAPI:(id)arg0 block:(id /* block */)arg1;
+ (BOOL)shouldInterruptAPI:(id)arg0 isSynchorous:(BOOL)arg1 uniqueID:(id)arg2;
+ (id)sharedManager;

- (id)locker;
- (void)setLocker:(id)arg0;
- (void)applicationEnterBackGroundWithUniqueID:(id)arg0;
- (BOOL)shouldInterruptSubscribeHandler:(id)arg0;
- (void)cleanWarmCacheWithUniqueID:(id)arg0;
- (void)setInterruptionStatus:(id)arg0;
- (void)setAPIInvokingPendingQueues:(id)arg0;
- (void)setSubscribeHandlerPendingTimers:(id)arg0;
- (id)interruptionStatus;
- (id)obtainInvokeAllowList;
- (id)APIInvokingPendingQueues;
- (id)subscribeHandlerPendingTimers;
- (void)setIsInterrupted:(BOOL)arg0 uniqueID:(id)arg1;
- (void)executeAllPendingAPI:(id)arg0;
- (void)removeSubscribeHandlerInterrupter:(id)arg0;
- (void)setupSubscribeHandlerInterrupter:(id)arg0;
- (void)clearAllPendingAPI:(id)arg0;
- (void)clearInterruptionStatus:(id)arg0;
- (void)addPendingAPI:(id)arg0 block:(id /* block */)arg1;
- (BOOL)shouldInterruptAPI:(id)arg0 isSynchorous:(BOOL)arg1 uniqueID:(id)arg2;
- (id)_obtainInvokeAllowList;
- (id)init;
- (void).cxx_destruct;

@end
