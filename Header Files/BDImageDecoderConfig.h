//
//     Generated by private class-dump
//

@class BDImageCropConfig;

@interface BDImageDecoderConfig : NSObject <NSCopying> {
    BOOL _decodeForDisplay;
    BOOL _shouldScaleDown;
    BOOL _smartCrop;
    double _scale;
    unsigned long long _memoryLimit;
    BDImageCropConfig *_customCropConfig;
    struct CGSize { double width; double height; } _sizeLimit;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropRect;
}

@property (nonatomic) BOOL decodeForDisplay;
@property (nonatomic) BOOL shouldScaleDown;
@property (nonatomic) double scale;
@property (nonatomic) struct CGSize { double width; double height; } sizeLimit;
@property (nonatomic) unsigned long long memoryLimit;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cropRect;
@property (nonatomic) BOOL smartCrop;
@property (retain, nonatomic) BDImageCropConfig *customCropConfig;
@property (nonatomic) struct CGSize { double x0; double x1; } downsampleSize;

+ (struct CGSize { double x0; double x1; })minimumSizeFromOriginSize:(struct CGSize { double x0; double x1; })arg0;

- (struct CGSize { double x0; double x1; })imageCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (unsigned long long)imageSizeType:(struct CGSize { double x0; double x1; })arg0;
- (void)setDecodeForDisplay:(BOOL)arg0;
- (void)setShouldScaleDown:(BOOL)arg0;
- (void)setSmartCrop:(BOOL)arg0;
- (id)customCropConfig;
- (BOOL)smartCrop;
- (void)setCustomCropConfig:(id)arg0;
- (void)setDownsampleSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })downsampleSize;
- (BOOL)decodeForDisplay;
- (BOOL)shouldScaleDown;
- (id)init;
- (void)setCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRect;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (double)scale;
- (void)setMemoryLimit:(unsigned long long)arg0;
- (unsigned long long)memoryLimit;
- (void)setScale:(double)arg0;
- (struct CGSize { double x0; double x1; })sizeLimit;
- (void)setSizeLimit:(struct CGSize { double x0; double x1; })arg0;

@end
