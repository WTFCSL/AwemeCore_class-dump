//
//     Generated by private class-dump
//

@class NSString, NSArray, TTVideoEngineSeekTS, TTVideoEngineLiveVideo, TTVideoEngineMaskInfo, NSDictionary, TTVideoEngineURLInfoMap, NSMutableArray, TTVideoEngineDynamicVideo, TTVideoEngineVideoStyle, NSNumber, TTVideoEngineAdaptiveInfo;

@interface TTVideoEngineInfoModel : NSObject <NSSecureCoding> {
    BOOL _enableSSL;
    BOOL _enableAdaptive;
    BOOL _hasEmbeddedSubtitle;
    BOOL _isMbRefactor;
    BOOL _hasByteVC1Codec;
    BOOL _hasByteVC2Codec;
    BOOL _hasH264Codec;
    BOOL _hasVideo;
    NSString *_videoID;
    NSString *_userID;
    TTVideoEngineSeekTS *_seekTs;
    TTVideoEngineURLInfoMap *_videoURLInfoMap;
    TTVideoEngineDynamicVideo *_dynamicVideo;
    TTVideoEngineLiveVideo *_liveVideo;
    TTVideoEngineAdaptiveInfo *_adaptiveInfo;
    TTVideoEngineVideoStyle *_videoStyle;
    NSMutableArray *_bigThumbs;
    TTVideoEngineMaskInfo *_maskInfo;
    NSNumber *_videoDuration;
    NSString *_mediaType;
    NSString *_autoDefinition;
    long long _videoStatusCode;
    NSString *_validate;
    NSString *_refString;
    NSDictionary *_params;
    NSString *_fallbackAPI;
    NSString *_keyseed;
    long long _videoModelVersion;
    NSNumber *_urlExpire;
    NSString *_barrageMaskUrl;
    NSString *_aiBarrageUrl;
    NSString *_decodingMode;
    NSString *_memString;
    long long _popularityLevel;
    NSArray *_subtitleInfos;
    NSString *_pallasVidLabels;
    NSString *_bId;
    NSString *_videoID_ver2;
    NSString *_mediaType_ver2;
    NSString *_posterUrl_ver2;
    NSMutableArray *_videoInfoList_ver2;
    TTVideoEngineLiveVideo *_liveVideo_ver2;
    NSNumber *_videoDuration_ver2;
    long long _videoStatusCode_ver2;
    long long _totalCount_ver2;
    long long _apiVer;
    NSMutableArray *_codecList;
    double _createTimeInterval;
    NSArray *_supportedResolutionTypes;
    NSDictionary *_resolutionMap;
    double _loudness;
    double _peak;
    double _luRange;
    double _luStart;
    double _luEnd;
    double _maxMomLu;
    double _maxShortermLu;
    long long _volumInfoVer;
    NSString *_volumInfoJsonStr;
    NSString *_fullscreen_strategy;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (copy, nonatomic) NSString *videoID_ver2;
@property (copy, nonatomic) NSString *mediaType_ver2;
@property (copy, nonatomic) NSString *posterUrl_ver2;
@property (retain, nonatomic) NSMutableArray *videoInfoList_ver2;
@property (retain, nonatomic) TTVideoEngineLiveVideo *liveVideo_ver2;
@property (retain, nonatomic) NSNumber *videoDuration_ver2;
@property (nonatomic) long long videoStatusCode_ver2;
@property (nonatomic) long long totalCount_ver2;
@property (nonatomic) BOOL hasByteVC1Codec;
@property (nonatomic) BOOL hasByteVC2Codec;
@property (nonatomic) BOOL hasH264Codec;
@property (nonatomic) BOOL hasVideo;
@property (nonatomic) long long apiVer;
@property (retain, nonatomic) NSMutableArray *codecList;
@property (nonatomic) double createTimeInterval;
@property (retain, nonatomic) NSArray *supportedResolutionTypes;
@property (retain, nonatomic) NSDictionary *resolutionMap;
@property (nonatomic) double loudness;
@property (nonatomic) double peak;
@property (nonatomic) double luRange;
@property (nonatomic) double luStart;
@property (nonatomic) double luEnd;
@property (nonatomic) double maxMomLu;
@property (nonatomic) double maxShortermLu;
@property (nonatomic) long long volumInfoVer;
@property (copy, nonatomic) NSString *volumInfoJsonStr;
@property (copy, nonatomic) NSString *fullscreen_strategy;
@property (copy, nonatomic) NSString *videoID;
@property (copy, nonatomic) NSString *userID;
@property (retain, nonatomic) TTVideoEngineSeekTS *seekTs;
@property (retain, nonatomic) TTVideoEngineURLInfoMap *videoURLInfoMap;
@property (retain, nonatomic) TTVideoEngineDynamicVideo *dynamicVideo;
@property (retain, nonatomic) TTVideoEngineLiveVideo *liveVideo;
@property (retain, nonatomic) TTVideoEngineAdaptiveInfo *adaptiveInfo;
@property (retain, nonatomic) TTVideoEngineVideoStyle *videoStyle;
@property (retain, nonatomic) NSMutableArray *bigThumbs;
@property (retain, nonatomic) TTVideoEngineMaskInfo *maskInfo;
@property (retain, nonatomic) NSNumber *videoDuration;
@property (retain, nonatomic) NSString *mediaType;
@property (copy, nonatomic) NSString *autoDefinition;
@property (nonatomic) long long videoStatusCode;
@property (copy, nonatomic) NSString *validate;
@property (nonatomic) BOOL enableSSL;
@property (readonly, nonatomic) BOOL hasExpired;
@property (retain, nonatomic) NSString *refString;
@property (retain, nonatomic) NSDictionary *params;
@property (copy, nonatomic) NSString *fallbackAPI;
@property (copy, nonatomic) NSString *keyseed;
@property (nonatomic) long long videoModelVersion;
@property (retain, nonatomic) NSNumber *urlExpire;
@property (copy, nonatomic) NSString *barrageMaskUrl;
@property (copy, nonatomic) NSString *aiBarrageUrl;
@property (copy, nonatomic) NSString *decodingMode;
@property (copy, nonatomic) NSString *memString;
@property (nonatomic) long long popularityLevel;
@property (nonatomic) BOOL enableAdaptive;
@property (nonatomic) BOOL hasEmbeddedSubtitle;
@property (copy, nonatomic) NSArray *subtitleInfos;
@property (copy, nonatomic) NSString *pallasVidLabels;
@property (copy, nonatomic) NSString *bId;
@property (nonatomic) BOOL isMbRefactor;

+ (BOOL)supportsSecureCoding;

- (id)supportedResolutionTypes;
- (id)bigThumbs;
- (id)getValueArray:(long long)arg0;
- (long long)getValueInt:(long long)arg0;
- (void)setValidate:(id)arg0;
- (id)getValueStr:(long long)arg0;
- (id)getValueNumber:(long long)arg0;
- (double)getValueFloat:(long long)arg0;
- (void)setUrlExpire:(id)arg0;
- (void)setUpResolutionMap:(id)arg0;
- (BOOL)getValueBool:(long long)arg0;
- (id)toMediaInfoDict;
- (void)parseMediaDict:(id)arg0;
- (id)barrageMaskUrl;
- (void)setBarrageMaskUrl:(id)arg0;
- (id)aiBarrageUrl;
- (void)setAiBarrageUrl:(id)arg0;
- (long long)videoModelVersion;
- (void)setVideoModelVersion:(long long)arg0;
- (id)mediaType_ver2;
- (void)setMediaType_ver2:(id)arg0;
- (id)urlExpire;
- (long long)apiVer;
- (void)setApiVer:(long long)arg0;
- (id)videoStyle;
- (void)setVideoStyle:(id)arg0;
- (id)initWithDictionary:(id)arg0 encrypted:(BOOL)arg1;
- (void)getNewModelRefString:(id)arg0 key:(id)arg1;
- (void)getRefString:(id)arg0 key:(id)arg1;
- (id)toMemString;
- (void)setMemString:(id)arg0;
- (id)videoInfoList_ver2;
- (id)videoURLInfoMap;
- (id)dynamicVideo;
- (id)getVideoList;
- (id)videoEngineUrlInfoToDict:(id)arg0;
- (void)setRefString:(id)arg0;
- (id)adaptiveInfo;
- (id)videoInfoForType:(unsigned long long)arg0;
- (id)videoID_ver2;
- (id)liveVideo;
- (id)videoInfoForType:(unsigned long long)arg0 mediaType:(id)arg1 otherCondition:(id)arg2;
- (id)codecList;
- (void)setCodecList:(id)arg0;
- (void)addIfNeededResolution:(unsigned long long)arg0 toArray:(id)arg1;
- (id)liveVideo_ver2;
- (long long)volumInfoVer;
- (unsigned long long)autoResolution;
- (id)videoInfoForType:(unsigned long long *)arg0 mediaType:(id)arg1 autoMode:(BOOL)arg2;
- (id)allURLWithDefinition:(unsigned long long)arg0 transformedURL:(BOOL)arg1;
- (id)autoDefinition;
- (id)resolutionMap;
- (id /* block */)setBusinessID;
- (id /* block */)setVideoID;
- (id /* block */)setVideoDuration;
- (id /* block */)addVideoInfo;
- (id)bId;
- (void)setBId:(id)arg0;
- (void)setEnableAdaptive:(BOOL)arg0;
- (id)initVideoInfoWithPb:(id)arg0;
- (long long)videoSizeForType:(unsigned long long)arg0;
- (id)definitionStrForType:(unsigned long long)arg0;
- (long long)preloadSizeForType:(unsigned long long)arg0;
- (long long)playLoadMaxStepForType:(unsigned long long)arg0;
- (long long)playLoadMinStepForType:(unsigned long long)arg0;
- (id)supportedQualityInfos;
- (id)getLiveVideo;
- (id)videoInfoForType:(unsigned long long)arg0 mediaType:(id)arg1 params:(id)arg2;
- (id)videoInfoForBitrate:(long long)arg0 mediaType:(id)arg1;
- (id)videoInfoForType:(unsigned long long *)arg0 autoMode:(BOOL)arg1;
- (id)allUrlsWithResolution:(unsigned long long *)arg0 autoMode:(BOOL)arg1;
- (id)getSpade_aForType:(unsigned long long)arg0;
- (id)toMediaInfoJsonString;
- (id /* block */)setLoudness;
- (id /* block */)setPeak;
- (id /* block */)setAdaptive;
- (id)seekTs;
- (void)setSeekTs:(id)arg0;
- (void)setVideoURLInfoMap:(id)arg0;
- (void)setDynamicVideo:(id)arg0;
- (void)setLiveVideo:(id)arg0;
- (void)setAdaptiveInfo:(id)arg0;
- (void)setBigThumbs:(id)arg0;
- (void)setAutoDefinition:(id)arg0;
- (long long)videoStatusCode;
- (void)setVideoStatusCode:(long long)arg0;
- (void)setEnableSSL:(BOOL)arg0;
- (id)refString;
- (id)fallbackAPI;
- (void)setFallbackAPI:(id)arg0;
- (id)keyseed;
- (void)setKeyseed:(id)arg0;
- (id)decodingMode;
- (void)setDecodingMode:(id)arg0;
- (id)memString;
- (long long)popularityLevel;
- (void)setPopularityLevel:(long long)arg0;
- (BOOL)enableAdaptive;
- (BOOL)hasEmbeddedSubtitle;
- (void)setHasEmbeddedSubtitle:(BOOL)arg0;
- (id)subtitleInfos;
- (void)setSubtitleInfos:(id)arg0;
- (id)pallasVidLabels;
- (void)setPallasVidLabels:(id)arg0;
- (BOOL)isMbRefactor;
- (void)setIsMbRefactor:(BOOL)arg0;
- (void)setVideoID_ver2:(id)arg0;
- (id)posterUrl_ver2;
- (void)setPosterUrl_ver2:(id)arg0;
- (void)setVideoInfoList_ver2:(id)arg0;
- (void)setLiveVideo_ver2:(id)arg0;
- (id)videoDuration_ver2;
- (void)setVideoDuration_ver2:(id)arg0;
- (long long)videoStatusCode_ver2;
- (void)setVideoStatusCode_ver2:(long long)arg0;
- (long long)totalCount_ver2;
- (void)setTotalCount_ver2:(long long)arg0;
- (BOOL)hasByteVC1Codec;
- (void)setHasByteVC1Codec:(BOOL)arg0;
- (BOOL)hasByteVC2Codec;
- (void)setHasByteVC2Codec:(BOOL)arg0;
- (BOOL)hasH264Codec;
- (void)setHasH264Codec:(BOOL)arg0;
- (double)createTimeInterval;
- (void)setCreateTimeInterval:(double)arg0;
- (void)setSupportedResolutionTypes:(id)arg0;
- (void)setResolutionMap:(id)arg0;
- (double)luRange;
- (void)setLuRange:(double)arg0;
- (double)luStart;
- (void)setLuStart:(double)arg0;
- (double)luEnd;
- (void)setLuEnd:(double)arg0;
- (double)maxMomLu;
- (void)setMaxMomLu:(double)arg0;
- (double)maxShortermLu;
- (void)setMaxShortermLu:(double)arg0;
- (void)setVolumInfoVer:(long long)arg0;
- (id)volumInfoJsonStr;
- (void)setVolumInfoJsonStr:(id)arg0;
- (id)fullscreen_strategy;
- (void)setFullscreen_strategy:(id)arg0;
- (id)userID;
- (id)validate;
- (id)init;
- (void)setMediaType:(id)arg0;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg0;
- (id)videoType;
- (id)mediaType;
- (void)setUserID:(id)arg0;
- (BOOL)hasVideo;
- (BOOL)hasExpired;
- (id)initWithCoder:(id)arg0;
- (void)setHasVideo:(BOOL)arg0;
- (BOOL)isEqual:(id)arg0;
- (id)description;
- (id)videoDuration;
- (id)params;
- (void)encodeWithCoder:(id)arg0;
- (id)codecTypes;
- (void)setVideoDuration:(id)arg0;
- (void)setParams:(id)arg0;
- (id)videoID;
- (void)setVideoID:(id)arg0;
- (BOOL)enableSSL;
- (double)loudness;
- (void)setLoudness:(double)arg0;
- (double)peak;
- (void)setPeak:(double)arg0;
- (id)maskInfo;
- (void)setMaskInfo:(id)arg0;

@end
