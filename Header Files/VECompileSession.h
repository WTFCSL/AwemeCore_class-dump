//
//     Generated by private class-dump
//

@class NSTimer, NSString, HTSVideoData, VECompileEndingWatermarkUnit, NSMutableDictionary, IESMMTransProcessData, VEAsyncQueueUnit, IESMMAVExporter, HTSGLContext, NSMutableArray, VEVideoConcat;
@protocol IVECompileReader, VECompileStageProtocol, IVEEffectProcess, VECompileEncoderUnitProtocol, VEProcessSampleDelegate, IVECompileWriter;

@interface VECompileSession : NSObject <VEAppStatusProtocol, IESMMTranscoderProtocol> {
    BOOL _enableNotPostTracker;
    BOOL _useGPUProcessing;
    BOOL _hasVideoProcess;
    BOOL _needReencode;
    BOOL _waterMarkFilterNeedReset;
    BOOL _cropParamNeedReset;
    BOOL _addEdgeParamNeedReset;
    BOOL _transformNeedReset;
    BOOL _useFFmpegWriter;
    BOOL _isCrossPlatCompile;
    BOOL _addWorkReport;
    BOOL _didRunOnBackground;
    int _srcVideoRotation;
    IESMMTransProcessData *_config;
    id /* block */ _effectFilterPathBlock;
    id /* block */ _progressBlock;
    double _timeOutPeriod;
    id /* block */ _customAudioProcessBlock;
    id /* block */ _encodeDataCB;
    id /* block */ _faceDetectEvent;
    HTSGLContext *_mainContext;
    HTSVideoData *_videoData;
    id<IVEEffectProcess> _videoProcess;
    id<IVECompileReader> _readerUnit;
    id<VEProcessSampleDelegate, VECompileStageProtocol, VECompileEncoderUnitProtocol> _encodeUnit;
    id<IVECompileWriter> _writerUnit;
    VEAsyncQueueUnit *_decodeAsyncQueueUnit;
    VECompileEndingWatermarkUnit *_endingWatermarkUnit;
    double _progress;
    double _startTime;
    NSTimer *_timer;
    double _previousTranscodeProgress;
    double _timeOutLastUpdateTime;
    long long _transcodeStatus;
    long long _encodeType;
    long long _encodeBitsType;
    long long _encodeHdrType;
    id /* block */ _getAudioTimeCallbackBack;
    id /* block */ _completeBlock;
    NSMutableArray *_waterMarkStickers;
    long long _compileWriterType;
    IESMMAVExporter *_concatExporter;
    VEVideoConcat *_ffConcat;
    unsigned long long _writerUnitMode;
    NSString *_compileStage;
    long long _speedMode;
    NSMutableDictionary *_CompileWorkReport;
    unsigned long long _backgroundTaskIdentifier;
}

@property (retain, nonatomic) HTSGLContext *mainContext;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (retain, nonatomic) id<IVEEffectProcess> videoProcess;
@property (retain, nonatomic) id<IVECompileReader> readerUnit;
@property (retain, nonatomic) id<VEProcessSampleDelegate, VECompileStageProtocol, VECompileEncoderUnitProtocol> encodeUnit;
@property (nonatomic) BOOL hasVideoProcess;
@property (retain, nonatomic) id<IVECompileWriter> writerUnit;
@property (retain, nonatomic) VEAsyncQueueUnit *decodeAsyncQueueUnit;
@property (retain, nonatomic) VECompileEndingWatermarkUnit *endingWatermarkUnit;
@property (nonatomic) double progress;
@property (nonatomic) double startTime;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) double previousTranscodeProgress;
@property (nonatomic) double timeOutLastUpdateTime;
@property (nonatomic) long long transcodeStatus;
@property (nonatomic) BOOL needReencode;
@property (nonatomic) BOOL waterMarkFilterNeedReset;
@property (nonatomic) BOOL cropParamNeedReset;
@property (nonatomic) BOOL addEdgeParamNeedReset;
@property (nonatomic) BOOL transformNeedReset;
@property (nonatomic) BOOL useFFmpegWriter;
@property (nonatomic) int srcVideoRotation;
@property (nonatomic) long long encodeType;
@property (nonatomic) long long encodeBitsType;
@property (nonatomic) long long encodeHdrType;
@property (copy, nonatomic) id /* block */ getAudioTimeCallbackBack;
@property (copy, nonatomic) id /* block */ completeBlock;
@property (retain, nonatomic) NSMutableArray *waterMarkStickers;
@property (nonatomic) BOOL isCrossPlatCompile;
@property (nonatomic) long long compileWriterType;
@property (retain, nonatomic) IESMMAVExporter *concatExporter;
@property (retain, nonatomic) VEVideoConcat *ffConcat;
@property (nonatomic) unsigned long long writerUnitMode;
@property (copy, nonatomic) NSString *compileStage;
@property (nonatomic) long long speedMode;
@property (retain, nonatomic) NSMutableDictionary *CompileWorkReport;
@property (nonatomic) BOOL addWorkReport;
@property (nonatomic) BOOL didRunOnBackground;
@property (nonatomic) unsigned long long backgroundTaskIdentifier;
@property (copy, nonatomic) id /* block */ faceDetectEvent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) id /* block */ progressBlock;
@property (copy, nonatomic) id /* block */ encodeDataCB;
@property (retain, nonatomic) IESMMTransProcessData *config;
@property (nonatomic) double timeOutPeriod;
@property (copy, nonatomic) id /* block */ effectFilterPathBlock;
@property (nonatomic) BOOL enableNotPostTracker;
@property (nonatomic) BOOL useGPUProcessing;
@property (copy, nonatomic) id /* block */ customAudioProcessBlock;

- (id)videoData;
- (void)setVideoData:(id)arg0;
- (void)setEncodeType:(long long)arg0;
- (long long)encodeType;
- (void)setEncodeBitsType:(long long)arg0;
- (void)setEncodeHdrType:(long long)arg0;
- (void)pauseCompile;
- (void)resumeCompile;
- (id /* block */)effectFilterPathBlock;
- (id)initWithVideoData:(id)arg0 config:(id)arg1 effectUnit:(id)arg2;
- (void)transcodeWithCompleteBlock:(id /* block */)arg0;
- (void)enableDynamicSpeed:(BOOL)arg0;
- (void)cancelTranscode;
- (id /* block */)encodeDataCB;
- (void)setEncodeDataCB:(id /* block */)arg0;
- (BOOL)needReencode;
- (void)setNeedReencode:(BOOL)arg0;
- (void)setEffectFilterPathBlock:(id /* block */)arg0;
- (id /* block */)faceDetectEvent;
- (void)setFaceDetectEvent:(id /* block */)arg0;
- (double)getProgress;
- (void)setCompleteBlock:(id /* block */)arg0;
- (id /* block */)completeBlock;
- (id)compileStage;
- (void)setCompileStage:(id)arg0;
- (long long)encodeBitsType;
- (long long)encodeHdrType;
- (void)setTranscodeStatus:(long long)arg0;
- (void)setIsCrossPlatCompile:(BOOL)arg0;
- (void)setWriterUnitMode:(unsigned long long)arg0;
- (void)setWaterMarkStickers:(id)arg0;
- (void)setVideoProcess:(id)arg0;
- (void)setCompileWriterType:(long long)arg0;
- (void)setSpeedMode:(long long)arg0;
- (void)setCompileWorkReport:(id)arg0;
- (void)setAddWorkReport:(BOOL)arg0;
- (void)setHasVideoProcess:(BOOL)arg0;
- (void)setUseFFmpegWriter:(BOOL)arg0;
- (void)setSrcVideoRotation:(int)arg0;
- (id)initWithVideoData:(id)arg0 config:(id)arg1 videoProcess:(id)arg2;
- (long long)transcodeStatus;
- (BOOL)isCrossPlatCompile;
- (id)videoProcess;
- (BOOL)checkCodecAssign:(id)arg0;
- (BOOL)addWorkReport;
- (id)CompileWorkReport;
- (void)mergeCompleteWithRes:(id)arg0 progress:(int)arg1;
- (void)logCompileInfo;
- (void)setUseGPUProcessing:(BOOL)arg0;
- (BOOL)useGPUProcessing;
- (void)retriveCopySourceInfo:(id)arg0;
- (id)CGSizetoString:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)p_resetUnitChainWithVideoData:(id)arg0 finalFilePath:(id)arg1;
- (id)writerUnit;
- (void)setPreviousTranscodeProgress:(double)arg0;
- (void)setTimeOutLastUpdateTime:(double)arg0;
- (void)scheduleTimeoutCheck;
- (void)setCustomAudioProcessBlock:(id /* block */)arg0;
- (id)readerUnit;
- (id)encodeUnit;
- (id)decodeAsyncQueueUnit;
- (long long)compileWriterType;
- (BOOL)didRunOnBackground;
- (id)getCompileWriterType;
- (id)endingWatermarkUnit;
- (void)setEndingWatermarkUnit:(id)arg0;
- (BOOL)cropParamNeedReset;
- (void)setCompileCropInfo:(id)arg0;
- (void)setCropParamNeedReset:(BOOL)arg0;
- (BOOL)addEdgeParamNeedReset;
- (void)setCompileEdgeInfo:(id)arg0;
- (void)setAddEdgeParamNeedReset:(BOOL)arg0;
- (BOOL)transformNeedReset;
- (void)setCompileTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)setTransformNeedReset:(BOOL)arg0;
- (BOOL)waterMarkFilterNeedReset;
- (void)setCompileWatermark:(id)arg0;
- (void)setWaterMarkFilterNeedReset:(BOOL)arg0;
- (void)reportMergeVideoInfo:(id)arg0;
- (double)previousTranscodeProgress;
- (long long)speedMode;
- (double)timeOutLastUpdateTime;
- (void)updateCompileStage:(BOOL)arg0;
- (void)cancelWithError:(id)arg0 completionBlock:(id /* block */)arg1;
- (BOOL)useFFmpegWriter;
- (void)pauseForBackground;
- (void)resumeForBackground;
- (void)resetEncoderForBackground;
- (id)getBreakPointURL;
- (id)waterMarkStickers;
- (void)detectSandwitchVideoWithSourceSize:(struct CGSize { double x0; double x1; })arg0 targetSize:(struct CGSize { double x0; double x1; })arg1 isMultipleTrack:(BOOL)arg2;
- (int)srcVideoRotation;
- (id)convertFromHWProfile:(id)arg0;
- (id)getByteVC1Setting:(unsigned long long)arg0 config:(id)arg1 maxKeyFrameDuration:(double)arg2;
- (id)getH264Setting:(unsigned long long)arg0 config:(id)arg1 maxKeyFrameDuration:(double)arg2;
- (void)setDidRunOnBackground:(BOOL)arg0;
- (BOOL)hasVideoProcess;
- (unsigned long long)writerUnitMode;
- (id /* block */)customAudioProcessBlock;
- (void)calculateOutputSize:(id)arg0;
- (void)adjustAudioSettings:(id)arg0;
- (void)adjustVideoSetting:(id)arg0;
- (id)initWithVideoData:(id)arg0 config:(id)arg1;
- (void)cancelTranscode:(id /* block */)arg0;
- (BOOL)isVideoProcesshasEffect;
- (BOOL)enableNotPostTracker;
- (void)setEnableNotPostTracker:(BOOL)arg0;
- (BOOL)isPreUploadable;
- (id)concatExporter;
- (void)p_updateNewVideoData:(id)arg0 outUrl:(id)arg1 useOriginalAudioClips:(BOOL)arg2 error:(id)arg3 completion:(id /* block */)arg4;
- (void)p_transcoderWillResignActiveNotification;
- (void)setReaderUnit:(id)arg0;
- (void)setEncodeUnit:(id)arg0;
- (void)setWriterUnit:(id)arg0;
- (void)setDecodeAsyncQueueUnit:(id)arg0;
- (id /* block */)getAudioTimeCallbackBack;
- (void)setGetAudioTimeCallbackBack:(id /* block */)arg0;
- (void)setConcatExporter:(id)arg0;
- (id)ffConcat;
- (void)setFfConcat:(id)arg0;
- (void)becomeActive;
- (id)timer;
- (void)cancel:(id /* block */)arg0;
- (void)setConfig:(id)arg0;
- (void)resume;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (void)resignActive;
- (id)config;
- (void)enterBackground;
- (void)setProgressBlock:(id /* block */)arg0;
- (void)setTimer:(id)arg0;
- (double)startTime;
- (id)mainContext;
- (double)progress;
- (void)enterForeground;
- (id /* block */)progressBlock;
- (void)dealloc;
- (void)setProgress:(double)arg0;
- (void)pause;
- (unsigned long long)backgroundTaskIdentifier;
- (void)setBackgroundTaskIdentifier:(unsigned long long)arg0;
- (void)setMainContext:(id)arg0;
- (void)memoryWarning;
- (void)refreshStatus;
- (double)timeOutPeriod;
- (void)setTimeOutPeriod:(double)arg0;

@end
