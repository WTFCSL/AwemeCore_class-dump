//
//     Generated by private class-dump
//

@class NSString, IESLiveKTVTuningStore, IESLiveKtvSongStruct;

@interface IESSoloKTVTuningViewModel : NSObject <IESLiveTuningStorePlayerProtocol> {
    BOOL canSwitchSongPlayingType;
    BOOL enableEarReturnMode;
    BOOL headphonesMonitoringEnabled;
    BOOL isScoreMode;
    BOOL isShowLyric;
    IESLiveKtvSongStruct *currentPlayKTVMusic;
    unsigned long long currentSongPlayingType;
    unsigned long long savedSongPlayingType;
    id /* block */ _didClickEffectBlock;
    IESLiveKTVTuningStore *_tuning;
    NSString *_firstKey;
    NSString *_originKey;
    NSString *_earKey;
    NSString *_midiKey;
    NSString *_voiceKey;
    NSString *_musicKey;
}

@property (retain, nonatomic) NSString *firstKey;
@property (retain, nonatomic) NSString *originKey;
@property (retain, nonatomic) NSString *earKey;
@property (retain, nonatomic) NSString *midiKey;
@property (retain, nonatomic) NSString *voiceKey;
@property (retain, nonatomic) NSString *musicKey;
@property (copy, nonatomic) id /* block */ didClickEffectBlock;
@property (retain, nonatomic) IESLiveKTVTuningStore *tuning;
@property (nonatomic) BOOL originStatus;
@property (nonatomic) BOOL earStatus;
@property (nonatomic) BOOL midiStatus;
@property (nonatomic) double voiceVol;
@property (nonatomic) double musicVol;
@property (nonatomic) BOOL isScoreMode;
@property (nonatomic) BOOL isShowLyric;
@property (nonatomic) BOOL enableEarReturnMode;
@property (readonly, nonatomic) BOOL headphonesMonitoringEnabled;
@property (nonatomic) BOOL canSwitchSongPlayingType;
@property (nonatomic) unsigned long long currentSongPlayingType;
@property (nonatomic) unsigned long long savedSongPlayingType;
@property (retain, nonatomic) IESLiveKtvSongStruct *currentPlayKTVMusic;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMusicVolume:(float)arg0;
- (void)setReverberationEnabled:(BOOL)arg0;
- (void)setHeadphonesMonitoringEnabled:(BOOL)arg0;
- (void)switchKtvEffectWithSourcePath:(id)arg0;
- (void)startEffect;
- (void)stopEffect;
- (void)setEarMonitorVolume:(long long)arg0;
- (BOOL)headphonesMonitoringEnabled;
- (void)exitKTVMode;
- (void)setToneVolume:(float)arg0;
- (void)setCurrentSongPlayingType:(unsigned long long)arg0;
- (unsigned long long)currentSongPlayingType;
- (BOOL)isScoreMode;
- (BOOL)isShowLyric;
- (id)currentPlayKTVMusic;
- (void)setIsShowLyric:(BOOL)arg0;
- (void)setIsScoreMode:(BOOL)arg0;
- (unsigned long long)savedSongPlayingType;
- (void)setSavedSongPlayingType:(unsigned long long)arg0;
- (void)setCurrentPlayKTVMusic:(id)arg0;
- (BOOL)enableEarReturnMode;
- (BOOL)canSwitchSongPlayingType;
- (void)setCanSwitchSongPlayingType:(BOOL)arg0;
- (BOOL)midiStatus;
- (BOOL)isEnabledAutotune;
- (void)setEarReturnOn:(BOOL)arg0;
- (void)handleHeadphonesStatus;
- (void)setEnableEarReturnMode:(BOOL)arg0;
- (void)resetDefaultHeadphonesMonitoring;
- (void)setCurrentOrDefaultEarReturnOn:(BOOL)arg0;
- (void)setMidiStatus:(BOOL)arg0;
- (BOOL)earStatus;
- (BOOL)originStatus;
- (void)setDidClickEffectBlock:(id /* block */)arg0;
- (double)voiceVol;
- (double)musicVol;
- (void)setOriginStatus:(BOOL)arg0;
- (void)setEarStatus:(BOOL)arg0;
- (void)setVoiceVol:(double)arg0;
- (void)setMusicVol:(double)arg0;
- (id /* block */)didClickEffectBlock;
- (void)setFirstKey:(id)arg0;
- (void)setOriginKey:(id)arg0;
- (void)setEarKey:(id)arg0;
- (void)setMidiKey:(id)arg0;
- (void)setVoiceKey:(id)arg0;
- (void)setMusicKey:(id)arg0;
- (id)originKey;
- (id)earKey;
- (id)midiKey;
- (id)musicKey;
- (id)init;
- (id)firstKey;
- (void).cxx_destruct;
- (void)setVoiceVolume:(float)arg0;
- (id)tuning;
- (void)setTuning:(id)arg0;
- (id)voiceKey;

@end
