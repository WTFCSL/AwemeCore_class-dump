//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary;
@protocol IESVideoPlayerProtocol;

@interface AFDPureModePagePlaybackController : AWEBaseController <AWENowPlayingInfoPlayerProtocol, AFDPureModePageControllerProtocol> {
    BOOL _hasSetUPControlCenter;
    BOOL _isEnterBackgroundFromPiP;
    BOOL _pausedByNotLoop;
    BOOL _isPlaying;
    BOOL _isLoopedWhenPause;
    NSMutableDictionary *_nowPlayingInfo;
    long long _startAwemeIndex;
    double _startStayTime;
    long long _currentAwemeIndex;
    id<IESVideoPlayerProtocol> _playerController;
}

@property (retain, nonatomic) NSMutableDictionary *nowPlayingInfo;
@property (nonatomic) BOOL hasSetUPControlCenter;
@property (nonatomic) long long startAwemeIndex;
@property (nonatomic) double startStayTime;
@property (nonatomic) BOOL isEnterBackgroundFromPiP;
@property (nonatomic) long long currentAwemeIndex;
@property (retain, nonatomic) id<IESVideoPlayerProtocol> playerController;
@property (nonatomic) BOOL pausedByNotLoop;
@property (nonatomic) BOOL isPlaying;
@property (nonatomic) BOOL isLoopedWhenPause;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)playForRemoteControl;
- (void)pauseForRemoteControl;
- (void)seekToTimeForRemoteControl:(double)arg0;
- (void)playPrevForRemoteControl;
- (void)playNextForRemoteControl;
- (BOOL)canPlayForRemoteControl;
- (BOOL)canPauseForRemoteControl;
- (BOOL)canPlayPrevForRemoteControl;
- (BOOL)canPlayNextForRemoteControl;
- (BOOL)canSeekForRemoteControl;
- (BOOL)canAutoPlayNextAweme:(long long)arg0;
- (void)videoWillLoopTimes:(long long)arg0;
- (void)player:(id)arg0 didChangePlaybackToAction:(long long)arg1;
- (long long)currentAwemeIndex;
- (void)addNotifications;
- (void)handleAppWillResignActiveNotification:(id)arg0;
- (void)updateNowPlayingInfoPlayback;
- (void)trackStayTime;
- (void)setCurrentAwemeIndex:(long long)arg0;
- (double)startStayTime;
- (void)setStartStayTime:(double)arg0;
- (void)handleAppDidBecomeActiveNotification:(id)arg0;
- (void)setStartAwemeIndex:(long long)arg0;
- (long long)startAwemeIndex;
- (void)resetControlCenter;
- (void)setUpControlCenter;
- (BOOL)shouldUpdateNowPlayingInfo;
- (void)setPausedByNotLoop:(BOOL)arg0;
- (BOOL)canPlaybackLoop;
- (BOOL)pausedByNotLoop;
- (void)updateNowPlayingInfoProgress:(double)arg0;
- (void)setIsLoopedWhenPause:(BOOL)arg0;
- (void)handleAppWillTerminateNotification:(id)arg0;
- (void)handleAppDidEnterBackgroundNotification:(id)arg0;
- (void)setIsEnterBackgroundFromPiP:(BOOL)arg0;
- (BOOL)isEnterBackgroundFromPiP;
- (BOOL)hasSetUPControlCenter;
- (void)addSkipCommandTarget;
- (void)setHasSetUPControlCenter:(BOOL)arg0;
- (void)removeSkipCommandTarget;
- (long long)handleSkipForward:(id)arg0;
- (long long)handleSkipBackward:(id)arg0;
- (void)skipByInterval:(double)arg0;
- (void)invalidatePlayStrategy;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })artworkRectForImage:(id)arg0;
- (id)cropImage:(id)arg0 withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)updateNowPlayingInfoWithPlaybackTime:(double)arg0 isPlaying:(BOOL)arg1;
- (BOOL)isLoopedWhenPause;
- (void)becomeActive;
- (id)nowPlayingInfo;
- (void)willResignActive;
- (void)updateNowPlayingInfo;
- (void).cxx_destruct;
- (id)playerController;
- (void)setData:(id)arg0;
- (void)setPlayerController:(id)arg0;
- (void)viewDidAppear;
- (void)setNowPlayingInfo:(id)arg0;
- (BOOL)isPlaying;
- (double)videoDuration;
- (void)dealloc;
- (void)setIsPlaying:(BOOL)arg0;
- (void)removeNotifications;
- (long long)skipInterval;
- (void)updateProgress:(double)arg0;
- (void)viewDidDisappear;

@end
