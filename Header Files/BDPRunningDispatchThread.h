//
//     Generated by private class-dump
//

@class BDPThreadSafeArray, NSString, NSRunLoop;
@protocol BDPRunningDispatchQueueDelegate, BDPQueueProtocol;

@interface BDPRunningDispatchThread : NSThread <BDPRunningDispatchProtocol> {
    id _engine;
    id _napiLoader;
    BOOL _running;
    BOOL _isAwake;
    BOOL _disableCustomQueue;
    long long _dispatchCount;
    id<BDPRunningDispatchQueueDelegate> _delegate;
    id<BDPQueueProtocol> _queue;
    unsigned long long _pkey;
    BDPThreadSafeArray *_stopBlkTasks;
    NSRunLoop *_currentRunLoop;
}

@property (nonatomic) unsigned long long pkey;
@property (retain, nonatomic) BDPThreadSafeArray *stopBlkTasks;
@property BOOL running;
@property (retain) NSRunLoop *currentRunLoop;
@property BOOL isAwake;
@property (nonatomic) BOOL disableCustomQueue;
@property long long dispatchCount;
@property (weak, nonatomic) id<BDPRunningDispatchQueueDelegate> delegate;
@property (retain, nonatomic) id<BDPQueueProtocol> queue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)currentIsDispatchThread;
- (void)setEnableAcceptAsyncCall:(BOOL)arg0;
- (BOOL)enableAcceptAsyncCall;
- (void)dispatchAsyncImmediately:(id /* block */)arg0;
- (void)stopWith:(id /* block */)arg0;
- (void)setCurrentRunLoop:(id)arg0;
- (BOOL)isAwake;
- (void)setIsAwake:(BOOL)arg0;
- (long long)dispatchCount;
- (void)setDispatchCount:(long long)arg0;
- (void)_innerDispatchedBlockConsumeQueue;
- (unsigned long long)pkey;
- (void)setPkey:(unsigned long long)arg0;
- (void)removeAllAsyncDispatch;
- (id)napiLoader;
- (void)_executeBlockImmediately:(id /* block */)arg0;
- (void)dispatchAsyncImmediatelyWithOutQueue:(id /* block */)arg0;
- (void)dispatchAsyncWithOutQueue:(id /* block */)arg0;
- (void)_runTasks;
- (id)stopBlkTasks;
- (void)setNapiLoader:(id)arg0;
- (void)dispatchAsyncImmediatelyAnyThread:(id /* block */)arg0;
- (void)setStopBlkTasks:(id)arg0;
- (BOOL)disableCustomQueue;
- (void)setDisableCustomQueue:(BOOL)arg0;
- (BOOL)running;
- (void)setRunning:(BOOL)arg0;
- (id)init;
- (void)main;
- (void).cxx_destruct;
- (void)stop;
- (id)engine;
- (id)delegate;
- (void)start;
- (id)queue;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setEngine:(id)arg0;
- (void)setQueue:(id)arg0;
- (void)dispatchAsync:(id /* block */)arg0;
- (id)currentRunLoop;

@end
