//
//     Generated by private class-dump
//

@class NSString, NSMutableArray;
@protocol SonicFrameService;

@interface SonicCanvasService : NSObject <SonicCanvasService> {
    struct shared_ptr<sonic::graphics::Coordinator> { struct Coordinator *__ptr_; struct __shared_weak_count *__cntrl_; } coordinator_;
    NSMutableArray *views_;
    float pixel_ratio_;
    BOOL is_monitor_open_;
    id<SonicFrameService> frame_service_;
    BOOL enable_adaptive_fps_;
    BOOL enable_adaptive_fps_watch_touch_;
    int max_no_diff_frames_;
    int lowest_fps_;
    int highest_fps_;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)preload;

- (void)onPause;
- (id)initWithPixelRatio:(float)arg0;
- (void)openMonitor;
- (void)closeMonitor;
- (id)getMonitorData;
- (BOOL)screenshot:(id)arg0 dstWidth:(int)arg1 dstHeight:(int)arg2 dstBuffer:(void *)arg3;
- (void)pausePresentCanvas;
- (void)resumePresentCanvas;
- (void)disableAdaptiveFpsMode:(int)arg0;
- (void)enableAdaptiveFpsMode:(int)arg0 lowestFps:(int)arg1 highestFps:(int)arg2 watchTouch:(BOOL)arg3;
- (void)hintAdaptiveFpsMode;
- (void)onFrame;
- (void)onInitWithSonicApp:(id)arg0;
- (void)onDestroy:(id)arg0;
- (void)cancelListenOnViewTouch;
- (void)onTouch;
- (void)slowDownFps;
- (void)recoverFps;
- (void)listenOnViewTouch;
- (void)onContentDrawing:(id)arg0;
- (void).cxx_destruct;
- (void)removeView:(id)arg0;
- (id).cxx_construct;
- (void)addView:(id)arg0;

@end
