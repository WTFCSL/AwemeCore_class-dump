//
//     Generated by private class-dump
//

@class NSString, IESLivePlayerStoredResolutionKeyProvider, HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality, NSArray, IESLivePlayerBizStainedTrackInfo, NSNumber;

@interface IESLiveStreamPlayerModel : NSObject {
    BOOL _shouldHasViceView;
    BOOL _isCameraHidden;
    BOOL _isGameHidden;
    BOOL _vpassDefault;
    BOOL _isVSRoom;
    BOOL _isVRRoom;
    BOOL _shouldShowViceView;
    BOOL _isTemplateRoom;
    BOOL _isSubCamera;
    IESLivePlayerBizStainedTrackInfo *_stainedTrackInfo;
    NSString *_streamData;
    NSString *_playerSDKKey;
    HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *_playerQuality;
    long long _qualityType;
    NSString *_streamURLStr;
    NSString *_sdkParams;
    NSNumber *_roomID;
    long long _streamVersion;
    long long _roomScene;
    NSString *_anchorVersionStr;
    NSNumber *_anchorID;
    NSNumber *_anchorDevicePlatform;
    long long _layoutType;
    long long _cameraVerticalType;
    long long _displayMode;
    NSString *_gameRoomId;
    NSString *_gameLiveDatats;
    NSArray *_qualityArray;
    IESLivePlayerStoredResolutionKeyProvider *_storedResolutionKeyProvider;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _gameClip;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cameraClip;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cameraClipCustom;
}

@property (retain, nonatomic) IESLivePlayerStoredResolutionKeyProvider *storedResolutionKeyProvider;
@property (retain, nonatomic) IESLivePlayerBizStainedTrackInfo *stainedTrackInfo;
@property (retain, nonatomic) NSString *streamData;
@property (retain, nonatomic) NSString *playerSDKKey;
@property (retain, nonatomic) HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *playerQuality;
@property (nonatomic) long long qualityType;
@property (retain, nonatomic) NSString *streamURLStr;
@property (retain, nonatomic) NSString *sdkParams;
@property (retain, nonatomic) NSNumber *roomID;
@property (nonatomic) long long streamVersion;
@property (nonatomic) long long roomScene;
@property (retain, nonatomic) NSString *anchorVersionStr;
@property (retain, nonatomic) NSNumber *anchorID;
@property (retain, nonatomic) NSNumber *anchorDevicePlatform;
@property (nonatomic) BOOL shouldHasViceView;
@property (nonatomic) long long layoutType;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } gameClip;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cameraClip;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cameraClipCustom;
@property (nonatomic) long long cameraVerticalType;
@property (nonatomic) BOOL isCameraHidden;
@property (nonatomic) BOOL isGameHidden;
@property (nonatomic) long long displayMode;
@property (retain, nonatomic) NSString *gameRoomId;
@property (retain, nonatomic) NSString *gameLiveDatats;
@property (copy, nonatomic) NSArray *qualityArray;
@property (nonatomic) BOOL vpassDefault;
@property (nonatomic) BOOL isVSRoom;
@property (nonatomic) BOOL isVRRoom;
@property (nonatomic) BOOL shouldShowViceView;
@property (nonatomic) BOOL isTemplateRoom;
@property (nonatomic) BOOL isSubCamera;

- (BOOL)isTemplateRoom;
- (BOOL)isVRRoom;
- (BOOL)shouldShowViceView;
- (BOOL)isVSRoom;
- (id)storedResolutionKeyProvider;
- (id)anchorID;
- (void)setAnchorID:(id)arg0;
- (id)sdkParams;
- (void)setSdkParams:(id)arg0;
- (void)setStreamData:(id)arg0;
- (id)stainedTrackInfo;
- (id)initWithAWEAwemeModel:(id)arg0;
- (void)setStainedTrackInfo:(id)arg0;
- (id)initWithRoomModel:(id)arg0;
- (void)setIsSubCamera:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })gameClip;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cameraClipCustom;
- (BOOL)isCameraHidden;
- (BOOL)shouldHasViceView;
- (void)setPlayerSDKKey:(id)arg0;
- (void)setAnchorDevicePlatform:(id)arg0;
- (void)setAnchorVersionStr:(id)arg0;
- (void)setRoomScene:(long long)arg0;
- (long long)cameraVerticalType;
- (id)playerSDKKey;
- (id)playerQuality;
- (void)setPlayerQuality:(id)arg0;
- (BOOL)vpassDefault;
- (id)qualityArray;
- (void)updateWithAWEAwemeModel:(id)arg0;
- (id)gameLiveDatats;
- (id)gameRoomId;
- (void)setGameLiveDatats:(id)arg0;
- (void)setIsCameraHidden:(BOOL)arg0;
- (void)setIsGameHidden:(BOOL)arg0;
- (void)setCameraVerticalType:(long long)arg0;
- (void)setGameRoomId:(id)arg0;
- (long long)roomScene;
- (BOOL)isGameHidden;
- (void)setShouldHasViceView:(BOOL)arg0;
- (long long)transToRoomSceneWithRoom:(id)arg0;
- (void)setVpassDefault:(BOOL)arg0;
- (void)setGameClip:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setCameraClipCustom:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)getPullData:(id)arg0;
- (void)initModel:(id)arg0 awemeModel:(id)arg1;
- (void)setQualityArray:(id)arg0;
- (void)setIsVSRoom:(BOOL)arg0;
- (void)setIsVRRoom:(BOOL)arg0;
- (void)setIsTemplateRoom:(BOOL)arg0;
- (void)setShouldShowViceView:(BOOL)arg0;
- (BOOL)isSubCamera;
- (void)updateWithRoomModel:(id)arg0;
- (id)anchorDevicePlatform;
- (void)setStreamVersion:(long long)arg0;
- (long long)streamVersion;
- (void)setStoredResolutionKeyProvider:(id)arg0;
- (id)streamURLStr;
- (id)anchorVersionStr;
- (void)updateWthRoom:(id)arg0;
- (void)setStreamURLStr:(id)arg0;
- (long long)layoutType;
- (void)setLayoutType:(long long)arg0;
- (long long)displayMode;
- (void).cxx_destruct;
- (void)setDisplayMode:(long long)arg0;
- (id)roomID;
- (void)setRoomID:(id)arg0;
- (long long)qualityType;
- (id)streamData;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cameraClip;
- (void)setCameraClip:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)initWithRoom:(id)arg0;
- (void)setQualityType:(long long)arg0;

@end
