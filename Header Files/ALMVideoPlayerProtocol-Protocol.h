//
//     Generated by private class-dump
//

@class NSNumber, NSString, NSDictionary, AVURLAsset, UIView, NSArray, NSHTTPURLResponse;
@protocol ALMVideoIntePlayerDelegate;

@protocol ALMVideoPlayerProtocol <IESVideoPlayerProtocol>

+ (void)setPostPrepareMsgEnable:(BOOL)arg0;
+ (BOOL)forcePlayWithHTTPS;
+ (void)setForcePlayWithHTTPS:(BOOL)arg0;
+ (void)setUpFirstDNSParseType:(long long)arg0 backup:(long long)arg1;
+ (void)setUpDNSTTL:(long long)arg0;
+ (void)setUpBackupDNSParserWaitTime:(double)arg0;
+ (void)setPlayerAudioEffectEnable:(BOOL)arg0;
+ (void)setAVStackEnable:(BOOL)arg0;
+ (void)setEnterBufferingDirectlyEnable:(BOOL)arg0;
+ (void)setDecreaseVtbStackSize:(long long)arg0;
+ (void)setAudioLatencyQueueByTimeEnable:(BOOL)arg0;
+ (void)setVideoEndIsAllEofEnable:(BOOL)arg0;
+ (void)setSkipBufferLimit:(long long)arg0;
+ (void)setPlayerAudioEffectPregain:(double)arg0;
+ (void)setPlayerAudioEffectThreshold:(double)arg0;
+ (void)setPlayerAudioEffectRatio:(double)arg0;
+ (void)setPlayerAudioEffectPredelay:(double)arg0;
+ (void)setPlayerAudioEffectType:(long long)arg0;
+ (void)setPlayerAudioEffectTargetLoudness:(double)arg0;
+ (void)setPlayerIdleTimerAuto:(BOOL)arg0;
+ (void)setVideoEngineLocalServerOptions:(id)arg0;
+ (void)updateVideoEngineLocalServerOptions:(id)arg0;
+ (void)setPlayerGlobalThreadPoolOptions:(id)arg0;
+ (void)updatePlayerGlobalThreadPoolOptions:(id)arg0;
+ (void)setPlayerStrategyOptions:(id)arg0;
+ (void)setPlayerEffectOptions:(id)arg0;
+ (long long)getDownloadCountByVid:(id)arg0;
+ (void)setPlayerLocalServerInfo:(id)arg0;
+ (void)setPlayerOptions:(id)arg0;

@property (readonly, nonatomic) UIView *view;
@property (readonly, copy, nonatomic) NSString *currPlayURL;
@property (readonly, copy, nonatomic) AVURLAsset *currPlayAsset;
@property (readonly, nonatomic) double currTimeScale;
@property (readonly, copy, nonatomic) NSDictionary *metaformateDic;
@property (readonly, copy, nonatomic) NSString *videoID;
@property (readonly, copy, nonatomic) NSArray *videoPlayURLs;
@property (readonly, nonatomic) BOOL isUsingHttpDNS;
@property (readonly, nonatomic) NSHTTPURLResponse *videoPlayResponse;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoOriginSize;
@property (readonly, nonatomic) NSNumber *bitrate;
@property (copy, nonatomic) NSString *urlKey;
@property (nonatomic) BOOL enableVideoOutput;
@property (nonatomic) BOOL repeated;
@property (nonatomic) BOOL mute;
@property (nonatomic) double volume;
@property (nonatomic) long long networkTime;
@property (nonatomic) BOOL truncateTailWhenRepeated;
@property (weak, nonatomic) id<ALMVideoIntePlayerDelegate> delegate;
@property (nonatomic) BOOL useCache;
@property (nonatomic) BOOL bufferEnded;
@property (nonatomic) BOOL playingWithCache;
@property (nonatomic) long long cacheSize;
@property (nonatomic) long long currCacheSize;
@property (nonatomic) long long videoMediaSize;
@property (readonly, copy, nonatomic) NSString *videoTraceId;
@property (nonatomic) long long preloadCachedSize;
@property (nonatomic) BOOL ignoreAudioInterruption;
@property (nonatomic) BOOL requestWithCookALM;
@property (nonatomic) double playbackRate;
@property (nonatomic) BOOL radioMode;
@property (nonatomic) BOOL enableHardDecode;
@property (nonatomic) BOOL enableH256Decode;
@property (nonatomic) BOOL ownPlayerPlayWithURLs;
@property (nonatomic) BOOL supportsReserveIfNeeded;
@property (nonatomic) BOOL playByRestored;
@property (nonatomic) unsigned long long sessionId;
@property (readonly, nonatomic) long long actionState;
@property (nonatomic) BOOL requestWithCookies;
@property (nonatomic) BOOL enableNNSR;
@property (nonatomic) BOOL enableVideo15SR;
@property (nonatomic) BOOL enable720pNNSR;
@property (nonatomic) BOOL enableBoundNNSR;

- (void)holdStop;
- (void)holdStopAsync:(BOOL)arg0;
- (void)setTTVideoEngineResolutionType:(unsigned long long)arg0;
- (void)setPlayerResolution:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (void)closeAsync;
- (id)videoPlayURLs;
- (BOOL)enableVideoOutput;
- (void)setEnableVideoOutput:(BOOL)arg0;
- (id)currPlayURL;
- (id)currPlayAsset;
- (double)currTimeScale;
- (id)metaformateDic;
- (void)setNetworkTime:(long long)arg0;
- (BOOL)truncateTailWhenRepeated;
- (BOOL)bufferEnded;
- (void)setBufferEnded:(BOOL)arg0;
- (BOOL)playingWithCache;
- (void)setPlayingWithCache:(BOOL)arg0;
- (long long)currCacheSize;
- (long long)videoMediaSize;
- (id)videoTraceId;
- (BOOL)ignoreAudioInterruption;
- (void)setIgnoreAudioInterruption:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })videoOriginSize;
- (BOOL)radioMode;
- (void)setRadioMode:(BOOL)arg0;
- (BOOL)ownPlayerPlayWithURLs;
- (void)setOwnPlayerPlayWithURLs:(BOOL)arg0;
- (BOOL)supportsReserveIfNeeded;
- (void)setSupportsReserveIfNeeded:(BOOL)arg0;
- (BOOL)playByRestored;
- (void)setPlayByRestored:(BOOL)arg0;
- (BOOL)enableNNSR;
- (void)setEnableNNSR:(BOOL)arg0;
- (BOOL)enableVideo15SR;
- (void)setEnableVideo15SR:(BOOL)arg0;
- (BOOL)enable720pNNSR;
- (void)setEnable720pNNSR:(BOOL)arg0;
- (BOOL)isEnableBmf;
- (BOOL)enableBoundNNSR;
- (void)setEnableBoundNNSR:(BOOL)arg0;
- (id)initWithVideoID:(id)arg0 andPlayURLs:(id)arg1;
- (id)initWithVideoID:(id)arg0 andPlayURLs:(id)arg1 andUrlKey:(id)arg2;
- (void)resetLocalVideoURLPath:(id)arg0;
- (void)resetVideoID:(id)arg0 andPlayURLs:(id)arg1 urlKey:(id)arg2;
- (void)resetVideoID:(id)arg0 andPlayURLs:(id)arg1 urlKey:(id)arg2 fileCs:(id)arg3;
- (void)addVideoPlayWithURL:(id)arg0 forTimes:(id)arg1;
- (void)removeTimeObserver;
- (double)playBitrate;
- (id)firstFrameTimestamp;
- (double)playFPS;
- (double)videoFPS;
- (double)currPlayableDuration;
- (void)resetDecryptionKey:(id)arg0;
- (id)playerConsumedBytes;
- (void)setLoopPlayerWithLoopState:(BOOL)arg0 loopWay:(long long)arg1 loopStartTime:(double)arg2 loopEndTime:(double)arg3;
- (void)setCacheDuration:(double)arg0;
- (void)setCustomLog:(id)arg0;
- (void)setFpsThresholdNNSR:(long long)arg0;
- (void)addTTPlayerExtraView:(id)arg0;
- (void)removeTTPlayerExtraView:(id)arg0;
- (void)setPlayerAudioEffectTargetLoudnessForPlayer:(double)arg0;
- (double)playerAudioEffectTargetLoudnessForPlayer;
- (void)setPlayerAudioEffectSrcLoudness:(double)arg0;
- (void)setPlayerAudioEffectSrcPeak:(double)arg0;
- (void)setPlayerDashVideoInfoV2:(id)arg0;
- (void)setPlayerDASHVideoProperBitrateV2:(long long)arg0;
- (void)setPlayerDASHAudioProperBitrate:(long long)arg0;
- (void)setPlayerDASHVideoProperBitrate:(long long)arg0;
- (void)setPlayerCDNUrlExpiredTime:(long long)arg0;
- (void)setPlayerChangePlaybackSpeedEnabled:(BOOL)arg0;
- (void)setPlayerPlaybackSpeed:(double)arg0;
- (void)setPlayerDashVideoHosts:(id)arg0;
- (void)setPlayerBashVideoEnabled:(BOOL)arg0;
- (void)setPlayerCheckHijackEnabled:(BOOL)arg0;
- (void)setPlayerSeekEndEnabled:(BOOL)arg0;
- (void)setTTVideoEngineRenderEngine:(unsigned long long)arg0;
- (long long)videoSRWidth;
- (long long)videoSRHeight;
- (void)setLoadControl:(id)arg0;
- (void)setTTVideoEngineNormalClockType:(long long)arg0;
- (void)setEnablePlayerRange:(BOOL)arg0 prepareMaxCacheMs:(long long)arg1 httpAutoRangeOffsetKB:(long long)arg2;
- (void)setPlayerMDLCacheModel:(long long)arg0;
- (void)updatePlayerOptions:(id)arg0;
- (void)updatePlayerEffectOptions:(id)arg0;
- (void)updatePlayerCustomInfo:(id)arg0;
- (id)getPlayerOptionByKey:(long long)arg0;
- (void)setSRLongLower:(long long)arg0;
- (void)setSRLongUpper:(long long)arg0;
- (void)setSRShortLower:(long long)arg0;
- (void)setSRShortUpper:(long long)arg0;
- (void)setPreferSpdlForHDR:(BOOL)arg0;
- (void)setSetSpdlForHDR:(BOOL)arg0;
- (void)setCurrentPlaybackTimeInterval:(long long)arg0;
- (void)setLutFilter:(id)arg0;
- (void)setLutFilter:(id)arg0 HDRLutImage:(id)arg1;
- (void)setLutFilterStrength:(double)arg0;
- (void)setVideoDynamicGaussianBlurWithGradientLength:(double)arg0 filterStrength:(double)arg1 offsetY:(double)arg2 texMaxLength:(long long)arg3 frameControlNum:(long long)arg4;
- (void)updateVideoDynamicGaussianBlurWhenEnginePoolWithOffsetY:(double)arg0;
- (void)resetVideoDynamicGaussianBlur;
- (void)resetVideoDynamicGaussianBlurViewSize;
- (void)switchToAudioWithInfoID:(unsigned long long)arg0;
- (void)suspendSocketCheck;
- (void)resumeSocketCheck;
- (long long)getKeyVideoAreaFrame;
- (void)setOnePlayMergeEnable;
- (void)setPlayerDashVideoInfo:(id)arg0;
- (void)resetVideoID:(id)arg0 andPlayURLs:(id)arg1;
- (void)setStartPlayTime:(double)arg0;
- (void)setTruncateTailWhenRepeated:(BOOL)arg0;
- (BOOL)enableHardDecode;
- (void)setEnableHardDecode:(BOOL)arg0;
- (BOOL)enableH256Decode;
- (void)setEnableH256Decode:(BOOL)arg0;
- (void)setUpMemoryOptimize:(BOOL)arg0;
- (double)currPlaybackTime;
- (struct __CVBuffer { } *)copyPixelBufferForCurrentTime;
- (BOOL)configResolution:(unsigned long long)arg0;
- (void)setPreloadCachedSize:(long long)arg0;
- (BOOL)requestWithCookies;
- (void)setRequestWithCookies:(BOOL)arg0;
- (long long)preloadCachedSize;
- (void)setTTSInfoConfig:(id)arg0;
- (id)initWithVideoID:(id)arg0 andPlayURLs:(id)arg1 enablePixsBuffer:(BOOL)arg2;
- (BOOL)isUsingHttpDNS;
- (id)videoPlayResponse;
- (BOOL)requestWithCookALM;
- (void)setRequestWithCookALM:(BOOL)arg0;
- (void)setPlaybackRate:(double)arg0;
- (BOOL)mute;
- (long long)cacheSize;
- (void)setSessionId:(unsigned long long)arg0;
- (double)playbackRate;
- (double)volume;
- (unsigned long long)sessionId;
- (void)stop;
- (void)setCacheSize:(long long)arg0;
- (id)bitrate;
- (void)setItemID:(id)arg0;
- (id)delegate;
- (long long)videoHeight;
- (void)setVolume:(double)arg0;
- (long long)videoWidth;
- (double)videoDuration;
- (void)setDelegate:(id)arg0;
- (void)play;
- (void)pause;
- (void)pause:(BOOL)arg0;
- (id)view;
- (void)setMute:(BOOL)arg0;
- (void)reserve;
- (BOOL)useCache;
- (void)setUseCache:(BOOL)arg0;
- (BOOL)repeated;
- (void)setRepeated:(BOOL)arg0;
- (void)prepareToPlay;
- (unsigned long long)playerType;
- (long long)actionState;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)addBoundaryTimeObserverForTimes:(id)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)accessLog;
- (id)videoID;
- (struct __CVBuffer { } *)currentPixelBuffer;
- (id)urlKey;
- (void)setUrlKey:(id)arg0;
- (long long)networkTime;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;
- (void)setVideoMediaSize:(long long)arg0;
- (void)setCurrCacheSize:(long long)arg0;

@end
