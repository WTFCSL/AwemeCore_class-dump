//
//     Generated by private class-dump
//

@class NSString;
@protocol AWELiveRoomModelProtocol, AWELiveStreamPlayer;

@interface AWELiveUserAvatarPreviewManager : NSObject <IESLivePlayerControllerDelegate, AWEUserMessage, AWELiveUserAvatarPreviewProtocol> {
    BOOL _checkStatusing;
    BOOL _enablePlayerReuse;
    id /* block */ _previewCreatedCallback;
    id /* block */ _stateChangedCallback;
    id<AWELiveStreamPlayer> _playerControllerForPreview;
    id<AWELiveRoomModelProtocol> _roomModel;
    NSString *_uid;
    double _lastRequestRoomStatusTime;
    NSString *_defaultQuality;
    struct CGPoint { double x; double y; } _cropStartPoint;
    struct CGPoint { double x; double y; } _cropEndPoint;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropVideoArea;
}

@property (copy, nonatomic) id /* block */ previewCreatedCallback;
@property (copy, nonatomic) id /* block */ stateChangedCallback;
@property (retain, nonatomic) id<AWELiveStreamPlayer> playerControllerForPreview;
@property (retain, nonatomic) id<AWELiveRoomModelProtocol> roomModel;
@property (nonatomic) struct CGPoint { double x; double y; } cropStartPoint;
@property (nonatomic) struct CGPoint { double x; double y; } cropEndPoint;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cropVideoArea;
@property (nonatomic) BOOL checkStatusing;
@property (copy, nonatomic) NSString *uid;
@property (nonatomic) double lastRequestRoomStatusTime;
@property (copy, nonatomic) NSString *defaultQuality;
@property (nonatomic) BOOL enablePlayerReuse;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didFinishBlockUser:(id)arg0 status:(long long)arg1;
- (void)player:(id)arg0 loadStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 mediaSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (id)roomModel;
- (id)defaultQuality;
- (void)startPlay;
- (void)stopPlay;
- (void)setRoomModel:(id)arg0;
- (void)createPlayerView;
- (void)checkAvatarStartPlayLivePreviewWithRoom:(id)arg0 cropStartPoint:(struct CGPoint { double x0; double x1; })arg1 cropEndPoint:(struct CGPoint { double x0; double x1; })arg2 withDefaultQuality:(id)arg3 enableReuse:(BOOL)arg4 withPreviewCreatedComplete:(id /* block */)arg5 withPlayStateChanged:(id /* block */)arg6;
- (void)checkRoomStatus;
- (double)lastRequestRoomStatusTime;
- (void)setLastRequestRoomStatusTime:(double)arg0;
- (void)checkRoomResponse:(id)arg0;
- (void)dropPlayerIntoReusePool;
- (void)setPlayerControllerForPreview:(id)arg0;
- (id)playerControllerForPreview;
- (void)setDefaultQuality:(id)arg0;
- (void)setPreviewCreatedCallback:(id /* block */)arg0;
- (id /* block */)previewCreatedCallback;
- (void)setCropStartPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setCropEndPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)requestCropRectWithRoomId:(id)arg0 withStreamId:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setEnablePlayerReuse:(BOOL)arg0;
- (BOOL)enablePlayerReuse;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropVideoArea;
- (struct CGPoint { double x0; double x1; })cropStartPoint;
- (struct CGPoint { double x0; double x1; })cropEndPoint;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateCropSizeWithStartPoint:(struct CGPoint { double x0; double x1; })arg0 withEndPoint:(struct CGPoint { double x0; double x1; })arg1 withMediaSize:(struct CGSize { double x0; double x1; })arg2;
- (void)setCropVideoArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)checkStatusing;
- (void)setCheckStatusing:(BOOL)arg0;
- (void)checkAvatarStartPlayLivePreviewWithRoom:(id)arg0 withUserId:(id)arg1 withDefaultQuality:(id)arg2 withPreviewCreatedComplete:(id /* block */)arg3 withPlayStateChanged:(id /* block */)arg4;
- (void)setUid:(id)arg0;
- (id)uid;
- (void).cxx_destruct;
- (id /* block */)stateChangedCallback;
- (void)setStateChangedCallback:(id /* block */)arg0;
- (id)playerView;
- (void)dealloc;

@end
