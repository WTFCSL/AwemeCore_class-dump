//
//     Generated by private class-dump
//

@class NSString, NSTimer, NSURL, NSObject, AVAudioRecorder;
@protocol BDPrivacyCertProtocol, OS_dispatch_queue, AWEConcernAudioRecorderDelegate;

@interface AWEConcernAudioRecorder : NSObject <AVAudioRecorderDelegate> {
    BOOL _hasDeleted;
    id<AWEConcernAudioRecorderDelegate> _delegate;
    NSURL *_url;
    unsigned long long _state;
    NSTimer *_updateTimer;
    AVAudioRecorder *_recorder;
    id<BDPrivacyCertProtocol> _token;
    NSString *_oldAudioSessionCategory;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (nonatomic) unsigned long long state;
@property (retain, nonatomic) NSTimer *updateTimer;
@property (retain, nonatomic) AVAudioRecorder *recorder;
@property (retain, nonatomic) NSURL *url;
@property (retain, nonatomic) id<BDPrivacyCertProtocol> token;
@property (retain, nonatomic) NSString *oldAudioSessionCategory;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) BOOL hasDeleted;
@property (weak, nonatomic) id<AWEConcernAudioRecorderDelegate> delegate;
@property (readonly, nonatomic) double currentTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setOldAudioSessionCategory:(id)arg0;
- (BOOL)setAudioCategory:(id)arg0 activeAudioSession:(BOOL)arg1;
- (id)oldAudioSessionCategory;
- (void)updateRecordProcess;
- (void)recorderDidErrorWithCode:(unsigned long long)arg0;
- (void)recorderDidStopWithResult:(BOOL)arg0 error:(id)arg1;
- (id)init;
- (id)updateTimer;
- (void)setUpdateTimer:(id)arg0;
- (void).cxx_destruct;
- (unsigned long long)state;
- (void)setState:(unsigned long long)arg0;
- (id)recorder;
- (void)stop;
- (void)setUrl:(id)arg0;
- (void)setToken:(id)arg0;
- (void)record;
- (id)token;
- (id)delegate;
- (double)currentTime;
- (void)clear;
- (void)setRecorder:(id)arg0;
- (id)queue;
- (void)setDelegate:(id)arg0;
- (void)setQueue:(id)arg0;
- (id)url;
- (void)setHasDeleted:(BOOL)arg0;
- (BOOL)hasDeleted;
- (void)audioRecorderDidFinishRecording:(id)arg0 successfully:(BOOL)arg1;
- (BOOL)askPermission;
- (void)audioRecorderEncodeErrorDidOccur:(id)arg0 error:(id)arg1;

@end
