//
//     Generated by private class-dump
//

@class NSString, NSHashTable, NSObject, DIRSContext;
@protocol IRISServiceSchema, IRISDataCoder, OS_dispatch_queue, IRISEventUploadExecutor;

@interface DIRSEventBatchDispatcher : DIRSBasicModule <IRISApplicationObserver, IRISIdentifierObserver, IRISSessionObserver, IRISEventRealtimeHandler, IRISConfigurationObserver, IRISContextObserver> {
    BOOL _isEnabled;
    id<IRISEventUploadExecutor> defaultExecutor;
    id<IRISServiceSchema> schema;
    id<IRISEventUploadExecutor> realtimeExecutor;
    id<IRISServiceSchema> schema_realtime;
    long long encMethod;
    NSHashTable *sequentialCompressors;
    id<IRISDataCoder> defaultCompressor;
    id<IRISDataCoder> primaryCompressor;
    id<IRISDataCoder> encryptor;
    id<IRISDataCoder> decryptor;
    NSHashTable *executorRefs;
    unsigned long long strategies;
    NSObject<OS_dispatch_queue> *intervalBatchQueue;
    unsigned long long _bgTask;
}

@property (nonatomic) unsigned long long bgTask;
@property (readonly, nonatomic) id<IRISServiceSchema> schema;
@property (readonly) id<IRISEventUploadExecutor> defaultUploader;
@property (readonly) id<IRISEventUploadExecutor> realtimeUploader;
@property BOOL isEnabled;
@property long long state;
@property (readonly) DIRSContext *context;
@property (copy, nonatomic) NSString *category;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)moduleId;
+ (id)moduleVersion;

- (unsigned long long)bgTask;
- (void)setBgTask:(unsigned long long)arg0;
- (void)onRemoteSettingsDidUpdate:(id)arg0;
- (void)onFinishLaunching:(id)arg0;
- (id)defaultUploader;
- (id)realtimeUploader;
- (id)createExecutor;
- (id)allExecutors;
- (void)onApplicationDidEnterBackground;
- (void)onIdentifierAvailable;
- (void)applyCompressionSettings;
- (void)onSessionLaunch:(id)arg0;
- (id)intervalBatchQueue;
- (id)allExecutor;
- (void)onRealtimeEventRecieved;
- (void)run;
- (void).cxx_destruct;
- (void)commonInit;
- (void)stop;
- (BOOL)isEnabled;
- (void)setIsEnabled:(BOOL)arg0;
- (id)executionQueue;
- (id)schema;
- (void)endBackgroundTask;

@end
