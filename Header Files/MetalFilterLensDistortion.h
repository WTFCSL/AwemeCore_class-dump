//
//     Generated by private class-dump
//

@class VPVRHeadTracker, VPVRDistortionRender;

@interface MetalFilterLensDistortion : MetalFilterDefault {
    VPVRDistortionRender *_distortionRender;
    VPVRHeadTracker *_headTracker;
    BOOL _paramsDidChange;
    struct CGSize { double width; double height; } _outputTextureSize;
}

+ (id)lensDistortionFilterWithHeadTracker:(id)arg0 outputTextureSize:(struct CGSize { double x0; double x1; })arg1;

- (id)createPixelTextureWithFrame:(struct VideoFrame { struct VideoFrameBuffer *x0; } *)arg0 format:(id)arg1;
- (long long)renderBefore:(id)arg0 frame:(struct MetalTextureBuffer { void /* function */ **x0; struct __CVBuffer *x1; void **x2; int *x3; id x4; id x5; id x6; int x7; id x8; id x9; id x10; int x11; int x12; int x13; int x14; int x15; void *x16; int x17; id x18; float x19; int x20; int x21; id x22; long long x23; long long x24; } *)arg1;
- (void)drawFrame:(struct MetalTextureBuffer { void /* function */ **x0; struct __CVBuffer *x1; void **x2; int *x3; id x4; id x5; id x6; int x7; id x8; id x9; id x10; int x11; int x12; int x13; int x14; int x15; void *x16; int x17; id x18; float x19; int x20; int x21; id x22; long long x23; long long x24; } *)arg0 withRenderEncoder:(id)arg1;
- (id)initWithHeadTracker:(id)arg0 outputTextureSize:(struct CGSize { double x0; double x1; })arg1;
- (struct CGSize { double x0; double x1; })outputTextureSize;
- (void).cxx_destruct;

@end
