//
//     Generated by private class-dump
//

@class NSArray, NSMutableArray;

@interface ACCEditClipAssetsViewModel : NSObject {
    NSMutableArray *_usedMusicIDs;
    NSArray *_sourceAssetArray;
    NSMutableArray *_addedAssetArray;
}

@property (retain, nonatomic) NSMutableArray *usedMusicIDs;
@property (retain, nonatomic) NSArray *sourceAssetArray;
@property (retain, nonatomic) NSMutableArray *addedAssetArray;

- (void)setSourceAssetArray:(id)arg0;
- (id)sourceAssetArray;
- (void)setAddedAssetArray:(id)arg0;
- (id)addedAssetArray;
- (id)findAssetModelIn:(id)arg0 AVAsset:(id)arg1;
- (id)initWithAssetArray:(id)arg0;
- (void)prepareVideoDataForClipWithAssetArray:(id)arg0 withVideoData:(id)arg1;
- (void)resetClipInfoForAssetArray:(id)arg0 withVideoData:(id)arg1 isBrandNewAiData:(BOOL)arg2;
- (id)findAVAssetInVideoData:(id)arg0 withAssetModel:(id)arg1;
- (id)findOrGenerateAssetModelWithOriginAssetModelArray:(id)arg0 withAVAsset:(id)arg1 withVideoData:(id)arg2 isGenerated:(BOOL *)arg3;
- (id)usedMusicIDs;
- (id)videoAssetsInVideoData:(id)arg0;
- (void)updateSourceAssetArray:(id)arg0;
- (void)resetClipInfoForAssetArray:(id)arg0 withVideoData:(id)arg1;
- (void)resetAssetClipInfoForAssetArray:(id)arg0;
- (double)totalDurationOfSourceAssetModels;
- (double)startTimeAtIndex:(long long)arg0 videoData:(id)arg1;
- (BOOL)haveAssetModelInfoChangedByUserForMusicID:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRangeFromVEClipRange:(id)arg0 asset:(id)arg1;
- (id)timeRangeValueWithStart:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (id)readableTimeStringForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (unsigned long long)rotateTypeFromRadians:(double)arg0;
- (void)setUsedMusicIDs:(id)arg0;
- (void).cxx_destruct;

@end
