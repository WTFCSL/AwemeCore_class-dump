//
//     Generated by private class-dump
//

@class AWEVideoGameCameraContainerView, IESEffectModel, NSString;
@protocol ACCRecordSelectMusicService, ACCMusicModelProtocol;

@interface AWEStickerApplyEffectControlGameHandler : AWEStickerApplyBaseHandler <ACCRecordPropServiceSubscriber, ACCEffectEvent> {
    BOOL _gameStarted;
    BOOL _isMicrophoneMuted;
    BOOL _gameHasNoGuideVide;
    long long _gamePreviousCameraMode;
    AWEVideoGameCameraContainerView *_gameCameraContainer;
    IESEffectModel *_currentSticker;
    IESEffectModel *_restoreSticker;
    id<ACCRecordSelectMusicService> _musicService;
    id<ACCMusicModelProtocol> _oldSelectedMusic;
}

@property (nonatomic) BOOL gameStarted;
@property (nonatomic) long long gamePreviousCameraMode;
@property (nonatomic) BOOL isMicrophoneMuted;
@property (nonatomic) BOOL gameHasNoGuideVide;
@property (retain, nonatomic) AWEVideoGameCameraContainerView *gameCameraContainer;
@property (retain, nonatomic) IESEffectModel *currentSticker;
@property (retain, nonatomic) IESEffectModel *restoreSticker;
@property (retain, nonatomic) id<ACCRecordSelectMusicService> musicService;
@property (retain, nonatomic) id<ACCMusicModelProtocol> oldSelectedMusic;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)enterGame;
- (id)musicService;
- (void)setMusicService:(id)arg0;
- (void)quitGame;
- (void)onEffectMessageReceived:(id)arg0;
- (void)propServiceWillApplyProp:(id)arg0 propSource:(long long)arg1;
- (id)currentSticker;
- (void)setCurrentSticker:(id)arg0;
- (void)handlerDidBecomeActive;
- (BOOL)p_shouldHandleMessage:(id)arg0;
- (void)finishAndExportGame;
- (void)p_sendLoadTimesMessageToEffectWithArg:(id)arg0;
- (void)setGameHasNoGuideVide:(BOOL)arg0;
- (id)gameCameraContainer;
- (void)setGameCameraContainer:(id)arg0;
- (void)p_resetProp;
- (BOOL)gameStarted;
- (void)setGameStarted:(BOOL)arg0;
- (void)setRestoreSticker:(id)arg0;
- (id)restoreSticker;
- (id)p_exchangeSelectedMusicForBackup:(BOOL)arg0;
- (void)setOldSelectedMusic:(id)arg0;
- (long long)p_updateEffectLoadTimes;
- (id)p_dictionaryWithJsonString:(id)arg0;
- (void)showGameCameraContainer;
- (void)backupRecordContextForGame;
- (void)dismissGameCameraContainer;
- (void)restoreRecordContextForGame;
- (BOOL)gameHasNoGuideVide;
- (void)resetGame;
- (void)setIsMicrophoneMuted:(BOOL)arg0;
- (void)p_backupMusic;
- (void)setGamePreviousCameraMode:(long long)arg0;
- (void)p_restoreMusic;
- (long long)gamePreviousCameraMode;
- (id)oldSelectedMusic;
- (void).cxx_destruct;
- (void)startGame;
- (BOOL)isMicrophoneMuted;
- (void)p_addObservers;

@end
