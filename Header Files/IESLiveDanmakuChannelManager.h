//
//     Generated by private class-dump
//

@class RACCompoundDisposable, NSString, IESLiveDanmakuEngineSettings, NSMutableArray, UIView;
@protocol IESLiveDanmakuChannelManagerDelegate;

@interface IESLiveDanmakuChannelManager : NSObject <IESLiveDanmakuChannelDelegate, IESLiveDanmakuChannelDataSource, IESLiveDanmakuChannelManagerProtocol> {
    BOOL _isRemovingAllDanmuku;
    id<IESLiveDanmakuChannelManagerDelegate> _delegate;
    unsigned long long _channelType;
    double _channelHeight;
    UIView *_contentView;
    IESLiveDanmakuEngineSettings *_danmukuSettings;
    NSMutableArray *_channels;
    RACCompoundDisposable *_disposable;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _channelArea;
}

@property (nonatomic) unsigned long long channelType;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } channelArea;
@property (nonatomic) double channelHeight;
@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) IESLiveDanmakuEngineSettings *danmukuSettings;
@property (retain, nonatomic) NSMutableArray *channels;
@property (retain, nonatomic) RACCompoundDisposable *disposable;
@property (nonatomic) BOOL isRemovingAllDanmuku;
@property (weak, nonatomic) id<IESLiveDanmakuChannelManagerDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setDisposable:(id)arg0;
- (id)disposable;
- (void)removeAllDanmuku;
- (void)_removeChannelsObserve;
- (id)initWithContentView:(id)arg0 settings:(id)arg1;
- (void)resetChannel;
- (id)danmukuSettings;
- (BOOL)hasAvailableChannelForGift;
- (BOOL)hasAvailableChannel;
- (id)availableChannel;
- (id)availableChannelForPrivilegeDanmaku:(id)arg0;
- (id)availableBusinessDanmakuChannel;
- (id)availableChannel:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })channelArea;
- (void)setChannelArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)channelHeight;
- (void)setChannelHeight:(double)arg0;
- (void)setIsRemovingAllDanmuku:(BOOL)arg0;
- (BOOL)isRemovingAllDanmuku;
- (void)newChannelAvailable:(id)arg0;
- (void)_addChannelsObserve;
- (id)availableChannelsForAll;
- (void)danmakuChannel:(id)arg0 danmakuDidFireWithNode:(id)arg1;
- (void)danmakuChannel:(id)arg0 danmakuDidLeaveWithNode:(id)arg1;
- (double)danmakuChannel:(id)arg0 danmakuViewTrailingAdjustForNode:(id)arg1;
- (double)danmakuChannel:(id)arg0 danmakuViewSpeedAdjustForNode:(id)arg1;
- (void)updateChannelArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateChannelHeight:(double)arg0;
- (unsigned long long)availableChannelsCount;
- (id)findAvailableChannelForNode:(id)arg0;
- (id)initWithChannelType:(unsigned long long)arg0 contentView:(id)arg1 settings:(id)arg2;
- (BOOL)hasAvailableChannelForNode:(id)arg0;
- (void)setDanmukuSettings:(id)arg0;
- (id)channels;
- (unsigned long long)channelType;
- (void)setChannels:(id)arg0;
- (void).cxx_destruct;
- (id)contentView;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setContentView:(id)arg0;
- (id)availableChannels;
- (void)setChannelType:(unsigned long long)arg0;

@end
