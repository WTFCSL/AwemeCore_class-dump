//
//     Generated by private class-dump
//

@class YYLabel, NSString, UIView;
@protocol ACCAlbumScrollingIndicatorDelegate;

@interface ACCAlbumScrollingIndicator : UIView <UIGestureRecognizerDelegate> {
    BOOL _isActive;
    BOOL _isTouchedIndicator;
    id<ACCAlbumScrollingIndicatorDelegate> _delegate;
    YYLabel *_indicatorContent;
    double _positionY;
    double _minPositionY;
    double _scrollAreaHeight;
    UIView *_containerView;
    UIView *_indicatorTouchView;
    UIView *_indicator;
    double _flag;
}

@property (retain, nonatomic) UIView *containerView;
@property (retain, nonatomic) YYLabel *indicatorContent;
@property (retain, nonatomic) UIView *indicatorTouchView;
@property (retain, nonatomic) UIView *indicator;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL isTouchedIndicator;
@property (nonatomic) double flag;
@property (weak, nonatomic) id<ACCAlbumScrollingIndicatorDelegate> delegate;
@property (nonatomic) double positionY;
@property (nonatomic) double minPositionY;
@property (nonatomic) double scrollAreaHeight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)hideIndicator:(double)arg0;
- (void)showIndicator:(double)arg0;
- (void)configUI;
- (void)configGesture;
- (id)indicatorContent;
- (BOOL)isTouchedIndicator;
- (void)setScrollAreaHeight:(double)arg0;
- (double)minPositionY;
- (double)scrollAreaHeight;
- (void)setIndicatorTouchView:(id)arg0;
- (id)indicatorTouchView;
- (void)updateScrollAreaHeight;
- (void)activeScrollerIndicator:(BOOL)arg0 animatied:(BOOL)arg1;
- (void)activeIndicator:(BOOL)arg0;
- (void)bindScrollingView:(id)arg0 toVC:(id)arg1;
- (BOOL)isReachedBottom;
- (void)setIndicatorContent:(id)arg0;
- (void)setMinPositionY:(double)arg0;
- (void)setIsTouchedIndicator:(BOOL)arg0;
- (void)handlePan:(id)arg0;
- (void)setFlag:(double)arg0;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (void)longPress:(id)arg0;
- (void)setIndicator:(id)arg0;
- (void)setContainerView:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)flag;
- (id)indicator;
- (id)delegate;
- (id)containerView;
- (BOOL)isActive;
- (void)setDelegate:(id)arg0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (double)positionY;
- (void)setPositionY:(double)arg0;
- (void)updateContent:(id)arg0;

@end
