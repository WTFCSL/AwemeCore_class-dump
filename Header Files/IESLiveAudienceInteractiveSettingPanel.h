//
//     Generated by private class-dump
//

@class HTSEventContext, NSString, UISwitch, NSArray, UIView, NSMutableDictionary, UITableView, IESLivePresentNavController, UIViewController, UILabel, NSNumber;
@protocol IESLiveAudienceInteractiveSettingsAction;

@interface IESLiveAudienceInteractiveSettingPanel : IESLiveInteractionPopupViewController <UITableViewDelegate, UITableViewDataSource, IESLiveSocialInteractAction, IESLiveAnchorPaidLinkMicAction> {
    BOOL _isPanelShow;
    BOOL _didFetchSetting;
    BOOL _isRoot;
    BOOL _hasMasterSwitch;
    BOOL _didTrackForGuestGift;
    BOOL _oddTimeToRefreshSettingPanel;
    BOOL _hasTrackPlayModeExposure;
    BOOL _isFromPK;
    BOOL _hasFirstFetch;
    NSNumber *_fixedPanelHeight;
    IESLivePresentNavController *_nav;
    id /* block */ _onSettingOpen;
    id /* block */ _clickItemFeedback;
    id /* block */ _heightDidChanged;
    NSArray *_configurations;
    NSNumber *_fromSeatPosition;
    id /* block */ _didUpdateMasterSwitch;
    NSArray *_sectionItems;
    NSString *_titleForLabel;
    HTSEventContext *_eventContext;
    UILabel *_titleLabel;
    UITableView *_tableView;
    UIView *_seperatorLineView;
    UIView *_masterSwitchContainerView;
    UILabel *_masterSwitchTitleLabel;
    UILabel *_masterSwitchSubTitleLabel;
    UISwitch *_masterSwitch;
    UIView *_userInteractMasterSwitch;
    double _tableViewHeight;
    id<IESLiveAudienceInteractiveSettingsAction> _actionDelegate;
    UIViewController *_adminVc;
    NSMutableDictionary *_latestSettings;
    double _startTime;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _navFrameBeforeEnterAdminVc;
}

@property (nonatomic) BOOL hasMasterSwitch;
@property (copy, nonatomic) id /* block */ didUpdateMasterSwitch;
@property (copy, nonatomic) NSArray *configurations;
@property (copy, nonatomic) NSArray *sectionItems;
@property (copy, nonatomic) NSString *titleForLabel;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (retain, nonatomic) UILabel *titleLabel;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) UIView *seperatorLineView;
@property (retain, nonatomic) UIView *masterSwitchContainerView;
@property (retain, nonatomic) UILabel *masterSwitchTitleLabel;
@property (retain, nonatomic) UILabel *masterSwitchSubTitleLabel;
@property (retain, nonatomic) UISwitch *masterSwitch;
@property (retain, nonatomic) UIView *userInteractMasterSwitch;
@property (nonatomic) BOOL didTrackForGuestGift;
@property (nonatomic) double tableViewHeight;
@property (nonatomic) BOOL oddTimeToRefreshSettingPanel;
@property (weak, nonatomic) id<IESLiveAudienceInteractiveSettingsAction> actionDelegate;
@property (nonatomic) BOOL hasTrackPlayModeExposure;
@property (nonatomic) BOOL isFromPK;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } navFrameBeforeEnterAdminVc;
@property (retain, nonatomic) UIViewController *adminVc;
@property (retain, nonatomic) NSMutableDictionary *latestSettings;
@property (nonatomic) double startTime;
@property (nonatomic) BOOL hasFirstFetch;
@property (retain, nonatomic) NSNumber *fixedPanelHeight;
@property (weak, nonatomic) IESLivePresentNavController *nav;
@property (nonatomic) BOOL isPanelShow;
@property (nonatomic) BOOL didFetchSetting;
@property (nonatomic) BOOL isRoot;
@property (nonatomic) id /* block */ onSettingOpen;
@property (copy, nonatomic) id /* block */ clickItemFeedback;
@property (copy, nonatomic) id /* block */ heightDidChanged;
@property (retain, nonatomic) NSNumber *fromSeatPosition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setEventContext:(id)arg0;
- (id)commonTrackParams;
- (void)setNav:(id)arg0;
- (void)p_addObserver;
- (void)setIsPanelShow:(BOOL)arg0;
- (BOOL)isPanelShow;
- (id)seperatorLineView;
- (void)setSeperatorLineView:(id)arg0;
- (id)masterSwitch;
- (BOOL)hasFirstFetch;
- (void)setHasFirstFetch:(BOOL)arg0;
- (void)currentFlattenSceneDidChangedFrom:(unsigned long long)arg0 to:(unsigned long long)arg1;
- (void)didUpdatedSettingsSucceed;
- (void)didUpdatedSettingsSucceedWithData:(id)arg0;
- (void)onSetupNavBar:(id)arg0;
- (void)setMasterSwitch:(id)arg0;
- (id)buildTrackParamsForMoreDetail;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 title:(id)arg1 actionDelegate:(id)arg2 eventContext:(id)arg3;
- (void)setFixedPanelHeight:(id)arg0;
- (void)updatePanelScrollEnabled:(BOOL)arg0;
- (void)setHeightDidChanged:(id /* block */)arg0;
- (void)fetchLocalAudienceInteractiveSettingsWithCompletion:(id /* block */)arg0;
- (void)loadDataAndRefresh;
- (id)audienceInteractiveSettingsAction;
- (id)authorityItemsWithSettings:(id)arg0;
- (id)descForApplySettingType:(int)arg0;
- (void)showLinkAcceptAuthority:(int)arg0 settings:(id)arg1;
- (void)showAudioAndVideoAuthority:(int)arg0 settings:(id)arg1;
- (id)makeSwitchItemWithTitle:(id)arg0 initialValue:(BOOL)arg1;
- (id)latestSettings;
- (id)addAlphaMaskParameterToUrl:(id)arg0;
- (BOOL)didTrackForGuestGift;
- (void)setDidTrackForGuestGift:(BOOL)arg0;
- (id)generateAuthorityViewModelWithSettings:(id)arg0;
- (void)showThirdLevelPanelWithPopupItemConfigBlock:(id /* block */)arg0 viewModelBlock:(id /* block */)arg1 didShowBlock:(id /* block */)arg2;
- (id)generateAudioAndVideoViewModelWithSettings:(id)arg0;
- (id)applySettingTypes;
- (id)fixedPanelHeight;
- (id /* block */)heightDidChanged;
- (void)trackDiff;
- (void)setLatestSettings:(id)arg0;
- (void)panelDidPopupAndShow;
- (void)updateListWithSettings:(int)arg0;
- (BOOL)didFetchSetting;
- (void)setDidFetchSetting:(BOOL)arg0;
- (BOOL)oddTimeToRefreshSettingPanel;
- (void)setOddTimeToRefreshSettingPanel:(BOOL)arg0;
- (BOOL)isFromPK;
- (void)setIsFromPK:(BOOL)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 title:(id)arg1 actionDelegate:(id)arg2 eventContext:(id)arg3 isFromPK:(BOOL)arg4;
- (void)setFromSeatPosition:(id)arg0;
- (id /* block */)onSettingOpen;
- (void)paidLinkmicOpenStatusChanged:(BOOL)arg0;
- (id)titleForLabel;
- (id)masterSwitchTitleLabel;
- (void)setHasMasterSwitch:(BOOL)arg0;
- (id)masterSwitchContainerView;
- (id)masterSwitchSubTitleLabel;
- (void)setDidUpdateMasterSwitch:(id /* block */)arg0;
- (BOOL)hasMasterSwitch;
- (BOOL)hasTrackPlayModeExposure;
- (void)setHasTrackPlayModeExposure:(BOOL)arg0;
- (void)p_trackPlayModeExposureWithConfiguration:(id)arg0;
- (void)setMasterSwitchContainerView:(id)arg0;
- (void)setMasterSwitchTitleLabel:(id)arg0;
- (void)setMasterSwitchSubTitleLabel:(id)arg0;
- (void)setUserInteractMasterSwitch:(id)arg0;
- (void)p_changeMasterSwitchValue;
- (id)userInteractMasterSwitch;
- (id)descForStrongReminderType:(int)arg0;
- (void)showStrongReminderView:(int)arg0;
- (id /* block */)clickItemFeedback;
- (void)showPaidOptimizeLinkmicView:(long long)arg0;
- (void)showHistoryPaidListView;
- (void)setNavFrameBeforeEnterAdminVc:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setAdminVc:(id)arg0;
- (id)adminVc;
- (void)showSwitchChatroomAndKTV:(unsigned long long)arg0;
- (id)indicatorHintFromPaidApplyReasonValue:(unsigned long long)arg0;
- (void)showPaidApplyReasonPanel;
- (void)showPaidLinkmicEvaluationView;
- (void)p_trakcFunctionPanelProgramShowItemWithEvent:(id)arg0 source:(id)arg1;
- (id)generateStrongReminderViewModel;
- (id)currentFunctionType;
- (id)strongReminderTypes;
- (id /* block */)didUpdateMasterSwitch;
- (void)setupMasterSwitch:(BOOL)arg0 title:(id)arg1 subTitle:(id)arg2 try2Switch:(id /* block */)arg3;
- (void)setOnSettingOpen:(id /* block */)arg0;
- (void)setClickItemFeedback:(id /* block */)arg0;
- (id)fromSeatPosition;
- (void)setTitleForLabel:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })navFrameBeforeEnterAdminVc;
- (id)tableView:(id)arg0 viewForHeaderInSection:(long long)arg1;
- (void)tableView:(id)arg0 willDisplayCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg0;
- (void)setStartTime:(double)arg0;
- (double)tableView:(id)arg0 heightForHeaderInSection:(long long)arg1;
- (void)setTableView:(id)arg0;
- (long long)tableView:(id)arg0 numberOfRowsInSection:(long long)arg1;
- (void).cxx_destruct;
- (id)tableView;
- (id)actionDelegate;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (id)titleLabel;
- (void)viewWillDisappear:(BOOL)arg0;
- (unsigned long long)currentScene;
- (id)configurations;
- (BOOL)isRoot;
- (void)setSectionItems:(id)arg0;
- (void)record;
- (double)startTime;
- (id)sectionItems;
- (id)eventContext;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (void)setConfigurations:(id)arg0;
- (void)viewWillAppear:(BOOL)arg0;
- (void)viewDidLoad;
- (void)setTitleLabel:(id)arg0;
- (void)setupConstraints;
- (void)setIsRoot:(BOOL)arg0;
- (void)setActionDelegate:(id)arg0;
- (void)setupViews;
- (double)tableViewHeight;
- (void)setTableViewHeight:(double)arg0;
- (double)contentViewHeight;
- (id)nav;

@end
