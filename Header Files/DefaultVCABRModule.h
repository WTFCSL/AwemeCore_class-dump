//
//     Generated by private class-dump
//

@class NSString;

@interface DefaultVCABRModule : NSObject <IVCABRModule> {
    struct ABRModule { void /* function */ **x0; struct shared_ptr<com::bytedance::vcloud::abr::IBitrateSelector> { struct IBitrateSelector *x0; struct __shared_weak_count *x1; } x1; struct shared_ptr<com::bytedance::vcloud::abr::IPlayStateSupplier> { struct IPlayStateSupplier *x0; struct __shared_weak_count *x1; } x2; struct shared_ptr<com::bytedance::vcloud::abr::ABRResult> { struct ABRResult *x0; struct __shared_weak_count *x1; } x3; struct mutex { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; } x4; struct shared_ptr<com::bytedance::vcloud::abr::IDeviceInfo> { struct IDeviceInfo *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<com::bytedance::vcloud::abr::IABRInfoCallback> { struct IABRInfoCallback *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<com::bytedance::vcloud::abr::Timer<std::__1::function<void ()>>> { struct Timer<std::__1::function<void ()>> *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<com::bytedance::vcloud::abr::DataStorage> { struct DataStorage *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<com::bytedance::vcloud::abr::FlowPredict> { struct FlowPredict *x0; struct __shared_weak_count *x1; } x11; } *_module;
}

@property (nonatomic) struct ABRModule { void /* function */ **x0; struct shared_ptr<com::bytedance::vcloud::abr::IBitrateSelector> { struct IBitrateSelector *x0; struct __shared_weak_count *x1; } x1; struct shared_ptr<com::bytedance::vcloud::abr::IPlayStateSupplier> { struct IPlayStateSupplier *x0; struct __shared_weak_count *x1; } x2; struct shared_ptr<com::bytedance::vcloud::abr::ABRResult> { struct ABRResult *x0; struct __shared_weak_count *x1; } x3; struct mutex { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; } x4; struct shared_ptr<com::bytedance::vcloud::abr::IDeviceInfo> { struct IDeviceInfo *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<com::bytedance::vcloud::abr::IABRInfoCallback> { struct IABRInfoCallback *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<com::bytedance::vcloud::abr::Timer<std::__1::function<void ()>>> { struct Timer<std::__1::function<void ()>> *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<com::bytedance::vcloud::abr::DataStorage> { struct DataStorage *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<com::bytedance::vcloud::abr::FlowPredict> { struct FlowPredict *x0; struct __shared_weak_count *x1; } x11; } *module;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setFloatValue:(float)arg0 forKey:(int)arg1;
- (void)configWithParams:(id)arg0;
- (void)setMediaInfo:(id)arg0 withAudio:(id)arg1;
- (void)setInfoListener:(id)arg0;
- (id)onceSelect:(int)arg0 scene:(int)arg1;
- (id)getPredict;
- (void)start:(int)arg0 intervalMs:(int)arg1;
- (void)setIntValue:(int)arg0 forKey:(int)arg1;
- (void)setLongValue:(long long)arg0 forKey:(int)arg1;
- (void)addBufferInfo:(long long)arg0 streamKey:(id)arg1 bitrate:(long long)arg2 availSize:(long long)arg3 headSize:(long long)arg4;
- (id)initWithAlgoType:(long long)arg0;
- (void)setDoubleValue:(double)arg0 forKey:(int)arg1;
- (void)setDeviceInfo:(id)arg0;
- (void)stop;
- (void)setStringValue:(id)arg0 forKey:(int)arg1;
- (void)dealloc;
- (struct ABRModule { void /* function */ **x0; struct shared_ptr<com::bytedance::vcloud::abr::IBitrateSelector> { struct IBitrateSelector *x0; struct __shared_weak_count *x1; } x1; struct shared_ptr<com::bytedance::vcloud::abr::IPlayStateSupplier> { struct IPlayStateSupplier *x0; struct __shared_weak_count *x1; } x2; struct shared_ptr<com::bytedance::vcloud::abr::ABRResult> { struct ABRResult *x0; struct __shared_weak_count *x1; } x3; struct mutex { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; } x4; struct shared_ptr<com::bytedance::vcloud::abr::IDeviceInfo> { struct IDeviceInfo *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<com::bytedance::vcloud::abr::IABRInfoCallback> { struct IABRInfoCallback *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<com::bytedance::vcloud::abr::Timer<std::__1::function<void ()>>> { struct Timer<std::__1::function<void ()>> *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<com::bytedance::vcloud::abr::DataStorage> { struct DataStorage *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<com::bytedance::vcloud::abr::FlowPredict> { struct FlowPredict *x0; struct __shared_weak_count *x1; } x11; } *)module;
- (void)setModule:(struct ABRModule { void /* function */ **x0; struct shared_ptr<com::bytedance::vcloud::abr::IBitrateSelector> { struct IBitrateSelector *x0; struct __shared_weak_count *x1; } x1; struct shared_ptr<com::bytedance::vcloud::abr::IPlayStateSupplier> { struct IPlayStateSupplier *x0; struct __shared_weak_count *x1; } x2; struct shared_ptr<com::bytedance::vcloud::abr::ABRResult> { struct ABRResult *x0; struct __shared_weak_count *x1; } x3; struct mutex { struct _opaque_pthread_mutex_t { long long x0; char x1[56]; } x0; } x4; struct shared_ptr<com::bytedance::vcloud::abr::IDeviceInfo> { struct IDeviceInfo *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<com::bytedance::vcloud::abr::IABRInfoCallback> { struct IABRInfoCallback *x0; struct __shared_weak_count *x1; } x6; struct shared_ptr<com::bytedance::vcloud::abr::Timer<std::__1::function<void ()>>> { struct Timer<std::__1::function<void ()>> *x0; struct __shared_weak_count *x1; } x7; struct shared_ptr<com::bytedance::vcloud::abr::DataStorage> { struct DataStorage *x0; struct __shared_weak_count *x1; } x8; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x9; struct shared_ptr<com::bytedance::vcloud::abr::OnceSelect> { struct OnceSelect *x0; struct __shared_weak_count *x1; } x10; struct shared_ptr<com::bytedance::vcloud::abr::FlowPredict> { struct FlowPredict *x0; struct __shared_weak_count *x1; } x11; } *)arg0;

@end
