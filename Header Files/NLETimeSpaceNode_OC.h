//
//     Generated by private class-dump
//

@class NSString;

@interface NLETimeSpaceNode_OC : NLENode_OC {
    struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } _processors;
}

@property (nonatomic) struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } dve_targetTimeRange;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } dve_endTime;
@property (copy, nonatomic) NSString *originStartTimeString;
@property (copy, nonatomic) NSString *originEndTimeString;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } originStartTime;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } originEndTime;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } originDuration;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } acc_startTime;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } acc_endTime;
@property (nonatomic) struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; } cppValue;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } duration;
@property (nonatomic) long long layer;
@property (nonatomic) float speed;

- (float)transformX;
- (void)setTransformX:(float)arg0;
- (float)transformY;
- (void)setTransformY:(float)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })dve_targetTimeRange;
- (void)setDve_endTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (BOOL)hadEndTime;
- (void)setDve_targetTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })dve_endTime;
- (long long)getLayer;
- (void)setTransformZ:(int)arg0;
- (id)initWithCPPNode:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg0;
- (int)transformZ;
- (long long)Mirror_X;
- (void)setMirror_X:(long long)arg0;
- (long long)Mirror_Y;
- (void)setMirror_Y:(long long)arg0;
- (void)setRelativeWidth:(float)arg0;
- (float)RelativeWidth;
- (void)setRelativeHeight:(float)arg0;
- (float)RelativeHeight;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getMeasuredEndTime;
- (id)collectProcessNodes;
- (void)setProcessors:(id)arg0;
- (void)setAcc_endTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setAcc_startTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })acc_endTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })acc_startTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })originStartTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })originEndTime;
- (id)originStartTimeString;
- (void)setOriginStartTimeString:(id)arg0;
- (id)originEndTimeString;
- (void)setOriginEndTimeString:(id)arg0;
- (void)setOriginStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setOriginEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })originDuration;
- (void)setOriginDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (BOOL)hasOriginTime;
- (id)init;
- (void)setStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setRotation:(float)arg0;
- (void)setLayer:(long long)arg0;
- (void).cxx_destruct;
- (long long)mirror;
- (float)scale;
- (void)setSpeed:(float)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })endTime;
- (float)rotation;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })startTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getDuration;
- (long long)layer;
- (void)setEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setScale:(float)arg0;
- (id).cxx_construct;
- (float)speed;
- (void)setDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setMirror:(long long)arg0;
- (id)processors;

@end
