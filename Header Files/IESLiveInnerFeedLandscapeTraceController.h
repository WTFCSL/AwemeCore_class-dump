//
//     Generated by private class-dump
//

@class NSObject, IESLandscapeFPSRecordPool, NSString, NSMutableArray, IESLiveInnerFeedContext;
@protocol OS_dispatch_queue;

@interface IESLiveInnerFeedLandscapeTraceController : NSObject <IESLiveInnerFeedLandscapeTraceService> {
    BOOL _isFpsRecording;
    BOOL _isFeedRecording;
    BOOL _isUse;
    BOOL _isP0ComponentLoadRecording;
    IESLiveInnerFeedContext *_context;
    double _monitorDelay;
    id /* block */ _fpsCallback;
    id /* block */ _frameDropCallback;
    IESLandscapeFPSRecordPool *_fpsRecordPool;
    long long _fpsRecordCount;
    long long _fpsSamplerAccuracy;
    long long _portraitRecordCount;
    long long _portraitFpsSamplerAccuracy;
    double _feedStartTime;
    NSMutableArray *_landscapeItems;
    unsigned long long _curLandscapeScene;
    double _p0ComponentLoadStartTime;
    NSObject<OS_dispatch_queue> *_trackQueue;
}

@property (retain, nonatomic) IESLiveInnerFeedContext *context;
@property (nonatomic) double monitorDelay;
@property (copy, nonatomic) id /* block */ fpsCallback;
@property (copy, nonatomic) id /* block */ frameDropCallback;
@property (retain, nonatomic) IESLandscapeFPSRecordPool *fpsRecordPool;
@property (nonatomic) BOOL isFpsRecording;
@property (nonatomic) long long fpsRecordCount;
@property (nonatomic) long long fpsSamplerAccuracy;
@property (nonatomic) long long portraitRecordCount;
@property (nonatomic) long long portraitFpsSamplerAccuracy;
@property (nonatomic) double feedStartTime;
@property (nonatomic) BOOL isFeedRecording;
@property (retain, nonatomic) NSMutableArray *landscapeItems;
@property (nonatomic) BOOL isUse;
@property (nonatomic) unsigned long long curLandscapeScene;
@property (nonatomic) double p0ComponentLoadStartTime;
@property (nonatomic) BOOL isP0ComponentLoadRecording;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *trackQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)closeMonitor;
- (void)setFpsCallback:(id /* block */)arg0;
- (id /* block */)fpsCallback;
- (id)trackQueue;
- (id /* block */)frameDropCallback;
- (void)setFrameDropCallback:(id /* block */)arg0;
- (void)setTrackQueue:(id)arg0;
- (double)monitorDelay;
- (void)setMonitorDelay:(double)arg0;
- (void)startRecordFeedCost;
- (void)endRecordFeedCostWithItems:(id)arg0;
- (void)startRecordP0ComponentLoadCost;
- (void)endRecordP0ComponentLoadCost;
- (void)innerFeedDidMountObject:(id)arg0 atIndex:(long long)arg1 lastIndex:(long long)arg2;
- (void)innerFeedWillBeginDragging:(id)arg0;
- (void)innerFeedDidEndDecelerating:(id)arg0;
- (void)setupFPSRecord;
- (void)clearFPSRecord;
- (void)setP0ComponentLoadStartTime:(double)arg0;
- (void)setIsP0ComponentLoadRecording:(BOOL)arg0;
- (BOOL)isP0ComponentLoadRecording;
- (void)reportP0ComponentLoadCost;
- (double)p0ComponentLoadStartTime;
- (id)landscapeItems;
- (BOOL)isUse;
- (void)setIsUse:(BOOL)arg0;
- (unsigned long long)curLandscapeScene;
- (BOOL)isFeedRecording;
- (void)setFeedStartTime:(double)arg0;
- (void)setIsFeedRecording:(BOOL)arg0;
- (void)setCurLandscapeScene:(unsigned long long)arg0;
- (void)reportFeedCost;
- (void)reportFeedBeRequest;
- (double)feedStartTime;
- (void)setFpsRecordPool:(id)arg0;
- (void)setFpsSamplerAccuracy:(long long)arg0;
- (long long)fpsSamplerAccuracy;
- (void)setPortraitFpsSamplerAccuracy:(long long)arg0;
- (void)setIsFpsRecording:(BOOL)arg0;
- (void)setFpsRecordCount:(long long)arg0;
- (long long)portraitFpsSamplerAccuracy;
- (void)setPortraitRecordCount:(long long)arg0;
- (BOOL)isFpsRecording;
- (long long)fpsRecordCount;
- (id)fpsRecordPool;
- (void)openFpsMonitor;
- (void)openDropFpsMonitor;
- (long long)portraitRecordCount;
- (void)reportLandscapeLiveFluencyWith:(id)arg0;
- (void)startFPSRecordIn:(long long)arg0;
- (void)endFPSRecordIn:(long long)arg0;
- (void)reportFeedUseIfNeed:(id)arg0;
- (void)setLandscapeItems:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (void)setup;
- (id)context;
- (void)dealloc;

@end
