//
//     Generated by private class-dump
//

@class NSArray, DVETrackPanelContext, NSString;
@protocol DVEMultipleTrackViewModelDelegate, DVEPlayerServiceProtocol, DVECoreVideoProtocol;

@interface DVEMultipleTrackViewModel : NSObject <DVEMultipleTrackViewDataSource, DVEMultipleTrackViewClickDelegate, DVEMultipleTrackMoveProtocol, DVEMultipleTrackTailInsertProtocol, DVEMultipleTrackClipProtocol> {
    NSArray *_cellViewModels;
    DVETrackPanelContext *_context;
    unsigned long long _type;
    id<DVEMultipleTrackViewModelDelegate> _delegate;
    id<DVEPlayerServiceProtocol> _playerService;
    id<DVECoreVideoProtocol> _videoEditor;
    struct CGSize { double width; double height; } _layoutSize;
}

@property (weak, nonatomic) id<DVECoreVideoProtocol> videoEditor;
@property (retain, nonatomic) NSArray *cellViewModels;
@property (retain, nonatomic) DVETrackPanelContext *context;
@property (nonatomic) struct CGSize { double width; double height; } layoutSize;
@property (nonatomic) unsigned long long type;
@property (weak, nonatomic) id<DVEMultipleTrackViewModelDelegate> delegate;
@property (weak, nonatomic) id<DVEPlayerServiceProtocol> playerService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)cellViewModels;
- (id)registerCellIdentifier;
- (id)itemViewModelAtIndexPath:(id)arg0;
- (void)moveSlot:(id)arg0 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (id)videoEditor;
- (void)updateCellViewModels;
- (id)draftTracks;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cellFrameOfNode:(id)arg0 section:(long long)arg1 trackModel:(id)arg2;
- (id)cacheCellViewModelOfNodeId:(id)arg0;
- (void)updateCellViewModel:(id)arg0 timeSpaceNode:(id)arg1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (id)buildCellViewModelFromNode:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setCellViewModels:(id)arg0;
- (long long)maxTrackCount;
- (Class)registerCellClass;
- (id)buildCell;
- (id)selectSegment;
- (id)targetIndexPathOfSlotId:(id)arg0;
- (BOOL)trackView:(id)arg0 shouldSelectItemAtIndexPath:(id)arg1;
- (void)trackView:(id)arg0 didSelectItemAtIndexPath:(id)arg1 cellViewModel:(id)arg2;
- (void)trackView:(id)arg0 didDeSelectItemAtIndexPath:(id)arg1 cellViewModel:(id)arg2;
- (void)trackView:(id)arg0 didDoubleClickItemAtIndexPath:(id)arg1 cellViewModel:(id)arg2;
- (BOOL)trackViewShouldScrollAfterSelect;
- (id)trackView:(id)arg0 shouldSelectItemAtPoint:(struct CGPoint { double x0; double x1; })arg1;
- (double)trackViewMoveMaxX;
- (long long)maxTargetSection;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })availableInsertTimeRangeWithMovingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 longPressIndexPath:(id)arg1 inSection:(long long)arg2 tapTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg3;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })availableInsertTimeRangeWithMovingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 longPressIndexPath:(id)arg1 inNewSection:(long long)arg2;
- (void)trackView:(id)arg0 didMoveChanged:(id)arg1 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 hasNoIntersection:(BOOL)arg4;
- (void)trackView:(id)arg0 didMoveEnded:(id)arg1 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3;
- (void)trackView:(id)arg0 didMoveEnded:(id)arg1 targetSection:(long long)arg2 targetTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg3 isNewInsert:(BOOL)arg4;
- (id)trackViewTailInsertTipBackgroundColorOf:(id)arg0;
- (void)trackView:(id)arg0 didClipBegan:(unsigned long long)arg1 cellViewModel:(id)arg2;
- (void)trackView:(id)arg0 didClipChanged:(unsigned long long)arg1 cellViewModel:(id)arg2 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg4;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackView:(id)arg0 shouldClipChangedRect:(unsigned long long)arg1 cellViewModel:(id)arg2 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg4;
- (void)trackView:(id)arg0 didClipEnded:(unsigned long long)arg1 cellViewModel:(id)arg2 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg4;
- (id)playerService;
- (id)cellIdentifierAtIndexPath:(id)arg0;
- (void)setPlayerService:(id)arg0;
- (void)setVideoEditor:(id)arg0;
- (id)initWithContext:(id)arg0;
- (long long)numberOfItemsInSection:(long long)arg0;
- (void).cxx_destruct;
- (void)setLayoutSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })layoutSize;
- (void)setContext:(id)arg0;
- (long long)numberOfSections;
- (void)reloadDataIfNeeded;
- (unsigned long long)type;
- (void)setType:(unsigned long long)arg0;
- (id)delegate;
- (id)context;
- (void)setDelegate:(id)arg0;
- (double)cellHeight;
- (void)updateLayoutSize;

@end
