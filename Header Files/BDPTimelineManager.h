//
//     Generated by private class-dump
//

@class BDPLoadTimelineGroup, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface BDPTimelineManager : NSObject {
    NSObject<OS_dispatch_queue> *_taskQueue;
    NSMutableDictionary *_lifecycleIdsDict;
    BDPLoadTimelineGroup *_timelineDiagramGroup;
    NSObject<OS_dispatch_queue> *_pageTaskQueue;
    NSMutableDictionary *_pageTimelineListDict;
    NSMutableDictionary *_routeIDListDict;
    NSMutableDictionary *_collectPointsParamProviderDict;
    NSMutableDictionary *_tempGroup;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _routeIDLock;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;
@property (retain, nonatomic) NSMutableDictionary *lifecycleIdsDict;
@property (retain, nonatomic) BDPLoadTimelineGroup *timelineDiagramGroup;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pageTaskQueue;
@property (retain, nonatomic) NSMutableDictionary *pageTimelineListDict;
@property (retain, nonatomic) NSMutableDictionary *routeIDListDict;
@property (retain, nonatomic) NSMutableDictionary *collectPointsParamProviderDict;
@property (nonatomic) struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } routeIDLock;
@property (retain, nonatomic) NSMutableDictionary *tempGroup;

+ (void)bootstrapLaunch;
+ (BOOL)disableLoadTimeLimeReport;
+ (id)sharedInstance;

- (void)monitorLoadTimelineWithName:(id)arg0 extra:(id)arg1 date:(id)arg2 uniqueId:(id)arg3;
- (void)monitorLoadTimelineWithName:(id)arg0 extra:(id)arg1 uniqueId:(id)arg2;
- (void)monitorLoadTimelineWithName:(id)arg0 extra:(id)arg1 date:(id)arg2 cpuTime:(long long)arg3 uniqueId:(id)arg4;
- (void)addLoadTimelinePointWithName:(id)arg0 extra:(id)arg1 date:(id)arg2 cpuTime:(long long)arg3 uniqueId:(id)arg4;
- (id)commonTimelineParamsWithUniqueId:(id)arg0 lifeCycleId:(id)arg1 points:(id)arg2;
- (void)monitorLoadTimelineWithJSONPoints:(id)arg0 uniqueId:(id)arg1;
- (void)generateLifecycleIdIfNeededForUniqueId:(id)arg0;
- (void)startIDETimelineReportWithServerUrl:(id)arg0 uniqueId:(id)arg1;
- (void)executeBlkInTaskQueue:(id /* block */)arg0;
- (void)flushLoadTimelineWithUniqueId:(id)arg0;
- (void)closeIDETimelineReportWithUniqueId:(id)arg0;
- (void)removeLifecycleIdWithUniqueId:(id)arg0;
- (id)lifecycleIdsDict;
- (void)setLifecycleIdsDict:(id)arg0;
- (void)recordPageTimelineWithName:(id)arg0 param:(id)arg1 common:(id)arg2 uniqueId:(id)arg3 date:(id)arg4;
- (void)forceUploadTimelinePointWithRouteID:(id)arg0 uniqueId:(id)arg1 name:(id)arg2 param:(id)arg3 common:(id)arg4 timestamp:(long long)arg5;
- (id)getCurrentRouteIDWithUniqueID:(id)arg0;
- (void)routeEndWithType:(id)arg0 uniqueID:(id)arg1;
- (id)generateNewRouteIDForUniqueId:(id)arg0 appType:(long long)arg1 routeEndParamBlk:(id /* block */)arg2;
- (void)uploadTimelinePointWithRouteID:(id)arg0 uniqueId:(id)arg1 name:(id)arg2 param:(id)arg3 common:(id)arg4 timestamp:(long long)arg5;
- (void)updateCurrentRouteID:(id)arg0 forUniqueID:(id)arg1;
- (void)regiterUploadParamProvider:(id)arg0 forUniqueID:(id)arg1;
- (void)stopTimelineActionWithUniqueID:(id)arg0;
- (void)reportUniqueEventPageTimelineWithName:(id)arg0 param:(id)arg1 common:(id)arg2 uniqueId:(id)arg3 date:(id)arg4 routeID:(id)arg5;
- (void)uploadPageTimelineWithPoints:(id)arg0 routeID:(id)arg1 uniqueId:(id)arg2;
- (BOOL)shouldShowTimeline;
- (void)uploadTimelineDiagramDataWithCallback:(id /* block */)arg0;
- (void)holdRouteData:(id)arg0 uniqueId:(id)arg1;
- (void)buildTimelineManager;
- (void)buildPageTimeline;
- (void)internalMonitorLoadTimelineWithJSONPoints:(id)arg0 uniqueId:(id)arg1;
- (id)timelineDiagramGroup;
- (BOOL)getTimelineDiagramSwitch;
- (id)getTimelineDiagramUploadURL;
- (void)setTimelineDiagramGroup:(id)arg0;
- (void)removeTimelineDiagramGroup;
- (id)pageTaskQueue;
- (id)collectPointsParamProviderDict;
- (id)routeIDListDict;
- (id)pageTimelineListDict;
- (void)executeBlkInPageTaskQueue:(id /* block */)arg0;
- (id)tempGroup;
- (void)flushPageTimelineWithUniqueID:(id)arg0;
- (void)recordPageTimelineWithName:(id)arg0 param:(id)arg1 common:(id)arg2 uniqueId:(id)arg3 timestamp:(long long)arg4;
- (id)processPoints:(id)arg0 group:(id)arg1;
- (void)clearPageTimelineForUniqueId:(id)arg0;
- (void)setPageTaskQueue:(id)arg0;
- (void)setPageTimelineListDict:(id)arg0;
- (void)setRouteIDListDict:(id)arg0;
- (void)setCollectPointsParamProviderDict:(id)arg0;
- (struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })routeIDLock;
- (void)setRouteIDLock:(struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })arg0;
- (void)setTempGroup:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (id)taskQueue;

@end
