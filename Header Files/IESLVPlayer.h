//
//     Generated by private class-dump
//

@class NSString, HTSMediaMixPlayer, HTSVideoData, VEEditorSession;
@protocol IESLVPlayerDelegate;

@interface IESLVPlayer : IESMMObject <IVEAmazingFeatureProtocol> {
    BOOL _autoPlayWhenAppBecomeActive;
    BOOL _autoRepeatPlay;
    BOOL _converMode;
    BOOL _useEditorSession;
    BOOL _useAudioPlayer;
    id<IESLVPlayerDelegate> _delegate;
    HTSVideoData *_videoData;
    HTSMediaMixPlayer *_mixPlayer;
    NSString *_curFilterPath;
    double _currentPlayerTime;
    id /* block */ _updateVideoDataCompleteBlock;
    id /* block */ _canvasObservableEvent;
    id /* block */ _keyFrameCallBack;
    id /* block */ _audioKeyFrameCallBack;
    id /* block */ _canvasFramUpdateCallback;
    id /* block */ _IESMMPlayerActionBlock;
    id /* block */ _stickerAddBlock;
    long long _status;
    id /* block */ _getCurrentImageBlock;
    VEEditorSession *_editorSession;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _playerCMTime;
}

@property (nonatomic) long long status;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } playerCMTime;
@property (copy, nonatomic) id /* block */ getCurrentImageBlock;
@property (nonatomic) BOOL useEditorSession;
@property (retain, nonatomic) VEEditorSession *editorSession;
@property (nonatomic) BOOL useAudioPlayer;
@property (weak, nonatomic) id<IESLVPlayerDelegate> delegate;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (readonly, nonatomic) HTSMediaMixPlayer *mixPlayer;
@property (readonly, nonatomic) NSString *curFilterPath;
@property (nonatomic) double currentPlayerTime;
@property (copy, nonatomic) id /* block */ updateVideoDataCompleteBlock;
@property (copy, nonatomic) id /* block */ canvasObservableEvent;
@property (copy, nonatomic) id /* block */ keyFrameCallBack;
@property (copy, nonatomic) id /* block */ audioKeyFrameCallBack;
@property (copy, nonatomic) id /* block */ canvasFramUpdateCallback;
@property (nonatomic) BOOL autoPlayWhenAppBecomeActive;
@property (nonatomic) BOOL autoRepeatPlay;
@property (copy, nonatomic) id /* block */ IESMMPlayerActionBlock;
@property (readonly, nonatomic) BOOL converMode;
@property (copy, nonatomic) id /* block */ stickerAddBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)playerWithView:(id)arg0 videoData:(id)arg1 withBlock:(id /* block */)arg2 needReverseVideo:(BOOL)arg3 isPanorama:(BOOL)arg4 openBuildChain:(BOOL)arg5 useNewModule:(BOOL)arg6;

- (struct CGSize { double x0; double x1; })getstickerEditBoxSizeNormaliz:(long long)arg0;
- (struct CGPoint { double x0; double x1; })getStickerPosition:(long long)arg0;
- (void)cancelPin:(long long)arg0;
- (long long)getStickerPinStatus:(long long)arg0;
- (id)getTemplateStickerTextParams:(long long)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (void)setSticker:(long long)arg0 startTime:(double)arg1 duration:(double)arg2;
- (void)removeInfoSticker:(long long)arg0;
- (long long)addInfoSticker:(id)arg0 withEffectInfo:(id)arg1 userInfo:(id)arg2;
- (void)setSticker:(long long)arg0 flipX:(BOOL)arg1 flipY:(BOOL)arg2;
- (void)setSticker:(long long)arg0 alpha:(double)arg1;
- (int)setTextStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (unsigned long long)addTemplateWithResourcePath:(id)arg0 dependResourceParams:(id)arg1;
- (int)setTemplateStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (int)setTextStickerAnim:(long long)arg0 animType:(int)arg1 animPath:(id)arg2 duration:(double)arg3;
- (long long)addEmojiSticker:(id)arg0;
- (void)recoveryPinResult:(long long)arg0 withPinData:(id)arg1;
- (void)setStickerAddBlock:(id /* block */)arg0;
- (long long)addTextSticker;
- (id)getInfoStickerTemplateParams:(id)arg0;
- (int)setPinSelectedArea:(long long)arg0 areaParams:(id)arg1;
- (id)getPinResult:(long long)arg0;
- (int)setTextStickerPreviewMode:(long long)arg0 previewMode:(int)arg1;
- (id /* block */)stickerAddBlock;
- (id)videoData;
- (void)setVideoData:(id)arg0;
- (void)updateVideoData:(id)arg0;
- (void)addFeature:(id)arg0 forAsset:(id)arg1;
- (void)deleteFeature:(id)arg0 forAsset:(id)arg1;
- (void)updateFeature:(id)arg0 forAsset:(id)arg1;
- (void)replaceFeature:(id)arg0 oldFeature:(id)arg1 forAsset:(id)arg2;
- (void)addFrameExtractDriver:(id)arg0 forAsset:(id)arg1;
- (double)currentPlayerTime;
- (void)setCurrentPlayerTime:(double)arg0;
- (void)setFirstRenderBlk:(id /* block */)arg0;
- (void)setAutoRepeatPlay:(BOOL)arg0;
- (BOOL)autoRepeatPlay;
- (double)getLastPlayFramRate;
- (id)getFirstRenderTime;
- (void)preparePin;
- (void)setAutoPlayWhenAppBecomeActive:(BOOL)arg0;
- (BOOL)autoPlayWhenAppBecomeActive;
- (id)getAllKeyFramesAtPts:(unsigned long long)arg0;
- (double)getaudioVolumeKeyFrameAtPts:(unsigned long long)arg0 withAVAsset:(id)arg1;
- (BOOL)removeVideoSoundFilter:(id)arg0;
- (BOOL)removeAudioSoundFilter:(id)arg0;
- (void)commitAllKeyFrame;
- (void)updateEffectTimeRange:(id)arg0 startTime:(double)arg1 duration:(double)arg2;
- (double)removeEffectWithRangeID:(id)arg0;
- (int)applyLensHdrWithPath:(id)arg0;
- (void)updateVideoTextureVertices:(id)arg0 forKey:(id)arg1;
- (void)transformSource:(id)arg0 source:(id)arg1;
- (void)refreshCanvasGroupsWithKey:(id)arg0 config:(id)arg1;
- (void)updateAssetBlendMode:(id)arg0 blendMode:(id)arg1;
- (void)setAutoFillFrame:(id)arg0 forAsset:(id)arg1;
- (id)getInfosticker:(long long)arg0;
- (void)updateAudioData:(id)arg0;
- (void)updateMovieAnimationType:(id)arg0 filterInfo:(id)arg1;
- (void)updateAssetAnimateInfo:(id)arg0 animateInfo:(id)arg1;
- (void)setKeyFrameCallBack:(id /* block */)arg0;
- (id /* block */)getCurrentImageBlock;
- (void)setGetCurrentImageBlock:(id /* block */)arg0;
- (id /* block */)canvasObservableEvent;
- (void)updateSubTrackAssetLayer:(id)arg0 layer:(long long)arg1;
- (void)setCanvasObservableEvent:(id /* block */)arg0;
- (id)initWithView:(id)arg0 videoData:(id)arg1 withBlock:(id /* block */)arg2 needReverseVideo:(BOOL)arg3 isPanorama:(BOOL)arg4 openBuildChain:(BOOL)arg5 useNewModule:(BOOL)arg6 actionBlock:(id /* block */)arg7 mvModel:(id)arg8;
- (void)setUseAudioPlayer:(BOOL)arg0;
- (void)setUseEditorSession:(BOOL)arg0;
- (void)setEditorSession:(id)arg0;
- (id)editorSession;
- (void)setPlayerCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)createEditorSession:(id)arg0 videoData:(id)arg1;
- (BOOL)useAudioPlayer;
- (BOOL)useEditorSession;
- (void)setenableLensHdr2Sdr:(BOOL)arg0;
- (void)applyStabFilter:(id)arg0 videoAsset:(id)arg1;
- (BOOL)applyEffectIntensity:(struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })arg0 type:(long long)arg1 videoAsset:(id)arg2;
- (id)applyEffectPath:(id)arg0 withTime:(double)arg1 duration:(double)arg2;
- (id /* block */)updateVideoDataCompleteBlock;
- (void)getCurrentPlayImage:(id /* block */)arg0;
- (void)getCurrentPlayImageAsset:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)getCurrentPlayImageWithColor:(id /* block */)arg0;
- (void)getCurrentPlayImageAssetWithColor:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)stopEditMode;
- (void)getPreviewImageWithConfig:(id)arg0 Block:(id /* block */)arg1;
- (void)setCanvasFramUpdateCallback:(id /* block */)arg0;
- (void)rebuildCanvasGroups;
- (id)applyAudioFilterWithType:(int)arg0 config:(id)arg1 forVideoAsset:(id)arg2;
- (id)applyAudioFilterWithType:(int)arg0 config:(id)arg1 forAudioAsset:(id)arg2;
- (void)setAudioKeyFrameCallBack:(id /* block */)arg0;
- (id)getCurrentFrameFromFirstPreview;
- (BOOL)startMattingDetectWithAVAsset:(id)arg0 resourceFinder:(void /* function */ *)arg1 detectResult:(id)arg2 resultBlock:(id /* block */)arg3;
- (void)pauseMattingDetectWithAVAsset:(id)arg0;
- (void)cancelMattingDetectWithAVAsset:(id)arg0;
- (void)refreshMattingEffect;
- (void)pauseStillRender;
- (void)resumeStillRender;
- (id)initAudioPlayerWithVideoData:(id)arg0;
- (void)resetPlayerWithView:(id)arg0;
- (void)audioSeekToTime:(double)arg0;
- (void)seekToTimeAndRender:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1;
- (void)seekToTimeAndRender:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)seekToTimeAndRender:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)seekToTimeAndRender:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completionHandler:(id /* block */)arg1;
- (BOOL)applyFilterPath:(id)arg0 type:(long long)arg1 videoAsset:(id)arg2;
- (void)setStickerNormaliz:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2 angle:(double)arg3 scale:(double)arg4;
- (void)checkAudioSessionAsync:(BOOL)arg0;
- (void)startEditMode:(id)arg0;
- (void)getPreviewImage:(id /* block */)arg0;
- (void)getPreviewImageAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 compeletion:(id /* block */)arg1;
- (void)startPin:(long long)arg0 pinStartTime:(float)arg1 pinDuration:(float)arg2 completion:(id /* block */)arg3 progressBlock:(id /* block */)arg4;
- (id)mixPlayer;
- (id)curFilterPath;
- (void)setUpdateVideoDataCompleteBlock:(id /* block */)arg0;
- (id /* block */)keyFrameCallBack;
- (id /* block */)audioKeyFrameCallBack;
- (id /* block */)canvasFramUpdateCallback;
- (id /* block */)IESMMPlayerActionBlock;
- (void)setIESMMPlayerActionBlock:(id /* block */)arg0;
- (BOOL)converMode;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })playerCMTime;
- (id)init;
- (void).cxx_destruct;
- (long long)status;
- (void)stop;
- (id)delegate;
- (void)setStatus:(long long)arg0;
- (void)setAudioVolume:(float)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)playFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setPreviewModeType:(long long)arg0;

@end
