//
//     Generated by private class-dump
//

@class NSArray, TTVideoEngine, NSString, UIView;
@protocol BDXAweVideoPlayerWrapperDelegate;

@interface BDXAweVideoPlayerWrapper : NSObject <TTVideoEngineDelegate> {
    BOOL _useCache;
    BOOL _ownPlayerPlayWithURLs;
    BOOL _playingWithCache;
    BOOL _repeated;
    BOOL _mute;
    BOOL _truncateTailWhenRepeated;
    BOOL _isPaused;
    BOOL _isStalling;
    BOOL _hasPlayedOnce;
    BOOL _isURLChanged;
    int _playVersion;
    long long _scalingMode;
    unsigned long long _netWorkType;
    double _volume;
    long long _cacheSize;
    id<BDXAweVideoPlayerWrapperDelegate> _delegate;
    unsigned long long _sessionId;
    TTVideoEngine *_player;
    long long _playbackState;
    NSArray *_videoPlayURLs;
    NSString *_currPlayURL;
    NSString *_videoID;
    NSString *_pToken;
    NSString *_playAuth;
    NSArray *_hosts;
    NSString *_videoRequestUrl;
}

@property (retain, nonatomic) TTVideoEngine *player;
@property (nonatomic) long long playbackState;
@property (nonatomic) BOOL isPaused;
@property (nonatomic) BOOL isStalling;
@property (nonatomic) BOOL hasPlayedOnce;
@property (nonatomic) BOOL isURLChanged;
@property (copy, nonatomic) NSArray *videoPlayURLs;
@property (copy, nonatomic) NSString *currPlayURL;
@property (copy, nonatomic) NSString *videoID;
@property (copy, nonatomic) NSString *pToken;
@property (copy, nonatomic) NSString *playAuth;
@property (copy, nonatomic) NSArray *hosts;
@property (copy, nonatomic) NSString *videoRequestUrl;
@property (nonatomic) int playVersion;
@property (readonly, nonatomic) UIView *view;
@property (nonatomic) unsigned long long netWorkType;
@property (nonatomic) BOOL enableHardDecode;
@property (nonatomic) BOOL useCache;
@property (nonatomic) BOOL ownPlayerPlayWithURLs;
@property (nonatomic) BOOL repeated;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL truncateTailWhenRepeated;
@property (nonatomic) BOOL playingWithCache;
@property (nonatomic) double volume;
@property (nonatomic) long long cacheSize;
@property (nonatomic) long long scalingMode;
@property (weak, nonatomic) id<BDXAweVideoPlayerWrapperDelegate> delegate;
@property (nonatomic) unsigned long long sessionId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIsStalling:(BOOL)arg0;
- (BOOL)isStalling;
- (unsigned long long)netWorkType;
- (id)videoPlayURLs;
- (id)currPlayURL;
- (BOOL)truncateTailWhenRepeated;
- (BOOL)playingWithCache;
- (void)setPlayingWithCache:(BOOL)arg0;
- (BOOL)ownPlayerPlayWithURLs;
- (void)setOwnPlayerPlayWithURLs:(BOOL)arg0;
- (void)removeTimeObserver;
- (double)playBitrate;
- (double)playFPS;
- (double)currPlayableDuration;
- (void)setTTVideoEngineRenderEngine:(unsigned long long)arg0;
- (void)resetVideoID:(id)arg0 andPlayURLs:(id)arg1;
- (void)setStartPlayTime:(float)arg0;
- (void)setTruncateTailWhenRepeated:(BOOL)arg0;
- (void)setNetWorkType:(unsigned long long)arg0;
- (BOOL)enableHardDecode;
- (void)setEnableHardDecode:(BOOL)arg0;
- (double)currPlaybackTime;
- (id)playURLs;
- (void)setVideoPlayURLs:(id)arg0;
- (void)videoEngine:(id)arg0 loadStateDidChanged:(unsigned long long)arg1;
- (void)videoEngineUserStopped:(id)arg0;
- (void)videoEngineDidFinish:(id)arg0 error:(id)arg1;
- (void)videoEngineDidFinish:(id)arg0 videoStatusException:(long long)arg1;
- (void)videoEngineCloseAysncFinish:(id)arg0;
- (void)videoEngine:(id)arg0 playbackStateDidChanged:(long long)arg1;
- (void)videoEngineReadyToDisPlay:(id)arg0;
- (void)videoEngineReadyToPlay:(id)arg0;
- (id)apiForFetcher:(unsigned long long)arg0;
- (id)apiForFetcher;
- (void)setIsURLChanged:(BOOL)arg0;
- (void)setCurrPlayURL:(id)arg0;
- (void)setVideoRequestUrl:(id)arg0;
- (void)setHasPlayedOnce:(BOOL)arg0;
- (void)setPToken:(id)arg0;
- (void)setPlayAuth:(id)arg0;
- (id)videoRequestUrl;
- (BOOL)isURLChanged;
- (id)pToken;
- (id)playAuth;
- (BOOL)hasPlayedOnce;
- (id)errorWithStatusCode:(long long)arg0;
- (void)videoEngine:(id)arg0 playFailWithURL:(id)arg1 error:(id)arg2;
- (void)videoEngine:(id)arg0 playFailWithURL:(id)arg1 statusException:(long long)arg2;
- (id)playerWithOwnPlayer:(BOOL)arg0;
- (void)resetVideoID:(id)arg0 andPlayAuthToken:(id)arg1 hosts:(id)arg2;
- (void)setPlayVersion:(int)arg0;
- (int)playVersion;
- (BOOL)mute;
- (long long)playbackState;
- (long long)cacheSize;
- (void)setSessionId:(unsigned long long)arg0;
- (void).cxx_destruct;
- (double)volume;
- (unsigned long long)sessionId;
- (void)stop;
- (void)setCacheSize:(long long)arg0;
- (void)setPlayer:(id)arg0;
- (id)delegate;
- (id)hosts;
- (BOOL)isPaused;
- (void)setVolume:(double)arg0;
- (double)videoDuration;
- (void)setDelegate:(id)arg0;
- (void)play;
- (void)pause;
- (void)setHosts:(id)arg0;
- (id)view;
- (void)setIsPaused:(BOOL)arg0;
- (void)setMute:(BOOL)arg0;
- (void)setPlaybackState:(long long)arg0;
- (id)player;
- (BOOL)useCache;
- (void)setUseCache:(BOOL)arg0;
- (BOOL)repeated;
- (void)setRepeated:(BOOL)arg0;
- (void)prepareToPlay;
- (unsigned long long)playerType;
- (long long)scalingMode;
- (void)setScalingMode:(long long)arg0;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (long long)qualityType;
- (id)videoID;
- (void)setVideoID:(id)arg0;
- (struct __CVBuffer { } *)currentPixelBuffer;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
