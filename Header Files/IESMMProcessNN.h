//
//     Generated by private class-dump
//

@class ComnModel, MLPredictionOptions, MLModelDescription, NSMutableDictionary, MLDictionaryFeatureProvider, NSError;

@interface IESMMProcessNN : NSObject {
    unsigned long long inputNum;
    unsigned long long outputNum;
    struct vector<std::shared_ptr<TensorInfo>, std::allocator<std::shared_ptr<TensorInfo>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<TensorInfo> *, std::allocator<std::shared_ptr<TensorInfo>>> { void *__value_; } __end_cap_; } inputDataArr;
    struct vector<std::shared_ptr<TensorInfo>, std::allocator<std::shared_ptr<TensorInfo>>> { void *__begin_; void *__end_; struct __compressed_pair<std::shared_ptr<TensorInfo> *, std::allocator<std::shared_ptr<TensorInfo>>> { void *__value_; } __end_cap_; } outputDataArr;
    BOOL hasOutput;
    BOOL setOutput;
    NSError *_error;
    ComnModel *_model;
    long long _outputType;
    MLModelDescription *_modelDescription;
    MLPredictionOptions *_options;
    NSMutableDictionary *_inFeatureDict;
    NSMutableDictionary *_outFeatureDict;
    MLDictionaryFeatureProvider *_outProvider;
}

@property (retain, nonatomic) ComnModel *model;
@property (nonatomic) long long outputType;
@property (retain, nonatomic) MLModelDescription *modelDescription;
@property (retain, nonatomic) MLPredictionOptions *options;
@property (retain, nonatomic) NSMutableDictionary *inFeatureDict;
@property (retain, nonatomic) NSMutableDictionary *outFeatureDict;
@property (retain, nonatomic) MLDictionaryFeatureProvider *outProvider;
@property (retain, nonatomic) NSError *error;

+ (int)selectVaildKeys:(id)arg0 withName:(id)arg1;
+ (struct vector<int, std::allocator<int>> { int *x0; int *x1; struct __compressed_pair<int *, std::allocator<int>> { int *x0; } x2; })GetTensorShapes:(id)arg0;
+ (int)loadModelWithURL:(id)arg0 withName:(id)arg1 withType:(void *)arg2 completionHandler:(id /* block */)arg3;
+ (int)loadModelWithContent:(id)arg0 withName:(id)arg1 withType:(void *)arg2 completionHandler:(id /* block */)arg3;
+ (BOOL)checkIfiOS16Lib;

- (int)parseDescription:(void *)arg0;
- (long long)CpuBufferPostProcess;
- (int)FindInputIndex:(const char *)arg0;
- (long long)hwcTochwInputX:(int)arg0 data:(void *)arg1 dataType:(long long)arg2 batch:(int)arg3 height:(int)arg4 width:(int)arg5 channel:(int)arg6;
- (id)inFeatureDict;
- (int)FindOutputIndex:(const char *)arg0;
- (long long)CopyBetweenPixelBuffers:(struct __CVBuffer { } *)arg0 destPixelBuffer:(struct __CVBuffer { } *)arg1;
- (id)doDictPredictionWithOptions:(id)arg0 error:(id)arg1;
- (long long)outPutPostPocess;
- (id)initWithURL:(id)arg0 withName:(id)arg1 disableMLE5Engine:(BOOL)arg2;
- (int)checkTensorType:(void *)arg0;
- (id)initWithContent:(id)arg0 withName:(id)arg1 disableMLE5Engine:(BOOL)arg2;
- (int)GetInputConfig:(void *)arg0;
- (int)GetOutputConfig:(void *)arg0;
- (int)SetInputBufferArr:(struct vector<ByteCoreML::Tensor, std::allocator<ByteCoreML::Tensor>> { struct Tensor *x0; struct Tensor *x1; struct __compressed_pair<ByteCoreML::Tensor *, std::allocator<ByteCoreML::Tensor>> { struct Tensor *x0; } x2; })arg0;
- (int)SetInputPixelBuffer:(const char *)arg0 data:(void *)arg1;
- (int)SetOutputPixelBuffer:(const char *)arg0 data:(void *)arg1;
- (int)SetOutputBufferArr:(const char *)arg0 data:(void *)arg1 format:(int)arg2;
- (int)GetOutputBufferArr:(void *)arg0;
- (int)Inference;
- (void)setInFeatureDict:(id)arg0;
- (id)outFeatureDict;
- (void)setOutFeatureDict:(id)arg0;
- (id)outProvider;
- (void)setOutProvider:(id)arg0;
- (void)setModel:(id)arg0;
- (void).cxx_destruct;
- (id)model;
- (void)setOptions:(id)arg0;
- (id)init:(id)arg0;
- (void)setError:(id)arg0;
- (id)options;
- (void)dealloc;
- (id).cxx_construct;
- (id)error;
- (id)modelDescription;
- (void)setOutputType:(long long)arg0;
- (long long)outputType;
- (void)setModelDescription:(id)arg0;

@end
