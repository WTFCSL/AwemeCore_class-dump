//
//     Generated by private class-dump
//

@class NSString, HTSEventContext, NSArray, IESLiveComponentContext, NSDate, HTSLiveRealTimePlayBackMessage;
@protocol IESLiveRoomServiceAdapter;

@interface IESLivePlayerSeekViewModel : NSObject <HTSLiveStreamPlayerAction, IESLiveAirPlayAction, IESLiveSocialInteractAction, IESLiveRevenueInteractAction, IESLiveCommunityInteractAction, IESLiveGameInteractAction, IESLiveSeekRouter> {
    BOOL _isFirstPlay;
    BOOL _enableSeek;
    BOOL _hiddenWatchNew;
    BOOL _needHideProgressIndicator;
    BOOL _allowSetSeekEnable;
    BOOL _isSeekingProgress;
    BOOL _hadReportProgressShowInPortrait;
    BOOL _hadReportProgressShowInLandscape;
    BOOL _isSeeking;
    BOOL _seekBarSwitch;
    BOOL _hasRefreshWatchNew;
    BOOL _seekPlayFrameChecker;
    NSArray *signModels;
    IESLiveComponentContext *_context;
    unsigned long long _currentSeekAction;
    double _progress;
    NSString *_watchDurationStr;
    NSString *_totalDurationStr;
    HTSLiveRealTimePlayBackMessage *_playBackMessage;
    id<IESLiveRoomServiceAdapter> _mixedRoom;
    double _duration;
    double _liveStartTime;
    HTSEventContext *_eventContext;
    long long _startWatchRecord;
    NSDate *_startSeekTime;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _playerFrame;
}

@property (nonatomic) unsigned long long currentSeekAction;
@property (nonatomic) BOOL enableSeek;
@property (nonatomic) BOOL allowSetSeekEnable;
@property (nonatomic) double progress;
@property (retain, nonatomic) NSString *watchDurationStr;
@property (retain, nonatomic) NSString *totalDurationStr;
@property (nonatomic) BOOL hiddenWatchNew;
@property (nonatomic) BOOL isSeekingProgress;
@property (nonatomic) BOOL needHideProgressIndicator;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } playerFrame;
@property (retain, nonatomic) IESLiveComponentContext *context;
@property (nonatomic) double duration;
@property (nonatomic) double liveStartTime;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (nonatomic) BOOL hadReportProgressShowInPortrait;
@property (nonatomic) BOOL hadReportProgressShowInLandscape;
@property (nonatomic) long long startWatchRecord;
@property (retain, nonatomic) NSDate *startSeekTime;
@property (retain, nonatomic) NSArray *signModels;
@property (nonatomic) BOOL isSeeking;
@property (nonatomic) BOOL seekBarSwitch;
@property (nonatomic) BOOL hasRefreshWatchNew;
@property (nonatomic) BOOL seekPlayFrameChecker;
@property (nonatomic) BOOL isFirstPlay;
@property (retain, nonatomic) HTSLiveRealTimePlayBackMessage *playBackMessage;
@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> mixedRoom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)showControlView;
- (void)setEventContext:(id)arg0;
- (void)setIsSeeking:(BOOL)arg0;
- (void)setIsFirstPlay:(BOOL)arg0;
- (double)liveStartTime;
- (void)setLiveStartTime:(double)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })playerFrame;
- (void)setPlayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)isScreenCasting;
- (void)startConnectToDevice;
- (void)startRevenueInteractWithScene:(unsigned long long)arg0;
- (void)playerFrameDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)streamPlayerDidReadyToRender;
- (void)onStreamError;
- (void)onStreamProgressUpdate:(double)arg0 start:(double)arg1 latest:(double)arg2;
- (void)handlePlayOrPauseForSeekBar:(unsigned long long)arg0;
- (id)startSeekTime;
- (void)setStartSeekTime:(id)arg0;
- (BOOL)enableSeek;
- (void)setEnableSeek:(BOOL)arg0;
- (id)mixedRoom;
- (void)landscapeViewsTransformToHidden:(BOOL)arg0;
- (void)portraitViewsTransformToHidden:(BOOL)arg0;
- (void)onOrientationTransitionEnd;
- (BOOL)isHiddenWatchNewBtn;
- (void)updateUIProgress:(double)arg0 withAction:(unsigned long long)arg1 isEndSeek:(BOOL)arg2;
- (unsigned long long)nextSignModelIndex;
- (void)coloringProgressWithModels:(id)arg0;
- (void)seekByRealTime:(double)arg0 source:(unsigned long long)arg1;
- (double)transSeekBarProgressToRealProgress:(double)arg0;
- (double)transRealProgressToSeekBarProgress:(double)arg0;
- (BOOL)shouldShowHighLightView;
- (void)seekVideoWithProgress:(double)arg0 sourceAction:(unsigned long long)arg1 completeBlock:(id /* block */)arg2;
- (BOOL)currentRoomSupportSeek;
- (long long)maxLimitTimeForSeek;
- (BOOL)liveIsSeeking;
- (BOOL)supportSeekInRoom;
- (id)signModels;
- (void)airplayStateDidChange:(BOOL)arg0;
- (void)onAirplayProgressUpdate:(double)arg0 duration:(double)arg1;
- (void)interactionModeStartedWithLayout:(id)arg0;
- (void)startCommunityInteractWithScene:(unsigned long long)arg0;
- (void)startGameInteractWithScene:(unsigned long long)arg0;
- (void)setMixedRoom:(id)arg0;
- (void)setSignModels:(id)arg0;
- (void)trackWatchNewShowEvent;
- (BOOL)hiddenWatchNew;
- (unsigned long long)currentSeekAction;
- (void)setCurrentSeekAction:(unsigned long long)arg0;
- (BOOL)isSeekingProgress;
- (void)setHiddenWatchNew:(BOOL)arg0;
- (void)setIsSeekingProgress:(BOOL)arg0;
- (void)trackSlideEvent;
- (void)setWatchDurationStr:(id)arg0;
- (id)watchDurationStr;
- (void)setTotalDurationStr:(id)arg0;
- (void)setNeedHideProgressIndicator:(BOOL)arg0;
- (void)onPlayerProgressAutoUpdate:(double)arg0 duration:(double)arg1;
- (void)trackWatchNewClick;
- (BOOL)hadReportProgressShowInPortrait;
- (BOOL)hadReportProgressShowInLandscape;
- (void)setHadReportProgressShowInPortrait:(BOOL)arg0;
- (void)setHadReportProgressShowInLandscape:(BOOL)arg0;
- (void)watchNewLive;
- (id)totalDurationStr;
- (BOOL)needHideProgressIndicator;
- (long long)startWatchRecord;
- (void)setStartWatchRecord:(long long)arg0;
- (id)initWithContext:(id)arg0 eventContext:(id)arg1 room:(id)arg2;
- (void)switchSeekEnable:(BOOL)arg0;
- (void)onReceiveRmoteRoomData;
- (BOOL)isNormalLiveTimeShiftAuthOpen;
- (void)trackProgressShowEventIfNeeded;
- (void)setAllowSetSeekEnable:(BOOL)arg0;
- (void)refreshWatchNew;
- (void)setHasRefreshWatchNew:(BOOL)arg0;
- (void)seekVideoWithProgress:(double)arg0 sourceAction:(unsigned long long)arg1;
- (void)setSeekBarSwitch:(BOOL)arg0;
- (void)setPlayBackMessage:(id)arg0;
- (BOOL)supportSeekWhenScreenCast;
- (BOOL)hasRefreshWatchNew;
- (BOOL)seekPlayFrameChecker;
- (id)playBackMessage;
- (BOOL)seekBarSwitch;
- (BOOL)shouldShowInPaidRoom;
- (BOOL)allowSetSeekEnable;
- (void)setSeekPlayFrameChecker:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (id)formatDuration:(double)arg0;
- (double)duration;
- (id)context;
- (id)eventContext;
- (double)progress;
- (BOOL)isSeeking;
- (void)setProgress:(double)arg0;
- (void)setDuration:(double)arg0;
- (void)messageReceived:(id)arg0;
- (BOOL)isFirstPlay;

@end
