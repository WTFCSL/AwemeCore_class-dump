//
//     Generated by private class-dump
//

@class NSMutableDictionary;

@interface AWELaunchTimeTracker : NSObject {
    NSMutableDictionary *_eventCounter;
    id /* block */ _shouldShowAwesomeSplashHandler;
    id /* block */ _detailAwesomeSplashHandler;
    id /* block */ _launchFromHandler;
    id /* block */ _isStartUpFirstTimeBlock;
    id /* block */ _isAppVersionUpdatedBlock;
    id /* block */ _shouldCollectProcessInfoHandler;
    id /* block */ _extraParamsHandler;
    id /* block */ _didCollectLaunchDetailHandler;
}

@property (retain, nonatomic) NSMutableDictionary *eventCounter;
@property (copy, nonatomic) id /* block */ shouldShowAwesomeSplashHandler;
@property (copy, nonatomic) id /* block */ detailAwesomeSplashHandler;
@property (copy, nonatomic) id /* block */ launchFromHandler;
@property (copy, nonatomic) id /* block */ isStartUpFirstTimeBlock;
@property (copy, nonatomic) id /* block */ isAppVersionUpdatedBlock;
@property (copy, nonatomic) id /* block */ shouldCollectProcessInfoHandler;
@property (copy, nonatomic) id /* block */ extraParamsHandler;
@property (copy, nonatomic) id /* block */ didCollectLaunchDetailHandler;

+ (id)sharedInstance;

- (void)markTimingWithType:(unsigned long long)arg0;
- (void)markLoggerInit;
- (void)setLaunchFromHandler:(id /* block */)arg0;
- (void)setIsStartUpFirstTimeBlock:(id /* block */)arg0;
- (void)setIsAppVersionUpdatedBlock:(id /* block */)arg0;
- (void)setShouldCollectProcessInfoHandler:(id /* block */)arg0;
- (void)setDidCollectLaunchDetailHandler:(id /* block */)arg0;
- (void)p_collectDataIfNeeded;
- (void)p_collectProcessDetail;
- (double)p_processStartTime;
- (void)p_collectDataAndFlush;
- (id /* block */)launchFromHandler;
- (id /* block */)isStartUpFirstTimeBlock;
- (id /* block */)isAppVersionUpdatedBlock;
- (id /* block */)shouldShowAwesomeSplashHandler;
- (id /* block */)detailAwesomeSplashHandler;
- (id /* block */)shouldCollectProcessInfoHandler;
- (BOOL)p_isLaunchFromBoot;
- (id)p_launchClosureCount;
- (int)p_launchClosureRecreate:(BOOL)arg0;
- (id /* block */)extraParamsHandler;
- (id)metricTimeInfoWithName:(id)arg0 startTime:(double)arg1 endTime:(double)arg2;
- (id /* block */)didCollectLaunchDetailHandler;
- (id)p_launchClosureDir;
- (id)p_launchClosurePath;
- (BOOL)p_processInfoForPID:(int)arg0 procInfo:(struct kinfo_proc { struct extern_proc { union { struct { struct proc *x0; struct proc *x1; } x0; struct timeval { long long x0; int x1; } x1; } x0; struct vmspace *x1; struct sigacts *x2; int x3; char x4; int x5; int x6; int x7; char *x8; void *x9; int x10; int x11; unsigned int x12; int x13; unsigned int x14; void *x15; char *x16; unsigned int x17; unsigned int x18; struct itimerval { struct timeval { long long x0; int x1; } x0; struct timeval { long long x0; int x1; } x1; } x19; struct timeval { long long x0; int x1; } x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; int x24; struct vnode *x25; int x26; struct vnode *x27; int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned char x32; unsigned char x33; char x34; char x35[17]; struct pgrp *x36; struct user *x37; unsigned short x38; unsigned short x39; struct rusage *x40; } x0; struct eproc { struct proc *x0; struct session *x1; struct _pcred { char x0[72]; struct ucred *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; int x6; } x2; struct _ucred { int x0; unsigned int x1; short x2; unsigned int x3[16]; } x3; struct vmspace { int x0; char *x1; int x2[5]; char *x3[3]; } x4; int x5; int x6; short x7; int x8; int x9; struct session *x10; char x11[8]; int x12; short x13; short x14; short x15; int x16; char x17[12]; int x18[4]; } x1; } *)arg1;
- (id)eventCounter;
- (id)p_threadList;
- (id)p_taskFaults;
- (BOOL)appendLaunchExpectationForEvent:(id)arg0 params:(id)arg1;
- (void)setEventCounter:(id)arg0;
- (void)setShouldShowAwesomeSplashHandler:(id /* block */)arg0;
- (void)setDetailAwesomeSplashHandler:(id /* block */)arg0;
- (void)setExtraParamsHandler:(id /* block */)arg0;
- (BOOL)useDidAppearAsLaunchEnd;
- (BOOL)isVMPreloadEnabled;
- (id)init;
- (void).cxx_destruct;

@end
