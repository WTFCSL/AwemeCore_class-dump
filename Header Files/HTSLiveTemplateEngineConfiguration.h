//
//     Generated by private class-dump
//

@class UIColor, NSArray, HTSLiveUser, IESLiveTemplateEngineLogNode, NSDictionary, NSAttributedString;

@interface HTSLiveTemplateEngineConfiguration : NSObject {
    BOOL _checkSensitiveNickName;
    BOOL _shouldFilterIcon;
    BOOL _allowAnimatedImage;
    BOOL _forceUseLocalColor;
    BOOL _makeEmojiSizeEqualToWordFontSize;
    BOOL _enableLogNode;
    BOOL _enableAllImageCache;
    BOOL _enableCenterImageAlignment;
    BOOL _showNewVipBadge;
    long long _nickNameCutLength;
    UIColor *_localContentColor;
    UIColor *_localUserTextColor;
    UIColor *_localGiftTextColor;
    UIColor *_localPatternTextColor;
    double _localPatternFontSize;
    double _imageMaxHeight;
    NSAttributedString *_imagePlaceHolderContent;
    double _imageScalingRateWithFont;
    double _checkImageScaleFromURI;
    double _overlapSpace;
    NSArray *_filterBadgeUserIDs;
    HTSLiveUser *_userModel;
    IESLiveTemplateEngineLogNode *_logNode;
    NSDictionary *_pieceValues;
    double _badgeScale;
}

@property (nonatomic) BOOL checkSensitiveNickName;
@property (nonatomic) BOOL shouldFilterIcon;
@property (nonatomic) long long nickNameCutLength;
@property (nonatomic) BOOL allowAnimatedImage;
@property (nonatomic) BOOL forceUseLocalColor;
@property (retain, nonatomic) UIColor *localContentColor;
@property (retain, nonatomic) UIColor *localUserTextColor;
@property (retain, nonatomic) UIColor *localGiftTextColor;
@property (retain, nonatomic) UIColor *localPatternTextColor;
@property (nonatomic) double localPatternFontSize;
@property (nonatomic) double imageMaxHeight;
@property (copy, nonatomic) NSAttributedString *imagePlaceHolderContent;
@property (nonatomic) double imageScalingRateWithFont;
@property (nonatomic) double checkImageScaleFromURI;
@property (nonatomic) double overlapSpace;
@property (nonatomic) BOOL makeEmojiSizeEqualToWordFontSize;
@property (copy, nonatomic) NSArray *filterBadgeUserIDs;
@property (retain, nonatomic) HTSLiveUser *userModel;
@property (nonatomic) BOOL enableLogNode;
@property (retain, nonatomic) IESLiveTemplateEngineLogNode *logNode;
@property (retain, nonatomic) NSDictionary *pieceValues;
@property (nonatomic) BOOL enableAllImageCache;
@property (nonatomic) BOOL enableCenterImageAlignment;
@property (nonatomic) double badgeScale;
@property (nonatomic) BOOL showNewVipBadge;

+ (id)defaultConfiguration;

- (void)setLocalPatternFontSize:(double)arg0;
- (void)setLocalContentColor:(id)arg0;
- (void)setEnableCenterImageAlignment:(BOOL)arg0;
- (id)localContentColor;
- (void)setImagePlaceHolderContent:(id)arg0;
- (void)setImageScalingRateWithFont:(double)arg0;
- (void)setCheckSensitiveNickName:(BOOL)arg0;
- (void)setLocalUserTextColor:(id)arg0;
- (void)setForceUseLocalColor:(BOOL)arg0;
- (void)setEnableAllImageCache:(BOOL)arg0;
- (void)setLocalPatternTextColor:(id)arg0;
- (void)setCheckImageScaleFromURI:(double)arg0;
- (void)setShouldFilterIcon:(BOOL)arg0;
- (void)setOverlapSpace:(double)arg0;
- (void)setEnableLogNode:(BOOL)arg0;
- (void)setLogNode:(id)arg0;
- (id)logNode;
- (void)setLocalGiftTextColor:(id)arg0;
- (void)setFilterBadgeUserIDs:(id)arg0;
- (void)setShowNewVipBadge:(BOOL)arg0;
- (void)setBadgeScale:(double)arg0;
- (BOOL)showNewVipBadge;
- (double)localPatternFontSize;
- (BOOL)shouldFilterIcon;
- (id)filterBadgeUserIDs;
- (id)localUserTextColor;
- (id)localGiftTextColor;
- (id)localPatternTextColor;
- (id)imagePlaceHolderContent;
- (double)imageScalingRateWithFont;
- (void)setNickNameCutLength:(long long)arg0;
- (void)setMakeEmojiSizeEqualToWordFontSize:(BOOL)arg0;
- (BOOL)forceUseLocalColor;
- (id)pieceValues;
- (BOOL)makeEmojiSizeEqualToWordFontSize;
- (double)badgeScale;
- (BOOL)checkSensitiveNickName;
- (long long)nickNameCutLength;
- (BOOL)enableLogNode;
- (BOOL)enableAllImageCache;
- (double)checkImageScaleFromURI;
- (BOOL)enableCenterImageAlignment;
- (BOOL)allowAnimatedImage;
- (void)setAllowAnimatedImage:(BOOL)arg0;
- (double)overlapSpace;
- (void)setPieceValues:(id)arg0;
- (void).cxx_destruct;
- (id)userModel;
- (void)setUserModel:(id)arg0;
- (double)imageMaxHeight;
- (void)setImageMaxHeight:(double)arg0;

@end
