//
//     Generated by private class-dump
//

@class NSString;

@interface GPBEnumDescriptor : NSObject {
    NSString *name_;
    const char *valueNames_;
    const int *values_;
    void /* function */ *enumVerifier_;
    const char *extraTextFormatInfo_;
    unsigned int *nameOffsets_;
    unsigned int valueCount_;
}

@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, nonatomic) void /* function */ *enumVerifier;
@property (readonly, nonatomic) unsigned int enumNameCount;

+ (id)allocDescriptorForName:(id)arg0 valueNames:(const char *)arg1 values:(const int *)arg2 count:(unsigned int)arg3 enumVerifier:(void /* function */ *)arg4;
+ (id)allocDescriptorForName:(id)arg0 valueNames:(const char *)arg1 values:(const int *)arg2 count:(unsigned int)arg3 enumVerifier:(void /* function */ *)arg4 extraTextFormatInfo:(const char *)arg5;

- (id)getEnumNameForIndex:(unsigned int)arg0;
- (id)getEnumTextFormatNameForIndex:(unsigned int)arg0;
- (unsigned int)enumNameCount;
- (id)initWithName:(id)arg0 valueNames:(const char *)arg1 values:(const int *)arg2 count:(unsigned int)arg3 enumVerifier:(void /* function */ *)arg4;
- (BOOL)getValue:(int *)arg0 forEnumTextFormatName:(id)arg1;
- (id)enumNameForValue:(int)arg0;
- (void /* function */ *)enumVerifier;
- (BOOL)getValue:(int *)arg0 forEnumName:(id)arg1;
- (void)calcValueNameOffsets;
- (void)dealloc;
- (id)textFormatNameForValue:(int)arg0;
- (id)name;

@end
