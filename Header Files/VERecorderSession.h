//
//     Generated by private class-dump
//

@class VERecursiveMutex, VEEffectVideoPlayerFactory, NSLock, IESMMAudioSpeedConfig, IESMMEffectStickerInfo, VELensOnekeyEnhanceAlgorithm, NSMutableArray, VEPathBuffer, VECurveTransUtils, VEPreprocessUnit, HTSGLFilterInput, VEImageDetector, VEAmazingEffectFilter, VEAsyncDispatchUnit, HTSRawDataOutputRender, HTSLayerPreview, VEFPSCalculator, VEAudioReaderUnit, VEAudioReader, IESMMCameraConfig, IESMMARConfigurablePropertySet, VELensSharpFilter, IESMMCaptureKit, IESMMCaptureBase, VEExternalVideoCapture, VEAudioEffectUnit, IESMMLivePhotoConfig, VEMovieWriterWrapper, HTSVideoData, UIView, NSArray, HTSGLContext, HTSGLFilterGroup, VEPostProcessUnit, VERecorderAudioProcess, VEPreviewUnit, VERecorderSplitUnit, NSString, NSObject, TTVEPerformanceOC, HTSGLResizeRotateFilter, VEMultiInputUnit, VEAdaptiveFrameRateController, IESMMCaptureKitConfig, IESTrackInfo, IESMMARCamera, VELensDirtyLensDetector, VERecorderTemplateUnit, VEVideoReaderUnit, UIImage, IESMMBGVideoPlayer, IESMMARCameraRendererWrapper;
@protocol IESMMEffectGroupProtocol, IVEEffectProcess, IESMMCameraWhiteBalanceProtocol, OS_dispatch_queue;

@interface VERecorderSession : VERunloopObject <VECameraEffectProtocol, VECameraPixaloopProtocol, IVEAmazingFeatureProtocol, VERecorderExportProtocol, VECameraPrivacyCertProtocol, VERecorderRemakeProtocol, VECameraTakePictureProtocol, VECameraZoomProtocol, VERecorderTemplateProtocol, VECameraWriterDelegate, VECameraProtocol, VERecorderProtocol> {
    BOOL _isSpecialTreatPresetPhoto;
    BOOL _enableMultiCaptureRatioResolutionAlign;
    BOOL _ignoreNotification;
    BOOL _enableMonitor;
    BOOL _torchOn;
    BOOL _disableFaceDetectReferCamera;
    BOOL _autoZoomWithAlgorithm;
    BOOL _useEffectRecognize;
    BOOL _effectNodeInAudioChainIsOn;
    BOOL _notNeedAutoStartAudioCapture;
    BOOL _needAutoRotationFlag;
    BOOL _allowMultipleAssetChangeOrientation;
    BOOL _pureCameraMode;
    BOOL _hasCameraStartFailedRecreated;
    BOOL _shouldAutoStartAudioCapture;
    BOOL _captureSupportHDRPreview;
    BOOL _isMultiVideoSeeking;
    BOOL _isFirstLoadEffectSDK;
    BOOL _enableDirtyLensDetect;
    BOOL _useEffectRecordRate;
    BOOL _needProcessAudio;
    BOOL _needResolveAudio;
    BOOL _isFirstRecordImageCaptured;
    BOOL _forceRecord;
    BOOL _isAudioPlayerEnd;
    BOOL _musicNeedRepeat;
    BOOL _enableMultiContextRecorder;
    BOOL _enableMultiRenderCtxt;
    BOOL _enableMultiCamRecorder;
    BOOL _isSkipFrontCamEffectInMultiCam;
    BOOL _isSkipSecondCamEffectInMultiCam;
    BOOL _isFirstFrameRender;
    BOOL _isLivePhotoMode;
    BOOL _enableLensSharpen;
    BOOL _enableLensCombinedEnhance;
    BOOL _enableLensCombinedEnhanceAsf;
    BOOL _enableSysAutoFaceAE;
    BOOL _enableFaceAE;
    BOOL _enablePureModeReturnWithLens;
    BOOL _hasBGVideo;
    BOOL _bgVideoStarted;
    BOOL _needImageDataReplaceRawData;
    BOOL _replaceCameraFrame;
    BOOL _hasMultiVideo;
    BOOL _enableMicPCMWrite;
    BOOL _fristAudioFrameWrited;
    BOOL _isVideoRecorded;
    BOOL _isAsyncLoadEffectSDK;
    BOOL _hasRecorderEffect;
    BOOL _useKaraokeAudioCapture;
    BOOL _useKaraokeAudioCaptureInDuetProcess;
    BOOL _effectCompatibilityMode;
    BOOL _isDegraded;
    float _ISO;
    int _pictureNum;
    int _recordType;
    float minISO;
    float maxISO;
    int _multiVideoSeekCount;
    unsigned int _lastAudioSamples;
    IESMMCameraConfig *_config;
    long long _status;
    const void *_cameraContext;
    long long _preferredCameraType;
    id /* block */ _onCameraTypeDidChangeBlock;
    long long _previewModeType;
    unsigned long long _outputRotationMode;
    unsigned long long _previewRotationMode;
    long long _captureRatio;
    id /* block */ _firstEffectRenderBlock;
    id /* block */ _firstRenderBlock;
    id /* block */ _multiCamFirstRenderBlock;
    id /* block */ _musicPlayDidEndBlock;
    id /* block */ _IESCameraActionBlock;
    id /* block */ _VERecorderInfoBlock;
    id /* block */ _monitorUpdateBlock;
    NSString *_deviceType;
    long long _currentCameraPosition;
    long long _orientation;
    long long _cameraFlashMode;
    long long _cameraStablizationMode;
    long long _frontPreferredStabilizationMode;
    long long _rearPreferredStabilizationMode;
    double _videoZoomFactorUpscaleThreshold;
    NSArray *_virtualDeviceSwitchOverVideoZoomFactors;
    double _minAvailableVideoZoomFactor;
    double _maxAvailableVideoZoomFactor;
    id /* block */ _messageHandler;
    id /* block */ _effectBitmapRequestBlock;
    long long _cameraMode;
    IESMMARConfigurablePropertySet *_propertySet;
    long long _outputDirection;
    unsigned long long _fragmentCount;
    id /* block */ _IESCameraDurationBlock;
    id /* block */ _IESCameraBGMProgressBlock;
    id /* block */ _pVideoProcessedBufferCallback;
    id /* block */ _pVideoBufferCallback;
    id /* block */ _pVideoBufferAndInfoCallback;
    UIView *previewView;
    id<IESMMCameraWhiteBalanceProtocol> wbObj;
    id /* block */ _ISOChangeBlock;
    IESMMCaptureKitConfig *_cameraConfigure;
    long long _focusMode;
    long long _exposureMode;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_pAudioBufferList;
    struct opaqueCMSampleBuffer { } *_audioSampleBuffer;
    VELensDirtyLensDetector *_dirtyLensDetector;
    long long _dirtyLensDetectCounterFront;
    long long _dirtyLensDetectCounterBack;
    long long _dirtyLensDetectCounter;
    long long _dirtyLensDetectFrameCounter;
    VELensSharpFilter *_lensSharpFilter;
    VELensOnekeyEnhanceAlgorithm *_lensCombinedEnhanceFilter;
    NSArray *_faceResultArray;
    HTSVideoData *_videoData;
    double _recordRate;
    UIImage *_firstRecordImage;
    UIImage *_extFirstRecordImage;
    id /* block */ _motionDetectBlock;
    double _maxAcceleration;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_inBufferList;
    struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *_outBufferList;
    double _audioStartTime;
    VERecorderTemplateUnit *_templateUnit;
    NSLock *_lock;
    double _templateStartTime;
    VECurveTransUtils *_curveTransUtil;
    VEVideoReaderUnit *_videoReaderUnit;
    double _audioPlayerStartedTime;
    double _bgmVolume;
    id /* block */ _pAudioBufferCallback;
    id /* block */ _pAudioStartRecordInfoCallback;
    long long _inputFps;
    VEFPSCalculator *_fpsCalculator;
    IESTrackInfo *_cameraTrackInfo;
    NSMutableArray *_observerArray;
    unsigned long long _lastFrameRotationMode;
    NSString *_generalAudioKey;
    NSString *_generalAudioPath;
    double _generalAudioStartTime;
    double _recorderInitTime;
    double _captureStartTime;
    VEPathBuffer *_vePathmapArray;
    NSMutableArray *_dropframeArray;
    VEAdaptiveFrameRateController *_frameRateController;
    UIView *_previewContainer;
    IESMMCaptureKit *_normalCamera;
    IESMMCaptureBase *_currentCamera;
    unsigned long long _sessionMode;
    unsigned long long _recordPixelFormat;
    struct opaqueCMSampleBuffer { } *_captureSampleBuf;
    struct opaqueCMSampleBuffer { } *_extCaptureSampleBuf;
    VEAudioReaderUnit *_audioReaderUnit;
    HTSGLContext *_mainContext;
    HTSGLContext *_writerContext;
    HTSGLFilterGroup<IESMMEffectGroupProtocol> *_effectFilter;
    VEAmazingEffectFilter *_amazingFilter;
    HTSGLResizeRotateFilter *_preRotateFilter;
    HTSGLResizeRotateFilter *_postRotateFilter;
    NSMutableArray *_amazingFeatures;
    VEPreprocessUnit *_preprocessUnit;
    VERecorderSplitUnit *_recorderSplitUnit;
    VEMultiInputUnit *_multiInputUnit;
    VEAsyncDispatchUnit *_asyncDispatchUnit;
    VEAsyncDispatchUnit *_previewAsyncDispatchUnit;
    VEAsyncDispatchUnit *_writerAsyncDispatchUnit;
    id<IVEEffectProcess> _effectUnit;
    VEPostProcessUnit *_postProcessUnit;
    VEPreviewUnit *_previewUnit;
    HTSLayerPreview *_layerPreviewView;
    long long _multiCamSkipEffectMode;
    VEMovieWriterWrapper *_mainWriter;
    NSMutableArray *_videoWriters;
    UIView *_secondPreviewContainer;
    VEPreviewUnit *_secondPreviewUnit;
    long long _recordStatus;
    IESMMLivePhotoConfig *_livePhotoConfig;
    VEImageDetector *_veImageDetector;
    double _previewStartTime;
    NSLock *_previewStartTimeLock;
    NSString *_leftFilter;
    NSString *_rightFilter;
    NSMutableArray *_audioPlayerCache;
    NSMutableArray *_activeAudioPlayers;
    double _videoRecordStartTime;
    long long _cameraType;
    IESMMARCamera *_arVideoCamera;
    IESMMARCameraRendererWrapper *_arRendererWrapper;
    long long _audioMode;
    VERecorderAudioProcess *_audioProcess;
    VEExternalVideoCapture *_externalVideoInput;
    long long _lensCombinedEnhanceFrameCount;
    unsigned long long _bgVideoStartFragment;
    NSString *_bgVideoKey;
    IESMMBGVideoPlayer *_bgVideoPlayer;
    VERecursiveMutex *_videoStartMutex;
    double _bgVideoOutputWidth;
    double _bgVideoOutputHeight;
    struct __CVBuffer { } *_imagePbuf;
    VEEffectVideoPlayerFactory *_effectVideoPlayerFactory;
    unsigned long long _multiVideoStartFragment;
    IESMMBGVideoPlayer *_multiVideoPlayer;
    VEAudioReader *_musicAudioReader;
    HTSGLFilterInput *_multiVideoInput;
    struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *_micPCMWriteFile;
    NSObject<OS_dispatch_queue> *_micPCMWriteQueue;
    HTSRawDataOutputRender *_cacheRawoutputRender;
    VEAudioEffectUnit *_audioEffectUnit;
    IESMMAudioSpeedConfig *_speedConfig;
    unsigned long long _recordContentType;
    IESMMEffectStickerInfo *_currentApplyStickerInfo;
    TTVEPerformanceOC *_vePerformance;
    id /* block */ _veperformancecallback;
    struct CGSize { double width; double height; } _captureSize;
    struct CGSize { double width; double height; } _outputSize;
    struct CGSize { double width; double height; } _effectRenderSize;
    struct CGSize { double width; double height; } _multiCaptureRatioAlignmenResolution;
    struct CGSize { double width; double height; } _cameraPreset;
    struct CGSize { double width; double height; } _frameSize;
    struct CGSize { double width; double height; } _previousEffectRenderSize;
    struct CGSize { double width; double height; } _originSize;
    struct CGSize { double width; double height; } _degradedSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _pts;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _rwLock;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IESMMCaptureKitConfig *cameraConfigure;
@property (nonatomic) BOOL pureCameraMode;
@property (nonatomic) BOOL hasCameraStartFailedRecreated;
@property (nonatomic) BOOL shouldAutoStartAudioCapture;
@property (nonatomic) long long focusMode;
@property (nonatomic) long long exposureMode;
@property (nonatomic) struct CGSize { double width; double height; } cameraPreset;
@property (nonatomic) BOOL captureSupportHDRPreview;
@property (nonatomic) BOOL isMultiVideoSeeking;
@property (nonatomic) int multiVideoSeekCount;
@property (nonatomic) BOOL isFirstLoadEffectSDK;
@property (nonatomic) struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *pAudioBufferList;
@property (nonatomic) struct opaqueCMSampleBuffer { } *audioSampleBuffer;
@property (retain, nonatomic) VELensDirtyLensDetector *dirtyLensDetector;
@property (nonatomic) BOOL enableDirtyLensDetect;
@property (nonatomic) long long dirtyLensDetectCounterFront;
@property (nonatomic) long long dirtyLensDetectCounterBack;
@property (nonatomic) long long dirtyLensDetectCounter;
@property (nonatomic) long long dirtyLensDetectFrameCounter;
@property (retain, nonatomic) VELensSharpFilter *lensSharpFilter;
@property (retain, nonatomic) VELensOnekeyEnhanceAlgorithm *lensCombinedEnhanceFilter;
@property (retain, nonatomic) NSArray *faceResultArray;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (nonatomic) double recordRate;
@property (nonatomic) BOOL useEffectRecordRate;
@property (nonatomic) BOOL needProcessAudio;
@property (nonatomic) BOOL needResolveAudio;
@property (retain, nonatomic) UIImage *firstRecordImage;
@property (retain, nonatomic) UIImage *extFirstRecordImage;
@property (nonatomic) BOOL isFirstRecordImageCaptured;
@property (nonatomic) BOOL forceRecord;
@property (copy, nonatomic) id /* block */ motionDetectBlock;
@property (nonatomic) double maxAcceleration;
@property (nonatomic) struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *inBufferList;
@property (nonatomic) struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *outBufferList;
@property (nonatomic) double audioStartTime;
@property (nonatomic) unsigned int lastAudioSamples;
@property (retain, nonatomic) VERecorderTemplateUnit *templateUnit;
@property (retain, nonatomic) NSLock *lock;
@property (nonatomic) double templateStartTime;
@property (retain, nonatomic) VECurveTransUtils *curveTransUtil;
@property (retain, nonatomic) VEVideoReaderUnit *videoReaderUnit;
@property (nonatomic) double audioPlayerStartedTime;
@property (nonatomic) BOOL isAudioPlayerEnd;
@property (nonatomic) BOOL musicNeedRepeat;
@property (nonatomic) double bgmVolume;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } rwLock;
@property (copy, nonatomic) id /* block */ pVideoProcessedBufferCallback;
@property (copy, nonatomic) id /* block */ pVideoBufferCallback;
@property (copy, nonatomic) id /* block */ pVideoBufferAndInfoCallback;
@property (copy, nonatomic) id /* block */ pAudioBufferCallback;
@property (copy, nonatomic) id /* block */ pAudioStartRecordInfoCallback;
@property (nonatomic) long long inputFps;
@property (retain, nonatomic) VEFPSCalculator *fpsCalculator;
@property (retain, nonatomic) IESTrackInfo *cameraTrackInfo;
@property (retain, nonatomic) NSMutableArray *observerArray;
@property (nonatomic) unsigned long long lastFrameRotationMode;
@property (retain, nonatomic) NSString *generalAudioKey;
@property (retain, nonatomic) NSString *generalAudioPath;
@property (nonatomic) double generalAudioStartTime;
@property (nonatomic) double recorderInitTime;
@property (nonatomic) double captureStartTime;
@property (retain, nonatomic) VEPathBuffer *vePathmapArray;
@property (retain, nonatomic) NSMutableArray *dropframeArray;
@property (retain, nonatomic) VEAdaptiveFrameRateController *frameRateController;
@property (nonatomic) BOOL enableMultiContextRecorder;
@property (nonatomic) BOOL enableMultiRenderCtxt;
@property (retain, nonatomic) UIView *previewContainer;
@property (retain, nonatomic) IESMMCaptureKit *normalCamera;
@property (weak, nonatomic) IESMMCaptureBase *currentCamera;
@property (nonatomic) unsigned long long sessionMode;
@property (nonatomic) unsigned long long recordPixelFormat;
@property (nonatomic) struct opaqueCMSampleBuffer { } *captureSampleBuf;
@property (nonatomic) struct opaqueCMSampleBuffer { } *extCaptureSampleBuf;
@property (retain, nonatomic) VEAudioReaderUnit *audioReaderUnit;
@property (retain, nonatomic) HTSGLContext *mainContext;
@property (retain, nonatomic) HTSGLContext *writerContext;
@property (retain, nonatomic) HTSGLFilterGroup<IESMMEffectGroupProtocol> *effectFilter;
@property (retain, nonatomic) VEAmazingEffectFilter *amazingFilter;
@property (retain, nonatomic) HTSGLResizeRotateFilter *preRotateFilter;
@property (retain, nonatomic) HTSGLResizeRotateFilter *postRotateFilter;
@property (retain, nonatomic) NSMutableArray *amazingFeatures;
@property (retain, nonatomic) VEPreprocessUnit *preprocessUnit;
@property (retain, nonatomic) VERecorderSplitUnit *recorderSplitUnit;
@property (retain, nonatomic) VEMultiInputUnit *multiInputUnit;
@property (retain, nonatomic) VEAsyncDispatchUnit *asyncDispatchUnit;
@property (retain, nonatomic) VEAsyncDispatchUnit *previewAsyncDispatchUnit;
@property (retain, nonatomic) VEAsyncDispatchUnit *writerAsyncDispatchUnit;
@property (retain, nonatomic) id<IVEEffectProcess> effectUnit;
@property (retain, nonatomic) VEPostProcessUnit *postProcessUnit;
@property (retain, nonatomic) VEPreviewUnit *previewUnit;
@property (retain, nonatomic) HTSLayerPreview *layerPreviewView;
@property (nonatomic) BOOL enableMultiCamRecorder;
@property (nonatomic) long long multiCamSkipEffectMode;
@property (nonatomic) BOOL isSkipFrontCamEffectInMultiCam;
@property (nonatomic) BOOL isSkipSecondCamEffectInMultiCam;
@property (retain, nonatomic) VEMovieWriterWrapper *mainWriter;
@property (retain, nonatomic) NSMutableArray *videoWriters;
@property (retain, nonatomic) UIView *secondPreviewContainer;
@property (retain, nonatomic) VEPreviewUnit *secondPreviewUnit;
@property (nonatomic) BOOL isFirstFrameRender;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } pts;
@property (nonatomic) struct CGSize { double width; double height; } frameSize;
@property (nonatomic) long long recordStatus;
@property (nonatomic) BOOL isLivePhotoMode;
@property (retain, nonatomic) IESMMLivePhotoConfig *livePhotoConfig;
@property (retain, nonatomic) VEImageDetector *veImageDetector;
@property (nonatomic) double previewStartTime;
@property (retain, nonatomic) NSLock *previewStartTimeLock;
@property (retain, nonatomic) NSString *leftFilter;
@property (retain, nonatomic) NSString *rightFilter;
@property (retain, nonatomic) NSMutableArray *audioPlayerCache;
@property (retain, nonatomic) NSMutableArray *activeAudioPlayers;
@property (nonatomic) double videoRecordStartTime;
@property (nonatomic) long long cameraType;
@property (retain, nonatomic) IESMMARCamera *arVideoCamera;
@property (retain, nonatomic) IESMMARCameraRendererWrapper *arRendererWrapper;
@property (nonatomic) long long audioMode;
@property (retain, nonatomic) VERecorderAudioProcess *audioProcess;
@property (retain, nonatomic) VEExternalVideoCapture *externalVideoInput;
@property (nonatomic) BOOL enableLensSharpen;
@property (nonatomic) BOOL enableLensCombinedEnhance;
@property (nonatomic) BOOL enableLensCombinedEnhanceAsf;
@property (nonatomic) long long lensCombinedEnhanceFrameCount;
@property (nonatomic) BOOL enableSysAutoFaceAE;
@property (nonatomic) BOOL enableFaceAE;
@property (nonatomic) BOOL enablePureModeReturnWithLens;
@property (nonatomic) BOOL hasBGVideo;
@property (nonatomic) unsigned long long bgVideoStartFragment;
@property (retain, nonatomic) NSString *bgVideoKey;
@property (retain, nonatomic) IESMMBGVideoPlayer *bgVideoPlayer;
@property (retain, nonatomic) VERecursiveMutex *videoStartMutex;
@property (nonatomic) BOOL bgVideoStarted;
@property (nonatomic) double bgVideoOutputWidth;
@property (nonatomic) double bgVideoOutputHeight;
@property (nonatomic) struct __CVBuffer { } *imagePbuf;
@property (nonatomic) BOOL needImageDataReplaceRawData;
@property (nonatomic) BOOL replaceCameraFrame;
@property (retain, nonatomic) VEEffectVideoPlayerFactory *effectVideoPlayerFactory;
@property (nonatomic) BOOL hasMultiVideo;
@property (nonatomic) unsigned long long multiVideoStartFragment;
@property (retain, nonatomic) IESMMBGVideoPlayer *multiVideoPlayer;
@property (retain, nonatomic) VEAudioReader *musicAudioReader;
@property (retain, nonatomic) HTSGLFilterInput *multiVideoInput;
@property (nonatomic) BOOL enableMicPCMWrite;
@property (nonatomic) BOOL fristAudioFrameWrited;
@property (nonatomic) struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *micPCMWriteFile;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *micPCMWriteQueue;
@property (readonly, nonatomic) BOOL isVideoRecorded;
@property (nonatomic) BOOL isAsyncLoadEffectSDK;
@property (retain, nonatomic) HTSRawDataOutputRender *cacheRawoutputRender;
@property (nonatomic) BOOL hasRecorderEffect;
@property (nonatomic) BOOL useKaraokeAudioCapture;
@property (nonatomic) BOOL useKaraokeAudioCaptureInDuetProcess;
@property (retain, nonatomic) VEAudioEffectUnit *audioEffectUnit;
@property (retain, nonatomic) IESMMAudioSpeedConfig *speedConfig;
@property (nonatomic) struct CGSize { double width; double height; } previousEffectRenderSize;
@property (nonatomic) BOOL effectCompatibilityMode;
@property (nonatomic) unsigned long long recordContentType;
@property (retain, nonatomic) IESMMEffectStickerInfo *currentApplyStickerInfo;
@property (retain, nonatomic) TTVEPerformanceOC *vePerformance;
@property (copy, nonatomic) id /* block */ veperformancecallback;
@property (nonatomic) BOOL isDegraded;
@property (nonatomic) struct CGSize { double width; double height; } originSize;
@property (nonatomic) struct CGSize { double width; double height; } degradedSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IESMMCameraConfig *config;
@property (nonatomic) long long status;
@property (nonatomic) const void *cameraContext;
@property (nonatomic) long long preferredCameraType;
@property (copy, nonatomic) id /* block */ onCameraTypeDidChangeBlock;
@property (nonatomic) long long previewModeType;
@property (readonly, nonatomic) UIView *previewView;
@property (nonatomic) unsigned long long outputRotationMode;
@property (nonatomic) unsigned long long previewRotationMode;
@property (nonatomic) BOOL isSpecialTreatPresetPhoto;
@property (readonly, nonatomic) long long captureRatio;
@property (readonly, nonatomic) struct CGSize { double width; double height; } captureSize;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) struct CGSize { double width; double height; } effectRenderSize;
@property (nonatomic) BOOL enableMultiCaptureRatioResolutionAlign;
@property (nonatomic) struct CGSize { double width; double height; } multiCaptureRatioAlignmenResolution;
@property (copy, nonatomic) id /* block */ firstEffectRenderBlock;
@property (copy, nonatomic) id /* block */ firstRenderBlock;
@property (copy, nonatomic) id /* block */ multiCamFirstRenderBlock;
@property (copy, nonatomic) id /* block */ musicPlayDidEndBlock;
@property (nonatomic) BOOL ignoreNotification;
@property (copy) id /* block */ IESCameraActionBlock;
@property (nonatomic) BOOL enableMonitor;
@property (copy, nonatomic) id /* block */ monitorUpdateBlock;
@property (readonly, nonatomic) NSString *deviceType;
@property (readonly, nonatomic) long long currentCameraPosition;
@property (nonatomic) long long orientation;
@property (nonatomic) BOOL torchOn;
@property (readonly, nonatomic) BOOL captureIsRunning;
@property (readonly, nonatomic) BOOL isCaptureInterruptted;
@property (nonatomic) long long cameraFlashMode;
@property (nonatomic) long long cameraStablizationMode;
@property (nonatomic) long long frontPreferredStabilizationMode;
@property (nonatomic) long long rearPreferredStabilizationMode;
@property (readonly, nonatomic) float ISO;
@property (readonly, nonatomic) float minISO;
@property (readonly, nonatomic) float maxISO;
@property (copy, nonatomic) id /* block */ ISOChangeBlock;
@property (nonatomic) BOOL disableFaceDetectReferCamera;
@property (nonatomic) BOOL autoZoomWithAlgorithm;
@property (readonly, nonatomic) double videoZoomFactorUpscaleThreshold;
@property (readonly, nonatomic) NSArray *virtualDeviceSwitchOverVideoZoomFactors;
@property (readonly, nonatomic) double minAvailableVideoZoomFactor;
@property (readonly, nonatomic) double maxAvailableVideoZoomFactor;
@property (readonly, nonatomic) id<IESMMCameraWhiteBalanceProtocol> wbObj;
@property (nonatomic) int pictureNum;
@property (nonatomic) BOOL useEffectRecognize;
@property (nonatomic) BOOL effectNodeInAudioChainIsOn;
@property (copy, nonatomic) id /* block */ messageHandler;
@property (copy, nonatomic) id /* block */ effectBitmapRequestBlock;
@property (nonatomic) BOOL notNeedAutoStartAudioCapture;
@property (nonatomic) long long cameraMode;
@property (retain, nonatomic) IESMMARConfigurablePropertySet *propertySet;
@property (nonatomic) int recordType;
@property (nonatomic) BOOL needAutoRotationFlag;
@property (nonatomic) BOOL allowMultipleAssetChangeOrientation;
@property (nonatomic) long long outputDirection;
@property (readonly, nonatomic) unsigned long long fragmentCount;
@property (copy, nonatomic) id /* block */ IESCameraBGMProgressBlock;
@property (copy, nonatomic) id /* block */ IESCameraDurationBlock;
@property (copy) id /* block */ VERecorderInfoBlock;

+ (id)effectVersion;
+ (id)aecModelName;
+ (id)aecModelrequeirements;
+ (float)getCurrentLatency;
+ (void)exportVideoWithVideoData:(id)arg0 shouldNOCopy:(BOOL)arg1 completion:(id /* block */)arg2;
+ (BOOL)isDevicePositionSupportedInCameraType:(long long)arg0 andPosition:(long long)arg1;
+ (id)p_aecModelName;
+ (id)p_aecModelrequeirements;
+ (id)p_getKitConfigFromRecorderConfig:(id)arg0;
+ (BOOL)isMultiCamSupported;

- (void)registerBecomeActiveNotify;
- (void)registerResignActiveNotify;
- (void)registerEnterForegroundNotify;
- (void)registerEnterBackgroundNotify;
- (BOOL)startAudioCapture:(id /* block */)arg0 withPrivacyCert:(id)arg1;
- (BOOL)isAudioCaptureRuning;
- (void)releaseAudioCapture;
- (void)setRecordVolume:(double)arg0;
- (double)recordVolume;
- (void)setMusicVolume:(double)arg0;
- (void)setAccompanyVolume:(double)arg0;
- (double)accompanyVolume;
- (void)setOriginalSingVolume:(double)arg0;
- (double)originalSingVolume;
- (void)setEnableEarBack:(BOOL)arg0;
- (void)echoEnable:(BOOL)arg0;
- (void)seekToAccompanyTime:(double)arg0 accompanyStartWritingTime:(double)arg1 originalSingTime:(double)arg2 originalSingStartWritingTime:(double)arg3;
- (void)accompanySeekToTime:(double)arg0;
- (void)originalSingSeekToTime:(double)arg0;
- (void)seekDuetKaraokeModeToTime:(double)arg0;
- (void)setDuetKaraokeModeMusic:(id)arg0 fromTime:(double)arg1;
- (void)setAccompanyMusicFile:(id)arg0 fromTime:(double)arg1 OriginalSingMusicFile:(id)arg2 startTime:(double)arg3;
- (double)getDuetKaraokeModeCurrentTime;
- (double)getAccompanyCurrentTime;
- (double)getOriginalSingCurrentTime;
- (void)mutedOrignalSing:(BOOL)arg0;
- (void)mutedAccompany:(BOOL)arg0;
- (void)routeChanged;
- (void)pauseCameraCapture;
- (void)resumeCameraCapture;
- (long long)currentCameraPosition;
- (BOOL)cameraSetZoomFactor:(double)arg0;
- (void)switchCameraFormatToDolbyVision:(BOOL)arg0;
- (id)currentDeviceFormats;
- (void)setDeviceFormat:(id)arg0 then:(id /* block */)arg1;
- (double)currentCameraZoomFactor;
- (double)maxCameraZoomFactor;
- (double)maxExposureBias;
- (double)minExposureBias;
- (void)changeExposureBias:(double)arg0;
- (void)setMaxZoomFactor:(double)arg0;
- (long long)frontPreferredStabilizationMode;
- (void)setFrontPreferredStabilizationMode:(long long)arg0;
- (long long)rearPreferredStabilizationMode;
- (void)setRearPreferredStabilizationMode:(long long)arg0;
- (BOOL)enableFaceAE;
- (void)setEnableFaceAE:(BOOL)arg0;
- (BOOL)setScanParam:(id)arg0;
- (void)setAlgorithmResultRequirement:(unsigned long long)arg0 withCallbackBlock:(id /* block */)arg1;
- (BOOL)effectNodeInAudioChainIsOn;
- (void)setEffectNodeInAudioChainIsOn:(BOOL)arg0;
- (id)effectFilter;
- (id /* block */)effectBitmapRequestBlock;
- (id /* block */)effectBitmapRequestBlock;
- (void)setEffectBitmapRequestBlock:(id /* block */)arg0;
- (void)setEffectBitmapRequestBlock:(id /* block */)arg0;
- (void)setUseMakeupSegmentation:(BOOL)arg0;
- (void)setEffectResouceLoadTimeout:(long long)arg0;
- (void)setMaxStickerMemoryCache:(unsigned long long)arg0;
- (void)setRenderCacheStringByKey:(id)arg0 value:(id)arg1;
- (void *)getEffectHandle;
- (int)setEffectExportDestPath:(id)arg0;
- (void)reset_frame_cost_statistics;
- (struct { double x0; double x1; double x2; double x3; })get_frame_cost_statistics;
- (void)effect_reset_et_data:(unsigned int)arg0;
- (id)effect_get_et_data:(unsigned int)arg0;
- (BOOL)switchColorFilterIntensity:(id)arg0 inFilterPath:(id)arg1 inPosition:(float)arg2 inLeftIntensity:(float)arg3 inRightIntensity:(float)arg4;
- (BOOL)setColorFilterIntensity:(id)arg0 inIntensity:(float)arg1;
- (BOOL)getColorFilterIntensity:(id)arg0 outIntensity:(float *)arg1;
- (void)applyReshape:(id)arg0 withIndensity:(struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })arg1;
- (void)applyEffect:(id)arg0 type:(long long)arg1;
- (void)applyEffectWithInfo:(id)arg0 type:(long long)arg1 completion:(id /* block */)arg2;
- (void)applyEffectKey:(id)arg0 image:(id)arg1;
- (void)applyIndensity:(struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })arg0 type:(long long)arg1;
- (int)enableFilterAutomaticRecommmand:(BOOL)arg0 type:(unsigned long long)arg1;
- (BOOL)updateComposerNode:(id)arg0 key:(id)arg1 value:(double)arg2;
- (BOOL)updateMutipleComposerNodes:(id)arg0 keys:(id)arg1 values:(id)arg2;
- (float)getValueForComposerNode:(id)arg0 key:(id)arg1;
- (id)getCurrentComposerNodes;
- (id)judgeComposerPriority:(id)arg0 oldNodePath:(id)arg1 tag:(id)arg2;
- (id)judgeComposerPriority:(id)arg0 tag:(id)arg1;
- (BOOL)dumpComposerNodes:(id)arg0;
- (BOOL)setMaleMakeupState:(BOOL)arg0;
- (BOOL)setMusicPlayMode:(long long)arg0;
- (void)removeStickerWithKey:(id)arg0;
- (BOOL)handleTouchDown:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handleTouchUp:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handlePanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 location:(struct CGPoint { double x0; double x1; })arg1;
- (BOOL)handleLongPressEventWithLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)handleScaleEvent:(double)arg0;
- (BOOL)handleDoubleClickEvent:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)toggleGestureRecognition:(BOOL)arg0 type:(int)arg1;
- (void)enableBGM:(BOOL)arg0;
- (void)muteBGM:(BOOL)arg0;
- (void)amazingMuteBGM:(BOOL)arg0;
- (long long)getSLAMStatus;
- (BOOL)isSLAMRunning;
- (BOOL)getSLAMPlaneDetectStatus;
- (void)sendMessageToEffect:(id)arg0;
- (void)bef_effect_clear_event;
- (id)getAuxiliaryTextureKeys;
- (void)setAuxiliaryImage:(id)arg0 withKey:(id)arg1;
- (void)deleteImageTextureForKey:(id)arg0;
- (void)removeAllAuxiliaryImages;
- (BOOL)setHandDetectLowpower:(BOOL)arg0;
- (BOOL)updatFaceDectectIntervalTime:(int)arg0;
- (void)setAlgorithmRuntimeParam:(id)arg0;
- (BOOL)setMattingDetectModel:(BOOL)arg0;
- (void)setPreferredAlgorithmSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setAlgorithmRequirement:(unsigned long long)arg0 algorithmParam:(unsigned long long)arg1 enableDetect:(BOOL)arg2;
- (void)setAlgorithmResultsRequirement:(unsigned long long)arg0 callback:(id /* block */)arg1;
- (void)forceDetectBuffer:(long long)arg0;
- (void)addBachAlgorithmName:(id)arg0 config:(id)arg1 algoType:(unsigned long long)arg2;
- (void)removeAllBachAlgorithm;
- (id)getBachAlgorithmResultWithAlgoType:(unsigned long long)arg0;
- (Class)resultClassWithAlgoType:(unsigned long long)arg0;
- (void)applyMusicNodes:(id)arg0;
- (void)setEffectCacheDirectory:(id)arg0;
- (id)getEffectCapturedImageWithKey:(id)arg0;
- (void)releaseCaptureImage:(id)arg0;
- (long long)effectTextLimit;
- (void)setEffectText:(id)arg0 arg1:(int)arg1 arg2:(int)arg2 arg3:(const char *)arg3;
- (void)setInputKeyboardHide:(BOOL)arg0;
- (id)getEffectTextArray;
- (BOOL)handleBeginManipulate3DObject;
- (BOOL)handleManipulate3DObject;
- (BOOL)handleEndManipulate3DObject;
- (BOOL)handleFinishManipulate3DObject;
- (BOOL)save3DObjectMeshToFile:(id)arg0;
- (BOOL)detectPhotoContent:(id)arg0 withAlgorithm:(id)arg1;
- (long long)detectPhoto:(id)arg0 withAlgorithm:(id)arg1;
- (void)renderPic:(id)arg0 withKey:(id)arg1;
- (void)renderPicImage:(id)arg0 withKey:(id)arg1;
- (BOOL)needProcessAudio;
- (BOOL)needResolveAudio;
- (void)setAlgorithmExtraParam:(id)arg0;
- (void)setEffectVideoPlayerFactory:(id)arg0;
- (id)videoData;
- (void)setVideoData:(id)arg0;
- (void)setAlgorithmRequirement:(unsigned long long)arg0 enableDetect:(BOOL)arg1;
- (void)switchCameraSource;
- (void)captureSourcePhotoAsImageByUser:(BOOL)arg0 completionHandler:(id /* block */)arg1;
- (BOOL)cameraRampToZoomFactor:(double)arg0 withRate:(double)arg1;
- (void)pauseBGM:(unsigned long long)arg0;
- (void)stopVideoCaptureWithPrivacyCert:(id)arg0;
- (void)setAutoZoomWithAlgorithm:(BOOL)arg0;
- (void)setCameraInfoBlock:(id /* block */)arg0 withCameraInfoRequirement:(unsigned long long)arg1;
- (void)setIESCameraActionBlock:(id /* block */)arg0;
- (void)startVideoCaptureWithPrivacyCert:(id)arg0;
- (void)startBGM:(unsigned long long)arg0;
- (const void *)cameraContext;
- (void)setCameraContext:(const void *)arg0;
- (long long)preferredCameraType;
- (void)setPreferredCameraType:(long long)arg0;
- (id /* block */)onCameraTypeDidChangeBlock;
- (void)setOnCameraTypeDidChangeBlock:(id /* block */)arg0;
- (unsigned long long)outputRotationMode;
- (void)setOutputRotationMode:(unsigned long long)arg0;
- (unsigned long long)previewRotationMode;
- (void)setPreviewRotationMode:(unsigned long long)arg0;
- (BOOL)isSpecialTreatPresetPhoto;
- (void)setIsSpecialTreatPresetPhoto:(BOOL)arg0;
- (long long)captureRatio;
- (struct CGSize { double x0; double x1; })captureSize;
- (struct CGSize { double x0; double x1; })effectRenderSize;
- (void)setEffectRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)enableMultiCaptureRatioResolutionAlign;
- (void)setEnableMultiCaptureRatioResolutionAlign:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })multiCaptureRatioAlignmenResolution;
- (void)setMultiCaptureRatioAlignmenResolution:(struct CGSize { double x0; double x1; })arg0;
- (id /* block */)firstEffectRenderBlock;
- (void)setFirstEffectRenderBlock:(id /* block */)arg0;
- (id /* block */)firstRenderBlock;
- (void)setFirstRenderBlock:(id /* block */)arg0;
- (id /* block */)multiCamFirstRenderBlock;
- (void)setMultiCamFirstRenderBlock:(id /* block */)arg0;
- (id /* block */)musicPlayDidEndBlock;
- (void)setMusicPlayDidEndBlock:(id /* block */)arg0;
- (BOOL)ignoreNotification;
- (void)setIgnoreNotification:(BOOL)arg0;
- (id /* block */)IESCameraActionBlock;
- (BOOL)enableMonitor;
- (void)setEnableMonitor:(BOOL)arg0;
- (id /* block */)monitorUpdateBlock;
- (void)setMonitorUpdateBlock:(id /* block */)arg0;
- (BOOL)captureIsRunning;
- (BOOL)isCaptureInterruptted;
- (BOOL)isSupportFlashMode:(long long)arg0;
- (long long)cameraStablizationMode;
- (void)setCameraStablizationMode:(long long)arg0;
- (id /* block */)ISOChangeBlock;
- (void)setISOChangeBlock:(id /* block */)arg0;
- (BOOL)disableFaceDetectReferCamera;
- (void)setDisableFaceDetectReferCamera:(BOOL)arg0;
- (BOOL)autoZoomWithAlgorithm;
- (id)wbObj;
- (int)pictureNum;
- (void)setPictureNum:(int)arg0;
- (BOOL)useEffectRecognize;
- (void)setUseEffectRecognize:(BOOL)arg0;
- (BOOL)notNeedAutoStartAudioCapture;
- (void)setNotNeedAutoStartAudioCapture:(BOOL)arg0;
- (id)getRealTimeCaptureFrameRate;
- (id)initWithView:(id)arg0 config:(id)arg1 cameraComplete:(id /* block */)arg2;
- (void)switchCameraWithView:(id)arg0 config:(id)arg1 cameraComplete:(id /* block */)arg2;
- (void)initAudioCapture:(id /* block */)arg0;
- (void)initAudioCaptureAndSetupAudioSession:(id /* block */)arg0;
- (BOOL)startAudioCapture:(id /* block */)arg0;
- (BOOL)startAudioCaptureSync;
- (void)startVideoCaptureWithCompletionHandler:(id /* block */)arg0;
- (BOOL)startVideoCaptureWithAppStatusCheck;
- (void)stopVideoCaptureWithCompletionHandler:(id /* block */)arg0;
- (void)switchCameraFormatToPhotoCapture:(BOOL)arg0;
- (void)resetDropFrameCount:(int)arg0;
- (void)setPureCameraMode:(BOOL)arg0;
- (void)switchCameraModeWithEffectOrNot:(BOOL)arg0;
- (BOOL)setUseEffectAudioRecognize:(BOOL)arg0;
- (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })getAudioCaptureFormat;
- (void)runDirtyCameraDetectAlgorithmWithCompletion:(id /* block */)arg0;
- (void)resetDirtyCameraDetectCount:(int)arg0 back:(int)arg1;
- (void)getFaceResult:(id /* block */)arg0;
- (void)turnLensSharpen:(BOOL)arg0;
- (struct __CVBuffer { } *)processByLensSharpenWith:(struct __CVBuffer { } *)arg0;
- (void)turnLensCombinedEnhanceAlgorithm:(BOOL)arg0;
- (void)switchCameraSource:(id /* block */)arg0;
- (void)resetPreferredResolution:(struct CGSize { double x0; double x1; })arg0;
- (void)resetPreferredFrameRate:(unsigned long long)arg0;
- (void)resetPreferredFrameRateWithMinimum:(unsigned long long)arg0 maxmum:(unsigned long long)arg1;
- (void)tapFocusAtPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)resetFocusMode:(long long)arg0;
- (void)resetFocusMode:(long long)arg0 point:(struct CGPoint { double x0; double x1; })arg1;
- (void)resetFocusModeWithTransform:(long long)arg0 point:(struct CGPoint { double x0; double x1; })arg1;
- (struct CGPoint { double x0; double x1; })exposurePoint;
- (void)tapExposureAtPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)resetExposureMode:(long long)arg0;
- (void)resetExposureMode:(long long)arg0 point:(struct CGPoint { double x0; double x1; })arg1;
- (void)resetExposureModeWithTransform:(long long)arg0 point:(struct CGPoint { double x0; double x1; })arg1;
- (void)enableFrontCameraMirrored:(BOOL)arg0;
- (void)enablePreviewMirrored:(BOOL)arg0;
- (BOOL)isCameraCapabilitySupported:(unsigned long long)arg0;
- (id)currentSystemPressureState;
- (void)getCurrentDeviceFormatsSafty:(id /* block */)arg0;
- (id)resetPreviewView:(id)arg0;
- (void)resetPreviewType:(long long)arg0;
- (void)removeHTSGLPreview;
- (void)resumeHTSGLPreview:(id)arg0;
- (void)setNormalizedPreviewColorRed:(float)arg0 green:(float)arg1 blue:(float)arg2 alpha:(float)arg3;
- (void)clearDisplay:(float)arg0 green:(float)arg1 blue:(float)arg2 alpha:(float)arg3;
- (void)resetOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)resetCapturePreset:(id)arg0 then:(id /* block */)arg1;
- (void)resetCaptureRatio:(long long)arg0 then:(id /* block */)arg1;
- (void)resetCaptureRatio:(long long)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 then:(id /* block */)arg2;
- (void)resetCaptureRatio:(long long)arg0 preferredPreset:(id)arg1 then:(id /* block */)arg2;
- (void)resetCaptureRatio:(long long)arg0 preferredPreset:(id)arg1 previewHeight:(double)arg2 outputHeight:(double)arg3 then:(id /* block */)arg4;
- (void)resetCaptureRatio:(long long)arg0 preferredPreset:(id)arg1 previewSize:(struct CGSize { double x0; double x1; })arg2 outputSize:(struct CGSize { double x0; double x1; })arg3 then:(id /* block */)arg4;
- (void)enableEffectCompatibilityMode;
- (void)disableEffectCompatibilityMode;
- (void)setVideoAttachmentsCallback:(id /* block */)arg0;
- (void)setVideoBufferCallback:(id /* block */)arg0;
- (void)setVideoBufferAndInfoCallback:(id /* block */)arg0;
- (void)setVideoProcessedBufferCallback:(id /* block */)arg0;
- (void)setProcessedVideoBufferBlk:(id /* block */)arg0 withSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setAudioStartRecordInfoCallback:(id /* block */)arg0;
- (void)resetCameraInfoRequirement:(unsigned long long)arg0;
- (unsigned long long)getCurrentCameraInfoRequirement;
- (void)enableImageReplaceVideoRawData:(id)arg0;
- (void)disableImageReplaceVideoRawData;
- (void)forceVEPermanceRunOnceNow:(BOOL)arg0;
- (void)setVEPerformanceResultCallback:(id /* block */)arg0;
- (void)changeRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setActiveColorSpace:(unsigned long long)arg0 completionHandler:(id /* block */)arg1;
- (void)setPropertySet:(id)arg0;
- (void)setArCameraDelegate:(id)arg0;
- (id)arCameraDelegate;
- (void)setProcessSyncFlag:(BOOL)arg0;
- (void)turnBachFaceDetect:(BOOL)arg0;
- (void)turnRhythmicMotion:(BOOL)arg0;
- (int)currentProcessType;
- (void)updateCameraProcessParams:(id)arg0 complete:(id /* block */)arg1;
- (void)turnShakingDetect:(BOOL)arg0 param:(id)arg1 withResult:(id /* block */)arg2;
- (void)turnImageDefinitionDetect:(BOOL)arg0 param:(id)arg1 withResult:(id /* block */)arg2;
- (void)turnQrcodeDetect:(BOOL)arg0 param:(id)arg1 completeResult:(id /* block */)arg2 zoomFactor:(id /* block */)arg3 needSelect:(id /* block */)arg4;
- (void)qrcodeDetectResetZoomFactor:(float)arg0 byUser:(BOOL)arg1;
- (void)turnSystemEnigma:(BOOL)arg0 param:(id)arg1 completeResult:(id /* block */)arg2;
- (void)turnEnigma:(BOOL)arg0 param:(id)arg1 completeResult:(id /* block */)arg2;
- (void)turnMultiEnigma:(BOOL)arg0 param:(id)arg1 completeResults:(id /* block */)arg2;
- (void)turnScan:(BOOL)arg0 param:(id)arg1 completeResult:(id /* block */)arg2;
- (void)switchMultiCam:(long long)arg0;
- (void)setMultiCaptureKitUseParallelQueue:(BOOL)arg0;
- (BOOL)createCameraKitWithComplete:(id /* block */)arg0;
- (void)allowDestoryEffect:(id /* block */)arg0;
- (void)setNeedBlendSecond:(BOOL)arg0 pixelbuffer:(struct __CVBuffer { } *)arg1 mix:(float)arg2;
- (BOOL)startAudioCaptureWithPrivacyCert:(id)arg0;
- (BOOL)startAudioCaptureSyncWithPrivacyCert:(id)arg0;
- (void)stopAudioCaptureWithPrivacyCert:(id)arg0;
- (BOOL)startVideoCaptureWithAppStatusCheckWithPrivacyCert:(id)arg0;
- (void)stopVideoCaptureWithPrivacyCert:(id)arg0 completionHandler:(id /* block */)arg1;
- (void)captureStillImage:(id /* block */)arg0;
- (void)captureStillImageByUser:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)captureSourcePhotoAsImageWithCompletionHandler:(id /* block */)arg0;
- (void)captureSourcePhotoAsImageWithCompletionHandler:(id /* block */)arg0 afterProcess:(BOOL)arg1;
- (void)captureSourcePhotoAsImageByUser:(BOOL)arg0 completionHandler:(id /* block */)arg1 afterProcess:(BOOL)arg2;
- (void)captureSourcePhotoAsImageByUser:(BOOL)arg0 completionWithInformationHandler:(id /* block */)arg1 afterProcess:(BOOL)arg2;
- (void)captureHDImageWith:(struct CGSize { double x0; double x1; })arg0 completionHandle:(id /* block */)arg1;
- (void)captureHDImageWith:(struct CGSize { double x0; double x1; })arg0 byUser:(BOOL)arg1 completionHandle:(id /* block */)arg2;
- (void)captureImageWithOptions:(id)arg0 handler:(id /* block */)arg1;
- (void)captureImageWithOptions:(id)arg0 finishHandler:(id /* block */)arg1;
- (void)captureImageWithOptions:(id)arg0 completionHandler:(id /* block */)arg1;
- (struct CGSize { double x0; double x1; })getMaxHDSize;
- (id)cameraZoomSupportedInfo;
- (BOOL)cameraSetZoomFactor:(double)arg0 withFrontFactor:(double)arg1;
- (id)supportedBaseFocalLengthArray;
- (BOOL)needAutoRotationFlag;
- (void)setNeedAutoRotationFlag:(BOOL)arg0;
- (BOOL)allowMultipleAssetChangeOrientation;
- (void)setAllowMultipleAssetChangeOrientation:(BOOL)arg0;
- (long long)outputDirection;
- (void)setOutputDirection:(long long)arg0;
- (id /* block */)IESCameraBGMProgressBlock;
- (void)setIESCameraBGMProgressBlock:(id /* block */)arg0;
- (id /* block */)IESCameraDurationBlock;
- (void)setIESCameraDurationBlock:(id /* block */)arg0;
- (void)startVideoRecordWithRate:(double)arg0;
- (void)pauseVideoRecord;
- (void)pauseVideoRecordWithCallback:(id /* block */)arg0;
- (void)pauseVideoRecordWithCompletionHandler:(id /* block */)arg0;
- (void)cancelVideoRecord;
- (void)removeLastVideoFragment;
- (void)removeAllVideoFragments;
- (void)removeAllVideoFragments:(id /* block */)arg0;
- (void)clearLastVideoFragmentCache;
- (void)clearAllVideoFragmentCache;
- (void)resetVideoData;
- (void)setEnableMicPCMWrite:(BOOL)arg0;
- (void)updateVideoData:(id)arg0;
- (void)setMaxLimitTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (double)getTotalDuration;
- (void)resetRecorderWriter;
- (BOOL)isHeadphoneOutput;
- (void)resetRecorderWriterAsync;
- (void)resetVideoRecordReady;
- (void)setForceRecordAudio:(BOOL)arg0;
- (void)setForceRecordWithMusicEnd:(BOOL)arg0;
- (void)setDropFrame:(BOOL)arg0;
- (id)getFirstRecordFrame;
- (id)getMultiCamExtFirstRecordFrame;
- (void)setUseEffectRecordRate:(BOOL)arg0;
- (id /* block */)VERecorderInfoBlock;
- (void)setVERecorderInfoBlock:(id /* block */)arg0;
- (void)enableHighFramerate:(long long)arg0;
- (void)disableHighFramerate;
- (void)resetEffectFilter;
- (id)getEffectFilter;
- (void)setMusicWithURL:(id)arg0;
- (void)setMusicWithURL:(id)arg0 completion:(id /* block */)arg1;
- (void)setMusicWithURL:(id)arg0 startTime:(double)arg1 clipDuration:(double)arg2 repeatCount:(long long)arg3;
- (void)setMusicWithURL:(id)arg0 startTime:(double)arg1 clipDuration:(double)arg2 repeatCount:(long long)arg3 completion:(id /* block */)arg4;
- (void)changeMusicStartTime:(double)arg0 clipDuration:(double)arg1;
- (void)musicPlay;
- (void)musicPlay:(id /* block */)arg0;
- (void)musicPause;
- (void)musicPause:(id /* block */)arg0;
- (void)musicStop;
- (void)musicStop:(id /* block */)arg0;
- (void)musicSeekToTime:(double)arg0;
- (void)musicSeekToTime:(double)arg0 completion:(id /* block */)arg1;
- (void)setMusicNeedRepeat:(BOOL)arg0;
- (void)setMusicPlayRate:(float)arg0;
- (void)setMusicPlayRate:(float)arg0 completion:(id /* block */)arg1;
- (void)setBgMusicVolume:(float)arg0;
- (void)setBGMVolume:(float)arg0;
- (void)removePlayer;
- (void)setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 completeBlock:(id /* block */)arg3;
- (void)setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 completeBlock:(id /* block */)arg3 didPlayToEndBlock:(id /* block */)arg4;
- (void)setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 type:(unsigned long long)arg3;
- (void)setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 type:(unsigned long long)arg3 completeBlock:(id /* block */)arg4 didPlayToEndBlock:(id /* block */)arg5;
- (void)setBGVideoWithVideoURL:(id)arg0 rate:(float)arg1 type:(unsigned long long)arg2 bReplace:(BOOL)arg3;
- (void)setBGVideoAutoRepeat:(BOOL)arg0;
- (void)resetBGVideo;
- (void)bgVideoPlay;
- (void)bgVideoPause;
- (void)bgVideoMutePlayer:(BOOL)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })bgVideoCurrentTime;
- (float)bgVideoCurrentPlayPercent;
- (float)bgVideoCurrentRecordPercent;
- (void)bgVideoSeekToPercent:(float)arg0 completeBlock:(id /* block */)arg1;
- (void)bgVideoSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)bgVideoChangeRate:(float)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)bgVideoIsPlaying;
- (void)setBGVideoVolume:(float)arg0;
- (void)setMultiVideoWithVideoURL:(id)arg0 rate:(float)arg1 completeBlock:(id /* block */)arg2;
- (void)setMultiVideoAutoRepeat:(BOOL)arg0;
- (void)resetMultiVideo;
- (void)multiVideoPlay;
- (void)multiVideoPlayWithTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)multiVideoPause;
- (void)multiVideoMutePlayer:(BOOL)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })multiVideoCurrentTime;
- (float)multiVideoDuration;
- (float)multiVideoCurrentPlayPercent;
- (float)multiVideoCurrentRecordPercent;
- (void)multiVideoSeekToPercent:(float)arg0 completeBlock:(id /* block */)arg1;
- (void)multiVideoSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)multiVideoChangeRate:(float)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)multiVideoIsPlaying;
- (id)getMultiPlayer;
- (void)multiVideoIsReady;
- (void)resetStoryModeWithConfig:(id)arg0;
- (void)updateConfigVideoData:(id)arg0;
- (void)updateConfigRenderLayer:(id)arg0;
- (void)enableTC21RedpackageRecord:(BOOL)arg0;
- (void)getTC21RedpakageRecordInfo:(id /* block */)arg0;
- (void)setRecorderAudioMode:(long long)arg0;
- (void)karaokePlay;
- (void)karaokePause;
- (BOOL)aecStatus;
- (BOOL)isAudioCaptureRunning;
- (void)clearVideodata;
- (void)setPureModeReturnWithLens:(BOOL)arg0;
- (void)setSkipFrontOrSecondEffectInMultiCam:(long long)arg0;
- (void)setSkipFrontCamEffectInMultiCam:(BOOL)arg0;
- (void)setSkipSecondCamEffectInMultiCam:(BOOL)arg0;
- (void)setSkipBinnedFormatInMultiCam:(long long)arg0;
- (void)setAECEnabled:(BOOL)arg0 modelPath:(id)arg1;
- (void)setAECEnabled:(BOOL)arg0 modelPath:(id)arg1 completion:(id /* block */)arg2;
- (void)setBalanceEnabled:(BOOL)arg0 targetLufs:(int)arg1;
- (void)setBGMBalanceEnabled:(BOOL)arg0 targetLufs:(float)arg1 peak:(float)arg2 loudness:(float)arg3;
- (void)setMulVideoBalanceEnabled:(BOOL)arg0 targetLufs:(float)arg1 peak:(float)arg2 loudness:(float)arg3;
- (void)setNewBalanceEnabled:(BOOL)arg0 newBalanceCallback:(id /* block */)arg1;
- (void)setTimeAlignEnabled:(BOOL)arg0 modelPath:(id)arg1 timeAlignCallback:(id /* block */)arg2;
- (void)setBackendMode:(long long)arg0 useOutput:(BOOL)arg1;
- (BOOL)checkConfig:(id)arg0;
- (void)setRecorderConfig:(id)arg0 cameraComplete:(id /* block */)arg1;
- (void)setTemplateVideoData:(id)arg0 preview:(id)arg1 firstFrameRenderCallback:(id /* block */)arg2;
- (void)removeTemplateVideo;
- (void)pauseTemplateVideo:(BOOL)arg0 then:(id /* block */)arg1;
- (void)setTemplateVolume:(double)arg0;
- (void)setTemplateVideoRotation:(unsigned long long)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentBGMTimeWithRate;
- (void)resetLivePhotoCache;
- (void)setDuetKaraokeModeMusicReader:(id)arg0 fromTime:(double)arg1;
- (BOOL)switchLivePhotoRecord:(BOOL)arg0 with:(id)arg1;
- (void)switchLivePhotoRecordAsync:(BOOL)arg0 with:(id)arg1 complete:(id /* block */)arg2;
- (void)processExternalVideoInput:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)processExternalAudioInput:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)configRecordContent:(unsigned long long)arg0;
- (BOOL)exportWithVideo:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)exportVideoWithMicMuted:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)remakeStoreVideoAssets;
- (void)remakeResumeVideoAssets;
- (void)remakeStart:(unsigned long long)arg0;
- (void)remakeStop:(BOOL)arg0;
- (void)remakeResumeLastVideoAssets;
- (void)remakeClearAll;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })remakeTotalVideoDuration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })remakeVideoDuration;
- (void)remakeRefresh;
- (void)enableAudioEffectSticker:(BOOL)arg0;
- (void)turnEffectNodeInAudioChain:(BOOL)arg0;
- (void)getEffectResMultiviewTag:(const char *)arg0 tag:(char *)arg1;
- (void)setEffectLoadStatusBlockV2:(id /* block */)arg0;
- (void)switchFilterWithLeftPath:(id)arg0 rightPath:(id)arg1 progress:(double)arg2;
- (void)applyEffect:(id)arg0 type:(long long)arg1 enableFakeFace:(BOOL)arg2;
- (void)applyEffectWithInfo:(id)arg0 type:(long long)arg1 enableFakeFace:(BOOL)arg2;
- (void)applyEffectWithInfo:(id)arg0 type:(long long)arg1 enableFakeFace:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)clearEffectForRecordFinish;
- (void)setExternalFaceMakeupOpacity:(id)arg0 maleOpacity:(double)arg1 femaleOpacity:(double)arg2;
- (void)setExternalFaceMakeupOpacity:(id)arg0 maleOpacity:(double)arg1 femaleOpacity:(double)arg2 completion:(id /* block */)arg3;
- (void)applyComposerNodesWithTags:(id)arg0;
- (void)applyComposerNodesWithTags:(id)arg0 enableFakeFace:(BOOL)arg1;
- (void)reloadComposerNodesWithTags:(id)arg0;
- (void)appendComposerNodesWithTags:(id)arg0;
- (void)removeComposerNodesWithTags:(id)arg0;
- (BOOL)operateComposerNodesWithTags:(id)arg0 operation:(long long)arg1;
- (BOOL)replaceComposerNodesWithNewTag:(id)arg0 old:(id)arg1;
- (BOOL)updateTouchInfoForGestureRecognition:(struct _VETouchInfo { unsigned int x0; struct CGPoint { double x0; double x1; } x1; float x2; float x3; int x4; long long x5; })arg0;
- (BOOL)isRecognizingGesture:(int)arg0;
- (BOOL)setSafeAreas:(id)arg0;
- (void)startBGMAsync:(unsigned long long)arg0 complete:(id /* block */)arg1;
- (void)startEffectWithType:(unsigned long long)arg0;
- (void)pauseEffectWithType:(unsigned long long)arg0;
- (void)applyRealPlay:(id)arg0;
- (void)applyRealPlayWithInfo:(id)arg0;
- (void)enableEffectMusicPlayerProgress:(BOOL)arg0;
- (void)renderPicImage:(id)arg0 withKeys:(id)arg1;
- (void)releaseImageDetector;
- (void)renderImage:(struct __CVBuffer { } *)arg0 key:(id)arg1;
- (void)addFeature:(id)arg0 forAsset:(id)arg1;
- (void)deleteFeature:(id)arg0 forAsset:(id)arg1;
- (void)updateFeature:(id)arg0 forAsset:(id)arg1;
- (void)replaceFeature:(id)arg0 oldFeature:(id)arg1 forAsset:(id)arg2;
- (void)addFrameExtractDriver:(id)arg0 forAsset:(id)arg1;
- (void)setEffectLoadStatusBlock:(id /* block */)arg0;
- (void)applyEffectWithInfo:(id)arg0 type:(long long)arg1;
- (void)setBgmVolume:(double)arg0;
- (double)bgmVolume;
- (struct CGSize { double x0; double x1; })originSize;
- (void)setOriginSize:(struct CGSize { double x0; double x1; })arg0;
- (id)audioReaderUnit;
- (void)setAudioReaderUnit:(id)arg0;
- (id)arRendererWrapper;
- (void)setArRendererWrapper:(id)arg0;
- (void)registerMediaServicesResetNotify;
- (void)setAudioProcess:(id)arg0;
- (id)audioProcess;
- (BOOL)enableMultiCamRecorder;
- (void)setEnableMultiCamRecorder:(BOOL)arg0;
- (double)recordRate;
- (void)setRecordRate:(double)arg0;
- (id)observerArray;
- (void)setObserverArray:(id)arg0;
- (void)setEffectFilter:(id)arg0;
- (BOOL)enableMultiContextRecorder;
- (id)faceResultArray;
- (void)setFaceResultArray:(id)arg0;
- (double)previewStartTime;
- (void)setPreviewStartTime:(double)arg0;
- (void)setFpsCalculator:(id)arg0;
- (id)fpsCalculator;
- (id)p_handleFilter:(id)arg0 inExistingFilters:(id)arg1;
- (void)setOutBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)outBufferList;
- (void)addRealTimeMusic:(id)arg0;
- (void)initVEImageDetector;
- (void)__postTrackerWithOptions:(id)arg0 image:(id)arg1 error:(id)arg2 duration:(double)arg3;
- (void)updateMediaTrackerWithOptions:(id)arg0 tracker:(id)arg1;
- (void)__processImageWithOptions:(id)arg0 tracker:(id)arg1 handler:(id /* block */)arg2;
- (void)__processCaptureResultWithOptions:(id)arg0 tracker:(id)arg1 image:(id)arg2 pixelBuffer:(struct __CVBuffer { } *)arg3 error:(id)arg4 then:(id /* block */)arg5;
- (id)imageFromPixelBuffer:(struct __CVBuffer { } *)arg0 fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (struct CGSize { double x0; double x1; })p_getMaxRenderSize;
- (void)setMusicAudioReader:(id)arg0;
- (id)musicAudioReader;
- (void)setAmazingFilter:(id)arg0;
- (void)setPreRotateFilter:(id)arg0;
- (id)preRotateFilter;
- (void)setPostRotateFilter:(id)arg0;
- (id)postRotateFilter;
- (id)amazingFilter;
- (void)p_setFirstVideoTime:(double)arg0 firstAudioTime:(double)arg1;
- (void)p_checkAsbd;
- (void)p_reconnectAudioEffect:(id /* block */)arg0;
- (BOOL)p_audioCaptureIsLower;
- (BOOL)p_isBackedUseing;
- (float)getCurrentDelayTime:(BOOL)arg0;
- (void)setBGAudioReaderWithUrl:(id)arg0;
- (void)__syncFetchImageFromBuffer:(id /* block */)arg0 isMainRute:(BOOL)arg1;
- (void)__syncFetchPixelBufferFromBuffer:(id /* block */)arg0 isMainRute:(BOOL)arg1;
- (void)setIsAsyncLoadEffectSDK:(BOOL)arg0;
- (BOOL)isAsyncLoadEffectSDK;
- (void)setIsFirstLoadEffectSDK:(BOOL)arg0;
- (void)p_trackRecordParam;
- (void)setEnableMultiContextRecorder:(BOOL)arg0;
- (void)setEnableMultiRenderCtxt:(BOOL)arg0;
- (BOOL)enableMultiRenderCtxt;
- (void)setWriterContext:(id)arg0;
- (void)setVideoStartMutex:(id)arg0;
- (void)setVideoWriters:(id)arg0;
- (void)p_initCameraKit:(id /* block */)arg0;
- (void)setPreviewContainer:(id)arg0;
- (void)setSecondPreviewContainer:(id)arg0;
- (void)registerEffectArNoti;
- (void)p_updateVideoReaderUnit:(id)arg0;
- (void)p_createCameraTrackInfoWithVideoData:(id)arg0;
- (void)p_updateConfigureWithBgAsset;
- (void)setIsFirstRecordImageCaptured:(BOOL)arg0;
- (void)setFirstRecordImage:(id)arg0;
- (void)setExtFirstRecordImage:(id)arg0;
- (void)setCaptureSupportHDRPreview:(BOOL)arg0;
- (id)preprocessUnit;
- (void)p_loadPreprocessUnit;
- (void)p_preloadEffectAlgorithm;
- (void)p_createAudioPlayerForceNeeded:(BOOL)arg0;
- (void)setDirtyLensDetectCounterBack:(long long)arg0;
- (void)setDirtyLensDetectCounterFront:(long long)arg0;
- (long long)dirtyLensDetectCounterFront;
- (long long)dirtyLensDetectCounterBack;
- (void)setDirtyLensDetectCounter:(long long)arg0;
- (void)setDirtyLensDetectFrameCounter:(long long)arg0;
- (void)setEnableLensSharpen:(BOOL)arg0;
- (void)setEnableLensCombinedEnhance:(BOOL)arg0;
- (void)p_initAudioProcessor;
- (void)p_obtainOldConfigBitrateSettingWhenNil:(id)arg0;
- (void)p_recreateVideoWriter;
- (id)secondPreviewContainer;
- (void)resumeHTSGLPreview;
- (id)p_getNormalCameraHandle;
- (void)p_removeMonitorObserver;
- (void)setMultiVideoPlayer:(id)arg0;
- (void)setBgVideoPlayer:(id)arg0;
- (void)removeLayerPreview;
- (id)previewAsyncDispatchUnit;
- (void)setPreviewAsyncDispatchUnit:(id)arg0;
- (id)writerAsyncDispatchUnit;
- (void)setWriterAsyncDispatchUnit:(id)arg0;
- (id)asyncDispatchUnit;
- (void)setAsyncDispatchUnit:(id)arg0;
- (void)setFrameRateController:(id)arg0;
- (struct opaqueCMSampleBuffer { } *)captureSampleBuf;
- (void)setCaptureSampleBuf:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct opaqueCMSampleBuffer { } *)extCaptureSampleBuf;
- (void)setExtCaptureSampleBuf:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)pAudioBufferList;
- (void)setPAudioBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)inBufferList;
- (void)setInBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (struct opaqueCMSampleBuffer { } *)audioSampleBuffer;
- (void)setAudioSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)p_audioProcessorDealloc;
- (void)setDirtyLensDetector:(id)arg0;
- (id)writerContext;
- (BOOL)p_initAudioCapture;
- (BOOL)useKaraokeAudioCapture;
- (void)p_setAudioCallback;
- (void)p_reusePlayer;
- (void)p_seekAudioTimeIfneed;
- (void)setupAudioSessionAsync:(id /* block */)arg0;
- (BOOL)p_startAudioCaptureAsyncWithBlock:(id /* block */)arg0 withPrivacyCert:(id)arg1;
- (BOOL)p_startAudioCaptureWithBlock:(id /* block */)arg0 withPrivacyCert:(id)arg1;
- (void)p_stopAudioCaptureWithPrivacyCert:(id)arg0;
- (BOOL)p_startVideoCaptureWithStatusCheck:(BOOL)arg0 withPrivacyCert:(id)arg1;
- (BOOL)p_startVideoCaptureWithStatusCheck:(BOOL)arg0 withPrivacyCert:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)p_stopVideoCaptureWithPrivacyCert:(id)arg0;
- (void)p_stopVideoCaptureWithPrivacyCert:(id)arg0 isAsync:(BOOL)arg1 completionHandler:(id /* block */)arg2;
- (id)videoRecordReady;
- (id)p_getCurrentCameraHandle;
- (BOOL)isLivePhotoMode;
- (void)cancelVideoRecordReady;
- (BOOL)p_isOnlyAudio;
- (id)mainWriter;
- (id)multiVideoInput;
- (void)p_setWriterInputPixelFormat:(unsigned long long)arg0;
- (void)p_registFacePointBlockToEffectForFaceAE;
- (id)dirtyLensDetector;
- (id)lensSharpFilter;
- (void)setLensSharpFilter:(id)arg0;
- (void)getFaceResultData:(id /* block */)arg0;
- (id)lensCombinedEnhanceFilter;
- (BOOL)enablePureModeReturnWithLens;
- (void)setEnableLensCombinedEnhanceAsf:(BOOL)arg0;
- (void)setLensCombinedEnhanceFilter:(id)arg0;
- (void)setLensCombinedEnhanceFrameCount:(long long)arg0;
- (void)switchToCameraType:(long long)arg0;
- (void)p_switchCameraSource;
- (void)p_setFocusMode:(long long)arg0 viewPosition:(id)arg1;
- (struct CGPoint { double x0; double x1; })cordinateTransform:(struct CGPoint { double x0; double x1; })arg0 originSize:(struct CGSize { double x0; double x1; })arg1 cropSize:(struct CGSize { double x0; double x1; })arg2 fillType:(long long)arg3;
- (void)p_setFocusMode:(long long)arg0 viewPosition:(id)arg1 originalPointValue:(id)arg2;
- (void)p_setExposureMode:(long long)arg0 viewPosition:(id)arg1;
- (void)p_setExposureMode:(long long)arg0 viewPosition:(id)arg1 originalPointValue:(id)arg2;
- (id)previewUnit;
- (BOOL)p_isCameraCapabilitySupported:(unsigned long long)arg0;
- (id)arVideoCamera;
- (BOOL)p_cameraSetZoomFactor:(double)arg0;
- (id)recorderSplitUnit;
- (id)effectUnit;
- (void)setPreviewUnit:(id)arg0;
- (id)secondPreviewUnit;
- (void)setSecondPreviewUnit:(id)arg0;
- (void)p_initPreviewWithCompletionHandler:(id /* block */)arg0;
- (void)p_recorderInfoCb:(long long)arg0 value:(id)arg1;
- (unsigned long long)getCropType;
- (struct CGSize { double x0; double x1; })degradedSize;
- (void)p_resetFocusAndExposureModeForScene:(long long)arg0;
- (BOOL)effectCompatibilityMode;
- (void)setPreviousEffectRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setEffectCompatibilityMode:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })previousEffectRenderSize;
- (void)setPVideoBufferCallback:(id /* block */)arg0;
- (void)setPVideoBufferAndInfoCallback:(id /* block */)arg0;
- (void)setPVideoProcessedBufferCallback:(id /* block */)arg0;
- (id /* block */)pVideoProcessedBufferCallback;
- (void)setPAudioBufferCallback:(id /* block */)arg0;
- (void)setPAudioStartRecordInfoCallback:(id /* block */)arg0;
- (void)setDegradedSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setRecordContentType:(unsigned long long)arg0;
- (void)p_trackPreviewMediaData;
- (void)p_trackCameraMediaDataWithCameraPos:(long long)arg0;
- (void)p_trackCameraMediaDataWithCameraPos:(long long)arg0;
- (void)p_trackLensSharpMediaData;
- (void)setNeedProcessAudio:(BOOL)arg0;
- (void)setNeedResolveAudio:(BOOL)arg0;
- (void)resetRecordMetadataInfoIfNeeded;
- (id)bgVideoPlayer;
- (double)bgVideoOutputWidth;
- (double)bgVideoOutputHeight;
- (id)videoStartMutex;
- (void)setBgVideoStarted:(BOOL)arg0;
- (id)videoRecordReadyWithSyncFlag:(BOOL)arg0;
- (id)frameRateController;
- (void)p_startMotionDetect;
- (void)p_initAudioEffectUnit;
- (id)speedConfig;
- (id)videoWriters;
- (void)setVideoRecordStartTime:(double)arg0;
- (void)startRecordWithGeneralAudioStatus;
- (void)_cameraWriterEnable:(BOOL)arg0;
- (id)multiVideoPlayer;
- (void)p_stopProcessor:(BOOL)arg0;
- (void)p_startProcessor:(BOOL)arg0;
- (BOOL)enableMicPCMWrite;
- (BOOL)isNeedRecordAudio;
- (void)openMicPcmFile:(id)arg0;
- (void)pauseVideoRecordWithAction:(long long)arg0 completionHandler:(id /* block */)arg1;
- (BOOL)pureCameraMode;
- (void)reSyncAudioProgress;
- (void)seekAudioReaderUnit:(double)arg0;
- (void)seekSubTrackVideoReaderUnit:(double)arg0;
- (void)p_clearLastVideoFragmentCache;
- (void)p_clearAllVideoFragmentCache;
- (void)p_resetVideoWriter;
- (id)firstRecordImage;
- (id)extFirstRecordImage;
- (void)setLivePhotoConfig:(id)arg0;
- (void)setIsLivePhotoMode:(BOOL)arg0;
- (void)p_setHasBgm:(BOOL)arg0 completion:(id /* block */)arg1;
- (BOOL)needImageDataReplaceRawData;
- (void)setImagePbuf:(struct __CVBuffer { } *)arg0;
- (struct __CVBuffer { } *)imagePbuf;
- (void)setNeedImageDataReplaceRawData:(BOOL)arg0;
- (void)setReplaceCameraFrame:(BOOL)arg0;
- (void)p_setBGVideoWithVideoURL:(id)arg0 key:(id)arg1 rate:(float)arg2 type:(unsigned long long)arg3 completeBlock:(id /* block */)arg4 didPlayToEndBlock:(id /* block */)arg5;
- (void)p_setBGVideoAutoRepeat:(BOOL)arg0;
- (void)p_resetBGVideo;
- (void)p_bgVideoPlay;
- (void)p_bgVideoPause;
- (void)p_bgVideoMutePlayer:(BOOL)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })p_bgVideoCurrentTime;
- (float)p_bgVideoCurrentPlayPercent;
- (float)p_bgVideoCurrentRecordPercent;
- (void)p_bgVideoSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)p_bgVideoSeekToPercent:(float)arg0 completeBlock:(id /* block */)arg1;
- (void)p_bgVideoChangeRate:(float)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)p_bgVideoIsPlaying;
- (void)p_setBGVideoVolume:(float)arg0;
- (void)p_setMultiVideoWithVideoURL:(id)arg0 rate:(float)arg1 completeBlock:(id /* block */)arg2;
- (void)p_resetMultiVideoIfNeed;
- (void)p_setMultiVideoAutoRepeat:(BOOL)arg0;
- (void)p_resetMultiVideo;
- (void)p_multiVideoPlay;
- (void)p_multiVideoPlayWithTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)p_multiVideoPause;
- (void)p_multiVideoMutePlayer:(BOOL)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })p_multiVideoCurrentTime;
- (float)p_multiVideoCurrentPlayPercent;
- (float)p_multiVideoCurrentRecordPercent;
- (void)p_multiVideoSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completeBlock:(id /* block */)arg1;
- (void)p_multiVideoSeekToPercent:(float)arg0 completeBlock:(id /* block */)arg1;
- (void)p_multiVideoChangeRate:(float)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)p_multiVideoIsPlaying;
- (id)p_getMultiPlayer;
- (void)p_initEffectProcessUnit;
- (id)p_copyAudioVideoDataIfNeed:(id)arg0;
- (void)setDropframeArray:(id)arg0;
- (void)setVePathmapArray:(id)arg0;
- (id /* block */)p_initCaptureActionBlock;
- (void)setUseKaraokeAudioCaptureInDuetProcess:(BOOL)arg0;
- (BOOL)useKaraokeAudioCaptureInDuetProcess;
- (void)setUseKaraokeAudioCapture:(BOOL)arg0;
- (void)setCameraConfigure:(id)arg0;
- (void)setNormalCamera:(id)arg0;
- (id)normalCamera;
- (void)p_initCameraSubjectAreaDetectBlock;
- (void)p_enableFaceAEStrategy;
- (BOOL)hasCameraStartFailedRecreated;
- (void)setHasCameraStartFailedRecreated:(BOOL)arg0;
- (void)p_stopAudioCaptureSyncWithPrivacyCert:(id)arg0;
- (id)cameraConfigure;
- (void)p_setupFocusAndExposureGestureForPreview:(id)arg0;
- (id)p_createPreviewUnitWithView:(id)arg0 previewModeType:(long long)arg1 route:(id)arg2;
- (void)p_registerFirstFrameMessage;
- (unsigned long long)recordPixelFormat;
- (unsigned long long)imageOrientationToHTSRotation:(long long)arg0;
- (void)setMainWriter:(id)arg0;
- (void)p_initVideoWriter;
- (BOOL)p_isCropFilterNeeded;
- (void)registerEffectFunc;
- (void)setPreprocessUnit:(id)arg0;
- (BOOL)isFirstLoadEffectSDK;
- (void)setEffectUnit:(id)arg0;
- (void)setRecorderSplitUnit:(id)arg0;
- (id)postProcessUnit;
- (void)setPostProcessUnit:(id)arg0;
- (void)p_initLayerPreview;
- (void)p_createSessionModeSharedUnitWithEffect:(BOOL)arg0;
- (void)p_initPreprocessUnitWithEffect:(BOOL)arg0;
- (void)setShouldAutoStartAudioCapture:(BOOL)arg0;
- (BOOL)shouldAutoStartAudioCapture;
- (id /* block */)motionDetectBlock;
- (void)setMotionDetectBlock:(id /* block */)arg0;
- (id)p_getAudioCaptureHandle;
- (void)p_setHasMic:(BOOL)arg0;
- (void)p_trackBlueToothData;
- (void)p_processCaptureFrame:(struct opaqueCMSampleBuffer { } *)arg0 sampleInfo:(id)arg1;
- (id)effectVideoPlayerFactory;
- (void)setIsFirstFrameRender:(BOOL)arg0;
- (void)setIsAudioPlayerEnd:(BOOL)arg0;
- (BOOL)hasRecorderEffect;
- (BOOL)p_isNeedWaitBgm;
- (BOOL)p_needDelayStartWriting;
- (BOOL)isVideoRecorded;
- (id)currentApplyStickerInfo;
- (void)setMultiVideoSeekCount:(int)arg0;
- (void)closeMicPcmFile;
- (void)p_stopMotionDetect;
- (void)setAudioStartTime:(double)arg0;
- (double)videoRecordStartTime;
- (BOOL)videoOrAudioIsReady;
- (void)setCameraTrackInfo:(id)arg0;
- (id)cameraTrackInfo;
- (BOOL)isNeedAudioPlayer;
- (BOOL)musicNeedRepeat;
- (BOOL)p_isProcessing;
- (void)p_processBgm:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (void)p_getBgmData:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (id)videoReaderUnit;
- (void)setVideoReaderUnit:(id)arg0;
- (id)multiInputUnit;
- (void)setCurveTransUtil:(id)arg0;
- (void)setAudioPlayerStartedTime:(double)arg0;
- (double)audioPlayerStartedTime;
- (BOOL)isAudioPlayerEnd;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_cropRegionForInputSize:(struct CGSize { double x0; double x1; })arg0 outputSize:(struct CGSize { double x0; double x1; })arg1;
- (BOOL)enableLensSharpen;
- (id)audioEffectUnit;
- (void)setSpeedConfig:(id)arg0;
- (void)setAudioEffectUnit:(id)arg0;
- (unsigned int)lastAudioSamples;
- (double)audioStartTime;
- (void)setLastAudioSamples:(unsigned int)arg0;
- (id /* block */)pVideoBufferAndInfoCallback;
- (id /* block */)pVideoBufferCallback;
- (long long)multiCamSkipEffectMode;
- (BOOL)isSkipSecondCamEffectInMultiCam;
- (BOOL)isSkipFrontCamEffectInMultiCam;
- (void)p_storeExtCaptureBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct opaqueCMSampleBuffer { } *)replacePixelBuffer:(struct __CVBuffer { } *)arg0 ofSamplebuffer:(struct opaqueCMSampleBuffer { } *)arg1;
- (BOOL)replaceCameraFrame;
- (BOOL)hasBGVideo;
- (void)p_storeCaptureBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (BOOL)enableDirtyLensDetect;
- (long long)dirtyLensDetectCounter;
- (long long)dirtyLensDetectFrameCounter;
- (BOOL)enableLensCombinedEnhanceAsf;
- (BOOL)enableLensCombinedEnhance;
- (long long)lensCombinedEnhanceFrameCount;
- (struct __CVBuffer { } *)doLensOnekeyEnhanceProcess:(struct __CVBuffer { } *)arg0;
- (void)setBgVideoOutputWidth:(double)arg0;
- (void)setBgVideoOutputHeight:(double)arg0;
- (id)bgVideoKey;
- (BOOL)bgVideoStarted;
- (BOOL)hasMultiVideo;
- (BOOL)captureSupportHDRPreview;
- (void)p_getCameraFrameSize:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })p_transFormFrameTimeWithCurrentPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)p_updateCameraTrackInfoRotation:(id)arg0;
- (unsigned long long)lastFrameRotationMode;
- (void)setLastFrameRotationMode:(unsigned long long)arg0;
- (id)templateUnit;
- (BOOL)isFirstRecordImageCaptured;
- (double)templateStartTime;
- (void)setTemplateStartTime:(double)arg0;
- (id)previewStartTimeLock;
- (id)curveTransUtil;
- (void)p_resetExposureMode:(long long)arg0 pointValue:(id)arg1 scene:(long long)arg2 then:(id /* block */)arg3;
- (long long)p_getFaceAEState;
- (void)p_resetFocusMode:(long long)arg0 pointValue:(id)arg1 scene:(long long)arg2 then:(id /* block */)arg3;
- (void)p_resetExposureMode:(long long)arg0 pointValue:(id)arg1 originalPointValue:(id)arg2 scene:(long long)arg3 then:(id /* block */)arg4;
- (void)p_resetFocusMode:(long long)arg0 pointValue:(id)arg1 originalPointValue:(id)arg2 scene:(long long)arg3 then:(id /* block */)arg4;
- (void)p_handleTapOnPreviewView:(id)arg0;
- (void)p_handleLongPressOnPreviewView:(id)arg0;
- (void)setArVideoCamera:(id)arg0;
- (void)setupARVideoCameraWithCameraType:(long long)arg0;
- (id)externalVideoInput;
- (void)setExternalVideoInput:(id)arg0;
- (void)switchSessionModeFrom:(unsigned long long)arg0 to:(unsigned long long)arg1;
- (void)p_resetLivePhotoWriter;
- (double)recorderInitTime;
- (void)p_addMonitorObserver;
- (void)setInputFps:(long long)arg0;
- (void)setGeneralAudioPath:(id)arg0;
- (void)setGeneralAudioKey:(id)arg0;
- (void)setGeneralAudioStartTime:(double)arg0;
- (void)p_clearGeneralAudioStatus;
- (double)generalAudioStartTime;
- (void)p_setEffectRecordRate:(double)arg0;
- (void)p_reciveEffectMessage:(id)arg0;
- (id)generalAudioPath;
- (id)generalAudioKey;
- (void)p_setAECEnabled:(BOOL)arg0 modelPath:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)p_aecStatus;
- (void)p_setBalanceEnabled:(BOOL)arg0 targetLufs:(int)arg1;
- (void)p_setBGMBalanceEnabled:(BOOL)arg0 targetLufs:(float)arg1 peak:(float)arg2 loudness:(float)arg3;
- (void)p_setMulVideoBalanceEnabled:(BOOL)arg0 targetLufs:(float)arg1 peak:(float)arg2 loudness:(float)arg3;
- (void)p_setNewBalanceEnabled:(BOOL)arg0 newBalanceCallback:(id /* block */)arg1;
- (void)p_setTimeAlignEnabled:(BOOL)arg0 modelPath:(id)arg1 timeAlignCallback:(id /* block */)arg2;
- (void)p_setBackendMode:(long long)arg0 useOutput:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)p_audioOutputCallback:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)p_audioConvertCallback:(struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; })arg0;
- (void)p_audioBGMOutputCallback:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (void)p_audioBGMResultCallback:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (void)p_AudioBGMStatusCallback:(double)arg0;
- (id /* block */)pAudioBufferCallback;
- (int)p_deepCopyAudioSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct opaqueCMSampleBuffer { } *)p_processAudioBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (id /* block */)pAudioStartRecordInfoCallback;
- (void)p_processMic:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)p_writeMicPcm:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)setRecordPixelFormat:(unsigned long long)arg0;
- (void)p_setConfigToProcessor:(id)arg0;
- (void)p_setConfigToSessionMode:(id)arg0;
- (void)p_setConfigToCapture:(id)arg0 cameraComplete:(id /* block */)arg1;
- (id)getTC21RedPackageTarcker;
- (void)resetMultiVideoIfNeed;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_cropRegionForOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)p_unregistFacePointBlockToEffectForFaceAE;
- (id)amazingFeatures;
- (long long)p_currentEffectClientPreviewState;
- (id)p_getARCameraHandle;
- (BOOL)p_isAudioCaptureExist;
- (BOOL)isMultiVideoSeeking;
- (void)setIsMultiVideoSeeking:(BOOL)arg0;
- (int)multiVideoSeekCount;
- (void)setEnableDirtyLensDetect:(BOOL)arg0;
- (BOOL)forceRecord;
- (void)setForceRecord:(BOOL)arg0;
- (void)setTemplateUnit:(id)arg0;
- (long long)inputFps;
- (void)setRecorderInitTime:(double)arg0;
- (void)setCaptureStartTime:(double)arg0;
- (id)vePathmapArray;
- (id)dropframeArray;
- (void)setAmazingFeatures:(id)arg0;
- (void)setMultiInputUnit:(id)arg0;
- (id)layerPreviewView;
- (void)setLayerPreviewView:(id)arg0;
- (void)setMultiCamSkipEffectMode:(long long)arg0;
- (void)setIsSkipFrontCamEffectInMultiCam:(BOOL)arg0;
- (void)setIsSkipSecondCamEffectInMultiCam:(BOOL)arg0;
- (BOOL)isFirstFrameRender;
- (id)livePhotoConfig;
- (id)veImageDetector;
- (void)setVeImageDetector:(id)arg0;
- (void)setPreviewStartTimeLock:(id)arg0;
- (id)leftFilter;
- (void)setLeftFilter:(id)arg0;
- (id)rightFilter;
- (void)setRightFilter:(id)arg0;
- (id)audioPlayerCache;
- (void)setAudioPlayerCache:(id)arg0;
- (void)setActiveAudioPlayers:(id)arg0;
- (BOOL)enableSysAutoFaceAE;
- (void)setEnableSysAutoFaceAE:(BOOL)arg0;
- (void)setEnablePureModeReturnWithLens:(BOOL)arg0;
- (void)setHasBGVideo:(BOOL)arg0;
- (unsigned long long)bgVideoStartFragment;
- (void)setBgVideoStartFragment:(unsigned long long)arg0;
- (void)setBgVideoKey:(id)arg0;
- (void)setHasMultiVideo:(BOOL)arg0;
- (unsigned long long)multiVideoStartFragment;
- (void)setMultiVideoStartFragment:(unsigned long long)arg0;
- (void)setMultiVideoInput:(id)arg0;
- (BOOL)fristAudioFrameWrited;
- (void)setFristAudioFrameWrited:(BOOL)arg0;
- (struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)micPCMWriteFile;
- (void)setMicPCMWriteFile:(struct __sFILE { char *x0; int x1; int x2; short x3; short x4; struct __sbuf { char *x0; int x1; } x5; int x6; void *x7; void /* function */ *x8; void /* function */ *x9; void /* function */ *x10; void /* function */ *x11; struct __sbuf { char *x0; int x1; } x12; struct __sFILEX *x13; int x14; unsigned char x15[3]; unsigned char x16[1]; struct __sbuf { char *x0; int x1; } x17; int x18; long long x19; } *)arg0;
- (id)micPCMWriteQueue;
- (void)setMicPCMWriteQueue:(id)arg0;
- (id)cacheRawoutputRender;
- (void)setCacheRawoutputRender:(id)arg0;
- (void)setHasRecorderEffect:(BOOL)arg0;
- (unsigned long long)recordContentType;
- (void)setCurrentApplyStickerInfo:(id)arg0;
- (id)vePerformance;
- (void)setVePerformance:(id)arg0;
- (id /* block */)veperformancecallback;
- (void)setVeperformancecallback:(id /* block */)arg0;
- (id)imageFromPixelBuffer:(struct __CVBuffer { } *)arg0;
- (void)setRwLock:(struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })arg0;
- (struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })rwLock;
- (void)movieRecordingDuration:(double)arg0;
- (void)movieRecordingReachedLimitMaxTime;
- (BOOL)useEffectRecordRate;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })pts;
- (long long)exposureMode;
- (id /* block */)messageHandler;
- (float)ISO;
- (long long)focusMode;
- (id)activeFormat;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })exposureDuration;
- (unsigned long long)fragmentCount;
- (unsigned long long)primaryConstituentDeviceRestrictedSwitchingBehaviorConditions;
- (long long)cameraType;
- (void)setConfig:(id)arg0;
- (double)musicVolume;
- (id)deviceType;
- (void)setRecordType:(int)arg0;
- (void)active;
- (void).cxx_destruct;
- (id)virtualDeviceSwitchOverVideoZoomFactors;
- (id)virtualDeviceSwitchOverVideoZoomFactors;
- (struct CGPoint { double x0; double x1; })focusPoint;
- (int)recordType;
- (double)exposureBias;
- (long long)status;
- (void)setFocusMode:(long long)arg0;
- (id)config;
- (void)inactive;
- (double)captureStartTime;
- (unsigned long long)activeColorSpace;
- (BOOL)handleTouchEvent:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isMultiCamSession;
- (struct CGSize { double x0; double x1; })outputSize;
- (long long)orientation;
- (struct CGSize { double x0; double x1; })renderSize;
- (void)removePlayer:(id /* block */)arg0;
- (void)registerObserver:(id)arg0;
- (void)stopAudioCapture;
- (double)maxAvailableVideoZoomFactor;
- (double)maxAvailableVideoZoomFactor;
- (id)previewContainer;
- (void)setIsDegraded:(BOOL)arg0;
- (void)setExposureMode:(long long)arg0;
- (void)setStatus:(long long)arg0;
- (id)fallbackPrimaryConstituentDevices;
- (BOOL)startAudioCapture;
- (id)lock;
- (void)setMessageHandler:(id /* block */)arg0;
- (id)activePrimaryConstituentDevice;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMaxFrameDuration;
- (BOOL)setPrimaryConstituentDeviceSwitchingBehavior:(long long)arg0 restrictedSwitchingBehaviorConditions:(unsigned long long)arg1;
- (void)setOrientation:(long long)arg0;
- (id)mainContext;
- (id)previewView;
- (id)supportedFallbackPrimaryConstituentDevices;
- (long long)primaryConstituentDeviceSwitchingBehavior;
- (float)maxISO;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })activeVideoMinFrameDuration;
- (double)minAvailableVideoZoomFactor;
- (double)minAvailableVideoZoomFactor;
- (void)dealloc;
- (BOOL)isDegraded;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)setLock:(id)arg0;
- (void)removeObserver:(id)arg0;
- (float)minISO;
- (void)startVideoCapture;
- (void)stopVideoCapture;
- (long long)cameraFlashMode;
- (void)setCameraFlashMode:(long long)arg0;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCameraType:(long long)arg0;
- (void)setInputLanguage:(id)arg0;
- (struct CGSize { double x0; double x1; })frameSize;
- (long long)audioMode;
- (void)setAudioMode:(long long)arg0;
- (long long)recordStatus;
- (void)setRecordStatus:(long long)arg0;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)addSticker:(id)arg0;
- (double)videoZoomFactorUpscaleThreshold;
- (double)videoZoomFactorUpscaleThreshold;
- (BOOL)isVirtualDevice;
- (id)constituentDevices;
- (double)maxAcceleration;
- (void)setMaxAcceleration:(double)arg0;
- (void)setAudioBufferCallback:(id /* block */)arg0;
- (void)setMainContext:(id)arg0;
- (id)currentCamera;
- (void)setCurrentCamera:(id)arg0;
- (unsigned long long)sessionMode;
- (BOOL)handleRotationEvent:(double)arg0;
- (void)setTorchOn:(BOOL)arg0;
- (BOOL)torchOn;
- (struct CGSize { double x0; double x1; })cameraPreset;
- (void)setCameraPreset:(struct CGSize { double x0; double x1; })arg0;
- (void)setSessionMode:(unsigned long long)arg0;
- (long long)previewModeType;
- (void)setPreviewModeType:(long long)arg0;
- (long long)cameraMode;
- (void)setCameraMode:(long long)arg0;
- (id)propertySet;
- (id)activeAudioPlayers;
- (void)setupAudioSession;
- (void)setPts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;

@end
