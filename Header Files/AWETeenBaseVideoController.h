//
//     Generated by private class-dump
//

@class NSTimer, UIView, NSArray, AWEAwemeModel, NSString, UIImageView, AWETeenModeVideoTracker, NSMutableDictionary, AWEVideoBSModel, AWETeenExtraParamModel, NSNumber, AWETeenPlayerDynamicBlockManager;
@protocol IESVideoPlayerProtocol, AWETeenVideoPlayerContainer, AWETeenDisplayViewControllerDelegate;

@interface AWETeenBaseVideoController : UIViewController <AWETeenModeVideoTrackerDelegate, AWETeenDisplayViewControllerProtocol, IESVideoPlayerDelegate> {
    BOOL _isReady;
    BOOL _isSeeking;
    BOOL _shouldPrepareForDisplay;
    BOOL _pauseBySingleClick;
    BOOL _isFullScreen;
    BOOL _isLandscape;
    BOOL _copyFromOtherVideoController;
    BOOL _pinching;
    BOOL _isPlayerInStall;
    BOOL _isShowLoading;
    BOOL _canTrackVideoPlayFinish;
    BOOL _previousKeepAlive;
    BOOL _isReadyForDisplay;
    BOOL _isPlaybackFailed;
    BOOL _shouldDiscardReport;
    BOOL _blockedWithAlertView;
    BOOL _hasPostFiveSecondLeftNotification;
    BOOL _isPlayFailedShown;
    BOOL _hasShownDisconnectToast;
    BOOL _finishLogged;
    BOOL _isStalling;
    BOOL _isNotFirstTimeSingleFingerPinchGesture;
    BOOL _hasAttemptedZoomOut;
    id<IESVideoPlayerProtocol> _playerController;
    AWETeenExtraParamModel *_extraParam;
    long long _playState;
    long long _vcType;
    AWEAwemeModel *_model;
    AWEVideoBSModel *_bsModel;
    long long _playType;
    id<AWETeenDisplayViewControllerDelegate> _interactionDelegate;
    id<AWETeenVideoPlayerContainer> _container;
    double _initSeekTime;
    NSString *_albumEnterFrom;
    NSString *_albumEntranceSource;
    NSNumber *_slideType;
    double _startPlayTime;
    UIView *_loadingView;
    UIImageView *_underImageView;
    NSString *_referString;
    NSArray *_playURLs;
    id /* block */ _didChangePlayBackAction;
    id /* block */ _initSeekEnd;
    id /* block */ _playComingToEnd;
    id /* block */ _alertIfNotValid;
    id /* block */ _willLoopPlaying;
    id /* block */ _playTimeDidUpdate;
    double _seekToLoopDuration;
    long long _previousPlayState;
    long long _preloadSize;
    long long _slidingTime;
    UIImageView *_coverImageView;
    AWETeenPlayerDynamicBlockManager *_loadControlManager;
    AWETeenModeVideoTracker *_tracker;
    NSTimer *_videoPlayCheckTimer;
    long long _currentVideoCheckCount;
    NSMutableDictionary *_playIndexDic;
    NSTimer *_videoBufferTimer;
    double _startAutoPlayTime;
    UIView *_blanketView;
    double _startPinchingTime;
    UIView *_superViewBeforePinch;
    long long _indexInSuperView;
    struct CGPoint { double x; double y; } _lastPinchGesturePosition;
    struct CGPoint { double x; double y; } _initialAnchorPoint;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _standardTransform;
}

@property (nonatomic) long long previousPlayState;
@property (nonatomic) BOOL previousKeepAlive;
@property (nonatomic) BOOL isReadyForDisplay;
@property (nonatomic) BOOL isPlaybackFailed;
@property (nonatomic) BOOL shouldDiscardReport;
@property (nonatomic) BOOL blockedWithAlertView;
@property (nonatomic) long long preloadSize;
@property (nonatomic) BOOL hasPostFiveSecondLeftNotification;
@property (nonatomic) BOOL isPlayFailedShown;
@property (nonatomic) BOOL hasShownDisconnectToast;
@property (nonatomic) long long slidingTime;
@property (copy, nonatomic) NSArray *playURLs;
@property (retain, nonatomic) UIImageView *coverImageView;
@property (retain, nonatomic) UIView *loadingView;
@property (retain, nonatomic) UIImageView *underImageView;
@property (retain, nonatomic) AWETeenPlayerDynamicBlockManager *loadControlManager;
@property (retain, nonatomic) AWETeenModeVideoTracker *tracker;
@property (nonatomic) BOOL finishLogged;
@property (retain, nonatomic) NSTimer *videoPlayCheckTimer;
@property (nonatomic) long long currentVideoCheckCount;
@property (retain, nonatomic) NSMutableDictionary *playIndexDic;
@property (retain, nonatomic) NSTimer *videoBufferTimer;
@property (nonatomic) BOOL isStalling;
@property (nonatomic) double startAutoPlayTime;
@property (nonatomic) struct CGPoint { double x; double y; } lastPinchGesturePosition;
@property (nonatomic) struct CGPoint { double x; double y; } initialAnchorPoint;
@property (nonatomic) BOOL isNotFirstTimeSingleFingerPinchGesture;
@property (retain, nonatomic) UIView *blanketView;
@property (nonatomic) double startPinchingTime;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } standardTransform;
@property (nonatomic) BOOL hasAttemptedZoomOut;
@property (retain, nonatomic) UIView *superViewBeforePinch;
@property (nonatomic) long long indexInSuperView;
@property (nonatomic) BOOL isPlayerInStall;
@property (nonatomic) BOOL isShowLoading;
@property (retain, nonatomic) AWEAwemeModel *model;
@property (retain, nonatomic) AWEVideoBSModel *bsModel;
@property (nonatomic) long long playType;
@property (weak, nonatomic) id<AWETeenDisplayViewControllerDelegate> interactionDelegate;
@property (weak, nonatomic) id<AWETeenVideoPlayerContainer> container;
@property (nonatomic) double initSeekTime;
@property (nonatomic) BOOL isFullScreen;
@property (nonatomic) BOOL isLandscape;
@property (nonatomic) BOOL copyFromOtherVideoController;
@property (copy, nonatomic) NSString *albumEnterFrom;
@property (copy, nonatomic) NSString *albumEntranceSource;
@property (retain, nonatomic) NSNumber *slideType;
@property (nonatomic) double startPlayTime;
@property (copy, nonatomic) NSString *referString;
@property (copy, nonatomic) id /* block */ didChangePlayBackAction;
@property (copy, nonatomic) id /* block */ initSeekEnd;
@property (copy, nonatomic) id /* block */ playComingToEnd;
@property (copy, nonatomic) id /* block */ alertIfNotValid;
@property (copy, nonatomic) id /* block */ willLoopPlaying;
@property (copy, nonatomic) id /* block */ playTimeDidUpdate;
@property (nonatomic) double seekToLoopDuration;
@property (nonatomic, getter=isPinching) BOOL pinching;
@property (nonatomic) BOOL canTrackVideoPlayFinish;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL shouldPrepareForDisplay;
@property (nonatomic) BOOL pauseBySingleClick;
@property (nonatomic) long long vcType;
@property (retain, nonatomic) AWETeenExtraParamModel *extraParam;
@property (nonatomic) long long playState;
@property (retain, nonatomic) id<IESVideoPlayerProtocol> playerController;
@property (nonatomic) BOOL isReady;
@property (nonatomic) BOOL isSeeking;

- (id)referString;
- (void)player:(id)arg0 playbackFailedWithError:(id)arg1;
- (void)playerDidReadyForDisplay:(id)arg0;
- (void)player:(id)arg0 didChangePlaybackStateWithAction:(long long)arg1;
- (void)playerWillLoopPlaying:(id)arg0;
- (void)player:(id)arg0 playbackFailedForURL:(id)arg1 error:(id)arg2;
- (void)player:(id)arg0 didChangeStallState:(long long)arg1 actionType:(long long)arg2 reason:(unsigned long long)arg3;
- (void)player:(id)arg0 didFinishVideoDataDownloadForURL:(id)arg1;
- (void)player:(id)arg0 noVideoDataToDownloadForURL:(id)arg1;
- (void)player:(id)arg0 didFetchVideoModel:(id)arg1;
- (void)setReferString:(id)arg0;
- (BOOL)shouldPrepareForDisplay;
- (void)setShouldPrepareForDisplay:(BOOL)arg0;
- (void)setPauseHidden:(BOOL)arg0;
- (void)updatePlayerIfNeeded;
- (void)activatePlayAnimation;
- (void)updatePlayerController:(id)arg0 withPlayVideoVC:(id)arg1;
- (BOOL)pauseBySingleClick;
- (void)setPauseBySingleClick:(BOOL)arg0;
- (void)activatePauseAnimation;
- (id)slideType;
- (void)setSlideType:(id)arg0;
- (void)setIsStalling:(BOOL)arg0;
- (BOOL)isStalling;
- (double)p_processStartTime;
- (BOOL)p_processInfoForPID:(int)arg0 procInfo:(struct kinfo_proc { struct extern_proc { union { struct { struct proc *x0; struct proc *x1; } x0; struct timeval { long long x0; int x1; } x1; } x0; struct vmspace *x1; struct sigacts *x2; int x3; char x4; int x5; int x6; int x7; char *x8; void *x9; int x10; int x11; unsigned int x12; int x13; unsigned int x14; void *x15; char *x16; unsigned int x17; unsigned int x18; struct itimerval { struct timeval { long long x0; int x1; } x0; struct timeval { long long x0; int x1; } x1; } x19; struct timeval { long long x0; int x1; } x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; int x24; struct vnode *x25; int x26; struct vnode *x27; int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned char x32; unsigned char x33; char x34; char x35[17]; struct pgrp *x36; struct user *x37; unsigned short x38; unsigned short x39; struct rusage *x40; } x0; struct eproc { struct proc *x0; struct session *x1; struct _pcred { char x0[72]; struct ucred *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; int x6; } x2; struct _ucred { int x0; unsigned int x1; short x2; unsigned int x3[16]; } x3; struct vmspace { int x0; char *x1; int x2[5]; char *x3[3]; } x4; int x5; int x6; short x7; int x8; int x9; struct session *x10; char x11[8]; int x12; short x13; short x14; short x15; int x16; char x17[12]; int x18[4]; } x1; } *)arg1;
- (void)setStartPlayTime:(double)arg0;
- (void)updateCoverImage;
- (long long)playType;
- (void)setPlayType:(long long)arg0;
- (BOOL)hasShownDisconnectToast;
- (void)setHasShownDisconnectToast:(BOOL)arg0;
- (id)bsModel;
- (void)setBsModel:(id)arg0;
- (id)playURLs;
- (id /* block */)willLoopPlaying;
- (void)setWillLoopPlaying:(id /* block */)arg0;
- (id /* block */)alertIfNotValid;
- (double)startPinchingTime;
- (void)setStartPinchingTime:(double)arg0;
- (long long)preloadSize;
- (void)setPreloadSize:(long long)arg0;
- (BOOL)isFromFeed;
- (void)setVcType:(long long)arg0;
- (void)setCoverImageView:(id)arg0;
- (id)coverImageView;
- (double)startPlayTime;
- (void)onApplicationWillEnterForeground;
- (void)onApplicationDidEnterBackground;
- (long long)slidingTime;
- (void)setSlidingTime:(long long)arg0;
- (void)setIsSeeking:(BOOL)arg0;
- (BOOL)p_play;
- (BOOL)p_pause;
- (id)extraParam;
- (void)setExtraParam:(id)arg0;
- (id /* block */)didChangePlayBackAction;
- (void)setDidChangePlayBackAction:(id /* block */)arg0;
- (void)setCopyFromOtherVideoController:(BOOL)arg0;
- (void)setPreviousKeepAlive:(BOOL)arg0;
- (void)p_addVideoLoadingView;
- (void)p_addAVAudioSessionObservers;
- (void)p_dismissSystemVolumeViewForPoorDevice;
- (void)p_recreatePlayer;
- (void)p_prepareToPlay;
- (void)p_muteMusicIfNeeded;
- (long long)p_contentModeForDefaultVideoCover;
- (BOOL)copyFromOtherVideoController;
- (void)p_cancelPendingPlayTimeoutCheck;
- (void)stopLoadingAnimationAction;
- (BOOL)isPlayFailedShown;
- (void)setIsPlayFailedShown:(BOOL)arg0;
- (void)setIsPlaybackFailed:(BOOL)arg0;
- (void)playLoadingAnimationAction;
- (id)underImageView;
- (long long)p_scaleModeForVideo;
- (void)p_resumePlayVideo;
- (void)p_restartPlayVideo;
- (void)setUnderImageView:(id)arg0;
- (id)p_playURIString;
- (void)setPlayURLs:(id)arg0;
- (void)p_checkPlayTimeout;
- (BOOL)isPlaybackFailed;
- (BOOL)previousKeepAlive;
- (void)willDisplayWithFromSlideUp:(id)arg0 usingPreloaded:(BOOL)arg1;
- (void)setStandardTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)setInitialAnchorPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setIsNotFirstTimeSingleFingerPinchGesture:(BOOL)arg0;
- (void)setLastPinchGesturePosition:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isNotFirstTimeSingleFingerPinchGesture;
- (struct CGPoint { double x0; double x1; })lastPinchGesturePosition;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })standardTransform;
- (struct CGPoint { double x0; double x1; })initialAnchorPoint;
- (void)setBlanketView:(id)arg0;
- (id)blanketView;
- (void)setIndexInSuperView:(long long)arg0;
- (long long)indexInSuperView;
- (void)p_setupBind;
- (id)currentPlayerView;
- (BOOL)isPlayerInStall;
- (long long)vcType;
- (void)setShouldDiscardReport:(BOOL)arg0;
- (void)p_trackCancelQuality;
- (void)setIsShowLoading:(BOOL)arg0;
- (BOOL)finishLogged;
- (BOOL)canTrackVideoPlayFinish;
- (void)setFinishLogged:(BOOL)arg0;
- (BOOL)p_hadValidDeatilsWithFirstFrame;
- (void)p_trackPlayTimeIfNeed;
- (void)p_cancelTimingForFirstFrame;
- (void)p_trackCancelByPause;
- (void)setPreviousPlayState:(long long)arg0;
- (void)setHasPostFiveSecondLeftNotification:(BOOL)arg0;
- (void)setInitSeekTime:(double)arg0;
- (void)setSeekToLoopDuration:(double)arg0;
- (id)videoBufferTimer;
- (void)p_addPeriodicTimeObserver;
- (void)setIsPlayerInStall:(BOOL)arg0;
- (BOOL)shouldDiscardReport;
- (void)p_resetStallStatisticsState;
- (id)monitorTimeIntervalFirstFrameKey;
- (id)monitorTimeIntervalPrepareToPlayKey;
- (BOOL)blockedWithAlertView;
- (void)p_trackFinishQuality;
- (void)p_startVideoPlayCheckTimer;
- (id /* block */)initSeekEnd;
- (id)playIndexDic;
- (void)p_endFirstVideoUIMonitor;
- (void)p_stopVideoPlayCheckTimer;
- (id)videoPlayCheckTimer;
- (void)trackVideoFinish;
- (id)monitorTimeIntervalFirstFrameDisplayKey;
- (void)p_trackErrorQualityWithError:(id)arg0;
- (void)setBlockedWithAlertView:(BOOL)arg0;
- (void)setVideoBufferTimer:(id)arg0;
- (id)loadControlManager;
- (id)p_userInfoForNotification;
- (double)startAutoPlayTime;
- (void)setStartAutoPlayTime:(double)arg0;
- (void)p_endQualityVideoSection;
- (id)p_qualityIdentifier;
- (BOOL)p_notValid;
- (double)initSeekTime;
- (void)p_startAutoPlayQuality;
- (void)p_prepareToPlayCallback;
- (void)p_videoPlayTag;
- (void)setLoadControlManager:(id)arg0;
- (id)p_bsModelForDASHVideoModel:(id)arg0;
- (double)seekToLoopDuration;
- (id /* block */)playTimeDidUpdate;
- (void)p_syncPlayableProgressIfNeeded;
- (void)p_syncPlayProgressIfNeeded;
- (BOOL)hasPostFiveSecondLeftNotification;
- (id /* block */)playComingToEnd;
- (id)monitorTimeIntervalFirstFrameForPlayKey;
- (void)setCurrentVideoCheckCount:(long long)arg0;
- (long long)currentVideoCheckCount;
- (void)setVideoPlayCheckTimer:(id)arg0;
- (id)albumEntranceSource;
- (void)setAlbumEntranceSource:(id)arg0;
- (BOOL)loadingViewHidden;
- (BOOL)isShowLoading;
- (void)setInitSeekEnd:(id /* block */)arg0;
- (void)setPlayComingToEnd:(id /* block */)arg0;
- (id)albumEnterFrom;
- (void)setAlbumEnterFrom:(id)arg0;
- (void)setAlertIfNotValid:(id /* block */)arg0;
- (void)setPlayTimeDidUpdate:(id /* block */)arg0;
- (void)setPinching:(BOOL)arg0;
- (void)setCanTrackVideoPlayFinish:(BOOL)arg0;
- (long long)previousPlayState;
- (void)setPlayIndexDic:(id)arg0;
- (BOOL)hasAttemptedZoomOut;
- (void)setHasAttemptedZoomOut:(BOOL)arg0;
- (id)superViewBeforePinch;
- (void)setSuperViewBeforePinch:(id)arg0;
- (void)prepareForDisplay;
- (id)container;
- (void)setModel:(id)arg0;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (BOOL)isReadyForDisplay;
- (id)init;
- (BOOL)isFullScreen;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (void)playbackRate;
- (id)model;
- (id)playerController;
- (void)setContainer:(id)arg0;
- (void)setInteractionDelegate:(id)arg0;
- (BOOL)isReady;
- (BOOL)stop;
- (id)interactionDelegate;
- (void)viewWillDisappear:(BOOL)arg0;
- (BOOL)play:(BOOL)arg0;
- (void)setIsLandscape:(BOOL)arg0;
- (void)setPlayerController:(id)arg0;
- (void)viewDidDisappear:(BOOL)arg0;
- (id)contentView;
- (BOOL)isPinching;
- (BOOL)isActive;
- (void)didReceiveMemoryWarning;
- (BOOL)isLandscape;
- (BOOL)isPlaying;
- (BOOL)isSeeking;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (BOOL)pause;
- (void)reset;
- (void)viewDidLoad;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)viewWillLayoutSubviews;
- (BOOL)pause:(BOOL)arg0;
- (void)seekToTime:(double)arg0;
- (id)player;
- (void)setIsReady:(BOOL)arg0;
- (void)setIsFullScreen:(BOOL)arg0;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (long long)playState;
- (void)setPlayState:(long long)arg0;
- (void)setIsReadyForDisplay:(BOOL)arg0;

@end
