//
//     Generated by private class-dump
//

@class NSString, NSArray, TVLPlayerItemInternal, TVLPlayerItemAccessLog, NSMutableDictionary, NSDictionary, TVLPlayer, TVLPlayerItemPreferences;

@interface TVLPlayerItem : NSObject {
    TVLPlayer *_player;
    TVLPlayerItemInternal *_item;
    TVLPlayerItemAccessLog *_accessLog;
    BOOL _hasSetPreferences;
    BOOL _isBackupOriginInDecodeErrorHappened;
    BOOL _isEnableLogVoiceSilence;
    BOOL _isEnableLogAbrDecisionInfo;
    BOOL _isOpenGlobalVolumeBalance;
    BOOL _shouldUseSmoothlySwitchParams;
    BOOL _enableAudioBalanceBySei;
    BOOL _enableSkipLoudnorm;
    BOOL _enableOnlyLoudnormBySei;
    BOOL _didOpenAudioBalanceBySei;
    BOOL _enableUseLss;
    BOOL _isEnableUseBmpWater;
    BOOL _enableFallbackToPlayerAbr;
    BOOL _isFallbackFromHDRToSDR;
    BOOL _roiBmfSREnabled;
    BOOL _enableNetworkSwitching;
    BOOL _usingCellular;
    BOOL _switchedToCellularWithWifiOn;
    BOOL _triggerRetryByNetworkSwitching;
    BOOL _enableUseExternalAeTargetLufts;
    BOOL _enableAudioVolumeBalancePregainExternal;
    BOOL _enableAudioVolumeBalanceThresholdExternal;
    BOOL _enableAudioVolumeBalanceRatioExternal;
    BOOL _enableAudioVolumeBalancePredelayExternal;
    BOOL _enableAudioVolumeBalancePhase2;
    BOOL _enableAudioRMSMonitor;
    int _enableBizSessionID;
    int _volumeBalanceType;
    int _volumeBalanceTargetLufs;
    int _videoProcessingSettingState;
    float _audioBalanceTargetLuft;
    int _strategyBandWidth;
    unsigned int _cellularIndex;
    unsigned int _thresholdOfStallTime;
    float _audioVolumeBalancePregainExternal;
    float _audioVolumeBalanceThresholdExternal;
    float _audioVolumeBalanceRatioExternal;
    float _audioVolumeBalancePredelayExternal;
    id _rawData;
    long long _type;
    NSDictionary *_preferencesSwitch;
    NSDictionary *_HTTPHeaders;
    NSString *_sessionID;
    NSString *_bizSessionID;
    NSString *_liveVVSessionID;
    NSString *_currentLiveStreamSessionID;
    NSDictionary *_ABRLogInfo;
    NSDictionary *_strategyInfo;
    NSDictionary *_personalTransParams;
    long long _checkSilenceVoiceInterval;
    long long _SilenceVoiceThreshold;
    long long _codecNotSame;
    long long _bitrateAbnormal;
    long long _dynamicSrType;
    NSArray *_disableNetSwitchList;
    long long _abrStrategyDelaySwitchTime;
    NSString *_realSeiSource;
    NSString *_lssSettingParams;
    NSMutableDictionary *_forceUpdateParamsWithLSSDict;
    long long _reasonOfNetworkSwitching;
    NSString *_detailOfNetworkSwitching;
    long long _tryTimesOfNetworkSwitching;
    long long _succeedTimesOfNetworkSwitching;
    long long _thresholdOfStallCount;
    id _audioVolumeObserver;
    struct CGSize { double width; double height; } _presentationSize;
}

@property (retain, nonatomic) id rawData;
@property (nonatomic) long long type;
@property (nonatomic) struct CGSize { double width; double height; } presentationSize;
@property (copy, nonatomic) NSDictionary *preferencesSwitch;
@property (copy, nonatomic) NSDictionary *HTTPHeaders;
@property (copy, nonatomic) NSString *sessionID;
@property (copy, nonatomic) NSString *bizSessionID;
@property (nonatomic) int enableBizSessionID;
@property (copy, nonatomic) NSString *liveVVSessionID;
@property (copy, nonatomic) NSString *currentLiveStreamSessionID;
@property (copy, nonatomic) NSDictionary *ABRLogInfo;
@property (copy, nonatomic) NSDictionary *strategyInfo;
@property (copy, nonatomic) NSDictionary *personalTransParams;
@property (nonatomic) BOOL isBackupOriginInDecodeErrorHappened;
@property (nonatomic) BOOL isEnableLogVoiceSilence;
@property (nonatomic) BOOL isEnableLogAbrDecisionInfo;
@property (nonatomic) long long checkSilenceVoiceInterval;
@property (nonatomic) long long SilenceVoiceThreshold;
@property (nonatomic) BOOL isOpenGlobalVolumeBalance;
@property (nonatomic) int volumeBalanceType;
@property (nonatomic) int volumeBalanceTargetLufs;
@property (nonatomic) int videoProcessingSettingState;
@property (nonatomic) BOOL shouldUseSmoothlySwitchParams;
@property (nonatomic) long long codecNotSame;
@property (nonatomic) long long bitrateAbnormal;
@property (nonatomic) long long dynamicSrType;
@property (nonatomic) BOOL enableAudioBalanceBySei;
@property (nonatomic) BOOL enableSkipLoudnorm;
@property (nonatomic) BOOL enableOnlyLoudnormBySei;
@property (nonatomic) float audioBalanceTargetLuft;
@property (nonatomic) BOOL didOpenAudioBalanceBySei;
@property (nonatomic) BOOL enableUseLss;
@property (copy, nonatomic) NSArray *disableNetSwitchList;
@property (nonatomic) BOOL isEnableUseBmpWater;
@property (nonatomic) int strategyBandWidth;
@property (nonatomic) long long abrStrategyDelaySwitchTime;
@property (nonatomic) BOOL enableFallbackToPlayerAbr;
@property (nonatomic) BOOL isFallbackFromHDRToSDR;
@property (nonatomic) BOOL roiBmfSREnabled;
@property (copy, nonatomic) NSString *realSeiSource;
@property (copy, nonatomic) NSString *lssSettingParams;
@property (copy, nonatomic) NSMutableDictionary *forceUpdateParamsWithLSSDict;
@property (nonatomic) BOOL enableNetworkSwitching;
@property (nonatomic) BOOL usingCellular;
@property (nonatomic) BOOL switchedToCellularWithWifiOn;
@property (nonatomic) unsigned int cellularIndex;
@property (nonatomic) long long reasonOfNetworkSwitching;
@property (copy, nonatomic) NSString *detailOfNetworkSwitching;
@property (nonatomic) long long tryTimesOfNetworkSwitching;
@property (nonatomic) long long succeedTimesOfNetworkSwitching;
@property (nonatomic) BOOL triggerRetryByNetworkSwitching;
@property (nonatomic) long long thresholdOfStallCount;
@property (nonatomic) unsigned int thresholdOfStallTime;
@property (nonatomic) BOOL enableUseExternalAeTargetLufts;
@property (nonatomic) float audioVolumeBalancePregainExternal;
@property (nonatomic) float audioVolumeBalanceThresholdExternal;
@property (nonatomic) float audioVolumeBalanceRatioExternal;
@property (nonatomic) float audioVolumeBalancePredelayExternal;
@property (nonatomic) BOOL enableAudioVolumeBalancePregainExternal;
@property (nonatomic) BOOL enableAudioVolumeBalanceThresholdExternal;
@property (nonatomic) BOOL enableAudioVolumeBalanceRatioExternal;
@property (nonatomic) BOOL enableAudioVolumeBalancePredelayExternal;
@property (nonatomic) BOOL enableAudioVolumeBalancePhase2;
@property (nonatomic) BOOL enableAudioRMSMonitor;
@property (weak, nonatomic) id audioVolumeObserver;
@property (retain, nonatomic) TVLPlayerItemPreferences *preferences;
@property (readonly, copy, nonatomic) NSArray *supportedPreferences;
@property (readonly, copy, nonatomic) NSArray *supportedResolutionTypes;

+ (id)playerItemWithInfoData:(id)arg0;
+ (long long)compareStreamData:(id)arg0 data2:(id)arg1;
+ (id)playerItemWithStreamData:(id)arg0;
+ (id)playerItemWithURL:(id)arg0;

- (id)supportedResolutionTypes;
- (void)setUsingCellular:(BOOL)arg0;
- (id)audioVolumeObserver;
- (void)setAudioVolumeObserver:(id)arg0;
- (id)currentStreamData;
- (void)setEnableFallbackToPlayerAbr:(BOOL)arg0;
- (id)URLWithPreferences:(id)arg0;
- (id)supportedPreferences;
- (id)liveVVSessionID;
- (void)setDynamicSrType:(long long)arg0;
- (void)setForceUpdateParamsWithLSSDict:(id)arg0;
- (long long)dynamicSrType;
- (void)setRoiBmfSREnabled:(BOOL)arg0;
- (void)handleVideoSizeChangedNotification:(id)arg0;
- (id)initWithPlayableURLs:(id)arg0;
- (id)initWithItemInternal:(id)arg0;
- (id)initWithInfoData:(id)arg0;
- (id)findEquivalentPreferencesWithPreferences:(id)arg0 requiredProperties:(id)arg1;
- (void)setPersonalTransParams:(id)arg0;
- (id)personalTransParams;
- (void)setStrategyInfo:(id)arg0;
- (void)updateCurrenStrategyInfo:(id)arg0;
- (id)strategyInfo;
- (void)tvl_requestItemInfoWithCompletion:(id /* block */)arg0;
- (void)tvl_cancel;
- (int)getCurrentShortEdge;
- (id)originSupportedPreferences;
- (id)highestPriorityPreferencesLowerThanPreferences:(id)arg0;
- (id)recommendedPreferencesWithResolution:(id)arg0;
- (id)suggestedPreferencesWithPreferences:(id)arg0 userInfo:(id)arg1;
- (id)resolutionWithVideoBitrateInAbrList:(long long)arg0;
- (id)resolutionWithVideoBitrate:(long long)arg0;
- (void)updateCurrentPersonalTransParams:(id)arg0;
- (id)currenPersonalTransParams;
- (void)resetStrategyInfo;
- (id)currenStrategyInfo;
- (id)currentLiveStreamSessionID;
- (void)updateLiveStreamSessionID;
- (BOOL)isBackupPreferencesExistent;
- (BOOL)checkCurrentStateSupportOrNot:(long long)arg0;
- (id)preferencesSwitch;
- (void)setPreferencesSwitch:(id)arg0;
- (id)bizSessionID;
- (void)setBizSessionID:(id)arg0;
- (int)enableBizSessionID;
- (void)setEnableBizSessionID:(int)arg0;
- (void)setLiveVVSessionID:(id)arg0;
- (void)setCurrentLiveStreamSessionID:(id)arg0;
- (BOOL)isBackupOriginInDecodeErrorHappened;
- (void)setIsBackupOriginInDecodeErrorHappened:(BOOL)arg0;
- (BOOL)isEnableLogVoiceSilence;
- (void)setIsEnableLogVoiceSilence:(BOOL)arg0;
- (BOOL)isEnableLogAbrDecisionInfo;
- (void)setIsEnableLogAbrDecisionInfo:(BOOL)arg0;
- (long long)checkSilenceVoiceInterval;
- (void)setCheckSilenceVoiceInterval:(long long)arg0;
- (long long)SilenceVoiceThreshold;
- (void)setSilenceVoiceThreshold:(long long)arg0;
- (BOOL)isOpenGlobalVolumeBalance;
- (void)setIsOpenGlobalVolumeBalance:(BOOL)arg0;
- (int)volumeBalanceType;
- (void)setVolumeBalanceType:(int)arg0;
- (int)volumeBalanceTargetLufs;
- (void)setVolumeBalanceTargetLufs:(int)arg0;
- (int)videoProcessingSettingState;
- (void)setVideoProcessingSettingState:(int)arg0;
- (BOOL)shouldUseSmoothlySwitchParams;
- (void)setShouldUseSmoothlySwitchParams:(BOOL)arg0;
- (BOOL)enableAudioBalanceBySei;
- (void)setEnableAudioBalanceBySei:(BOOL)arg0;
- (BOOL)enableSkipLoudnorm;
- (void)setEnableSkipLoudnorm:(BOOL)arg0;
- (BOOL)enableOnlyLoudnormBySei;
- (void)setEnableOnlyLoudnormBySei:(BOOL)arg0;
- (float)audioBalanceTargetLuft;
- (void)setAudioBalanceTargetLuft:(float)arg0;
- (BOOL)didOpenAudioBalanceBySei;
- (void)setDidOpenAudioBalanceBySei:(BOOL)arg0;
- (BOOL)enableUseLss;
- (void)setEnableUseLss:(BOOL)arg0;
- (id)disableNetSwitchList;
- (void)setDisableNetSwitchList:(id)arg0;
- (BOOL)isEnableUseBmpWater;
- (void)setIsEnableUseBmpWater:(BOOL)arg0;
- (int)strategyBandWidth;
- (void)setStrategyBandWidth:(int)arg0;
- (long long)abrStrategyDelaySwitchTime;
- (void)setAbrStrategyDelaySwitchTime:(long long)arg0;
- (BOOL)enableFallbackToPlayerAbr;
- (BOOL)isFallbackFromHDRToSDR;
- (void)setIsFallbackFromHDRToSDR:(BOOL)arg0;
- (BOOL)roiBmfSREnabled;
- (id)realSeiSource;
- (void)setRealSeiSource:(id)arg0;
- (id)lssSettingParams;
- (void)setLssSettingParams:(id)arg0;
- (id)forceUpdateParamsWithLSSDict;
- (BOOL)enableNetworkSwitching;
- (void)setEnableNetworkSwitching:(BOOL)arg0;
- (BOOL)usingCellular;
- (BOOL)switchedToCellularWithWifiOn;
- (void)setSwitchedToCellularWithWifiOn:(BOOL)arg0;
- (unsigned int)cellularIndex;
- (void)setCellularIndex:(unsigned int)arg0;
- (long long)reasonOfNetworkSwitching;
- (void)setReasonOfNetworkSwitching:(long long)arg0;
- (id)detailOfNetworkSwitching;
- (void)setDetailOfNetworkSwitching:(id)arg0;
- (long long)tryTimesOfNetworkSwitching;
- (void)setTryTimesOfNetworkSwitching:(long long)arg0;
- (long long)succeedTimesOfNetworkSwitching;
- (void)setSucceedTimesOfNetworkSwitching:(long long)arg0;
- (BOOL)triggerRetryByNetworkSwitching;
- (void)setTriggerRetryByNetworkSwitching:(BOOL)arg0;
- (long long)thresholdOfStallCount;
- (void)setThresholdOfStallCount:(long long)arg0;
- (unsigned int)thresholdOfStallTime;
- (void)setThresholdOfStallTime:(unsigned int)arg0;
- (BOOL)enableUseExternalAeTargetLufts;
- (void)setEnableUseExternalAeTargetLufts:(BOOL)arg0;
- (float)audioVolumeBalancePregainExternal;
- (void)setAudioVolumeBalancePregainExternal:(float)arg0;
- (float)audioVolumeBalanceThresholdExternal;
- (void)setAudioVolumeBalanceThresholdExternal:(float)arg0;
- (float)audioVolumeBalanceRatioExternal;
- (void)setAudioVolumeBalanceRatioExternal:(float)arg0;
- (float)audioVolumeBalancePredelayExternal;
- (void)setAudioVolumeBalancePredelayExternal:(float)arg0;
- (BOOL)enableAudioVolumeBalancePregainExternal;
- (void)setEnableAudioVolumeBalancePregainExternal:(BOOL)arg0;
- (BOOL)enableAudioVolumeBalanceThresholdExternal;
- (void)setEnableAudioVolumeBalanceThresholdExternal:(BOOL)arg0;
- (BOOL)enableAudioVolumeBalanceRatioExternal;
- (void)setEnableAudioVolumeBalanceRatioExternal:(BOOL)arg0;
- (BOOL)enableAudioVolumeBalancePredelayExternal;
- (void)setEnableAudioVolumeBalancePredelayExternal:(BOOL)arg0;
- (BOOL)enableAudioVolumeBalancePhase2;
- (void)setEnableAudioVolumeBalancePhase2:(BOOL)arg0;
- (BOOL)enableAudioRMSMonitor;
- (void)setEnableAudioRMSMonitor:(BOOL)arg0;
- (id)findHASSwitchControlURLWithPreferences:(id)arg0 resolutionType:(id)arg1;
- (id)findHASSwitchControlParametersWithPreferences:(id)arg0 resolutionType:(id)arg1;
- (void)setABRLogInfo:(id)arg0;
- (id)ABRLogInfo;
- (long long)codecNotSame;
- (void)setCodecNotSame:(long long)arg0;
- (long long)bitrateAbnormal;
- (void)setBitrateAbnormal:(long long)arg0;
- (void)setPreferences:(id)arg0;
- (void)setInternal:(id)arg0;
- (id)init;
- (id)preferences;
- (void).cxx_destruct;
- (void)setSessionID:(id)arg0;
- (void)setPresentationSize:(struct CGSize { double x0; double x1; })arg0;
- (id)sessionID;
- (long long)type;
- (id)initWithURL:(id)arg0;
- (id)HTTPHeaders;
- (void)setPlayer:(id)arg0;
- (id)internal;
- (void)setType:(long long)arg0;
- (struct CGSize { double x0; double x1; })presentationSize;
- (id)rawData;
- (void)setHTTPHeaders:(id)arg0;
- (void)setRawData:(id)arg0;
- (void)dealloc;
- (id)player;
- (id)rawDataString;
- (id)accessLog;

@end
