//
//     Generated by private class-dump
//

@class NSDate, NSString, BDECPigeonParticipantManager, NSArray, BDECPigeonConversation, AWEPOIIMNoticeModel, NSDictionary, NSPointerArray;

@interface AWEPOIIMPigeonConversation : NSObject <BDECPigeonParticipantsInConversationDelegate> {
    BOOL _firstRequestedParitipants;
    BDECPigeonConversation *_conversation;
    NSString *_lastMessageIdBeObserved;
    unsigned long long _unreadCountBeObserved;
    NSString *_groupIconURL;
    AWEPOIIMNoticeModel *_groupNotice;
    NSArray *_orderedParticipants;
    NSDictionary *_participantDict;
    NSString *_currentPigeonUID;
    BDECPigeonParticipantManager *_participantMananger;
    NSString *_preNoticeString;
    NSArray *_participantUIDs;
    NSArray *_participants;
    NSPointerArray *_observers;
    id /* block */ _conversationDissolvedCallback;
}

@property (class, readonly, nonatomic) double serverTimestamp;

@property (retain, nonatomic) BDECPigeonConversation *conversation;
@property (retain, nonatomic) BDECPigeonParticipantManager *participantMananger;
@property (copy, nonatomic) NSString *lastMessageIdBeObserved;
@property (nonatomic) unsigned long long unreadCountBeObserved;
@property (copy, nonatomic) NSString *groupIconURL;
@property (retain, nonatomic) AWEPOIIMNoticeModel *groupNotice;
@property (copy, nonatomic) NSString *preNoticeString;
@property (copy, nonatomic) NSArray *participantUIDs;
@property (nonatomic) BOOL firstRequestedParitipants;
@property (copy, nonatomic) NSArray *participants;
@property (copy, nonatomic) NSArray *orderedParticipants;
@property (copy, nonatomic) NSDictionary *participantDict;
@property (copy, nonatomic) NSString *currentPigeonUID;
@property (retain, nonatomic) NSPointerArray *observers;
@property (copy, nonatomic) id /* block */ conversationDissolvedCallback;
@property (readonly, nonatomic) unsigned long long conversationType;
@property (readonly, copy, nonatomic) NSString *bizConversationID;
@property (readonly, copy, nonatomic) NSString *lastMessageIdentifier;
@property (readonly, nonatomic) unsigned long long unreadCount;
@property (readonly, copy, nonatomic) NSString *pigeonBizType;
@property (readonly, nonatomic) BOOL isMute;
@property (readonly, nonatomic) BOOL stickOnTop;
@property (readonly, nonatomic) NSDate *updatedAt;
@property (readonly, nonatomic) double updateTime;
@property (readonly, copy, nonatomic) NSDictionary *originExt;
@property (readonly, copy, nonatomic) NSDictionary *bizExt;
@property (readonly, nonatomic) int inbox;
@property (readonly, copy, nonatomic) NSString *draftText;
@property (readonly, copy, nonatomic) NSString *pigeonShopID;
@property (readonly, copy, nonatomic) NSString *pigeonConGroupID;
@property (readonly, nonatomic) BOOL isGroup;
@property (readonly, copy, nonatomic) NSString *groupName;
@property (readonly, copy, nonatomic) NSString *groupDesc;
@property (readonly, copy, nonatomic) NSString *groupIcon;
@property (readonly, nonatomic) NSString *groupNoticeString;
@property (readonly, nonatomic) long long ownerID;
@property (readonly, copy, nonatomic) NSString *ownerIDStr;
@property (readonly, nonatomic) BOOL isOneToOne;
@property (readonly, copy, nonatomic) NSString *groupChatIndempotentId;
@property (readonly, nonatomic) BOOL isDissolved;
@property (readonly, nonatomic) BOOL isCurrentUserAParticipant;
@property (readonly) unsigned long long participantsCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)conversationWithBizConversationID:(id)arg0 bizType:(id)arg1 inbox:(long long)arg2;
+ (id)conversationsWithPigeonConversations:(id)arg0;
+ (id)conversationWithPigeonConversation:(id)arg0;
+ (double)serverTimestamp;

- (BOOL)stickOnTop;
- (BOOL)isCurrentUserAParticipant;
- (void)setMute:(BOOL)arg0 completion:(id /* block */)arg1;
- (id)lastMessageIdentifier;
- (id)draftText;
- (unsigned long long)conversationType;
- (BOOL)isDissolved;
- (id)pigeonBizType;
- (id)pigeonShopID;
- (id)bizConversationID;
- (void)participantsDidUpdate:(id)arg0;
- (id)originExt;
- (id)bizExt;
- (id)pigeonConGroupID;
- (id /* block */)conversationDissolvedCallback;
- (void)setConversationDissolvedCallback:(id /* block */)arg0;
- (id)groupIcon;
- (id)groupDesc;
- (id)messageService;
- (void)p_dataBind;
- (id)defaultConversationTrackerParams;
- (id)groupNotice;
- (id)currentPigeonUID;
- (id)orderedParticipants;
- (void)updateCurrentPigeonUIDIfNeeded;
- (void)fetchParticipantsWithExtend:(id)arg0 completion:(id /* block */)arg1;
- (void)conversationUpdated;
- (void)fetchGroupIconURLWithCompletion:(id /* block */)arg0;
- (id)participantDict;
- (id)ownerIDStr;
- (id)initWithPigeonConversation:(id)arg0;
- (void)p_groupParticipantsBind;
- (void)setCurrentPigeonUID:(id)arg0;
- (void)setLastMessageIdBeObserved:(id)arg0;
- (void)setUnreadCountBeObserved:(unsigned long long)arg0;
- (void)conversationDissolved;
- (id)groupNoticeString;
- (void)setPreNoticeString:(id)arg0;
- (id)participantUIDs;
- (BOOL)firstRequestedParitipants;
- (void)setFirstRequestedParitipants:(BOOL)arg0;
- (void)refreshGroupNotice;
- (void)fetchParticipantsWithUids:(id)arg0 extend:(id)arg1 completion:(id /* block */)arg2;
- (id)participantMananger;
- (void)fetchParticipantsSilentlyWithRetryCount:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (void)notifyOberversWithMethodBlock:(id /* block */)arg0;
- (id)preNoticeString;
- (id)groupIconURL;
- (void)p_fetchGroupIconURLWithCompletion:(id /* block */)arg0 retryCount:(unsigned long long)arg1;
- (void)setGroupIconURL:(id)arg0;
- (void)updateGroupParticipants;
- (id)groupChatIndempotentId;
- (id)lastMessageIdBeObserved;
- (unsigned long long)unreadCountBeObserved;
- (void)setGroupNotice:(id)arg0;
- (void)setOrderedParticipants:(id)arg0;
- (void)setParticipantDict:(id)arg0;
- (void)setParticipantMananger:(id)arg0;
- (void)setParticipantUIDs:(id)arg0;
- (void)setParticipants:(id)arg0;
- (void).cxx_destruct;
- (id)participants;
- (double)updateTime;
- (id)observers;
- (unsigned long long)participantsCount;
- (void)registerObserver:(id)arg0;
- (BOOL)isGroup;
- (void)setObservers:(id)arg0;
- (id)groupName;
- (unsigned long long)unreadCount;
- (void)updateIfNeeded;
- (id)conversation;
- (void)setConversation:(id)arg0;
- (int)inbox;
- (long long)ownerID;
- (void)setDraft:(id)arg0;
- (id)updatedAt;
- (BOOL)isMute;
- (BOOL)isOneToOne;

@end
