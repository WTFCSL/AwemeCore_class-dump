//
//     Generated by private class-dump
//

@class TTKNaviCategoryModel, AWENaviColorPickerSubOptionModel, AWENaviColorTabOptionModel, IESEffectModel, TTKNaviCategoryTabContentSectionInputData, AWETwoTuple, NSString, AWENaviColorPickerTabModel, TTKNaviInspirationModel, AWENaviReplayBinding, NSArray, AWENaviCollectionModel, AWENaviColorPickerOptionModel;

@interface TTKNaviCategoryTabContentSectionViewModel : AWEBaseViewModel <AWENaviStickerDownloadObserverProtocol, AWENaviCategoryChangeObserver> {
    BOOL _needsReload;
    BOOL _isColorTabUnfold;
    BOOL _isColorSliderShow;
    TTKNaviCategoryModel *_category;
    NSArray *_effectModelArray;
    NSArray *_ownedLimitedEffectNameArray;
    NSArray *_inspirationModelArray;
    NSArray *_collectionArray;
    NSArray *_colorPickerOptionModelArray;
    AWENaviColorTabOptionModel *_colorTabOption;
    IESEffectModel *_selectedEffect;
    TTKNaviInspirationModel *_selectedInspiration;
    AWENaviColorPickerOptionModel *_selectedColor;
    AWENaviCollectionModel *_selectedCollection;
    AWENaviColorPickerSubOptionModel *_subColor;
    AWENaviColorPickerTabModel *_selectedTab;
    AWETwoTuple *_resourceLoadTuple;
    AWENaviReplayBinding *_effectChangeBinding;
    AWENaviReplayBinding *_inspirationChangeBinding;
    AWENaviReplayBinding *_colorChangeBinding;
    AWENaviReplayBinding *_collectionChangeBinding;
    NSArray *_showColors;
    TTKNaviCategoryTabContentSectionInputData *_inputData;
    NSString *_categoryTabKey;
    IESEffectModel *_willSelectedEffectModel;
    struct CGPoint { double x; double y; } _paletteCollectionViewOffset;
}

@property (retain, nonatomic) TTKNaviCategoryModel *category;
@property (retain, nonatomic) NSArray *effectModelArray;
@property (copy, nonatomic) NSArray *ownedLimitedEffectNameArray;
@property (retain, nonatomic) NSArray *inspirationModelArray;
@property (retain, nonatomic) NSArray *collectionArray;
@property (retain, nonatomic) NSArray *colorPickerOptionModelArray;
@property (retain, nonatomic) AWENaviColorTabOptionModel *colorTabOption;
@property (retain, nonatomic) IESEffectModel *selectedEffect;
@property (retain, nonatomic) TTKNaviInspirationModel *selectedInspiration;
@property (retain, nonatomic) AWENaviColorPickerOptionModel *selectedColor;
@property (retain, nonatomic) AWENaviCollectionModel *selectedCollection;
@property (retain, nonatomic) AWENaviColorPickerSubOptionModel *subColor;
@property (retain, nonatomic) AWENaviColorPickerTabModel *selectedTab;
@property (retain, nonatomic) AWETwoTuple *resourceLoadTuple;
@property (nonatomic) struct CGPoint { double x; double y; } paletteCollectionViewOffset;
@property (retain, nonatomic) AWENaviReplayBinding *effectChangeBinding;
@property (retain, nonatomic) AWENaviReplayBinding *inspirationChangeBinding;
@property (retain, nonatomic) AWENaviReplayBinding *colorChangeBinding;
@property (retain, nonatomic) AWENaviReplayBinding *collectionChangeBinding;
@property (nonatomic) BOOL isColorTabUnfold;
@property (nonatomic) BOOL isColorSliderShow;
@property (copy, nonatomic) NSArray *showColors;
@property (nonatomic) BOOL needsReload;
@property (retain, nonatomic) TTKNaviCategoryTabContentSectionInputData *inputData;
@property (copy, nonatomic) NSString *categoryTabKey;
@property (retain, nonatomic) IESEffectModel *willSelectedEffectModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)paletteCountPerRow;
+ (id)effectNotifyViewModel;

- (void)syncColor:(id)arg0;
- (BOOL)category:(id)arg0 didChangeEffect:(id)arg1 viewModel:(id)arg2 targetCategory:(id)arg3;
- (BOOL)category:(id)arg0 didChangeInspiration:(id)arg1 viewModel:(id)arg2 targetCategory:(id)arg3;
- (void)category:(id)arg0 didChangeColor:(id)arg1 viewModel:(id)arg2 targetCategory:(id)arg3;
- (id)effectChangeBinding;
- (id)effectModelArray;
- (id)selectedEffect;
- (void)didClickEffectAtIndex:(long long)arg0;
- (id)showColors;
- (void)setShowColors:(id)arg0;
- (id)colorTabOption;
- (id)subColor;
- (void)setIsColorTabUnfold:(BOOL)arg0;
- (BOOL)isColorTabUnfold;
- (void)setIsColorSliderShow:(BOOL)arg0;
- (BOOL)isColorSliderShow;
- (void)didClickColorAtIndex:(long long)arg0 colorType:(unsigned long long)arg1;
- (void)didSlideToColor:(id)arg0 ratio:(double)arg1 colorType:(unsigned long long)arg2;
- (id)colorChangeBinding;
- (void)setOwnedLimitedEffectNameArray:(id)arg0;
- (void)stickerDownloadManager:(id)arg0 didFinishDownloadSticker:(id)arg1;
- (void)stickerDownloadManager:(id)arg0 didFailDownloadSticker:(id)arg1 withError:(id)arg2;
- (void)setCollectionArray:(id)arg0;
- (void)setEffectModelArray:(id)arg0;
- (id)collectionArray;
- (id)categoryTabKey;
- (id)ownedLimitedEffectNameArray;
- (id)collectionChangeBinding;
- (id)selectedCollection;
- (void)didClickCollectionLookAtIndex:(long long)arg0;
- (BOOL)isOwnedLimitedEffect:(id)arg0;
- (id)inspirationChangeBinding;
- (long long)indexOfInspiration:(id)arg0;
- (id)inspirationModelArray;
- (id)selectedInspiration;
- (void)didClickInspirationAtIndex:(long long)arg0;
- (id)colorPickerOptionModelArray;
- (void)didClickColorAtIndex:(long long)arg0;
- (void)setCategoryTabKey:(id)arg0;
- (void)p_configWithInputData:(id)arg0;
- (void)resetSection;
- (void)p_selectEffect:(id)arg0;
- (void)didClickCollectionLookAtIndex:(long long)arg0 ignoreCategories:(id)arg1;
- (void)applyCollection:(id)arg0 ignoreCategories:(id)arg1;
- (void)setSelectedCollection:(id)arg0;
- (void)setResourceLoadTuple:(id)arg0;
- (long long)ignoreTypeOfCategory:(id)arg0 isHeadsCategory:(BOOL)arg1 matchIgnore:(BOOL)arg2;
- (void)setSubColor:(id)arg0;
- (void)setSelectedInspiration:(id)arg0;
- (void)resetSectionWithResetColor:(BOOL)arg0;
- (void)setSelectedEffect:(id)arg0;
- (void)p_adaptDataFromCategoryModel:(id)arg0;
- (id)filterShowEffectModelArray;
- (id)filterShowInspirationModelArray;
- (void)setInspirationModelArray:(id)arg0;
- (void)setColorPickerOptionModelArray:(id)arg0;
- (void)setColorTabOption:(id)arg0;
- (void)p_updateWithEffectModel:(id)arg0;
- (id)getCollectionItemIncludsEffect:(id)arg0;
- (void)updateEffect:(id)arg0 byEffectNotify:(BOOL)arg1;
- (id)getCollectionItemIncludsInspriration:(id)arg0;
- (id)initWithInputData:(id)arg0;
- (void)didClickEmotionAtIndex:(long long)arg0;
- (void)cachePaletteCollectionViewOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)didClickEditButton;
- (id)titleForSection;
- (long long)rowNumberForPaletteTableViewCell;
- (long long)rowNumberForColorPickerTableViewCell;
- (long long)rowNumberForInspirationTableViewCell;
- (long long)rowNumberForCollectionLookTableViewCell;
- (long long)rowNumberForMoodTableViewCell;
- (long long)rowNumberForEffectTableViewCell;
- (id)resourceLoadTuple;
- (struct CGPoint { double x0; double x1; })paletteCollectionViewOffset;
- (void)setPaletteCollectionViewOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)setEffectChangeBinding:(id)arg0;
- (void)setInspirationChangeBinding:(id)arg0;
- (void)setColorChangeBinding:(id)arg0;
- (void)setCollectionChangeBinding:(id)arg0;
- (id)willSelectedEffectModel;
- (void)setWillSelectedEffectModel:(id)arg0;
- (void)setNeedsReload:(BOOL)arg0;
- (id)category;
- (void).cxx_destruct;
- (BOOL)needsReload;
- (void)setCategory:(id)arg0;
- (id)selectedColor;
- (void)setSelectedColor:(id)arg0;
- (long long)numberOfRows;
- (void)dealloc;
- (void)updateColor:(id)arg0;
- (id)inputData;
- (void)setInputData:(id)arg0;
- (long long)indexOfColor:(id)arg0;
- (long long)indexOfCollection:(id)arg0;
- (void)setSelectedTab:(id)arg0;
- (id)selectedTab;
- (long long)indexOfEffect:(id)arg0;

@end
