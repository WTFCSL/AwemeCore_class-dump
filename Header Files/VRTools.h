//
//     Generated by private class-dump
//

@class EAGLContext, NSObject;
@protocol OS_dispatch_queue, PanoramaToolsDelegate;

@interface VRTools : NSObject {
    struct __CVOpenGLESTextureCache { } *_cvTextureCache;
    struct __CVBuffer { } *_cvTextureOrigin;
    unsigned int _textureOriginInput;
    struct __CVBuffer { } *_cvTextureYPlane;
    unsigned int _textureYPlane;
    struct __CVBuffer { } *_cvTextureUVPlane;
    unsigned int _textureUVPlane;
    struct __CVBuffer { } *_cvTextureRGBA;
    unsigned int _textureRGBA;
    struct __CVBuffer { } *_cvRGBABuffer;
    struct __CVBuffer { } *_cvTextureDetect;
    unsigned int _textureDetect;
    struct __CVBuffer { } *_cvDetectBuffer;
    struct __CVBuffer { } *_cvTextureErp;
    unsigned int _textureErp;
    struct __CVBuffer { } *_cvErpBuffer;
    void *_vrEngine;
    float _kArrayCur[4];
    float _fishErpKArrayCur[4];
    float _kArrayPre[4];
    float _fishErpKArrayPre[4];
    float _dArrayCur[4];
    float _fishErpDArrayCur[4];
    float _circleArrayCur[4];
    float _circleArrayPre[4];
    int _imageWidth;
    int _imageHeight;
    int _outputWidth;
    int _outputHeight;
    int _preWidth;
    int _preHeight;
    int _pixWidth;
    int _pixHeight;
    int _debug_frame_count;
    int _captureFisheyeWidth;
    int _captureFisheyeHeight;
    BOOL _isDetect;
    BOOL _isInputChange;
    double _preDetectTime;
    int _circleInterval;
    float _detectFov;
    float _detectScale;
    long long _detectProType;
    long long _fishToerpProType;
    long long _erpTofishProType;
    int _circleSmoothThreshold;
    long long _processMode;
    int _circleErrorCount;
    int _circleSwitchCount;
    float _cameraPitch;
    float _cameraYaw;
    long long _detectCircleState;
    float _focusArrayCur[4];
    id<PanoramaToolsDelegate> _delegate;
    EAGLContext *_glContext;
    NSObject<OS_dispatch_queue> *_detectQueue;
    NSObject<OS_dispatch_queue> *_vrEngineQueue;
}

@property (retain, nonatomic) EAGLContext *glContext;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *detectQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *vrEngineQueue;
@property (weak, nonatomic) id<PanoramaToolsDelegate> delegate;

- (void)loadResource;
- (void)initCircleParam;
- (void)setDetectQueue:(id)arg0;
- (void)setVrEngineQueue:(id)arg0;
- (id)vrEngineQueue;
- (void)setGraphicEngineParams:(id)arg0;
- (void)releaseTmpCVBuffer;
- (void)releaseTmpCVTexture;
- (void)createTmpBuffer;
- (void)releaseOutputCVBuffer;
- (void)releaseOutputCVTexture;
- (void)createOutputBuffer;
- (void)setupOriginTextureWithYUVPixelBuffer:(struct __CVBuffer { } *)arg0;
- (id)detectQueue;
- (void)circleDetect:(int)arg0 InputHeight:(int)arg1 OutputWidth:(int)arg2 OutputHeight:(int)arg3;
- (void)releaseInputCVTexture;
- (void)changeCircleParams;
- (BOOL)setupTextureWithPixelBuffer:(struct __CVBuffer **)arg0 w:(int)arg1 h:(int)arg2 glTexture:(unsigned int *)arg3 cvTexture:(struct __CVBuffer **)arg4;
- (float)calFocusDist:(float)arg0 dParams:(float *)arg1 circleRadius:(float)arg2 mode:(long long)arg3;
- (struct CGPoint { double x0; double x1; })erpToFisheye:(float)arg0 phi:(float)arg1 focusLength:(float)arg2 centerPoint:(struct CGPoint { double x0; double x1; })arg3;
- (struct CGPoint { double x0; double x1; })fisheyeToErp:(struct CGPoint { double x0; double x1; })arg0 focusLength:(float)arg1 erpWidth:(int)arg2 erpHeight:(int)arg3 centerPoint:(struct CGPoint { double x0; double x1; })arg4;
- (void)setFisheyeSDKParam:(id)arg0;
- (id)getDefaultParams;
- (void)setDetectCircleInterval:(int)arg0;
- (BOOL)getDetectCircleResult;
- (void)updateFisheyeToErpParam:(id)arg0;
- (void)setFisheyeOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setFisheyeInputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setProcessMode:(long long)arg0;
- (struct __CVBuffer { } *)processPixelbuffer:(struct __CVBuffer { } *)arg0;
- (BOOL)setupOriginTextureWithPixelBuffer:(struct __CVBuffer { } *)arg0;
- (void)panoramaWithPitch:(double)arg0 yaw:(double)arg1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })arg0 previewViewBound:(struct CGSize { double x0; double x1; })arg1 previewMode:(long long)arg2;
- (void)resetPitchYaw;
- (id)init;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)glContext;
- (void)setGlContext:(id)arg0;

@end
