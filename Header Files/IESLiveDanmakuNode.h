//
//     Generated by private class-dump
//

@class IESLiveCarnivalDanmakuTemplate, NSString, NSArray, UIImage, NSAttributedString, HTSLiveImage, IESLiveEmojiTextParser, GPBMessage, NSNumber, UIColor;
@protocol HTSLiveTemplateProviderAdapter;

@interface IESLiveDanmakuNode : IESLiveDanmakuBaseNode {
    BOOL _fromStrategyMode;
    BOOL _sendReview;
    BOOL _showContentBorder;
    BOOL _showSpecialIDMedal;
    BOOL _pinModeRequired;
    BOOL _showBackgroundColorGradient;
    BOOL _onlyImage;
    BOOL _showAvatarBadge;
    BOOL _verticalContentLayout;
    BOOL _useWebpBackground;
    BOOL _enableClickInteraction;
    BOOL _shouldFillDanmakuChannel;
    unsigned long long _priority;
    GPBMessage *_message;
    double _nodeCreateTime;
    NSNumber *_localTimeStamp;
    long long _eventTime;
    long long _qualityScore;
    long long _fontSizeType;
    NSAttributedString *_content;
    NSString *_msgContent;
    UIColor *_contentTextColor;
    NSString *_fansclubTitle;
    NSString *_brotherGroupTitle;
    NSString *_brotherGroupFontColor;
    NSArray *_brotherGroupURLs;
    NSNumber *_brotherGroupLevel;
    UIImage *_image;
    NSString *_schemaUrl;
    NSArray *_avatarURLs;
    NSArray *_honorURLs;
    NSArray *_fansclubURLs;
    NSAttributedString *_userName;
    unsigned long long _chatType;
    NSString *_mixUserID;
    NSString *_secUserID;
    NSNumber *_contentID;
    double _scale;
    NSArray *_borderURLs;
    NSArray *_medalURLs;
    UIImage *_ceremonyContentImage;
    UIColor *_fullScreenColor;
    unsigned long long _giftPrice;
    unsigned long long _groupCount;
    unsigned long long _comboCount;
    NSArray *_giftImageURLs;
    double _giftImageSize;
    double _outerStrokeWidth;
    double _outerStrokeColorAlpha;
    NSArray *_flexSetting;
    double _officialAvatarSize;
    HTSLiveImage *_avatarBadge;
    double _avatarBadgeSize;
    UIImage *_animatedBackgroundImage;
    HTSLiveImage *_badgeIcon;
    long long _carnivalPriority;
    long long _relativeIndex;
    IESLiveCarnivalDanmakuTemplate *_carnivalTemplate;
    IESLiveEmojiTextParser *_emoticonParser;
    id<HTSLiveTemplateProviderAdapter> _templateProvider;
    struct CGSize { double width; double height; } _imageSize;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _contentImageScaleEdgeInsets;
}

@property (nonatomic) BOOL showAvatar;
@property (retain, nonatomic) UIImage *avatarImage;
@property (nonatomic) BOOL avatarNeedVerticalOffset;
@property (nonatomic) struct CGSize { double x0; double x1; } avatarSize;
@property (nonatomic) double avatarLeadingOffset;
@property (nonatomic) double avatarContentSpacing;
@property (copy, nonatomic) NSArray *contentTextColors;
@property (copy, nonatomic) NSArray *contentOuterStrokeColors;
@property (copy, nonatomic) NSArray *borderColors;
@property (copy, nonatomic) NSArray *backgroundColors;
@property (nonatomic) double backgroundColorAlpha;
@property (copy, nonatomic) NSArray *backgroundImageURLS;
@property (retain, nonatomic) UIImage *backgroundSkin;
@property (nonatomic) double horizontalSpacing;
@property (nonatomic) long long atmosphereCols;
@property (retain, nonatomic) NSAttributedString *atmosphereContent;
@property (nonatomic) double atmosphereSpacingMax;
@property (nonatomic) double atmosphereSpacingMin;
@property (nonatomic) double atmosphereContentHeight;
@property (nonatomic) double mainContentHeight;
@property (copy, nonatomic) NSArray *logoImageURLS;
@property (copy, nonatomic) NSArray *tailImageURLS;
@property (copy, nonatomic) NSString *businessId;
@property (copy, nonatomic) NSString *resourceId;
@property (retain, nonatomic) IESLiveEmojiTextParser *emoticonParser;
@property (retain, nonatomic) id<HTSLiveTemplateProviderAdapter> templateProvider;
@property (retain, nonatomic) GPBMessage *message;
@property (nonatomic) BOOL fromStrategyMode;
@property (nonatomic) double nodeCreateTime;
@property (retain, nonatomic) NSNumber *localTimeStamp;
@property (nonatomic) long long eventTime;
@property (nonatomic) BOOL sendReview;
@property (nonatomic) long long qualityScore;
@property (nonatomic) long long fontSizeType;
@property (retain, nonatomic) NSAttributedString *content;
@property (retain, nonatomic) NSString *msgContent;
@property (nonatomic) BOOL showContentBorder;
@property (retain, nonatomic) UIColor *contentTextColor;
@property (copy, nonatomic) NSString *fansclubTitle;
@property (copy, nonatomic) NSString *brotherGroupTitle;
@property (copy, nonatomic) NSString *brotherGroupFontColor;
@property (retain, nonatomic) NSArray *brotherGroupURLs;
@property (retain, nonatomic) NSNumber *brotherGroupLevel;
@property (retain, nonatomic) UIImage *image;
@property (copy, nonatomic) NSString *schemaUrl;
@property (retain, nonatomic) NSArray *avatarURLs;
@property (retain, nonatomic) NSArray *honorURLs;
@property (retain, nonatomic) NSArray *fansclubURLs;
@property (retain, nonatomic) NSAttributedString *userName;
@property (nonatomic) unsigned long long chatType;
@property (copy, nonatomic) NSString *mixUserID;
@property (copy, nonatomic) NSString *secUserID;
@property (retain, nonatomic) NSNumber *contentID;
@property (nonatomic) double scale;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } contentImageScaleEdgeInsets;
@property (retain, nonatomic) NSArray *borderURLs;
@property (retain, nonatomic) NSArray *medalURLs;
@property (retain, nonatomic) UIImage *ceremonyContentImage;
@property (nonatomic) BOOL showSpecialIDMedal;
@property (retain, nonatomic) UIColor *fullScreenColor;
@property (nonatomic) unsigned long long giftPrice;
@property (nonatomic) unsigned long long groupCount;
@property (nonatomic) unsigned long long comboCount;
@property (copy, nonatomic) NSArray *giftImageURLs;
@property (nonatomic) double giftImageSize;
@property (nonatomic) double outerStrokeWidth;
@property (nonatomic) double outerStrokeColorAlpha;
@property (nonatomic) BOOL pinModeRequired;
@property (nonatomic) BOOL showBackgroundColorGradient;
@property (retain, nonatomic) NSArray *flexSetting;
@property (nonatomic) BOOL onlyImage;
@property (nonatomic) struct CGSize { double width; double height; } imageSize;
@property (nonatomic) double officialAvatarSize;
@property (nonatomic) BOOL showAvatarBadge;
@property (retain, nonatomic) HTSLiveImage *avatarBadge;
@property (nonatomic) double avatarBadgeSize;
@property (nonatomic) BOOL verticalContentLayout;
@property (nonatomic) BOOL useWebpBackground;
@property (retain, nonatomic) UIImage *animatedBackgroundImage;
@property (retain, nonatomic) HTSLiveImage *badgeIcon;
@property (nonatomic) BOOL enableClickInteraction;
@property (nonatomic) BOOL shouldFillDanmakuChannel;
@property (nonatomic) long long carnivalPriority;
@property (nonatomic) long long relativeIndex;
@property (retain, nonatomic) IESLiveCarnivalDanmakuTemplate *carnivalTemplate;

- (id)secUserID;
- (void)setSecUserID:(id)arg0;
- (id)localTimeStamp;
- (void)setLocalTimeStamp:(id)arg0;
- (id)msgContent;
- (void)setMsgContent:(id)arg0;
- (id)resourceId;
- (id)avatarURLs;
- (id)schemaUrl;
- (void)setResourceId:(id)arg0;
- (id)contentTextColor;
- (void)setContentTextColor:(id)arg0;
- (unsigned long long)chatType;
- (double)backgroundColorAlpha;
- (void)setBackgroundColorAlpha:(double)arg0;
- (BOOL)showBackgroundColorGradient;
- (void)setShowBackgroundColorGradient:(BOOL)arg0;
- (void)setSchemaUrl:(id)arg0;
- (void)setChatType:(unsigned long long)arg0;
- (void)setAvatarURLs:(id)arg0;
- (BOOL)showAvatar;
- (double)outerStrokeWidth;
- (void)setOuterStrokeWidth:(double)arg0;
- (void)setBorderColors:(id)arg0;
- (id)borderColors;
- (void)setBadgeIcon:(id)arg0;
- (id)badgeIcon;
- (id)atmosphereContent;
- (void)setAtmosphereContent:(id)arg0;
- (id)flexSetting;
- (void)setFlexSetting:(id)arg0;
- (unsigned long long)comboCount;
- (BOOL)showContentBorder;
- (void)setShowContentBorder:(BOOL)arg0;
- (long long)fontSizeType;
- (BOOL)onlyImage;
- (void)setFontSizeType:(long long)arg0;
- (BOOL)useWebpBackground;
- (id)backgroundImageURLS;
- (void)setAnimatedBackgroundImage:(id)arg0;
- (long long)carnivalPriority;
- (long long)relativeIndex;
- (void)setRelativeIndex:(long long)arg0;
- (void)setOnlyImage:(BOOL)arg0;
- (void)setCarnivalTemplate:(id)arg0;
- (void)setBackgroundImageURLS:(id)arg0;
- (void)setUseWebpBackground:(BOOL)arg0;
- (id)carnivalTemplate;
- (BOOL)verticalContentLayout;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentImageScaleEdgeInsets;
- (id)animatedBackgroundImage;
- (BOOL)enableClickInteraction;
- (id)emoticonParser;
- (void)setEmoticonParser:(id)arg0;
- (BOOL)sendReview;
- (void)setSendReview:(BOOL)arg0;
- (void)setFullScreenColor:(id)arg0;
- (id)fullScreenColor;
- (void)setContentTextColors:(id)arg0;
- (void)setShowAvatar:(BOOL)arg0;
- (void)setOfficialAvatarSize:(double)arg0;
- (void)setAvatarBadgeSize:(double)arg0;
- (void)setShowAvatarBadge:(BOOL)arg0;
- (void)setAvatarBadge:(id)arg0;
- (void)setAvatarLeadingOffset:(double)arg0;
- (id)contentTextColors;
- (id)mixUserID;
- (void)setMixUserID:(id)arg0;
- (BOOL)pinModeRequired;
- (id)logoImageURLS;
- (id)tailImageURLS;
- (void)setAtmosphereSpacingMax:(double)arg0;
- (void)setAtmosphereSpacingMin:(double)arg0;
- (double)nodeCreateTime;
- (void)setMainContentHeight:(double)arg0;
- (void)setAtmosphereContentHeight:(double)arg0;
- (BOOL)shouldFillDanmakuChannel;
- (id)giftImageURLs;
- (double)giftImageSize;
- (void)setGiftImageSize:(double)arg0;
- (unsigned long long)giftPrice;
- (void)setGiftPrice:(unsigned long long)arg0;
- (void)setComboCount:(unsigned long long)arg0;
- (void)setGiftImageURLs:(id)arg0;
- (BOOL)isImageValid;
- (BOOL)isDataComplete;
- (void)updateWithDanamkuSettings:(id)arg0;
- (BOOL)fromStrategyMode;
- (void)setFromStrategyMode:(BOOL)arg0;
- (void)setNodeCreateTime:(double)arg0;
- (id)fansclubTitle;
- (void)setFansclubTitle:(id)arg0;
- (id)brotherGroupTitle;
- (void)setBrotherGroupTitle:(id)arg0;
- (id)brotherGroupFontColor;
- (void)setBrotherGroupFontColor:(id)arg0;
- (id)brotherGroupURLs;
- (void)setBrotherGroupURLs:(id)arg0;
- (id)brotherGroupLevel;
- (void)setBrotherGroupLevel:(id)arg0;
- (id)honorURLs;
- (void)setHonorURLs:(id)arg0;
- (id)fansclubURLs;
- (void)setFansclubURLs:(id)arg0;
- (void)setContentImageScaleEdgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (id)borderURLs;
- (void)setBorderURLs:(id)arg0;
- (id)medalURLs;
- (void)setMedalURLs:(id)arg0;
- (id)ceremonyContentImage;
- (void)setCeremonyContentImage:(id)arg0;
- (BOOL)showSpecialIDMedal;
- (void)setShowSpecialIDMedal:(BOOL)arg0;
- (double)outerStrokeColorAlpha;
- (void)setOuterStrokeColorAlpha:(double)arg0;
- (void)setPinModeRequired:(BOOL)arg0;
- (double)officialAvatarSize;
- (BOOL)showAvatarBadge;
- (id)avatarBadge;
- (double)avatarBadgeSize;
- (void)setVerticalContentLayout:(BOOL)arg0;
- (void)setEnableClickInteraction:(BOOL)arg0;
- (void)setShouldFillDanmakuChannel:(BOOL)arg0;
- (void)setCarnivalPriority:(long long)arg0;
- (BOOL)avatarNeedVerticalOffset;
- (id)contentOuterStrokeColors;
- (double)avatarLeadingOffset;
- (double)avatarContentSpacing;
- (id)backgroundSkin;
- (void)setAvatarNeedVerticalOffset:(BOOL)arg0;
- (void)setContentOuterStrokeColors:(id)arg0;
- (void)setAvatarContentSpacing:(double)arg0;
- (void)setBackgroundSkin:(id)arg0;
- (long long)atmosphereCols;
- (double)atmosphereSpacingMax;
- (double)atmosphereSpacingMin;
- (double)atmosphereContentHeight;
- (double)mainContentHeight;
- (void)setAtmosphereCols:(long long)arg0;
- (void)setLogoImageURLS:(id)arg0;
- (void)setTailImageURLS:(id)arg0;
- (void)setMessage:(id)arg0;
- (id)init;
- (id)userName;
- (long long)eventTime;
- (struct CGSize { double x0; double x1; })imageSize;
- (void).cxx_destruct;
- (id)image;
- (void)setEventTime:(long long)arg0;
- (void)setUserName:(id)arg0;
- (id)content;
- (id)message;
- (void)setPriority:(unsigned long long)arg0;
- (double)scale;
- (id)contentID;
- (unsigned long long)groupCount;
- (void)setImage:(id)arg0;
- (void)setContent:(id)arg0;
- (id)backgroundColors;
- (long long)qualityScore;
- (id)businessId;
- (void)setGroupCount:(unsigned long long)arg0;
- (void)setScale:(double)arg0;
- (unsigned long long)priority;
- (void)setImageSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setBusinessId:(id)arg0;
- (void)setAvatarImage:(id)arg0;
- (id)avatarImage;
- (struct CGSize { double x0; double x1; })avatarSize;
- (void)setAvatarSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setContentID:(id)arg0;
- (void)setBackgroundColors:(id)arg0;
- (void)setQualityScore:(long long)arg0;
- (double)horizontalSpacing;
- (void)setHorizontalSpacing:(double)arg0;
- (id)templateProvider;
- (void)setTemplateProvider:(id)arg0;

@end
