//
//     Generated by private class-dump
//

@class NSString, NSDictionary, BDXVideoPlayerVideoModel, BDXVideoPlayerConfiguration, UIView, BDXAweVideoPlayerWrapper;
@protocol BDXVideoCorePlayerDelegate;

@interface BDXAwemeVideoCore : NSObject <BDXAweVideoPlayerWrapperDelegate, BDXVideoCorePlayerProtocol> {
    id<BDXVideoCorePlayerDelegate> delegate;
    BDXVideoPlayerConfiguration *_configuration;
    NSDictionary *_logExtraDict;
    double _actionTimestamp;
    BDXAweVideoPlayerWrapper *_player;
    BDXVideoPlayerVideoModel *_videoModel;
    unsigned long long _currentPlayState;
    double _stallStartTimestamp;
    NSString *_networkTypeString;
}

@property (retain, nonatomic) BDXAweVideoPlayerWrapper *player;
@property (retain, nonatomic) BDXVideoPlayerVideoModel *videoModel;
@property (nonatomic) unsigned long long currentPlayState;
@property (nonatomic) double stallStartTimestamp;
@property (copy, nonatomic) NSString *networkTypeString;
@property (retain, nonatomic) BDXVideoPlayerConfiguration *configuration;
@property (copy, nonatomic) NSDictionary *logExtraDict;
@property (nonatomic) double actionTimestamp;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *view;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL repeat;
@property (nonatomic) double volume;
@property (nonatomic) BOOL enableHardDecode;
@property (weak, nonatomic) id<BDXVideoCorePlayerDelegate> delegate;

- (void)player:(id)arg0 playbackFailedWithError:(id)arg1;
- (void)playerDidReadyForDisplay:(id)arg0;
- (void)player:(id)arg0 didChangePlaybackStateWithAction:(long long)arg1;
- (void)player:(id)arg0 didChangeStallState:(long long)arg1;
- (void)playerWillLoopPlaying:(id)arg0;
- (void)player:(id)arg0 playbackFailedForURL:(id)arg1 error:(id)arg2;
- (void)setLogExtraDict:(id)arg0;
- (id)logExtraDict;
- (double)currPlayableDuration;
- (void)setStartPlayTime:(double)arg0;
- (BOOL)enableHardDecode;
- (void)setEnableHardDecode:(BOOL)arg0;
- (double)currPlaybackTime;
- (id)videoModel;
- (void)setVideoModel:(id)arg0;
- (id)playerTypeString;
- (unsigned long long)currentPlayState;
- (void)setCurrentPlayState:(unsigned long long)arg0;
- (void)setStallStartTimestamp:(double)arg0;
- (double)stallStartTimestamp;
- (id)playerNetworkTypeString;
- (id)__createPlayerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1;
- (long long)__scaleModeForVideo;
- (double)actionTimestamp;
- (id)_getVideoPlayAccess;
- (void)setNetworkTypeString:(id)arg0;
- (void)refreshVideoModel:(id)arg0;
- (void)rereshPlayerScale:(id)arg0;
- (void)setActionTimestamp:(double)arg0;
- (BOOL)mute;
- (void).cxx_destruct;
- (double)volume;
- (void)stop;
- (id)networkTypeString;
- (void)setPlayer:(id)arg0;
- (id)delegate;
- (id)configuration;
- (BOOL)isPlaying;
- (void)setVolume:(double)arg0;
- (double)videoDuration;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1;
- (void)pause;
- (id)view;
- (void)setMute:(BOOL)arg0;
- (id)player;
- (void)setConfiguration:(id)arg0;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (struct __CVBuffer { } *)currentPixelBuffer;
- (BOOL)repeat;
- (void)setRepeat:(BOOL)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
