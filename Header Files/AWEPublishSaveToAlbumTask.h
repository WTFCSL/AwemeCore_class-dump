//
//     Generated by private class-dump
//

@class NSTimer, NSString, AWEPublishBaseStage, AWEVideoPublishViewModel, NSError, AWEPublishWaterMarkStage, AWEPublishFlowModel, AWEVideoDraftTracer, AWEPublishTimeTracker, NSNumber;
@protocol ACCPublishServiceSaveAlbumDelegate, ACCSequenceEditServiceProtocol, AWEStudioUserModelProtocol, ACCEditServiceProtocol;

@interface AWEPublishSaveToAlbumTask : AWEPublishBaseTask <AWEPublishStageDelegate, AWEPublishRunnableStageObserver> {
    BOOL _silent;
    BOOL _hasBroken;
    BOOL _parallelEdit;
    BOOL _taskFailed;
    BOOL _enableSkipMerge;
    BOOL _isFeedVideoMergeTask;
    BOOL _forceIgnoreWatermark;
    id<ACCEditServiceProtocol> _editService;
    id<ACCSequenceEditServiceProtocol> _sequenceEditService;
    AWEPublishTimeTracker *_timeTracker;
    id /* block */ _updateSourceModel;
    AWEVideoPublishViewModel *_sourcePublishModel;
    id<ACCPublishServiceSaveAlbumDelegate> _saveAlbumDelegate;
    AWEPublishBaseStage *_mergeStage;
    AWEPublishWaterMarkStage *_waterMarkStage;
    NSTimer *_timer;
    unsigned long long _savePathStyle;
    NSNumber *_saveAlbumFinished;
    NSNumber *_saveCloudAlbumFinished;
    NSNumber *_saveDraftFinished;
    NSString *_saveCloudAlbumFailedText;
    AWEVideoPublishViewModel *_inputModel;
    NSError *_saveError;
    double _startTime;
    double _expectedSaveDuration;
    AWEPublishFlowModel *_flowModel;
    id<AWEStudioUserModelProtocol> _customerWatermarkAuthorInfo;
    AWEVideoDraftTracer *_tracer;
}

@property (retain, nonatomic) AWEPublishBaseStage *mergeStage;
@property (retain, nonatomic) AWEPublishWaterMarkStage *waterMarkStage;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) unsigned long long savePathStyle;
@property (retain, nonatomic) NSNumber *saveAlbumFinished;
@property (retain, nonatomic) NSNumber *saveCloudAlbumFinished;
@property (retain, nonatomic) NSNumber *saveDraftFinished;
@property (copy, nonatomic) NSString *saveCloudAlbumFailedText;
@property (retain, nonatomic) AWEVideoPublishViewModel *inputModel;
@property (retain, nonatomic) NSError *saveError;
@property (nonatomic) BOOL taskFailed;
@property (nonatomic) double startTime;
@property (nonatomic) BOOL enableSkipMerge;
@property (nonatomic) double expectedSaveDuration;
@property (retain, nonatomic) AWEPublishFlowModel *flowModel;
@property (retain, nonatomic) id<AWEStudioUserModelProtocol> customerWatermarkAuthorInfo;
@property (nonatomic) BOOL isFeedVideoMergeTask;
@property (nonatomic) BOOL forceIgnoreWatermark;
@property (retain, nonatomic) AWEVideoDraftTracer *tracer;
@property (nonatomic) BOOL silent;
@property (nonatomic) BOOL hasBroken;
@property (nonatomic) BOOL parallelEdit;
@property (copy, nonatomic) id /* block */ updateSourceModel;
@property (retain, nonatomic) AWEVideoPublishViewModel *sourcePublishModel;
@property (weak, nonatomic) id<ACCPublishServiceSaveAlbumDelegate> saveAlbumDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setCurrentStage:(long long)arg0;
- (void)p_updateProgress:(double)arg0;
- (BOOL)taskFailed;
- (id)editService;
- (void)setEditService:(id)arg0;
- (void)p_showSuccessToast;
- (void)setFlowModel:(id)arg0;
- (id)flowModel;
- (id)sequenceEditService;
- (void)setSequenceEditService:(id)arg0;
- (void)saveDraft:(id /* block */)arg0;
- (void)notifyWillAppend;
- (void)setIsFeedVideoMergeTask:(BOOL)arg0;
- (void)setUpdateSourceModel:(id /* block */)arg0;
- (void)setSourcePublishModel:(id)arg0;
- (id)sourcePublishModel;
- (id /* block */)updateSourceModel;
- (BOOL)isFeedVideoMergeTask;
- (void)setCustomerWatermarkAuthorInfo:(id)arg0;
- (void)setForceIgnoreWatermark:(BOOL)arg0;
- (void)publishStage:(id)arg0 didChangeStatus:(long long)arg1 userInfo:(id)arg2;
- (void)publishStage:(id)arg0 updateProgress:(double)arg1;
- (void)stage:(id)arg0 didChangeStatus:(long long)arg1;
- (void)setParallelEdit:(BOOL)arg0;
- (id)mergeStage;
- (void)setMergeStage:(id)arg0;
- (void)setTaskFailed:(BOOL)arg0;
- (void)willResignActiveNotification:(id)arg0;
- (id)customerWatermarkAuthorInfo;
- (BOOL)parallelEdit;
- (id)waterMarkStage;
- (void)setWaterMarkStage:(id)arg0;
- (void)setSaveAlbumDelegate:(id)arg0;
- (BOOL)forceIgnoreWatermark;
- (void)setHasBroken:(BOOL)arg0;
- (void)setExpectedSaveDuration:(double)arg0;
- (BOOL)p_shouldSaveAlbumWithWatermarkStage;
- (long long)p_getCurrentSaveStyle;
- (void)p_trackImageAlbumDownloadStatusIfNeedWithIsStart:(BOOL)arg0;
- (void)p_startTimerToUpdateProgress;
- (BOOL)p_enableSkipMergeStage;
- (void)setEnableSkipMerge:(BOOL)arg0;
- (BOOL)enableSkipMerge;
- (void)p_didFinishWithUserInfo:(id)arg0;
- (void)p_handleProcessImageStageDoneWithUserInfo:(id)arg0;
- (double)expectedSaveDuration;
- (void)p_didFinishWithSkipMerge;
- (BOOL)p_shouldSaveAlbumWithWatermarkForSourceClip;
- (void)setSavePathStyle:(unsigned long long)arg0;
- (void)setSaveAlbumFinished:(id)arg0;
- (void)setSaveCloudAlbumFinished:(id)arg0;
- (void)setSaveDraftFinished:(id)arg0;
- (void)p_trackDownload;
- (unsigned long long)savePathStyle;
- (void)p_errorAction:(id)arg0;
- (void)p_checkAllSaveTaskDidFinish;
- (void)p_saveToAlbum:(id /* block */)arg0;
- (void)p_saveToCloudAlbumWithInfo:(id)arg0 completion:(id /* block */)arg1;
- (void)p_clearQuickSaveAlbumInfo;
- (void)p_deleteDraftIfNeeded;
- (id)p_trackExtra;
- (id)p_handleCloudAlbumReourceWithInfo:(id)arg0;
- (void)setSaveCloudAlbumFailedText:(id)arg0;
- (BOOL)hasBroken;
- (id)saveAlbumFinished;
- (id)saveCloudAlbumFinished;
- (id)saveDraftFinished;
- (void)p_trackDownloadStatusWithFailedPathInfo:(id)arg0;
- (id)saveCloudAlbumFailedText;
- (id)saveAlbumDelegate;
- (id)timer;
- (id)initWithModel:(id)arg0;
- (void)execute;
- (void)resume;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (void)failWithError:(id)arg0;
- (void)setTimer:(id)arg0;
- (double)startTime;
- (void)dealloc;
- (id)inputModel;
- (void)setInputModel:(id)arg0;
- (id)timeTracker;
- (void)setTimeTracker:(id)arg0;
- (id)tracer;
- (void)setTracer:(id)arg0;
- (id)saveError;
- (void)setSaveError:(id)arg0;
- (BOOL)silent;
- (void)setSilent:(BOOL)arg0;

@end
