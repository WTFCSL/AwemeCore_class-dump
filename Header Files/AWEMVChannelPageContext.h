//
//     Generated by private class-dump
//

@class AWEMVChannelDataController, NSMutableDictionary, AWEMVChannelQualityMonitor, AWEMVChannelWindowPlayView, NSDictionary, AWEMVChannelTracker, UIViewController, AWEMVChannelPerformanceMonitor, NSMutableArray, UIView, NSString, NSMutableSet, AWEMVChannelViewModel;
@protocol AWEAwemeDetailTableViewControllerProtocol, AWEMVChannelAutoPlayCardProtocol;

@interface AWEMVChannelPageContext : AWEPageContext <AWEMVChannelPageContextABProtocol> {
    BOOL _active;
    BOOL _isMute;
    BOOL _shouldPreventPause;
    BOOL _isWindowPlaying;
    BOOL _isShowingRateView;
    BOOL _isShowingDisLikeVC;
    BOOL _isDislikeVCCanShow;
    BOOL _isFromHistoryDetail;
    NSString *_referString;
    NSString *_enterFrom;
    NSString *_enterMethod;
    NSString *_fromPage;
    NSDictionary *_logExtraDict;
    UIViewController *_container;
    UIView<AWEMVChannelAutoPlayCardProtocol> *_activeCardBeforeTransition;
    AWEMVChannelPerformanceMonitor *_perfMonitor;
    AWEMVChannelQualityMonitor *_qualityMonitor;
    AWEMVChannelTracker *_tracker;
    long long _pageState;
    AWEMVChannelDataController *_dataController;
    AWEMVChannelViewModel *_viewModel;
    UIViewController<AWEAwemeDetailTableViewControllerProtocol> *_innerDetailVC;
    NSString *_preloadAwemeIds;
    NSMutableSet *_itemIDs;
    NSMutableSet *_mixIDs;
    NSMutableDictionary *_continuePlayModelDict;
    NSMutableArray *_showIDs;
    NSMutableDictionary *_itemIDMapAutoPlayProgress;
    NSMutableArray *_autoPlayProgressItemIDs;
    NSMutableDictionary *_itemIDMapClickPlayProgress;
    NSMutableArray *_clickPlayProgressItemIDs;
    AWEMVChannelWindowPlayView *_windowPlayView;
    long long _layoutStyle;
    NSMutableDictionary *_itemIDMapStartTime;
    NSMutableArray *_trackedClientShowIDs;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableArray *showIDs;
@property (retain, nonatomic) NSMutableDictionary *itemIDMapStartTime;
@property (retain, nonatomic) NSMutableDictionary *itemIDMapAutoPlayProgress;
@property (retain, nonatomic) NSMutableArray *autoPlayProgressItemIDs;
@property (retain, nonatomic) NSMutableDictionary *itemIDMapClickPlayProgress;
@property (retain, nonatomic) NSMutableArray *clickPlayProgressItemIDs;
@property (retain, nonatomic) NSMutableArray *trackedClientShowIDs;
@property (retain, nonatomic) NSMutableDictionary *continuePlayModelDict;
@property (copy, nonatomic) NSString *referString;
@property (copy, nonatomic) NSString *enterFrom;
@property (copy, nonatomic) NSString *enterMethod;
@property (copy, nonatomic) NSString *fromPage;
@property (nonatomic) BOOL active;
@property (copy, nonatomic) NSDictionary *logExtraDict;
@property (nonatomic) BOOL isMute;
@property (weak, nonatomic) UIViewController *container;
@property (weak, nonatomic) UIView<AWEMVChannelAutoPlayCardProtocol> *activeCardBeforeTransition;
@property (retain, nonatomic) AWEMVChannelPerformanceMonitor *perfMonitor;
@property (retain, nonatomic) AWEMVChannelQualityMonitor *qualityMonitor;
@property (retain, nonatomic) AWEMVChannelTracker *tracker;
@property (nonatomic) long long pageState;
@property (nonatomic) BOOL shouldPreventPause;
@property (retain, nonatomic) AWEMVChannelDataController *dataController;
@property (weak, nonatomic) AWEMVChannelViewModel *viewModel;
@property (weak, nonatomic) UIViewController<AWEAwemeDetailTableViewControllerProtocol> *innerDetailVC;
@property (copy, nonatomic) NSString *preloadAwemeIds;
@property (retain, nonatomic) NSMutableSet *itemIDs;
@property (retain, nonatomic) NSMutableSet *mixIDs;
@property (nonatomic) BOOL isWindowPlaying;
@property (weak, nonatomic) AWEMVChannelWindowPlayView *windowPlayView;
@property (nonatomic) BOOL isShowingRateView;
@property (nonatomic) BOOL isShowingDisLikeVC;
@property (nonatomic) BOOL isDislikeVCCanShow;
@property (nonatomic) BOOL isFromHistoryDetail;
@property (nonatomic) long long layoutStyle;

+ (Class)aAWEPadModuleAdapterClass;
+ (id)cacheConfig;
+ (long long)jumpStyle;
+ (BOOL)enableAutoRefresh;
+ (double)autoRefreshTime;
+ (BOOL)awe_enableRefreshUIOpt;
+ (BOOL)enableInnerPreload;
+ (BOOL)isSingleColumn;
+ (unsigned long long)awe_launchPlayOptType;
+ (long long)enableMixAlbumForChannel;
+ (long long)pageLayoutType;
+ (BOOL)isNewStyleForMoreButton;
+ (BOOL)enableSkeletonOpt;
+ (BOOL)enableCardUIOptHideAvatarAndCannotDigg;
+ (BOOL)awe_enableChannelTitleDisplayOpt;
+ (id)mvchannelPlacerRevisitVideoConfig;
+ (double)forceInsertTimeOut;
+ (long long)smallCardCount;
+ (id)mvchannelRevisitVideoStorageKey;
+ (long long)awe_channelCachePreloadStrategy;
+ (double)awe_channelCachePreloadValidTime;
+ (long long)innerPreloadCount;
+ (id)cardLayoutConfig;
+ (long long)portraitCardCount;
+ (long long)horizontalCardCount;
+ (id)autoRefreshConfig;
+ (long long)strategyForFirstRenderCache;
+ (id)refreshConfigs;
+ (id)preloadConfigs;
+ (long long)awe_firstScreenBigCardCount;
+ (id)mvchannelVideoSourcePlacerRevisitVideo;
+ (id)channelCachePreloadConfig;
+ (id)smallCardVideoPreloadConfig;
+ (id)supportAwemeType;
+ (BOOL)appendCache;
+ (BOOL)enableFirstRenderCache;
+ (BOOL)enableFeedReadyReadDisk;
+ (BOOL)enableFirstRenderCachePrefetchImage;
+ (BOOL)enableInsertCompatibleCache;
+ (BOOL)enableRefreshUseCacheData;
+ (double)refreshDelayTime;
+ (BOOL)enableWindowPlay;
+ (long long)windowPlayStyle;
+ (long long)limitedDayShouldShowWindowPlay;
+ (long long)limitedCountShouldShowWindowPlay;
+ (BOOL)enableLoadMoreOpt;
+ (BOOL)enableAutoEnterLandscape;
+ (BOOL)enableBigCardPlayerOptV1;
+ (BOOL)enableBigCardPlayerOptV2;
+ (BOOL)enableCardUIOptHideAvatar;
+ (BOOL)enableCardUIOptV2CornerRadiusAndSpacing;
+ (BOOL)awe_enableOptFoundation;
+ (BOOL)enableFixDismissWindowOffset;
+ (BOOL)enableNewFreshPriorityOpt;
+ (BOOL)awe_enableChannelIdlePreload;
+ (BOOL)awe_enableMVChannelSuperResolution;
+ (long long)awe_smallCardVideoPreloadType;
+ (long long)awe_smallCardVideoPreloadMaxValue;
+ (double)awe_smallCardVideoPreloadEndScrollDelayTime;
+ (BOOL)awe_isSupportSmallCardPreload:(id)arg0;
+ (BOOL)channelPinTopEnable;
+ (BOOL)enableFixLoading;
+ (id)config;
+ (double)cacheExpirationTime;
+ (id)tabName;

- (id)referString;
- (void)setEnterFrom:(id)arg0;
- (void)setEnterMethod:(id)arg0;
- (id)enterMethod;
- (void)setReferString:(id)arg0;
- (void)setLogExtraDict:(id)arg0;
- (id)logExtraDict;
- (id)enterFrom;
- (id)aAWEPadModuleAdapter;
- (void)setDataController:(id)arg0;
- (BOOL)shouldPreventPause;
- (void)setShouldPreventPause:(BOOL)arg0;
- (void)setFromPage:(id)arg0;
- (void)setIsMute:(BOOL)arg0;
- (BOOL)isWindowPlaying;
- (void)setIsWindowPlaying:(BOOL)arg0;
- (void)setPerfMonitor:(id)arg0;
- (id)preloadAwemeIds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentSafeRect;
- (void)setInnerDetailVC:(id)arg0;
- (double)startPlayTimeWithModel:(id)arg0;
- (id)windowPlayView;
- (void)recordPlayTime:(double)arg0 itemID:(id)arg1;
- (BOOL)isUsingCache;
- (BOOL)hasTrackedClientShowWithItemID:(id)arg0;
- (void)recordTrackedClientShowWithItemID:(id)arg0;
- (void)recordPlayProgress:(id)arg0 itemID:(id)arg1 isAuto:(BOOL)arg2;
- (id)innerDetailVC;
- (id)mixIDs;
- (id)showedIDsString;
- (id)playProgressStrings;
- (void)setIsShowingRateView:(BOOL)arg0;
- (BOOL)isShowingRateView;
- (BOOL)isUsingNewLandscapeTransition;
- (id)showIDs;
- (id)continuePlayModelDict;
- (id)itemIDMapStartTime;
- (BOOL)isShowingDisLikeVC;
- (id)itemIDMapAutoPlayProgress;
- (id)itemIDMapClickPlayProgress;
- (id)autoPlayProgressItemIDs;
- (id)clickPlayProgressItemIDs;
- (id)trackedClientShowIDs;
- (BOOL)isFromHistoryDetail;
- (void)setShowedID:(id)arg0;
- (void)removeAllShowIDs;
- (void)recordContinuePlayDictWithItemID:(id)arg0 continuePlayModel:(id)arg1;
- (BOOL)isAllowToPlayNextEpisodeWithModel:(id)arg0;
- (void)removeAllPlayProgress;
- (void)clearClientShowRecord;
- (id)perfMonitor;
- (BOOL)isNormalPageState;
- (id)activeCardBeforeTransition;
- (void)setActiveCardBeforeTransition:(id)arg0;
- (void)setPreloadAwemeIds:(id)arg0;
- (void)setMixIDs:(id)arg0;
- (void)setContinuePlayModelDict:(id)arg0;
- (void)setShowIDs:(id)arg0;
- (void)setItemIDMapAutoPlayProgress:(id)arg0;
- (void)setAutoPlayProgressItemIDs:(id)arg0;
- (void)setItemIDMapClickPlayProgress:(id)arg0;
- (void)setClickPlayProgressItemIDs:(id)arg0;
- (void)setWindowPlayView:(id)arg0;
- (void)setIsShowingDisLikeVC:(BOOL)arg0;
- (BOOL)isDislikeVCCanShow;
- (void)setIsDislikeVCCanShow:(BOOL)arg0;
- (void)setIsFromHistoryDetail:(BOOL)arg0;
- (void)setItemIDMapStartTime:(id)arg0;
- (void)setTrackedClientShowIDs:(id)arg0;
- (id)container;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (id)init;
- (long long)layoutStyle;
- (void)setLayoutStyle:(long long)arg0;
- (BOOL)active;
- (void).cxx_destruct;
- (void)setContainer:(id)arg0;
- (void)setViewModel:(id)arg0;
- (id)viewModel;
- (void)setActive:(BOOL)arg0;
- (id)itemIDs;
- (void)setItemIDs:(id)arg0;
- (id)dataController;
- (long long)pageState;
- (void)setPageState:(long long)arg0;
- (BOOL)isMute;
- (id)fromPage;
- (id)qualityMonitor;
- (void)setQualityMonitor:(id)arg0;

@end
