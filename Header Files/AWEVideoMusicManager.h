//
//     Generated by private class-dump
//

@class NSString;

@interface AWEVideoMusicManager : NSObject <AWEVideoMusicManager>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)fetchLocalURLForMusic:(id)arg0 withProgress:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (BOOL)downloadedMusic:(id)arg0;
+ (id)localURLForMusic:(id)arg0;
+ (id)localLyricURLForMusic:(id)arg0;
+ (void)fetchLocalURLForMusic:(id)arg0 enableDownloadOpt:(BOOL)arg1 withProgress:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 extraTrack:(id)arg2 withProgress:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 withProgress:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 enableDownloadOpt:(BOOL)arg2 withProgress:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)downloadMusicModel:(id)arg0 params:(id)arg1 extraTrack:(id)arg2 progress:(id /* block */)arg3 playingHandler:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (void)downloadMusicBeats:(id)arg0 completion:(id /* block */)arg1;
+ (void)requestMusicItemWithID:(id)arg0 completion:(id /* block */)arg1;
+ (void)requestMusicItemWithID:(id)arg0 additionalParams:(id)arg1 completion:(id /* block */)arg2;
+ (void)requestCollectingMusicsWithCursor:(id)arg0 count:(id)arg1 channelID:(id)arg2 isCommerce:(BOOL)arg3 completion:(id /* block */)arg4;
+ (void)refreshMusicItem:(id)arg0 completion:(id /* block */)arg1;
+ (void)requestCollectingAWEMusicWithID:(id)arg0 type:(unsigned long long)arg1 completion:(id /* block */)arg2;
+ (void)dislikeMusicWithMusicID:(id)arg0 channelID:(id)arg1 completion:(id /* block */)arg2;
+ (void)fetchImageMusicBeatsLocalURLWithMusic:(id)arg0 withProgress:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (BOOL)isMusicSupportBeats:(id)arg0;
+ (void)clearMusicCache;
+ (void)cleanMusicCacheByLRU:(long long)arg0 completion:(id /* block */)arg1;
+ (id)createDirIfNotExist;
+ (id)fileExtensionWithURLList:(id)arg0;
+ (id)fileNameWithURLList:(id)arg0;
+ (id)musicDirectorPath;
+ (void)fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 enableDownloadOpt:(BOOL)arg2 extraTrack:(id)arg3 withProgress:(id /* block */)arg4 completion:(id /* block */)arg5;
+ (id)musicErrorWithLocalizedDescription:(id)arg0;
+ (BOOL)p_isMusicDownloaded:(id)arg0 lyricURL:(id)arg1;
+ (id)downloadingMusicList;
+ (void)p_fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 enableDownloadOpt:(BOOL)arg2 withProgress:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)optimized_fetchLocalURLForMusic:(id)arg0 lyricURL:(id)arg1 enableDownloadOpt:(BOOL)arg2 withProgress:(id /* block */)arg3 completion:(id /* block */)arg4;
+ (void)_fetchBeatsLocalURLWithType:(unsigned long long)arg0 forMusic:(id)arg1 withProgress:(id /* block */)arg2 completion:(id /* block */)arg3;
+ (void)_fetchLocalURLForMusic:(id)arg0 withProgress:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (id)copyPlayerMusicCacheIfNeedWithMuisc:(id)arg0;
+ (id)musicBeatsArray:(id)arg0;
+ (void)p_downloadMusicWithURLs:(id)arg0 destinationURL:(id)arg1 progress:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
+ (id)imageMusicBeatsUrlListFromMusic:(id)arg0;
+ (id)beatsArrayFromLocalURL:(id)arg0 error:(id *)arg1;
+ (id)beatsArrayFromData:(id)arg0 error:(id *)arg1;
+ (void)p__fetchImageMusicBeatsLocalURLWithMusic:(id)arg0 withProgress:(id /* block */)arg1 completion:(id /* block */)arg2;
+ (id)beatsArrayFromString:(id)arg0 error:(id *)arg1;
+ (id)getMusicFileAttributeList:(id)arg0;
+ (void)removeFileWithList:(id)arg0;
+ (BOOL)p_isURLDownloaded:(id)arg0;
+ (BOOL)_hasStrongBeat:(id)arg0;
+ (id)localMusicFolderPath;

- (void)stream_cancelDownloadMusicModel:(id)arg0;

@end
