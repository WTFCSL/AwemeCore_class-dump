//
//     Generated by private class-dump
//

@class BDPModel, BDPUniqueID, NSString;
@protocol BDPKVInterface, BDPCookieStorageInterface;

@interface BDPSandbox : NSObject {
    id<BDPKVInterface> _localStorage;
    id<BDPKVInterface> _localStorageBackup;
    id<BDPKVInterface> _privateStorage;
    id<BDPKVInterface> _privateStorageBackup;
    id<BDPCookieStorageInterface> _cookieJar;
    id<BDPCookieStorageInterface> _cookieJarBackup;
    NSString *_pkgPath;
    NSString *_tmpPath;
    NSString *_userPath;
    BDPModel *_model;
    BDPUniqueID *_uniqueID;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _lock;
}

@property (retain, nonatomic) id<BDPKVInterface> localStorage;
@property (retain, nonatomic) id<BDPKVInterface> localStorageBackup;
@property (retain, nonatomic) id<BDPKVInterface> privateStorage;
@property (retain, nonatomic) id<BDPKVInterface> privateStorageBackup;
@property (retain, nonatomic) id<BDPCookieStorageInterface> cookieJar;
@property (retain, nonatomic) id<BDPCookieStorageInterface> cookieJarBackup;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) BDPModel *model;
@property (nonatomic) struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } lock;
@property (readonly, copy, nonatomic) NSString *pkgPath;
@property (readonly, copy, nonatomic) NSString *tmpPath;
@property (readonly, copy, nonatomic) NSString *userPath;
@property (readonly, copy, nonatomic) NSString *appId;
@property (readonly, nonatomic) long long type;

- (BOOL)hasWriteRightsForPath:(id)arg0;
- (BOOL)hasWriteRightsBelowFolderPath:(id)arg0;
- (BOOL)hasAccessRightsForPath:(id)arg0;
- (id)pkgPath;
- (void)setupStorageIfNeeded;
- (id)cookieJar;
- (id)cookieJarBackup;
- (id)privateStorageBackup;
- (id)localStorageBackup;
- (void)setLocalStorageBackup:(id)arg0;
- (void)setPrivateStorageBackup:(id)arg0;
- (void)setCookieJar:(id)arg0;
- (void)setCookieJarBackup:(id)arg0;
- (id)initWithModel:(id)arg0;
- (void)setModel:(id)arg0;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (id)model;
- (long long)type;
- (id)privateStorage;
- (id)tmpPath;
- (struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })lock;
- (void)setPrivateStorage:(id)arg0;
- (id)appId;
- (void)setLock:(struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })arg0;
- (id)userPath;
- (id)initWithUniqueID:(id)arg0;
- (void)updateWithModel:(id)arg0;
- (id)localStorage;
- (void)setLocalStorage:(id)arg0;

@end
