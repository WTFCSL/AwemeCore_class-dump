//
//     Generated by private class-dump
//

@class NSString, UIView;
@protocol IESLiveEZDanmakuViewProtocol, IESLiveEZDanmakuSpiritDelegate;

@interface IESLiveEZDanmakuSpirit : NSObject {
    BOOL _forceUsePreferredDispatcher;
    BOOL _activated;
    id<IESLiveEZDanmakuSpiritDelegate> _delegate;
    NSString *_viewClassName;
    NSString *_preferredDispatcherClassName;
    double _baseDuration;
    double _activateTime;
    double _delayTime;
    UIView<IESLiveEZDanmakuViewProtocol> *_danmakuView;
    id _danmakuViewModel;
    long long _priority;
}

@property (weak, nonatomic) id<IESLiveEZDanmakuSpiritDelegate> delegate;
@property (copy, nonatomic) NSString *viewClassName;
@property (copy, nonatomic) NSString *preferredDispatcherClassName;
@property (nonatomic) BOOL forceUsePreferredDispatcher;
@property (nonatomic) double baseDuration;
@property (nonatomic) double activateTime;
@property (nonatomic) double delayTime;
@property (readonly, nonatomic, getter=isActivated) BOOL activated;
@property (retain, nonatomic) UIView<IESLiveEZDanmakuViewProtocol> *danmakuView;
@property (retain, nonatomic) id danmakuViewModel;
@property (nonatomic) long long priority;

- (void)deactive;
- (double)activateTime;
- (void)setActivateTime:(double)arg0;
- (id)danmakuView;
- (void)setDanmakuView:(id)arg0;
- (id)danmakuViewModel;
- (void)setDanmakuViewModel:(id)arg0;
- (void)setPreferredDispatcherClassName:(id)arg0;
- (void)setBaseDuration:(double)arg0;
- (void)updateWithTime:(double)arg0;
- (void)activeWithContext:(id)arg0;
- (id)preferredDispatcherClassName;
- (BOOL)forceUsePreferredDispatcher;
- (BOOL)respondTouchPoint:(struct CGPoint { double x0; double x1; })arg0 event:(id)arg1;
- (void)setForceUsePreferredDispatcher:(BOOL)arg0;
- (BOOL)isActivated;
- (void).cxx_destruct;
- (double)baseDuration;
- (void)setPriority:(long long)arg0;
- (void)setDelayTime:(double)arg0;
- (double)delayTime;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (long long)priority;
- (id)viewClassName;
- (void)setViewClassName:(id)arg0;

@end
