//
//     Generated by private class-dump
//

@class NSString, CIContext, IESGLesProgramCache, IESQueue, VEBlockChecker, HTSGLFramebufferCache, EAGLContext, NSMutableArray, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface HTSGLContext : IESMMObject <VEAppStatusProtocol> {
    IESQueue *_glesContextQueue;
    struct shared_ptr<TESharedGLContext> { struct TESharedGLContext *__ptr_; struct __shared_weak_count *__cntrl_; } _cppContext;
    CIContext *_globalContext;
    struct shared_ptr<TERenderContext> { struct TERenderContext *__ptr_; struct __shared_weak_count *__cntrl_; } _renderContext;
    BOOL _isInBackground;
    BOOL _isMultiCtxtEnable;
    BOOL _enableRenderLib;
    BOOL _enableAgfxContext;
    BOOL _enableAgfxMetal;
    NSObject<OS_dispatch_queue> *_contextQueue;
    HTSGLFramebufferCache *_framebufferCache;
    NSObject<OS_dispatch_semaphore> *_sem;
    IESGLesProgramCache *_programCache;
    VEBlockChecker *_blockChecker;
    NSString *_sencekey;
    HTSGLContext *_mainGLContext;
    NSMutableArray *_frameBufferIdTrash;
    NSMutableArray *_renderBufferIdTrash;
    NSMutableArray *_textureIdTrash;
    long long _gbuRefCnt;
}

@property (retain, nonatomic) NSMutableArray *frameBufferIdTrash;
@property (retain, nonatomic) NSMutableArray *renderBufferIdTrash;
@property (retain, nonatomic) NSMutableArray *textureIdTrash;
@property (nonatomic) long long gbuRefCnt;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *sem;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *contextQueue;
@property (readonly, retain, nonatomic) EAGLContext *context;
@property (readonly) struct __CVOpenGLESTextureCache { } *coreVideoTextureCache;
@property (readonly) HTSGLFramebufferCache *framebufferCache;
@property (readonly) IESGLesProgramCache *programCache;
@property (readonly, nonatomic) BOOL isInBackground;
@property (retain, nonatomic) VEBlockChecker *blockChecker;
@property (retain, nonatomic) NSString *sencekey;
@property (readonly, nonatomic) BOOL isMultiCtxtEnable;
@property (readonly, nonatomic) BOOL enableRenderLib;
@property (readonly, nonatomic) BOOL enableAgfxContext;
@property (readonly, nonatomic) BOOL enableAgfxMetal;
@property (weak, nonatomic) HTSGLContext *mainGLContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedImageProcessingContext;
+ (BOOL)deviceSupportsOpenGLESExtension:(id)arg0;
+ (int)maximumTextureSizeForThisDevice;
+ (int)maximumTextureUnitsForThisDevice;
+ (int)maximumVaryingVectorsForThisDevice;
+ (BOOL)deviceSupportsRedTextures;
+ (BOOL)deviceSupportsFramebufferReads;
+ (struct CGSize { double x0; double x1; })sizeThatFitsWithinATextureForSize:(struct CGSize { double x0; double x1; })arg0;
+ (BOOL)supportsFastTextureUpload;
+ (BOOL)isSupportGLES30AndCreateGLESContextOnAppLoad:(BOOL)arg0;
+ (void)setCheckOpenGLES3:(BOOL)arg0;
+ (id)innerMainProcessingContext;
+ (id)innerShareProcesingContext;
+ (BOOL)checkContextValid;
+ (id)defaultImageProcessingContext;
+ (BOOL)checkOpenGLES3;
+ (id)cicontextWithOptions:(id)arg0;
+ (id)getMetalDevice;
+ (id)shareProcesingContext;
+ (void)preloadGLContext;
+ (BOOL)isSupportGLES30AndCreateGLESContext;
+ (id)fetchProcessingContext:(id)arg0 teContextQueue:(void *)arg1;
+ (BOOL)isMainProcessingContextExisted;
+ (id)cicontextWithEAGLContext:(id)arg0;
+ (id)sceneKeyForCompile:(id)arg0 isMainCtxt:(BOOL)arg1;
+ (id)sceneKeyForEditor:(id)arg0 isMainCtxt:(BOOL)arg1;
+ (id)sceneKeyForRecorder:(id)arg0 isMainCtxt:(BOOL)arg1;
+ (id)getLatestSceneKeyForRecorder:(BOOL)arg0;
+ (void)clearHTSGLContext:(id)arg0;
+ (id)createHTSGLContext:(id)arg0;

- (id)contextQueue;
- (void)releaseContext;
- (void)presentBufferForDisplay;
- (struct __CVOpenGLESTextureCache { } *)coreVideoTextureCache;
- (id)framebufferCache;
- (id)init:(id)arg0 teContextQueue:(void *)arg1;
- (BOOL)enableAgfxContext;
- (BOOL)isContextExist;
- (void)flushCacheFrameBuffersWithGBURefCnt;
- (BOOL)enableRenderLib;
- (void)clearTrash;
- (id)frameBufferIdTrash;
- (id)renderBufferIdTrash;
- (id)textureIdTrash;
- (int)checkErrorWithMessage:(id)arg0;
- (id)sencekey;
- (void *)getCppContext;
- (void)resetContextWithGBURefCnt;
- (void)addGBURefCnt;
- (void)subGBURefCnt;
- (void)flushCacheFrameBuffers;
- (void)disableCacheFrameBuffers;
- (struct CGSize { double x0; double x1; })maxRenderSize;
- (void)addFramebufferIdToBeDeleted:(unsigned int)arg0;
- (void)addRenderbufferIdToBeDeleted:(unsigned int)arg0;
- (void)addTextureIdToBeDeleted:(unsigned int)arg0;
- (BOOL)isGLES3Supported;
- (BOOL)isTextureCacheExist;
- (id)getCIContext;
- (id)programCache;
- (id)blockChecker;
- (void)setBlockChecker:(id)arg0;
- (void)setSencekey:(id)arg0;
- (BOOL)isMultiCtxtEnable;
- (BOOL)enableAgfxMetal;
- (id)mainGLContext;
- (void)setMainGLContext:(id)arg0;
- (void)setFrameBufferIdTrash:(id)arg0;
- (void)setRenderBufferIdTrash:(id)arg0;
- (void)setTextureIdTrash:(id)arg0;
- (long long)gbuRefCnt;
- (void)setGbuRefCnt:(long long)arg0;
- (id)sem;
- (void)becomeActive;
- (id)init;
- (void).cxx_destruct;
- (void)flush;
- (void)resignActive;
- (void)finish;
- (id)init:(id)arg0;
- (void)enterBackground;
- (id)context;
- (BOOL)isInBackground;
- (void)enterForeground;
- (void)setSem:(id)arg0;
- (void)dealloc;
- (void)unbind;
- (id).cxx_construct;
- (void)resetContext;
- (void *)contextKey;
- (void)memoryWarning;
- (void)bind:(BOOL)arg0;

@end
