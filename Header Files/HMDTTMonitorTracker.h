//
//     Generated by private class-dump
//

@class NSLock, NSString, NSArray, HMDGCDTimer, HMDMonitorDataManager, HMDReportLimitSizeTool, HMDTTMonitorCounter, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface HMDTTMonitorTracker : NSObject <HMDPerformanceReporterDataSource, HMDTTMonitorOfflineCheckPointProtocol, HMDTTMonitorTraceProtocol, HMDTTMonitorTracker> {
    double _startTimestamp;
    BOOL ignoreLogType;
    BOOL _needStopRepeating;
    BOOL _needDeleteRecordsFromDB;
    BOOL _hasNewData;
    HMDMonitorDataManager *_dataManager;
    NSMutableArray *_trackersArray;
    NSMutableArray *_metricsArray;
    NSMutableArray *_trackersCacheArray;
    NSObject<OS_dispatch_queue> *_syncQueue;
    long long _hmdCountLimit;
    NSArray *_normalCondition;
    NSArray *_metricCountCondition;
    NSArray *_metricTimerCondition;
    HMDReportLimitSizeTool *_sizeLimitTool;
    NSMutableArray *_recordCache;
    HMDTTMonitorCounter *_counter;
    HMDGCDTimer *_GCDTimer;
    unsigned long long _uploadingCountFromMemory;
    unsigned long long _insertIndex;
    NSLock *_lock;
    struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } _uploadingRange;
    struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } _metricCountRange;
    struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } _metricTimerRange;
}

@property (nonatomic) long long hmdCountLimit;
@property (retain) NSArray *normalCondition;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; } uploadingRange;
@property (retain, nonatomic) HMDMonitorDataManager *dataManager;
@property (retain, nonatomic) NSMutableArray *trackersArray;
@property (retain, nonatomic) NSMutableArray *metricsArray;
@property (retain, nonatomic) NSMutableArray *trackersCacheArray;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } uploadingRange;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } metricCountRange;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } metricTimerRange;
@property (nonatomic) long long hmdCountLimit;
@property (retain) NSArray *normalCondition;
@property (retain) NSArray *metricCountCondition;
@property (retain) NSArray *metricTimerCondition;
@property (retain, nonatomic) HMDReportLimitSizeTool *sizeLimitTool;
@property (retain, nonatomic) NSMutableArray *recordCache;
@property (retain, nonatomic) HMDTTMonitorCounter *counter;
@property (retain, nonatomic) HMDGCDTimer *GCDTimer;
@property (nonatomic) BOOL needStopRepeating;
@property (nonatomic) BOOL needDeleteRecordsFromDB;
@property (nonatomic) unsigned long long uploadingCountFromMemory;
@property (nonatomic) unsigned long long insertIndex;
@property (nonatomic) BOOL hasNewData;
@property (retain, nonatomic) NSLock *lock;
@property (retain, nonatomic) HMDMonitorDataManager *dataManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL ignoreLogType;

+ (id)globalSyncQueue;
+ (void)setUseShareQueueStrategy:(BOOL)arg0;

- (id)customConfig;
- (BOOL)performanceDataSource;
- (void)cleanupWithConfig:(id)arg0;
- (void)setInsertIndex:(unsigned long long)arg0;
- (void)setHasNewData:(BOOL)arg0;
- (unsigned long long)insertIndex;
- (void)performanceDataSaveImmediately;
- (BOOL)hasNewData;
- (void)setupWithHeimdallrReportSizeLimit:(id)arg0;
- (id)sizeLimitTool;
- (id)initMonitorWithAppID:(id)arg0 injectedInfo:(id)arg1;
- (BOOL)logTypeEnabled:(id)arg0;
- (BOOL)serviceTypeEnabled:(id)arg0;
- (void)dropAllDataForServerState;
- (unsigned long long)reporterPriority;
- (id)performanceDataWithCountLimit:(long long)arg0;
- (id)metricCountPerformanceData;
- (id)metricTimerPerformanceData;
- (id)debugRealPerformanceDataWithConfig:(id)arg0;
- (void)cleanupPerformanceDataWithConfig:(id)arg0;
- (void)performanceDataDidReportSuccess:(BOOL)arg0;
- (id)performanceCacheDataImmediatelyUpload;
- (id)performanceDataWithLimitSize:(unsigned long long)arg0 limitCount:(long long)arg1 currentSize:(unsigned long long *)arg2;
- (void)performanceSizeLimitedDataDidReportSuccess:(BOOL)arg0;
- (void)saveEventDataToDiskWhenEnterBackground;
- (void)dropAllDataForServerStateWithAid:(id)arg0;
- (void)cleanupNotUploadAndReportedPerformanceData;
- (void)setUploadingRange:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0;
- (struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })uploadingRange;
- (id)GCDTimer;
- (void)setTrackersArray:(id)arg0;
- (void)setMetricsArray:(id)arg0;
- (void)setTrackersCacheArray:(id)arg0;
- (void)insertRecordCacheIntoTrackersArrayIfNeeded;
- (void)tracksCountChangedWithSyncWrite:(BOOL)arg0;
- (void)setGCDTimer:(id)arg0;
- (id)trackersArray;
- (void)setSizeLimitTool:(id)arg0;
- (void)recordGeneratedCheckPointWithlogType:(id)arg0 serviceType:(id)arg1 appID:(id)arg2 actionType:(unsigned long long)arg3 uniqueCode:(long long)arg4;
- (void)setMovingLineAndNeedUploadForRecord:(id)arg0;
- (void)cleanupTrackersArrayToThreshold;
- (id)trackersCacheArray;
- (void)hmd_uploadMonitorDataImmediatelyWithRetryCount:(long long)arg0;
- (id)metricsArray;
- (id)getTracksDataWithRecords:(id)arg0;
- (void)recordSavedCheckPointWithRecords:(id)arg0 success:(BOOL)arg1 memoryDB:(BOOL)arg2 appID:(id)arg3;
- (BOOL)needUploadWithLogTypeStr:(id)arg0 serviceType:(id)arg1 data:(id)arg2;
- (BOOL)ignoreLogType;
- (void)recordFetchedCheckPointWithRecords:(id)arg0 appID:(id)arg1;
- (Class)metricStoreClass;
- (void)setMetricCountRange:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0;
- (void)setMetricCountCondition:(id)arg0;
- (id)getMetricDataWithRecords:(id)arg0;
- (void)setMetricTimerRange:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0;
- (void)setMetricTimerCondition:(id)arg0;
- (BOOL)needStopRepeating;
- (id)normalCondition;
- (Class)trackerStoreClass;
- (BOOL)cleanupRecords:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0 andConditions:(id)arg1 storeClass:(Class)arg2;
- (void)setNeedStopRepeating:(BOOL)arg0;
- (void)setHmdCountLimit:(long long)arg0;
- (long long)hmdCountLimit;
- (id)fetchTTMonitorRecordsStartTime:(double)arg0 endTime:(double)arg1 limitCount:(long long)arg2;
- (void)setUploadingCountFromMemory:(unsigned long long)arg0;
- (void)setNormalCondition:(id)arg0;
- (void)setNeedDeleteRecordsFromDB:(BOOL)arg0;
- (unsigned long long)uploadingCountFromMemory;
- (BOOL)needDeleteRecordsFromDB;
- (void)removebjects:(id)arg0 WithAid:(id)arg1;
- (void)trackDataWithParam:(id)arg0;
- (void)countEvent:(id)arg0 label:(id)arg1 value:(float)arg2 needAggregate:(BOOL)arg3 appID:(id)arg4;
- (void)timerEvent:(id)arg0 label:(id)arg1 value:(float)arg2 needAggregate:(BOOL)arg3 appID:(id)arg4;
- (BOOL)needUploadWithlogTypeStr:(id)arg0 serviceType:(id)arg1;
- (BOOL)isHighPriorityWithLogType:(id)arg0 serviceType:(id)arg1;
- (BOOL)ttmonitorConfigurationAvailable;
- (void)setIgnoreLogType:(BOOL)arg0;
- (struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })metricCountRange;
- (struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })metricTimerRange;
- (id)metricCountCondition;
- (id)metricTimerCondition;
- (id)dataManager;
- (id)syncQueue;
- (void).cxx_destruct;
- (void)setRecordCache:(id)arg0;
- (id)recordCache;
- (void)setDataManager:(id)arg0;
- (void)setCounter:(id)arg0;
- (void)setSyncQueue:(id)arg0;
- (id)lock;
- (void)willResignActive:(id)arg0;
- (id)counter;
- (void)dealloc;
- (void)setLock:(id)arg0;

@end
