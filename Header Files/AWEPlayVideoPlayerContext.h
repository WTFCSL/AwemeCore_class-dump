//
//     Generated by private class-dump
//

@class AWEAwemeModel, NSString, NSTimer, NSArray, HTSTimingTracker, NSMutableDictionary, NSDictionary, NSNumber;
@protocol AWEPlayVideoDelegate;

@interface AWEPlayVideoPlayerContext : NSObject {
    BOOL _shouldAdaptFullScreen;
    BOOL _hasReportClickEnter;
    BOOL _useNormalCover;
    BOOL _previousKeepAlive;
    BOOL _isPlayFailedShown;
    BOOL _finishLogged;
    BOOL _albumFinishLogged;
    BOOL _isReadyForDisplay;
    BOOL _isPlayStarted;
    BOOL _hasBlockBeforeStart;
    BOOL _isPlaybackFailed;
    BOOL _alreadyRecordPlayCompletion;
    BOOL _shouldDiscardReport;
    BOOL _blockedWithAlertView;
    BOOL _isPlayerInStall;
    BOOL _pauseBySingleClick;
    BOOL _shouldPreventTrackPlayTime;
    BOOL _isCDNURLExpired;
    BOOL _coverImageLoaded;
    BOOL _earPhone;
    BOOL _shouldShowCoverWhenSeekToTime;
    BOOL _isResourceRecallEnabled;
    BOOL _enableHDR;
    BOOL _hasPreCreatedPlayer;
    BOOL _repeated;
    BOOL _mute;
    double _time;
    id<AWEPlayVideoDelegate> _playerDelegate;
    AWEAwemeModel *_model;
    long long _playState;
    long long _previousPlayState;
    long long _loopTimes;
    double _currentPlaybackTime;
    double _totalPlayTime;
    NSNumber *_videoDuration;
    double _defaultSeekToTime;
    long long _coverContentMode;
    NSString *_referString;
    NSString *_enterFrom;
    NSString *_reactId;
    NSDictionary *_logExtraDict;
    NSNumber *_slideType;
    NSString *_adEventName;
    NSDictionary *_adExtraData;
    NSString *_ruleId;
    NSNumber *_clickEnter;
    NSDictionary *_context;
    NSTimer *_bufferingChecktimer;
    double _playStartTimestamp;
    double _stallStartTimestamp;
    HTSTimingTracker *_timingTracker;
    NSNumber *_calcBitrate;
    unsigned long long _stallCount;
    double _stallTotalDuration;
    NSTimer *_volumeSyncTimer;
    double _playStartSystemVolumn;
    NSDictionary *_avOutsyncInfo;
    double _outsyncBegin;
    NSString *_connectMethod;
    NSString *_enterMethodForTrack;
    NSMutableDictionary *_playIndexDic;
    unsigned long long _totalStallCount;
    double _totalStallTotalDuration;
    NSDictionary *_firstFrameTimestamp;
    NSNumber *_playbackTimeWhenStop;
    NSDictionary *_contextInfoWhenStop;
    NSArray *_playURLs;
    long long _preloadSize;
    NSTimer *_videoPlayCheckTimer;
    long long _currentVideoCheckCount;
    double _lastPlayTimestamp;
    NSDictionary *_playVideoQualityExtraInfo;
    NSDictionary *_videoPlayEndParams;
    NSString *_searchVideoMethod;
    NSNumber *_qualityType;
    NSTimer *_videoBufferTimer;
    NSString *_pageType;
    NSString *_cityInfoString;
    long long _playType;
    NSString *_originEntryEnterMethod;
    double _playVideoDuration;
    double _currPlaybackTime;
    double _currPlayableDuration;
    long long _scalingMode;
    double _volume;
}

@property (nonatomic) double time;
@property (weak, nonatomic) id<AWEPlayVideoDelegate> playerDelegate;
@property (retain, nonatomic) AWEAwemeModel *model;
@property (nonatomic) long long playState;
@property (nonatomic) long long previousPlayState;
@property (nonatomic) long long loopTimes;
@property (nonatomic) double currentPlaybackTime;
@property (nonatomic) double totalPlayTime;
@property (retain, nonatomic) NSNumber *videoDuration;
@property (nonatomic) double defaultSeekToTime;
@property (nonatomic) long long coverContentMode;
@property (nonatomic) BOOL shouldAdaptFullScreen;
@property (retain, nonatomic) NSString *referString;
@property (copy, nonatomic) NSString *enterFrom;
@property (copy, nonatomic) NSString *reactId;
@property (retain, nonatomic) NSDictionary *logExtraDict;
@property (retain, nonatomic) NSNumber *slideType;
@property (copy, nonatomic) NSString *adEventName;
@property (copy, nonatomic) NSDictionary *adExtraData;
@property (copy, nonatomic) NSString *ruleId;
@property (retain, nonatomic) NSNumber *clickEnter;
@property (nonatomic) BOOL hasReportClickEnter;
@property (copy, nonatomic) NSDictionary *context;
@property (nonatomic) BOOL useNormalCover;
@property (retain, nonatomic) NSTimer *bufferingChecktimer;
@property (nonatomic) BOOL previousKeepAlive;
@property (nonatomic) BOOL isPlayFailedShown;
@property (nonatomic) BOOL finishLogged;
@property (nonatomic) BOOL albumFinishLogged;
@property (nonatomic) BOOL isReadyForDisplay;
@property (nonatomic) BOOL isPlayStarted;
@property (nonatomic) BOOL hasBlockBeforeStart;
@property (nonatomic) BOOL isPlaybackFailed;
@property (nonatomic) double playStartTimestamp;
@property (nonatomic) double stallStartTimestamp;
@property (nonatomic) BOOL alreadyRecordPlayCompletion;
@property (retain, nonatomic) HTSTimingTracker *timingTracker;
@property (retain, nonatomic) NSNumber *calcBitrate;
@property (nonatomic) unsigned long long stallCount;
@property (nonatomic) double stallTotalDuration;
@property (retain, nonatomic) NSTimer *volumeSyncTimer;
@property (nonatomic) double playStartSystemVolumn;
@property (nonatomic) BOOL shouldDiscardReport;
@property (nonatomic) BOOL blockedWithAlertView;
@property (nonatomic) BOOL isPlayerInStall;
@property (nonatomic) BOOL pauseBySingleClick;
@property (retain, nonatomic) NSDictionary *avOutsyncInfo;
@property (nonatomic) double outsyncBegin;
@property (nonatomic) BOOL shouldPreventTrackPlayTime;
@property (nonatomic) BOOL isCDNURLExpired;
@property (retain, nonatomic) NSString *connectMethod;
@property (copy, nonatomic) NSString *enterMethodForTrack;
@property (retain, nonatomic) NSMutableDictionary *playIndexDic;
@property (nonatomic) BOOL coverImageLoaded;
@property (nonatomic) unsigned long long totalStallCount;
@property (nonatomic) double totalStallTotalDuration;
@property (nonatomic) BOOL earPhone;
@property (retain, nonatomic) NSDictionary *firstFrameTimestamp;
@property (retain, nonatomic) NSNumber *playbackTimeWhenStop;
@property (retain, nonatomic) NSDictionary *contextInfoWhenStop;
@property (retain, nonatomic) NSArray *playURLs;
@property (nonatomic) long long preloadSize;
@property (retain, nonatomic) NSTimer *videoPlayCheckTimer;
@property (nonatomic) long long currentVideoCheckCount;
@property (nonatomic) BOOL shouldShowCoverWhenSeekToTime;
@property (nonatomic) BOOL isResourceRecallEnabled;
@property (nonatomic) double lastPlayTimestamp;
@property (copy, nonatomic) NSDictionary *playVideoQualityExtraInfo;
@property (copy, nonatomic) NSDictionary *videoPlayEndParams;
@property (nonatomic) BOOL enableHDR;
@property (nonatomic) BOOL hasPreCreatedPlayer;
@property (copy, nonatomic) NSString *searchVideoMethod;
@property (retain, nonatomic) NSNumber *qualityType;
@property (retain, nonatomic) NSTimer *videoBufferTimer;
@property (retain, nonatomic) NSString *pageType;
@property (copy, nonatomic) NSString *cityInfoString;
@property (nonatomic) long long playType;
@property (copy, nonatomic) NSString *originEntryEnterMethod;
@property (nonatomic) double playVideoDuration;
@property (nonatomic) double currPlaybackTime;
@property (nonatomic) double currPlayableDuration;
@property (nonatomic) long long scalingMode;
@property (nonatomic) BOOL repeated;
@property (nonatomic) BOOL mute;
@property (nonatomic) double volume;

- (void)setStallCount:(unsigned long long)arg0;
- (id)reactId;
- (void)setReactId:(id)arg0;
- (id)cityInfoString;
- (void)setCityInfoString:(id)arg0;
- (id)originEntryEnterMethod;
- (void)setOriginEntryEnterMethod:(id)arg0;
- (id)referString;
- (void)setEnterFrom:(id)arg0;
- (void)setAdExtraData:(id)arg0;
- (void)setReferString:(id)arg0;
- (void)setLogExtraDict:(id)arg0;
- (id)logExtraDict;
- (id)enterFrom;
- (id)adEventName;
- (void)setAdEventName:(id)arg0;
- (void)setPlayerDelegate:(id)arg0;
- (id)playerDelegate;
- (long long)loopTimes;
- (double)totalPlayTime;
- (double)playStartTimestamp;
- (double)defaultSeekToTime;
- (void)setDefaultSeekToTime:(double)arg0;
- (long long)coverContentMode;
- (void)setCoverContentMode:(long long)arg0;
- (BOOL)shouldAdaptFullScreen;
- (void)setShouldAdaptFullScreen:(BOOL)arg0;
- (BOOL)useNormalCover;
- (void)setUseNormalCover:(BOOL)arg0;
- (BOOL)pauseBySingleClick;
- (void)setPauseBySingleClick:(BOOL)arg0;
- (id)clickEnter;
- (void)setClickEnter:(id)arg0;
- (id)slideType;
- (void)setSlideType:(id)arg0;
- (BOOL)hasReportClickEnter;
- (void)setHasReportClickEnter:(BOOL)arg0;
- (id)adExtraData;
- (id)searchVideoMethod;
- (void)setSearchVideoMethod:(id)arg0;
- (unsigned long long)stallCount;
- (id)firstFrameTimestamp;
- (double)currPlayableDuration;
- (double)currPlaybackTime;
- (long long)playType;
- (void)setPlayType:(long long)arg0;
- (id)playURLs;
- (void)setShouldShowCoverWhenSeekToTime:(BOOL)arg0;
- (long long)preloadSize;
- (void)setPreloadSize:(long long)arg0;
- (void)setPlayStartTimestamp:(double)arg0;
- (void)setPreviousKeepAlive:(BOOL)arg0;
- (BOOL)isPlayFailedShown;
- (void)setIsPlayFailedShown:(BOOL)arg0;
- (void)setIsPlaybackFailed:(BOOL)arg0;
- (void)setPlayURLs:(id)arg0;
- (BOOL)isPlaybackFailed;
- (BOOL)previousKeepAlive;
- (BOOL)isCDNURLExpired;
- (void)setIsCDNURLExpired:(BOOL)arg0;
- (void)setLoopTimes:(long long)arg0;
- (void)setTotalPlayTime:(double)arg0;
- (void)setCurrPlaybackTime:(double)arg0;
- (void)setCurrPlayableDuration:(double)arg0;
- (BOOL)isResourceRecallEnabled;
- (void)setIsResourceRecallEnabled:(BOOL)arg0;
- (void)setStallStartTimestamp:(double)arg0;
- (double)stallStartTimestamp;
- (double)stallTotalDuration;
- (void)setStallTotalDuration:(double)arg0;
- (double)totalStallTotalDuration;
- (void)setTotalStallTotalDuration:(double)arg0;
- (void)setIsPlayStarted:(BOOL)arg0;
- (BOOL)isPlayStarted;
- (BOOL)isPlayerInStall;
- (void)setShouldDiscardReport:(BOOL)arg0;
- (BOOL)finishLogged;
- (void)setFinishLogged:(BOOL)arg0;
- (void)setCoverImageLoaded:(BOOL)arg0;
- (void)setPreviousPlayState:(long long)arg0;
- (id)videoBufferTimer;
- (void)setIsPlayerInStall:(BOOL)arg0;
- (BOOL)shouldDiscardReport;
- (BOOL)blockedWithAlertView;
- (id)playIndexDic;
- (id)videoPlayCheckTimer;
- (void)setBlockedWithAlertView:(BOOL)arg0;
- (void)setVideoBufferTimer:(id)arg0;
- (void)setPlayStartSystemVolumn:(double)arg0;
- (void)setCalcBitrate:(id)arg0;
- (void)setCurrentVideoCheckCount:(long long)arg0;
- (long long)currentVideoCheckCount;
- (void)setVideoPlayCheckTimer:(id)arg0;
- (long long)previousPlayState;
- (void)setPlayIndexDic:(id)arg0;
- (id)connectMethod;
- (void)setConnectMethod:(id)arg0;
- (double)playStartSystemVolumn;
- (void)setFirstFrameTimestamp:(id)arg0;
- (id)calcBitrate;
- (BOOL)coverImageLoaded;
- (BOOL)shouldShowCoverWhenSeekToTime;
- (BOOL)alreadyRecordPlayCompletion;
- (void)setAlreadyRecordPlayCompletion:(BOOL)arg0;
- (id)bufferingChecktimer;
- (void)setBufferingChecktimer:(id)arg0;
- (BOOL)albumFinishLogged;
- (void)setAlbumFinishLogged:(BOOL)arg0;
- (BOOL)hasBlockBeforeStart;
- (void)setHasBlockBeforeStart:(BOOL)arg0;
- (id)volumeSyncTimer;
- (void)setVolumeSyncTimer:(id)arg0;
- (id)avOutsyncInfo;
- (void)setAvOutsyncInfo:(id)arg0;
- (double)outsyncBegin;
- (void)setOutsyncBegin:(double)arg0;
- (BOOL)shouldPreventTrackPlayTime;
- (void)setShouldPreventTrackPlayTime:(BOOL)arg0;
- (id)enterMethodForTrack;
- (void)setEnterMethodForTrack:(id)arg0;
- (BOOL)earPhone;
- (void)setEarPhone:(BOOL)arg0;
- (id)playbackTimeWhenStop;
- (void)setPlaybackTimeWhenStop:(id)arg0;
- (id)contextInfoWhenStop;
- (void)setContextInfoWhenStop:(id)arg0;
- (double)lastPlayTimestamp;
- (void)setLastPlayTimestamp:(double)arg0;
- (id)playVideoQualityExtraInfo;
- (void)setPlayVideoQualityExtraInfo:(id)arg0;
- (id)videoPlayEndParams;
- (void)setVideoPlayEndParams:(id)arg0;
- (BOOL)enableHDR;
- (void)setEnableHDR:(BOOL)arg0;
- (BOOL)hasPreCreatedPlayer;
- (void)setHasPreCreatedPlayer:(BOOL)arg0;
- (double)playVideoDuration;
- (void)setPlayVideoDuration:(double)arg0;
- (id)pageType;
- (BOOL)mute;
- (void)setModel:(id)arg0;
- (double)currentPlaybackTime;
- (BOOL)isReadyForDisplay;
- (void).cxx_destruct;
- (double)time;
- (double)volume;
- (void)setContext:(id)arg0;
- (id)model;
- (void)setTime:(double)arg0;
- (id)context;
- (void)setPageType:(id)arg0;
- (void)setTimingTracker:(id)arg0;
- (void)setVolume:(double)arg0;
- (id)videoDuration;
- (void)setCurrentPlaybackTime:(double)arg0;
- (void)setMute:(BOOL)arg0;
- (id)timingTracker;
- (BOOL)repeated;
- (void)setRepeated:(BOOL)arg0;
- (long long)scalingMode;
- (void)setScalingMode:(long long)arg0;
- (unsigned long long)totalStallCount;
- (void)setTotalStallCount:(unsigned long long)arg0;
- (id)qualityType;
- (void)setVideoDuration:(id)arg0;
- (long long)playState;
- (void)setPlayState:(long long)arg0;
- (void)setRuleId:(id)arg0;
- (id)ruleId;
- (void)setIsReadyForDisplay:(BOOL)arg0;
- (void)setQualityType:(id)arg0;

@end
