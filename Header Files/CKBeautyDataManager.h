//
//     Generated by private class-dump
//

@class NSString, CKDDManager, IESEffectPlatformResponseModel, NSHashTable, NSMutableSet, NSMutableArray, CKBeautyDataFilterConfig;
@protocol CKBeautyDownloaderProtocol;

@interface CKBeautyDataManager : NSObject <CKBeautyDefaultDownloaderSubscriberProtocol, CKDDSubscriber> {
    BOOL _didUsePreloadResponseCache;
    CKDDManager *_ddManager;
    id<CKBeautyDownloaderProtocol> _downloader;
    NSHashTable *_subscribers;
    CKBeautyDataFilterConfig *_dataFilterConfig;
    NSMutableSet *_notInDefaultStateSet;
    IESEffectPlatformResponseModel *_lastResponse;
    IESEffectPlatformResponseModel *_preloadResponseCache;
    NSMutableArray *_observers;
}

@property (retain, nonatomic) CKDDManager *ddManager;
@property (retain, nonatomic) id<CKBeautyDownloaderProtocol> downloader;
@property (retain, nonatomic) NSHashTable *subscribers;
@property (retain, nonatomic) CKBeautyDataFilterConfig *dataFilterConfig;
@property (retain, nonatomic) NSMutableSet *notInDefaultStateSet;
@property (retain, nonatomic) IESEffectPlatformResponseModel *lastResponse;
@property (retain, nonatomic) IESEffectPlatformResponseModel *preloadResponseCache;
@property (nonatomic) BOOL didUsePreloadResponseCache;
@property (retain, nonatomic) NSMutableArray *observers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)selectedCategory;
- (void)setDownloader:(id)arg0;
- (BOOL)isUsingBeauty;
- (void)reloadBeautyInCamera;
- (void)removeBeautyFromCamera;
- (BOOL)isBeautyOn;
- (void)turnOnBeauty;
- (void)turnOffBeauty;
- (id)initWithDownloaderConfig:(id)arg0;
- (id)appliedItems;
- (id)nodeWithNodeId:(id)arg0;
- (id)performanceTrackInfo;
- (void)updateRootNodeUsingCachedResponseWithDataFilterConfig:(id)arg0 didGenerateTreeCallback:(id /* block */)arg1 didFinishDownloadAllItemsCallback:(id /* block */)arg2;
- (void)downloadAndUpdateSourceDataWithConfig:(id)arg0 downloadOption:(id)arg1 didGenerateTreeCallback:(id /* block */)arg2 didUpdateResponseCallback:(id /* block */)arg3 didFinishDownloadAllItemsCallback:(id /* block */)arg4;
- (id)statusModeOfItem:(id)arg0;
- (void)updateRootNodeUsingExistedResponseWithDataFilterConfig:(id)arg0 didGenerateTreeCallback:(id /* block */)arg1 didFinishDownloadAllItemsCallback:(id /* block */)arg2;
- (id)allItemModels;
- (void)updateBeautyAvailabilities:(id)arg0;
- (void)restoreFromCache:(id)arg0;
- (void)resetAllBeauty;
- (void)asyncFetchCachedResponse;
- (void)p_setupDDManager;
- (id)ddManager;
- (void)updateRootNodeWithResponse:(id)arg0 dataFilterConfig:(id)arg1 didGenerateTreeCallback:(id /* block */)arg2 didFinishDownloadAllItemsCallback:(id /* block */)arg3;
- (void)downloadEffectList:(id /* block */)arg0 downloadOption:(id)arg1;
- (void)setPreloadResponseCache:(id)arg0;
- (id)preloadResponseCache;
- (void)setDidUsePreloadResponseCache:(BOOL)arg0;
- (id)dataFilterConfig;
- (void)updateRootNode:(id)arg0;
- (void)resetNode:(id)arg0;
- (void)p_downloadAllBeautyEffects:(id /* block */)arg0;
- (void)generateTreeFromResponse:(id)arg0 dataFilterConfig:(id)arg1 completion:(id /* block */)arg2;
- (void)p_fillIconURLsForTree:(id)arg0 urlPrefixes:(id)arg1;
- (id)notInDefaultStateSet;
- (BOOL)didUsePreloadResponseCache;
- (BOOL)p_isItemInDefaultState:(id)arg0;
- (BOOL)isAllInDefaultState;
- (void)didDownloadEffects:(id)arg0;
- (void)didRecieve:(id)arg0;
- (void)updateItem:(id)arg0 Value:(long long)arg1;
- (id)itemStatusModesOfCategory:(id)arg0;
- (void)setDdManager:(id)arg0;
- (void)setDataFilterConfig:(id)arg0;
- (void)setNotInDefaultStateSet:(id)arg0;
- (id)categories;
- (void).cxx_destruct;
- (id)currentState;
- (id)observers;
- (id)subscribers;
- (void)setObservers:(id)arg0;
- (id)rootNode;
- (id)downloader;
- (void)addSubscriber:(id)arg0;
- (void)removeSubscriber:(id)arg0;
- (id)lastResponse;
- (void)selectItem:(id)arg0;
- (void)selectCollection:(id)arg0;
- (void)setSubscribers:(id)arg0;
- (void)p_addObservers;
- (void)setLastResponse:(id)arg0;

@end
