//
//     Generated by private class-dump
//

@interface VEComposerAction : NSObject <NSCopying> {
    struct VEComposerFilterParam { int mode; int orderType; int action; struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } oldNodePaths; struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } nodePaths; struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } tags; struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } updateNodeKeys; struct vector<float, std::allocator<float>> { float *__begin_; float *__end_; struct __compressed_pair<float *, std::allocator<float>> { float *__value_; } __end_cap_; } updateNodeValues; } param;
}

@property (readonly, nonatomic) unsigned long long action;
@property (readonly) unsigned long long count;
@property (readonly) unsigned long long countOldNodePaths;

+ (id)setComposerMode:(int)arg0 orderType:(int)arg1;
+ (id)appendComposerNodes:(id)arg0;
+ (id)removeComposerNodes:(id)arg0;
+ (id)reloadComposerNodes:(id)arg0;
+ (id)removeAllComposerNodes;
+ (id)setComposerNodes:(id)arg0;
+ (id)setComposerNodes:(id)arg0 tags:(id)arg1;
+ (id)appendComposerNodes:(id)arg0 tags:(id)arg1;
+ (id)reloadComposerNodes:(id)arg0 tags:(id)arg1;
+ (id)updateComposerNode:(id)arg0 nodeKey:(id)arg1 nodeValue:(float)arg2;
+ (id)updateMultipleComposerNode:(id)arg0 nodeKeys:(id)arg1 nodeValues:(id)arg2;
+ (id)replaceComposerNode:(id)arg0 nodeKeys:(id)arg1 nodeValues:(id)arg2;

- (const char **)nodePaths_cstr;
- (const char **)tags_cstr;
- (const char **)oldNodePaths_cstr;
- (unsigned long long)countOldNodePaths;
- (const char **)updateNodeKeys_cstr;
- (float *)updateNodeValues_cstr;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)debugDescription;
- (unsigned long long)count;
- (unsigned long long)action;
- (void)clear;
- (id)description;
- (id).cxx_construct;

@end
