//
//     Generated by private class-dump
//

@class NSData, NSArray, NSObject;
@protocol OS_dispatch_semaphore;

@interface YYImageDecoder : NSObject {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _lock;
    BOOL _sourceTypeDetected;
    struct CGImageSource { } *_source;
    struct { struct { unsigned int x0; unsigned int x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned char x6; } x0; struct *x1; unsigned int x2; struct *x3; unsigned int x4; unsigned int x5; unsigned int *x6; unsigned int x7; unsigned int x8; unsigned int x9; BOOL x10; } *_apngSource;
    struct WebPDemuxer { } *_webpSource;
    long long _orientation;
    NSObject<OS_dispatch_semaphore> *_framesLock;
    NSArray *_frames;
    BOOL _needBlend;
    unsigned long long _blendFrameIndex;
    struct CGContext { } *_blendCanvas;
    BOOL _finalized;
    NSData *_data;
    unsigned long long _type;
    double _scale;
    unsigned long long _frameCount;
    unsigned long long _loopCount;
    unsigned long long _width;
    unsigned long long _height;
}

@property (readonly, nonatomic) NSData *data;
@property (readonly, nonatomic) unsigned long long type;
@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) unsigned long long frameCount;
@property (readonly, nonatomic) unsigned long long loopCount;
@property (readonly, nonatomic) unsigned long long width;
@property (readonly, nonatomic) unsigned long long height;
@property (readonly, nonatomic, getter=isFinalized) BOOL finalized;

+ (id)decoderWithData:(id)arg0 scale:(double)arg1;

- (id)frameAtIndex:(unsigned long long)arg0 decodeForDisplay:(BOOL)arg1;
- (double)frameDurationAtIndex:(unsigned long long)arg0;
- (BOOL)updateData:(id)arg0 final:(BOOL)arg1;
- (BOOL)_updateData:(id)arg0 final:(BOOL)arg1;
- (id)_frameAtIndex:(unsigned long long)arg0 decodeForDisplay:(BOOL)arg1;
- (id)_framePropertiesAtIndex:(unsigned long long)arg0;
- (struct CGImage { } *)_newUnblendedImageAtIndex:(unsigned long long)arg0 extendToCanvas:(BOOL)arg1 decoded:(BOOL *)arg2;
- (BOOL)_createBlendContextIfNeeded;
- (struct CGImage { } *)_newBlendedImageWithFrame:(id)arg0;
- (void)_blendImageWithFrame:(id)arg0;
- (void)_updateSourceWebP;
- (void)_updateSourceAPNG;
- (void)_updateSourceImageIO;
- (id)framePropertiesAtIndex:(unsigned long long)arg0;
- (BOOL)isFinalized;
- (id)initWithScale:(double)arg0;
- (id)init;
- (id)imageProperties;
- (id)data;
- (void).cxx_destruct;
- (unsigned long long)height;
- (unsigned long long)frameCount;
- (unsigned long long)type;
- (double)scale;
- (void)dealloc;
- (unsigned long long)width;
- (id)_imageProperties;
- (unsigned long long)loopCount;
- (void)_updateSource;

@end
