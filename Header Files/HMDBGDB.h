//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, FMDatabaseQueue, FMDatabase, NSMutableArray;

@interface HMDBGDB : NSObject {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutex;
    BOOL _debug;
    BOOL _disableCloseDB;
    BOOL _inTransaction;
    unsigned int _transactionThread;
    NSString *_sqliteName;
    NSString *_rootPath;
    FMDatabaseQueue *_queue;
    FMDatabase *_db;
    long long _delteErrorCode;
    NSMutableDictionary *_changeBlocks;
    NSMutableArray *_transactionBlocks;
}

@property (retain, nonatomic) FMDatabaseQueue *queue;
@property (retain, nonatomic) FMDatabase *db;
@property (nonatomic) BOOL inTransaction;
@property (nonatomic) unsigned int transactionThread;
@property (copy, nonatomic) NSString *rootPath;
@property (nonatomic) long long delteErrorCode;
@property (retain, nonatomic) NSMutableDictionary *changeBlocks;
@property (retain, nonatomic) NSMutableArray *transactionBlocks;
@property (nonatomic) BOOL debug;
@property (copy, nonatomic) NSString *sqliteName;
@property (nonatomic) BOOL disableCloseDB;

+ (unsigned int)currentDBUserVersion;

- (void)executeCheckpoint;
- (id)changeBlocks;
- (void)setDelteErrorCode:(long long)arg0;
- (void)executeTransation:(id /* block */)arg0;
- (void)setTransactionThread:(unsigned int)arg0;
- (id)transactionBlocks;
- (void)executeTransationBlocks;
- (unsigned int)transactionThread;
- (void)executeDB:(id /* block */)arg0;
- (long long)getKeyMaxForTable:(id)arg0 key:(id)arg1 db:(id)arg2;
- (void)doChangeWithName:(id)arg0 flag:(BOOL)arg1 state:(long long)arg2;
- (void)queryQueueWithTableName:(id)arg0 conditions:(id)arg1 complete:(id /* block */)arg2;
- (void)ifIvarChangeForObject:(id)arg0 ignoredKeys:(id)arg1;
- (void)updateQueueWithTableName:(id)arg0 valueDict:(id)arg1 conditions:(id)arg2 complete:(id /* block */)arg3;
- (BOOL)ifNotExistWillCreateTableWithObject:(id)arg0 ignoredKeys:(id)arg1;
- (void)deleteQueueWithTableName:(id)arg0 conditions:(id)arg1 complete:(id /* block */)arg2;
- (void)deleteQueueWithTableName:(id)arg0 forKeyPathAndValues:(id)arg1 complete:(id /* block */)arg2;
- (long long)countQueueForTable:(id)arg0 where:(id)arg1;
- (long long)countQueueForTable:(id)arg0 conditions:(id)arg1;
- (double)sqliteMethodQueueForTable:(id)arg0 type:(long long)arg1 key:(id)arg2 where:(id)arg3;
- (long long)countQueueForTable:(id)arg0 forKeyPathAndValues:(id)arg1;
- (void)insertIntoTableName:(id)arg0 Dict:(id)arg1 complete:(id /* block */)arg2;
- (void)queryWithTableName:(id)arg0 where:(id)arg1 complete:(id /* block */)arg2;
- (void)copyA:(id)arg0 toB:(id)arg1 class:(Class)arg2 keys:(id)arg3 complete:(id /* block */)arg4;
- (void)refreshQueueTable:(id)arg0 class:(Class)arg1 keys:(id)arg2 complete:(id /* block */)arg3;
- (void)copyA:(id)arg0 toB:(id)arg1 keyDict:(id)arg2 complete:(id /* block */)arg3;
- (void)refreshQueueTable:(id)arg0 class:(Class)arg1 keys:(id)arg2 keyDict:(id)arg3 complete:(id /* block */)arg4;
- (void)addTable:(id)arg0 key:(id)arg1 complete:(id /* block */)arg2;
- (id)getArray:(id)arg0 ignoredKeys:(id)arg1 filtModelInfoType:(long long)arg2;
- (void)insertIntoTableName:(id)arg0 DictArray:(id)arg1 complete:(id /* block */)arg2;
- (void)updateSetTableName:(id)arg0 class:(Class)arg1 DictArray:(id)arg2 complete:(id /* block */)arg3;
- (void)insertWithObjects:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)updateSetWithObjects:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)bg_saveOrUpdateWithTableName:(id)arg0 class:(Class)arg1 DictArray:(id)arg2 complete:(id /* block */)arg3;
- (void)insertWithObject:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)queryObjectQueueWithTableName:(id)arg0 class:(Class)arg1 where:(id)arg2 complete:(id /* block */)arg3;
- (void)updateWithTableName:(id)arg0 valueDict:(id)arg1 where:(id)arg2 complete:(id /* block */)arg3;
- (void)updateQueueWithObject:(id)arg0 where:(id)arg1 ignoreKeys:(id)arg2 complete:(id /* block */)arg3;
- (void)updateWithTableName:(id)arg0 forKeyPathAndValues:(id)arg1 valueDict:(id)arg2 complete:(id /* block */)arg3;
- (void)updateQueueWithObject:(id)arg0 forKeyPathAndValues:(id)arg1 ignoreKeys:(id)arg2 complete:(id /* block */)arg3;
- (void)clearTable:(id)arg0 complete:(id /* block */)arg1;
- (void)copyQueueTable:(id)arg0 to:(id)arg1 keyDict:(id)arg2 append:(BOOL)arg3 complete:(id /* block */)arg4;
- (void)saveDictionary:(id)arg0 complete:(id /* block */)arg1;
- (BOOL)registerChangeWithName:(id)arg0 block:(id /* block */)arg1;
- (BOOL)removeChangeWithName:(id)arg0;
- (void)queryWithTableName:(id)arg0 keys:(id)arg1 where:(id)arg2 complete:(id /* block */)arg3;
- (void)updateWithObject:(id)arg0 valueDict:(id)arg1 conditions:(id)arg2 complete:(id /* block */)arg3;
- (void)updateObject:(id)arg0 ignoreKeys:(id)arg1 conditions:(id)arg2 complete:(id /* block */)arg3;
- (void)updateQueueWithTableName:(id)arg0 conditions:(id)arg1 complete:(id /* block */)arg2;
- (void)deleteWithTableName:(id)arg0 where:(id)arg1 complete:(id /* block */)arg2;
- (void)deleteWithTableName:(id)arg0 forKeyPathAndValues:(id)arg1 complete:(id /* block */)arg2;
- (void)dropSafeTable:(id)arg0 complete:(id /* block */)arg1;
- (double)sqliteMethodForTable:(id)arg0 type:(long long)arg1 key:(id)arg2 where:(id)arg3;
- (long long)countForTable:(id)arg0 forKeyPathAndValues:(id)arg1;
- (void)refreshTable:(id)arg0 class:(Class)arg1 keys:(id)arg2 complete:(id /* block */)arg3;
- (void)refreshTable:(id)arg0 class:(Class)arg1 keys:(id)arg2 keyDict:(id)arg3 complete:(id /* block */)arg4;
- (void)updateObjects:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)bg_saveOrUpateArray:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)queryObjectWithTableName:(id)arg0 class:(Class)arg1 where:(id)arg2 complete:(id /* block */)arg3;
- (void)updateWithObject:(id)arg0 where:(id)arg1 ignoreKeys:(id)arg2 complete:(id /* block */)arg3;
- (void)updateWithObject:(id)arg0 forKeyPathAndValues:(id)arg1 ignoreKeys:(id)arg2 complete:(id /* block */)arg3;
- (void)clearWithObject:(id)arg0 complete:(id /* block */)arg1;
- (void)dropWithTableName:(id)arg0 complete:(id /* block */)arg1;
- (void)copyTable:(id)arg0 to:(id)arg1 keyDict:(id)arg2 append:(BOOL)arg3 complete:(id /* block */)arg4;
- (id)bg_executeSql:(id)arg0 tablename:(id)arg1 class:(Class)arg2;
- (void)saveArray:(id)arg0 name:(id)arg1 complete:(id /* block */)arg2;
- (void)queryArrayWithName:(id)arg0 complete:(id /* block */)arg1;
- (id)queryArrayWithName:(id)arg0 index:(long long)arg1;
- (BOOL)updateObjectWithName:(id)arg0 object:(id)arg1 index:(long long)arg2;
- (BOOL)deleteObjectWithName:(id)arg0 index:(long long)arg1;
- (BOOL)bg_setValue:(id)arg0 forKey:(id)arg1;
- (BOOL)bg_updateValue:(id)arg0 forKey:(id)arg1;
- (void)bg_enumerateKeysAndObjectsUsingBlock:(id /* block */)arg0;
- (id)bg_valueForKey:(id)arg0;
- (BOOL)bg_deleteValueForKey:(id)arg0;
- (id)sqliteName;
- (void)setSqliteName:(id)arg0;
- (BOOL)disableCloseDB;
- (void)setDisableCloseDB:(BOOL)arg0;
- (long long)delteErrorCode;
- (void)setChangeBlocks:(id)arg0;
- (void)setTransactionBlocks:(id)arg0;
- (void)isExistWithTableName:(id)arg0 complete:(id /* block */)arg1;
- (void)createTableWithTableName:(id)arg0 keys:(id)arg1 unionPrimaryKeys:(id)arg2 uniqueKeys:(id)arg3 complete:(id /* block */)arg4;
- (void)saveObject:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)saveObjects:(id)arg0 ignoredKeys:(id)arg1 complete:(id /* block */)arg2;
- (void)queryWithTableName:(id)arg0 conditions:(id)arg1 complete:(id /* block */)arg2;
- (void)deleteWithTableName:(id)arg0 conditions:(id)arg1 complete:(id /* block */)arg2;
- (void)dropTable:(id)arg0 complete:(id /* block */)arg1;
- (void)updateObject:(id)arg0 propertyName:(id)arg1 propertyValue:(id)arg2 conditions:(id)arg3 complete:(id /* block */)arg4;
- (void)updateObject:(id)arg0 checkIvarChanged:(BOOL)arg1 propertyName:(id)arg2 propertyValue:(id)arg3 conditions:(id)arg4 complete:(id /* block */)arg5;
- (BOOL)bg_isExistWithTableName:(id)arg0;
- (void)vacuumDB;
- (long long)countForTable:(id)arg0 where:(id)arg1;
- (long long)countForTable:(id)arg0 conditions:(id)arg1;
- (void)setDb:(id)arg0;
- (id)initWithPath:(id)arg0;
- (id)init;
- (id)db;
- (void).cxx_destruct;
- (BOOL)debug;
- (void)setDebug:(BOOL)arg0;
- (void)closeDB;
- (void)destroy;
- (id)rootPath;
- (id)queue;
- (void)dealloc;
- (void)setQueue:(id)arg0;
- (void)inTransaction:(id /* block */)arg0;
- (long long)deleteErrorCode;
- (BOOL)inTransaction;
- (void)setInTransaction:(BOOL)arg0;
- (void)setRootPath:(id)arg0;

@end
