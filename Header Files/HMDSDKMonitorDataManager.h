//
//     Generated by private class-dump
//

@class HMDTTMonitor, NSMutableDictionary, NSTimer, HMDTTMonitorUserInfo, NSString, HMDPerformanceReporter, HMDRecordStore;
@protocol NSObject;

@interface HMDSDKMonitorDataManager : NSObject {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _remoteModuleLock;
    BOOL _isUploading;
    HMDTTMonitor *_ttMonitor;
    HMDTTMonitorUserInfo *_ttMonitorUserInfo;
    NSString *_hostAid;
    NSString *_sdkAid;
    HMDRecordStore *_store;
    HMDPerformanceReporter *_reporter;
    NSTimer *_flushTimer;
    NSMutableDictionary *_sdkRemoteModules;
    id<NSObject> _networkModuleObserver;
}

@property (retain, nonatomic) HMDPerformanceReporter *reporter;
@property (retain, nonatomic) NSTimer *flushTimer;
@property (nonatomic) BOOL isUploading;
@property (retain, nonatomic) NSMutableDictionary *sdkRemoteModules;
@property (retain, nonatomic) id<NSObject> networkModuleObserver;
@property (retain, nonatomic) HMDTTMonitor *ttMonitor;
@property (retain, nonatomic) HMDTTMonitorUserInfo *ttMonitorUserInfo;
@property (copy, nonatomic) NSString *hostAid;
@property (copy, nonatomic) NSString *sdkAid;
@property (retain, nonatomic) HMDRecordStore *store;

- (void)setHostAid:(id)arg0;
- (void)configDidUpdate:(id)arg0;
- (id)moduleWithConfig:(id)arg0;
- (void)setupModule:(id)arg0;
- (void)setSdkAid:(id)arg0;
- (void)setTtMonitorUserInfo:(id)arg0;
- (void)setTtMonitor:(id)arg0;
- (void)setupReportPerformanceManagersIfNeed;
- (void)observeHeimdallrModules;
- (void)updateConfigManagerAndReprotWithConfig:(id)arg0;
- (void)setSdkRemoteModules:(id)arg0;
- (id)networkModuleObserver;
- (void)addMoudleToRemoteDict:(id)arg0;
- (void)removeModuleFromRemoteDict:(id)arg0;
- (void)setNetworkModuleObserver:(id)arg0;
- (id)sdkRemoteModules;
- (void)stopModule:(id)arg0;
- (id)sdkAid;
- (id)ttMonitor;
- (void)updateMoudleSetupWithConfig:(id)arg0;
- (id)initSDKMonitorDataManagerWithSDKAid:(id)arg0 injectedInfo:(id)arg1;
- (id)ttMonitorUserInfo;
- (id)hostAid;
- (void)setIsUploading:(BOOL)arg0;
- (void).cxx_destruct;
- (id)reporter;
- (id)store;
- (void)setStore:(id)arg0;
- (void)setReporter:(id)arg0;
- (void)dealloc;
- (id)flushTimer;
- (BOOL)isUploading;
- (void)setFlushTimer:(id)arg0;

@end
