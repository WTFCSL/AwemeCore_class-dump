//
//     Generated by private class-dump
//

@class HMDCPUExceptionRecordManager, HMDCPUExceptionCycleDataCollector, NSString, NSMutableArray, NSObject, HMDCPUExceptionConfig, HMDCPUExceptionPerf, HMDCPUExceptionThermalMonitor;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface HMDCPUExceptionMonitor : HeimdallrModule <HMDCPUExceptionRecordManagerDelegate, HMDCPUExceptionThermalMonitorDelegate> {
    BOOL _isTheramlSerious;
    BOOL _isTheramlTracking;
    BOOL _readFromDB;
    float _powerConsumptionThreshold;
    float _powerConsumption;
    long long _sampleInterval;
    HMDCPUExceptionConfig *_currentConfig;
    HMDCPUExceptionConfig *_customConfig;
    NSObject<OS_dispatch_queue> *_operationQueue;
    NSObject<OS_dispatch_source> *_sampleTimer;
    HMDCPUExceptionCycleDataCollector *_cycleDataPool;
    unsigned long long _monitorType;
    HMDCPUExceptionThermalMonitor *_thermalMonitor;
    id /* block */ _cloudCommandCompletion;
    HMDCPUExceptionRecordManager *_recordManager;
    HMDCPUExceptionPerf *_perfWatch;
    NSMutableArray *_customScenes;
    NSString *_customSceneStr;
}

@property (retain, nonatomic) HMDCPUExceptionRecordManager *recordManager;
@property (nonatomic) BOOL readFromDB;
@property (nonatomic) long long sampleInterval;
@property (retain, nonatomic) HMDCPUExceptionConfig *currentConfig;
@property (retain, nonatomic) HMDCPUExceptionConfig *customConfig;
@property (nonatomic) float powerConsumptionThreshold;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *sampleTimer;
@property (retain, nonatomic) HMDCPUExceptionCycleDataCollector *cycleDataPool;
@property (nonatomic) unsigned long long monitorType;
@property (retain, nonatomic) HMDCPUExceptionThermalMonitor *thermalMonitor;
@property (copy, nonatomic) id /* block */ cloudCommandCompletion;
@property (nonatomic) BOOL isTheramlSerious;
@property (nonatomic) BOOL isTheramlTracking;
@property (nonatomic) float powerConsumption;
@property (nonatomic) BOOL readFromDB;
@property (retain, nonatomic) HMDCPUExceptionRecordManager *recordManager;
@property (retain, nonatomic) HMDCPUExceptionPerf *perfWatch;
@property (retain, nonatomic) NSMutableArray *customScenes;
@property (copy, nonatomic) NSString *customSceneStr;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedMonitor;

- (void)updateConfig:(id)arg0;
- (id)customConfig;
- (void)setCustomConfig:(id)arg0;
- (BOOL)needSyncStart;
- (BOOL)performanceDataSource;
- (BOOL)exceptionDataSource;
- (void)setMonitorType:(unsigned long long)arg0;
- (unsigned long long)monitorType;
- (id)recordManager;
- (void)setRecordManager:(id)arg0;
- (float)powerConsumptionThreshold;
- (void)setPowerConsumptionThreshold:(float)arg0;
- (id)cpuExceptionDataFromStore;
- (id)cpuExceptionDataFromMemory;
- (id)pendingExceptionData;
- (void)exceptionReporterDidReceiveResponse:(BOOL)arg0;
- (void)dropExceptionData;
- (void)setPowerConsumption:(float)arg0;
- (void)setPerfWatch:(id)arg0;
- (void)setCustomScenes:(id)arg0;
- (void)monitorStartAction;
- (void)startCPUStatusMonitoring;
- (void)reportLocalStoredRecord;
- (void)checkThermalMonitorState;
- (void)monitorStopAction;
- (void)stopCPUStatusMonitoring;
- (void)switchTheramlMonitorState:(BOOL)arg0;
- (void)dealCurrentConfig:(id)arg0;
- (id)customScenes;
- (void)setCustomSceneStr:(id)arg0;
- (void)setCloudCommandCompletion:(id /* block */)arg0;
- (void)execMonitorWithCloudCommand;
- (id)perfWatch;
- (void)setupDataForCycleStart;
- (id)sampleTimer;
- (void)setSampleTimer:(id)arg0;
- (void)collectCurrentUsageRate;
- (void)setCycleDataPool:(id)arg0;
- (id)cycleDataPool;
- (void)setIsTheramlTracking:(BOOL)arg0;
- (float)getCPUUsageFromThreadsWithConsumThreadArray:(id)arg0 allThreadCount:(unsigned int *)arg1 maxThreadUsage:(float *)arg2;
- (float)powerConsumption;
- (id)customSceneStr;
- (id)backtraceWithThreads:(id)arg0 maxThreadUsage:(float)arg1;
- (void)usageExceptionInCurrentCycle;
- (void)productionExceptionRecord;
- (void)setReadFromDB:(BOOL)arg0;
- (BOOL)checkNeedUploadExceptionDataImmediatelyWithCPUAverageUsage:(float)arg0;
- (void)restartUsageMonitoringAfterSleep;
- (void)finishMonitorWithCloudCommandWithResult:(id)arg0;
- (void)shouldReportCPUExceptionRecordNow;
- (void)setIsTheramlSerious:(BOOL)arg0;
- (BOOL)isTheramlTracking;
- (id /* block */)cloudCommandCompletion;
- (BOOL)storeCPUExceptionRecords:(id)arg0;
- (BOOL)deleteCPUExceptionRecords:(id)arg0;
- (void)currentTheramlStateAbormal:(unsigned long long)arg0;
- (void)currentTheramlStateBecomeNormal:(unsigned long long)arg0;
- (void)enterSpecificalSceneWithExceptionConfig:(id)arg0;
- (void)leaveSpecificalScene;
- (void)enterCustomSceneWithUniq:(id)arg0;
- (void)leaveCustomSceneWithUniq:(id)arg0;
- (void)fetchCloudCommandCPUExceptionOneCycleInfoWithCompletion:(id /* block */)arg0;
- (BOOL)isTheramlSerious;
- (BOOL)readFromDB;
- (id)init;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (void)stop;
- (unsigned long long)exceptionType;
- (long long)sampleInterval;
- (id)operationQueue;
- (void)setSampleInterval:(long long)arg0;
- (id)currentConfig;
- (void)start;
- (void)setCurrentConfig:(id)arg0;
- (void)setupData;
- (Class)storeClass;
- (id)thermalMonitor;
- (void)setThermalMonitor:(id)arg0;

@end
