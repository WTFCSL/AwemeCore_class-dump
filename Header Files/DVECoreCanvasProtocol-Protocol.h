//
//     Generated by private class-dump
//

@protocol DVECoreCanvasProtocol <DVECoreProtocol>

@property (nonatomic) unsigned long long ratio;
@property (nonatomic) struct CGSize { double x0; double x1; } canvasSize;
@property (nonatomic) struct CGSize { double x0; double x1; } originRatioSize;

- (void)saveCanvasSize;
- (void)restoreCanvasSize;
- (void)updateCanvasRatio:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })subViewScaleAspectFit:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGSize { double x0; double x1; })canvasSizeScaleAspectFitInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setCanvasRatio:(unsigned long long)arg0 inPreviewView:(id)arg1 needCommit:(BOOL)arg2;
- (void)updateVideoClipTranslation:(struct CGPoint { double x0; double x1; })arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (void)updateVideoClipScale:(double)arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (void)updateVideoClipRotation:(double)arg0 forSlot:(id)arg1 isCommit:(BOOL)arg2;
- (struct CGSize { double x0; double x1; })originRatioSize;
- (void)setOriginRatioSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })canvasSize;
- (unsigned long long)ratio;
- (void)setRatio:(unsigned long long)arg0;

@end
