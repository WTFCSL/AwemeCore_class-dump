//
//     Generated by private class-dump
//

@class NSLock, NSMutableDictionary, NSMutableSet, NSDictionary, ACCRepositoryWorkspace, NSString;
@protocol ACCRepoPrepareComposerData, ACCRepoDuetData;

@interface ACCRepositoryProject : NSObject <ACCPublishRepositoryFunctions, ACCPublishRepository, ACCCreationContext, NSCopying> {
    NSLock *m_scopeCheckLock;
    NSMutableDictionary *m_scopeCheckCache;
    NSMutableDictionary *_extensionModels;
    id /* block */ _registerInfoTest;
    NSString *_UUID;
    NSMutableSet *_virtualNodes;
    NSMutableDictionary *_registerNodeInfoHash;
    ACCRepositoryProject *_relatedProject;
}

@property (readonly, nonatomic) id<ACCRepoPrepareComposerData> repoComposerData;
@property (readonly, nonatomic) id<ACCRepoDuetData> repoDuetData;
@property (readonly, weak, nonatomic) ACCRepositoryWorkspace *workspace;
@property (retain, nonatomic) NSMutableSet *virtualNodes;
@property (retain, nonatomic) NSMutableDictionary *extensionModels;
@property (retain, nonatomic) NSMutableDictionary *registerNodeInfoHash;
@property (weak, nonatomic) ACCRepositoryProject *relatedProject;
@property (readonly, nonatomic) NSDictionary *registerNodeInfo;
@property (retain, nonatomic) NSString *UUID;
@property (copy, nonatomic) id /* block */ registerInfoTest;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)makeNewProjectFromWorkspace:(id)arg0;
+ (id)recoveryNewProjectWithExtensionModels:(id)arg0 forWorkspace:(id)arg1;
+ (void)_aweLazyRegisterLoad_Studio;
+ (Class)projectClass;

- (void)setExtensionModelByClass:(id)arg0;
- (id)extensionModelOfClass:(Class)arg0;
- (id)extensionModelOfProtocol:(id)arg0;
- (id)repoDataOfProtocol:(id)arg0;
- (id)useCaseOfProtocol:(id)arg0;
- (void)initializeRepoIfNeededWithClass:(Class)arg0;
- (id)allPublishViewModels;
- (void)updatePrepareScopeWithContainer:(id)arg0;
- (BOOL)hasWorkspace;
- (id)repoComposerData;
- (id)deepCopyExtensionModels;
- (void)enumerateExtensionModels:(BOOL)arg0 requireProtocol:(id)arg1 requireSelector:(SEL)arg2 block:(id /* block */)arg3;
- (void)removeExtensionModel:(Class)arg0;
- (id)childRepositoryList;
- (id)parentRepository;
- (void)setupRegisteredRepositoryElements;
- (unsigned long long)projectsCount;
- (void)setCreationScope:(long long)arg0;
- (id)extensionModels;
- (id)createContainerWithReuseScopes:(id)arg0;
- (void)setExtensionModels:(id)arg0;
- (id)registerNodeInfo;
- (id)acc_projectDraftFolder;
- (id)repoDuetData;
- (id)instanceRepoDatasOfProtocol:(id)arg0;
- (id)instanceRepoModelsOfClass:(Class)arg0;
- (void)removeObserver:(id)arg0 forProtocol:(id)arg1;
- (id)acc_copyWithZone:(struct _NSZone { } *)arg0;
- (void)setRegisterInfoTest:(id /* block */)arg0;
- (id)registerNodeInfoHash;
- (void)setRegisterNodeInfoHash:(id)arg0;
- (void)recoverFromExtensionModels:(id)arg0;
- (id)relatedProject;
- (void)setRelatedProject:(id)arg0;
- (void)updateRelatedProject:(id)arg0 oldUUID:(id)arg1;
- (id)registerInfoForModelClass:(Class)arg0;
- (BOOL)addExtensionModel:(id)arg0;
- (id /* block */)registerInfoTest;
- (id)virtualNodes;
- (BOOL)hasRelatedProject;
- (void)insertRegisterInfo:(id)arg0;
- (long long)currentScope;
- (id)allScopes;
- (id)project_repoModelOfClass:(Class)arg0;
- (void)checkScopeWithRepo:(id)arg0 repoClass:(Class)arg1;
- (void)setVirtualNodes:(id)arg0;
- (void)setUUID:(id)arg0;
- (id)init;
- (id)workspace;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)setup;
- (id)UUID;
- (void)setWorkspace:(id)arg0;
- (void)addObserver:(id)arg0 forProtocol:(id)arg1;

@end
