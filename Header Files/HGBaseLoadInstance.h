//
//     Generated by private class-dump
//

@class NSMutableArray, HGBootManager, NSString, HGAppLoadContext, UIViewController;
@protocol HGFileHandleProtocol, HGSubContainerVCProtocol;

@interface HGBaseLoadInstance : NSObject <HGLoadInstanceProtocol, HGLoadInstanceClassProtocol> {
    int _removePkgBitMask;
    id<HGFileHandleProtocol> _appFileReader;
    HGBootManager *_bootManager;
    HGAppLoadContext *_loadContext;
    UIViewController<HGSubContainerVCProtocol> *_subContainerVC;
    NSMutableArray *_needAppTaskBlks;
}

@property (nonatomic) int removePkgBitMask;
@property (retain, nonatomic) id<HGFileHandleProtocol> appFileReader;
@property (weak, nonatomic) HGBootManager *bootManager;
@property (retain, nonatomic) HGAppLoadContext *loadContext;
@property (weak, nonatomic) UIViewController<HGSubContainerVCProtocol> *subContainerVC;
@property (retain, nonatomic) NSMutableArray *needAppTaskBlks;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (id)validateMeta:(id)arg0;
+ (long long)type;

- (id)bootLogger;
- (int)removePkgBitMask;
- (id)appFileReader;
- (void)workBeforeClose;
- (void)metaInfoModelCompletion:(id)arg0 model:(id)arg1 reader:(id)arg2;
- (void)setLoadContext:(id)arg0;
- (void)getUpdatedMetaInfoModelCompletion:(id)arg0 model:(id)arg1;
- (id)bootManager;
- (BOOL)checkModelStatus:(id)arg0 isAsyncUpdate:(BOOL)arg1;
- (id)needAppTaskBlks;
- (id)setupCommonAndTaskWithModel:(id)arg0 appConfigData:(id)arg1;
- (id)baseVC;
- (void)setNeedAppTaskBlks:(id)arg0;
- (void)setRemovePkgBitMask:(int)arg0;
- (void)becomeReadyStatus;
- (void)readyToLoadAppWithModel:(id)arg0;
- (id)businessParamForEvent:(id)arg0;
- (void)setBootManager:(id)arg0;
- (id)launchParam;
- (id)subContainerVC;
- (id)subNavi;
- (void)setAppFileReader:(id)arg0;
- (Class)customTaskClass;
- (id)initWithBootManager:(id)arg0;
- (void)updateMetaInfoModel:(id)arg0 error:(id)arg1 reader:(id)arg2;
- (void)firstFrameDidShow;
- (id)eventWithBaseEventKey:(id)arg0;
- (void)processAppLoadCache:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)shouldHandlerLoadError:(id)arg0;
- (id)loadContext;
- (void)setSubContainerVC:(id)arg0;
- (void).cxx_destruct;
- (id)uniqueID;
- (id)schema;
- (BOOL)shouldShowLoadingView;

@end
