//
//     Generated by private class-dump
//

@class RTVXRRoomClockCorrectorContext, NSString, RxScheduler, RTVXRRoomClockCorrectTask, RTVXRRoomClockCorrectSettings;
@protocol RTVUserProfileManagerInterface, RTVXRRoomClockCorrectorDelegate, RxInjector, RTVXRControllerInjector, RTVXRMonitor, RTVXRRoomMessageSender;

@interface RTVXRRoomClockCorrector : NSObject <RTVXRRoomMessageSenderObserver> {
    id<RTVXRRoomClockCorrectorDelegate> _delegate;
    NSString *_targetUserID;
    long long _clockDiff;
    long long _downloadNetworkTime;
    long long _role;
    long long _state;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVXRRoomMessageSender> _messageSender;
    RxScheduler *_scheduler;
    id<RTVUserProfileManagerInterface> _profileManager;
    RTVXRRoomClockCorrectSettings *_settings;
    id<RTVXRMonitor> _monitor;
    RTVXRRoomClockCorrectorContext *_context;
    RTVXRRoomClockCorrectTask *_currentCorrectTask;
    RTVXRRoomClockCorrectTask *_bestCorrectTask;
    NSString *_sessionID;
    long long _requestTimes;
    long long _requestRounds;
    long long _timeoutRetryCount;
}

@property (copy) NSString *targetUserID;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, weak, nonatomic) id<RTVXRRoomMessageSender> messageSender;
@property (readonly, nonatomic) RxScheduler *scheduler;
@property (readonly, nonatomic) id<RTVUserProfileManagerInterface> profileManager;
@property (readonly, nonatomic) RTVXRRoomClockCorrectSettings *settings;
@property (readonly, nonatomic) id<RTVXRMonitor> monitor;
@property (readonly, nonatomic) RTVXRRoomClockCorrectorContext *context;
@property (retain) RTVXRRoomClockCorrectTask *currentCorrectTask;
@property (retain) RTVXRRoomClockCorrectTask *bestCorrectTask;
@property (copy, nonatomic) NSString *sessionID;
@property (nonatomic) long long requestTimes;
@property (nonatomic) long long requestRounds;
@property (nonatomic) long long timeoutRetryCount;
@property (nonatomic) long long state;
@property (weak, nonatomic) id<RTVXRRoomClockCorrectorDelegate> delegate;
@property (readonly, nonatomic) long long clockDiff;
@property (readonly, nonatomic) long long downloadNetworkTime;
@property (readonly, nonatomic) long long role;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)clockCorrectorRole:(long long)arg0 controllerInjector:(id)arg1;

- (void)rtv_awakeFromControllerInjector;
- (void)setRequestTimes:(long long)arg0;
- (long long)requestTimes;
- (id)controllerInjector;
- (void)messageSender:(id)arg0 didReceiveMessage:(id)arg1;
- (id)timestampSinceTargetUserID;
- (void)invalidateCorrector;
- (id)startCorrectWithTargetUserID:(id)arg0;
- (void)setRequestRounds:(long long)arg0;
- (void)setTimeoutRetryCount:(long long)arg0;
- (id)currentCorrectTask;
- (void)setCurrentCorrectTask:(id)arg0;
- (void)setBestCorrectTask:(id)arg0;
- (BOOL)__clockCorrectEnable;
- (void)__transferToNextState:(long long)arg0;
- (id)bestCorrectTask;
- (long long)__badDelayOfNetwork;
- (void)__transferFromState:(long long)arg0 toState:(long long)arg1;
- (long long)clockDiff;
- (long long)requestRounds;
- (long long)__bestDelayOfNetwork;
- (long long)__maxRequestTimes;
- (double)__durationOfHandTimeout;
- (long long)timeoutRetryCount;
- (long long)__timeoutRetryMaxCount;
- (double)__durationOfNextTime;
- (double)__durationOfNextRound;
- (void)__didReceiveMessage:(id)arg0 fromUserID:(id)arg1;
- (long long)downloadNetworkTime;
- (id)messageSender;
- (void).cxx_destruct;
- (void)setSessionID:(id)arg0;
- (id)monitor;
- (long long)state;
- (id)sessionID;
- (void)setState:(long long)arg0;
- (id)scheduler;
- (long long)role;
- (id)settings;
- (id)injector;
- (id)delegate;
- (id)context;
- (id)targetUserID;
- (id)description;
- (void)setTargetUserID:(id)arg0;
- (void)setDelegate:(id)arg0;
- (id)initWithRole:(long long)arg0;
- (id)profileManager;

@end
