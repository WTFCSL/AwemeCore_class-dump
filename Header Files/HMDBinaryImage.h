//
//     Generated by private class-dump
//

@class NSString;

@interface HMDBinaryImage : NSObject {
    BOOL _isExecutable;
    BOOL _isFromAPP;
    int _cpuType;
    int _cpuSubType;
    unsigned long long _address;
    unsigned long long _textSize;
    unsigned long long _vm_slide;
    NSString *_name;
    NSString *_uuid;
    NSString *_path;
}

@property (nonatomic) unsigned long long address;
@property (nonatomic) unsigned long long textSize;
@property (nonatomic) unsigned long long vm_slide;
@property (nonatomic) BOOL isExecutable;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *uuid;
@property (nonatomic) int cpuType;
@property (nonatomic) int cpuSubType;
@property (copy, nonatomic) NSString *path;
@property (nonatomic) BOOL isFromAPP;

+ (void)getSharedBinaryImagesLogStrUsingCallback:(id /* block */)arg0;
+ (id)linkedBinaryImages;
+ (id)findSharedCacheImages:(id)arg0;
+ (id)binaryImagesLogStr;
+ (id)binaryImagesLogStrWithMustIncludeImagesNames:(id)arg0 includePossibleJailbreakImage:(BOOL)arg1;
+ (id)binaryImageWithMachoImage:(struct hmd_async_macho { unsigned long long x0; long long x1; char *x2; char x3[40]; struct mach_header { unsigned int x0; int x1; int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } x4; unsigned long long x5; unsigned int x6; struct hmd_async_mem_range { unsigned long long x0; unsigned long long x1; } x7; struct hmd_async_mem_range { unsigned long long x0; unsigned long long x1; } x8; struct hmd_async_mem_range { unsigned long long x0; unsigned long long x1; } x9; struct hmd_async_mem_range { unsigned long long x0; unsigned long long x1; } x10; struct hmd_async_mem_range { unsigned long long x0; unsigned long long x1; } x11; struct hmd_async_segment *x12; int x13; struct hmd_async_section *x14; int x15; int x16; unsigned char x17[16]; BOOL x18; BOOL x19; unsigned long long x20; struct hmd_async_byteorder *x21; } *)arg0;
+ (void)updateSharedBinaryImagesLogStrNoLock;
+ (void)updateSharedLinkedBinaryImagesIfNeed;
+ (id)findSharedCacheImages;
+ (void)enumerateImagesUsingBlock:(id /* block */)arg0;

- (int)cpuSubType;
- (unsigned long long)vm_slide;
- (void)setVm_slide:(unsigned long long)arg0;
- (void)setIsFromAPP:(BOOL)arg0;
- (void)setCpuSubType:(int)arg0;
- (id)imageLogStringWithImageInfo;
- (BOOL)isFromAPP;
- (void)setPath:(id)arg0;
- (int)cpuType;
- (BOOL)isExecutable;
- (void).cxx_destruct;
- (void)setUuid:(id)arg0;
- (void)setAddress:(unsigned long long)arg0;
- (void)setCpuType:(int)arg0;
- (id)path;
- (unsigned long long)hash;
- (void)setName:(id)arg0;
- (BOOL)isEqual:(id)arg0;
- (id)uuid;
- (id)name;
- (unsigned long long)address;
- (unsigned long long)textSize;
- (void)setIsExecutable:(BOOL)arg0;
- (void)setTextSize:(unsigned long long)arg0;

@end
