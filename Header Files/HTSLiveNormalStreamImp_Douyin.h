//
//     Generated by private class-dump
//

@class NSString, LiveCore;
@protocol IESLiveRoomServiceAdapter, IESLiveFullLinkMonitor;

@interface HTSLiveNormalStreamImp_Douyin : NSObject <IESLiveNormalPushStreaming> {
    BOOL isMute;
    BOOL _enableUpdateConfigCallAB;
    LiveCore *_livecore;
    id<IESLiveRoomServiceAdapter> _roomModel;
    unsigned long long _contentType;
    id<IESLiveFullLinkMonitor> _fullLinkMonitor;
}

@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> roomModel;
@property (nonatomic) unsigned long long contentType;
@property (retain, nonatomic) id<IESLiveFullLinkMonitor> fullLinkMonitor;
@property (retain, nonatomic) LiveCore *livecore;
@property (nonatomic) BOOL isMute;
@property (nonatomic) BOOL enableUpdateConfigCallAB;
@property (copy, nonatomic) id /* block */ startNormalStreamingBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)startFakeAudioCapture;
- (void)stopFakeAudioCapture;
- (BOOL)isFakeAudioCaptureRunning;
- (void)setInputFrameCallback:(id /* block */)arg0;
- (void)setEffectFrameCallback:(id /* block */)arg0;
- (struct __CVBuffer { } *)getPixelBufferWithIsEffected:(BOOL)arg0;
- (id)getJpegDataWithIsEffected:(BOOL)arg0 compressionRatio:(double)arg1;
- (void)updateStreamingConfiguration:(id)arg0 callback:(id /* block */)arg1;
- (BOOL)enableUpdateConfigCallAB;
- (void)updateStreamingConfiguration:(id)arg0;
- (id)getAudioBytesSent;
- (id)getVideoBytesSent;
- (struct CGSize { double x0; double x1; })getCameraOutputSizeFromParams:(id)arg0;
- (void)pushRestart:(id)arg0;
- (void)setEnableUpdateConfigCallAB:(BOOL)arg0;
- (id)roomModel;
- (id)attachingDIContext;
- (void)setIsMute:(BOOL)arg0;
- (id)fullLinkMonitor;
- (void)setFullLinkMonitor:(id)arg0;
- (void)enableSiti:(BOOL)arg0;
- (void)enableVideoDenoise:(BOOL)arg0;
- (void)setVideoDenoiseBitrateRatios:(double)arg0 ge1080pRatio:(double)arg1 lt1080pRatio:(double)arg2;
- (void)setBFrameBitrateRatio:(double)arg0;
- (void)setRoomModel:(id)arg0;
- (void)startAudioCaptureWithReason:(id)arg0;
- (void)stopAudioCaptureWithReason:(id)arg0;
- (void)audioCaptureInterrupted:(BOOL)arg0 reason:(id)arg1;
- (void)mute:(BOOL)arg0 reason:(id)arg1;
- (void)updateStreamingBitrate:(long long)arg0 minBit:(long long)arg1 maxBit:(long long)arg2;
- (void)updateSiti:(BOOL)arg0 fps:(BOOL)arg1;
- (void)updateStreamingFrameRate:(long long)arg0;
- (void)startAudioCaptureWithPrivacyCert:(id)arg0 reason:(id)arg1;
- (void)startNormalStreamingWithConfig:(id)arg0;
- (id)livecore;
- (void)setLivecore:(id)arg0;
- (void)audioCaptureInterrupted:(BOOL)arg0 withPrivacyCert:(id)arg1 reason:(id)arg2;
- (void)updatePushURL:(id)arg0;
- (void)updateStreamingOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)stopNormalStreaming;
- (void)reportAudioKeyApiCallWithEventKey:(id)arg0 params:(id)arg1 reason:(id)arg2;
- (id)transferAudioConfig:(id)arg0;
- (id)transferStreamConfig:(id)arg0;
- (BOOL)isCurrentRoomAnchor;
- (long long)streamModeWith:(unsigned long long)arg0;
- (void)stopAudioCaptureWithPrivacyCert:(id)arg0 reason:(id)arg1;
- (void)audioPlayerInterrupted:(BOOL)arg0 reason:(id)arg1;
- (void)updateStreamingAudioBitrate:(long long)arg0;
- (void)setContentType:(unsigned long long)arg0;
- (unsigned long long)contentType;
- (void).cxx_destruct;
- (void)setup;
- (BOOL)isStreaming;
- (id)initWithContentType:(unsigned long long)arg0;
- (struct { struct CGSize { double x0; double x1; } x0; unsigned long long x1; })outputConfig;
- (BOOL)isMute;

@end
