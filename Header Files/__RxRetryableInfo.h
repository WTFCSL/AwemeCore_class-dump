//
//     Generated by private class-dump
//

@class NSString, NSTimer, RxPromise;
@protocol RxRetryable, RxInjector, RxReachabilityInterface, RxRetryManagerPrivateInterface;

@interface __RxRetryableInfo : NSObject <RxCancellable, RxReachabilityDelegate, NSLocking> {
    struct MutexLock { void /* function */ **_vptr$LockingInterface; struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _impl; } _mutex;
    id<RxInjector> _injector;
    id<RxReachabilityInterface> _reachability;
    id<RxRetryable> _retryable;
    id<RxRetryManagerPrivateInterface> _retryManager;
    NSString *_retryableIdentifier;
    NSString *_retryableVersion;
    long long _retryableMaxRetryTimes;
    double _retryableBaseBackoffDuration;
    long long _retryableReasons;
    NSTimer *_timer;
    long long _retryTimes;
    RxPromise *_lastPromise;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, nonatomic) id<RxReachabilityInterface> reachability;
@property (readonly, nonatomic) id<RxRetryable> retryable;
@property (weak, nonatomic) id<RxRetryManagerPrivateInterface> retryManager;
@property (readonly, copy, nonatomic) NSString *retryableIdentifier;
@property (readonly, copy, nonatomic) NSString *retryableVersion;
@property (readonly, nonatomic) long long retryableMaxRetryTimes;
@property (readonly, nonatomic) double retryableBaseBackoffDuration;
@property (readonly, nonatomic) long long retryableReasons;
@property (readonly, nonatomic) BOOL wantsTimerWakesup;
@property (readonly, nonatomic) BOOL wantsNetworkWakesup;
@property (readonly, nonatomic) double nextDuration;
@property (readonly, nonatomic) NSTimer *timer;
@property long long retryTimes;
@property (retain) RxPromise *lastPromise;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rxAwakeFromPropertyInjection;
- (void)renderModel:(id)arg0 context:(id)arg1;
- (long long)retryTimes;
- (void)setRetryTimes:(long long)arg0;
- (void)rx_reachability:(id)arg0 didChangeNetworkReachabilityStatus:(long long)arg1;
- (BOOL)wantsNetworkWakesup;
- (void)__invokeIfNeededWithReason:(long long)arg0;
- (id)__invokeWithReason:(long long)arg0;
- (void)setLastPromise:(id)arg0;
- (void)__scheduleWithReason:(long long)arg0;
- (id)retryable;
- (id)retryableIdentifier;
- (long long)retryableReasons;
- (double)nextDuration;
- (BOOL)wantsTimerWakesup;
- (void)__handleTimer:(id)arg0;
- (id)lastPromise;
- (id)retryableVersion;
- (long long)retryableMaxRetryTimes;
- (double)retryableBaseBackoffDuration;
- (void)schedule;
- (void)unlock;
- (id)timer;
- (id)reachability;
- (void).cxx_destruct;
- (id)injector;
- (void)lock;
- (id)retryManager;
- (void)cancel;
- (void)setRetryManager:(id)arg0;
- (void)dealloc;
- (id).cxx_construct;

@end
