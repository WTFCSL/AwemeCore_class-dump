//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, AWESafeMemoryMap, NSObject;
@protocol AWEStorageDelegate, OS_dispatch_semaphore;

@interface AWECacheOptimizedUnifyStorage : NSObject {
    struct sqlite3 { } *database;
    struct sqlite3_stmt { } *getStatement;
    struct sqlite3_stmt { } *setStatement;
    struct sqlite3_stmt { } *deleteStatement;
    id /* block */ checkpointBlock;
    BOOL hasWalHook;
    struct SpinLock { struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } mutex_; } _spinLock;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock;
    BOOL _enableStorageInfo;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSString *_path;
    AWESafeMemoryMap *_tempMap;
    id<AWEStorageDelegate> _delegate;
    NSMutableDictionary *_storageInfo;
}

@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore;
@property (copy, nonatomic) NSString *path;
@property (retain, nonatomic) AWESafeMemoryMap *tempMap;
@property (weak, nonatomic) id<AWEStorageDelegate> delegate;
@property (retain, nonatomic) NSMutableDictionary *storageInfo;
@property (nonatomic) BOOL enableStorageInfo;

+ (void)deleteDB:(id)arg0 err:(id *)arg1;

- (void)setTempMap:(id)arg0;
- (void)ensureDatabase;
- (void)onEnterBackground;
- (BOOL)createDatabaseWithRetryTimes:(unsigned long long)arg0;
- (void)cleanDatabaseWithLock:(BOOL)arg0;
- (void)setWalHook;
- (id)tempMap;
- (void)setObject:(id)arg0 forKey:(id)arg1 domain:(id)arg2 needCache:(BOOL)arg3 encodedData:(id)arg4 type:(long long)arg5 err:(id *)arg6;
- (void)removeAllObjectsWithoutLockWithError:(id *)arg0;
- (id)objectForKey:(id)arg0 domain:(id)arg1 needCache:(BOOL)arg2 error:(id *)arg3;
- (void)setObject:(id)arg0 forKey:(id)arg1 domain:(id)arg2 needCache:(BOOL)arg3 err:(id *)arg4;
- (void)removeObjectsInDomain:(id)arg0 err:(id *)arg1;
- (void)removeAllObjectsWithError:(id *)arg0;
- (void)checkpointIfNeeded:(struct sqlite3 { } *)arg0 pages:(int)arg1;
- (id)storageInfo;
- (void)setStorageInfo:(id)arg0;
- (BOOL)enableStorageInfo;
- (void)setEnableStorageInfo:(BOOL)arg0;
- (void)unlock;
- (void)setPath:(id)arg0;
- (id)initWithPath:(id)arg0;
- (id)semaphore;
- (void).cxx_destruct;
- (id)path;
- (void)setSemaphore:(id)arg0;
- (id)delegate;
- (void)lock;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id).cxx_construct;
- (void)cleanDatabase;

@end
