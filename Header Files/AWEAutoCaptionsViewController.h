//
//     Generated by private class-dump
//

@class UIView, AWEAutoCaptionAudioExportor, NSString, AWEVideoPublishViewModel, ACCStickerContainerView, UIImageView, UIButton, AWECaptionBottomView, AWEStudioCaptionsManager;
@protocol ACCEditTransitionServiceProtocol, ACCSequenceEditServiceProtocol, ACCEditPreviewProtocol, ACCEditServiceProtocol;

@interface AWEAutoCaptionsViewController : UIViewController <UIScrollViewDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, AWECaptionScrollFlowLayoutDelegate, ACCEditPreviewMessageProtocol, ACCStickerContainerDelegate, AWECaptionOptCellDelegate, AWEMediaSmallAnimationProtocol> {
    BOOL _isPlaying;
    BOOL _backupIsPlaying;
    BOOL _needRestorePlayer;
    BOOL _enterEditMode;
    BOOL _seekTimeFinished;
    BOOL _isRetry;
    BOOL _playerHasReset;
    BOOL _hasKVOController;
    id /* block */ _willDismissBlock;
    id /* block */ _didDismissBlock;
    id<ACCEditTransitionServiceProtocol> _transitionService;
    id<ACCEditPreviewProtocol> _previewService;
    id<ACCEditServiceProtocol> _editService;
    id<ACCSequenceEditServiceProtocol> _sequenceService;
    long long _triggleType;
    double _marginToContainerCenterY;
    AWEVideoPublishViewModel *_repository;
    ACCStickerContainerView *_stickerContainerView;
    UIButton *_cancelBtn;
    UIButton *_saveBtn;
    UIView *_playerContainer;
    UIButton *_stopAndPlayBtn;
    UIImageView *_stopAndPlayImageView;
    AWECaptionBottomView *_bottomView;
    double _containerScale;
    AWEAutoCaptionAudioExportor *_audioExport;
    AWEStudioCaptionsManager *_captionManager;
    long long _currentIndex;
    NSString *_captionMD5;
    double _requestStartTime;
    struct CGPoint { double x; double y; } _containerCenter;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _originalPlayerRect;
}

@property (retain, nonatomic) AWEVideoPublishViewModel *repository;
@property (retain, nonatomic) ACCStickerContainerView *stickerContainerView;
@property (nonatomic) BOOL isPlaying;
@property (retain, nonatomic) UIButton *cancelBtn;
@property (retain, nonatomic) UIButton *saveBtn;
@property (retain, nonatomic) UIView *playerContainer;
@property (retain, nonatomic) UIButton *stopAndPlayBtn;
@property (retain, nonatomic) UIImageView *stopAndPlayImageView;
@property (retain, nonatomic) AWECaptionBottomView *bottomView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } originalPlayerRect;
@property (nonatomic) double containerScale;
@property (nonatomic) struct CGPoint { double x; double y; } containerCenter;
@property (retain, nonatomic) AWEAutoCaptionAudioExportor *audioExport;
@property (retain, nonatomic) AWEStudioCaptionsManager *captionManager;
@property (nonatomic) BOOL backupIsPlaying;
@property (nonatomic) BOOL needRestorePlayer;
@property (nonatomic) BOOL enterEditMode;
@property (nonatomic) BOOL seekTimeFinished;
@property (nonatomic) long long currentIndex;
@property (retain, nonatomic) NSString *captionMD5;
@property (nonatomic) double requestStartTime;
@property (nonatomic) BOOL isRetry;
@property (nonatomic) BOOL playerHasReset;
@property (nonatomic) BOOL hasKVOController;
@property (copy, nonatomic) id /* block */ willDismissBlock;
@property (copy, nonatomic) id /* block */ didDismissBlock;
@property (weak, nonatomic) id<ACCEditTransitionServiceProtocol> transitionService;
@property (weak, nonatomic) id<ACCEditPreviewProtocol> previewService;
@property (weak, nonatomic) id<ACCEditServiceProtocol> editService;
@property (weak, nonatomic) id<ACCSequenceEditServiceProtocol> sequenceService;
@property (nonatomic) long long triggleType;
@property (nonatomic) double marginToContainerCenterY;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id /* block */)didDismissBlock;
- (void)setDidDismissBlock:(id /* block */)arg0;
- (void)setWillDismissBlock:(id /* block */)arg0;
- (id /* block */)willDismissBlock;
- (id)cancelBtn;
- (void)setCancelBtn:(id)arg0;
- (void)buildViews;
- (id)transitionService;
- (void)setTransitionService:(id)arg0;
- (id)editService;
- (void)setEditService:(id)arg0;
- (id)playerContainer;
- (void)setPlayerContainer:(id)arg0;
- (id)stickerContainerView;
- (void)setStickerContainerView:(id)arg0;
- (id)saveBtn;
- (void)setSaveBtn:(id)arg0;
- (void)playerCurrentPlayTimeChanged:(double)arg0;
- (id)mediaSmallMediaContainer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mediaSmallMediaContainerFrame;
- (id)mediaSmallBottomView;
- (id)displayTopViews;
- (id)sequenceService;
- (void)setSequenceService:(id)arg0;
- (BOOL)hasKVOController;
- (void)observeDownloader;
- (void)p_setupUIOptimizationSaveCancelBtn:(BOOL)arg0;
- (void)didClickCancelBtn:(id)arg0;
- (void)didClickSaveBtn:(id)arg0;
- (void)setHasKVOController:(BOOL)arg0;
- (void)configScale;
- (struct CGPoint { double x0; double x1; })containerCenter;
- (void)addMaskConrnerView;
- (void)setContainerScale:(double)arg0;
- (void)setContainerCenter:(struct CGPoint { double x0; double x1; })arg0;
- (double)containerScale;
- (void)stickerContainer:(id)arg0 gestureStarted:(id)arg1 onView:(id)arg2;
- (void)stickerContainer:(id)arg0 gestureEnded:(id)arg1 onView:(id)arg2;
- (BOOL)stickerContainerTapBlank:(id)arg0 gesture:(id)arg1;
- (void)setPreviewService:(id)arg0;
- (id)previewService;
- (BOOL)playerHasReset;
- (void)setPlayerHasReset:(BOOL)arg0;
- (void)setOriginalPlayerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })originalPlayerRect;
- (id)captionManager;
- (id)initWithRepository:(id)arg0 containerView:(id)arg1 originalPlayerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 captionManager:(id)arg3;
- (void)setTriggleType:(long long)arg0;
- (void)setMarginToContainerCenterY:(double)arg0;
- (void)setCaptionManager:(id)arg0;
- (void)makeMaskLayerForContainerView:(id)arg0;
- (void)p_setupUIOptimization;
- (double)mediaSmallBottomViewHeight;
- (id)audioExport;
- (void)setAudioExport:(id)arg0;
- (void)setCaptionMD5:(id)arg0;
- (BOOL)captionHasChanged;
- (id)captionMD5;
- (void)updateCellHeightWithIndexPath:(id)arg0;
- (void)buildPlayer;
- (void)changeStickerContainerAction;
- (void)makePreparation;
- (id)stopAndPlayBtn;
- (void)setBackupIsPlaying:(BOOL)arg0;
- (void)didClickStopAndPlay:(id)arg0;
- (void)configStickerContainer;
- (void)buildBottomView;
- (void)cancelAutoCaptionButtonClicked;
- (void)retryAutoCaptionButtonClicked;
- (void)quitAutoCaptionButtonClicked;
- (void)autoCaptionStyleButtonClicked;
- (void)autoCaptionDeleteButtonClicked;
- (void)autoCaptionEditButtonClicked;
- (void)autoCaptionStyleCancelButtonClicked;
- (void)autoCaptionStyleSaveButtonClicked;
- (void)autoCaptionStyleToolBarLeftButtonClicked:(id)arg0;
- (void)transitionButtonClicked:(id)arg0;
- (void)updateCaptionColor:(id)arg0 fontIndexPath:(id)arg1;
- (void)updateCaptionFont:(id)arg0 fontIndexPath:(id)arg1;
- (void)jumpToCaptionEditViewControllerWithCurrentModel:(id)arg0 isFromPreview:(BOOL)arg1;
- (BOOL)enableUseLyric;
- (void)makeVideoPreparation;
- (void)useLyricForCaptionIfNeeded:(id /* block */)arg0;
- (void)commitAndQueryCaption;
- (long long)triggleType;
- (void)handleAutoCaption:(id)arg0 disableMandarinTranslation:(BOOL)arg1 language:(id)arg2 error:(id)arg3;
- (id)handleCaptionModelsForAutoLine:(id)arg0;
- (void)setCaptionMarginToContainerCenterY;
- (void)captionQuerySucceed:(BOOL)arg0;
- (void)captionQuerySucceed;
- (void)subtitleToMandarinEndTrackWithStatus:(BOOL)arg0;
- (id)commonTrackDic;
- (double)marginToContainerCenterY;
- (void)refreshCaptionBottomViewTypeCaption:(BOOL)arg0;
- (void)setSeekTimeFinished:(BOOL)arg0;
- (id)handleModelForAutoLine:(id)arg0;
- (long long)fixedEndOfLineFromStart:(long long)arg0 forString:(id)arg1;
- (void)removeCaptions;
- (void)updateCaptionTextStyle:(unsigned long long)arg0;
- (void)commitAndQueryCaptionTransition;
- (void)updateToolBarEnable:(id)arg0;
- (void)setNeedRestorePlayer:(BOOL)arg0;
- (long long)highlightIndexWithContentOffset:(double)arg0;
- (void)restorePlayerStatus;
- (BOOL)needRestorePlayer;
- (BOOL)backupIsPlaying;
- (long long)captionIndexWithCurrentPlayerTime:(double)arg0;
- (void)setEnterEditMode:(BOOL)arg0;
- (double)autoCaptionsFooterViewHeigth;
- (id)stopAndPlayImageView;
- (BOOL)seekTimeFinished;
- (void)scrollCaptionWithCurrentPlayerTime:(double)arg0;
- (void)updateStickerContainerWithCurrentPlayerTime:(double)arg0;
- (void)p_setupUIOptimizationPlayBtn:(BOOL)arg0;
- (void)collectionViewScrollStopAtIndex:(long long)arg0;
- (void)setStopAndPlayBtn:(id)arg0;
- (void)setStopAndPlayImageView:(id)arg0;
- (double)requestStartTime;
- (id)init;
- (void)collectionView:(id)arg0 didSelectItemAtIndexPath:(id)arg1;
- (void)collectionView:(id)arg0 willDisplayCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg0 numberOfItemsInSection:(long long)arg1;
- (void)viewDidAppear:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })collectionView:(id)arg0 layout:(id)arg1 sizeForItemAtIndexPath:(id)arg2;
- (void).cxx_destruct;
- (long long)currentIndex;
- (id)collectionView:(id)arg0 cellForItemAtIndexPath:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg0;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)scrollViewDidEndScrollingAnimation:(id)arg0;
- (long long)preferredStatusBarStyle;
- (void)setCurrentIndex:(long long)arg0;
- (void)scrollViewDidScroll:(id)arg0;
- (void)setRepository:(id)arg0;
- (void)setRequestStartTime:(double)arg0;
- (void)scrollViewDidEndDragging:(id)arg0 willDecelerate:(BOOL)arg1;
- (id)repository;
- (BOOL)isPlaying;
- (BOOL)prefersStatusBarHidden;
- (void)viewWillAppear:(BOOL)arg0;
- (void)scrollViewWillBeginDragging:(id)arg0;
- (void)dealloc;
- (void)setIsPlaying:(BOOL)arg0;
- (void)viewDidLoad;
- (void)setIsRetry:(BOOL)arg0;
- (BOOL)isRetry;
- (id)bottomView;
- (void)setBottomView:(id)arg0;
- (BOOL)enterEditMode;

@end
