//
//     Generated by private class-dump
//

@class NSArray, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface AWETokamakThreadMonitorPlatform : NSObject {
    BOOL _enableNumberUpload;
    BOOL _enableSenceCapture;
    unsigned long long _interval;
    unsigned long long _uploadOption;
    unsigned long long _delayTimeRange;
    unsigned long long _threadLimit;
    unsigned long long _uploadLimit;
    NSArray *_combineList;
    NSArray *_specifyThreadLimitName;
    NSArray *_specifyThreadLimitValue;
    NSObject<OS_dispatch_queue> *_checkQueue;
    NSObject<OS_dispatch_source> *_timer;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *checkQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;
@property (nonatomic) unsigned long long interval;
@property (nonatomic) unsigned long long uploadOption;
@property (nonatomic) unsigned long long delayTimeRange;
@property (nonatomic) unsigned long long threadLimit;
@property (nonatomic) unsigned long long uploadLimit;
@property (nonatomic) BOOL enableNumberUpload;
@property (nonatomic) BOOL enableSenceCapture;
@property (retain, nonatomic) NSArray *combineList;
@property (retain, nonatomic) NSArray *specifyThreadLimitName;
@property (retain, nonatomic) NSArray *specifyThreadLimitValue;

+ (id)shareInstance;

- (void)onViewControllerChanged;
- (void)setDelayTimeRange:(unsigned long long)arg0;
- (unsigned long long)delayTimeRange;
- (void)setThreadLimit:(unsigned long long)arg0;
- (unsigned long long)threadLimit;
- (void)setUploadOption:(unsigned long long)arg0;
- (void)setEnableNumberUpload:(BOOL)arg0;
- (void)setCombineList:(id)arg0;
- (void)setSpecifyThreadLimitName:(id)arg0;
- (void)setSpecifyThreadLimitValue:(id)arg0;
- (void)setEnableSenceCapture:(BOOL)arg0;
- (void)initConfig:(id)arg0;
- (BOOL)enableSenceCapture;
- (void)checkThreadStatus;
- (void)checkThreadStatusANRWeak;
- (void)checkThreadStatusANR;
- (void)checkThreadStatusMemory;
- (id)combineList;
- (unsigned long long)uploadOption;
- (void)checkThreadStatusForReason:(unsigned long long)arg0;
- (id)specifyThreadLimitName;
- (id)specifyThreadLimitValue;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })dealThreadName:(id)arg0;
- (void)uploadToTea:(id)arg0 threadCountMap:(struct map<std::string, int, std::less<std::string>, std::allocator<std::pair<const std::string, int>>> { struct __tree<std::__value_type<std::string, int>, std::__map_value_compare<std::string, std::__value_type<std::string, int>, std::less<std::string>>, std::allocator<std::__value_type<std::string, int>>> { void *x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, int>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, int>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; })arg1;
- (void)writeThreadInfo:(id)arg0 threadName:(id)arg1 threadNumber:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (BOOL)enableNumberUpload;
- (id)timer;
- (void).cxx_destruct;
- (unsigned long long)interval;
- (void)setInterval:(unsigned long long)arg0;
- (void)setCheckQueue:(id)arg0;
- (void)setTimer:(id)arg0;
- (id)checkQueue;
- (void)start;
- (unsigned long long)uploadLimit;
- (void)setUploadLimit:(unsigned long long)arg0;

@end
