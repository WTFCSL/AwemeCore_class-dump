//
//     Generated by private class-dump
//

@class ACCCameraSubscription, IESMMCameraConfig, NSString, _TtC9CameraKit10CameraView, UIView;
@protocol ACCCameraControlProtocol, IESServiceProvider, ACCCameraScanProtocol, ACCFilterProtocol, ACCKaraokeProtocol, ACCCameraFactory, ACCBeautyProtocol, ACCRecorderProtocol, ACCModeCameraSessionService, ACCMessageProtocol, ACCEffectProtocol, ACCCameraSystemLivePhotoProtocol, VERecorderPublicProtocol, ACCCaptureProcessProtocol, ACCAlgorithmProtocol, ACCMultiCameraProtocol, CameraPreviewProtocol;

@interface ACCCameraServiceNewImpls : NSObject <ACCCameraService, ACCModeCameraSessionBuildListener, CameraKit.CameraSessionSwitchSubscription, CKSCameraServiceBaseProtocol> {
    BOOL _isActive;
    BOOL _cameraHasInit;
    BOOL _hasSendDidRenderMsg;
    BOOL _isCameraCompleted;
    BOOL _isLoadFinished;
    IESMMCameraConfig *_config;
    id<ACCCameraFactory> _cameraFactory;
    UIView<CameraPreviewProtocol> *_cameraPreviewView;
    _TtC9CameraKit10CameraView *_cameraView;
    id<VERecorderPublicProtocol> _camera;
    ACCCameraSubscription *_subscription;
    id<IESServiceProvider> _serviceResolver;
    id<ACCModeCameraSessionService> _modeCameraSessionService;
}

@property (retain, nonatomic) id<VERecorderPublicProtocol> camera;
@property (nonatomic) BOOL cameraHasInit;
@property (retain, nonatomic) ACCCameraSubscription *subscription;
@property (nonatomic) BOOL hasSendDidRenderMsg;
@property (nonatomic) BOOL isCameraCompleted;
@property (nonatomic) BOOL isLoadFinished;
@property (weak, nonatomic) id<IESServiceProvider> serviceResolver;
@property (retain, nonatomic) id<ACCModeCameraSessionService> modeCameraSessionService;
@property (readonly, nonatomic) UIView<CameraPreviewProtocol> *cameraPreviewView;
@property (readonly, nonatomic) _TtC9CameraKit10CameraView *cameraView;
@property (retain, nonatomic) id<ACCCameraFactory> cameraFactory;
@property (retain, nonatomic) IESMMCameraConfig *config;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<ACCCameraControlProtocol> cameraControl;
@property (readonly, nonatomic) id<ACCFilterProtocol> filter;
@property (readonly, nonatomic) id<ACCEffectProtocol> effect;
@property (readonly, nonatomic) id<ACCBeautyProtocol> beauty;
@property (readonly, nonatomic) id<ACCRecorderProtocol> recorder;
@property (readonly, nonatomic) id<ACCAlgorithmProtocol> algorithm;
@property (readonly, nonatomic) id<ACCMessageProtocol> message;
@property (readonly, nonatomic) id<ACCKaraokeProtocol> karaoke;
@property (readonly, nonatomic) id<ACCCaptureProcessProtocol> captureProcess;
@property (readonly, nonatomic) id<ACCCameraScanProtocol> scan;
@property (readonly, nonatomic) id<ACCMultiCameraProtocol> multiCamera;
@property (readonly, nonatomic) id<ACCCameraSystemLivePhotoProtocol> livePhoto;
@property (readonly, nonatomic) BOOL isActive;

- (id)resolveObject:(id)arg0;
- (void)setCameraContext:(void *)arg0;
- (id)beauty;
- (id /* block */)cameraActionBlock;
- (void)preloadCameraInstanceAvailable:(id)arg0 forSessionKey:(id)arg1;
- (void)cameraInstanceDidCreated:(id)arg0 cameraSessionKey:(id)arg1;
- (void)activateWith:(id)arg0;
- (void)didSwitchCameraSessionFrom:(id)arg0 to:(id)arg1;
- (void)willSwitchCameraSessionFrom:(id)arg0 to:(id)arg1;
- (id)karaoke;
- (id)cameraControl;
- (id)captureProcess;
- (id)multiCamera;
- (void)buildCameraIfNeeded;
- (void)buildCameraIfNeededWithCompletion:(id /* block */)arg0;
- (void)updatePreviewViewOrientation;
- (void)markComponentsLoadFinished;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cameraPreviewViewFrame;
- (void)rebindCameraLifeCircle;
- (void)removeCameraLifeCircle;
- (void)setCameraIfNeeded:(id)arg0;
- (void)setCameraDurationBlock;
- (id /* block */)wrappedCameraActionBlock;
- (BOOL)cameraHasInit;
- (id)cameraFactory;
- (void)setCameraFactory:(id)arg0;
- (void)configResolver:(id)arg0;
- (void)cameraSessionVECameraCreateCompletion;
- (void)setCameraHasInit:(BOOL)arg0;
- (id)cameraSessionManager;
- (BOOL)p_verifyCameraContext;
- (id)modeCameraSessionService;
- (void)setModeCameraSessionService:(id)arg0;
- (void)cameraSessionCameraWillCreate;
- (id)serviceResolver;
- (void)setCameraBGMProgressBlock;
- (void)setIsCameraCompleted:(BOOL)arg0;
- (void)p_handleComleteCamera;
- (void)bindCameraLifeCircle;
- (void)setIsLoadFinished:(BOOL)arg0;
- (BOOL)isLoadFinished;
- (BOOL)isCameraCompleted;
- (BOOL)hasSendDidRenderMsg;
- (void)setHasSendDidRenderMsg:(BOOL)arg0;
- (void)postConfigCameraAfterCameraCreated:(id)arg0;
- (void)setServiceResolver:(id)arg0;
- (id)algorithm;
- (id)camera;
- (id)effect;
- (id)filter;
- (void)setConfig:(id)arg0;
- (void)setCamera:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (void)deactivate;
- (id)recorder;
- (id)message;
- (BOOL)isSplitting;
- (BOOL)isActive;
- (void)setSubscription:(id)arg0;
- (id)livePhoto;
- (void)addSubscriber:(id)arg0;
- (id)subscription;
- (void)removeSubscriber:(id)arg0;
- (id)cameraView;
- (id)cameraPreviewView;
- (id)scan;

@end
