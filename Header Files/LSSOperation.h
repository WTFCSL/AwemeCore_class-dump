//
//     Generated by private class-dump
//

@class NSDate;

@interface LSSOperation : NSOperation {
    BOOL _shouldBlockWhenTimeOut;
    id /* block */ _block;
    id /* block */ _timeoutBlock;
    long long _state;
    double _checkTimeInterval;
    double _timeoutInSeconds;
    NSDate *_startDate;
}

@property (copy, nonatomic) id /* block */ block;
@property (copy, nonatomic) id /* block */ timeoutBlock;
@property (nonatomic) long long state;
@property (nonatomic) double checkTimeInterval;
@property (nonatomic) double timeoutInSeconds;
@property (retain, nonatomic) NSDate *startDate;
@property (nonatomic) BOOL shouldBlockWhenTimeOut;

+ (id)operationWithBlock:(id /* block */)arg0 timeoutInSeconds:(double)arg1 shouldBlockWhenTimeOut:(BOOL)arg2;
+ (id)operationWithBlockAndTimeoutBlock:(id /* block */)arg0 timeoutBlock:(id /* block */)arg1 timeoutInSeconds:(double)arg2 shouldBlockWhenTimeOut:(BOOL)arg3;

- (id)initWithBlock:(id /* block */)arg0 timeoutBlock:(id /* block */)arg1 timeoutInSeconds:(double)arg2 shouldBlockWhenTimeOut:(BOOL)arg3;
- (double)checkTimeInterval;
- (void)setCheckTimeInterval:(double)arg0;
- (BOOL)shouldBlockWhenTimeOut;
- (void)setShouldBlockWhenTimeOut:(BOOL)arg0;
- (double)timeoutInSeconds;
- (void)main;
- (void).cxx_destruct;
- (void)setTimeoutBlock:(id /* block */)arg0;
- (long long)state;
- (id /* block */)timeoutBlock;
- (void)finish;
- (void)setState:(long long)arg0;
- (void)setBlock:(id /* block */)arg0;
- (id)startDate;
- (void)setStartDate:(id)arg0;
- (id /* block */)block;
- (void)setTimeoutInSeconds:(double)arg0;

@end
