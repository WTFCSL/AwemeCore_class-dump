//
//     Generated by private class-dump
//

@class NSString;

@interface EAIPortraitTable : NSObject <WCTTableCoding> {
    int _contentProtocol;
    NSString *_uid;
    NSString *_name;
    NSString *_content;
    double _lastUpdate;
}

@property (copy, nonatomic) NSString *uid;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *content;
@property (nonatomic) int contentProtocol;
@property (nonatomic) double lastUpdate;

+ (const struct WCTBinding { Class x0; struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> > > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> >, WCDB::CaseInsensiveComparetor, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> > > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> *x0; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding> >, WCDB::CaseInsensiveComparetor, true> > { unsigned long long x0; } x2; } x0; } x1; struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding> > > { struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> { struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *x0; struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCTColumnBinding>, void *> > > { unsigned long long x0; } x1; } x2; struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding> > > > > { struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding> > > > *x0; struct __shared_weak_count *x1; } x3; struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase> > > > > { struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase> > > > *x0; struct __shared_weak_count *x1; } x4; struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase> > > > { struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase> > > *x0; struct __shared_weak_count *x1; } x5; struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > > { struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *x0; struct __shared_weak_count *x1; } x6; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x7; } *)objectRelationalMappingForWCDB;
+ (const struct WCTPropertyList { struct __list_node_base<const WCTProperty, void *> { struct __list_node_base<const WCTProperty, void *> *x0; struct __list_node_base<const WCTProperty, void *> *x1; } x0; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTProperty, void *> > > { unsigned long long x0; } x1; } *)AllProperties;
+ (const struct WCTAnyProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; } *)AnyProperty;
+ (id /* block */)PropertyNamed;
+ (const struct WCTProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; } *)contentProtocol;
+ (const struct WCTProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; } *)uid;
+ (const struct WCTProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; } *)content;
+ (const struct WCTProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; } *)lastUpdate;
+ (const struct WCTProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; } *)name;

- (int)contentProtocol;
- (void)setContentProtocol:(int)arg0;
- (void)setUid:(id)arg0;
- (id)uid;
- (void)setLastUpdate:(double)arg0;
- (void).cxx_destruct;
- (id)content;
- (double)lastUpdate;
- (void)setContent:(id)arg0;
- (void)setName:(id)arg0;
- (id)name;

@end
