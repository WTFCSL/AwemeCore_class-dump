//
//     Generated by private class-dump
//

@class NSData, UIImage, NSMutableDictionary, NSDictionary, NSObject, NSIndexSet, NSMutableIndexSet;
@protocol OS_dispatch_queue;

@interface FLAnimatedImage : NSObject {
    BOOL _predrawingEnabled;
    UIImage *_posterImage;
    unsigned long long _loopCount;
    NSDictionary *_delayTimesForIndexes;
    unsigned long long _frameCount;
    unsigned long long _frameCacheSizeMax;
    NSData *_data;
    unsigned long long _frameCacheSizeOptimal;
    unsigned long long _frameCacheSizeMaxInternal;
    unsigned long long _requestedFrameIndex;
    unsigned long long _posterImageFrameIndex;
    NSMutableDictionary *_cachedFramesForIndexes;
    NSMutableIndexSet *_cachedFrameIndexes;
    NSMutableIndexSet *_requestedFrameIndexes;
    NSIndexSet *_allFramesIndexSet;
    unsigned long long _memoryWarningCount;
    NSObject<OS_dispatch_queue> *_serialQueue;
    struct CGImageSource { } *_imageSource;
    FLAnimatedImage *_weakProxy;
    struct CGSize { double width; double height; } _size;
}

@property (readonly, nonatomic) unsigned long long frameCacheSizeOptimal;
@property (readonly, nonatomic, getter=isPredrawingEnabled) BOOL predrawingEnabled;
@property (nonatomic) unsigned long long frameCacheSizeMaxInternal;
@property (nonatomic) unsigned long long requestedFrameIndex;
@property (readonly, nonatomic) unsigned long long posterImageFrameIndex;
@property (readonly, nonatomic) NSMutableDictionary *cachedFramesForIndexes;
@property (readonly, nonatomic) NSMutableIndexSet *cachedFrameIndexes;
@property (readonly, nonatomic) NSMutableIndexSet *requestedFrameIndexes;
@property (readonly, nonatomic) NSIndexSet *allFramesIndexSet;
@property (nonatomic) unsigned long long memoryWarningCount;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property (readonly, nonatomic) struct CGImageSource { } *imageSource;
@property (readonly, nonatomic) FLAnimatedImage *weakProxy;
@property (readonly, nonatomic) UIImage *posterImage;
@property (readonly, nonatomic) struct CGSize { double width; double height; } size;
@property (readonly, nonatomic) unsigned long long loopCount;
@property (readonly, nonatomic) NSDictionary *delayTimesForIndexes;
@property (readonly, nonatomic) unsigned long long frameCount;
@property (readonly, nonatomic) unsigned long long frameCacheSizeCurrent;
@property (nonatomic) unsigned long long frameCacheSizeMax;
@property (readonly, nonatomic) NSData *data;

+ (void)logStringFromBlock:(id /* block */)arg0 withLevel:(unsigned long long)arg1;
+ (id)predrawnImageFromImage:(id)arg0;
+ (id)animatedImageWithGIFData:(id)arg0;
+ (struct CGSize { double x0; double x1; })sizeForImage:(id)arg0;
+ (void)setLogBlock:(id /* block */)arg0 logLevel:(unsigned long long)arg1;
+ (void)initialize;

- (id)weakProxy;
- (unsigned long long)frameCacheSizeOptimal;
- (unsigned long long)frameCacheSizeMax;
- (unsigned long long)frameCacheSizeMaxInternal;
- (unsigned long long)frameCacheSizeCurrent;
- (void)purgeFrameCacheIfNeeded;
- (id)initWithAnimatedGIFData:(id)arg0;
- (id)initWithAnimatedGIFData:(id)arg0 optimalFrameCacheSize:(unsigned long long)arg1 predrawingEnabled:(BOOL)arg2;
- (id)cachedFramesForIndexes;
- (unsigned long long)posterImageFrameIndex;
- (id)cachedFrameIndexes;
- (void)setRequestedFrameIndex:(unsigned long long)arg0;
- (id)frameIndexesToCache;
- (id)requestedFrameIndexes;
- (void)addFrameIndexesToCache:(id)arg0;
- (unsigned long long)requestedFrameIndex;
- (BOOL)isPredrawingEnabled;
- (id)allFramesIndexSet;
- (void)setFrameCacheSizeMaxInternal:(unsigned long long)arg0;
- (void)resetFrameCacheSizeMaxInternal;
- (unsigned long long)memoryWarningCount;
- (void)setMemoryWarningCount:(unsigned long long)arg0;
- (void)growFrameCacheSizeAfterMemoryWarning:(id)arg0;
- (void)setFrameCacheSizeMax:(unsigned long long)arg0;
- (id)imageLazilyCachedAtIndex:(unsigned long long)arg0;
- (id)delayTimesForIndexes;
- (id)init;
- (id)data;
- (struct CGImageSource { } *)imageSource;
- (void).cxx_destruct;
- (unsigned long long)frameCount;
- (id)serialQueue;
- (id)posterImage;
- (struct CGSize { double x0; double x1; })size;
- (id)description;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(id)arg0;
- (id)imageAtIndex:(unsigned long long)arg0;
- (unsigned long long)loopCount;

@end
