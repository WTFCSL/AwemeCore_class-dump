//
//     Generated by private class-dump
//

@class BDPSchema, NSMutableDictionary, NSTimer, BDPModel, NSString, BDPUniqueID;
@protocol BDPFileHandleProtocol;

@interface BDPAppPreloadCache : NSObject <BDPAppPreloadMessage> {
    BOOL _needPreload;
    BDPUniqueID *_uniqueID;
    id<BDPFileHandleProtocol> _currentReader;
    BDPModel *_currentModel;
    BDPSchema *_currentSchema;
    NSMutableDictionary *_preloadTasks;
    NSTimer *_cleanTimer;
    long long _type;
}

@property (retain, nonatomic) NSMutableDictionary *preloadTasks;
@property (retain, nonatomic) NSTimer *cleanTimer;
@property (nonatomic) BOOL needPreload;
@property (nonatomic) long long type;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) id<BDPFileHandleProtocol> currentReader;
@property (retain, nonatomic) BDPModel *currentModel;
@property (retain, nonatomic) BDPSchema *currentSchema;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)setupObserver;
+ (void)bootstrapLaunch;
+ (void)reciveMemoryWarningNotification:(id)arg0;
+ (id)accessPreloadCacheWithUniqueID:(id)arg0;
+ (void)registerDataSourceClass:(Class)arg0 withSourceType:(id)arg1;
+ (void)appPreloadFinishedWithModel:(id)arg0 schema:(id)arg1 error:(id)arg2;
+ (void)removePreloadCacheWithUniqueID:(id)arg0;
+ (id)dataSourceClsMap;
+ (long long)getCacheCountLimit;
+ (id)createPreloadCacheIfNeededWithUniqueID:(id)arg0 type:(long long)arg1;
+ (void)triggerPreloadWithCache:(id)arg0;
+ (id)cacheQueue;
+ (void)removeAllObjects;
+ (id)cacheDict;

- (void)setupCache;
- (BOOL)needPreload;
- (void)setNeedPreload:(BOOL)arg0;
- (id)preloadTasks;
- (void)setPreloadTasks:(id)arg0;
- (void)setCurrentSchema:(id)arg0;
- (id)currentSchema;
- (id)currentReader;
- (void)setupAllDataSources;
- (void)setCleanTimer:(id)arg0;
- (void)setupAutoClean;
- (id)initWithUniqueID:(id)arg0 type:(long long)arg1;
- (void)setCurrentReader:(id)arg0;
- (id)popObjectWithSourceType:(id)arg0;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (long long)type;
- (void)setType:(long long)arg0;
- (id)cleanTimer;
- (void)dealloc;
- (void)setCurrentModel:(id)arg0;
- (id)currentModel;

@end
