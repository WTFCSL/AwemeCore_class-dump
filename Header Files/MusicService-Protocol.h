//
//     Generated by private class-dump
//

@class NSDictionary, AWEMusicPlayerModel;

@protocol MusicService <HTSService>

+ (id)service;

@property (nonatomic) long long scaleMode;
@property (nonatomic) BOOL resumePlayWhenInterruptionEnd;
@property (nonatomic) BOOL fadeInOutEnable;
@property (nonatomic) long long preloadMusicCount;
@property (nonatomic) BOOL canBackgroundPlay;
@property (nonatomic, copy) NSDictionary *bizFlags;
@property (nonatomic, copy) NSDictionary *trackParams;
@property (nonatomic, readonly) BOOL isPlayingInner;
@property (nonatomic, readonly) BOOL isSeeking;
@property (nonatomic, readonly) AWEMusicPlayerModel *willPlayingModel;

- (long long)playBitrate;
- (id)trackParams;
- (void)setCanBackgroundPlay:(BOOL)arg0;
- (void)setTrackParams:(id)arg0;
- (id)playingModel;
- (void)setMusicModels:(id)arg0 current:(id)arg1 queueId:(id)arg2;
- (void)appendMusicModels:(id)arg0;
- (id)currentPlayModel;
- (BOOL)resumePlayWhenInterruptionEnd;
- (void)setResumePlayWhenInterruptionEnd:(BOOL)arg0;
- (BOOL)fadeInOutEnable;
- (void)setFadeInOutEnable:(BOOL)arg0;
- (long long)preloadMusicCount;
- (void)setPreloadMusicCount:(long long)arg0;
- (BOOL)canBackgroundPlay;
- (id)bizFlags;
- (void)setBizFlags:(id)arg0;
- (BOOL)isPlayingInner;
- (id)willPlayingModel;
- (void)pauseWithType:(long long)arg0;
- (void)pauseWithType:(long long)arg0;
- (void)stopWithType:(long long)arg0;
- (void)stopWithType:(long long)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1 renderComplete:(id /* block */)arg2;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1 renderComplete:(id /* block */)arg2;
- (BOOL)isLoadStatePlayable;
- (double)actualDuration;
- (double)actualPlaybackTime;
- (long long)playStatus;
- (void)setQueue:(id)arg0 method:(long long)arg1;
- (void)feedQueue:(id)arg0;
- (BOOL)updateCurrentModel:(id)arg0;
- (BOOL)updateCurrentModel:(id)arg0 method:(long long)arg1;
- (BOOL)updateCurrentModelWithoutPlay:(id)arg0;
- (BOOL)updateCurrentModelWithoutPlay:(id)arg0 method:(long long)arg1;
- (void)resetRemotePlayInfo;
- (void)setMusicModels:(id)arg0 current:(id)arg1 queueId:(id)arg2 method:(long long)arg3;
- (void)playFinishToNext;
- (void)goPrevWithNotification;
- (void)goNextWithNotification;
- (BOOL)canGoPrev;
- (BOOL)canGoNext;
- (long long)getCacheSizeByModel:(id)arg0;
- (long long)getCacheSizeByModel:(id)arg0;
- (void)attachObject:(id)arg0 forKey:(id)arg1;
- (void)attachObject:(id)arg0 forKey:(id)arg1;
- (id)getAttachedObjectForKey:(id)arg0;
- (id)getAttachedObjectForKey:(id)arg0;
- (void)updateTrackParams:(id)arg0;
- (void)manualAuidoOver;
- (void)removeRemoteControlCommand;
- (long long)playbackState;
- (void)setStartTime:(double)arg0;
- (void)stop;
- (void)removeObjectForKey:(id)arg0;
- (void)removeObjectForKey:(id)arg0;
- (double)duration;
- (void)addObserver:(id)arg0;
- (BOOL)isPlaying;
- (double)playbackTime;
- (id)playerView;
- (void)clear;
- (BOOL)isSeeking;
- (id)queue;
- (void)play;
- (void)pause;
- (void)seekToTime:(double)arg0;
- (void)seekToTime:(double)arg0;
- (void)setQueue:(id)arg0;
- (void)removeObserver:(id)arg0;
- (BOOL)looping;
- (void)prepareToPlay;
- (double)durationWatched;
- (double)playableDuration;
- (void)setIsLooping:(BOOL)arg0;
- (void)setScaleMode:(long long)arg0;
- (long long)scaleMode;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
