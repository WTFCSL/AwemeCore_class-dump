//
//     Generated by private class-dump
//

@class IESECSlidingTabScrollView, UIView, NSArray, NSString, NSDictionary, NSMutableArray, CAGradientLayer, IESECSlidingTabButton, UIColor;
@protocol IESECSlidingTabbarDelegate, IESECSlidingTabbarLayoutDelegate, IESECSlidingTabContainerProtocol;

@interface IESECSlidingTabbarView : UIView <IESECSlidingTabbarProtocol> {
    struct { unsigned char hasImplWidthForSegmentAtIndex : 1; unsigned char hasImplInsetForSegmentAtIndex : 1; unsigned char hasLayout : 1; unsigned char isAnimating : 1; unsigned char isTabClicked : 1; unsigned char needsReload : 1; } _mState;
    BOOL _enableForwardHitTest;
    BOOL _indicatorTracked;
    BOOL _enableSwitchAnimation;
    BOOL _hiddenIndicator;
    BOOL _scrollEnabled;
    IESECSlidingTabScrollView *_contentScrollView;
    id<IESECSlidingTabbarDelegate> _delegate;
    NSArray *_tabInfos;
    NSDictionary *_titleAttributes;
    NSDictionary *_selectedTitleAttributes;
    long long _hLayoutAlignment;
    long long _vLayoutAlignment;
    long long _widthStyle;
    long long _imagePostion;
    double _segmentMinimumWidth;
    double _iconPadding;
    id<IESECSlidingTabbarLayoutDelegate> _layoutDelegate;
    id /* block */ _configTabBlock;
    long long _indicatorStyle;
    double _indicatorFixedWidth;
    double _indicatorMinimumWidth;
    double _indicatorHeight;
    double _indicatorCornerRadius;
    UIColor *_indicatorColor;
    CAGradientLayer *_indicatorGradientLayer;
    long long _selectedIndex;
    long long _preButtonCount;
    UIView *_indicatorView;
    NSMutableArray *_tabButtons;
    NSArray *_segmentWidthsArray;
    NSMutableArray *_innerAttributedTitles;
    NSMutableArray *_innerSelectedAttributedTitles;
    struct CGSize { double width; double height; } _iconSize;
    struct CGSize { double width; double height; } _selectedIconSize;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _contentInset;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _segmentEdgeInset;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _scrollViewInset;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } _indicatorEdgeInsets;
}

@property (nonatomic) BOOL scrollEnabled;
@property (retain, nonatomic) UIView *indicatorView;
@property (retain, nonatomic) IESECSlidingTabScrollView *contentScrollView;
@property (retain, nonatomic) NSMutableArray *tabButtons;
@property (copy, nonatomic) NSArray *segmentWidthsArray;
@property (retain, nonatomic) NSMutableArray *innerAttributedTitles;
@property (retain, nonatomic) NSMutableArray *innerSelectedAttributedTitles;
@property (weak, nonatomic) id<IESECSlidingTabbarDelegate> delegate;
@property (readonly, nonatomic) long long tabsCount;
@property (nonatomic) BOOL enableForwardHitTest;
@property (copy, nonatomic) NSArray *tabInfos;
@property (copy, nonatomic) NSDictionary *titleAttributes;
@property (copy, nonatomic) NSDictionary *selectedTitleAttributes;
@property (nonatomic) long long hLayoutAlignment;
@property (nonatomic) long long vLayoutAlignment;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } contentInset;
@property (nonatomic) long long widthStyle;
@property (nonatomic) long long imagePostion;
@property (nonatomic) double segmentMinimumWidth;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } segmentEdgeInset;
@property (nonatomic) struct CGSize { double width; double height; } iconSize;
@property (nonatomic) struct CGSize { double width; double height; } selectedIconSize;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } scrollViewInset;
@property (nonatomic) double iconPadding;
@property (weak, nonatomic) id<IESECSlidingTabbarLayoutDelegate> layoutDelegate;
@property (copy, nonatomic) id /* block */ configTabBlock;
@property (nonatomic) long long indicatorStyle;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } indicatorEdgeInsets;
@property (nonatomic) double indicatorFixedWidth;
@property (nonatomic) double indicatorMinimumWidth;
@property (nonatomic) double indicatorHeight;
@property (nonatomic) double indicatorCornerRadius;
@property (retain, nonatomic) UIColor *indicatorColor;
@property (retain, nonatomic) CAGradientLayer *indicatorGradientLayer;
@property (nonatomic, getter=isIndicatorTracked) BOOL indicatorTracked;
@property (nonatomic) BOOL enableSwitchAnimation;
@property (nonatomic) BOOL hiddenIndicator;
@property (nonatomic) long long selectedIndex;
@property (nonatomic) long long preButtonCount;
@property (readonly, weak, nonatomic) id<IESECSlidingTabContainerProtocol> slidingContainer;
@property (readonly, nonatomic) IESECSlidingTabButton *currentSelectedBtn;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setWidthStyle:(long long)arg0;
- (void)setTabInfos:(id)arg0;
- (long long)widthStyle;
- (double)indicatorHeight;
- (void)setIndicatorHeight:(double)arg0;
- (BOOL)enableSwitchAnimation;
- (void)setEnableSwitchAnimation:(BOOL)arg0;
- (void)tabButtonClicked:(id)arg0;
- (struct CGPoint { double x0; double x1; })transformScaleWithButton:(id)arg0;
- (BOOL)needScroll;
- (id)resizeImage:(id)arg0 ToSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setImagePostion:(long long)arg0;
- (void)setIndicatorEdgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (void)setIndicatorGradientLayer:(id)arg0;
- (long long)imagePostion;
- (void)updateSegmentsRects;
- (id)tabButtons;
- (id)slidingContainer;
- (void)updateInnerAttributedTitles;
- (void)markDelegateMethodImpl;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForIndicatorAtIndex:(long long)arg0;
- (void)setSelectIndicatorGradientLayerFrame;
- (void)selectIndexInScrollView:(long long)arg0 animated:(BOOL)arg1;
- (void)updateSegmentEdgeInset;
- (void)doReloadData;
- (id)innerAttributedTitles;
- (id)innerSelectedAttributedTitles;
- (struct CGSize { double x0; double x1; })selectedIconSize;
- (id)createAttributedStringWithTitle:(id)arg0 image:(id)arg1 imageSize:(struct CGSize { double x0; double x1; })arg2 attributes:(id)arg3 color:(id)arg4;
- (id)selectedTitleAttributes;
- (id /* block */)configTabBlock;
- (void)slidingContainer:(id)arg0 didScroll:(id)arg1 animated:(BOOL)arg2;
- (void)scrollRatioWithSlidingContainer:(id)arg0 scrollView:(id)arg1 animated:(BOOL)arg2;
- (BOOL)isIndicatorTracked;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForIndicatorWithButton:(id)arg0 state:(long long)arg1;
- (double)segmentMinimumWidth;
- (void)setSegmentWidthsArray:(id)arg0;
- (id)segmentWidthsArray;
- (long long)vLayoutAlignment;
- (long long)hLayoutAlignment;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })scrollViewInset;
- (void)enumerateTabButtonsUsingBlock:(id /* block */)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })segmentEdgeInset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForIndicatorWithButton:(id)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })indicatorEdgeInsets;
- (double)indicatorFixedWidth;
- (double)indicatorMinimumWidth;
- (void)selectButtonInScrollView:(id)arg0 animated:(BOOL)arg1;
- (void)setSelectIndicatorFrameWithButton:(id)arg0 animated:(BOOL)arg1;
- (void)setSelectIndicatorFrameWithButton:(id)arg0;
- (long long)preButtonCount;
- (void)slidingContainer:(id)arg0 didScroll:(id)arg1;
- (id)currentSelectedBtn;
- (void)setSelectedTitleAttributes:(id)arg0;
- (void)setIndicatorCornerRadius:(double)arg0;
- (void)setHiddenIndicator:(BOOL)arg0;
- (void)setSegmentEdgeInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (BOOL)enableForwardHitTest;
- (void)setEnableForwardHitTest:(BOOL)arg0;
- (void)setHLayoutAlignment:(long long)arg0;
- (void)setVLayoutAlignment:(long long)arg0;
- (void)setSegmentMinimumWidth:(double)arg0;
- (void)setSelectedIconSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setScrollViewInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (void)setConfigTabBlock:(id /* block */)arg0;
- (void)setIndicatorFixedWidth:(double)arg0;
- (void)setIndicatorMinimumWidth:(double)arg0;
- (double)indicatorCornerRadius;
- (id)indicatorGradientLayer;
- (void)setIndicatorTracked:(BOOL)arg0;
- (BOOL)hiddenIndicator;
- (void)setPreButtonCount:(long long)arg0;
- (void)setTabButtons:(id)arg0;
- (void)setInnerAttributedTitles:(id)arg0;
- (void)setInnerSelectedAttributedTitles:(id)arg0;
- (void)setTitleAttributes:(id)arg0;
- (id)titleAttributes;
- (void)setContentInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (void)setIconSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })iconSize;
- (void)setLayoutDelegate:(id)arg0;
- (id)layoutDelegate;
- (void)setScrollEnabled:(BOOL)arg0;
- (BOOL)scrollEnabled;
- (void).cxx_destruct;
- (void)setSelectedIndex:(long long)arg0;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)indicatorColor;
- (void)reloadData;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInset;
- (id)delegate;
- (id)indicatorView;
- (id)tabInfos;
- (id)contentScrollView;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)setIndicatorStyle:(long long)arg0;
- (void)setIndicatorColor:(id)arg0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (long long)selectedIndex;
- (double)widthForSegmentAtIndex:(long long)arg0;
- (void)setIndicatorView:(id)arg0;
- (long long)indicatorStyle;
- (void)setContentScrollView:(id)arg0;
- (void)setSelectedIndex:(long long)arg0 animated:(BOOL)arg1;
- (void)setIconPadding:(double)arg0;
- (double)iconPadding;
- (long long)tabsCount;

@end
