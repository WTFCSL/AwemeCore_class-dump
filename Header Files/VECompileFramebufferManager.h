//
//     Generated by private class-dump
//

@class HTSGLContext, NSMutableArray, NSCondition;

@interface VECompileFramebufferManager : NSObject {
    NSMutableArray *_framebufferPool;
    long long _resourceCount;
    HTSGLContext *_glContext;
    long long _minBufferSize;
    double _waitTime;
    NSCondition *_conditionLock;
    struct CGSize { double width; double height; } _framebufferSize;
}

@property (retain, nonatomic) NSMutableArray *framebufferPool;
@property (nonatomic) long long resourceCount;
@property (retain, nonatomic) HTSGLContext *glContext;
@property (nonatomic) struct CGSize { double width; double height; } framebufferSize;
@property (nonatomic) long long minBufferSize;
@property (nonatomic) double waitTime;
@property (retain, nonatomic) NSCondition *conditionLock;

- (id)conditionLock;
- (void)setConditionLock:(id)arg0;
- (void)setWaitTime:(double)arg0;
- (double)waitTime;
- (void)setFramebufferSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })framebufferSize;
- (void)initFramebufferPool:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (id)framebufferPool;
- (void)setFramebufferPool:(id)arg0;
- (void)setResourceCount:(long long)arg0;
- (long long)minBufferSize;
- (void)setMinBufferSize:(long long)arg0;
- (void)returnFramebuffer:(id)arg0;
- (id)fetchFramebuffer;
- (id)initManagerWithPipelineResourceCount:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1 context:(id)arg2;
- (void).cxx_destruct;
- (void)dealloc;
- (long long)resourceCount;
- (id)glContext;
- (void)setGlContext:(id)arg0;

@end
