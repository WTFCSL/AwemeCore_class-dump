//
//     Generated by private class-dump
//

@class NSString, UIImageView, UILabel, UIView, MASConstraint;

@interface CJPayBankCardOCRViewController : CJPayCardOCRViewController <UINavigationControllerDelegate, UIImagePickerControllerDelegate, PHPickerViewControllerDelegate, UIAdaptivePresentationControllerDelegate> {
    BOOL _isRunningErrorTipsAnimation;
    BOOL _errorTipsHasShowed;
    BOOL _isFirstSampleOutput;
    long long _minLength;
    long long _maxLength;
    UIView *_photoIconImageView;
    UILabel *_titleLabel;
    double _ocrAppearTime;
    double _albumAppearTime;
    UILabel *_tipsLabel;
    UIImageView *_errorImageView;
    UILabel *_errorTipsLabel;
    double _lastErrorTipsAnimationTime;
    MASConstraint *_photoIconBottomConstraint;
    MASConstraint *_photoIconTopConstraint;
    unsigned long long _requestCount;
    unsigned long long _callbackCount;
}

@property (retain, nonatomic) UIView *photoIconImageView;
@property (retain, nonatomic) UILabel *titleLabel;
@property (nonatomic) double ocrAppearTime;
@property (nonatomic) double albumAppearTime;
@property (retain, nonatomic) UILabel *tipsLabel;
@property (retain, nonatomic) UIImageView *errorImageView;
@property (retain, nonatomic) UILabel *errorTipsLabel;
@property (nonatomic) BOOL isRunningErrorTipsAnimation;
@property (nonatomic) double lastErrorTipsAnimationTime;
@property (nonatomic) BOOL errorTipsHasShowed;
@property (retain, nonatomic) MASConstraint *photoIconBottomConstraint;
@property (retain, nonatomic) MASConstraint *photoIconTopConstraint;
@property (nonatomic) unsigned long long requestCount;
@property (nonatomic) unsigned long long callbackCount;
@property (nonatomic) BOOL isFirstSampleOutput;
@property (nonatomic) long long minLength;
@property (nonatomic) long long maxLength;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)tipsLabel;
- (id)errorTipsLabel;
- (void)setErrorTipsLabel:(id)arg0;
- (void)setTipsLabel:(id)arg0;
- (void)setCallbackCount:(unsigned long long)arg0;
- (unsigned long long)callbackCount;
- (void)p_showImagePicker;
- (void)p_scanWithSelectPhotoImgData:(id)arg0;
- (void)completionCallBackWithResult:(id)arg0;
- (void)p_alertPhotoOCRFail:(id)arg0;
- (void)alertTimeOut;
- (void)p_selectPhotoToOCR;
- (void)setErrorImageView:(id)arg0;
- (id)errorImageView;
- (void)setIsFirstSampleOutput:(BOOL)arg0;
- (void)setOcrAppearTime:(double)arg0;
- (void)setLastErrorTipsAnimationTime:(double)arg0;
- (id)photoIconImageView;
- (double)lastErrorTipsAnimationTime;
- (BOOL)isRunningErrorTipsAnimation;
- (void)setIsRunningErrorTipsAnimation:(BOOL)arg0;
- (void)p_selectPhotoToOCRButton:(BOOL)arg0;
- (void)setAlbumAppearTime:(double)arg0;
- (id)p_buildBDPayCardOCRRequestParam:(id)arg0;
- (double)albumAppearTime;
- (BOOL)p_isSatisfyRuleWithCardNoStr:(id)arg0;
- (void)trackResult:(id)arg0;
- (double)ocrAppearTime;
- (void)p_localScanImage:(id)arg0 isFromUploadPhoto:(BOOL)arg1;
- (BOOL)isFirstSampleOutput;
- (id)p_cropImage:(id)arg0;
- (void)p_compressAndUploadImage:(id)arg0;
- (void)p_scanWithImage:(id)arg0;
- (void)p_showOCRErrorTips:(BOOL)arg0;
- (BOOL)errorTipsHasShowed;
- (void)setErrorTipsHasShowed:(BOOL)arg0;
- (void)setPhotoIconImageView:(id)arg0;
- (id)photoIconBottomConstraint;
- (void)setPhotoIconBottomConstraint:(id)arg0;
- (id)photoIconTopConstraint;
- (void)setPhotoIconTopConstraint:(id)arg0;
- (void)presentationControllerDidDismiss:(id)arg0;
- (void).cxx_destruct;
- (void)setMinLength:(long long)arg0;
- (id)titleLabel;
- (unsigned long long)requestCount;
- (void)setMaxLength:(long long)arg0;
- (long long)minLength;
- (void)setRequestCount:(unsigned long long)arg0;
- (void)viewDidLoad;
- (void)setTitleLabel:(id)arg0;
- (long long)maxLength;
- (void)captureOutput:(id)arg0 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg1 fromConnection:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg0;
- (void)imagePickerController:(id)arg0 didFinishPickingMediaWithInfo:(id)arg1;
- (void)setupUI;
- (void)picker:(id)arg0 didFinishPicking:(id)arg1;

@end
