//
//     Generated by private class-dump
//

@class UIViewController, IESECCommentBarExpandContext, NSString, UIView, UIPanGestureRecognizer, UITapGestureRecognizer;
@protocol IESECCommentBarExpandContentProtocol;

@interface IESECCommentBarExpandContainerViewController : UIViewController <IESECGoodsDetailHostInjectable, IESECCommentBarExpandContainerProtocol> {
    BOOL _isSlideInteraction;
    BOOL _isFullMode;
    BOOL _firstAppear;
    BOOL _isSelfDisplayedOnScreen;
    id /* block */ willDismiss;
    IESECCommentBarExpandContext *_context;
    UIPanGestureRecognizer *_panGesture;
    UITapGestureRecognizer *_tapGesture;
    UIPanGestureRecognizer *_horizontalDismissPanGesture;
    UIView *_containerView;
    UIViewController<IESECCommentBarExpandContentProtocol> *_contentViewController;
}

@property (retain, nonatomic) IESECCommentBarExpandContext *context;
@property (retain, nonatomic) UIPanGestureRecognizer *panGesture;
@property (retain, nonatomic) UITapGestureRecognizer *tapGesture;
@property (retain, nonatomic) UIPanGestureRecognizer *horizontalDismissPanGesture;
@property (retain, nonatomic) UIView *containerView;
@property (nonatomic) BOOL isSlideInteraction;
@property (nonatomic) BOOL isFullMode;
@property (nonatomic) BOOL firstAppear;
@property (retain, nonatomic) UIViewController<IESECCommentBarExpandContentProtocol> *contentViewController;
@property (nonatomic) BOOL isSelfDisplayedOnScreen;
@property (readonly, nonatomic) BOOL willShowAsChildVC;
@property (copy, nonatomic) id /* block */ willDismiss;
@property (copy, nonatomic) id /* block */ didAppear;
@property (nonatomic) BOOL unPlayWhenClose;
@property (readonly, copy, nonatomic) NSString *animationType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)containerMode;
- (void)setWillDismiss:(id /* block */)arg0;
- (BOOL)willShowAsChildVC;
- (void)registerNotfications;
- (void)forbidContentInteraction;
- (void)resumeContentInteraction;
- (void)createContentViewController;
- (void)setupInteraction;
- (void)setIsSelfDisplayedOnScreen:(BOOL)arg0;
- (id)switchModeAction;
- (void)callWillDismiss;
- (void)horizontalDismissPanGestureHandler:(id)arg0;
- (void)setHorizontalDismissPanGesture:(id)arg0;
- (id)horizontalDismissPanGesture;
- (void)closeByMethod:(id)arg0;
- (void)enterOtherPageWithFullScreen:(BOOL)arg0;
- (BOOL)isFullMode;
- (void)animateFromFullToHalfWithEndingVelocity:(double)arg0 currentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)restoreToFullWithEndingVelocity:(double)arg0 currentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)animateFromHalfToFullWithEndingVelocity:(double)arg0 currentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)animateToDismissWithEndingVelocity:(double)arg0 currentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)restoreToHalfWithEndingVelocity:(double)arg0 currentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setIsFullMode:(BOOL)arg0;
- (BOOL)isSlideInteraction;
- (void)setIsSlideInteraction:(BOOL)arg0;
- (BOOL)isSelfDisplayedOnScreen;
- (id)initWithContext:(id)arg0;
- (id)contentViewController;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setContentViewController:(id)arg0;
- (void)setContext:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)setContainerView:(id)arg0;
- (void)viewDidDisappear:(BOOL)arg0;
- (id)tapGesture;
- (id /* block */)willDismiss;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)containerView;
- (id)context;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (id)panGesture;
- (void)setPanGesture:(id)arg0;
- (void)panGestureHandler:(id)arg0;
- (void)setupUI;
- (void)setFirstAppear:(BOOL)arg0;
- (BOOL)firstAppear;
- (void)setTapGesture:(id)arg0;
- (void)tapGestureHandler:(id)arg0;

@end
