//
//     Generated by private class-dump
//

@class TTAdSplashModel, BDASplashControllerView, NSDictionary, UIWindow, TTAdSplashUDPManager, UIView, NSString;
@protocol BDASplashOriginalViewProtocol;

@interface BDASplashManager : NSObject <BDASplashControllerViewProtocol> {
    BOOL _isWarmStart;
    BOOL _isCheckUDPSwitch;
    BOOL _hasPickModel;
    NSDictionary *_config;
    TTAdSplashUDPManager *_udpManager;
    unsigned long long _status;
    unsigned long long _requestStatus;
    unsigned long long _breakReason;
    TTAdSplashModel *_selectedModel;
    UIWindow *_keyWindow;
    UIView *_realTimeFakeLaunchView;
    BDASplashControllerView *_controllerView;
    UIView<BDASplashOriginalViewProtocol> *_originalView;
}

@property (retain, nonatomic) NSDictionary *config;
@property (retain, nonatomic) TTAdSplashUDPManager *udpManager;
@property (retain, nonatomic) BDASplashControllerView *controllerView;
@property (nonatomic) BOOL isWarmStart;
@property (retain, nonatomic) UIView<BDASplashOriginalViewProtocol> *originalView;
@property (nonatomic) unsigned long long status;
@property (nonatomic) unsigned long long requestStatus;
@property (nonatomic) unsigned long long breakReason;
@property (retain, nonatomic) TTAdSplashModel *selectedModel;
@property (nonatomic) BOOL isCheckUDPSwitch;
@property (retain, nonatomic) UIWindow *keyWindow;
@property (nonatomic) BOOL hasPickModel;
@property (retain, nonatomic) UIView *realTimeFakeLaunchView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)getSettingsNumberWithKey:(id)arg0;
+ (BOOL)getSwitchWithKey:(id)arg0;
+ (void)initialize;
+ (id)sharedInstance;

- (id)selectedModel;
- (id)controllerView;
- (void)splashViewShowFinished;
- (unsigned long long)breakReason;
- (void)downloadComplianceResourceWithModuleInfo:(id)arg0 expires:(double)arg1 netAllow:(BOOL)arg2;
- (void)downloadComplianceResourceWithComplianceArea:(id)arg0 expires:(double)arg1 netAllow:(BOOL)arg2;
- (void)publicDownloadResourceWithInfo:(id)arg0 expires:(double)arg1 type:(long long)arg2;
- (void)clearResourceRegularly;
- (void)setHasPickModel:(BOOL)arg0;
- (BOOL)hasPickModel;
- (void)trackSDKSessionLaunch;
- (void)showSplashControllerViewOnKeyWindow:(id)arg0 model:(id)arg1;
- (void)setUdpManager:(id)arg0;
- (id)udpManager;
- (BOOL)isNowInPenaltyPeriod;
- (id)getLaunchTimestamps;
- (void)updateStopSplashWithModel:(id)arg0 method:(id)arg1;
- (void)updateStopSplashWithAdIds:(id)arg0;
- (void)setControllerView:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getSplashFrameWithKeyWindow:(id)arg0;
- (void)registerWithDelete:(id)arg0 config:(id)arg1 params:(id)arg2;
- (void)updateConfigWithKey:(id)arg0 value:(id)arg1;
- (void)displaySplashOnWindow:(id)arg0 showType:(long long)arg1 isWarmStart:(BOOL)arg2;
- (void)startRealTimeTask:(BOOL)arg0 bidSplashControlInfo:(id)arg1 completion:(id /* block */)arg2;
- (void)startUDPRequestWithCommand:(BOOL)arg0 ipList:(id)arg1;
- (id)resoucePathForSplashModel:(id)arg0;
- (BOOL)shouldShowSplashAccordingToUDPAndPreloadData:(id)arg0;
- (void)clearSplashDataCache;
- (void)sendClickForFloatingWindowWithModel:(id)arg0 extra:(id)arg1 adExtraData:(id)arg2;
- (id)getAllAdModels;
- (void)openKeepSplash;
- (void)closeKeepSplash;
- (void)setBreakReason:(unsigned long long)arg0;
- (BOOL)isCheckUDPSwitch;
- (void)setIsCheckUDPSwitch:(BOOL)arg0;
- (void)setOriginalView:(id)arg0;
- (id)pickModelWithBlock:(id /* block */)arg0 isWarmStart:(BOOL)arg1;
- (void)setSelectedModel:(id)arg0;
- (void)setRealTimeFakeLaunchView:(id)arg0;
- (id)realTimeFakeLaunchView;
- (id)init;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (unsigned long long)status;
- (id)config;
- (void)clearCache;
- (void)enterBackground;
- (void)setStatus:(unsigned long long)arg0;
- (id)initPrivate;
- (void)dealloc;
- (id)sdkVersion;
- (id)keyWindow;
- (void)setKeyWindow:(id)arg0;
- (BOOL)isWarmStart;
- (void)setIsWarmStart:(BOOL)arg0;
- (void)setRequestStatus:(unsigned long long)arg0;
- (unsigned long long)requestStatus;
- (id)originalView;

@end
