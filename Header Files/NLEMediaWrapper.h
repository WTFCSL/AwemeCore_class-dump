//
//     Generated by private class-dump
//

@class NSMutableDictionary, NLEResourceFinder, NLEVEDataCache, NSObject, NSDictionary, AVAsset, NSMutableArray, IESVideoAddEdgeData, IESMMTranscoderParam, NSString, NLEEditor_OC, IESMMMVModel, IESMMImageMovieInfo, NSMutableSet, NLEEditorConfiguration, NSArray, IESMMCanvasConfig, VEEditorSession, NSError, HTSVideoData;
@protocol OS_dispatch_queue, NLEVECallBackProtocol, OS_dispatch_semaphore;

@interface NLEMediaWrapper : NSObject <NLEMediaWrapperListenerDelegate, NLEEditor_iOSListenerProtocol, NLEMediaProtocol, VEEffectMessageReceiver> {
    struct shared_ptr<nle::media::NLEMediaSession> { struct NLEMediaSession *__ptr_; struct __shared_weak_count *__cntrl_; } _interface;
    struct shared_ptr<nle::media::NLEPlayer> { struct NLEPlayer *__ptr_; struct __shared_weak_count *__cntrl_; } _player;
    struct shared_ptr<cut::model::NLEModel> { struct NLEModel *__ptr_; struct __shared_weak_count *__cntrl_; } _prevModel;
    struct shared_ptr<nle::media::NLEExporter> { struct NLEExporter *__ptr_; struct __shared_weak_count *__cntrl_; } _exporter;
    struct shared_ptr<nle::media::NLEMediaWrapperListener> { struct NLEMediaWrapperListener *__ptr_; struct __shared_weak_count *__cntrl_; } _wrapperListener;
    struct shared_ptr<nle::media::NLEMediaConfig> { struct NLEMediaConfig *__ptr_; struct __shared_weak_count *__cntrl_; } _mediaConfig;
    NSObject<OS_dispatch_queue> *_dataEncodeQueue;
    IESMMImageMovieInfo *_imageMovieInfo;
    void *operationQueueKey;
    NSObject<OS_dispatch_semaphore> *semaphore_t;
    NSMutableDictionary *renderviewDic;
    BOOL _bCompleteCommit;
    BOOL _disableAutoUpdateCanvasSize;
    BOOL _stopRenderWhenNotActive;
    BOOL _enableMultiTrack;
    BOOL _hadAddPreviewEdge;
    BOOL _autoPlayWhenAppBecomeActive;
    BOOL _onPinProgress;
    BOOL _asyncPauseFlag;
    BOOL _seekOptimiztion;
    BOOL _isRepeatPlay;
    BOOL _isFastImport;
    BOOL _isRecordFromCamera;
    BOOL _enableMergeUpload;
    BOOL _active;
    BOOL _isLockActive;
    BOOL _hasFirstFrameReachedByVE;
    BOOL _enableDisplayLanc;
    BOOL _isCapturing;
    BOOL _stashPlayStatus;
    BOOL _shouldReInitAlgorithm;
    int _reverseVideoVolume;
    unsigned long long _videoDurationMode;
    NLEEditor_OC *_editor;
    NSArray *_arrViews;
    id /* block */ _nleConvertUserInfoBlock;
    id /* block */ _effectPathBlock;
    unsigned long long _compileType;
    long long _colorSpace;
    double _currentPlayerTime;
    double _realVideoFramePts;
    long long _status;
    NSString *_draftFolder;
    NSMutableSet *_videoDataUpdateInfos;
    NLEResourceFinder *_resourceFinder;
    IESMMTranscoderParam *_transParam;
    long long _renderingCount;
    id /* block */ _firstRenderBlk;
    id /* block */ _nthRenderBlk;
    id /* block */ _veSeekDoneBlock;
    id /* block */ _mixPlayerCompleteBlock;
    id /* block */ _playToEndBlock;
    id /* block */ _compileCompleteBlock;
    id /* block */ _compileCompleteBeforeDestoryBlock;
    id /* block */ _compileProgressBlock;
    id /* block */ _firstImgRenderBlk;
    id /* block */ _templateFirstRenderBlk;
    id /* block */ _prepareDoneBlk;
    NSError *_renderError;
    IESVideoAddEdgeData *_previewEdge;
    double _nlePrevModelDuration;
    NSString *_musicID;
    NLEEditorConfiguration *_nleConfig;
    id /* block */ _invalidMetaDataCallBack;
    id /* block */ _invalidMetadataTimeCallBack;
    id /* block */ _audioReaderFirstFrameCallback;
    id /* block */ _encodeDataCallback;
    id /* block */ _beforeRender;
    id /* block */ _afterUpdateVideoData;
    NSMutableDictionary *_onStickerChangeDurationProgress;
    NSMutableDictionary *_stickerStarttimes;
    NSMutableDictionary *_stickerEndtimes;
    NSMutableDictionary *_stickerIdMap;
    id /* block */ _captionStickerImageBlock;
    NSObject<OS_dispatch_queue> *_operationQueue;
    id /* block */ _messageHandler;
    NSMutableDictionary *_complieDic;
    NLEVEDataCache *_dataCache;
    id<NLEVECallBackProtocol> _listener;
    NSMutableArray *_captureTasks;
    NSMutableDictionary *_cachedReversedVideo;
    NSString *_reverseUniqueKey;
    double _bingoBeginTime;
    double _bingoDuration;
    double _picTimeLimit;
    struct CGSize { double width; double height; } _canvasSizeForRestore;
    struct CGSize { double width; double height; } _viewSize;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _importTransform;
}

@property (nonatomic) BOOL enableMergeUpload;
@property (nonatomic) BOOL active;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (nonatomic) struct CGSize { double width; double height; } canvasSizeForRestore;
@property (copy, nonatomic) id /* block */ messageHandler;
@property (nonatomic) struct CGSize { double width; double height; } viewSize;
@property (nonatomic) BOOL isLockActive;
@property (retain, nonatomic) NSMutableDictionary *complieDic;
@property BOOL hasFirstFrameReachedByVE;
@property (nonatomic) BOOL enableDisplayLanc;
@property (retain, nonatomic) NLEVEDataCache *dataCache;
@property (weak, nonatomic) id<NLEVECallBackProtocol> listener;
@property BOOL isCapturing;
@property (retain, nonatomic) NSMutableArray *captureTasks;
@property (retain, nonatomic) NSMutableDictionary *cachedReversedVideo;
@property (retain, nonatomic) NSString *reverseUniqueKey;
@property (nonatomic) int reverseVideoVolume;
@property (nonatomic) BOOL stashPlayStatus;
@property (nonatomic) double bingoBeginTime;
@property (nonatomic) double bingoDuration;
@property (nonatomic) double picTimeLimit;
@property (nonatomic) BOOL shouldReInitAlgorithm;
@property (nonatomic) double currentPlayerTime;
@property (nonatomic) double realVideoFramePts;
@property (nonatomic) long long status;
@property (readonly, nonatomic) struct shared_ptr<cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; } pStageModel;
@property (nonatomic) BOOL bCompleteCommit;
@property (nonatomic) BOOL enableMultiTrack;
@property (retain, nonatomic) NSArray *arrViews;
@property (copy, nonatomic) NSString *draftFolder;
@property (copy, nonatomic) NSMutableSet *videoDataUpdateInfos;
@property (retain, nonatomic) NLEResourceFinder *resourceFinder;
@property (nonatomic) BOOL disableAutoUpdateCanvasSize;
@property (copy, nonatomic) id /* block */ nleConvertUserInfoBlock;
@property (nonatomic) unsigned long long videoDurationMode;
@property (retain, nonatomic) IESMMTranscoderParam *transParam;
@property long long renderingCount;
@property (copy, nonatomic) id /* block */ firstRenderBlk;
@property (copy) id /* block */ nthRenderBlk;
@property (copy) id /* block */ veSeekDoneBlock;
@property (copy, nonatomic) id /* block */ mixPlayerCompleteBlock;
@property (copy, nonatomic) id /* block */ playToEndBlock;
@property (copy, nonatomic) id /* block */ compileCompleteBlock;
@property (copy, nonatomic) id /* block */ compileCompleteBeforeDestoryBlock;
@property (copy, nonatomic) id /* block */ compileProgressBlock;
@property (copy, nonatomic) id /* block */ firstImgRenderBlk;
@property (copy) id /* block */ templateFirstRenderBlk;
@property (copy) id /* block */ prepareDoneBlk;
@property (retain, nonatomic) NSError *renderError;
@property (retain, nonatomic) IESVideoAddEdgeData *previewEdge;
@property (nonatomic) BOOL hadAddPreviewEdge;
@property (nonatomic) BOOL autoPlayWhenAppBecomeActive;
@property (nonatomic) BOOL onPinProgress;
@property (nonatomic) double nlePrevModelDuration;
@property (copy, nonatomic) NSString *musicID;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } importTransform;
@property (copy, nonatomic) NSString *extraMetaInfo;
@property (retain, nonatomic) NLEEditorConfiguration *nleConfig;
@property (copy) id /* block */ invalidMetaDataCallBack;
@property BOOL asyncPauseFlag;
@property (copy) id /* block */ invalidMetadataTimeCallBack;
@property (copy) id /* block */ audioReaderFirstFrameCallback;
@property (nonatomic) BOOL seekOptimiztion;
@property (copy, nonatomic) id /* block */ encodeDataCallback;
@property (copy, nonatomic) id /* block */ beforeRender;
@property (copy, nonatomic) id /* block */ afterUpdateVideoData;
@property (copy, nonatomic) NSMutableDictionary *onStickerChangeDurationProgress;
@property (copy, nonatomic) NSMutableDictionary *stickerStarttimes;
@property (copy, nonatomic) NSMutableDictionary *stickerEndtimes;
@property (retain, nonatomic) NSMutableDictionary *stickerIdMap;
@property (nonatomic) BOOL isRepeatPlay;
@property (copy, nonatomic) id /* block */ captionStickerImageBlock;
@property (nonatomic) BOOL isFastImport;
@property (nonatomic) BOOL isRecordFromCamera;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) VEEditorSession *veEditor;
@property (readonly, nonatomic) HTSVideoData *veVideoData;
@property (copy, nonatomic) id /* block */ reverseBlock;
@property (readonly, copy, nonatomic) id /* block */ normalizeConverter;
@property (retain, nonatomic) IESVideoAddEdgeData *infoStickerAddEdgeData;
@property (retain, nonatomic) NLEEditor_OC *editor;
@property (retain, nonatomic) IESMMMVModel *veMVModel;
@property (retain, nonatomic) IESMMImageMovieInfo *imageMovieInfo;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoSize;
@property (nonatomic) unsigned long long compileType;
@property (nonatomic) long long colorSpace;
@property (readonly) BOOL isInited;
@property (readonly, nonatomic) BOOL shouldPrepare;
@property (readonly, nonatomic) double totalVideoDuration;
@property (readonly, nonatomic) double totalVideoDurationAddTimeMachine;
@property (readonly, nonatomic) double maxTrackDuration;
@property (readonly, nonatomic) double totalBGAudioDuration;
@property (copy, nonatomic) id /* block */ stickerChangeEvent;
@property (copy, nonatomic) id /* block */ effectPathBlock;
@property (nonatomic) BOOL isMicMuted;
@property (copy, nonatomic) NSDictionary *metaRecordInfo;
@property (copy, nonatomic) NSDictionary *dataInfo;
@property (retain, nonatomic) IESMMCanvasConfig *preferCanvasConfig;
@property (nonatomic) struct CGSize { double x0; double x1; } normalizeSize;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSDictionary *extraInfo;
@property (nonatomic) BOOL notSupportCrossplat;
@property (nonatomic) BOOL crossplatCompile;
@property (nonatomic) BOOL crossplatInput;
@property (nonatomic) BOOL crossplatMultiTrack;
@property (nonatomic) BOOL disableMetadataInfo;
@property (nonatomic) int previewFrameRate;
@property (nonatomic) long long contentSource;
@property (nonatomic) struct CGSize { double x0; double x1; } canvasSize;
@property (nonatomic) BOOL isDetectMode;
@property (readonly, copy, nonatomic) NSArray *effect_timeRange;
@property (readonly, copy, nonatomic) NSArray *effect_operationTimeRange;
@property (retain, nonatomic) AVAsset *effect_reverseAsset;
@property (readonly, copy, nonatomic) NSDictionary *effect_dictionary;
@property (readonly, nonatomic) double effect_videoDuration;
@property (retain, nonatomic) AVAsset *videoHeader;
@property (retain, nonatomic) AVAsset *endingWaterMarkAudio;
@property (nonatomic) BOOL stopRenderWhenNotActive;

+ (id)getAlgorithmConfigsWithMultiImage:(id)arg0 andImgPaths:(id)arg1;
+ (id)getAlgorithmConfigs:(id)arg0 andImgPaths:(id)arg1;

- (void)runAsync:(id /* block */)arg0;
- (void)setIsCapturing:(BOOL)arg0;
- (void)setExtraInfo:(id)arg0;
- (unsigned long long)getEffectHandle;
- (BOOL)getColorFilterIntensity:(id)arg0 outIntensity:(float *)arg1;
- (void)updateConfig:(id)arg0;
- (void)setStickerPreviewMode:(long long)arg0 previewMode:(int)arg1;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSizeNormaliz:(long long)arg0;
- (id)getInfoStickers;
- (struct CGPoint { double x0; double x1; })transStickerOffsetToNormaliz:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSize:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getstickerEditBoundBox:(long long)arg0;
- (struct CGSize { double x0; double x1; })getInfoStickerSize:(long long)arg0;
- (double)getStickerRotation:(long long)arg0;
- (struct CGPoint { double x0; double x1; })getStickerPosition:(long long)arg0;
- (BOOL)getStickerVisible:(long long)arg0;
- (BOOL)getInfoStickerIsDynamic:(long long)arg0;
- (BOOL)isInfoStickerOutOfBounds;
- (void)cancelPin:(long long)arg0;
- (long long)getStickerPinStatus:(long long)arg0;
- (id)getTemplateStickerTextParams:(long long)arg0;
- (BOOL)isAnimationSticker:(long long)arg0;
- (void)startChangeStickerDuration:(long long)arg0;
- (void)stopChangeStickerDuration:(long long)arg0;
- (void)setInfoStickerRestoreMode:(long long)arg0;
- (void)updateSticker:(long long)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (id)musicID;
- (BOOL)isFastImport;
- (void)appendComposerNodesWithTags:(id)arg0;
- (BOOL)replaceComposerNodesWithNewTag:(id)arg0 old:(id)arg1;
- (void)setEffectLoadStatusBlock:(id /* block */)arg0;
- (void)setDataInfo:(id)arg0;
- (double)maxTrackDuration;
- (void)resetPlayerWithViews:(id)arg0;
- (double)currentPlayerTime;
- (void)setMusicID:(id)arg0;
- (void)messageCenter:(id)arg0 didReceiveMessage:(id)arg1;
- (unsigned long long)getEffectHandle:(BOOL)arg0;
- (long long)exportResource:(id)arg0 isGlobal:(BOOL)arg1;
- (BOOL)isInited;
- (id)resourceFinder;
- (void)setResourceFinder:(id)arg0;
- (id)renderError;
- (void)setRenderError:(id)arg0;
- (void)setPlayerVolume:(float)arg0;
- (void)setDisableAutoUpdateCanvasSize:(BOOL)arg0;
- (id)assetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)getAbsolutePathWithResource:(struct shared_ptr<const cut::model::NLEResourceNode> { struct NLEResourceNode *x0; struct __shared_weak_count *x1; })arg0;
- (id)getBrushStickerInfoWithSlotId:(id)arg0;
- (void)saveBrushStickerToPNGWithSlotId:(id)arg0 savePath:(id)arg1 completion:(id /* block */)arg2;
- (void)setStickerEditMode:(BOOL)arg0;
- (id)draftFolder;
- (void)setDraftFolder:(id)arg0;
- (void)editor:(id)arg0 doRenderWithCurrentModel:(id)arg1 completion:(id /* block */)arg2;
- (long long)stickerIdForSlot:(id)arg0;
- (id)veVideoData;
- (id)getVideoProcess;
- (void)setCurrentPlayerTime:(double)arg0;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setMixPlayerCompleteBlock:(id /* block */)arg0;
- (void)setFirstRenderBlk:(id /* block */)arg0;
- (void)setUserInfo:(id)arg0 forStickerSlot:(id)arg1;
- (unsigned long long)compileType;
- (void)setCompileType:(unsigned long long)arg0;
- (id /* block */)firstRenderBlk;
- (void)setFailedToPlayBlk:(id /* block */)arg0;
- (void)setAutoRepeatPlay:(BOOL)arg0;
- (id)arrViews;
- (void)pauseAsync;
- (void)syncRefreshCurrentFrame;
- (BOOL)shouldPrepare;
- (BOOL)stopRenderWhenNotActive;
- (void)setStopRenderWhenNotActive:(BOOL)arg0;
- (void)activeEditor:(id /* block */)arg0;
- (void)clearForcedVideoData;
- (id)previewEdge;
- (id)translateNLEClipAlgorithmParam:(struct vector<std::shared_ptr<nle::media::NLEClipAlgorithmParam>, std::allocator<std::shared_ptr<nle::media::NLEClipAlgorithmParam>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<nle::media::NLEClipAlgorithmParam> *, std::allocator<std::shared_ptr<nle::media::NLEClipAlgorithmParam>>> { void *x0; } x2; })arg0;
- (void)setMusicStartTime:(double)arg0 duration:(double)arg1;
- (void)setStoredBeats:(id)arg0 musicPath:(id)arg1 completion:(id /* block */)arg2;
- (void)insertPic:(id)arg0 picDuration:(float)arg1 pos:(int)arg2 completion:(id /* block */)arg3;
- (void)insertVideo:(id)arg0 pos:(int)arg1 completion:(id /* block */)arg2;
- (void)deleteVideoWithPos:(long long)arg0 completion:(id /* block */)arg1;
- (void)moveVideoInPos:(long long)arg0 toPos:(long long)arg1 completion:(id /* block */)arg2;
- (void)generateVideo:(id)arg0 range:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1 interval:(double)arg2 progress:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)cancleGenerateVideo:(id)arg0;
- (void)getRandomReslove:(id /* block */)arg0;
- (void)getReslove:(id /* block */)arg0;
- (id)makeItemWithVideodata:(id)arg0;
- (int)saveInterimScoresToFile:(id)arg0;
- (int)checkScoreFile:(id)arg0;
- (BOOL)is2DBrushEmpty;
- (int)begin2DBrush;
- (int)end2DBrush:(id)arg0;
- (int)get2DBrushStrokeCount;
- (int)set2DBrushSize:(float)arg0;
- (int)set2DBrushColor:(int)arg0;
- (int)set2DBrushCanvasAlpha:(float)arg0;
- (int)undo2DBrush;
- (int)processTouchDownEvent:(struct CGPoint { double x0; double x1; })arg0 gestureType:(int)arg1;
- (int)processTouchUpEvent:(struct CGPoint { double x0; double x1; })arg0 gestureType:(int)arg1;
- (int)processPanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 translation:(struct CGPoint { double x0; double x1; })arg1;
- (void)innerGetPreviewImages:(const void *)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 withEffect:(BOOL)arg2 withMutilVideoTrack:(BOOL)arg3 withHighlightScore:(BOOL)arg4 isRough:(BOOL)arg5 compeletion:(id /* block */)arg6;
- (void)getPreviewImages:(id)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 withEffect:(BOOL)arg2 withHighlightScore:(BOOL)arg3 frameBlock:(id /* block */)arg4;
- (void)p_processCaptureFailure:(id)arg0 index:(long long)arg1 compeletion:(id /* block */)arg2;
- (id)getUIImageFromRGBA:(void *)arg0 Width:(int)arg1 Height:(int)arg2;
- (void)getPreviewImageAtTime:(double)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 withEffect:(BOOL)arg2 compeletion:(id /* block */)arg3;
- (void)getPreviewImages:(id)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 withEffect:(BOOL)arg2 frameBlock:(id /* block */)arg3;
- (void)getPreviewImages:(id)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 withEffect:(BOOL)arg2 withHighlightScore:(BOOL)arg3 isRough:(BOOL)arg4 frameBlock:(id /* block */)arg5;
- (id)capturePreviewUIImage;
- (void)processImageWithCompleteBlock:(id /* block */)arg0;
- (void)resetCaptureTasks;
- (id)getUserInfoForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (struct CGSize { double x0; double x1; })effectInfoStickerDefaultCanvasSize;
- (void)setResourceDownloadConfig:(id)arg0;
- (void)addNLEResourceDownloadStatusListener:(void *)arg0;
- (void)removeNLEResourceDownloadStatusListener:(void *)arg0;
- (void)clearNLEResourceDownloadStatusListener;
- (void)setAsyncRenderPlayStatusListener:(id)arg0;
- (void)cancelAsyncRender;
- (void)reverseVideo:(id /* block */)arg0 progress:(id /* block */)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (struct shared_ptr<nle::media::NLEMediaConfig> { struct NLEMediaConfig *x0; struct __shared_weak_count *x1; })configVE:(id)arg0;
- (BOOL)enableMultiTrack;
- (void)setEnableMultiTrack:(BOOL)arg0;
- (void)setBCompleteCommit:(BOOL)arg0;
- (void)setOnPinProgress:(BOOL)arg0;
- (void)setNlePrevModelDuration:(double)arg0;
- (void)setEnableMergeUpload:(BOOL)arg0;
- (void)setIsLockActive:(BOOL)arg0;
- (void)setNleConfig:(id)arg0;
- (void)handleWillResignActive;
- (BOOL)isRecordFromCamera;
- (void)setIsRecordFromCamera:(BOOL)arg0;
- (id)imageMovieInfo;
- (void)setImageMovieInfo:(id)arg0;
- (void)setVideoDurationMode:(unsigned long long)arg0;
- (void)resetPlayerWithViews:(id)arg0 opaque:(BOOL)arg1;
- (void)setArrViews:(id)arg0;
- (id)nleConfig;
- (void)setAsyncPauseFlag:(BOOL)arg0;
- (void)pauseAsync:(BOOL)arg0;
- (BOOL)asyncPauseFlag;
- (long long)renderingCount;
- (void)setIsRepeatPlay:(BOOL)arg0;
- (BOOL)isRepeatPlay;
- (BOOL)isLockActive;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })mapOriginalPositionToTimeEffectPosition:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id /* block */)veSeekDoneBlock;
- (void)setVeSeekDoneBlock:(id /* block */)arg0;
- (void)runInConfiguredQueue:(id /* block */)arg0;
- (id /* block */)compileCompleteBlock;
- (void)setCompileCompleteBlock:(id /* block */)arg0;
- (id)p_getCompileResult;
- (void)p_saveCompileHash:(BOOL)arg0;
- (void)p_deleteCompileFileIfNeeded:(id)arg0;
- (double)totalVideoDuration;
- (id)transParam;
- (struct shared_ptr<nle::media::NLEVideoEncodeSettings> { struct NLEVideoEncodeSettings *x0; struct __shared_weak_count *x1; })p_convertTransProcessDataToCommonSetting:(id)arg0 transParam:(id)arg1;
- (BOOL)isPreUploadable:(id)arg0;
- (void)setTransParam:(id)arg0;
- (struct shared_ptr<nle::media::NLEVideoEncodeSettings> { struct NLEVideoEncodeSettings *x0; struct __shared_weak_count *x1; })p_convertTransProcessDataToPublicVeSetting:(id)arg0 transParam:(id)arg1;
- (BOOL)enableMergeUpload;
- (id)extraMetaInfo;
- (id /* block */)beforeRender;
- (void)adjstStickerOffset:(struct CGSize { double x0; double x1; })arg0 oldSize:(struct CGSize { double x0; double x1; })arg1;
- (id)getEditorModelSlotWithStickerID:(long long)arg0;
- (id)getSlotWithStickerID:(long long)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })mapTimeEffectPositionToOriginalPosition:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setRealVideoFramePts:(double)arg0;
- (id /* block */)nthRenderBlk;
- (id /* block */)firstImgRenderBlk;
- (id /* block */)templateFirstRenderBlk;
- (id /* block */)prepareDoneBlk;
- (BOOL)onPinProgress;
- (void)stickerPinDoneCallback;
- (double)totalDurationAddTimeMachine;
- (void)updateCurrentPlayerTime:(double)arg0;
- (void)playToEndCallback;
- (BOOL)autoRepeatPlay;
- (id /* block */)mixPlayerCompleteBlock;
- (id /* block */)playToEndBlock;
- (id /* block */)compileProgressBlock;
- (id /* block */)compileCompleteBeforeDestoryBlock;
- (void)setCompileCompleteBeforeDestoryBlock:(id /* block */)arg0;
- (id /* block */)encodeDataCallback;
- (id /* block */)invalidMetaDataCallBack;
- (id /* block */)invalidMetadataTimeCallBack;
- (id /* block */)audioReaderFirstFrameCallback;
- (id)onStickerChangeDurationProgress;
- (id)stickerStarttimes;
- (id)stickerEndtimes;
- (void)adaptImageMovieInfoToNLETrackSlot:(id)arg0;
- (void)setRenderingCount:(long long)arg0;
- (id)videoDataUpdateInfos;
- (void)preprocessModel;
- (void)refreshPathUtil;
- (unsigned long long)videoDurationMode;
- (double)nlePrevModelDuration;
- (double)totalVideoDuration:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
- (id)stickerIdMap;
- (void)setCanvasMinDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 needPrepare:(BOOL)arg1;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1;
- (struct CGSize { double x0; double x1; })getVideoSize;
- (double)realVideoFramePts;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_convertNormalizBoxToNonormalizBox:(struct NLERectF { float x0; float x1; float x2; float x3; })arg0;
- (void)setEditBoxSizeCache:(struct CGSize { double x0; double x1; })arg0 scale:(double)arg1 forStickerSlot:(id)arg2;
- (void)setStashPlayStatus:(BOOL)arg0;
- (struct CGPoint { double x0; double x1; })p_convertNormalizPointToNonormalizPoint:(struct NLEPosition { float x0; float x1; })arg0;
- (id)slotIdForSticker:(long long)arg0;
- (id)userInfoForStickerSlot:(id)arg0;
- (double)totalVideoDurationAddTimeMachine;
- (long long)getStickerIDWithSlotUUID:(id)arg0;
- (id /* block */)captionStickerImageBlock;
- (struct CGPoint { double x0; double x1; })p_convertNonormalizPointToNormalizPoint:(struct NLEPosition { float x0; float x1; })arg0;
- (long long)getPreviewModeType;
- (void)firstRenderCallback;
- (void)nthRenderCallback:(int)arg0 reserveValue:(double)arg1;
- (void)veSeekDoneCallback;
- (void)veEOFCallback;
- (void)compileProgressCallback:(float)arg0;
- (void)compileDoneCallbackWithError:(int)arg0 code:(int)arg1 msg:(const void *)arg2;
- (void)encoderCallbackWithData:(const void *)arg0 offset:(long long)arg1 size:(int)arg2 isFinish:(BOOL)arg3;
- (struct shared_ptr<nle::media::INLEBitmap> { struct INLEBitmap *x0; struct __shared_weak_count *x1; })captionStickerImageCallback:(const void *)arg0;
- (void)invalidMetaData:(int)arg0 intValue:(long long)arg1 fltValue:(float)arg2 msg:(const void *)arg3;
- (void)checkAndRemoveInvalidMetadataTime:(int)arg0 intValue:(long long)arg1 fltValue:(float)arg2 msg:(const void *)arg3;
- (void)imgFirstRenderCallback;
- (void)templateFirstRenderCallback;
- (void)audioReaderFirstFrame:(int)arg0 intValue:(long long)arg1 fltValue:(float)arg2 msg:(const void *)arg3;
- (void)prepareDoneCallback:(int)arg0 reserveDoubleValue:(double)arg1;
- (void)clearEditoReverseAsset;
- (void)resetPreModel;
- (void)setNLEEditor:(id)arg0;
- (void)clearVideoData;
- (void)resetPlayerViewSize:(struct CGSize { double x0; double x1; })arg0;
- (double)nleTotalVideoDuration:(id)arg0;
- (id)getFirstRenderTime;
- (BOOL)useGlobalEffectGroup;
- (id)slotNameForEffectRangID:(id)arg0;
- (id)effectRangIDForSlot:(id)arg0;
- (void)startEffectWithPathId:(id)arg0 withTime:(double)arg1;
- (void)stopEffectwithTime:(double)arg0;
- (void)setAIMattingCallback:(id)arg0;
- (void)saveBrushStickerContextWithSlotName:(id)arg0 draftPath:(id)arg1 completion:(id /* block */)arg2;
- (void)preparePin;
- (void)beginInfoStickerPin:(long long)arg0;
- (id)getInfoStickerPinDataFile:(long long)arg0;
- (void)syncForceModeRefreshCurrentFrame;
- (void)removeUserInfo:(id)arg0;
- (void)setVEOperateCallback:(id)arg0;
- (void)updateStickerAnimation:(id)arg0;
- (void)disableStickerAnimation:(id)arg0;
- (void)addStickerByUIImage:(id)arg0 letterInfo:(id)arg1 duration:(double)arg2;
- (void)getStickerId:(long long)arg0 props:(id)arg1;
- (void)setCaptionStickerImageBlock:(id /* block */)arg0;
- (id)assetFromSlotOC:(id)arg0;
- (void)setHighFrameRateRender:(BOOL)arg0;
- (long long)getPreviewModeType:(id)arg0;
- (void)setPreviewModeType:(long long)arg0 toView:(id)arg1;
- (void)setAutoPlayWhenAppBecomeActive:(BOOL)arg0;
- (BOOL)autoPlayWhenAppBecomeActive;
- (void)setMixPlayerDisableAutoResume:(BOOL)arg0;
- (void)lockSeekVideoClip:(id)arg0;
- (void)unLockSeekVideoClip;
- (void)seekToTimeMachineTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct CGSize { double x0; double x1; })getNewFrameSize;
- (void)updateVideoData:(id)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)updateMutipleComposerNodes:(id)arg0 keys:(id)arg1 values:(id)arg2 track:(id)arg3;
- (BOOL)switchColorFilterIntensity:(id)arg0 inFilterPath:(id)arg1 inPosition:(float)arg2 inLeftIntensity:(float)arg3 inRightIntensity:(float)arg4 track:(id)arg5;
- (void)refreshAudioPlayer;
- (int)setSrcMaxHwRatio:(float)arg0;
- (void)effect_cleanOperation;
- (void)effect_reCalculateEffectiveTimeRange;
- (double)effect_currentTimeMachineDurationWithType:(long long)arg0;
- (void)setMetaData:(id)arg0 recordInfo:(long long)arg1 MD5:(id)arg2 needStore:(BOOL)arg3;
- (long long)effect_TimeRepeatCount;
- (double)effect_TimeSlowSpeed;
- (void)activeEffectMessageCenter;
- (void)inactiveEffectMessageCenter;
- (void)observerEffectMessageCenterVePublicCallback:(id /* block */)arg0 veOcCallback:(id)arg1;
- (void)removeObserverEffectMessageCenterCallback:(id)arg0;
- (void)setEffectMessageCallback:(id /* block */)arg0 flag:(unsigned char)arg1;
- (void)removeEffectMessageCallback;
- (void)setCompileTargetFileInfoCallback:(id /* block */)arg0;
- (void)setInvalidMetaDataCallBack:(id /* block */)arg0;
- (void)setInvalidMetadataTimeCallBack:(id /* block */)arg0;
- (int)addMetadata:(id)arg0 value:(id)arg1;
- (void)setAssetRotationInfo:(id)arg0 forSlot:(id)arg1;
- (id)assetRotationInfoOfSlot:(id)arg0;
- (void)setBingoKey:(id)arg0 forSlot:(id)arg1;
- (id)bingoKeyOfSlot:(id)arg0;
- (void)setMovieInputFillType:(id)arg0 forSlot:(id)arg1;
- (id)movieFillTypeOfSlot:(id)arg0;
- (BOOL)isNewImageMovie;
- (void)setImageMovieInfoWithUIImages:(id)arg0 imageShowDuration:(id)arg1;
- (void)setPhotoAssetsImageInfoWithImage:(id)arg0 slot:(id)arg1;
- (void)clearPhotoAssetsImageInfo;
- (void)setAudioReaderFirstFrameCallback:(id /* block */)arg0;
- (struct CGSize { double x0; double x1; })getMVResolution;
- (id)getMVOriginalAudioAsset;
- (int)applyLensOneKeyHdrDetect;
- (void)setNthRenderBlk:(id /* block */)arg0;
- (void)setTemplateFirstRenderBlk:(id /* block */)arg0;
- (void)setPrepareDoneBlk:(id /* block */)arg0;
- (void)completeConfigTemplate;
- (void)setAfterUpdateVideoDataBlock:(id /* block */)arg0;
- (id)getAllKeyFramesAtPts:(unsigned long long)arg0;
- (void)setImageResizeWidth:(int)arg0 height:(int)arg1 resFillMode:(long long)arg2 resizeAlgorithm:(long long)arg3;
- (int)setPreviewFps:(int)arg0 isDynamicAdjust:(BOOL)arg1;
- (long long)exportResource:(id)arg0;
- (long long)sendEffectMsg:(long long)arg0 arg1:(long long)arg1 arg2:(long long)arg2 arg3:(id)arg3;
- (long long)sendEffectMsg:(long long)arg0 isGlobal:(BOOL)arg1 arg1:(long long)arg2 arg2:(long long)arg3 arg3:(id)arg4;
- (long long)setRenderCachePath:(id)arg0 path:(id)arg1;
- (void)setReverseBlock:(id /* block */)arg0;
- (void)setPreviewEdge:(id)arg0;
- (id /* block */)normalizeConverter;
- (id)infoStickerAddEdgeData;
- (void)setInfoStickerAddEdgeData:(id)arg0;
- (id)veMVModel;
- (void)setVeMVModel:(id)arg0;
- (void)setPlayToEndBlock:(id /* block */)arg0;
- (id /* block */)stickerChangeEvent;
- (void)setStickerChangeEvent:(id /* block */)arg0;
- (id /* block */)nleConvertUserInfoBlock;
- (void)setNleConvertUserInfoBlock:(id /* block */)arg0;
- (id /* block */)effectPathBlock;
- (void)setEffectPathBlock:(id /* block */)arg0;
- (BOOL)disableAutoUpdateCanvasSize;
- (void)setIsFastImport:(BOOL)arg0;
- (void)setIsMicMuted:(BOOL)arg0;
- (id)metaRecordInfo;
- (void)setMetaRecordInfo:(id)arg0;
- (id)dataInfo;
- (id)preferCanvasConfig;
- (void)setPreferCanvasConfig:(id)arg0;
- (struct CGSize { double x0; double x1; })normalizeSize;
- (void)setNormalizeSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)notSupportCrossplat;
- (void)setNotSupportCrossplat:(BOOL)arg0;
- (BOOL)crossplatCompile;
- (void)setCrossplatCompile:(BOOL)arg0;
- (BOOL)crossplatInput;
- (void)setCrossplatInput:(BOOL)arg0;
- (BOOL)crossplatMultiTrack;
- (void)setCrossplatMultiTrack:(BOOL)arg0;
- (BOOL)disableMetadataInfo;
- (void)setDisableMetadataInfo:(BOOL)arg0;
- (void)setExtraMetaInfo:(id)arg0;
- (BOOL)isDetectMode;
- (void)setIsDetectMode:(BOOL)arg0;
- (id)effect_timeRange;
- (id)effect_operationTimeRange;
- (id)effect_reverseAsset;
- (void)setEffect_reverseAsset:(id)arg0;
- (id)effect_dictionary;
- (double)effect_videoDuration;
- (id)videoHeader;
- (void)setVideoHeader:(id)arg0;
- (id)endingWaterMarkAudio;
- (void)setEndingWaterMarkAudio:(id)arg0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })importTransform;
- (void)setImportTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (BOOL)bCompleteCommit;
- (void)releasePreviewSurface;
- (void)resetPlayerViews;
- (BOOL)isPrepareFinished;
- (long long)getCurrentPositionInUs;
- (void)setPlayFps:(int)arg0;
- (int)getPlayFps;
- (void)pauseCompile;
- (void)cancelCompile;
- (void)resumeCompile;
- (void)resumeCompileFullSpeed;
- (void)enableCompileSpeedControl:(BOOL)arg0;
- (BOOL)isCompileReencode:(id)arg0;
- (id)getAudioMatrixResult;
- (id)getDenoiseSnrResults;
- (void)exportVideoFile:(id)arg0 config:(id)arg1 transParam:(id)arg2 completeBlock:(id /* block */)arg3;
- (void)setEncodeDataCallback:(id /* block */)arg0;
- (id)dumpVEModel;
- (void)printVESequenceJson;
- (void)printModelJson;
- (struct shared_ptr<cut::model::NLEEditor> { struct NLEEditor *x0; struct __shared_weak_count *x1; })pCurNLEEditor;
- (struct shared_ptr<cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })pStageModel;
- (void)setFirstImgRenderBlk:(id /* block */)arg0;
- (id)assetKeyForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)removeAssetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addForceUpdateWithType:(long long)arg0 tag:(id)arg1;
- (void)removeAllComposerNodes;
- (id)getVeEditor;
- (id)getVeVideoData;
- (BOOL)getEnableMultiTrack;
- (BOOL)hasFirstFrameReached;
- (void)setSeekOptimiztion:(BOOL)arg0;
- (void)setEnableDisplayLan:(BOOL)arg0;
- (BOOL)enableDisplayLan;
- (void)setVideoDataUpdateInfos:(id)arg0;
- (void)setCompileProgressBlock:(id /* block */)arg0;
- (BOOL)hadAddPreviewEdge;
- (void)setHadAddPreviewEdge:(BOOL)arg0;
- (BOOL)seekOptimiztion;
- (void)setBeforeRender:(id /* block */)arg0;
- (id /* block */)afterUpdateVideoData;
- (void)setAfterUpdateVideoData:(id /* block */)arg0;
- (void)setOnStickerChangeDurationProgress:(id)arg0;
- (void)setStickerStarttimes:(id)arg0;
- (void)setStickerEndtimes:(id)arg0;
- (void)setStickerIdMap:(id)arg0;
- (struct CGSize { double x0; double x1; })canvasSizeForRestore;
- (void)setCanvasSizeForRestore:(struct CGSize { double x0; double x1; })arg0;
- (id)complieDic;
- (void)setComplieDic:(id)arg0;
- (BOOL)hasFirstFrameReachedByVE;
- (void)setHasFirstFrameReachedByVE:(BOOL)arg0;
- (BOOL)enableDisplayLanc;
- (void)setEnableDisplayLanc:(BOOL)arg0;
- (id)captureTasks;
- (void)setCaptureTasks:(id)arg0;
- (id)cachedReversedVideo;
- (void)setCachedReversedVideo:(id)arg0;
- (id)reverseUniqueKey;
- (void)setReverseUniqueKey:(id)arg0;
- (int)reverseVideoVolume;
- (void)setReverseVideoVolume:(int)arg0;
- (BOOL)stashPlayStatus;
- (double)bingoBeginTime;
- (void)setBingoBeginTime:(double)arg0;
- (double)bingoDuration;
- (void)setBingoDuration:(double)arg0;
- (double)picTimeLimit;
- (void)setPicTimeLimit:(double)arg0;
- (BOOL)shouldReInitAlgorithm;
- (void)setShouldReInitAlgorithm:(BOOL)arg0;
- (id /* block */)messageHandler;
- (id)dataCache;
- (void)setOperationQueue:(id)arg0;
- (BOOL)canPlay;
- (BOOL)active;
- (void).cxx_destruct;
- (void)setColorSpace:(long long)arg0;
- (id)listener;
- (long long)status;
- (void)setContentSource:(long long)arg0;
- (long long)contentSource;
- (void)stop;
- (void)setListener:(id)arg0;
- (BOOL)isCapturing;
- (id)identifier;
- (id)initWithConfig:(id)arg0;
- (id)operationQueue;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (id)debugDescription;
- (struct CGSize { double x0; double x1; })viewSize;
- (void)setStatus:(long long)arg0;
- (long long)colorSpace;
- (BOOL)isHDR;
- (int)setMetadata:(id)arg0;
- (void)prepare;
- (void)setMessageHandler:(id /* block */)arg0;
- (BOOL)isPlaying;
- (void)setActive:(BOOL)arg0;
- (void)handleDidBecomeActive;
- (void)start;
- (void)dealloc;
- (void)pause;
- (struct CGSize { double x0; double x1; })canvasSize;
- (id).cxx_construct;
- (id)editor;
- (void)setIdentifier:(id)arg0;
- (void)setViewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setEditor:(id)arg0;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completionHandler:(id /* block */)arg1;
- (id)extraInfo;
- (BOOL)isChanged;
- (id /* block */)reverseBlock;
- (void)setPreviewModeType:(long long)arg0;
- (void)setResourceManager:(id)arg0;
- (void)setDataCache:(id)arg0;
- (int)previewFrameRate;
- (void)setPreviewFrameRate:(int)arg0;

@end
