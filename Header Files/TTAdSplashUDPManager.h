//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSArray, NSString, NSLock, NSObject;
@protocol OS_dispatch_group;

@interface TTAdSplashUDPManager : NSObject <BDAsyncUdpSocketDelegate> {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } requestModelsMutex;
    NSObject<OS_dispatch_group> *reportGroup;
    BOOL _UDPRequestSuccessfully;
    BOOL _UDPDecideToShowSplash;
    BOOL _shouldUseHttps;
    BOOL _hasAlreadyReceiveRespnose;
    BOOL _hotLaunch;
    NSArray *_ipList;
    id /* block */ _finishblock;
    double _timestamp;
    NSMutableDictionary *_udpConnections;
    NSMutableDictionary *_requestResults;
    NSMutableDictionary *_requestModels;
    NSLock *_dictionaryLock;
    NSLock *_reportLock;
    NSLock *_portArrayLock;
    NSLock *_portAndHostDictLock;
    NSLock *_udpConnectionsLock;
    unsigned long long _currentRank;
}

@property (retain, nonatomic) NSMutableDictionary *udpConnections;
@property (retain, nonatomic) NSMutableDictionary *requestResults;
@property (retain, nonatomic) NSMutableDictionary *requestModels;
@property (retain, nonatomic) NSLock *dictionaryLock;
@property (retain, nonatomic) NSLock *reportLock;
@property (retain, nonatomic) NSLock *portArrayLock;
@property (retain, nonatomic) NSLock *portAndHostDictLock;
@property (retain, nonatomic) NSLock *udpConnectionsLock;
@property (nonatomic) BOOL shouldUseHttps;
@property (nonatomic) BOOL hasAlreadyReceiveRespnose;
@property (nonatomic) BOOL hotLaunch;
@property (nonatomic) BOOL UDPRequestSuccessfully;
@property (nonatomic) BOOL UDPDecideToShowSplash;
@property (nonatomic) double timestamp;
@property (nonatomic) unsigned long long currentRank;
@property (retain, nonatomic) NSArray *ipList;
@property (copy, nonatomic) id /* block */ finishblock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)requestModels;
- (void)setIpList:(id)arg0;
- (void)startFetchSwitchCommand:(BOOL)arg0;
- (BOOL)UDPRequestSuccessfully;
- (BOOL)shouldShowAdWithUDPResult;
- (void)udpSocket:(id)arg0 didNotConnect:(id)arg1;
- (void)udpSocket:(id)arg0 didSendDataWithTag:(long long)arg1;
- (void)udpSocket:(id)arg0 didNotSendDataWithTag:(long long)arg1 dueToError:(id)arg2;
- (void)udpSocket:(id)arg0 didReceiveData:(id)arg1 fromAddress:(id)arg2 withFilterContext:(id)arg3;
- (void)setReportLock:(id)arg0;
- (void)setPortArrayLock:(id)arg0;
- (void)setPortAndHostDictLock:(id)arg0;
- (void)setUdpConnectionsLock:(id)arg0;
- (void)setDictionaryLock:(id)arg0;
- (void)setUdpConnections:(id)arg0;
- (void)setRequestResults:(id)arg0;
- (void)setRequestModels:(id)arg0;
- (void)setHotLaunch:(BOOL)arg0;
- (void)setUDPRequestSuccessfully:(BOOL)arg0;
- (void)setUDPDecideToShowSplash:(BOOL)arg0;
- (id)ipList;
- (void)reportAfter5Seconds;
- (id)dictionaryLock;
- (id)requestResults;
- (id)udpConnectionsLock;
- (id)udpConnections;
- (id)portArrayLock;
- (id)portAndHostDictLock;
- (BOOL)hotLaunch;
- (id /* block */)finishblock;
- (BOOL)UDPDecideToShowSplash;
- (id)reportLock;
- (unsigned long long)currentRank;
- (void)setCurrentRank:(unsigned long long)arg0;
- (BOOL)shouldUseHttps;
- (BOOL)hasAlreadyReceiveRespnose;
- (void)setHasAlreadyReceiveRespnose:(BOOL)arg0;
- (void)setShouldUseHttps:(BOOL)arg0;
- (void)doControlOperationIfNeeded:(id)arg0;
- (void)setFinishblock:(id /* block */)arg0;
- (id)init;
- (double)timestamp;
- (void).cxx_destruct;
- (void)setTimestamp:(double)arg0;

@end
