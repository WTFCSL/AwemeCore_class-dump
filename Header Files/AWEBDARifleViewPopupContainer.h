//
//     Generated by private class-dump
//

@class AWEAwemeModel, NSString, NSURL, AWEBDARifleView, UIView, AWEOriginalAdModel, UIViewController, AWEBDARifleViewConfiguration;
@protocol AWEBDARifleViewPopupEventProtocol, BDXPopupContainerProtocol, BDXContainerLifecycleProtocol, BDXKitViewProtocol, AWEBDARifleViewDelegate;

@interface AWEBDARifleViewPopupContainer : UIView <BDXPopupContentProtocol, BDXPopupEventProtocol, BDXContainerLifecycleProtocol, AWEBDARifleViewPopupEventProtocol, AWEBDARifleViewDelegate> {
    BOOL _hasFallback;
    long long bdxContentMode;
    id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
    NSURL *originURL;
    long long viewType;
    AWEBDARifleView *_bdaRifleView;
    AWEAwemeModel *_aweme;
    AWEOriginalAdModel *_adModel;
    AWEBDARifleViewConfiguration *_config;
    id<AWEBDARifleViewPopupEventProtocol> _popupEventDelegate;
    id<AWEBDARifleViewDelegate> _lifecycleDelegate;
    UIViewController<BDXPopupContainerProtocol> *_popupViewController;
    NSString *_containerID;
    double _startTime;
}

@property (nonatomic) BOOL hasFallback;
@property (copy, nonatomic) NSString *containerID;
@property (nonatomic) double startTime;
@property (retain, nonatomic) AWEBDARifleView *bdaRifleView;
@property (retain, nonatomic) AWEAwemeModel *aweme;
@property (retain, nonatomic) AWEOriginalAdModel *adModel;
@property (retain, nonatomic) AWEBDARifleViewConfiguration *config;
@property (weak, nonatomic) id<AWEBDARifleViewPopupEventProtocol> popupEventDelegate;
@property (weak, nonatomic) id<AWEBDARifleViewDelegate> lifecycleDelegate;
@property (weak, nonatomic) UIViewController<BDXPopupContainerProtocol> *popupViewController;
@property (readonly, nonatomic) NSURL *originURL;
@property (nonatomic) long long bdxContentMode;
@property (readonly, nonatomic) long long viewType;
@property (weak, nonatomic) id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
@property (readonly, nonatomic) UIView<BDXKitViewProtocol> *kitView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)bdxContentMode;
- (void)loadWithParam:(id)arg0 context:(id)arg1;
- (void)addLoadFailedView:(id)arg0;
- (void)addLoadingView:(id)arg0;
- (BOOL)shouldShowLoadFailedViewWithError:(id)arg0;
- (id)containerLifecycleDelegate;
- (void)handleViewDidAppear;
- (void)handleBecomeActive;
- (void)handleResignActive;
- (id)kitView;
- (void)setBdxContentMode:(long long)arg0;
- (void)setContainerLifecycleDelegate:(id)arg0;
- (id)aweme;
- (void)setAweme:(id)arg0;
- (id)popupEventDelegate;
- (void)setPopupEventDelegate:(id)arg0;
- (id)adModel;
- (id)lifecycleDelegate;
- (void)setLifecycleDelegate:(id)arg0;
- (void)setAdModel:(id)arg0;
- (void)rifleViewDidStartLoading:(id)arg0;
- (void)rifleView:(id)arg0 didStartFetchResourceWithURL:(id)arg1;
- (void)rifleView:(id)arg0 didFinishLoadWithURL:(id)arg1;
- (void)rifleView:(id)arg0 didLoadFailedWithURL:(id)arg1 error:(id)arg2;
- (void)rifleViewDidConstructJSRuntime:(id)arg0;
- (void)rifleView:(id)arg0 didReceivePerformance:(id)arg1;
- (void)rifleViewvDidFirstScreen:(id)arg0;
- (void)rifleView:(id)arg0 didChangeIntrinsicContentSize:(struct CGSize { double x0; double x1; })arg1;
- (void)rifleViewWillStartLoading:(id)arg0;
- (void)rifleView:(id)arg0 didFetchedResource:(id)arg1 error:(id)arg2;
- (void)rifleViewDidUpdate:(id)arg0;
- (void)rifleView:(id)arg0 didRecieveError:(id)arg1;
- (void)rifleViewDidPageUpdate:(id)arg0;
- (void)rifleView:(id)arg0 updateTitle:(id)arg1;
- (id)bdaRifleView;
- (void)setBdaRifleView:(id)arg0;
- (void)trackStayTime;
- (void)updateStartTime;
- (id)popupViewController;
- (void)setPopupViewController:(id)arg0;
- (BOOL)hasFallback;
- (void)setHasFallback:(BOOL)arg0;
- (void)popupDidCloseWithContainer:(id)arg0 params:(id)arg1;
- (void)popupDidChangeToStatus:(long long)arg0 withContainer:(id)arg1;
- (void)popupWillLeaveStatus:(long long)arg0 withContainer:(id)arg1;
- (BOOL)handlePopupResizeWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setContainerID:(id)arg0;
- (void)setConfig:(id)arg0;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (id)containerID;
- (id)config;
- (double)startTime;
- (long long)viewType;
- (void)layoutSubviews;
- (id)originURL;
- (void)reloadWithContext:(id)arg0;
- (void)handleViewDidDisappear;

@end
