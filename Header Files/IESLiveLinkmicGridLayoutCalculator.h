//
//     Generated by private class-dump
//

@class NSArray, IESLiveLinkmicCanvasLayoutGrid;

@interface IESLiveLinkmicGridLayoutCalculator : NSObject {
    IESLiveLinkmicCanvasLayoutGrid *_config;
    NSArray *_fixedSlotSessionRects;
    NSArray *_fixedSlotRects;
    NSArray *_fixedSlotInsets;
    NSArray *_fixedSeparatorSlotRects;
    struct { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } containerRect; struct CGPoint { double x; double y; } mainSlotOriginOffset; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mainSLotSessionRatioRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } slotSessionRatioRect; } _params;
}

@property (retain, nonatomic) IESLiveLinkmicCanvasLayoutGrid *config;
@property (nonatomic) struct { struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } containerRect; struct CGPoint { double x; double y; } mainSlotOriginOffset; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mainSLotSessionRatioRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } slotSessionRatioRect; } params;
@property (copy, nonatomic) NSArray *fixedSlotSessionRects;
@property (copy, nonatomic) NSArray *fixedSlotRects;
@property (copy, nonatomic) NSArray *fixedSlotInsets;
@property (copy, nonatomic) NSArray *fixedSeparatorSlotRects;
@property (readonly, copy, nonatomic) NSArray *slotRects;
@property (readonly, copy, nonatomic) NSArray *slotInset;
@property (readonly, copy, nonatomic) NSArray *streamSlotRects;
@property (readonly, copy, nonatomic) NSArray *separatorRects;

+ (id)calculatorWithConfig:(id)arg0 params:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; })arg1;
+ (id)calculatorWithConfig:(id)arg0 containerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;

- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })containerRect;
- (id)initWithConfig:(id)arg0 params:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; })arg1;
- (void)calculateFixedSizeSlotsRect;
- (void)calculateFixedSizeSlotsInset;
- (void)calculateFixedSizeStreamLayoutSlotsRect;
- (void)calculateFixedSizeSeparatorsRect;
- (id)fixedSlotRects;
- (id)fixedSlotInsets;
- (id)fixedSlotSessionRects;
- (id)fixedSeparatorSlotRects;
- (id)slotRects;
- (struct CGSize { double x0; double x1; })mainSlotSessionViewSizeWithContainerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGSize { double x0; double x1; })otherSlotSessionViewSizeWithContainerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)calculateRectsWithMainSlotOrigin:(struct CGPoint { double x0; double x1; })arg0 mainSlotRatio:(struct CGSize { double x0; double x1; })arg1 mainSlotOriginOffset:(struct CGPoint { double x0; double x1; })arg2 otherSlotOrigin:(struct CGPoint { double x0; double x1; })arg3 otherSlotRatio:(struct CGSize { double x0; double x1; })arg4;
- (void)setFixedSlotRects:(id)arg0;
- (void)setFixedSlotInsets:(id)arg0;
- (void)setFixedSlotSessionRects:(id)arg0;
- (void)setFixedSeparatorSlotRects:(id)arg0;
- (id)slotInset;
- (id)streamSlotRects;
- (id)separatorRects;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })slotRectWithIndex:(long long)arg0;
- (struct CGSize { double x0; double x1; })mainSlotSessionViewSize;
- (struct CGSize { double x0; double x1; })otherSlotSessionViewSize;
- (void)validate;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; })params;
- (void)setParams:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; })arg0;
- (void)validateConfig;
- (void)calculate;

@end
