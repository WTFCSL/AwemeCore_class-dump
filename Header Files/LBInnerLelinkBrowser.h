//
//     Generated by private class-dump
//

@class NSNetServiceBrowser, NSTimer, NSString, NSMutableArray;
@protocol LBInnerLelinkBrowserDelegate;

@interface LBInnerLelinkBrowser : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate> {
    BOOL _needReportData;
    BOOL _isStarted;
    BOOL _isFirstTimeReport;
    BOOL _delegateOnError;
    BOOL _isMdnsReponsData;
    BOOL _isMdnsAnalysisData;
    id<LBInnerLelinkBrowserDelegate> _delegate;
    unsigned long long _enableServiceSourceStyle;
    NSNetServiceBrowser *_serviceBrowser;
    NSMutableArray *_serviceAry;
    NSMutableArray *_devicesServiceAry;
    long long _ignoreCount;
    double _lastTime;
    double _startSearchTime;
    double _endSearchTime;
    NSTimer *_outDeviceTimer;
}

@property (retain, nonatomic) NSNetServiceBrowser *serviceBrowser;
@property (retain, nonatomic) NSMutableArray *serviceAry;
@property (retain, nonatomic) NSMutableArray *devicesServiceAry;
@property (nonatomic) long long ignoreCount;
@property (nonatomic) BOOL isStarted;
@property (nonatomic) double lastTime;
@property (nonatomic) BOOL isFirstTimeReport;
@property (nonatomic) BOOL delegateOnError;
@property (nonatomic) double startSearchTime;
@property (nonatomic) double endSearchTime;
@property (retain, nonatomic) NSTimer *outDeviceTimer;
@property (nonatomic) BOOL isMdnsReponsData;
@property (nonatomic) BOOL isMdnsAnalysisData;
@property (weak, nonatomic) id<LBInnerLelinkBrowserDelegate> delegate;
@property (nonatomic) BOOL needReportData;
@property (nonatomic) unsigned long long enableServiceSourceStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)applicationWillResignActiveNotification:(id)arg0;
- (void)setNeedReportData:(BOOL)arg0;
- (void)setIsFirstTimeReport:(BOOL)arg0;
- (BOOL)needReportData;
- (id)devicesServiceAry;
- (id)serviceAry;
- (void)stopSearchBluetooth;
- (void)stopSearchUltrasound;
- (void)serviceArrRemoveAllObjects;
- (void)setIsMdnsReponsData:(BOOL)arg0;
- (void)setIsMdnsAnalysisData:(BOOL)arg0;
- (unsigned long long)enableServiceSourceStyle;
- (void)searchByBluetooth;
- (void)setDelegateOnError:(BOOL)arg0;
- (void)searchMdnsOutTimer;
- (BOOL)isMdnsReponsData;
- (BOOL)isMdnsAnalysisData;
- (void)uploadMDNSWithError:(id)arg0;
- (BOOL)delegateOnError;
- (void)devicesServiceChangeNot;
- (void)saveRecordData:(id)arg0 ipStr:(id)arg1 port:(int)arg2;
- (void)netServiceGetRecordDic:(id)arg0 Ip:(id)arg1 portId:(long long)arg2 name:(id)arg3 service:(id)arg4 sourceStyle:(unsigned long long)arg5;
- (void)findNewServiceInbackgroundWithIPString:(id)arg0;
- (BOOL)canReportWithUlist:(id)arg0 mlist:(id)arg1;
- (BOOL)isFirstTimeReport;
- (void)uploadMDNSLog:(id)arg0 ls:(id)arg1;
- (void)searchByUltrasound;
- (void)readySearchByUltrasound;
- (void)reportConnectionRelationData;
- (void)setEnableServiceSourceStyle:(unsigned long long)arg0;
- (void)setServiceAry:(id)arg0;
- (void)setDevicesServiceAry:(id)arg0;
- (void)notificationOfLelinkServiceOffline:(id)arg0;
- (double)startSearchTime;
- (void)setStartSearchTime:(double)arg0;
- (void)startSearch;
- (void)setEndSearchTime:(double)arg0;
- (BOOL)pauseSearchLelinkServiceStyle:(unsigned long long)arg0 onError:(id *)arg1;
- (BOOL)continueSearchLelinkServiceStyle:(unsigned long long)arg0 onError:(id *)arg1;
- (double)endSearchTime;
- (void)stopSearch;
- (void)searchOutTimer;
- (void)setOutDeviceTimer:(id)arg0;
- (id)outDeviceTimer;
- (id)init;
- (void)setLastTime:(double)arg0;
- (BOOL)isStarted;
- (void).cxx_destruct;
- (id)delegate;
- (double)lastTime;
- (void)netServiceBrowser:(id)arg0 didRemoveService:(id)arg1 moreComing:(BOOL)arg2;
- (void)netServiceBrowser:(id)arg0 didFindService:(id)arg1 moreComing:(BOOL)arg2;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)netServiceDidResolveAddress:(id)arg0;
- (void)netServiceBrowser:(id)arg0 didNotSearch:(id)arg1;
- (void)netServiceBrowserDidStopSearch:(id)arg0;
- (id)serviceBrowser;
- (void)setServiceBrowser:(id)arg0;
- (void)setIsStarted:(BOOL)arg0;
- (void)setIgnoreCount:(long long)arg0;
- (long long)ignoreCount;
- (void)applicationDidBecomeActiveNotification:(id)arg0;

@end
