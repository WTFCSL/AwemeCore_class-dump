//
//     Generated by private class-dump
//

@class ALMVideoPlayerController, NSString, UIView;
@protocol ALMVideoPlayerDelegate;

@interface ALMVideoPlayer : NSObject <ALMVideoPlayerControllerDelegate> {
    BOOL _readyForDisplay;
    id<ALMVideoPlayerDelegate> _delegate;
    long long _scalingMode;
    double _volume;
    double _speed;
    double _currentPlayTakenTime;
    UIView *_prePlayView;
    UIView *_postPlayView;
    UIView *_stallPlayView;
    ALMVideoPlayerController *_playerController;
}

@property (retain, nonatomic) ALMVideoPlayerController *playerController;
@property (weak, nonatomic) id<ALMVideoPlayerDelegate> delegate;
@property (nonatomic, getter=isUseCache) BOOL useCache;
@property (nonatomic, getter=isRepeated) BOOL repeated;
@property (nonatomic) long long scalingMode;
@property (nonatomic) long long rotateType;
@property (nonatomic, getter=isMuted) BOOL muted;
@property (readonly, nonatomic) double volume;
@property (readonly, nonatomic) double videoDuration;
@property (readonly, nonatomic) double speed;
@property (readonly, nonatomic) double currentPlaybackTime;
@property (readonly, nonatomic) double currentPlayTakenTime;
@property (readonly, nonatomic) long long cacheSize;
@property (readonly, nonatomic) unsigned long long sessionId;
@property (readonly, nonatomic) double playBitrate;
@property (retain, nonatomic) UIView *prePlayView;
@property (retain, nonatomic) UIView *postPlayView;
@property (retain, nonatomic) UIView *stallPlayView;
@property (readonly, nonatomic) BOOL readyForDisplay;
@property (readonly, nonatomic) long long playerState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)startOpenGLESActivity;
+ (void)stopOpenGLESActivity;
+ (id)preloaderWithType:(unsigned long long)arg0;
+ (id)keyPathsForValuesAffectingPlayerState;

- (void)updatePlayerIfNeeded;
- (long long)rotateType;
- (void)setRotateType:(long long)arg0;
- (void)setOwnPlayerPlayWithURLs:(BOOL)arg0;
- (double)playBitrate;
- (void)setLoopPlayerWithLoopState:(BOOL)arg0 loopWay:(long long)arg1 loopStartTime:(double)arg2 loopEndTime:(double)arg3;
- (void)setCacheDuration:(double)arg0;
- (void)setCustomLog:(id)arg0;
- (void)setPlayerDashVideoInfoV2:(id)arg0;
- (void)setPlayerDashVideoInfo:(id)arg0;
- (void)setStartPlayTime:(double)arg0;
- (void)setUpMemoryOptimize:(BOOL)arg0;
- (void)updateCoverImage;
- (long long)scaleModeForVideo;
- (id)initWithVideoModel:(id)arg0;
- (void)__showPrePlayViewIfNeeded;
- (void)__showPostPlayViewIfNeeded;
- (void)__hidePostPlayView;
- (id)prePlayView;
- (id)stallPlayView;
- (void)__hidePrePlayView;
- (void)notifyDelegateReadyToPlay;
- (void)notifyDelegateDidEnterLockStatus;
- (void)notifyDelegateDidEnterLockStatus;
- (void)notifyDelegateDidEnterUnlockStatus;
- (void)notifyDelegateDidEnterUnlockStatus;
- (void)notifyDelegateDidPauseByCellularNet;
- (void)notifyDelegateVolumeDidChangedTo:(double)arg0;
- (void)notifyDelegateVolumeDidChangedByPanningTo:(double)arg0;
- (void)notifyDelegateVolumeDidChangedBySystemButton:(double)arg0;
- (void)notifyDelegateDidDismissVolumeView;
- (void)notifyDelegatePlaybackTimeChanged:(double)arg0;
- (void)notifyDelegateDidExecuteAction:(long long)arg0;
- (void)notifyDelegateDidHitCacheForURL:(id)arg0;
- (void)__showStallPlayViewIfNeeded;
- (void)notifyDelegateDidBeginStalling;
- (void)__hideStallPlayView;
- (void)notifyDelegateDidEndStalling;
- (void)notifyDelegateDidFetchVideoDataForURL:(id)arg0;
- (void)notifyDelegatePlaybackFailedWithError:(id)arg0;
- (void)notifyDelegatePlaybackFailedWithURL:(id)arg0 error:(id)arg1;
- (void)playerControllerDidReadyForDisplay:(id)arg0;
- (void)playerControllerReadyToPlay:(id)arg0;
- (void)playerControllerDidPauseByCellularNet:(id)arg0;
- (BOOL)playerController:(id)arg0 shouldAutoRotate:(BOOL)arg1;
- (void)playerController:(id)arg0 volumeDidChangedTo:(double)arg1;
- (void)playerController:(id)arg0 volumeDidChangedByPanningTo:(double)arg1;
- (void)playerController:(id)arg0 volumeDidChangedBySystemButton:(double)arg1;
- (void)playerControllerDidDismissVolumeView:(id)arg0;
- (void)playerController:(id)arg0 playbackTimeChanged:(double)arg1;
- (void)playerController:(id)arg0 didExecuteAction:(long long)arg1;
- (void)playerControllerDidBeginStalling:(id)arg0;
- (void)playerControllerDidEndStalling:(id)arg0;
- (void)playerControllerWillPlayNextLoop:(id)arg0;
- (void)playerController:(id)arg0 playbackFailedWithError:(id)arg1;
- (void)playerController:(id)arg0 playbackFailedWithURL:(id)arg1 error:(id)arg2;
- (void)playerController:(id)arg0 didFetchVideoModel:(id)arg1;
- (void)playerController:(id)arg0 didFetchVideoDataForURL:(id)arg1;
- (void)playerController:(id)arg0 didHitCacheForURL:(id)arg1;
- (void)updateloadingImage;
- (double)currentPlayTakenTime;
- (void)setPrePlayView:(id)arg0;
- (void)setStallPlayView:(id)arg0;
- (id)initWithVideoModel:(id)arg0 andVideoPlayStrategy:(id)arg1;
- (void)notifyDelegateWillPlayNextLoop;
- (void)notifyDelegateDidReadyForDisplay;
- (void)notifyDelegateDidFetchVideoModel:(id)arg0;
- (void)setVideoScaleMode:(long long)arg0;
- (void)setPlaybackBrightness:(float)arg0;
- (BOOL)isUseCache;
- (double)currentPlaybackTime;
- (long long)cacheSize;
- (void).cxx_destruct;
- (double)volume;
- (id)playerController;
- (unsigned long long)sessionId;
- (void)setMuted:(BOOL)arg0;
- (BOOL)stop;
- (void)setPlayerController:(id)arg0;
- (id)delegate;
- (double)videoHeight;
- (long long)playerState;
- (id)playerView;
- (double)videoWidth;
- (double)videoDuration;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (BOOL)play;
- (BOOL)pause;
- (void)reset;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (BOOL)pause:(BOOL)arg0;
- (void)seekToTime:(double)arg0;
- (double)speed;
- (BOOL)isMuted;
- (void)setUseCache:(BOOL)arg0;
- (double)playbackSpeed;
- (void)setPlaybackSpeed:(float)arg0;
- (void)setRepeated:(BOOL)arg0;
- (void)prepareToPlay;
- (long long)scalingMode;
- (void)setScalingMode:(long long)arg0;
- (BOOL)isRepeated;
- (BOOL)readyForDisplay;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)addBoundaryTimeObserverForTimes:(id)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)setPlaybackMode:(long long)arg0;
- (void)setPlaybackVolume:(float)arg0;
- (id)postPlayView;
- (void)setPostPlayView:(id)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
