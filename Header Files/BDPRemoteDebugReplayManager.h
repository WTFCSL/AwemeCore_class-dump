//
//     Generated by private class-dump
//

@class NSMutableArray, NSString, BDPUniqueID, BDPRemoteDebugRuntimeEvent;
@protocol BDPDebugRuntimeProtocol;

@interface BDPRemoteDebugReplayManager : NSObject {
    BOOL _isSecondReplay;
    BOOL _hasMore;
    BOOL _batchResult;
    id<BDPDebugRuntimeProtocol> _delegate;
    long long _replayStatus;
    BDPRemoteDebugRuntimeEvent *_event;
    long long _needReplayCount;
    long long _replayedCount;
    double _startReplayTime;
    NSString *_mpCaseID;
    NSString *_nextMpCaseID;
    NSMutableArray *_detailResult;
    BDPUniqueID *_uniqueID;
    NSString *_replayMessage;
    long long _rebootFlag;
}

@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (copy, nonatomic) NSString *replayMessage;
@property (nonatomic) long long rebootFlag;
@property (weak, nonatomic) id<BDPDebugRuntimeProtocol> delegate;
@property (nonatomic) long long replayStatus;
@property (retain, nonatomic) BDPRemoteDebugRuntimeEvent *event;
@property (nonatomic) long long needReplayCount;
@property (nonatomic) long long replayedCount;
@property (nonatomic) BOOL isSecondReplay;
@property (nonatomic) double startReplayTime;
@property (copy, nonatomic) NSString *mpCaseID;
@property (copy, nonatomic) NSString *nextMpCaseID;
@property (nonatomic) BOOL hasMore;
@property (nonatomic) BOOL batchResult;
@property (retain, nonatomic) NSMutableArray *detailResult;

- (long long)replayStatus;
- (void)setReplayStatus:(long long)arg0;
- (void)setReplayMessage:(id)arg0;
- (long long)rebootFlag;
- (void)setRebootFlag:(long long)arg0;
- (void)setNeedReplayCount:(long long)arg0;
- (void)setReplayedCount:(long long)arg0;
- (void)processReplayCommandParams:(id)arg0 completion:(id /* block */)arg1;
- (void)processReplayEntryWithCompletion:(id /* block */)arg0;
- (BOOL)isSecondReplay;
- (void)rebuildSchema;
- (void)storageReplayCommadsWithCompletion:(id /* block */)arg0;
- (void)processReplayCleanCacheWithCompletion:(id /* block */)arg0;
- (double)startReplayTime;
- (BOOL)batchResult;
- (id)nextMpCaseID;
- (id)mpCaseID;
- (void)cleanCacheIfNeed:(id)arg0 completion:(id /* block */)arg1;
- (id)separateEntryQuery:(id)arg0;
- (void)startAutoTestReplayWithMessage:(id)arg0 event:(id)arg1 completion:(id /* block */)arg2;
- (long long)needReplayCount;
- (long long)replayedCount;
- (void)setIsSecondReplay:(BOOL)arg0;
- (void)setStartReplayTime:(double)arg0;
- (void)setMpCaseID:(id)arg0;
- (void)setNextMpCaseID:(id)arg0;
- (void)setBatchResult:(BOOL)arg0;
- (id)detailResult;
- (void)setDetailResult:(id)arg0;
- (id)replayMessage;
- (void)setEvent:(id)arg0;
- (id)event;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (id)delegate;
- (void)setHasMore:(BOOL)arg0;
- (BOOL)hasMore;
- (void)setDelegate:(id)arg0;
- (id)initWithUniqueID:(id)arg0;

@end
