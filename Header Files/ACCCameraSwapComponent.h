//
//     Generated by private class-dump
//

@class NSString, ACCBarItem;
@protocol ACCRecordSwitchModeService, ACCRecordPropService, ACCCameraSwapService, ACCRecorderViewContainer, ACCScanService, ACCRecordTrackService, ACCRecordAuthService, ACCCameraService;

@interface ACCCameraSwapComponent : ACCFeatureComponent <ACCCameraSwapService, ACCCameraLifeCircleEvent, ACCRecordSwitchModeServiceSubscriber, ACCRecordPropServiceSubscriber> {
    BOOL _shootFromMaskNeedBlockSwapButton;
    BOOL _isFirstAppear;
    BOOL _isSwapCamera;
    long long _currentCameraPosition;
    ACCBarItem *_swapBarItem;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCCameraService> _cameraService;
    id<ACCCameraSwapService> _cameraSwapService;
    id<ACCRecordTrackService> _trackService;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCRecordPropService> _propService;
    id<ACCScanService> _scanService;
    id<ACCRecordAuthService> _authService;
}

@property (nonatomic) BOOL isUserSwappedCamera;
@property (nonatomic) BOOL shootFromMaskNeedBlockSwapButton;
@property (nonatomic) long long currentCameraPosition;
@property (nonatomic) BOOL isFirstAppear;
@property (nonatomic) BOOL isSwapCamera;
@property (retain, nonatomic) ACCBarItem *swapBarItem;
@property (retain, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (weak, nonatomic) id<ACCCameraSwapService> cameraSwapService;
@property (retain, nonatomic) id<ACCRecordTrackService> trackService;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (weak, nonatomic) id<ACCScanService> scanService;
@property (weak, nonatomic) id<ACCRecordAuthService> authService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)currentCameraPosition;
- (void)setIsFirstAppear:(BOOL)arg0;
- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)componentDidAppear;
- (unsigned long long)preferredLoadPhase;
- (void)loadComponentView;
- (id)serviceBinding;
- (void)bindServices:(id)arg0;
- (id)switchModeService;
- (id)trackService;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (void)onCreateCameraCompleteWithCamera:(id)arg0;
- (void)setTrackService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (void)onCameraFirstFrameDidRender:(id)arg0;
- (id)authService;
- (void)setAuthService:(id)arg0;
- (void)p_bindViewModelObserver;
- (void)setCurrentCameraPosition:(long long)arg0;
- (void)syncCameraActualPosition;
- (id)propService;
- (void)setPropService:(id)arg0;
- (void)propServiceDidApplyProp:(id)arg0 success:(BOOL)arg1;
- (void)switchToCameraPosition:(long long)arg0 source:(unsigned long long)arg1;
- (void)switchToOppositeCameraPositionWithSource:(unsigned long long)arg0;
- (BOOL)isUserSwappedCamera;
- (BOOL)shootFromMaskNeedBlockSwapButton;
- (id)cameraSwapService;
- (void)setCameraSwapService:(id)arg0;
- (void)setIsUserSwappedCamera:(BOOL)arg0;
- (id)scanService;
- (void)setScanService:(id)arg0;
- (void)setIsSwapCamera:(BOOL)arg0;
- (BOOL)isSwapCamera;
- (void)configSwapBarItem;
- (id)cameraSwapButton;
- (void)setSwapBarItem:(id)arg0;
- (void)setShootFromMaskNeedBlockSwapButton:(BOOL)arg0;
- (void)p_DisableNotHideButton:(id)arg0;
- (void)p_configSwapButtonAccessiblity;
- (void)updateSwapBarItemClickability;
- (void)p_SwapCameraPositionIfNeed;
- (id)swapBarItem;
- (void)p_setUserSwappedWtihSource:(unsigned long long)arg0;
- (void).cxx_destruct;
- (BOOL)isFirstAppear;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;

@end
