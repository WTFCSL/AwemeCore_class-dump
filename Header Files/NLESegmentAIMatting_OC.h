//
//     Generated by private class-dump
//

@class NSString, NLEResourceNode_OC, UIColor;

@interface NLESegmentAIMatting_OC : NLESegment_OC {
    BOOL _disableSaveCacheInCompile;
    BOOL _disableDownSampleForBach;
    NLEResourceNode_OC *_resourceAiMatting;
    NSString *_workSpace;
    long long _archerStrategy;
}

@property (nonatomic) struct shared_ptr<cut::model::NLESegmentAIMatting> { struct NLESegmentAIMatting *x0; struct __shared_weak_count *x1; } cppValue;
@property (retain, nonatomic) NLEResourceNode_OC *resourceAiMatting;
@property (copy, nonatomic) NSString *workSpace;
@property (nonatomic) long long archerStrategy;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } aiMattingCilpStart;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } aiMattingCilpEnd;
@property (nonatomic) unsigned long long mattingType;
@property (nonatomic) unsigned long long blendMode;
@property (copy, nonatomic) UIColor *blendBackgroundColor;
@property (nonatomic) BOOL disableSaveCacheInCompile;
@property (nonatomic) BOOL disableDownSampleForBach;
@property (retain, nonatomic) NLEResourceNode_OC *resourceAlgorithm;

- (id)initWithCPPNode:(struct shared_ptr<cut::model::NLESegmentAIMatting> { struct NLESegmentAIMatting *x0; struct __shared_weak_count *x1; })arg0;
- (id)resourceAiMatting;
- (void)setResourceAiMatting:(id)arg0;
- (id)workSpace;
- (void)setWorkSpace:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })aiMattingCilpStart;
- (void)setAiMattingCilpStart:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })aiMattingCilpEnd;
- (void)setAiMattingCilpEnd:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (unsigned long long)mattingType;
- (void)setMattingType:(unsigned long long)arg0;
- (BOOL)getDisableSaveCacheInCompile;
- (void)setDisableSaveCacheInCompile:(BOOL)arg0;
- (BOOL)getDisableDownSampleForBach;
- (void)setDisableDownSampleForBach:(BOOL)arg0;
- (id)resourceAlgorithm;
- (void)setResourceAlgorithm:(id)arg0;
- (id)blendBackgroundColor;
- (void)setBlendBackgroundColor:(id)arg0;
- (long long)archerStrategy;
- (void)setArcherStrategy:(long long)arg0;
- (BOOL)disableSaveCacheInCompile;
- (BOOL)disableDownSampleForBach;
- (id)init;
- (void).cxx_destruct;
- (unsigned long long)blendMode;
- (void)setBlendMode:(unsigned long long)arg0;

@end
