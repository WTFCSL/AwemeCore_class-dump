//
//     Generated by private class-dump
//

@class IESLiveMessageListNodeFactoryV2, NSString, HTSEventContext, IESLiveMessageListRefreshConfiguration, IESLiveGCDTimer, IESLiveMessageDeleteManager, NSMutableString, HTSLiveMessageListNode, NSMutableArray;
@protocol IESLiveRoomServiceAdapter, IESLiveMessageListMonitorService, IESLivePublicScreenNodeManagerDelegate;

@interface IESLiveMessageListNodeManager : NSObject <IESLivePublicScreenNodeManagerProtocol> {
    BOOL isAnchor;
    BOOL enablePublicScreenSpeedStrategy;
    BOOL _abEnableFirstPatchHistoryUseSelfApi;
    BOOL _firstFetchMessageArrived;
    BOOL _firstHistoryMessageArrivedOrFailed;
    BOOL _enableFirstFetchHistoryMessage;
    BOOL _isHotLiveRoom;
    BOOL _isColdLiveRoom;
    BOOL _refreshTimerRunning;
    BOOL _refreshTimerNeedReset;
    BOOL _enableRefreshDegrade;
    BOOL _nodesCreationPause;
    BOOL _isFirstBatchMessage;
    BOOL _didHandleFirstMessage;
    BOOL _isFirstMessageNode;
    BOOL _isFirstValidNodeCommit;
    BOOL _abMessageScatterEnable;
    BOOL _needShowHistoryMessageNodes;
    BOOL _messagelistABDIOptimize;
    HTSEventContext *eventContext;
    id<IESLivePublicScreenNodeManagerDelegate> delegate;
    IESLiveMessageListRefreshConfiguration *configuration;
    long long currentSpeed;
    long long listCellStyle;
    long long roomUserCount;
    id /* block */ _commitCountCheckBlock;
    id<IESLiveMessageListMonitorService> _messageListMonitor;
    long long _firstFetchHistoryMessageCount;
    id /* block */ _onHistoryNodesShowed;
    long long _currentRoomHeat;
    IESLiveGCDTimer *_refreshTimer;
    IESLiveGCDTimer *_hotRoomCountTimer;
    IESLiveGCDTimer *_strategyTimer;
    double _lastRefreshDuration;
    long long _commitCount;
    long long _receivedMsgCountInDuration;
    IESLiveGCDTimer *_messageHeartBeatTimer;
    long long _noMessageHeartBeatCount;
    NSMutableArray *_receivedMsgForStrategyTimer;
    NSMutableArray *_watingDeleteBuffer;
    NSMutableArray *_refreshMessagesBuffer;
    NSMutableArray *_scatterMessagesbuffer;
    NSMutableArray *_myMessagesBuffer;
    NSMutableArray *_ecomMessageBuffer;
    NSMutableArray *_foldMessagesBuffer;
    NSMutableArray *_historyMessagesBuffer;
    NSMutableArray *_myMessageNodeBuffer;
    NSMutableArray *_showImmediatelyMessageNodeBuffer;
    NSMutableArray *_forcedGuaranteeFoldMessageNodeBuffer;
    NSMutableArray *_refreshMessageNodeBuffer;
    NSMutableArray *_foldMessageNodeBuffer;
    NSMutableArray *_totalHistoryMessageNodeBuffer;
    NSMutableArray *_auctionMessageNodeBuffer;
    HTSLiveMessageListNode *_currentFoldNode;
    long long _filterTimesWhenEnterRoomChatClosed;
    NSMutableString *_filterMessagesIdWhenEnterRoomChatClosed;
    IESLiveMessageListNodeFactoryV2 *_messageNodeFactory;
    long long _currentRefreshShowCount;
    long long _randomScatterNumber;
    long long _randomScatterShowCount;
    double _lastScatterShowTime;
    long long _shouldShowHistoryMsgCount;
    NSString *_currentUserID;
    id<IESLiveRoomServiceAdapter> _room;
    IESLiveMessageDeleteManager *_messagedeleter;
}

@property (nonatomic) BOOL isHotLiveRoom;
@property (nonatomic) BOOL isColdLiveRoom;
@property (nonatomic) long long currentRoomHeat;
@property (retain, nonatomic) IESLiveGCDTimer *refreshTimer;
@property (retain, nonatomic) IESLiveGCDTimer *hotRoomCountTimer;
@property (retain, nonatomic) IESLiveGCDTimer *strategyTimer;
@property (nonatomic) double lastRefreshDuration;
@property (nonatomic) BOOL refreshTimerRunning;
@property (nonatomic) BOOL refreshTimerNeedReset;
@property (nonatomic) long long commitCount;
@property (nonatomic) long long receivedMsgCountInDuration;
@property (retain, nonatomic) IESLiveGCDTimer *messageHeartBeatTimer;
@property (nonatomic) long long noMessageHeartBeatCount;
@property (retain, nonatomic) NSMutableArray *receivedMsgForStrategyTimer;
@property (nonatomic) BOOL enableRefreshDegrade;
@property (retain, nonatomic) NSMutableArray *watingDeleteBuffer;
@property (retain, nonatomic) NSMutableArray *refreshMessagesBuffer;
@property (retain, nonatomic) NSMutableArray *scatterMessagesbuffer;
@property (retain, nonatomic) NSMutableArray *myMessagesBuffer;
@property (retain, nonatomic) NSMutableArray *ecomMessageBuffer;
@property (retain, nonatomic) NSMutableArray *foldMessagesBuffer;
@property (retain, nonatomic) NSMutableArray *historyMessagesBuffer;
@property (nonatomic) BOOL nodesCreationPause;
@property (retain, nonatomic) NSMutableArray *myMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *showImmediatelyMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *forcedGuaranteeFoldMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *refreshMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *foldMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *totalHistoryMessageNodeBuffer;
@property (retain, nonatomic) NSMutableArray *auctionMessageNodeBuffer;
@property (retain, nonatomic) HTSLiveMessageListNode *currentFoldNode;
@property (nonatomic) BOOL isFirstBatchMessage;
@property (nonatomic) BOOL didHandleFirstMessage;
@property (nonatomic) BOOL isFirstMessageNode;
@property (nonatomic) BOOL isFirstValidNodeCommit;
@property (nonatomic) long long filterTimesWhenEnterRoomChatClosed;
@property (retain, nonatomic) NSMutableString *filterMessagesIdWhenEnterRoomChatClosed;
@property (retain, nonatomic) IESLiveMessageListNodeFactoryV2 *messageNodeFactory;
@property (nonatomic) BOOL abMessageScatterEnable;
@property (nonatomic) long long currentRefreshShowCount;
@property (nonatomic) long long randomScatterNumber;
@property (nonatomic) long long randomScatterShowCount;
@property (nonatomic) double lastScatterShowTime;
@property (nonatomic) long long shouldShowHistoryMsgCount;
@property (nonatomic) BOOL needShowHistoryMessageNodes;
@property (nonatomic) BOOL messagelistABDIOptimize;
@property (copy, nonatomic) NSString *currentUserID;
@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> room;
@property (retain, nonatomic) IESLiveMessageDeleteManager *messagedeleter;
@property (copy, nonatomic) id /* block */ commitCountCheckBlock;
@property (retain, nonatomic) id<IESLiveMessageListMonitorService> messageListMonitor;
@property (nonatomic) BOOL abEnableFirstPatchHistoryUseSelfApi;
@property (nonatomic) BOOL firstFetchMessageArrived;
@property (nonatomic) BOOL firstHistoryMessageArrivedOrFailed;
@property (nonatomic) BOOL enableFirstFetchHistoryMessage;
@property (nonatomic) long long firstFetchHistoryMessageCount;
@property (copy, nonatomic) id /* block */ onHistoryNodesShowed;
@property (nonatomic) long long listCellStyle;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (weak, nonatomic) id<IESLivePublicScreenNodeManagerDelegate> delegate;
@property (retain, nonatomic) IESLiveMessageListRefreshConfiguration *configuration;
@property (nonatomic) BOOL isAnchor;
@property (nonatomic) long long currentSpeed;
@property (nonatomic) BOOL enablePublicScreenSpeedStrategy;
@property (nonatomic) long long roomUserCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIsAnchor:(BOOL)arg0;
- (BOOL)isFirstBatchMessage;
- (void)setIsFirstBatchMessage:(BOOL)arg0;
- (void)setEventContext:(id)arg0;
- (void)setCurrentUserID:(id)arg0;
- (void)setEnablePublicScreenSpeedStrategy:(BOOL)arg0;
- (BOOL)needFoldForMessage:(id)arg0;
- (long long)listCellStyle;
- (void)setListCellStyle:(long long)arg0;
- (double)currentRefreshDuration;
- (long long)currentRefreshCount;
- (double)designatedMessageListWidth;
- (void)setMessageNodeFactory:(id)arg0;
- (void)setMyMessagesBuffer:(id)arg0;
- (void)setRefreshMessagesBuffer:(id)arg0;
- (void)setMyMessageNodeBuffer:(id)arg0;
- (void)setRefreshMessageNodeBuffer:(id)arg0;
- (double)lastRefreshDuration;
- (void)resetRefreshConfigAfterDuration:(double)arg0;
- (BOOL)refreshTimerNeedReset;
- (void)setRefreshTimerNeedReset:(BOOL)arg0;
- (void)setRefreshTimerRunning:(BOOL)arg0;
- (void)setLastRefreshDuration:(double)arg0;
- (id)refreshMessageNodeBuffer;
- (id)myMessageNodeBuffer;
- (BOOL)nodesCreationPause;
- (id)myMessagesBuffer;
- (id)messageNodeFactory;
- (id)refreshMessagesBuffer;
- (void)addMessageToBuffer:(id)arg0;
- (BOOL)isSendByCurrentUser:(id)arg0;
- (BOOL)refreshTimerRunning;
- (void)setNodesCreationPause:(BOOL)arg0;
- (void)resetNodeForNodes:(id)arg0 completion:(id /* block */)arg1;
- (id)initWithRoom:(id)arg0 refreshConfig:(id)arg1;
- (void)startNodesCommit;
- (void)stopNodesCommit;
- (void)resetPreferredMaxLayoutWidth:(double)arg0 completion:(id /* block */)arg1;
- (void)updateNodeSizeForNodes:(id)arg0 completion:(id /* block */)arg1;
- (void)resetNodeForNodeBuffer:(id /* block */)arg0;
- (void)removeAllBuffer;
- (void)roomUpdated:(id)arg0;
- (BOOL)enablePublicScreenSpeedStrategy;
- (long long)roomUserCount;
- (void)setRoomUserCount:(long long)arg0;
- (BOOL)enableGiftMessageShowInList:(id)arg0;
- (void)refreshDegrade:(BOOL)arg0;
- (void)disableHostFontSizeScaleMode;
- (BOOL)messagelistABDIOptimize;
- (void)setMessagelistABDIOptimize:(BOOL)arg0;
- (long long)filterTimesWhenEnterRoomChatClosed;
- (id)filterMessagesIdWhenEnterRoomChatClosed;
- (void)p_invalidateRefreshTimer;
- (void)setupMessageNodeFactory;
- (void)p_setupHotRoomCountTimerWithDuration:(double)arg0;
- (void)p_setupPublicScreenRefreshStrategyTimer;
- (void)p_respondToConfigChange;
- (void)p_successCreatedNode:(id)arg0;
- (double)p_refreshDuration;
- (void)p_setupRefreshTimerWithDuration:(double)arg0;
- (id)showImmediatelyMessageNodeBuffer;
- (id)foldMessageNodeBuffer;
- (id)forcedGuaranteeFoldMessageNodeBuffer;
- (id)totalHistoryMessageNodeBuffer;
- (BOOL)p_nodeBuffersIsEmpty;
- (id)allBufferNodes;
- (long long)shouldShowHistoryMsgCount;
- (void)setNeedShowHistoryMessageNodes:(BOOL)arg0;
- (id /* block */)onHistoryNodesShowed;
- (void)setShouldShowHistoryMsgCount:(long long)arg0;
- (id)scatterMessagesbuffer;
- (id)foldMessagesBuffer;
- (void)p_resetRefreshTimerAfterDuration:(double)arg0;
- (void)p_resetScatterParameters;
- (BOOL)enableRefreshDegrade;
- (void)setEnableRefreshDegrade:(BOOL)arg0;
- (void)p_refreshTimerImmediately;
- (long long)p_refreshMessageCount;
- (BOOL)isFirstValidNodeCommit;
- (void)p_refreshInTimerDuration;
- (void)setNoMessageHeartBeatCount:(long long)arg0;
- (long long)noMessageHeartBeatCount;
- (void)setReceivedMsgCountInDuration:(long long)arg0;
- (void)setCurrentRoomHeat:(long long)arg0;
- (long long)receivedMsgCountInDuration;
- (void)calculateRoomHeatWithMsgCountInDuration:(long long)arg0;
- (void)setIsHotLiveRoom:(BOOL)arg0;
- (void)setIsColdLiveRoom:(BOOL)arg0;
- (BOOL)isHotLiveRoom;
- (BOOL)isColdLiveRoom;
- (long long)currentRoomHeat;
- (void)caculateMessageFactorForRefreshStrategyTimer;
- (id)receivedMsgForStrategyTimer;
- (void)p_addBackgroundFlagForRefreshBuffer;
- (id)p_consumeNodesFromNodeBuffer:(id)arg0;
- (id)watingDeleteBuffer;
- (id)messagedeleter;
- (void)setIsFirstValidNodeCommit:(BOOL)arg0;
- (void)p_filterMessageNodesWhenRoomAuthChatClosed:(id)arg0;
- (void)setFilterTimesWhenEnterRoomChatClosed:(long long)arg0;
- (id)messageListMonitor;
- (long long)enterRoomRefreshOptimizeCount;
- (id /* block */)commitCountCheckBlock;
- (BOOL)p_canShowWhenChatClosed:(id)arg0;
- (BOOL)p_deleteMessageFromBufferWithMessageId:(id)arg0;
- (void)p_addToBufferIfNeeded:(id)arg0;
- (BOOL)didHandleFirstMessage;
- (void)setDidHandleFirstMessage:(BOOL)arg0;
- (BOOL)abEnableFirstPatchHistoryUseSelfApi;
- (void)p_addMessageToBuff:(id)arg0;
- (void)p_checkAndConsumeMessageBuffer;
- (id)historyMessagesBuffer;
- (BOOL)messageScatterEnable;
- (BOOL)isAuctionMessage:(id)arg0;
- (id)ecomMessageBuffer;
- (void)addRefreshMessageToBuffer:(id)arg0;
- (BOOL)p_deleteMessageFromNodeBufferWithMessageId:(id)arg0;
- (BOOL)abMessageScatterEnable;
- (void)p_addToTotalHistoryMessageNodeBufferWithNode:(id)arg0 inserHead:(BOOL)arg1;
- (BOOL)isFirstMessageNode;
- (void)setIsFirstMessageNode:(BOOL)arg0;
- (BOOL)needRefreshTimerWhenAddToMessageNodeBufferWithNode:(id)arg0;
- (BOOL)p_isMyMessageNode:(id)arg0;
- (void)p_addToRefreshMessageNodeBufferWithNode:(id)arg0 insertHead:(BOOL)arg1;
- (void)p_updateFoldMessageNode:(id)arg0;
- (void)p_addToAuctionMessageNodeBufferWithNode:(id)arg0 insertHead:(BOOL)arg1;
- (BOOL)needShowHistoryMessageNodes;
- (void)showHistoryMessages;
- (id)auctionMessageNodeBuffer;
- (BOOL)firstFetchMessageArrived;
- (BOOL)firstHistoryMessageArrivedOrFailed;
- (BOOL)enableCreateNodesByRefreshMessage;
- (id)consumeMessageWithCount:(long long)arg0;
- (id)p_messageScatterConsume:(long long)arg0;
- (id)p_messageNormalConsume:(long long)arg0;
- (long long)currentRefreshShowCount;
- (long long)randomScatterNumber;
- (long long)randomScatterShowCount;
- (void)setCurrentRefreshShowCount:(long long)arg0;
- (double)lastScatterShowTime;
- (void)setLastScatterShowTime:(double)arg0;
- (id)refreshMessagesConsume:(long long)arg0;
- (id)refreshNodesConsume:(long long)arg0;
- (BOOL)p_enableCreateNodes;
- (void)p_consumeMessagesFromMessageBuffer;
- (void)setRandomScatterNumber:(long long)arg0;
- (void)setRandomScatterShowCount:(long long)arg0;
- (BOOL)enableFirstFetchHistoryMessage;
- (long long)firstFetchHistoryMessageCount;
- (void)createHistoryMessageNodes:(id)arg0;
- (void)setMessageListFontSize:(unsigned long long)arg0;
- (void)handleDeleteMessage:(id)arg0;
- (void)deleteNodes:(id)arg0;
- (void)setFirstFetchMessageArrived:(BOOL)arg0;
- (void)setFirstHistoryMessageArrivedOrFailed:(BOOL)arg0;
- (void)setCommitCountCheckBlock:(id /* block */)arg0;
- (void)setMessageListMonitor:(id)arg0;
- (void)setAbEnableFirstPatchHistoryUseSelfApi:(BOOL)arg0;
- (void)setEnableFirstFetchHistoryMessage:(BOOL)arg0;
- (void)setFirstFetchHistoryMessageCount:(long long)arg0;
- (void)setOnHistoryNodesShowed:(id /* block */)arg0;
- (id)hotRoomCountTimer;
- (void)setHotRoomCountTimer:(id)arg0;
- (id)strategyTimer;
- (void)setStrategyTimer:(id)arg0;
- (id)messageHeartBeatTimer;
- (void)setMessageHeartBeatTimer:(id)arg0;
- (void)setReceivedMsgForStrategyTimer:(id)arg0;
- (void)setWatingDeleteBuffer:(id)arg0;
- (void)setScatterMessagesbuffer:(id)arg0;
- (void)setEcomMessageBuffer:(id)arg0;
- (void)setFoldMessagesBuffer:(id)arg0;
- (void)setHistoryMessagesBuffer:(id)arg0;
- (void)setShowImmediatelyMessageNodeBuffer:(id)arg0;
- (void)setForcedGuaranteeFoldMessageNodeBuffer:(id)arg0;
- (void)setFoldMessageNodeBuffer:(id)arg0;
- (void)setTotalHistoryMessageNodeBuffer:(id)arg0;
- (void)setAuctionMessageNodeBuffer:(id)arg0;
- (id)currentFoldNode;
- (void)setCurrentFoldNode:(id)arg0;
- (void)setFilterMessagesIdWhenEnterRoomChatClosed:(id)arg0;
- (void)setAbMessageScatterEnable:(BOOL)arg0;
- (void)setMessagedeleter:(id)arg0;
- (void).cxx_destruct;
- (BOOL)isAnchor;
- (id)delegate;
- (id)configuration;
- (id)eventContext;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setConfiguration:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (long long)currentSpeed;
- (void)setCurrentSpeed:(long long)arg0;
- (id)currentUserID;
- (id)refreshTimer;
- (long long)commitCount;
- (void)setCommitCount:(long long)arg0;
- (void)handleMessages:(id)arg0;
- (void)setRefreshTimer:(id)arg0;
- (void)p_setupBuffers;
- (void)refreshConfig:(id)arg0;

@end
