//
//     Generated by private class-dump
//

@class UIView, NSDate, CADisplayLink, AVAssetWriter, LCAudioBufferQueue, NSMutableDictionary, NSString, NSObject, LiveCore, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor;
@protocol OS_dispatch_queue, LCScreenRecorderProtocol, OS_dispatch_semaphore;

@interface LCScreenRecorder : NSObject {
    NSObject<OS_dispatch_queue> *_recorderQueue;
    BOOL _recording;
    struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _asbd;
    struct opaqueCMFormatDescription { } *_formatDesc;
    unsigned int _outPixelFormat;
    unsigned char _frameRate;
    BOOL _canDrawInBackground;
    BOOL _hasUpdatedAudioFormat;
    BOOL _hasUpdatedVideoFormat;
    BOOL _enableVideo;
    BOOL _enableAudio;
    BOOL _isApplicationActive;
    float _elapse;
    int _audioInputStatus;
    id<LCScreenRecorderProtocol> _delegate;
    NSString *_outputPath;
    long long _bitrate;
    id /* block */ _bufferCallback;
    NSMutableDictionary *_bufferQueueList;
    LCAudioBufferQueue *_microphoneBufferQueue;
    LCAudioBufferQueue *_interactBufferQueue;
    LiveCore *_engine;
    AVAssetWriter *_writer;
    AVAssetWriterInput *_videoInput;
    AVAssetWriterInput *_audioInput;
    AVAssetWriterInputPixelBufferAdaptor *_writerInputPixelBufferAdaptor;
    CADisplayLink *_displayLink;
    UIView *_targetView;
    NSObject<OS_dispatch_semaphore> *_frameRenderingSemaphore;
    double _startRecordAbsoluteTime;
    double _applicationWillResignActiveAbsoluteTime;
    double _inactiveAbsoluteTime;
    double _scale;
    struct CGColorSpace { } *_rgbColorSpace;
    NSDate *_lastFrameDate;
    double _lastFrameAbsoluteTime;
    double _frameInterval;
    struct CGSize { double width; double height; } _outputSize;
    struct CGSize { double width; double height; } _viewSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstVideoPts;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstAudioPts;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _startSampleTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastSampleTime;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _drawRect;
}

@property (retain, nonatomic) NSMutableDictionary *bufferQueueList;
@property (retain, nonatomic) LCAudioBufferQueue *microphoneBufferQueue;
@property (retain, nonatomic) LCAudioBufferQueue *interactBufferQueue;
@property (nonatomic) BOOL hasUpdatedAudioFormat;
@property (nonatomic) BOOL hasUpdatedVideoFormat;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } firstVideoPts;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } firstAudioPts;
@property (nonatomic) BOOL enableVideo;
@property (nonatomic) BOOL enableAudio;
@property BOOL isApplicationActive;
@property (weak, nonatomic) LiveCore *engine;
@property (retain, nonatomic) AVAssetWriter *writer;
@property (retain, nonatomic) AVAssetWriterInput *videoInput;
@property (retain, nonatomic) AVAssetWriterInput *audioInput;
@property (retain, nonatomic) AVAssetWriterInputPixelBufferAdaptor *writerInputPixelBufferAdaptor;
@property (retain, nonatomic) CADisplayLink *displayLink;
@property (weak, nonatomic) UIView *targetView;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *frameRenderingSemaphore;
@property (nonatomic) double startRecordAbsoluteTime;
@property (nonatomic) double applicationWillResignActiveAbsoluteTime;
@property double inactiveAbsoluteTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } startSampleTime;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } lastSampleTime;
@property (nonatomic) double scale;
@property (nonatomic) struct CGColorSpace { } *rgbColorSpace;
@property (nonatomic) struct CGSize { double width; double height; } viewSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } drawRect;
@property (retain, nonatomic) NSDate *lastFrameDate;
@property (nonatomic) double lastFrameAbsoluteTime;
@property (nonatomic) double frameInterval;
@property (nonatomic) int audioInputStatus;
@property (weak, nonatomic) id<LCScreenRecorderProtocol> delegate;
@property (copy, nonatomic) NSString *outputPath;
@property (nonatomic) unsigned char frameRate;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) long long bitrate;
@property (copy, nonatomic) id /* block */ bufferCallback;
@property (nonatomic) float elapse;
@property (nonatomic) BOOL canDrawInBackground;

- (BOOL)enableAudio;
- (BOOL)enableVideo;
- (void)setEnableVideo:(BOOL)arg0;
- (void)setFirstVideoPts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })firstVideoPts;
- (void)applicationDidBecomeActiveNoti:(id)arg0;
- (double)getFileSize:(id)arg0;
- (void)setEnableAudio:(BOOL)arg0;
- (void)setMasterLayer:(int)arg0;
- (BOOL)prepareAudioInput;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)setIsApplicationActive:(BOOL)arg0;
- (void)setCanDrawInBackground:(BOOL)arg0;
- (void)setInactiveAbsoluteTime:(double)arg0;
- (void)applicationWillResignActiveNoti:(id)arg0;
- (void)setApplicationWillResignActiveAbsoluteTime:(double)arg0;
- (double)applicationWillResignActiveAbsoluteTime;
- (double)inactiveAbsoluteTime;
- (void)setDrawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)setupAssetWriter;
- (void)enqueueAudioBuffer:(void *)arg0 numberOfFrames:(int)arg1 numberOfchannels:(int)arg2 track:(int)arg3;
- (BOOL)startRecordingWithImageCallback:(id /* block */)arg0;
- (void)destryDisplayLink;
- (void)__processAudioData;
- (void)__doMixAudioTo:(short *)arg0 length:(short)arg1;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })__currentCMTime;
- (double)startRecordAbsoluteTime;
- (void)captureFrame:(id)arg0;
- (BOOL)canVideoTransform;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })videoTransformForDeviceOrientation;
- (void)setWriterInputPixelBufferAdaptor:(id)arg0;
- (BOOL)setupVideoInput;
- (void)setStartRecordAbsoluteTime:(double)arg0;
- (id)frameRenderingSemaphore;
- (double)lastFrameAbsoluteTime;
- (id)writerInputPixelBufferAdaptor;
- (struct CGColorSpace { } *)rgbColorSpace;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })drawRect;
- (void)setLastFrameAbsoluteTime:(double)arg0;
- (BOOL)canDrawInBackground;
- (id)initWithLiveCore:(id)arg0;
- (BOOL)startScreenRecordingWithCaptureCallback:(id /* block */)arg0;
- (void)__flushAudioBufferCache;
- (void)registerRenderWithView:(id)arg0 uid:(id)arg1;
- (void)updateLayoutForView:(id)arg0 uid:(id)arg1;
- (void)shouldUpdateLayout;
- (void)setSubview:(id)arg0 enable:(BOOL)arg1;
- (float)elapse;
- (id)takeShotForView:(id)arg0;
- (void)pushVideoBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (void)setElapse:(float)arg0;
- (id)bufferQueueList;
- (void)setBufferQueueList:(id)arg0;
- (id)microphoneBufferQueue;
- (void)setMicrophoneBufferQueue:(id)arg0;
- (id)interactBufferQueue;
- (void)setInteractBufferQueue:(id)arg0;
- (BOOL)hasUpdatedAudioFormat;
- (void)setHasUpdatedAudioFormat:(BOOL)arg0;
- (BOOL)hasUpdatedVideoFormat;
- (void)setHasUpdatedVideoFormat:(BOOL)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })firstAudioPts;
- (void)setFirstAudioPts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setFrameRenderingSemaphore:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })startSampleTime;
- (void)setStartSampleTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setRgbColorSpace:(struct CGColorSpace { } *)arg0;
- (id)lastFrameDate;
- (void)setLastFrameDate:(id)arg0;
- (int)audioInputStatus;
- (void)setAudioInputStatus:(int)arg0;
- (void)setDisplayLink:(id)arg0;
- (BOOL)isRecording;
- (void)stopRecording;
- (void).cxx_destruct;
- (double)frameInterval;
- (id)targetView;
- (BOOL)isApplicationActive;
- (void)cleanup;
- (struct CGSize { double x0; double x1; })outputSize;
- (void)setContainerView:(id)arg0;
- (id)engine;
- (long long)bitrate;
- (double)scale;
- (void)setFrameInterval:(double)arg0;
- (void)setTargetView:(id)arg0;
- (id)audioSettings;
- (id)delegate;
- (BOOL)setAudioFormat:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg0;
- (struct CGSize { double x0; double x1; })viewSize;
- (void)setFrameRate:(unsigned char)arg0;
- (id)displayLink;
- (void)setupDisplayLink;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setWriter:(id)arg0;
- (void)setEngine:(id)arg0;
- (void)setScale:(double)arg0;
- (id)writer;
- (unsigned char)frameRate;
- (void)setViewSize:(struct CGSize { double x0; double x1; })arg0;
- (id)audioInput;
- (void)setAudioInput:(id)arg0;
- (void)cancelRecording;
- (void)setBitrate:(long long)arg0;
- (id)outputPath;
- (void)setOutputPath:(id)arg0;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (id)videoInput;
- (id /* block */)bufferCallback;
- (void)setBufferCallback:(id /* block */)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })lastSampleTime;
- (void)setLastSampleTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setVideoInput:(id)arg0;

@end
