//
//     Generated by private class-dump
//

@class NSString, NSMutableArray;

@interface BDPBusinessDispatchCenter : NSObject <BDPBusinessUpdateHandlerProtocol, BDPBusinessLoaderServiceProtocol, BDPBusinessUsageRecordProtocol, BDPBusinessSubscribeProtocol> {
    BOOL _didUpdateRelativeData;
    NSMutableArray *_updateHandlers;
    Class _loaderService;
    Class _usageService;
    Class _subscribeService;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _updateLock;
}

@property (nonatomic) struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } updateLock;
@property (nonatomic) BOOL didUpdateRelativeData;
@property (retain, nonatomic) NSMutableArray *updateHandlers;
@property (retain, nonatomic) Class loaderService;
@property (retain, nonatomic) Class usageService;
@property (retain, nonatomic) Class subscribeService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)clearDiskWithCompletion:(id /* block */)arg0 isAuto:(BOOL)arg1;
+ (void)clearDiskExtremelyWithCompletion:(id /* block */)arg0;
+ (long long)calculateCleanCacheSizeWithTriggerType:(long long)arg0 cleanLevel:(long long)arg1;
+ (void)addTimorEventListener:(id)arg0 subscribeEvent:(id)arg1;
+ (void)removeTimorEventListener:(id)arg0;
+ (void)calculateSizeWithCompletion:(id /* block */)arg0;
+ (void)clearAllWarmBootCache;
+ (void)clearAllUserCache;
+ (BOOL)clearWarmBootCacheOfAppID:(id)arg0;
+ (void)updateRelativeDataIfNeed;
+ (void)clearAllWarmBootCacheWithType:(long long)arg0;
+ (void)registerLoaderService:(Class)arg0;
+ (id)urlsOnDiskPaths;
+ (BOOL)clearWarmBootCacheOfAppID:(id)arg0 versionType:(id)arg1;
+ (void)preDownloadAppsWithInfos:(id)arg0;
+ (void)preloadTimorContextWithCaller:(id)arg0;
+ (void)prepareAppContainer;
+ (void)releasePreloadResourceWhenReceiveHostMemoryNotification;
+ (BOOL)clearWarmBootCacheOfSchemaURL:(id)arg0;
+ (void)registerCompletionHandlerForAppPreload:(id /* block */)arg0;
+ (void)registerUsageService:(Class)arg0;
+ (void)registerSubscribeService:(Class)arg0;
+ (id)usageRecordWithParameters:(id)arg0 update:(id /* block */)arg1;
+ (void)removeUsageRecordApp:(id)arg0 completion:(id /* block */)arg1;
+ (void)notifySubscriberWithModel:(id)arg0;
+ (void)registerUpdateHandler:(Class)arg0;
+ (id)sharedCenter;

- (void)clearDiskWithCompletion:(id /* block */)arg0 isAuto:(BOOL)arg1;
- (void)clearDiskExtremelyWithCompletion:(id /* block */)arg0;
- (long long)calculateCleanCacheSizeWithTriggerType:(long long)arg0 cleanLevel:(long long)arg1;
- (void)addTimorEventListener:(id)arg0 subscribeEvent:(id)arg1;
- (void)removeTimorEventListener:(id)arg0;
- (void)calculateSizeWithCompletion:(id /* block */)arg0;
- (void)clearAllWarmBootCache;
- (void)clearAllUserCache;
- (BOOL)clearWarmBootCacheOfAppID:(id)arg0;
- (void)updateRelativeDataIfNeed;
- (void)clearAllWarmBootCacheWithType:(long long)arg0;
- (void)registerLoaderService:(Class)arg0;
- (id)urlsOnDiskPaths;
- (BOOL)clearWarmBootCacheOfAppID:(id)arg0 versionType:(id)arg1;
- (void)preDownloadAppsWithInfos:(id)arg0;
- (void)preloadTimorContextWithCaller:(id)arg0;
- (void)prepareAppContainer;
- (void)releasePreloadResourceWhenReceiveHostMemoryNotification;
- (BOOL)clearWarmBootCacheOfSchemaURL:(id)arg0;
- (void)registerCompletionHandlerForAppPreload:(id /* block */)arg0;
- (void)registerUsageService:(Class)arg0;
- (void)setLoaderService:(Class)arg0;
- (void)setUsageService:(Class)arg0;
- (void)registerSubscribeService:(Class)arg0;
- (void)setSubscribeService:(Class)arg0;
- (BOOL)didUpdateRelativeData;
- (void)setDidUpdateRelativeData:(BOOL)arg0;
- (void)updateRelativeDataForHandlers;
- (Class)loaderService;
- (void)errorWithService:(id)arg0 action:(SEL)arg1;
- (id)usageRecordWithParameters:(id)arg0 update:(id /* block */)arg1;
- (void)removeUsageRecordApp:(id)arg0 completion:(id /* block */)arg1;
- (Class)usageService;
- (void)notifySubscriberWithModel:(id)arg0;
- (Class)subscribeService;
- (id)init;
- (void).cxx_destruct;
- (void)registerUpdateHandler:(Class)arg0;
- (id)updateHandlers;
- (void)setUpdateHandlers:(id)arg0;
- (struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })updateLock;
- (void)setUpdateLock:(struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })arg0;

@end
