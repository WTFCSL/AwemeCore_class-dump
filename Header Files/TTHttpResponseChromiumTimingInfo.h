//
//     Generated by private class-dump
//

@class NSString, NSDate;

@interface TTHttpResponseChromiumTimingInfo : TTHttpResponseTimingInfo {
    BOOL _isSocketReused;
    BOOL _isCached;
    char _cacheStatus;
    BOOL _isFromProxy;
    unsigned short _remotePort;
    NSDate *_start;
    long long _proxy;
    long long _dns;
    long long _connect;
    long long _ssl;
    long long _send;
    long long _wait;
    long long _receive;
    long long _total;
    long long _receivedResponseContentLength;
    long long _totalReceivedBytes;
    NSString *_remoteIP;
}

@property (retain, nonatomic) NSDate *start;
@property (nonatomic) long long proxy;
@property (nonatomic) long long dns;
@property (nonatomic) long long connect;
@property (nonatomic) long long ssl;
@property (nonatomic) long long send;
@property (nonatomic) long long wait;
@property (nonatomic) long long receive;
@property (nonatomic) long long total;
@property (nonatomic) long long receivedResponseContentLength;
@property (nonatomic) long long totalReceivedBytes;
@property (nonatomic) BOOL isSocketReused;
@property (nonatomic) BOOL isCached;
@property (nonatomic) char cacheStatus;
@property (nonatomic) BOOL isFromProxy;
@property (copy, nonatomic) NSString *remoteIP;
@property (nonatomic) unsigned short remotePort;

- (long long)ssl;
- (id)remoteIP;
- (BOOL)isSocketReused;
- (void)setIsSocketReused:(BOOL)arg0;
- (BOOL)isFromProxy;
- (void)setIsFromProxy:(BOOL)arg0;
- (void)setRemoteIP:(id)arg0;
- (long long)receivedResponseContentLength;
- (long long)totalReceivedBytes;
- (void)setSsl:(long long)arg0;
- (char)cacheStatus;
- (void)setCacheStatus:(char)arg0;
- (id)initWithURLFetcher:(const struct URLFetcher { void /* function */ **x0; } *)arg0;
- (void)setReceivedResponseContentLength:(long long)arg0;
- (void)setTotalReceivedBytes:(long long)arg0;
- (long long)send;
- (long long)connect;
- (long long)total;
- (long long)proxy;
- (void)setProxy:(long long)arg0;
- (void)setStart:(id)arg0;
- (void).cxx_destruct;
- (unsigned short)remotePort;
- (long long)wait;
- (id)start;
- (void)setRemotePort:(unsigned short)arg0;
- (void)setConnect:(long long)arg0;
- (BOOL)isCached;
- (void)setIsCached:(BOOL)arg0;
- (void)setTotal:(long long)arg0;
- (void)setSend:(long long)arg0;
- (void)setWait:(long long)arg0;
- (long long)receive;
- (void)setReceive:(long long)arg0;
- (long long)dns;
- (void)setDns:(long long)arg0;

@end
