//
//     Generated by private class-dump
//

@class NSDictionary, VEOneKeySceneStrategyConfig, VERecordRecoveryData, AVAsset, IESMMEffectStickerInfo, VERecordModel, IESMMStoryConfig, NSMutableArray, NSString, IESMMTimeMachine, IESMMImageMovieInfo, IESMMCanvasConfig, VEColorSpaceInfo, NSArray, NSMutableDictionary, VEReadWriteLock, IESMMMVModel, HTSEffectManager, VEAudioEncodeConfig, IESMMTranscoderParam, VEImageFetchAsset, IESVideoAddEdgeData, NSURL, VESegmentedComposerManager, IESMMMVEffectFilter;

@interface HTSVideoData : IESMMObject <NSCopying> {
    BOOL _useStitchHeader;
    BOOL _isMicMuted;
    BOOL _isBgmMuted;
    BOOL _isRetainOriginalSound;
    BOOL _isExportTapProcess;
    BOOL _notSupportCrossplat;
    BOOL _crossplatInput;
    BOOL _crossplatCompile;
    BOOL _crossplatMultiTrack;
    BOOL _useAVAssetReader;
    BOOL _compileHideSensitiveMetadata;
    BOOL _disableMetadataInfo;
    BOOL _isRecordFromCamera;
    BOOL _hasRecordAudioTrack;
    BOOL _isFastImport;
    BOOL _isFromDrafts;
    BOOL _enableLensHdr2Sdr;
    BOOL _useMVFps;
    BOOL _isPlaying;
    BOOL _useSystemVideoCompostion;
    BOOL _videoCompostionUseCustomClass;
    BOOL _isReencoded;
    BOOL _isInRemakeMode;
    BOOL _forceUseAttachSeconds;
    BOOL _isDetectMode;
    BOOL _ignoreAssetDuration;
    BOOL _ignoreAudioProcessing;
    BOOL _recoverFromBreakPoint;
    BOOL _disable10BitSDR;
    BOOL _enableAudioMixProtect;
    BOOL _enableSmallwindowPipLoopPlay;
    int _previewFrameRate;
    float _colorFilterIntensity;
    int _mvFps;
    int _composeFps;
    IESMMTranscoderParam *_transParam;
    VERecordModel *_recordModel;
    NSString *_identifier;
    VEAudioEncodeConfig *_audioEncodeConfig;
    VEImageFetchAsset *_imageAsset;
    NSMutableArray *_pcmDataPaths;
    AVAsset *_videoHeader;
    NSMutableArray *_videoAssets;
    NSMutableArray *_minorVideoAssets;
    NSMutableArray *_subTrackVideoAssets;
    NSMutableArray *_albumVideoAssets;
    NSMutableDictionary *_assetSegmentID;
    NSMutableDictionary *_assetAnimateInfos;
    NSMutableDictionary *_assetLayers;
    NSMutableDictionary *_videoDuration;
    NSMutableDictionary *_assetMattingInfos;
    NSMutableDictionary *_assetFaceDetects;
    NSMutableDictionary *_draftFileList;
    NSMutableDictionary *_urlDict;
    NSArray *_infoStickers;
    NSArray *_stickers;
    NSMutableDictionary *_videoTimeClipInfo;
    NSMutableDictionary *_videoVolumnTimeClipInfo;
    NSMutableDictionary *_effectInfo;
    HTSEffectManager *_effectOperationManager;
    double _effectOperationStartTime;
    unsigned long long _currentEffectType;
    NSString *_effectPathId;
    id /* block */ _effectFilterPathBlock;
    IESMMEffectStickerInfo *_HDREffectInfo;
    NSMutableDictionary *_videoTimeScaleInfo;
    NSMutableDictionary *_videoFillConfigDict;
    NSMutableDictionary *_videoAudioReservePitch;
    NSMutableDictionary *_videoCurves;
    double _recordRate;
    NSMutableArray *_audioAssets;
    NSMutableArray *_soundsAssets;
    NSMutableDictionary *_videoSoundFilterInfo;
    NSMutableArray *_videoSoundEntireFilters;
    NSMutableDictionary *_audioSoundFilterInfo;
    NSMutableArray *_effectAudioAssets;
    AVAsset *_endingWaterMarkAudio;
    NSString *_endingWaterMarkPicPath;
    double _endingWaterMarkPicDuration;
    NSMutableDictionary *_audioTimeClipInfo;
    NSMutableDictionary *_audioTimeScaleInfo;
    NSMutableDictionary *_audioStartTimeInfo;
    NSMutableArray *_extraMusicEffectInfo;
    NSMutableArray *_extraMusicEffectAsset;
    NSMutableDictionary *_photoAssetsInfo;
    NSMutableDictionary *_originalPhotoAssetsInfo;
    NSMutableDictionary *_photoAssetsImageInfo;
    NSMutableDictionary *_assetCropRectsInfo;
    NSMutableDictionary *_assetRotationsInfo;
    NSMutableDictionary *_assetTransformInfo;
    NSMutableDictionary *_assetMaskAlphaInfo;
    long long _photoMovieTransType;
    NSMutableDictionary *_canvasInfo;
    NSMutableDictionary *_canvasConfigsMap;
    NSMutableDictionary *_textureVerticesMap;
    IESMMCanvasConfig *_preferCanvasConfig;
    NSMutableDictionary *_canvasTimeRange;
    NSMutableDictionary *_colorVideoInfo;
    NSMutableDictionary *_colorVideoTimeRange;
    NSMutableDictionary *_featuresInfo;
    NSMutableDictionary *_hslFeatures;
    NSMutableArray *_globalFeaturesInfo;
    NSMutableArray *_globalHSLFeatures;
    NSMutableDictionary *_cameraPositionInfo;
    NSMutableDictionary *_videoSpeeds;
    NSMutableDictionary *_videoPtsMap;
    NSMutableDictionary *_videoStabMatrixMap;
    NSMutableDictionary *_stabSizeMap;
    double _photoMovieTransShowDuration;
    long long _followPostion;
    unsigned long long _notRemuxErrorCode;
    double _photoMoiveTransDuraion;
    double _photoMovieDuration;
    NSMutableArray *_photoMovieAssets;
    unsigned long long _audioRepeatCount;
    IESMMImageMovieInfo *_imageMovieInfo;
    NSMutableDictionary *_volumnInfo;
    IESMMTimeMachine *_timeMachine;
    NSMutableDictionary *_extraInfo;
    NSMutableDictionary *_accelerateInfo;
    NSMutableDictionary *_metadataInfo;
    NSDictionary *_metaRecordInfo;
    NSString *_customMetadataInfo;
    NSString *_artworkMetadataJsonString;
    double _freezeFrameStartTime;
    double _freezeFrameDuration;
    NSMutableDictionary *_freezeFrameInfo;
    long long _contentSource;
    NSMutableDictionary *_lastMetadataInfo;
    double _currentTotalDuration;
    double _currentTotalBGAudioDuration;
    double _totalDurationWithTimeMachine;
    double _brightnessStrength;
    NSString *_musicID;
    NSString *_antiCheckingInfo;
    IESMMStoryConfig *_storyConfig;
    NSString *_reportVid;
    NSString *_extraMetaInfo;
    NSString *_currentFilterPath;
    NSString *_lensHdrPath;
    VEOneKeySceneStrategyConfig *_lensOneKeyHDRConfig;
    NSString *_colorFilterPath;
    NSMutableArray *_composerInfo;
    VESegmentedComposerManager *_globalSegmentedComposerInfo;
    NSMutableDictionary *_segmentedComposerInfo;
    NSDictionary *_dataInfo;
    NSMutableDictionary *_transFileDict;
    double _maxTrackDuration;
    double _crossplatVideoDuration;
    long long _outputDirection;
    unsigned long long _outputRotationMode;
    NSMutableArray *_effectRanges;
    NSMutableDictionary *_movieAnimationType;
    NSMutableDictionary *_movieAnimationTransform;
    NSMutableDictionary *_movieInputFillType;
    IESMMMVEffectFilter *_mvEffectFilter;
    IESMMMVModel *_mvModel;
    NSMutableDictionary *_mvResourceID;
    NSMutableArray *_mvResourceText;
    NSMutableDictionary *_mvResourceAVAssetDic;
    double _HDREffectIntensity;
    IESVideoAddEdgeData *_infoStickerAddEdgeData;
    unsigned long long _pixelFormat;
    AVAsset *_lvCompletionAsset;
    AVAsset *_backgroundAsset;
    AVAsset *_cameraBgAsset;
    long long _effectMaxMemCache;
    NSMutableDictionary *_bingoVideoKeys;
    long long _sourceType;
    VERecordRecoveryData *_recordData;
    NSMutableArray *_customMetadataArray;
    unsigned long long _curRemakeIndex;
    NSMutableDictionary *_remakeVideoAssetsDict;
    NSMutableArray *_storeVideoAssets;
    NSMutableArray *_storeLastVideoAssets;
    NSMutableArray *_storeAudioAssets;
    NSMutableDictionary *_storeAudioTimeClipInfo;
    NSMutableArray *_bgAudioAssets;
    long long _pinMode;
    NSString *_draftRootDirectory;
    VEColorSpaceInfo *_colorSpaceInfo;
    NSMutableDictionary *_colorSpaceInfoCache;
    long long _colorSpaceCalcType;
    NSURL *_compiledPartialFile;
    VEReadWriteLock *_rwlock;
    NSString *_videoTimeLineHash;
    struct CGSize { double width; double height; } _normalizeSize;
    struct CGSize { double width; double height; } _infoStickerPreviewSize;
    struct CGSize { double width; double height; } _canvasSize;
    struct CGSize { double width; double height; } _canvasAndMVSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _totalVideoDurationForMusically;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _importTransform;
    struct IESIndensityParam_t { float indensity; float smoothIndensity; float brightIndensity; float sharpIndensity; float eyeIndensity; float cheekIndensity; float fareyeIndensity; float zoomeyeIndensity; float rotateeyeIndensity; float zoomnoseIndensity; float movnoseIndensity; float movmouthIndensity; float zoommouthIndensity; float movchinIndensity; float zoomforeheadIndensity; float zoomfaceIndensity; float cutfaceIndensity; float smallfaceIndensity; float zoomjawboneIndensity; float zoomcheekboneIndensity; float draglipsIndensity; float cornereyeIndensity; float lipenhanceIndensity; float pointychinIndensity; float facesmoothIndensity; float skinDarkIntensity; float nightGamma; float nightContrastK; float nightContrastB; float lipIndensity; float blusherIndensity; float decreeIndensity; float pouchIndensity; } _HDRIndensity;
}

@property (copy, nonatomic) NSString *cacheDirectoryPath;
@property (nonatomic) long long studio_videoClipResolveType;
@property (nonatomic) long long effect_timeMachineType;
@property (retain, nonatomic) AVAsset *effect_reverseAsset;
@property (readonly, copy, nonatomic) NSArray *effect_timeRange;
@property (copy, nonatomic) NSArray *effect_operationTimeRange;
@property (nonatomic) double effect_timeMachineBeginTime;
@property (nonatomic) double effect_newTimeMachineDuration;
@property (readonly, nonatomic) double effect_videoDuration;
@property (readonly, copy, nonatomic) NSDictionary *effect_dictionary;
@property (retain, nonatomic) VEReadWriteLock *rwlock;
@property (nonatomic) BOOL isMicMuted;
@property (nonatomic) BOOL isBgmMuted;
@property (nonatomic) BOOL isExportTapProcess;
@property (nonatomic) BOOL isRetainOriginalSound;
@property (retain, nonatomic) NSMutableDictionary *effectInfo;
@property (retain, nonatomic) NSString *videoTimeLineHash;
@property (retain, nonatomic) VERecordRecoveryData *recordData;
@property (retain, nonatomic) VERecordModel *recordModel;
@property (copy, nonatomic) NSString *identifier;
@property (retain, nonatomic) IESMMTranscoderParam *transParam;
@property (retain, nonatomic) VEAudioEncodeConfig *audioEncodeConfig;
@property (retain, nonatomic) VEImageFetchAsset *imageAsset;
@property (nonatomic) BOOL useStitchHeader;
@property (retain, nonatomic) NSMutableArray *pcmDataPaths;
@property (retain, nonatomic) AVAsset *videoHeader;
@property (retain, nonatomic) NSMutableArray *videoAssets;
@property (retain, nonatomic) NSMutableArray *minorVideoAssets;
@property (retain, nonatomic) NSMutableArray *subTrackVideoAssets;
@property (retain, nonatomic) NSMutableArray *albumVideoAssets;
@property (retain, nonatomic) NSMutableDictionary *assetSegmentID;
@property (retain, nonatomic) NSMutableDictionary *assetAnimateInfos;
@property (retain, nonatomic) NSMutableDictionary *assetLayers;
@property (retain, nonatomic) NSMutableDictionary *videoDuration;
@property (retain, nonatomic) NSMutableDictionary *assetMattingInfos;
@property (retain, nonatomic) NSMutableDictionary *assetFaceDetects;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } totalVideoDurationForMusically;
@property (retain) NSMutableDictionary *draftFileList;
@property (retain) NSMutableDictionary *urlDict;
@property (copy, nonatomic) NSArray *infoStickers;
@property (nonatomic) struct CGSize { double width; double height; } normalizeSize;
@property (nonatomic) struct CGSize { double width; double height; } infoStickerPreviewSize;
@property (retain, nonatomic) NSArray *stickers;
@property (retain, nonatomic) NSMutableDictionary *videoTimeClipInfo;
@property (retain, nonatomic) NSMutableDictionary *videoVolumnTimeClipInfo;
@property (retain, nonatomic) HTSEffectManager *effectOperationManager;
@property (nonatomic) double effectOperationStartTime;
@property (nonatomic) unsigned long long currentEffectType;
@property (copy, nonatomic) NSString *effectPathId;
@property (copy, nonatomic) id /* block */ effectFilterPathBlock;
@property (retain, nonatomic) IESMMEffectStickerInfo *HDREffectInfo;
@property (nonatomic) struct IESIndensityParam_t { float indensity; float smoothIndensity; float brightIndensity; float sharpIndensity; float eyeIndensity; float cheekIndensity; float fareyeIndensity; float zoomeyeIndensity; float rotateeyeIndensity; float zoomnoseIndensity; float movnoseIndensity; float movmouthIndensity; float zoommouthIndensity; float movchinIndensity; float zoomforeheadIndensity; float zoomfaceIndensity; float cutfaceIndensity; float smallfaceIndensity; float zoomjawboneIndensity; float zoomcheekboneIndensity; float draglipsIndensity; float cornereyeIndensity; float lipenhanceIndensity; float pointychinIndensity; float facesmoothIndensity; float skinDarkIntensity; float nightGamma; float nightContrastK; float nightContrastB; float lipIndensity; float blusherIndensity; float decreeIndensity; float pouchIndensity; } HDRIndensity;
@property (retain, nonatomic) NSMutableDictionary *videoTimeScaleInfo;
@property (retain, nonatomic) NSMutableDictionary *videoFillConfigDict;
@property (retain, nonatomic) NSMutableDictionary *videoAudioReservePitch;
@property (retain, nonatomic) NSMutableDictionary *videoCurves;
@property (nonatomic) int previewFrameRate;
@property (nonatomic) double recordRate;
@property (retain, nonatomic) NSMutableArray *audioAssets;
@property (retain, nonatomic) NSMutableArray *soundsAssets;
@property (readonly, nonatomic) NSMutableDictionary *videoSoundFilterInfo;
@property (retain, nonatomic) NSMutableArray *videoSoundEntireFilters;
@property (readonly, nonatomic) NSMutableDictionary *audioSoundFilterInfo;
@property (retain, nonatomic) NSMutableArray *effectAudioAssets;
@property (retain, nonatomic) AVAsset *endingWaterMarkAudio;
@property (copy, nonatomic) NSString *endingWaterMarkPicPath;
@property (nonatomic) double endingWaterMarkPicDuration;
@property (retain) NSMutableDictionary *audioTimeClipInfo;
@property (retain, nonatomic) NSMutableDictionary *audioTimeScaleInfo;
@property (retain, nonatomic) NSMutableDictionary *audioStartTimeInfo;
@property (retain, nonatomic) NSMutableArray *extraMusicEffectInfo;
@property (retain, nonatomic) NSMutableArray *extraMusicEffectAsset;
@property (retain, nonatomic) NSMutableDictionary *photoAssetsInfo;
@property (retain, nonatomic) NSMutableDictionary *originalPhotoAssetsInfo;
@property (retain, nonatomic) NSMutableDictionary *photoAssetsImageInfo;
@property (retain, nonatomic) NSMutableDictionary *assetCropRectsInfo;
@property (retain, nonatomic) NSMutableDictionary *assetRotationsInfo;
@property (retain, nonatomic) NSMutableDictionary *assetTransformInfo;
@property (retain, nonatomic) NSMutableDictionary *assetMaskAlphaInfo;
@property (nonatomic) long long photoMovieTransType;
@property (retain, nonatomic) NSMutableDictionary *canvasInfo;
@property (retain, nonatomic) NSMutableDictionary *canvasConfigsMap;
@property (retain, nonatomic) NSMutableDictionary *textureVerticesMap;
@property (retain, nonatomic) IESMMCanvasConfig *preferCanvasConfig;
@property (nonatomic) struct CGSize { double width; double height; } canvasSize;
@property (nonatomic) struct CGSize { double width; double height; } canvasAndMVSize;
@property (retain, nonatomic) NSMutableDictionary *canvasTimeRange;
@property (retain, nonatomic) NSMutableDictionary *colorVideoInfo;
@property (retain, nonatomic) NSMutableDictionary *colorVideoTimeRange;
@property (retain, nonatomic) NSMutableDictionary *featuresInfo;
@property (retain, nonatomic) NSMutableDictionary *hslFeatures;
@property (retain, nonatomic) NSMutableArray *globalFeaturesInfo;
@property (retain, nonatomic) NSMutableArray *globalHSLFeatures;
@property (retain, nonatomic) NSMutableDictionary *cameraPositionInfo;
@property (retain, nonatomic) NSMutableDictionary *videoSpeeds;
@property (retain, nonatomic) NSMutableDictionary *videoPtsMap;
@property (retain, nonatomic) NSMutableDictionary *videoStabMatrixMap;
@property (retain, nonatomic) NSMutableDictionary *stabSizeMap;
@property (nonatomic) double photoMovieTransShowDuration;
@property (nonatomic) long long followPostion;
@property (nonatomic) unsigned long long notRemuxErrorCode;
@property (nonatomic) double photoMoiveTransDuraion;
@property (nonatomic) double photoMovieDuration;
@property (nonatomic) BOOL notSupportCrossplat;
@property (nonatomic) BOOL crossplatInput;
@property (nonatomic) BOOL crossplatCompile;
@property (nonatomic) BOOL crossplatMultiTrack;
@property (nonatomic) BOOL useAVAssetReader;
@property (nonatomic) BOOL compileHideSensitiveMetadata;
@property (retain, nonatomic) NSMutableArray *photoMovieAssets;
@property (nonatomic) unsigned long long audioRepeatCount;
@property (retain, nonatomic) IESMMImageMovieInfo *imageMovieInfo;
@property (retain, nonatomic) NSMutableDictionary *volumnInfo;
@property (retain, nonatomic) IESMMTimeMachine *timeMachine;
@property (retain, nonatomic) NSMutableDictionary *extraInfo;
@property (retain, nonatomic) NSMutableDictionary *accelerateInfo;
@property (retain, nonatomic) NSMutableDictionary *metadataInfo;
@property (copy, nonatomic) NSDictionary *metaRecordInfo;
@property (nonatomic) BOOL disableMetadataInfo;
@property (retain, nonatomic) NSString *customMetadataInfo;
@property (copy, nonatomic) NSString *artworkMetadataJsonString;
@property (nonatomic) double freezeFrameStartTime;
@property (nonatomic) double freezeFrameDuration;
@property (retain, nonatomic) NSMutableDictionary *freezeFrameInfo;
@property (nonatomic) BOOL isRecordFromCamera;
@property (nonatomic) long long contentSource;
@property (retain, nonatomic) NSMutableDictionary *lastMetadataInfo;
@property (nonatomic) double currentTotalDuration;
@property (nonatomic) double currentTotalBGAudioDuration;
@property (nonatomic) double totalDurationWithTimeMachine;
@property (nonatomic) double brightnessStrength;
@property (retain, nonatomic) NSString *musicID;
@property (retain, nonatomic) NSString *antiCheckingInfo;
@property (nonatomic) BOOL hasRecordAudioTrack;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } importTransform;
@property (nonatomic) BOOL isFastImport;
@property (retain, nonatomic) IESMMStoryConfig *storyConfig;
@property (retain, nonatomic) NSString *reportVid;
@property (retain, nonatomic) NSString *extraMetaInfo;
@property (nonatomic) BOOL isFromDrafts;
@property (retain, nonatomic) NSString *currentFilterPath;
@property (copy, nonatomic) NSString *lensHdrPath;
@property (copy, nonatomic) VEOneKeySceneStrategyConfig *lensOneKeyHDRConfig;
@property (nonatomic) BOOL enableLensHdr2Sdr;
@property (copy, nonatomic) NSString *colorFilterPath;
@property (nonatomic) float colorFilterIntensity;
@property (retain, nonatomic) NSMutableArray *composerInfo;
@property (retain, nonatomic) VESegmentedComposerManager *globalSegmentedComposerInfo;
@property (retain, nonatomic) NSMutableDictionary *segmentedComposerInfo;
@property (retain, nonatomic) NSDictionary *dataInfo;
@property (retain, nonatomic) NSMutableDictionary *transFileDict;
@property (nonatomic) double maxTrackDuration;
@property (nonatomic) double crossplatVideoDuration;
@property (nonatomic) long long outputDirection;
@property (nonatomic) unsigned long long outputRotationMode;
@property (retain, nonatomic) NSMutableArray *effectRanges;
@property (retain, nonatomic) NSMutableDictionary *movieAnimationType;
@property (retain, nonatomic) NSMutableDictionary *movieAnimationTransform;
@property (retain, nonatomic) NSMutableDictionary *movieInputFillType;
@property (weak, nonatomic) IESMMMVEffectFilter *mvEffectFilter;
@property (retain, nonatomic) IESMMMVModel *mvModel;
@property (nonatomic) BOOL useMVFps;
@property (nonatomic) int mvFps;
@property (retain, nonatomic) NSMutableDictionary *mvResourceID;
@property (retain, nonatomic) NSMutableArray *mvResourceText;
@property (retain, nonatomic) NSMutableDictionary *mvResourceAVAssetDic;
@property (nonatomic) int composeFps;
@property (nonatomic) double HDREffectIntensity;
@property (retain, nonatomic) IESVideoAddEdgeData *infoStickerAddEdgeData;
@property (nonatomic) unsigned long long pixelFormat;
@property (retain, nonatomic) AVAsset *lvCompletionAsset;
@property (retain, nonatomic) AVAsset *backgroundAsset;
@property (retain, nonatomic) AVAsset *cameraBgAsset;
@property (nonatomic) BOOL isPlaying;
@property (nonatomic) long long effectMaxMemCache;
@property (nonatomic) BOOL useSystemVideoCompostion;
@property (retain) NSMutableDictionary *bingoVideoKeys;
@property (nonatomic) BOOL videoCompostionUseCustomClass;
@property (nonatomic) BOOL isReencoded;
@property (nonatomic) long long sourceType;
@property (retain, nonatomic) NSMutableArray *customMetadataArray;
@property (nonatomic) BOOL isInRemakeMode;
@property (nonatomic) unsigned long long curRemakeIndex;
@property (retain, nonatomic) NSMutableDictionary *remakeVideoAssetsDict;
@property (retain, nonatomic) NSMutableArray *storeVideoAssets;
@property (retain, nonatomic) NSMutableArray *storeLastVideoAssets;
@property (retain, nonatomic) NSMutableArray *storeAudioAssets;
@property (retain, nonatomic) NSMutableDictionary *storeAudioTimeClipInfo;
@property (nonatomic) BOOL forceUseAttachSeconds;
@property (retain, nonatomic) NSMutableArray *bgAudioAssets;
@property (nonatomic) long long pinMode;
@property (nonatomic) BOOL isDetectMode;
@property (copy, nonatomic) NSString *draftRootDirectory;
@property (nonatomic) BOOL ignoreAssetDuration;
@property (retain, nonatomic) VEColorSpaceInfo *colorSpaceInfo;
@property (retain, nonatomic) NSMutableDictionary *colorSpaceInfoCache;
@property (nonatomic) long long colorSpaceCalcType;
@property (nonatomic) BOOL ignoreAudioProcessing;
@property (nonatomic) BOOL recoverFromBreakPoint;
@property (copy, nonatomic) NSURL *compiledPartialFile;
@property (nonatomic) BOOL disable10BitSDR;
@property (nonatomic) BOOL enableAudioMixProtect;
@property (nonatomic) BOOL enableSmallwindowPipLoopPlay;

+ (void)clearAllCache;
+ (id)videoData;
+ (id)readDictionaryFromPath:(id)arg0 error:(id *)arg1;
+ (void)loadVideoDataFromDictionary:(id)arg0 fileFolder:(id)arg1 completion:(id /* block */)arg2;
+ (id)defaultCacheDirPath;
+ (BOOL)isCacheDirPathSetted;
+ (void)p_videoDataApplyReverse:(id)arg0 useForVideo:(BOOL)arg1;
+ (void)p_recoverVideoDataCanvasInfo:(id)arg0 asset:(id)arg1 toAssets:(id)arg2;
+ (id)p_videoDataApplyTimeMachine:(id)arg0 useForVideo:(BOOL)arg1;
+ (void)saveAVAsset:(id)arg0 toFilePath:(id)arg1 completion:(id /* block */)arg2;
+ (id)newImageFilePathIfNeedWithURL:(id)arg0 dirPath:(id)arg1;
+ (id)updatePathAfterReboot:(id)arg0 newRootPath:(id)arg1;
+ (BOOL)checkIsBlankUrlValue:(id)arg0;
+ (id)queryAssetFromPath:(id)arg0 rootPath:(id)arg1;
+ (id)p_updateOldPath:(id)arg0 oldRootPath:(id)arg1 newRootPath:(id)arg2;
+ (id)p_updatePathForDictionary:(id)arg0 oldRootPath:(id)arg1 newRootPath:(id)arg2;
+ (id)p_updatePathForArray:(id)arg0 oldRootPath:(id)arg1 newRootPath:(id)arg2;
+ (void)deleteVideoDataFromDictionary:(id)arg0;
+ (id)restoreVideoAssetsFromUrls:(id)arg0 fileFolder:(id)arg1;
+ (id)updatePathForVideoDataDictionary:(id)arg0 oldDirectoryPath:(id)arg1 newDirectoryPath:(id)arg2;
+ (id)getFilePathWithVideoData:(id)arg0 videoProcess:(id)arg1 transConfig:(id)arg2;
+ (void)updateRecordNum;
+ (long long)getRecordNum;
+ (id)videoDataWithCacheDirPath:(id)arg0;
+ (BOOL)remakePlan;
+ (unsigned long long)rotationModeFromDegress:(float)arg0;
+ (long long)getScaleModeWithFillMode:(long long)arg0;
+ (void)loadVideoDataFromFile:(id)arg0 completion:(id /* block */)arg1;
+ (BOOL)saveDictionaryToPath:(id)arg0 dict:(id)arg1 error:(id *)arg2;
+ (void)_aweLazyRegisterLoad_AWEAIVideoClipInfo;
+ (id)saveFileQueue;
+ (id)getCacheDirPath;
+ (id)stringFromDictionary:(id)arg0;
+ (id)cacheDirPath;
+ (void)setCacheDirPath:(id)arg0;

- (void)setColorFilterIntensity:(float)arg0;
- (void)setExtraInfo:(id)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (void)setSticker:(long long)arg0 startTime:(double)arg1 duration:(double)arg2;
- (long long)addInfoSticker:(id)arg0 withEffectInfo:(id)arg1 userInfo:(id)arg2;
- (void)setStickerAngle:(long long)arg0 angle:(double)arg1;
- (void)setStickerScale:(long long)arg0 scale:(double)arg1;
- (void)setSticker:(long long)arg0 flipX:(BOOL)arg1 flipY:(BOOL)arg2;
- (void)setSticker:(long long)arg0 alpha:(double)arg1;
- (void)setTextStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (long long)addTemplateWithResourcePath:(id)arg0 dependResourceParams:(id)arg1;
- (void)setStickerAnim:(long long)arg0 animType:(int)arg1 animPath:(id)arg2 duration:(double)arg3;
- (id)infoStickers;
- (id)reloadAsset:(id)arg0;
- (long long)addRichTextStickerWithJson:(id)arg0 userInfo:(id)arg1;
- (long long)addEmojiSticker:(id)arg0;
- (id)getStickerById:(long long)arg0;
- (void)setSticker:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2;
- (void)setStickerRelativeScale:(long long)arg0 scale:(double)arg1;
- (void)setInfoStickers:(id)arg0;
- (long long)addTextSticker;
- (unsigned long long)rotationMode:(unsigned long long)arg0 AddRotation:(float)arg1;
- (unsigned long long)degressFromVideoAsset:(id)arg0 degress:(float)arg1;
- (void)setSticker:(long long)arg0 animId:(int)arg1 inTime:(double)arg2 stillTime:(double)arg3 outTime:(double)arg4;
- (id)musicID;
- (BOOL)isFastImport;
- (unsigned long long)outputRotationMode;
- (void)setOutputRotationMode:(unsigned long long)arg0;
- (long long)outputDirection;
- (void)setOutputDirection:(long long)arg0;
- (void)clearVideodata;
- (void)remakeStoreVideoAssets;
- (void)remakeResumeVideoAssets;
- (void)remakeStart:(unsigned long long)arg0;
- (void)remakeStop:(BOOL)arg0;
- (void)remakeResumeLastVideoAssets;
- (void)remakeClearAll;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })remakeTotalVideoDuration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })remakeVideoDuration;
- (void)remakeRefresh;
- (void)setDataInfo:(id)arg0;
- (id)urlDict;
- (void)setUrlDict:(id)arg0;
- (double)maxTrackDuration;
- (void)setMusicID:(id)arg0;
- (void)setEffectInfo:(id)arg0;
- (id)effectInfo;
- (id)accelerateInfo;
- (void)setAccelerateInfo:(id)arg0;
- (BOOL)isRecordFromCamera;
- (void)setIsRecordFromCamera:(BOOL)arg0;
- (id)imageMovieInfo;
- (void)setImageMovieInfo:(id)arg0;
- (double)totalVideoDuration;
- (id)transParam;
- (void)setTransParam:(id)arg0;
- (id)extraMetaInfo;
- (double)totalVideoDurationAddTimeMachine;
- (void)effect_cleanOperation;
- (void)effect_reCalculateEffectiveTimeRange;
- (double)effect_currentTimeMachineDurationWithType:(long long)arg0;
- (void)setMetaData:(id)arg0 recordInfo:(long long)arg1 MD5:(id)arg2 needStore:(BOOL)arg3;
- (id)infoStickerAddEdgeData;
- (void)setInfoStickerAddEdgeData:(id)arg0;
- (double)totalBGAudioDuration;
- (void)setIsFastImport:(BOOL)arg0;
- (BOOL)isMicMuted;
- (void)setIsMicMuted:(BOOL)arg0;
- (id)metaRecordInfo;
- (void)setMetaRecordInfo:(id)arg0;
- (id)dataInfo;
- (id)preferCanvasConfig;
- (void)setPreferCanvasConfig:(id)arg0;
- (struct CGSize { double x0; double x1; })normalizeSize;
- (void)setNormalizeSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)notSupportCrossplat;
- (void)setNotSupportCrossplat:(BOOL)arg0;
- (BOOL)crossplatCompile;
- (void)setCrossplatCompile:(BOOL)arg0;
- (BOOL)crossplatInput;
- (void)setCrossplatInput:(BOOL)arg0;
- (BOOL)crossplatMultiTrack;
- (void)setCrossplatMultiTrack:(BOOL)arg0;
- (BOOL)disableMetadataInfo;
- (void)setDisableMetadataInfo:(BOOL)arg0;
- (void)setExtraMetaInfo:(id)arg0;
- (BOOL)isDetectMode;
- (void)setIsDetectMode:(BOOL)arg0;
- (id)effect_timeRange;
- (id)effect_operationTimeRange;
- (id)effect_reverseAsset;
- (void)setEffect_reverseAsset:(id)arg0;
- (id)effect_dictionary;
- (double)effect_videoDuration;
- (id)videoHeader;
- (void)setVideoHeader:(id)arg0;
- (id)endingWaterMarkAudio;
- (void)setEndingWaterMarkAudio:(id)arg0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })importTransform;
- (void)setImportTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (id)volumnInfo;
- (id)bgAudioAssets;
- (id)videoSoundFilterInfo;
- (id)audioSoundFilterInfo;
- (void)addVideoWithAsset:(id)arg0;
- (id)canvasConfigsMap;
- (id)videoAssets;
- (id)subTrackVideoAssets;
- (id)photoAssetsInfo;
- (id)videoTimeClipInfo;
- (id)effectPathId;
- (id /* block */)effectFilterPathBlock;
- (void)removeVideoAsset:(id)arg0;
- (void)removeSubTrack:(id)arg0;
- (id)assetTransformInfo;
- (id)audioTimeScaleInfo;
- (id)videoCurves;
- (id)canvasInfo;
- (id)assetAnimateInfos;
- (void)addSubTrackWithAsset:(id)arg0;
- (void)setIgnoreAssetDuration:(BOOL)arg0;
- (id)assetLayers;
- (void)setVideoAssets:(id)arg0;
- (id)canvasSourceForVideoAsset:(id)arg0;
- (id)videoAudioReservePitch;
- (id)videoTimeScaleInfo;
- (id)getInfosticker:(long long)arg0;
- (id)movieAnimationType;
- (void)setFollowPostion:(long long)arg0;
- (void)setMaxTrackDuration:(double)arg0;
- (void)clearReverseAsset;
- (void)muteMicrophone:(BOOL)arg0;
- (id)effectOperationManager;
- (id)timeMachine;
- (id)movieInputFillType;
- (id)bingoVideoKeys;
- (id)assetRotationsInfo;
- (id)photoAssetsImageInfo;
- (id)colorSpaceInfo;
- (id)photoMovieAssets;
- (id)audioTimeClipInfo;
- (void)setPhotoAssetsInfo:(id)arg0;
- (double)totalDurationWithTimeMachine;
- (void)setTimeClipRange:(id)arg0 toVideoAtIndex:(unsigned long long)arg1;
- (void)setTimeClipRange:(id)arg0 toAudioAtIndex:(unsigned long long)arg1;
- (void)updateTimeClipRange:(id)arg0 forAudioIndex:(unsigned long long)arg1;
- (void)replaceWithAsset:(id)arg0 forAudioIndex:(unsigned long long)arg1;
- (void)removeAudioIndex:(unsigned long long)arg0;
- (void)setSyncTimeClipRange:(id)arg0 toAudioAtIndex:(unsigned long long)arg1;
- (void)saveAVAssetIfNeed:(id)arg0 withURLDict:(id)arg1 filePathProvider:(id /* block */)arg2 customCheckBlock:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)updateDataInfo:(id)arg0;
- (void)saveVideoDataToPath:(id)arg0 withExistUrlDict:(id)arg1 completion:(id /* block */)arg2;
- (double)getEffectTotalDuration;
- (void)setStickerAnim:(long long)arg0 animType:(int)arg1 animPath:(id)arg2 duration:(double)arg3 key:(id)arg4 val:(id)arg5;
- (long long)addBrushStickerWithParams:(id)arg0;
- (id)getVideoDataMD5;
- (id)getAudioDataMD5;
- (id)getReverseVideoDataMD5;
- (BOOL)isAVCCKeyDiff;
- (BOOL)isAllH264Video;
- (BOOL)isAllByteVC1Video;
- (void)_buildFilterTimeLine:(id)arg0 filterZoom:(id)arg1 videoAssets:(id)arg2 subTrackVideoAssets:(id)arg3 WithEnableMultiTrack:(BOOL)arg4;
- (long long)_setMediatype:(BOOL)arg0;
- (void)_createMediaAssets:(id)arg0 videoData:(id)arg1 videoAssets:(id)arg2 subTrackVideoAssets:(id)arg3 withEnableMultiTrack:(BOOL)arg4 completeBlock:(id /* block */)arg5;
- (id)buildVideoAssetsWithEnableMultiTrack:(BOOL)arg0;
- (id)buildSubTrackVideoAssetsWithEnableMultiTrack:(BOOL)arg0;
- (void)initRecordModel;
- (int)insertTrack:(struct shared_ptr<vesdk::pub::Track> { struct Track *x0; struct __shared_weak_count *x1; })arg0 layer:(int)arg1;
- (int)insertClip:(struct shared_ptr<vesdk::pub::Clip> { struct Clip *x0; struct __shared_weak_count *x1; })arg0 parentID:(const void *)arg1 seqIn:(struct VETimeCode { long long x0; })arg2 seqOut:(struct VETimeCode { long long x0; })arg3;
- (int)updateTrack:(struct shared_ptr<vesdk::pub::Track> { struct Track *x0; struct __shared_weak_count *x1; })arg0 trackId:(const void *)arg1;
- (int)updateClip:(struct shared_ptr<vesdk::pub::Clip> { struct Clip *x0; struct __shared_weak_count *x1; })arg0 clipId:(const void *)arg1;
- (int)updateClip:(const void *)arg0 seqIn:(struct VETimeCode { long long x0; })arg1 seqOut:(struct VETimeCode { long long x0; })arg2;
- (int)removeClip:(const void *)arg0;
- (int)setTrack:(const void *)arg0 layer:(int)arg1;
- (int)commitUpdate;
- (int)setKeyFrame:(const void *)arg0 clipId:(const void *)arg1;
- (int)deleteKeyFrame:(const void *)arg0 clipId:(const void *)arg1;
- (int)resetKeyFrame:(const void *)arg0 clipId:(const void *)arg1;
- (void)addVideoAssetDictForAsset:(id)arg0 fromAsset:(id)arg1 andVideoData:(id)arg2;
- (void)replaceVideoAssetsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 withAssets:(id)arg1 fromVideoData:(id)arg2;
- (void)addVideoAssetDict:(id)arg0 fromVideoData:(id)arg1;
- (void)addAudioAssetDictForAsset:(id)arg0 fromAsset:(id)arg1 andVideoData:(id)arg2;
- (void)replaceVideoAssetAtIndex:(long long)arg0 withAsset:(id)arg1;
- (void)replaceVideoAssetAtIndex:(long long)arg0 withAsset:(id)arg1 fromVideoData:(id)arg2;
- (void)moveVideoAssetFromIndex:(long long)arg0 toIndex:(long long)arg1;
- (void)addAudioAssetDict:(id)arg0 fromVideoData:(id)arg1;
- (void)innerDealloc;
- (id)storyConfig;
- (BOOL)parseFlip;
- (BOOL)forceEncodeByFastImport:(id)arg0;
- (BOOL)forceEncodeByRecord:(id)arg0;
- (unsigned long long)notRemuxErrorCode;
- (void)setNotRemuxErrorCode:(unsigned long long)arg0;
- (id)artworkMetadataJsonString;
- (BOOL)ignoreAssetDuration;
- (id)videoVolumnTimeClipInfo;
- (id)clipRangeForAVAsset:(id)arg0;
- (id)audioStartTimeInfo;
- (BOOL)checkVideoAssets:(id *)arg0;
- (BOOL)containNetworkResources;
- (id)metadataInfo;
- (id)canvasTimeRange;
- (id)colorVideoInfo;
- (id)colorVideoTimeRange;
- (BOOL)isVaildTimeMachineReverse;
- (void)setMetaData:(id)arg0 recordInfo:(long long)arg1 MD5:(id)arg2 importPath:(id)arg3 needStore:(BOOL)arg4;
- (void)fillBasicMetadataInfo:(id)arg0 asset:(id)arg1 recordInfo:(long long)arg2 MD5:(id)arg3 importPath:(id)arg4;
- (void)fillMetadataInfo:(id)arg0 fromLoadedArray:(id)arg1;
- (void)setLastMetadataInfo:(id)arg0;
- (id)remakeVideoAssetsDict;
- (id)storeVideoAssets;
- (id)storeLastVideoAssets;
- (id)colorSpaceInfoCache;
- (id)pcmDataPaths;
- (void)removeVideoAssetDict:(id)arg0;
- (BOOL)hasRecordAudioTrack;
- (void)setCurrentTotalDuration:(double)arg0;
- (id)minorVideoAssets;
- (id)effectAudioAssets;
- (void)setIsBgmMuted:(BOOL)arg0;
- (void)setIsExportTapProcess:(BOOL)arg0;
- (void)setIsRetainOriginalSound:(BOOL)arg0;
- (void)p_copyInfoFromVideoData:(id)arg0;
- (id)transParamNoLock;
- (id)audioEncodeConfig;
- (void)setAudioEncodeConfig:(id)arg0;
- (double)brightnessStrength;
- (void)setBrightnessStrength:(double)arg0;
- (void)setPcmDataPaths:(id)arg0;
- (void)setMinorVideoAssets:(id)arg0;
- (id)albumVideoAssets;
- (void)setAlbumVideoAssets:(id)arg0;
- (void)setRemakeVideoAssetsDict:(id)arg0;
- (void)setStoreVideoAssets:(id)arg0;
- (void)setStoreLastVideoAssets:(id)arg0;
- (void)setVideoVolumnTimeClipInfo:(id)arg0;
- (id)videoFillConfigDict;
- (void)setVideoFillConfigDict:(id)arg0;
- (void)setVideoAudioReservePitch:(id)arg0;
- (BOOL)isBgmMuted;
- (id)soundsAssets;
- (void)setSoundsAssets:(id)arg0;
- (void)setEffectAudioAssets:(id)arg0;
- (void)setOriginalPhotoAssetsInfo:(id)arg0;
- (void)setPhotoAssetsImageInfo:(id)arg0;
- (void)setAssetCropRectsInfo:(id)arg0;
- (void)setAssetRotationsInfo:(id)arg0;
- (long long)photoMovieTransType;
- (void)setPhotoMovieTransType:(long long)arg0;
- (void)setAssetMaskAlphaInfo:(id)arg0;
- (double)photoMovieTransShowDuration;
- (void)setPhotoMovieTransShowDuration:(double)arg0;
- (void)setMetadataInfo:(id)arg0;
- (id)draftFileList;
- (void)setDraftFileList:(id)arg0;
- (void)setEffectPathId:(id)arg0;
- (double)effectOperationStartTime;
- (void)setEffectOperationStartTime:(double)arg0;
- (unsigned long long)currentEffectType;
- (void)setCurrentEffectType:(unsigned long long)arg0;
- (double)currentTotalDuration;
- (id)antiCheckingInfo;
- (void)setAntiCheckingInfo:(id)arg0;
- (void)setArtworkMetadataJsonString:(id)arg0;
- (void)setHasRecordAudioTrack:(BOOL)arg0;
- (id)endingWaterMarkPicPath;
- (void)setEndingWaterMarkPicPath:(id)arg0;
- (double)endingWaterMarkPicDuration;
- (void)setEndingWaterMarkPicDuration:(double)arg0;
- (struct CGSize { double x0; double x1; })infoStickerPreviewSize;
- (void)setInfoStickerPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)useStitchHeader;
- (void)setUseStitchHeader:(BOOL)arg0;
- (id)effectRanges;
- (void)setEffectRanges:(id)arg0;
- (void)setMovieAnimationType:(id)arg0;
- (void)setMovieAnimationTransform:(id)arg0;
- (id)assetFaceDetects;
- (void)setAssetFaceDetects:(id)arg0;
- (void)setPhotoMovieDuration:(double)arg0;
- (void)setPhotoMoiveTransDuraion:(double)arg0;
- (void)setMovieInputFillType:(id)arg0;
- (void)setStoryConfig:(id)arg0;
- (void)setPhotoMovieAssets:(id)arg0;
- (void)setCanvasAndMVSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCanvasTimeRange:(id)arg0;
- (void)setAssetTransformInfo:(id)arg0;
- (id)cameraPositionInfo;
- (void)setCameraPositionInfo:(id)arg0;
- (id)videoSpeeds;
- (void)setVideoSpeeds:(id)arg0;
- (void)setVideoCurves:(id)arg0;
- (id)freezeFrameInfo;
- (void)setFreezeFrameInfo:(id)arg0;
- (double)crossplatVideoDuration;
- (void)setCrossplatVideoDuration:(double)arg0;
- (void)setLensHdrPath:(id)arg0;
- (id)lensOneKeyHDRConfig;
- (void)setLensOneKeyHDRConfig:(id)arg0;
- (id)draftRootDirectory;
- (void)setDraftRootDirectory:(id)arg0;
- (void)setBingoVideoKeys:(id)arg0;
- (double)HDREffectIntensity;
- (void)setHDREffectIntensity:(double)arg0;
- (id)videoSoundEntireFilters;
- (BOOL)isExportTapProcess;
- (id)transFileDict;
- (void)setTransFileDict:(id)arg0;
- (id)mvResourceAVAssetDic;
- (void)setMvResourceAVAssetDic:(id)arg0;
- (BOOL)useMVFps;
- (void)setUseMVFps:(BOOL)arg0;
- (int)mvFps;
- (void)setMvFps:(int)arg0;
- (void)setLvCompletionAsset:(id)arg0;
- (id)backgroundAsset;
- (void)setBackgroundAsset:(id)arg0;
- (void)setCameraBgAsset:(id)arg0;
- (id)customMetadataInfo;
- (void)setCustomMetadataInfo:(id)arg0;
- (BOOL)videoCompostionUseCustomClass;
- (void)setVideoCompostionUseCustomClass:(BOOL)arg0;
- (BOOL)isRetainOriginalSound;
- (BOOL)isReencoded;
- (void)setIsReencoded:(BOOL)arg0;
- (void)setAudioTimeScaleInfo:(id)arg0;
- (void)setAudioStartTimeInfo:(id)arg0;
- (int)composeFps;
- (void)setComposeFps:(int)arg0;
- (BOOL)forceUseAttachSeconds;
- (void)setForceUseAttachSeconds:(BOOL)arg0;
- (id)customMetadataArray;
- (void)setCustomMetadataArray:(id)arg0;
- (void)setBgAudioAssets:(id)arg0;
- (long long)pinMode;
- (void)setPinMode:(long long)arg0;
- (BOOL)isCacheDirectoryPathSet;
- (BOOL)recoverFromBreakPoint;
- (void)setRecoverFromBreakPoint:(BOOL)arg0;
- (id)compiledPartialFile;
- (void)setCompiledPartialFile:(id)arg0;
- (BOOL)ignoreAudioProcessing;
- (void)setIgnoreAudioProcessing:(BOOL)arg0;
- (BOOL)useAVAssetReader;
- (void)setUseAVAssetReader:(BOOL)arg0;
- (BOOL)compileHideSensitiveMetadata;
- (void)setCompileHideSensitiveMetadata:(BOOL)arg0;
- (BOOL)disable10BitSDR;
- (void)setDisable10BitSDR:(BOOL)arg0;
- (BOOL)enableAudioMixProtect;
- (void)setEnableAudioMixProtect:(BOOL)arg0;
- (double)adjustAccordingMaxrate:(unsigned long long)arg0 resolutionRatio:(double)arg1;
- (id)adjustAccordingAccelate:(unsigned long long)arg0 resolutionRatio:(double)arg1;
- (double)adjustAccordingEffectFilter:(unsigned long long)arg0;
- (void)autoCompletionCanvas;
- (id)getStringFromFourCharCode:(unsigned int)arg0;
- (void)updateVideoDuration;
- (unsigned long long)curRemakeIndex;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getVideoDuration:(id)arg0;
- (BOOL)needReencode:(id)arg0;
- (BOOL)needGPUProcess;
- (BOOL)needRemuxerOrRecoder;
- (BOOL)isVideoAssetsHasTransform;
- (BOOL)hasMediaData;
- (unsigned long long)getNotRemuxErrorCode;
- (int)totalFrameNum;
- (id)videoAssetForTimeline:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)effectContextForAsset:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })videoVolumeClipRangeForAsset:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })audioTimeAttachTimeForAsset:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })audioStartTimeForAsset:(id)arg0;
- (long long)audioRepeatCountForAsset:(id)arg0;
- (BOOL)checkVideoAssets;
- (BOOL)checkBGAudioAssets:(id *)arg0;
- (BOOL)isVaildCanvasConfig;
- (BOOL)isAllImages;
- (double)totalAudioDuration;
- (void)checkAudioClipRange;
- (void)setMetaData:(id)arg0 recordInfo:(long long)arg1;
- (void)syncSetMetaData:(id)arg0 recordInfo:(long long)arg1 MD5:(id)arg2 importPath:(id)arg3 needStore:(BOOL)arg4;
- (void)setMetaDatawithAsset:(id)arg0 isCropped:(BOOL)arg1;
- (void)removeLastMicPcmFile;
- (void)removeAllMicPcmFile;
- (void)removeAllVideoAsset;
- (void)removeAllSubTracks;
- (void)removeMinorVideoAsset:(id)arg0;
- (void)removeAllMinorVideoAsset;
- (void)addVideoWithAssets:(id)arg0;
- (void)addSubTrackWithAssets:(id)arg0;
- (void)removeAudioAsset:(id)arg0;
- (void)removeAllAudioAsset;
- (void)addAudioWithAsset:(id)arg0;
- (void)addAudioWithAssets:(id)arg0;
- (void)muteBgm:(BOOL)arg0;
- (void)setExportTapProcess:(BOOL)arg0;
- (void)setRetainOriginalSound:(BOOL)arg0;
- (void)muteAllVideos;
- (void)clearAllEffectAndTimeMachine;
- (BOOL)hasRecordAudio;
- (long long)transBitrate;
- (double)getMaxTimeScale;
- (unsigned long long)adjustAccordingResolutionRatio:(unsigned long long)arg0 resolutionRatio:(double)arg1;
- (void)trackVideoDatatoVEMediaEffect;
- (void)updateTimeLine;
- (BOOL)getAndJudgeAudioInfo:(int *)arg0 outSampleRate:(int *)arg1 outError:(id *)arg2;
- (void)setVolumeForVideo:(float)arg0;
- (void)setVolumeForSubTrackVideo:(float)arg0;
- (void)setVolumeForAudio:(float)arg0;
- (void)setVolume:(float)arg0 forVideoAtIndex:(unsigned long long)arg1;
- (void)setVolume:(float)arg0 forAudioAtIndex:(unsigned long long)arg1;
- (id)canvasVideoAssetForTimeline:(double)arg0;
- (id)canvasSourceForTimeline:(double)arg0;
- (id)colorVideoInfoForVideoAsset:(id)arg0;
- (id)colorVideoInfoForTimeline:(double)arg0;
- (void)remakeRemoveLast;
- (BOOL)hasFilterEnabled;
- (void)updateClipStart:(double)arg0 withResource:(id)arg1;
- (void)updateVideoTextureVertices:(id)arg0 withResource:(id)arg1;
- (BOOL)canUse10BitSDR;
- (void)removeAudioTimeClipInfoWithAsset:(id)arg0;
- (void)addAudioTimeClipInfos:(id)arg0;
- (void)removeAllAudioTimeClipInfos;
- (id)recordModel;
- (void)setRecordModel:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })totalVideoDurationForMusically;
- (void)setTotalVideoDurationForMusically:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setVideoSoundEntireFilters:(id)arg0;
- (void)setColorVideoInfo:(id)arg0;
- (void)setColorVideoTimeRange:(id)arg0;
- (double)freezeFrameStartTime;
- (void)setFreezeFrameStartTime:(double)arg0;
- (double)freezeFrameDuration;
- (void)setFreezeFrameDuration:(double)arg0;
- (id)lastMetadataInfo;
- (double)currentTotalBGAudioDuration;
- (void)setCurrentTotalBGAudioDuration:(double)arg0;
- (BOOL)isFromDrafts;
- (void)setIsFromDrafts:(BOOL)arg0;
- (id)currentFilterPath;
- (void)setCurrentFilterPath:(id)arg0;
- (id)mvResourceText;
- (void)setMvResourceText:(id)arg0;
- (BOOL)isInRemakeMode;
- (void)setIsInRemakeMode:(BOOL)arg0;
- (void)setCurRemakeIndex:(unsigned long long)arg0;
- (id)storeAudioAssets;
- (void)setStoreAudioAssets:(id)arg0;
- (id)storeAudioTimeClipInfo;
- (void)setStoreAudioTimeClipInfo:(id)arg0;
- (void)setColorSpaceInfoCache:(id)arg0;
- (BOOL)enableSmallwindowPipLoopPlay;
- (void)setEnableSmallwindowPipLoopPlay:(BOOL)arg0;
- (id)videoTimeLineHash;
- (void)setVideoTimeLineHash:(id)arg0;
- (void)setAssetAnimateInfos:(id)arg0;
- (void)setCanvasInfo:(id)arg0;
- (void)setTextureVerticesMap:(id)arg0;
- (void)setFeaturesInfo:(id)arg0;
- (void)setAssetLayers:(id)arg0;
- (void)setCanvasConfigsMap:(id)arg0;
- (void)setAssetMattingInfos:(id)arg0;
- (void)setVideoPtsMap:(id)arg0;
- (void)setVideoStabMatrixMap:(id)arg0;
- (void)setStabSizeMap:(id)arg0;
- (void)setHslFeatures:(id)arg0;
- (void)setEffectOperationManager:(id)arg0;
- (void)setEffectFilterPathBlock:(id /* block */)arg0;
- (long long)effectMaxMemCache;
- (id)fetchMainTrackColorSpaceInfo;
- (void)setColorSpaceInfo:(id)arg0;
- (long long)colorSpaceCalcType;
- (void)setColorSpaceCalcType:(long long)arg0;
- (id)mvEffectFilter;
- (void)setMvEffectFilter:(id)arg0;
- (id)textureVerticesMap;
- (id)assetMattingInfos;
- (void)setEffectMaxMemCache:(long long)arg0;
- (id)featuresInfo;
- (id)hslFeatures;
- (id)globalFeaturesInfo;
- (void)setGlobalFeaturesInfo:(id)arg0;
- (id)globalHSLFeatures;
- (void)setGlobalHSLFeatures:(id)arg0;
- (id)lensHdrPath;
- (BOOL)enableLensHdr2Sdr;
- (void)setEnableLensHdr2Sdr:(BOOL)arg0;
- (id)colorFilterPath;
- (void)setColorFilterPath:(id)arg0;
- (float)colorFilterIntensity;
- (id)composerInfo;
- (void)setComposerInfo:(id)arg0;
- (id)globalSegmentedComposerInfo;
- (id)segmentedComposerInfo;
- (id)videoPtsMap;
- (id)videoStabMatrixMap;
- (id)stabSizeMap;
- (void)buildFilterTimeLine:(id)arg0 filterZoom:(id)arg1 withEnableMultiTrack:(BOOL)arg2;
- (id)assetSegmentID;
- (id)HDREffectInfo;
- (struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })HDRIndensity;
- (void)setSegmentedComposerInfo:(id)arg0;
- (void)setGlobalSegmentedComposerInfo:(id)arg0;
- (void)setHDREffectInfo:(id)arg0;
- (void)setHDRIndensity:(struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })arg0;
- (void)setAudioTimeClipInfoWithClipRange:(id)arg0 ForAVAsset:(id)arg1;
- (void)setUseSystemVideoCompostion:(BOOL)arg0;
- (double)recordRate;
- (void)setRecordRate:(double)arg0;
- (id)reportVid;
- (void)setReportVid:(id)arg0;
- (void)setAssetSegmentID:(id)arg0;
- (id)mvModel;
- (void)setMvModel:(id)arg0;
- (BOOL)hasMV;
- (double)photoMovieDuration;
- (struct CGSize { double x0; double x1; })canvasAndMVSize;
- (id)originalPhotoAssetsInfo;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })videoTimeClipRangeForAsset:(id)arg0;
- (double)photoMoiveTransDuraion;
- (long long)followPostion;
- (id)movieAnimationTransform;
- (id)assetCropRectsInfo;
- (id)lvCompletionAsset;
- (id)cameraBgAsset;
- (id)mvResourceID;
- (void)setTimeMachine:(id)arg0;
- (unsigned long long)audioRepeatCount;
- (void)setAudioRepeatCount:(unsigned long long)arg0;
- (id)extraMusicEffectInfo;
- (void)setExtraMusicEffectInfo:(id)arg0;
- (id)extraMusicEffectAsset;
- (void)setExtraMusicEffectAsset:(id)arg0;
- (void)setTotalDurationWithTimeMachine:(double)arg0;
- (BOOL)useSystemVideoCompostion;
- (void)setSubTrackVideoAssets:(id)arg0;
- (void)setAudioAssets:(id)arg0;
- (void)setVideoTimeClipInfo:(id)arg0;
- (void)setVideoTimeScaleInfo:(id)arg0;
- (void)setAudioTimeClipInfo:(id)arg0;
- (void)setVolumnInfo:(id)arg0;
- (void)setMvResourceID:(id)arg0;
- (double)videoRateForAsset:(id)arg0;
- (id)assetMaskAlphaInfo;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })audioTimeClipRangeForAsset:(id)arg0;
- (id)volumeForAsset:(id)arg0;
- (void)acc_convertCanvasSizeFromSize:(struct CGSize { double x0; double x1; })arg0 toSize:(struct CGSize { double x0; double x1; })arg1;
- (void)awe_setMutedWithAsset:(id)arg0;
- (long long)effect_timeMachineType;
- (long long)studio_videoClipResolveType;
- (void)setStudio_videoClipResolveType:(long long)arg0;
- (BOOL)videoAssetsAllMuted;
- (id)acc_videoAssetAtIndex:(unsigned long long)arg0;
- (void)awe_muteOriginalAudio;
- (BOOL)videoAssetsAllHaveAudioTrack;
- (double)acc_totalVideoDuration;
- (void)acc_addVideoAssetDict:(id)arg0 fromVideoData:(id)arg1;
- (void)acc_addAudioAssetDict:(id)arg0 fromVideoData:(id)arg1;
- (void)acc_replaceVideoAssetAtIndex:(long long)arg0 withAsset:(id)arg1 fromVideoData:(id)arg2;
- (void)acc_replaceVideoAssetsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 withAssets:(id)arg1 fromVideoData:(id)arg2;
- (id)studio_copyWithZone:(struct _NSZone { } *)arg0;
- (void)saveVideoDataToFileUsePropertyListSerialization:(id)arg0 completion:(id /* block */)arg1;
- (void)acc_getRestoreVideoDurationWithSegmentCompletion:(id /* block */)arg0;
- (double)effect_newTimeMachineDuration;
- (void)removeAllPitchAudioFilters;
- (id)acc_safeAudioTimeClipInfo:(id)arg0;
- (BOOL)acc_audioAssetEqualTo:(id)arg0;
- (BOOL)acc_videoAssetEqualTo:(id)arg0;
- (void)setEffect_timeMachineType:(long long)arg0;
- (void)setEffect_operationTimeRange:(id)arg0;
- (double)effect_timeMachineBeginTime;
- (void)setEffect_timeMachineBeginTime:(double)arg0;
- (void)setEffect_newTimeMachineDuration:(double)arg0;
- (void)removePitchForFilterInfo:(id)arg0;
- (BOOL)assetA:(id)arg0 isSameLocalResourceWithAssetB:(id)arg1;
- (void)awe_setMutedWithAsset:(id)arg0 isAudioAsset:(BOOL)arg1;
- (void)setSourceType:(long long)arg0;
- (long long)sourceType;
- (id)init;
- (void)setPixelFormat:(unsigned long long)arg0;
- (void).cxx_destruct;
- (void)setContentSource:(long long)arg0;
- (long long)contentSource;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)identifier;
- (int)removeTrack:(const void *)arg0;
- (void)setRecordData:(id)arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isEmpty;
- (void)setImageAsset:(id)arg0;
- (BOOL)isPlaying;
- (id)imageAsset;
- (id)videoDuration;
- (unsigned long long)pixelFormat;
- (void)dealloc;
- (void)setIsPlaying:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })canvasSize;
- (id)recordData;
- (void)setIdentifier:(id)arg0;
- (void)setVideoDuration:(id)arg0;
- (id)stickers;
- (void)setCacheDirectoryPath:(id)arg0;
- (id)audioAssets;
- (id)extraInfo;
- (id)cacheDirectoryPath;
- (void)setStickers:(id)arg0;
- (int)previewFrameRate;
- (void)setPreviewFrameRate:(int)arg0;
- (id)rwlock;
- (void)setRwlock:(id)arg0;

@end
