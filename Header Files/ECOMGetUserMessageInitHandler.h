//
//     Generated by private class-dump
//

@class NSString, ECOMGetUserMessageHandler, ECOMGetUserOpenConversationsHandler;
@protocol ECOMTIMPullerStatusChangeObserverDelegate, ECOMTIMKVStorageProtocol;

@interface ECOMGetUserMessageInitHandler : NSObject <ECOMGetUserMessageInitProtocol> {
    int _inbox;
    long long _userID;
    unsigned long long _pullerInitStatus;
    id<ECOMTIMPullerStatusChangeObserverDelegate> _notifier;
    id<ECOMTIMKVStorageProtocol> _kvStorage;
    NSString *_logMarkerForInit;
    double _pullStartTime;
    ECOMGetUserMessageHandler *_getUserMessageHandler;
    ECOMGetUserOpenConversationsHandler *_openConvHandler;
    double _netInitPullALLTime;
    double _dbInitPullALLTime;
    long long _netInitPullALLCount;
    long long _hasFetchedMsgCounts;
    long long _hasFetchedConvCounts;
    unsigned long long _retryCount;
}

@property (nonatomic) long long userID;
@property (nonatomic) int inbox;
@property unsigned long long pullerInitStatus;
@property (retain, nonatomic) id<ECOMTIMPullerStatusChangeObserverDelegate> notifier;
@property (retain, nonatomic) id<ECOMTIMKVStorageProtocol> kvStorage;
@property (retain, nonatomic) NSString *logMarkerForInit;
@property (nonatomic) double pullStartTime;
@property (retain, nonatomic) ECOMGetUserMessageHandler *getUserMessageHandler;
@property (retain, nonatomic) ECOMGetUserOpenConversationsHandler *openConvHandler;
@property (nonatomic) double netInitPullALLTime;
@property (nonatomic) double dbInitPullALLTime;
@property (nonatomic) long long netInitPullALLCount;
@property (nonatomic) long long hasFetchedMsgCounts;
@property long long hasFetchedConvCounts;
@property (nonatomic) unsigned long long retryCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)kvStorage;
- (void)setKvStorage:(id)arg0;
- (double)pullStartTime;
- (void)setPullStartTime:(double)arg0;
- (void)startInit;
- (id)getKeyWithInbox:(id)arg0;
- (id)initWithInbox:(int)arg0 userID:(long long)arg1;
- (void)setPullerInitStatus:(unsigned long long)arg0;
- (void)getOpenConversationsList;
- (void)setGetUserMessageHandler:(id)arg0;
- (unsigned long long)pullerInitStatus;
- (id)getUserMessageHandler;
- (void)setOpenConvHandler:(id)arg0;
- (id)openConvHandler;
- (void)setLogMarkerForInit:(id)arg0;
- (void)fetchInitListWithNextVersion:(long long)arg0 context:(id)arg1 withcompletion:(id /* block */)arg2;
- (double)netInitPullALLTime;
- (void)setNetInitPullALLTime:(double)arg0;
- (long long)netInitPullALLCount;
- (void)setNetInitPullALLCount:(long long)arg0;
- (long long)hasFetchedConvCounts;
- (long long)hasFetchedMsgCounts;
- (void)setHasFetchedMsgCounts:(long long)arg0;
- (void)setHasFetchedConvCounts:(long long)arg0;
- (void)traceInitPerPageLoadTime:(double)arg0 isSuccess:(BOOL)arg1 totalMsgCount:(unsigned long long)arg2 responseTimeCost:(double)arg3 saveMsgListTimeCost:(double)arg4 saveConversationListTimeCost:(double)arg5 convCount:(unsigned long long)arg6;
- (double)dbInitPullALLTime;
- (void)setDbInitPullALLTime:(double)arg0;
- (id)configPullContext:(id)arg0;
- (void)recordInfoWhenSucceedWithLogID:(id)arg0;
- (void)finishInitWithError:(id)arg0;
- (void)recordInfoWhenFailedWithError:(id)arg0;
- (void)traceInitInfoWithLogID:(id)arg0 pullStartTime:(double)arg1;
- (id)logMarkerForInit;
- (void)setNeedsPullPerUserWithReason:(long long)arg0;
- (long long)userID;
- (id)notifier;
- (void).cxx_destruct;
- (void)setRetryCount:(unsigned long long)arg0;
- (unsigned long long)retryCount;
- (void)setUserID:(long long)arg0;
- (void)kickoff;
- (void)setNotifier:(id)arg0;
- (int)inbox;
- (void)setInbox:(int)arg0;

@end
