//
//     Generated by private class-dump
//

@class BDUGLuckyActivityFullRoadConfig, NSString, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface BDUGLuckyActivityTaskManager : NSObject <BDUGLuckyCleanCacheDelegateProtocol, BDUGLuckyActivityTaskStatusDelegate, BDUGLuckyActivityTaskProtocol> {
    BOOL _managerEnabled;
    BOOL _coldLaunchRecoverEnabled;
    BOOL _enterBackSaveEnabled;
    long long _cacheExpireInterval;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableDictionary *_taskExecuteClass;
    NSMutableDictionary *_executeQueue;
    NSMutableDictionary *_pendingTasks;
    long long _saveInterval;
    BDUGLuckyActivityFullRoadConfig *_trackerConfig;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _executeClassLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _executeQueueLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _pendingTasksLock;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *taskExecuteClass;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } executeClassLock;
@property (retain, nonatomic) NSMutableDictionary *executeQueue;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } executeQueueLock;
@property (retain, nonatomic) NSMutableDictionary *pendingTasks;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } pendingTasksLock;
@property (nonatomic) long long saveInterval;
@property (nonatomic) BOOL managerEnabled;
@property (nonatomic) BOOL coldLaunchRecoverEnabled;
@property (nonatomic) BOOL enterBackSaveEnabled;
@property (retain, nonatomic) BDUGLuckyActivityFullRoadConfig *trackerConfig;
@property (nonatomic) long long cacheExpireInterval;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)onCleanCache;
+ (void)initializeActivityTaskManager;
+ (void)preStartupTaskManagerModule;
+ (void)__settingsDidUpdate;
+ (id)sharedInstance;
+ (id)moduleName;
+ (id)serviceProtocol;

- (void)onEventV3:(id)arg0 parameter:(id)arg1;
- (id)trackerConfig;
- (void)applicationWillResignActiveNotification;
- (id)getCachedTasks;
- (void)__sendExpiredNotification:(id)arg0;
- (void)__clearExpiredStashedTasksWithIdentifier:(id)arg0 defaultIsExpire:(BOOL)arg1;
- (void)clearAllTask;
- (id)getAllCachedStashedGlobalTaskIds;
- (id)getAllCachedTask;
- (void)__setupTrackerHooker;
- (void)__trackerTaskIfNeededWithConfig:(id)arg0 event:(id)arg1 parameter:(id)arg2;
- (BOOL)__hasMatchedRulesWithMatchRules:(id)arg0 parameter:(id)arg1;
- (void)__loadConfigFromTaskManagerSettings;
- (void)__recoverAtColdLaunch;
- (void)lucky_setupTrackerHooker;
- (id)executeQueue;
- (void)removeCachedTaskWithGlobalTaskId:(id)arg0;
- (BOOL)managerEnabled;
- (void)taskDidOpenFailedWithTaskId:(id)arg0 actId:(id)arg1 globalId:(id)arg2 taskType:(id)arg3 failReason:(id)arg4 source:(id)arg5;
- (Class)__getExecuteClsForTaskType:(id)arg0;
- (id)__findConflictTasksForUnique:(id)arg0;
- (void)taskDidFail:(id)arg0 failReason:(id)arg1;
- (void)addSessionInfoWithGlobalTaskId:(id)arg0 forParams:(id)arg1 event:(id)arg2;
- (BOOL)registerTaskClass:(Class)arg0 withTaskType:(id)arg1;
- (id)taskExecuteClass;
- (id)__defaultDomain;
- (id)__defaultPath;
- (id)__fullPathTraceParamsForGlobalTaskId:(id)arg0 event:(id)arg1;
- (void)taskDidCompletedWithTaskToken:(id)arg0 needRelease:(BOOL)arg1;
- (void)__stashTasks:(id)arg0 identifier:(id)arg1;
- (void)removeCachedTasksWithGlobalTaskId:(id)arg0;
- (void)__encodeTasksAsync:(id)arg0 completion:(id /* block */)arg1;
- (id)getCachedStashedTasksWithIdentifier:(id)arg0;
- (void)clearAllStashedTaskWithIdentifier:(id)arg0;
- (void)__decodeTasksAsync:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)saveStashedTask:(id)arg0 withIdentifier:(id)arg1;
- (void)removeCachedStashedWithGlobalTaskId:(id)arg0 withIdentifier:(id)arg1;
- (BOOL)saveTask:(id)arg0;
- (void)taskDidComplete:(id)arg0 needRelease:(BOOL)arg1;
- (BOOL)enterBackSaveEnabled;
- (void)__addNotification;
- (BOOL)coldLaunchRecoverEnabled;
- (void)clearExpiredStashedTasks;
- (void)__registerAllTasks;
- (void)getCachedTasksAsync:(id /* block */)arg0;
- (void)__registerClassFromSettings;
- (id)__activityTaskSettings;
- (id)__encodeTask:(id)arg0;
- (id)__decodeTask:(id)arg0;
- (long long)cacheExpireInterval;
- (void)setManagerEnabled:(BOOL)arg0;
- (void)setCacheExpireInterval:(long long)arg0;
- (void)setColdLaunchRecoverEnabled:(BOOL)arg0;
- (void)setEnterBackSaveEnabled:(BOOL)arg0;
- (void)__settingsDidUpdate;
- (void)taskDidUpdate:(id)arg0;
- (void)taskWillRelease:(id)arg0;
- (id)getRegisteredExecuteClass;
- (id)getRunningTaskTokens;
- (id)getPendingTaskTokensInMemory;
- (void)setTaskExecuteClass:(id)arg0;
- (struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })executeClassLock;
- (void)setExecuteClassLock:(struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })arg0;
- (void)setExecuteQueue:(id)arg0;
- (struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })executeQueueLock;
- (void)setExecuteQueueLock:(struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })arg0;
- (struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })pendingTasksLock;
- (void)setPendingTasksLock:(struct _opaque_pthread_mutex_t { long long x0; char x1[56]; })arg0;
- (void)setTrackerConfig:(id)arg0;
- (BOOL)registerTaskClass:(Class)arg0;
- (void)unregisterExecutorForTaskType:(id)arg0;
- (void)executeTaskWithModel:(id)arg0;
- (void)stopTaskWithGlobalTaskId:(id)arg0;
- (id)getTaskWithGlobalTaskId:(id)arg0;
- (void)executeTaskWithModel:(id)arg0 source:(id)arg1;
- (void)cancelTaskPersistenceWithGlobalTaskId:(id)arg0;
- (void)stashTasksWithTaskTypes:(id)arg0 identifier:(id)arg1;
- (void)stashTasksWithUniqueTypes:(id)arg0 identifier:(id)arg1;
- (void)stashPopTasksWithIdentifier:(id)arg0;
- (void)persistentPendingTask:(id)arg0 withIdentifier:(id)arg1;
- (void)cancelTaskPersistenceWithGlobalTaskId:(id)arg0 withIdentifier:(id)arg1;
- (void)doActionWithToken:(id)arg0 uniqueID:(id)arg1 extra:(id)arg2 extraParams:(id)arg3 completion:(id /* block */)arg4;
- (void)doActionWithToken:(id)arg0 uniqueID:(id)arg1 extra:(id)arg2 extraParams:(id)arg3 autoReleaseTask:(BOOL)arg4 completion:(id /* block */)arg5;
- (void)doActionWithToken:(id)arg0 uniqueID:(id)arg1 globalTaskID:(id)arg2 extra:(id)arg3 extraParams:(id)arg4 autoReleaseTask:(BOOL)arg5 completion:(id /* block */)arg6;
- (id)fullTrackerConfig;
- (id)init;
- (void).cxx_destruct;
- (void)setDispatchQueue:(id)arg0;
- (id)dispatchQueue;
- (void)dealloc;
- (long long)saveInterval;
- (void)setSaveInterval:(long long)arg0;
- (id)pendingTasks;
- (void)setPendingTasks:(id)arg0;

@end
