//
//     Generated by private class-dump
//

@class NSString, AWEVideoPublishViewModel;

@interface ACCVideoDataPublishCanvasState : ACCVideoDataCanvasState <ACCVideoDataPublishCanvasStateProtocol> {
    BOOL _useOriginalSizeExport;
    BOOL _didApplyMaxCanvasSize;
    unsigned long long publishType;
    struct CGSize { double width; double height; } _maxVideoCanvasSize;
    struct CGSize { double width; double height; } _maxWatermarkCanvasSize;
    struct CGSize { double width; double height; } _maxPhotoCanvasSize;
    struct CGSize { double width; double height; } _videoCanvasSize;
    struct CGSize { double width; double height; } _watermarkCanvasSize;
    struct CGSize { double width; double height; } _photoCanvasSize;
}

@property (nonatomic) struct CGSize { double width; double height; } videoCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } watermarkCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } photoCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } maxPhotoCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } maxVideoCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } maxWatermarkCanvasSize;
@property (nonatomic) BOOL useOriginalSizeExport;
@property (nonatomic) BOOL didApplyMaxCanvasSize;
@property (nonatomic) unsigned long long publishType;
@property (weak, nonatomic) AWEVideoPublishViewModel *publishModel;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } standPlayerFrame;
@property (nonatomic) double standPlayerRatio;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } minCanvasSize;
@property (nonatomic) unsigned long long appliedType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)JSONKeyPathsByPropertyKey;

- (unsigned long long)publishType;
- (void)setPublishType:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })videoCanvasSize;
- (struct CGSize { double x0; double x1; })photoCanvasSize;
- (BOOL)useOriginalSizeExport;
- (BOOL)didApplyMaxCanvasSize;
- (void)applyMaxCanvasSize;
- (void)setUseOriginalSizeExport:(BOOL)arg0;
- (void)setVideoCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setWatermarkCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setPhotoCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })maxVideoCanvasSize;
- (struct CGSize { double x0; double x1; })maxWatermarkCanvasSize;
- (struct CGSize { double x0; double x1; })maxPhotoCanvasSize;
- (void)setDidApplyMaxCanvasSize:(BOOL)arg0;
- (void)updateVideoCanvasSize:(struct CGSize { double x0; double x1; })arg0 watermarkCanvasSize:(struct CGSize { double x0; double x1; })arg1 photoCanvasSize:(struct CGSize { double x0; double x1; })arg2;
- (struct CGSize { double x0; double x1; })watermarkCanvasSize;
- (struct CGSize { double x0; double x1; })getPublishCanvasSize;
- (void)setMaxVideoCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setMaxWatermarkCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setMaxPhotoCanvasSize:(struct CGSize { double x0; double x1; })arg0;

@end
