//
//     Generated by private class-dump
//

@class NSString, EAGLSharegroup, NSMutableDictionary, LSGLFramebufferCache, EAGLContext, NSMutableArray, NSObject, LSGLProgram;
@protocol OS_dispatch_queue;

@interface LSGLContext : NSObject <LSGLContextProtocol> {
    NSMutableDictionary *shaderProgramCache;
    NSMutableArray *shaderProgramUsageHistory;
    EAGLSharegroup *_sharegroup;
    void *lsopenGLESContextQueueKey;
    BOOL _useES3;
    BOOL _isActive;
    BOOL _enablePreviewOpaqueCorrect;
    BOOL _adaptEffectRenderMsgTypeResource;
    BOOL _videoOptSwitch;
    float _enableMipmapRatio;
    EAGLContext *_context;
    LSGLProgram *_currentShaderProgram;
    NSObject<OS_dispatch_queue> *_contextQueue;
    struct __CVOpenGLESTextureCache { } *_coreVideoTextureCache;
    LSGLFramebufferCache *_framebufferCache;
    NSMutableArray *_effectHandleTrash;
    struct __CVOpenGLESTextureCache { } *_gcoreVideoTextureCache;
}

@property struct __CVOpenGLESTextureCache { } *gcoreVideoTextureCache;
@property (nonatomic) BOOL useES3;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *contextQueue;
@property (retain, nonatomic) LSGLProgram *currentShaderProgram;
@property (readonly, retain, nonatomic) EAGLContext *context;
@property (readonly) struct __CVOpenGLESTextureCache { } *coreVideoTextureCache;
@property (readonly) LSGLFramebufferCache *framebufferCache;
@property (retain, nonatomic) NSMutableArray *effectHandleTrash;
@property (nonatomic) float enableMipmapRatio;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL enablePreviewOpaqueCorrect;
@property BOOL adaptEffectRenderMsgTypeResource;
@property (nonatomic) BOOL videoOptSwitch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedImageProcessingContext;
+ (id)sharedImageProcessingContext:(id)arg0;
+ (BOOL)deviceSupportsOpenGLESExtension:(id)arg0;
+ (int)maximumTextureSizeForThisDevice;
+ (void)releaseContext;
+ (id)sharedContextQueue;
+ (id)sharedFramebufferCache;
+ (void)useImageProcessingContext;
+ (void)setActiveShaderProgram:(id)arg0;
+ (int)maximumTextureUnitsForThisDevice;
+ (int)maximumVaryingVectorsForThisDevice;
+ (BOOL)deviceSupportsRedTextures;
+ (BOOL)deviceSupportsFramebufferReads;
+ (struct CGSize { double x0; double x1; })sizeThatFitsWithinATextureForSize:(struct CGSize { double x0; double x1; })arg0;
+ (BOOL)supportsFastTextureUpload;

- (BOOL)adaptEffectRenderMsgTypeResource;
- (BOOL)useES3;
- (id)effectHandleTrash;
- (void)useAsCurrentContext;
- (void)setUseES3:(BOOL)arg0;
- (void)setGcoreVideoTextureCache:(struct __CVOpenGLESTextureCache { } *)arg0;
- (id)initWithES3:(BOOL)arg0;
- (void)resetContext:(BOOL)arg0;
- (struct __CVOpenGLESTextureCache { } *)gcoreVideoTextureCache;
- (id)contextQueue;
- (void)setCurrentShaderProgram:(id)arg0;
- (id)currentShaderProgram;
- (id)initWithQueueName:(id)arg0 withES3:(BOOL)arg1;
- (void)presentBufferForDisplay;
- (void)useSharegroup:(id)arg0;
- (void)setEffectHandleTrash:(id)arg0;
- (void)setEnableMipmapRatio:(float)arg0;
- (BOOL)enablePreviewOpaqueCorrect;
- (void)setEnablePreviewOpaqueCorrect:(BOOL)arg0;
- (void)setAdaptEffectRenderMsgTypeResource:(BOOL)arg0;
- (void)setVideoOptSwitch:(BOOL)arg0;
- (id)programForVertexShaderString:(id)arg0 fragmentShaderString:(id)arg1;
- (void)setContextShaderProgram:(id)arg0;
- (struct __CVOpenGLESTextureCache { } *)coreVideoTextureCache;
- (id)framebufferCache;
- (float)enableMipmapRatio;
- (BOOL)videoOptSwitch;
- (id)init;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (id)createContext;
- (id)initWithConfig:(id)arg0;
- (id)context;
- (BOOL)isActive;
- (void)dealloc;
- (void)resetContext;
- (void *)contextKey;

@end
