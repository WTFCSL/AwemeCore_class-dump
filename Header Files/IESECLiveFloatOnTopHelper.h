//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, NSMutableArray, UIViewController;

@interface IESECLiveFloatOnTopHelper : NSObject <HTSService, IESECGoodsDetailLiveFloatOnTopProvider> {
    BOOL _smallWindowAttachStatedChanged;
    BOOL _isClickClosed;
    BOOL _miniWindowLock;
    BOOL _liveRoomAppear;
    BOOL _banRefresh;
    NSMutableDictionary *_pageStateRestore;
    NSString *_currentViewControllerName;
    NSString *_contextRoomID;
    NSMutableArray *_roomIdSpace;
    NSString *_nextViewControllerName;
    long long _currentState;
    NSMutableArray *_banMiniWindowHostArray;
    NSMutableDictionary *_strategy;
    NSMutableDictionary *_goNextStrategy;
    NSMutableDictionary *_switchArray;
    long long _disAppearVerify;
    NSMutableDictionary *_trackDic;
    NSMutableDictionary *_tapActionDic;
    UIViewController *_currentVC;
}

@property (retain, nonatomic) NSMutableDictionary *pageStateRestore;
@property (retain, nonatomic) NSString *currentViewControllerName;
@property (retain) NSString *contextRoomID;
@property (retain, nonatomic) NSMutableArray *roomIdSpace;
@property (retain, nonatomic) NSString *nextViewControllerName;
@property (nonatomic) long long currentState;
@property (nonatomic) BOOL smallWindowAttachStatedChanged;
@property (retain, nonatomic) NSMutableArray *banMiniWindowHostArray;
@property (nonatomic) BOOL isClickClosed;
@property (retain, nonatomic) NSMutableDictionary *strategy;
@property (retain, nonatomic) NSMutableDictionary *goNextStrategy;
@property (retain, nonatomic) NSMutableDictionary *switchArray;
@property (nonatomic) BOOL miniWindowLock;
@property (nonatomic) long long disAppearVerify;
@property (retain, nonatomic) NSMutableDictionary *trackDic;
@property (retain, nonatomic) NSMutableDictionary *tapActionDic;
@property (weak, nonatomic) UIViewController *currentVC;
@property (nonatomic) BOOL liveRoomAppear;
@property BOOL banRefresh;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)showToast:(id)arg0;
+ (void)setCurrentRoomID:(id)arg0;
+ (void)registerSmallWindowServiceClass:(Class)arg0 withParams:(id)arg1;
+ (void)subscribeAttachMiniWindowWithTarget:(id)arg0 completion:(id /* block */)arg1;
+ (void)unSubscribeAttachMiniWindowWithTarget:(id)arg0;
+ (void)subscribeClickCloseWithTarget:(id)arg0 completion:(id /* block */)arg1;
+ (void)unSubscribeClickCloseWithTarget:(id)arg0;
+ (void)subscribeCustomTapWithTarget:(id)arg0 completion:(id /* block */)arg1;
+ (void)unSubscribeCustomTapWithTarget:(id)arg0;
+ (void)subscribeMuteStateChangedWithTarget:(id)arg0 changedBlock:(id /* block */)arg1;
+ (void)unSubscribeMuteStateChangedWithTarget:(id)arg0;
+ (void)notifyUpdateRoomID:(id)arg0 host:(id)arg1;
+ (void)notifyWillLeaveWithStrategy:(id)arg0;
+ (void)registerCustomTapAction:(id /* block */)arg0 host:(id)arg1;
+ (BOOL)hasWindowView;
+ (BOOL)invalidChildViewController:(id)arg0;
+ (long long)getPageDisappearState:(id)arg0;
+ (BOOL)isLiveRoomExist;
+ (void)updateSmallWindowServiceClass:(Class)arg0 withTag:(id)arg1;
+ (void)p_setCurrentRoomID:(id)arg0;
+ (id)getSwitchingRoomID;
+ (id)willUseRoomID;
+ (void)displayAfterNotify;
+ (void)trackWithParams:(id)arg0;
+ (id)getKeyFromLynxUrl:(id)arg0;
+ (void)handleMiniWindowLock:(id)arg0;
+ (long long)getAppearStateForKey:(id)arg0;
+ (long long)getStateForKey:(id)arg0 serviceType:(long long)arg1;
+ (BOOL)controllerIsGoingNext:(id)arg0;
+ (id)getViewControllerKeyStack;
+ (BOOL)isBanMiniWindow;
+ (void)moveToDisplay;
+ (void)moveToHideWithPlay;
+ (void)moveToClose;
+ (void)revertSmallWindowState;
+ (void)attachWithCondition;
+ (id)getControllerKey:(id)arg0;
+ (void)enumChildViewControler:(id)arg0 inArray:(id)arg1;
+ (id)getLastChildViewControler:(id)arg0;
+ (id)getControllerKeyWithArray:(id)arg0;
+ (void)enumInstance:(id)arg0 inArray:(id)arg1;
+ (id)getViewControllerInstanceStack;
+ (void)evaluateModule;
+ (void)registerTrackParams:(id)arg0 host:(id)arg1;
+ (void)muteLiveRoomPlayer:(BOOL)arg0;
+ (id)VCRegistSmallLiveWindow;
+ (void)tmpAttach;
+ (id)getViewControllerAddressStack;
+ (void)subscribeTapMiniWindowWithTarget:(id)arg0 completion:(id /* block */)arg1;
+ (void)notifyWillGoNext:(id)arg0 params:(id)arg1;
+ (void)notifyWillGoBack:(id)arg0 params:(id)arg1;
+ (void)notifyWillLeave:(id)arg0 params:(id)arg1;
+ (BOOL)isLiveMiniWindowAttached;
+ (BOOL)isLiveMiniWindowIsMuted;
+ (id)playLiveFloatOn:(id)arg0 from:(id)arg1 roomID:(id)arg2 tag:(id)arg3 logExtra:(id)arg4;
+ (void)setLiveSmallWindowManager:(BOOL)arg0;
+ (void)unSubscribeTapMiniWindowWithTarget:(id)arg0;
+ (void)detachMiniWindowForce;
+ (BOOL)shouldDetachAndDismissWhenInVisible;
+ (BOOL)shouldDetachWhenBuyTouTiaoGoods;
+ (void)notifyBackToLiveRoom;
+ (void)notifyUpdateFullScreen:(BOOL)arg0;
+ (void)updateWhenFullScreenChanged:(BOOL)arg0;
+ (BOOL)belongToLiveViewController:(id)arg0;
+ (void)registerPriority:(BOOL)arg0 forbiddenBlock:(id /* block */)arg1;
+ (void)notifyUpdateLiveRoomCovered:(long long)arg0;
+ (void)notifySwitchRoomID:(id)arg0 host:(id)arg1;
+ (void)registerSwitch:(BOOL)arg0 host:(id)arg1;
+ (void)registerBanMiniWindowWithHost:(id)arg0;
+ (void)registerMiniWindowTapAction:(id /* block */)arg0 host:(id)arg1;
+ (void)notifyUpdatePlayer:(id)arg0;
+ (id)shareInstance;
+ (void)moveToState:(long long)arg0;

- (id)currentVC;
- (void)setCurrentVC:(id)arg0;
- (void)setTrackDic:(id)arg0;
- (id)trackDic;
- (void)setPageStateRestore:(id)arg0;
- (void)setGoNextStrategy:(id)arg0;
- (void)setSwitchArray:(id)arg0;
- (void)setTapActionDic:(id)arg0;
- (void)setRoomIdSpace:(id)arg0;
- (void)setBanMiniWindowHostArray:(id)arg0;
- (void)setMiniWindowLock:(BOOL)arg0;
- (void)setIsClickClosed:(BOOL)arg0;
- (void)setBanRefresh:(BOOL)arg0;
- (void)setLiveRoomAppear:(BOOL)arg0;
- (void)hookClass:(Class)arg0 withParams:(id)arg1;
- (id)contextRoomID;
- (void)setContextRoomID:(id)arg0;
- (BOOL)banRefresh;
- (BOOL)liveRoomAppear;
- (void)smallWindowViewDidAppear:(BOOL)arg0;
- (void)smallWindowViewWillDisappear:(BOOL)arg0;
- (void)setCurrentViewControllerName:(id)arg0;
- (id)pageStateRestore;
- (id)goNextStrategy;
- (long long)disAppearVerify;
- (void)setDisAppearVerify:(long long)arg0;
- (BOOL)isClickClosed;
- (id)currentViewControllerName;
- (id)roomIdSpace;
- (id)switchArray;
- (id)banMiniWindowHostArray;
- (id)tapActionDic;
- (BOOL)miniWindowLock;
- (BOOL)smallWindowAttachStatedChanged;
- (id)nextViewControllerName;
- (void)setNextViewControllerName:(id)arg0;
- (void)setSmallWindowAttachStatedChanged:(BOOL)arg0;
- (id)strategy;
- (void)setCurrentState:(long long)arg0;
- (id)init;
- (void).cxx_destruct;
- (long long)currentState;
- (void)setStrategy:(id)arg0;

@end
