//
//     Generated by private class-dump
//

@class NSString, NSDictionary, NSData, NSArray;

@interface FaceLiveModule : CIFilter {
    void *_handle;
    BOOL _is_released;
    struct FaceLiveInfo { int category; int time_remaind; int status; int state_machine_stage; int detect_result_code; int action_number; int if_go_reflection_outs; BOOL should_info_detect; BOOL should_begin_info_detect; BOOL should_end_info_detect; struct FaceLiveInfoDetectResult { BOOL is_detect; float infor_score; struct FaceLiveBestFrame { char *image; int image_width; int image_height; BOOL mask_flag; unsigned long long presentation_time; } infor_image; } info_detect_result; BOOL should_end_all_detect; } _info_ret;
    BOOL _maskFlag;
    BOOL _goReflection;
    BOOL _startReflection;
    BOOL _shouldInfoDetect;
    BOOL _didBeginInfoDetect;
    BOOL _didEndInfoDetect;
    BOOL _didEndAllDetect;
    int _reflectColorNum;
    int _currentColorIndex;
    int _algoErrorCode;
    NSData *_faceImageData;
    NSData *_faceWithEnvImageData;
    NSData *_eyeImageData;
    NSData *_mouthImageData;
    NSData *_nodImageData;
    NSData *_shakeImageData;
    NSData *_livenessImageData;
    NSData *_verifyImageData;
    NSData *_verifyOriImageData;
    NSString *_logBuffer;
    NSArray *_colorDurations;
    NSArray *_reflectColors;
    NSArray *_reflectBestBase64Images;
    NSDictionary *_reflectionParams;
    NSDictionary *_infoParams;
    struct FaceRiskLabel { int risk_multi; int risk_light; float risk_age_lower; float risk_age_upper; int risk_action; } _riskLabel;
}

@property (retain, nonatomic) NSDictionary *reflectionParams;
@property (retain, nonatomic) NSDictionary *infoParams;
@property (nonatomic) BOOL shouldInfoDetect;
@property (nonatomic) BOOL didBeginInfoDetect;
@property (nonatomic) BOOL didEndInfoDetect;
@property (nonatomic) BOOL didEndAllDetect;
@property (retain, nonatomic) NSData *faceImageData;
@property (retain, nonatomic) NSData *faceWithEnvImageData;
@property (retain, nonatomic) NSData *eyeImageData;
@property (retain, nonatomic) NSData *mouthImageData;
@property (retain, nonatomic) NSData *nodImageData;
@property (retain, nonatomic) NSData *shakeImageData;
@property (retain, nonatomic) NSData *livenessImageData;
@property (retain, nonatomic) NSData *verifyImageData;
@property (retain, nonatomic) NSData *verifyOriImageData;
@property (retain, nonatomic) NSString *logBuffer;
@property (nonatomic) BOOL maskFlag;
@property (nonatomic) struct FaceRiskLabel { int risk_multi; int risk_light; float risk_age_lower; float risk_age_upper; int risk_action; } riskLabel;
@property (nonatomic) int reflectColorNum;
@property (nonatomic) int currentColorIndex;
@property (copy, nonatomic) NSArray *colorDurations;
@property (copy, nonatomic) NSArray *reflectColors;
@property (copy, nonatomic) NSArray *reflectBestBase64Images;
@property (nonatomic) BOOL goReflection;
@property (nonatomic) BOOL startReflection;
@property (nonatomic) int algoErrorCode;

- (int)reStart;
- (int)setParamsGeneral:(int)arg0 value:(float)arg1;
- (int)doFaceQuality:(struct __CVBuffer { } *)arg0 orient:(int)arg1 ret:(struct FaceQualityInfo { unsigned int x0; int x1; } *)arg2;
- (void)setMaskRadiusRatio:(float)arg0 offsetToCenterRatio:(float)arg1;
- (void)setAlgoErrorCode:(int)arg0;
- (unsigned int)getActionCode:(int *)arg0 num:(int)arg1;
- (void)setGoReflection:(BOOL)arg0;
- (void)setReflectionParams:(id)arg0;
- (void)setInfoParams:(id)arg0;
- (void)setShouldInfoDetect:(BOOL)arg0;
- (void)setDidBeginInfoDetect:(BOOL)arg0;
- (void)setDidEndInfoDetect:(BOOL)arg0;
- (void)setDidEndAllDetect:(BOOL)arg0;
- (void)setReflectColorNum:(int)arg0;
- (void)setReflectColors:(id)arg0;
- (void)setColorDurations:(id)arg0;
- (void)setCurrentColorIndex:(int)arg0;
- (id)reflectColors;
- (int)currentColorIndex;
- (BOOL)startReflection;
- (BOOL)didEndAllDetect;
- (void)updateInfoDetectReturnWithRet:(struct FaceLiveInfo { int x0; int x1; int x2; int x3; int x4; int x5; int x6; BOOL x7; BOOL x8; BOOL x9; struct FaceLiveInfoDetectResult { BOOL x0; float x1; struct FaceLiveBestFrame { char *x0; int x1; int x2; BOOL x3; unsigned long long x4; } x2; } x10; BOOL x11; } *)arg0 output:(struct ActionLivenessRet { int x0; int x1; int x2; int x3; int x4; int x5; float x6; float x7; float x8; int x9; int x10; BOOL x11; BOOL x12; float x13; })arg1;
- (void)saveBestImag;
- (BOOL)shouldInfoDetect;
- (BOOL)didBeginInfoDetect;
- (BOOL)didEndInfoDetect;
- (void)setFaceImageData:(id)arg0;
- (void)setFaceWithEnvImageData:(id)arg0;
- (void)setMaskFlag:(BOOL)arg0;
- (void)setEyeImageData:(id)arg0;
- (void)setMouthImageData:(id)arg0;
- (void)setNodImageData:(id)arg0;
- (void)setShakeImageData:(id)arg0;
- (void)setRiskLabel:(struct FaceRiskLabel { int x0; int x1; float x2; float x3; int x4; })arg0;
- (int)reflectColorNum;
- (void)setReflectBestBase64Images:(id)arg0;
- (void)setLivenessImageData:(id)arg0;
- (void)setVerifyOriImageData:(id)arg0;
- (void)setVerifyImageData:(id)arg0;
- (int)setParamsWithActions:(int *)arg0 action_num:(int)arg1 timeout:(int)arg2;
- (int)setActionLivenessReflectionParams:(id)arg0;
- (int)setActionLivenessInfoParams:(id)arg0;
- (int)currentReflectColor;
- (struct CGImage { } *)doFaceLive:(struct __CVBuffer { } *)arg0 orient:(int)arg1 ret:(struct FaceLiveInfo { int x0; int x1; int x2; int x3; int x4; int x5; int x6; BOOL x7; BOOL x8; BOOL x9; struct FaceLiveInfoDetectResult { BOOL x0; float x1; struct FaceLiveBestFrame { char *x0; int x1; int x2; BOOL x3; unsigned long long x4; } x2; } x10; BOOL x11; } *)arg2;
- (void)saveErrorLog;
- (int)setRandom:(int)arg0;
- (id)hashSignForFramesHash:(id)arg0;
- (id)frameHash:(struct __CVBuffer { } *)arg0;
- (id)faceImageData;
- (id)faceWithEnvImageData;
- (id)eyeImageData;
- (id)mouthImageData;
- (id)nodImageData;
- (id)shakeImageData;
- (id)livenessImageData;
- (id)verifyImageData;
- (id)verifyOriImageData;
- (BOOL)maskFlag;
- (struct FaceRiskLabel { int x0; int x1; float x2; float x3; int x4; })riskLabel;
- (id)colorDurations;
- (id)reflectBestBase64Images;
- (BOOL)goReflection;
- (void)setStartReflection:(BOOL)arg0;
- (id)reflectionParams;
- (id)infoParams;
- (int)algoErrorCode;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)initData;
- (id)logBuffer;
- (void)setLogBuffer:(id)arg0;

@end
