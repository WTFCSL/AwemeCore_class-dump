//
//     Generated by private class-dump
//

@class ACCNewVideoCoverAIRecommendImageCoverInfo, AWEFeedFlameAnchorModel, AWEVideoPublishMixInfoModel, AWEVideoPublishChapterViewModel, AWECoverTextModel, NSDictionary, AWEPublishProductDetectResponseModel, NSMutableArray, NSString, ACCImageAlbumEditImageInputInfo, ACCPublishUserDeclarationOption, ACCPublishUserDeclarationModel, NSArray, NSNumber, NSData, ACCImageAlbumData, UIImage;
@protocol AWERepoPublishConfigModelTitleObserver, ACCPublishRepository;

@interface AWERepoPublishConfigModel : NSObject <AWERepositoryDraftProtocol, ACCRepositoryDraftContextDeprecated, ACCRepositoryReeditContextProtocol, ACCRepositoryRequestParamsDeprecated, ACCRepositoryTrackContextDeprecated, ACCRepoRegister, NSCopying, AWERepoPublishConfigModelParamProtocol, ACCRepositoryContextDeprecated, ACCRepoPublishConfigData> {
    BOOL _useNewVideoTitleCaption;
    BOOL _saveToAlbum;
    BOOL _forbiddenSaveToAlbum;
    BOOL _isSupportWaitRemoteVid;
    BOOL _isHashTag;
    BOOL _firstFrameImageIsDowngraded;
    BOOL _publishWithHotSpotTag;
    BOOL _videoCoverFromGallery;
    BOOL _isUsingMediumVideoCoverTools;
    BOOL _coverEditUseCustomFrame;
    BOOL _hasRecommendCoverList;
    BOOL _ignoreInsertAfterPublish;
    BOOL _shouldHideInMyPosts;
    BOOL _shouldDisablePublishProgressView;
    BOOL _shouldDisablePublishRetry;
    BOOL _shouldForceSDR;
    BOOL _isPublishCanvasAsImageAlbum;
    BOOL _isPublishDualAsImageAlum;
    BOOL _isUserSelectedCover;
    BOOL _isUserSavedCover;
    BOOL _isParameterizedCreation;
    BOOL _isSilentPublish;
    BOOL _publishPhaseIsAfterSynthesis;
    BOOL _forcePublishAsImageAlbum;
    BOOL _hasShowPublishChallenge;
    BOOL _publishChallengeSwitchStatus;
    BOOL _isCoverChanged;
    id<ACCPublishRepository> repoDeprecated;
    NSArray *_titleExtraInfo;
    NSString *_publishTitle;
    NSString *_publishCaption;
    long long _slidesTypeOfLast;
    NSString *_textForRequest;
    double _dynamicCoverStartTime;
    UIImage *_coverImage;
    UIImage *_firstFrameImage;
    UIImage *_shareImImageForMultiProjects;
    UIImage *_dualCameraMinorImage;
    NSString *_tosCoverURI;
    AWECoverTextModel *_coverTextModel;
    UIImage *_coverTextImage;
    NSString *_hotSpotWord;
    NSString *_hotSpotID;
    ACCImageAlbumData *_videoCoverAlbumData;
    ACCImageAlbumEditImageInputInfo *_videoCoverCompressedFramsImage;
    ACCImageAlbumEditImageInputInfo *_videoCoverOriginImage;
    UIImage *_chosenImage;
    UIImage *_chosenOriginImage;
    NSString *_videoCoverTemplatedID;
    NSString *_videoCoverTemplateModelTabName;
    NSMutableArray *_videoCoverTextTemplateIDs;
    UIImage *_videoCoverImage;
    NSString *_tosVideoCoverURI;
    NSArray *_videoCoverTexts;
    NSDictionary *_videoCoverTrackers;
    NSString *_selectedCoverURI;
    id<AWERepoPublishConfigModelTitleObserver> _titleObserver;
    NSNumber *_recommendedAICoverIndex;
    NSNumber *_recommendedAICoverTime;
    NSArray *_framePaths;
    NSArray *_recommendCoverList;
    ACCNewVideoCoverAIRecommendImageCoverInfo *_currentRecommendCoverInfo;
    NSString *_coverTitleSelectedFrom;
    NSString *_coverTitleSelectedId;
    NSString *_tosCropCoverURI;
    NSString *_activityHashtagID;
    NSNumber *_nowPostType;
    NSNumber *_dynamicyPrepareCanvasPublishAsImageFlagValue;
    id _productDetectFlow;
    AWEPublishProductDetectResponseModel *_productDetectModel;
    long long _openPublicationExamineType;
    NSString *_openPublicationExamineToken;
    long long _slidesCoverIdx;
    NSString *_publishChallengeTitle;
    AWEFeedFlameAnchorModel *_flameStickerPublishInfo;
    NSString *_coverImagePath;
    NSString *_coverTextPath;
    NSString *_firstFramePath;
    NSString *_cropedCoverImagePath;
    NSString *_backupCoverPath;
    NSString *_chosenImagePath;
    NSString *_chosenOriginImagePath;
    NSString *_coverImagePathRelative;
    NSString *_coverTextPathRelative;
    NSString *_firstFramePathRelative;
    NSString *_cropedCoverImagePathRelative;
    NSString *_chosenImagePathRelative;
    NSString *_chosenOriginImagePathRelative;
    NSDictionary *_unmodifiablePublishParams;
    unsigned long long _categoryDA;
    NSData *_titleExtraInfoData;
    AWEVideoPublishMixInfoModel *_mixInfo;
    AWEVideoPublishChapterViewModel *_videoPublishChapterViewModel;
    NSString *_coverToolsInfo;
    NSDictionary *_coverToolsInfoDict;
    NSString *_lastCreateMixID;
    NSDictionary *_mixParams;
    ACCPublishUserDeclarationModel *_userDeclarationModel;
    ACCPublishUserDeclarationOption *_selectedUserDeclarationOption;
    NSString *_userDeclarationSource;
    NSDictionary *_userDeclarationExtraInfo;
    NSDictionary *_hashTagWithHotSpot;
    struct CGPoint { double x; double y; } _coverCropOffset;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _coverEditFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _coverEditInteractivePreviewViewFrame;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _coverEditInteractivePreviewViewTransform;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) ACCPublishUserDeclarationModel *userDeclarationModel;
@property (copy, nonatomic) NSString *publishCaption;
@property (copy, nonatomic) NSString *publishTitle;
@property (nonatomic) BOOL useNewVideoTitleCaption;
@property (nonatomic) long long slidesTypeOfLast;
@property (copy, nonatomic) NSArray *titleExtraInfo;
@property (readonly, copy, nonatomic) NSString *textForRequest;
@property (nonatomic) BOOL saveToAlbum;
@property (nonatomic) BOOL forbiddenSaveToAlbum;
@property (nonatomic) BOOL isSupportWaitRemoteVid;
@property (nonatomic) BOOL isHashTag;
@property (nonatomic) double dynamicCoverStartTime;
@property (retain, nonatomic) UIImage *coverImage;
@property (retain, nonatomic) UIImage *firstFrameImage;
@property (retain, nonatomic) UIImage *shareImImageForMultiProjects;
@property (nonatomic) BOOL firstFrameImageIsDowngraded;
@property (retain, nonatomic) UIImage *dualCameraMinorImage;
@property (copy, nonatomic) NSString *tosCoverURI;
@property (retain, nonatomic) AWECoverTextModel *coverTextModel;
@property (retain, nonatomic) UIImage *coverTextImage;
@property (copy, nonatomic) NSString *hotSpotWord;
@property (copy, nonatomic) NSString *hotSpotID;
@property (nonatomic) BOOL publishWithHotSpotTag;
@property (retain, nonatomic) ACCImageAlbumData *videoCoverAlbumData;
@property (retain, nonatomic) ACCImageAlbumEditImageInputInfo *videoCoverCompressedFramsImage;
@property (retain, nonatomic) ACCImageAlbumEditImageInputInfo *videoCoverOriginImage;
@property (retain, nonatomic) UIImage *chosenImage;
@property (retain, nonatomic) UIImage *chosenOriginImage;
@property (copy, nonatomic) NSString *videoCoverTemplatedID;
@property (copy, nonatomic) NSString *videoCoverTemplateModelTabName;
@property (retain, nonatomic) NSMutableArray *videoCoverTextTemplateIDs;
@property (nonatomic) BOOL videoCoverFromGallery;
@property (nonatomic) BOOL isUsingMediumVideoCoverTools;
@property (retain, nonatomic) UIImage *videoCoverImage;
@property (copy, nonatomic) NSString *tosVideoCoverURI;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } coverEditFrame;
@property (nonatomic) BOOL coverEditUseCustomFrame;
@property (copy, nonatomic) NSArray *videoCoverTexts;
@property (copy, nonatomic) NSDictionary *videoCoverTrackers;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } coverEditInteractivePreviewViewTransform;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } coverEditInteractivePreviewViewFrame;
@property (copy, nonatomic) NSString *selectedCoverURI;
@property (weak, nonatomic) id<AWERepoPublishConfigModelTitleObserver> titleObserver;
@property (retain, nonatomic) NSNumber *recommendedAICoverIndex;
@property (retain, nonatomic) NSNumber *recommendedAICoverTime;
@property (copy, nonatomic) NSArray *framePaths;
@property (copy, nonatomic) NSArray *recommendCoverList;
@property (nonatomic) BOOL hasRecommendCoverList;
@property (retain, nonatomic) ACCNewVideoCoverAIRecommendImageCoverInfo *currentRecommendCoverInfo;
@property (retain, nonatomic) NSString *coverTitleSelectedFrom;
@property (retain, nonatomic) NSString *coverTitleSelectedId;
@property (nonatomic) struct CGPoint { double x; double y; } coverCropOffset;
@property (copy, nonatomic) NSString *tosCropCoverURI;
@property (nonatomic) BOOL ignoreInsertAfterPublish;
@property (nonatomic) BOOL shouldHideInMyPosts;
@property (copy, nonatomic) NSString *activityHashtagID;
@property (nonatomic) BOOL shouldDisablePublishProgressView;
@property (nonatomic) BOOL shouldDisablePublishRetry;
@property (retain, nonatomic) NSNumber *nowPostType;
@property (nonatomic) BOOL shouldForceSDR;
@property (nonatomic) BOOL isPublishCanvasAsImageAlbum;
@property (nonatomic) BOOL isPublishDualAsImageAlum;
@property (retain, nonatomic) NSNumber *dynamicyPrepareCanvasPublishAsImageFlagValue;
@property (nonatomic) BOOL isUserSelectedCover;
@property (nonatomic) BOOL isUserSavedCover;
@property (nonatomic) BOOL isParameterizedCreation;
@property (nonatomic) BOOL isSilentPublish;
@property (nonatomic) BOOL publishPhaseIsAfterSynthesis;
@property (nonatomic) BOOL forcePublishAsImageAlbum;
@property (retain, nonatomic) id productDetectFlow;
@property (retain, nonatomic) AWEPublishProductDetectResponseModel *productDetectModel;
@property (nonatomic) long long openPublicationExamineType;
@property (copy, nonatomic) NSString *openPublicationExamineToken;
@property (nonatomic) long long slidesCoverIdx;
@property (nonatomic) BOOL hasShowPublishChallenge;
@property (retain, nonatomic) NSString *publishChallengeTitle;
@property (nonatomic) BOOL publishChallengeSwitchStatus;
@property (retain, nonatomic) AWEFeedFlameAnchorModel *flameStickerPublishInfo;
@property (copy, nonatomic) NSString *coverImagePath;
@property (copy, nonatomic) NSString *coverTextPath;
@property (copy, nonatomic) NSString *firstFramePath;
@property (copy, nonatomic) NSString *cropedCoverImagePath;
@property (copy, nonatomic) NSString *backupCoverPath;
@property (copy, nonatomic) NSString *chosenImagePath;
@property (copy, nonatomic) NSString *chosenOriginImagePath;
@property (copy, nonatomic) NSString *coverImagePathRelative;
@property (copy, nonatomic) NSString *coverTextPathRelative;
@property (copy, nonatomic) NSString *firstFramePathRelative;
@property (copy, nonatomic) NSString *cropedCoverImagePathRelative;
@property (copy, nonatomic) NSString *chosenImagePathRelative;
@property (copy, nonatomic) NSString *chosenOriginImagePathRelative;
@property (nonatomic) BOOL isCoverChanged;
@property (retain, nonatomic) NSDictionary *unmodifiablePublishParams;
@property (nonatomic) unsigned long long categoryDA;
@property (retain, nonatomic) NSData *titleExtraInfoData;
@property (retain, nonatomic) AWEVideoPublishMixInfoModel *mixInfo;
@property (retain, nonatomic) AWEVideoPublishChapterViewModel *videoPublishChapterViewModel;
@property (copy, nonatomic) NSString *coverToolsInfo;
@property (copy, nonatomic) NSDictionary *coverToolsInfoDict;
@property (copy, nonatomic) NSString *lastCreateMixID;
@property (copy, nonatomic) NSDictionary *mixParams;
@property (copy, nonatomic) ACCPublishUserDeclarationOption *selectedUserDeclarationOption;
@property (copy, nonatomic) NSString *userDeclarationSource;
@property (copy, nonatomic) NSDictionary *userDeclarationExtraInfo;
@property (copy, nonatomic) NSDictionary *hashTagWithHotSpot;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<ACCPublishRepository> repoDeprecated;

+ (id)repo_dataProtocol;

- (void)setCoverImage:(id)arg0;
- (void)setTitleExtraInfo:(id)arg0;
- (void)setPublishTitle:(id)arg0;
- (void)setUnmodifiablePublishParams:(id)arg0;
- (id)hotSpotID;
- (id)publishTitle;
- (id)titleExtraInfo;
- (id)mixInfo;
- (id)nowPostType;
- (id)publishCaption;
- (id)composedCoverImage;
- (id)cropedCoverImagePath;
- (void)setCropedCoverImagePath:(id)arg0;
- (id)hotSpotWord;
- (void)setHotSpotWord:(id)arg0;
- (id)unmodifiablePublishParams;
- (BOOL)publishPhaseIsAfterSynthesis;
- (void)setPublishPhaseIsAfterSynthesis:(BOOL)arg0;
- (long long)openPublicationExamineType;
- (void)setOpenPublicationExamineType:(long long)arg0;
- (id)openPublicationExamineToken;
- (void)setOpenPublicationExamineToken:(id)arg0;
- (BOOL)isCoverChanged;
- (void)setIsCoverChanged:(BOOL)arg0;
- (long long)slidesCoverIdx;
- (void)setSlidesCoverIdx:(long long)arg0;
- (id)coverToolsInfo;
- (void)setCoverToolsInfo:(id)arg0;
- (id)selectedUserDeclarationOption;
- (void)setSelectedUserDeclarationOption:(id)arg0;
- (id)userDeclarationSource;
- (void)setUserDeclarationSource:(id)arg0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })coverEditInteractivePreviewViewTransform;
- (void)setCoverEditInteractivePreviewViewTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })coverEditInteractivePreviewViewFrame;
- (void)setCoverEditInteractivePreviewViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)chosenImagePath;
- (void)setChosenImagePath:(id)arg0;
- (id)chosenOriginImagePath;
- (void)setChosenOriginImagePath:(id)arg0;
- (id)coverToolsInfoDict;
- (void)setCoverToolsInfoDict:(id)arg0;
- (id)userDeclarationExtraInfo;
- (void)setUserDeclarationExtraInfo:(id)arg0;
- (BOOL)saveToAlbum;
- (void)setSaveToAlbum:(BOOL)arg0;
- (id)initWithDraft:(id)arg0;
- (BOOL)isHashTag;
- (void)setMixInfo:(id)arg0;
- (void)setIsHashTag:(BOOL)arg0;
- (id)acc_publishRequestParams:(id)arg0;
- (void)saveWithDraft:(id)arg0;
- (id)acc_publishTrackEventParams:(id)arg0;
- (id)repoDeprecated;
- (void)draftWillBeSavedWithID:(id)arg0;
- (void)modelDidRetrievedFromDraftWithID:(id)arg0;
- (void)setRepoDeprecated:(id)arg0;
- (id)acc_referExtraParams;
- (void)setHotSpotID:(id)arg0;
- (void)setFirstFrameImage:(id)arg0;
- (id)firstFrameImage;
- (BOOL)hasHotSpotWord;
- (BOOL)shouldHideInMyPosts;
- (void)updateFromAweme:(id)arg0;
- (id)productDetectFlow;
- (void)setProductDetectFlow:(id)arg0;
- (void)setNowPostType:(id)arg0;
- (id)chosenImage;
- (void)setChosenImage:(id)arg0;
- (id)videoCoverImage;
- (void)setVideoCoverImage:(id)arg0;
- (BOOL)isUserSelectedCover;
- (void)setIsUserSelectedCover:(BOOL)arg0;
- (id)shareImImageForMultiProjects;
- (void)setCategoryDA:(unsigned long long)arg0;
- (void)setShouldHideInMyPosts:(BOOL)arg0;
- (void)setPublishCaption:(id)arg0;
- (void)setShouldDisablePublishProgressView:(BOOL)arg0;
- (void)setShouldDisablePublishRetry:(BOOL)arg0;
- (void)setForbiddenSaveToAlbum:(BOOL)arg0;
- (void)setIgnoreInsertAfterPublish:(BOOL)arg0;
- (void)setIsSilentPublish:(BOOL)arg0;
- (BOOL)isSilentPublish;
- (id)firstFramePath;
- (id)userDeclarationModel;
- (void)updateUserDeclarationModel:(id)arg0;
- (id)dynamicyPrepareCanvasPublishAsImageFlagValue;
- (BOOL)forcePublishAsImageAlbum;
- (id)videoPublishChapterViewModel;
- (BOOL)isUserSavedCover;
- (id)videoCoverAlbumData;
- (id)coverTextImage;
- (id)coverTextModel;
- (void)setCoverTextImage:(id)arg0;
- (void)setCoverTextModel:(id)arg0;
- (void)setDynamicyPrepareCanvasPublishAsImageFlagValue:(id)arg0;
- (void)setIsPublishCanvasAsImageAlbum:(BOOL)arg0;
- (id)recommendCoverList;
- (id)lastCreateMixID;
- (void)setLastCreateMixID:(id)arg0;
- (void)setMixParams:(id)arg0;
- (id)mixParams;
- (void)resetSlidesCoverInfo;
- (id)hashTagWithHotSpot;
- (void)setHashTagWithHotSpot:(id)arg0;
- (id)productDetectModel;
- (BOOL)forbiddenSaveToAlbum;
- (void)updateSelectedUserDeclarationOption:(id)arg0 optionExtra:(id)arg1 source:(id)arg2;
- (void)setIsSupportWaitRemoteVid:(BOOL)arg0;
- (id)createWithJson:(id)arg0;
- (BOOL)isModifiedComparesToModel:(id)arg0;
- (id)isModifiedTrackInfoComparesToModel:(id)arg0;
- (void)setFirstFramePath:(id)arg0;
- (void)setCoverTextPath:(id)arg0;
- (void)setDynamicCoverStartTime:(double)arg0;
- (void)setTosCoverURI:(id)arg0;
- (void)setCoverCropOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)setTosCropCoverURI:(id)arg0;
- (void)setCoverImagePathRelative:(id)arg0;
- (void)setChosenImagePathRelative:(id)arg0;
- (void)setChosenOriginImagePathRelative:(id)arg0;
- (void)setFirstFramePathRelative:(id)arg0;
- (void)setCoverTextPathRelative:(id)arg0;
- (id)titleExtraInfoData;
- (void)setTitleExtraInfoData:(id)arg0;
- (void)setVideoPublishChapterViewModel:(id)arg0;
- (id)recommendedAICoverIndex;
- (void)setRecommendedAICoverIndex:(id)arg0;
- (id)recommendedAICoverTime;
- (void)setRecommendedAICoverTime:(id)arg0;
- (id)coverTitleSelectedFrom;
- (void)setCoverTitleSelectedFrom:(id)arg0;
- (id)coverTitleSelectedId;
- (void)setCoverTitleSelectedId:(id)arg0;
- (id)framePaths;
- (void)setFramePaths:(id)arg0;
- (void)setIsUserSavedCover:(BOOL)arg0;
- (void)setVideoCoverAlbumData:(id)arg0;
- (void)setVideoCoverOriginImage:(id)arg0;
- (void)setVideoCoverCompressedFramsImage:(id)arg0;
- (id)videoCoverTemplatedID;
- (void)setVideoCoverTemplatedID:(id)arg0;
- (id)videoCoverTemplateModelTabName;
- (void)setVideoCoverTemplateModelTabName:(id)arg0;
- (id)videoCoverTextTemplateIDs;
- (void)setVideoCoverTextTemplateIDs:(id)arg0;
- (BOOL)videoCoverFromGallery;
- (void)setVideoCoverFromGallery:(BOOL)arg0;
- (id)videoCoverTexts;
- (void)setVideoCoverTexts:(id)arg0;
- (id)videoCoverTrackers;
- (void)setVideoCoverTrackers:(id)arg0;
- (double)dynamicCoverStartTime;
- (id)coverImagePathRelative;
- (id)chosenImagePathRelative;
- (id)chosenOriginImagePathRelative;
- (id)firstFramePathRelative;
- (id)tosCoverURI;
- (id)tosCropCoverURI;
- (struct CGPoint { double x0; double x1; })coverCropOffset;
- (unsigned long long)categoryDA;
- (id)coverTextPathRelative;
- (id)videoCoverOriginImage;
- (id)videoCoverCompressedFramsImage;
- (void)asyncSaveImage:(id)arg0 toFilePath:(id)arg1 isJpeg:(BOOL)arg2 jpegQuality:(double)arg3;
- (id)chosenOriginImage;
- (id)coverTextPath;
- (id)cropedCoverImagePathRelative;
- (void)setChosenOriginImage:(id)arg0;
- (id)androidCompatibleTitle;
- (id)recommendedAICoverTrackInfo;
- (void)setShouldForceSDR:(BOOL)arg0;
- (void)setForcePublishAsImageAlbum:(BOOL)arg0;
- (void)setFlameStickerPublishInfo:(id)arg0;
- (BOOL)shouldForceSDR;
- (void)setFirstFrameImageIsDowngraded:(BOOL)arg0;
- (void)removeFriends:(id *)arg0 newTitleExtraInfo:(id *)arg1;
- (BOOL)useNewVideoTitleCaption;
- (void)trimWhitespace:(id *)arg0 newTitleExtraInfo:(id)arg1;
- (void)appendTitleToParamDict:(id)arg0 publishModel:(id)arg1;
- (void)handlerCoverWithNewProjecets:(id)arg0;
- (void)updateSlidesCoverIdxsWhenSwitchIndexFrom:(long long)arg0 to:(long long)arg1;
- (void)updateSlidesCoverIdxWhenItemDeleteAtIndex:(long long)arg0;
- (void)setRecommendCoverList:(id)arg0;
- (void)setCurrentRecommendCoverInfo:(id)arg0;
- (BOOL)hasRecommendCoverList;
- (id)currentRecommendCoverInfo;
- (void)setHasRecommendCoverList:(BOOL)arg0;
- (void)setCoverEditUseCustomFrame:(BOOL)arg0;
- (void)setCoverEditFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })coverEditFrame;
- (id)selectedCoverURI;
- (void)setSelectedCoverURI:(id)arg0;
- (BOOL)isUsingMediumVideoCoverTools;
- (void)setIsUsingMediumVideoCoverTools:(BOOL)arg0;
- (id)coverToolsInfoFilterKeys;
- (id)p_jsonStringEncoded:(id)arg0;
- (BOOL)isBackupCoverExisted;
- (void)storeBackupCoverOnDisk:(id)arg0 filePath:(id)arg1;
- (BOOL)isPublishDualAsImageAlum;
- (BOOL)isPublishCanvasAsImageAlbum;
- (void)setProductDetectModel:(id)arg0;
- (BOOL)shouldDisablePublishProgressView;
- (BOOL)shouldDisablePublishRetry;
- (void)setIsPublishDualAsImageAlum:(BOOL)arg0;
- (id)textForRequest;
- (BOOL)ignoreInsertAfterPublish;
- (void)setShareImImageForMultiProjects:(id)arg0;
- (BOOL)isParameterizedCreation;
- (BOOL)isSupportWaitRemoteVid;
- (id)flameStickerPublishInfo;
- (void)setUseNewVideoTitleCaption:(BOOL)arg0;
- (long long)slidesTypeOfLast;
- (void)setSlidesTypeOfLast:(long long)arg0;
- (void)setPublishChallengeTitle:(id)arg0;
- (void)setHasShowPublishChallenge:(BOOL)arg0;
- (void)setPublishChallengeSwitchStatus:(BOOL)arg0;
- (void)setPublishWithHotSpotTag:(BOOL)arg0;
- (BOOL)isSelectCoverModified:(id)arg0;
- (BOOL)isTitleModified:(id)arg0;
- (BOOL)isCaptionModified:(id)arg0;
- (BOOL)isCoverTextModified:(id)arg0;
- (BOOL)isHotSpotWordModified:(id)arg0;
- (BOOL)newCoverTittleCaption;
- (id)publishChallengeTitle;
- (BOOL)hasShowPublishChallenge;
- (BOOL)publishChallengeSwitchStatus;
- (void)setIsParameterizedCreation:(BOOL)arg0;
- (BOOL)firstFrameImageIsDowngraded;
- (id)dualCameraMinorImage;
- (void)setDualCameraMinorImage:(id)arg0;
- (BOOL)coverEditUseCustomFrame;
- (BOOL)publishWithHotSpotTag;
- (id)tosVideoCoverURI;
- (void)setTosVideoCoverURI:(id)arg0;
- (id)activityHashtagID;
- (void)setActivityHashtagID:(id)arg0;
- (void)setCropedCoverImagePathRelative:(id)arg0;
- (void)setUserDeclarationModel:(id)arg0;
- (id)recommendedAICoverTrackInfoWithCoverStartTime:(double)arg0;
- (id)p_isCoverText;
- (id)titleObserver;
- (void)validateSelectedUserDeclarationOption;
- (void)notifyTitleObserver;
- (id)p_coverTextServerTrackParams;
- (id)backupCoverPath;
- (void)setBackupCoverPath:(id)arg0;
- (id)p_getFirstHotSpotName:(id)arg0;
- (void)setTitleObserver:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)coverImage;
- (id)coverImagePath;
- (void)setCoverImagePath:(id)arg0;

@end
