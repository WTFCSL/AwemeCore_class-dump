//
//     Generated by private class-dump
//

@class NSString, YataEventModel, YataProtocolModel, UIView, NSDictionary, YataEventResponseObject;
@protocol YataRenderObjectInterface, YataInstanceInnerInterface;

@interface YataEventData : NSObject <YataBizEventData> {
    id /* block */ responseCompletion;
    YataEventModel *_event;
    NSString *_eventID;
    YataProtocolModel *_cachedProtocol;
    NSDictionary *_triggerParams;
    id<YataRenderObjectInterface> _renderObject;
    NSString *_triggerName;
    UIView *_activeView;
    YataEventResponseObject *_responseObject;
    id<YataInstanceInnerInterface> _yataInstance;
}

@property (copy, nonatomic) NSString *triggerName;
@property (retain, nonatomic) YataEventModel *event;
@property (weak, nonatomic) UIView *activeView;
@property (retain, nonatomic) YataProtocolModel *cachedProtocol;
@property (weak, nonatomic) id<YataRenderObjectInterface> renderObject;
@property (retain, nonatomic) NSDictionary *triggerParams;
@property (retain, nonatomic) YataEventResponseObject *responseObject;
@property (weak, nonatomic) id<YataInstanceInnerInterface> yataInstance;
@property (copy, nonatomic) NSString *eventID;
@property (readonly, nonatomic) NSDictionary *eventFields;
@property (copy, nonatomic) id /* block */ responseCompletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setResponseObject:(id)arg0;
- (id)triggerParams;
- (id)renderObject;
- (void)setRenderObject:(id)arg0;
- (id)yataInstance;
- (void)setYataInstance:(id)arg0;
- (id)cachedProtocol;
- (void)setTriggerParams:(id)arg0;
- (void)setCachedProtocol:(id)arg0;
- (id)initWithTriggerType:(id)arg0 eventModel:(id)arg1 eventID:(id)arg2 renderNode:(id)arg3 activeView:(id)arg4 cachedProtocol:(id)arg5 instance:(id)arg6;
- (void)setEvent:(id)arg0;
- (id)event;
- (void)setEventID:(id)arg0;
- (void).cxx_destruct;
- (id)eventID;
- (id)eventFields;
- (id)activeView;
- (void)setActiveView:(id)arg0;
- (id)triggerName;
- (void)setTriggerName:(id)arg0;
- (id /* block */)responseCompletion;
- (void)setResponseCompletion:(id /* block */)arg0;
- (id)responseObject;

@end
