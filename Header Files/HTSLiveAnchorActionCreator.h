//
//     Generated by private class-dump
//

@class IESLiveCountTimer, IESLiveRecordStateApi;
@protocol HTSLiveAnchorActions, IESLiveRoomService, HTSLiveMediaStreamEngine;

@interface HTSLiveAnchorActionCreator : NSObject {
    BOOL _resumeLiveOnAppDidActive;
    BOOL _hasPingPlayStateSucceed;
    id<IESLiveRoomService> _room;
    id<HTSLiveMediaStreamEngine> _engine;
    id<HTSLiveAnchorActions> _dispatcher;
    IESLiveCountTimer *_countTimer;
    IESLiveRecordStateApi *_stateApi;
}

@property (retain, nonatomic) id<HTSLiveAnchorActions> dispatcher;
@property (retain, nonatomic) IESLiveCountTimer *countTimer;
@property (nonatomic) BOOL resumeLiveOnAppDidActive;
@property (retain, nonatomic) IESLiveRecordStateApi *stateApi;
@property (nonatomic) BOOL hasPingPlayStateSucceed;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) id<HTSLiveMediaStreamEngine> engine;

- (void)setCountTimer:(id)arg0;
- (id)countTimer;
- (void)pauseLive;
- (void)stopLive;
- (void)startLive;
- (void)updateRoom;
- (void)liveWillAppear;
- (void)liveWillDisappear;
- (void)prepareForLive;
- (void)pauseLiveManually;
- (void)willStopLive;
- (void)setStateApi:(id)arg0;
- (void)cancelStateReport;
- (void)resumeLiveWithPlayingStatusManually;
- (id)stateApi;
- (void)__updateRemoteStatus:(long long)arg0;
- (void)scheduleStateReportWithImmediatelyFireTimer:(BOOL)arg0;
- (void)tryStopLiveWithReason:(long long)arg0;
- (void)forceStopWithReason:(long long)arg0;
- (void)setResumeLiveOnAppDidActive:(BOOL)arg0;
- (void)__updateRemoteStatus:(long long)arg0 reason:(long long)arg1 source:(unsigned long long)arg2;
- (void)reportPlayingStatus;
- (void)__updateRemoteStatus:(long long)arg0 reason:(long long)arg1 source:(unsigned long long)arg2 finished:(id /* block */)arg3;
- (BOOL)hasPingPlayStateSucceed;
- (void)setHasPingPlayStateSucceed:(BOOL)arg0;
- (void)closeRoomByDoubleCheckStatus:(long long)arg0 reason:(long long)arg1 source:(unsigned long long)arg2;
- (BOOL)resumeLiveOnAppDidActive;
- (void)liveForbid;
- (void)resumeLiveWithContext:(id)arg0;
- (void)stopLiveWithStreamError:(id)arg0;
- (void)closeRoomSilently;
- (void)restartRoom;
- (id)dispatcher;
- (void)setDispatcher:(id)arg0;
- (void).cxx_destruct;
- (id)engine;
- (void)dealloc;
- (void)setEngine:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;

@end
