//
//     Generated by private class-dump
//

@class NSString, NSTimer, UIImage, AWEVideoPublishViewModel, NSMutableArray, IESEffectModel;
@protocol ACCCameraService, ACCRecordFlowService, ACCRecordFrameSamplingHandlerDelegate, ACCRecordFrameSamplingServiceProtocol;

@interface ACCRecordFrameSamplingBaseHandler : NSObject <ACCCameraLifeCircleEvent, ACCRecordFrameSamplingHandlerProtocol, ACCEffectEvent> {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _samplingFramesLock;
    BOOL _running;
    id<ACCRecordFrameSamplingServiceProtocol> _frameSamplingContext;
    id<ACCCameraService> _cameraService;
    id<ACCRecordFlowService> _flowService;
    NSMutableArray *_samplingFrames;
    double _timeInterval;
    id<ACCRecordFrameSamplingHandlerDelegate> _delegate;
    NSTimer *_recordFramesTimer;
    double _nextCaptureTime;
}

@property (retain, nonatomic) NSTimer *recordFramesTimer;
@property (readonly, nonatomic) NSMutableArray *samplingFrames;
@property (nonatomic) double nextCaptureTime;
@property (readonly, weak, nonatomic) AWEVideoPublishViewModel *publishModel;
@property (readonly, weak, nonatomic) IESEffectModel *currentSticker;
@property (readonly, weak, nonatomic) UIImage *faceImage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<ACCRecordFrameSamplingServiceProtocol> frameSamplingContext;
@property (readonly, weak, nonatomic) id<ACCCameraService> cameraService;
@property (readonly, weak, nonatomic) id<ACCRecordFlowService> flowService;
@property (readonly, nonatomic) double timeInterval;
@property (readonly, nonatomic, getter=isRunning) BOOL running;
@property (weak, nonatomic) id<ACCRecordFrameSamplingHandlerDelegate> delegate;

- (id)publishModel;
- (BOOL)shouldHandle:(id)arg0;
- (id)cameraService;
- (id)flowService;
- (void)cameraService:(id)arg0 didChangeDuration:(double)arg1 totalDuration:(double)arg2;
- (id)samplingFrames;
- (void)onEffectMessageReceived:(id)arg0;
- (id)currentSticker;
- (void)configFlowService:(id)arg0;
- (void)startWithCameraService:(id)arg0 timeInterval:(double)arg1;
- (void)sampleFrame;
- (void)removeAllFrames;
- (void)saveBgPhotosForTakePicture;
- (id)multiAssetsPixaloopSelectedImages;
- (BOOL)p_shouldDisableTimer;
- (void)setNextCaptureTime:(double)arg0;
- (void)sampleFrameFromTimer:(BOOL)arg0;
- (void)setRecordFramesTimer:(id)arg0;
- (void)addFrameIfNeed:(id)arg0 atTime:(double)arg1 fromTimer:(BOOL)arg2;
- (BOOL)needAfterProcess;
- (id)frameSamplingContext;
- (id)preprocessFrame:(id)arg0;
- (void)p_addFrameIfNeed:(id)arg0;
- (void)saveHQVFrame:(id)arg0 atTime:(double)arg1;
- (id)recordFramesTimer;
- (void)prepareToSampleFrame;
- (void)firstSampling;
- (void)timedSampling;
- (void)samplingCompleted;
- (BOOL)enableHQVFrame;
- (double)nextCaptureTime;
- (void)configCameraService:(id)arg0 samplingContext:(id)arg1;
- (void)reduceSamplingFramesByThreshold:(unsigned long long)arg0;
- (id)mutableSamplingFrames;
- (id)immutableSamplingFrames;
- (void)sampleFrameForPixloop;
- (void)addFrameIfNeed:(id)arg0 atTime:(double)arg1;
- (BOOL)isRunning;
- (id)init;
- (double)timeInterval;
- (void).cxx_destruct;
- (void)stopTimer;
- (void)stop;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)faceImage;

@end
