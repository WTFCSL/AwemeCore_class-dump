//
//     Generated by private class-dump
//

@class LOTComposition, NSString, NSBundle, LOTCompositionContainer, NSNumber;
@protocol LOTAnimationDelegate;

@interface LOTAnimationView : UIView <CAAnimationDelegate> {
    LOTCompositionContainer *_compContainer;
    NSNumber *_playRangeStartFrame;
    NSNumber *_playRangeEndFrame;
    double _playRangeStartProgress;
    double _playRangeEndProgress;
    NSBundle *_bundle;
    double _animationProgress;
    BOOL _shouldRestoreStateWhenAttachedToWindow;
    id /* block */ _completionBlockToRestoreWhenAttachedToWindow;
    BOOL _isAnimationPlaying;
    BOOL _loopAnimation;
    BOOL _autoReverseAnimation;
    BOOL _cacheEnable;
    BOOL _shouldRasterizeWhenIdle;
    NSString *_animation;
    double _animationSpeed;
    id /* block */ _completionBlock;
    LOTComposition *_sceneModel;
    unsigned long long _repeatCount;
    id<LOTAnimationDelegate> _animationDelegate;
}

@property (retain, nonatomic) NSString *animation;
@property (readonly, nonatomic) BOOL isAnimationPlaying;
@property (nonatomic) BOOL loopAnimation;
@property (nonatomic) BOOL autoReverseAnimation;
@property (nonatomic) double animationProgress;
@property (nonatomic) double animationSpeed;
@property (readonly, nonatomic) double animationDuration;
@property (nonatomic) BOOL cacheEnable;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (retain, nonatomic) LOTComposition *sceneModel;
@property (nonatomic) BOOL shouldRasterizeWhenIdle;
@property (nonatomic) unsigned long long repeatCount;
@property (weak, nonatomic) id<LOTAnimationDelegate> animationDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)animationWithFilePath:(id)arg0;
+ (id)animationNamed:(id)arg0 inBundle:(id)arg1;
+ (id)animationFromJSON:(id)arg0;
+ (id)animationFromJSON:(id)arg0 inBundle:(id)arg1;
+ (id)awe_animationNamed:(id)arg0 inSearchBundleName:(id)arg1;
+ (id)live_animationWithName:(id)arg0;
+ (void)_aweLazyRegisterStaticLoad_Monitor;
+ (id)awe_studioAnimationNamed:(id)arg0;
+ (id)rtv_animationInBundleWithJSONName:(id)arg0;
+ (id)live_animationWithName:(id)arg0 enableCache:(BOOL)arg1;
+ (id)animationNamed:(id)arg0;

- (void)setAnimationNamed:(id)arg0 inBundle:(id)arg1;
- (void)setProgressWithFrame:(id)arg0;
- (void)setAnimationFromJSON:(id)arg0;
- (id)initWithModel:(id)arg0 inBundle:(id)arg1;
- (void)playFromProgress:(double)arg0 toProgress:(double)arg1 withCompletion:(id /* block */)arg2;
- (BOOL)isAnimationPlaying;
- (void)setAutoReverseAnimation:(BOOL)arg0;
- (void)setSceneModel:(id)arg0;
- (void)setCacheEnable:(BOOL)arg0;
- (BOOL)cacheEnable;
- (void)_initializeAnimationContainer;
- (void)_setupWithSceneModel:(id)arg0;
- (void)setAnimationNamed:(id)arg0;
- (void)_handleWillEnterForeground;
- (void)_handleWillEnterBackground;
- (void)_removeCurrentAnimationIfNecessary;
- (void)_callCompletionIfNecessary:(BOOL)arg0;
- (void)playFromFrame:(id)arg0 toFrame:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_handleWindowChanges:(BOOL)arg0;
- (id)_frameForProgress:(double)arg0;
- (double)_progressForFrame:(id)arg0;
- (void)setProgressWithFrame:(id)arg0 callCompletionIfNecessary:(BOOL)arg1;
- (void)_layoutAndForceUpdate;
- (id)keysForKeyPath:(id)arg0;
- (BOOL)_isSpeedNegative;
- (void)addSubview:(id)arg0 toKeypathLayer:(id)arg1;
- (void)maskSubview:(id)arg0 toKeypathLayer:(id)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 toKeypathLayer:(id)arg1;
- (void)setAnimationFromJSON:(id)arg0 inBundle:(id)arg1;
- (void)playToProgress:(double)arg0 withCompletion:(id /* block */)arg1;
- (void)playToFrame:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)forceDrawingUpdate;
- (void)setShouldRasterizeWhenIdle:(BOOL)arg0;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })arg0 toKeypathLayer:(id)arg1;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })arg0 fromKeypathLayer:(id)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 fromKeypathLayer:(id)arg1;
- (id)layerForKey:(id)arg0;
- (id)compositionLayers;
- (void)addSubview:(id)arg0 toLayerNamed:(id)arg1 applyTransform:(BOOL)arg2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 toLayerNamed:(id)arg1;
- (void)setValue:(id)arg0 forKeypath:(id)arg1 atFrame:(id)arg2;
- (void)logHierarchyKeypaths;
- (BOOL)autoReverseAnimation;
- (BOOL)shouldRasterizeWhenIdle;
- (void)setValueDelegate:(id)arg0 forKeypath:(id)arg1;
- (void)animation_monitor_animationDidStart:(id)arg0;
- (void)animation_monitor_animationDidStop:(id)arg0 finished:(BOOL)arg1;
- (void)_layout;
- (void)_commonInit;
- (unsigned long long)repeatCount;
- (void)setRepeatCount:(unsigned long long)arg0;
- (void)setContentMode:(long long)arg0;
- (void)animationDidStart:(id)arg0;
- (void).cxx_destruct;
- (id)animation;
- (double)animationDuration;
- (void)setAnimation:(id)arg0;
- (id /* block */)completionBlock;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)stop;
- (void)setCompletionBlock:(id /* block */)arg0;
- (void)didMoveToSuperview;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)didMoveToWindow;
- (id)initWithCoder:(id)arg0;
- (void)animationDidStop:(id)arg0 finished:(BOOL)arg1;
- (id)initWithContentsOfURL:(id)arg0;
- (void)layoutSubviews;
- (void)dealloc;
- (void)play;
- (void)willMoveToWindow:(id)arg0;
- (void)pause;
- (void)setAnimationSpeed:(double)arg0;
- (double)animationSpeed;
- (double)animationProgress;
- (void)setAnimationProgress:(double)arg0;
- (id)animationDelegate;
- (void)setAnimationDelegate:(id)arg0;
- (void)playWithCompletion:(id /* block */)arg0;
- (void)_restoreState;
- (id)sceneModel;
- (BOOL)loopAnimation;
- (void)setLoopAnimation:(BOOL)arg0;

@end
