//
//     Generated by private class-dump
//

@class UIViewController, NSMutableDictionary, AFDPiPController, AWEAwemeModel, NSArray, NSString, RTVFeedTracker;
@protocol RTVSettingsManager, RTVVoipStorageAreaInterface, RTVVoipSettingManagerInterface, RTVXRRoomSessionControllerInterface, RTVXRCaptureController, RTVXRMainViewController, RTVInteractionConfigureManagerInterface, RTVFeedContentController, RTVXRControllerInjector, RTVFeedManagerInterface, RxInjector, RTVXRStateRecorder, RTVStateMachineInterface;

@interface AWERTVFeedSharePIPController : NSObject <AFDPiPContextProvider, AFDPiPControllerDelegate, AWENowPlayingInfoPlayerProtocol, AFDPiPContentViewProtocol, RTVStateMachineDelegate, RTVXRControllerInterface, RTVFeedSharePIPControllerProtocol> {
    BOOL _willStop;
    BOOL _isActive;
    BOOL _needRestoreUserInterface;
    BOOL _isCall;
    BOOL _hasShownPiP;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVVoipSettingManagerInterface> _voipSettingsManager;
    id<RTVXRCaptureController> _captureController;
    id<RTVVoipStorageAreaInterface> _storage;
    id<RTVStateMachineInterface> _stateMachine;
    id<RTVInteractionConfigureManagerInterface> _interactionConfigMananger;
    RTVFeedTracker *_tracker;
    id<RTVSettingsManager> _settingManager;
    id<RTVXRStateRecorder> _stateRecorder;
    id<RTVFeedManagerInterface> _feedManager;
    id<RTVXRRoomSessionControllerInterface> _roomController;
    id /* block */ _PiPEventHandler;
    AFDPiPController *_PiPController;
    NSMutableDictionary *_nowPlayingInfo;
    UIViewController *_parentViewController;
    UIViewController<RTVFeedContentController> *_feedShareContentViewController;
    UIViewController<RTVXRMainViewController> *_mainVC;
    AWEAwemeModel *_currentModel;
    NSArray *_stateRecorderTokens;
    struct CGSize { double width; double height; } _feedContentVCOriginSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastFrame;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (retain, nonatomic) id<RTVVoipSettingManagerInterface> voipSettingsManager;
@property (readonly, weak, nonatomic) id<RTVXRCaptureController> captureController;
@property (readonly, nonatomic) id<RTVVoipStorageAreaInterface> storage;
@property (readonly, nonatomic) id<RTVStateMachineInterface> stateMachine;
@property (readonly, nonatomic) id<RTVInteractionConfigureManagerInterface> interactionConfigMananger;
@property (retain, nonatomic) RTVFeedTracker *tracker;
@property (retain, nonatomic) id<RTVSettingsManager> settingManager;
@property (weak, nonatomic) id<RTVXRStateRecorder> stateRecorder;
@property (retain, nonatomic) id<RTVFeedManagerInterface> feedManager;
@property (readonly, weak, nonatomic) id<RTVXRRoomSessionControllerInterface> roomController;
@property (copy, nonatomic) id /* block */ PiPEventHandler;
@property (retain, nonatomic) AFDPiPController *PiPController;
@property (retain, nonatomic) NSMutableDictionary *nowPlayingInfo;
@property (weak, nonatomic) UIViewController *parentViewController;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } lastFrame;
@property (nonatomic) BOOL willStop;
@property (weak, nonatomic) UIViewController<RTVFeedContentController> *feedShareContentViewController;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL needRestoreUserInterface;
@property (weak, nonatomic) UIViewController<RTVXRMainViewController> *mainVC;
@property (weak, nonatomic) AWEAwemeModel *currentModel;
@property (nonatomic) BOOL isCall;
@property (nonatomic) BOOL hasShownPiP;
@property (copy, nonatomic) NSArray *stateRecorderTokens;
@property (nonatomic) struct CGSize { double width; double height; } feedContentVCOriginSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)playForRemoteControl;
- (void)pauseForRemoteControl;
- (void)seekToTimeForRemoteControl:(double)arg0;
- (void)playPrevForRemoteControl;
- (void)playNextForRemoteControl;
- (BOOL)canPlayForRemoteControl;
- (BOOL)canPauseForRemoteControl;
- (BOOL)canPlayPrevForRemoteControl;
- (BOOL)canPlayNextForRemoteControl;
- (BOOL)canSeekForRemoteControl;
- (void)rtv_awakeFromControllerInjector;
- (long long)scaleModeForVideo;
- (void)playerIsPaused;
- (void)__addObserver;
- (BOOL)hasShownPiP;
- (void)setHasShownPiP:(BOOL)arg0;
- (BOOL)isSupportPiP;
- (void)handleAppDidBecomeActiveNotification:(id)arg0;
- (id)PiPController;
- (void)stopWaitingForAutomaticInlinePiP;
- (id)PiPContext;
- (void)registerPiPEventHandler:(id /* block */)arg0;
- (void)startWithVideoControllerChanged;
- (void)initializePiPIfNeed;
- (void)handleAppWillEnterForegroundNotification:(id)arg0;
- (void)setUpAudioSessionForPiPController:(id)arg0;
- (void)PiPControllerWillStartPiP:(id)arg0;
- (void)PiPControllerDidStartPiP:(id)arg0;
- (void)PiPController:(id)arg0 failedToStartPiPWithError:(id)arg1;
- (void)PiPControllerWillStopPiP:(id)arg0 restoreUserInterface:(BOOL)arg1;
- (void)PiPControllerDidStopPiP:(id)arg0 restoreUserInterface:(BOOL)arg1;
- (void)PiPController:(id)arg0 restoreUserInterfaceForPiPStopWithCompletionHandler:(id /* block */)arg1;
- (void)PiPController:(id)arg0 skipByInterval:(double)arg1 currentPlaybackTime:(double)arg2 duration:(double)arg3;
- (void)setPiPController:(id)arg0;
- (void)handleAppDidEnterBackgroundNotification:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })artworkRectForImage:(id)arg0;
- (id)cropImage:(id)arg0 withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)stopPiP;
- (id)getAwemeModel;
- (id)controllerInjector;
- (BOOL)shouldShowFeedTogetherPIP;
- (void)renderBusinessHandler:(id)arg0 context:(id)arg1;
- (BOOL)PIPSwitchIsOn;
- (id)interactionConfigMananger;
- (void)videoBeginPlayWithModel:(id)arg0;
- (void)playerStartPlay;
- (void)__log:(id)arg0;
- (id)roomController;
- (void)setFeedShareContentViewController:(id)arg0;
- (void)setNeedRestoreUserInterface:(BOOL)arg0;
- (BOOL)pipIsActive;
- (void)startPIP;
- (void)restoreFeedContentInterfaceWhilePiPStop;
- (id)stateRecorderTokens;
- (id)stateRecorder;
- (void)stateMachine:(id)arg0 didTransferFrom:(id)arg1 to:(id)arg2 context:(id)arg3;
- (void)setIsCall:(BOOL)arg0;
- (BOOL)isCall;
- (id)feedShareContentViewController;
- (id)mainVC;
- (double)__bottomPlaceholderHeight;
- (void)configRTCAudioSessionOptions;
- (void)audioSessionNotContainMixAndDuckWithForce:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })currentAwemeContentSize;
- (void)__updatePiPContentSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)currentAwemeIsPlaying;
- (BOOL)needRestoreUserInterface;
- (void)setPiPEventHandler:(id /* block */)arg0;
- (void)setFeedContentVCOriginSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setWillStop:(BOOL)arg0;
- (void)handlePipControllerCloseButtonAction;
- (void)updateNowPlayingInfoPlayback:(double)arg0;
- (struct CGSize { double x0; double x1; })feedContentVCOriginSize;
- (void)audioSessionContainMixAndDuck;
- (BOOL)__checkAudioSessionContainMixAndDuck;
- (BOOL)__checkAudioSessionContainMixOrDuck;
- (BOOL)shouldAdaptShowWithVideo:(id)arg0;
- (id)voipSettingsManager;
- (void)setVoipSettingsManager:(id)arg0;
- (void)setStateRecorder:(id)arg0;
- (void)setFeedManager:(id)arg0;
- (id /* block */)PiPEventHandler;
- (void)setMainVC:(id)arg0;
- (void)setStateRecorderTokens:(id)arg0;
- (id)nowPlayingInfo;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void)updateNowPlayingInfo;
- (void)viewDidAppear:(BOOL)arg0;
- (id)stateMachine;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (id)storage;
- (void)setCanStartPictureInPictureAutomaticallyFromInline:(BOOL)arg0;
- (id)injector;
- (id)captureController;
- (BOOL)isActive;
- (void)setNowPlayingInfo:(id)arg0;
- (double)videoDuration;
- (id)feedManager;
- (void)dealloc;
- (void)play;
- (void)viewDidLoad;
- (id)parentViewController;
- (void)setParentViewController:(id)arg0;
- (id)settingManager;
- (void)setSettingManager:(id)arg0;
- (void)setLastFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lastFrame;
- (void)setCurrentModel:(id)arg0;
- (id)currentModel;
- (void)invalidateContext;
- (BOOL)willStop;

@end
