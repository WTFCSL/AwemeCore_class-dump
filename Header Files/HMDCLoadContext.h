//
//     Generated by private class-dump
//

@class HMDCrashLoadModel, NSString, NSFileManager, HMDCrashLoadMeta, HMDCrashLoadBackgroundSession, NSURL, HMDCrashLoadReport;

@interface HMDCLoadContext : NSObject {
    struct HMDCLoadOption { struct { unsigned long long mask; } optionStatus; struct { BOOL enable; char *host; char *appID; BOOL keepLoadCrash; unsigned int keepLoadCrashIncludePreviousCrashCount; BOOL crashTrackerProcessFailed; } uploadOption; struct { BOOL dropCrashIfProcessFailed; } directoryOption; struct { BOOL lastTimeCrash; BOOL lastTimeLoadCrash; BOOL pendingCrashExist; BOOL trackerProcessFailedExist; BOOL loadProcessFailedExist; } urgentStatus; struct { unsigned int moveTrackerProcessFailedCount; unsigned int dropCrashIfProcessFailedCount; unsigned int processCrashFailedCount; } failureStatus; struct { struct { double beginTime; double endTime; } launch; struct { double beginTime; double endTime; } prepare; struct { double beginTime; double endTime; } directory; struct { double beginTime; double endTime; } environment; struct { double beginTime; double endTime; } detection; struct { double beginTime; double endTime; } process; struct { double beginTime; double endTime; } upload; struct { double beginTime; double endTime; } sync; struct { double beginTime; double endTime; } finish; struct { double beginTime; double endTime; } report; } timeProfile; struct { BOOL enableMirror; char *channel; unsigned int channelPriority; char *appName; unsigned int appNamePriority; char *installID; unsigned int installIDPriority; char *deviceID; unsigned int deviceIDPriority; char *userID; unsigned int userIDPriority; char *scopedDeviceID; unsigned int scopedDeviceIDPriority; char *scopedUserID; unsigned int scopedUserIDPriority; } userProfile; } _option;
    NSFileManager *_manager;
    NSString *_trackerLastTime;
    NSString *_trackerActive;
    NSString *_trackerProcessing;
    NSString *_loadSafeGuard;
    NSString *_loadPending;
    NSString *_loadProcessing;
    NSString *_loadPrepared;
    NSString *_loadMirror;
    NSString *_currentDirectory;
    HMDCrashLoadMeta *_meta;
    HMDCrashLoadModel *_model;
    NSString *_processPath;
    NSString *_processUUID;
    HMDCrashLoadBackgroundSession *_session;
    NSURL *_uploadingURL;
    NSString *_uploadingPath;
    NSString *_uploadingName;
    HMDCrashLoadReport *_report;
}

+ (id)contextWithOption:(struct HMDCLoadOption { struct { unsigned long long x0; } x0; struct { BOOL x0; char *x1; char *x2; BOOL x3; unsigned int x4; BOOL x5; } x1; struct { BOOL x0; } x2; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; } x3; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x4; struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; struct { double x0; double x1; } x2; struct { double x0; double x1; } x3; struct { double x0; double x1; } x4; struct { double x0; double x1; } x5; struct { double x0; double x1; } x6; struct { double x0; double x1; } x7; struct { double x0; double x1; } x8; struct { double x0; double x1; } x9; } x5; struct { BOOL x0; char *x1; unsigned int x2; char *x3; unsigned int x4; char *x5; unsigned int x6; char *x7; unsigned int x8; char *x9; unsigned int x10; char *x11; unsigned int x12; char *x13; unsigned int x14; } x6; } *)arg0;

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithOption:(struct HMDCLoadOption { struct { unsigned long long x0; } x0; struct { BOOL x0; char *x1; char *x2; BOOL x3; unsigned int x4; BOOL x5; } x1; struct { BOOL x0; } x2; struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; } x3; struct { unsigned int x0; unsigned int x1; unsigned int x2; } x4; struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; struct { double x0; double x1; } x2; struct { double x0; double x1; } x3; struct { double x0; double x1; } x4; struct { double x0; double x1; } x5; struct { double x0; double x1; } x6; struct { double x0; double x1; } x7; struct { double x0; double x1; } x8; struct { double x0; double x1; } x9; } x5; struct { BOOL x0; char *x1; unsigned int x2; char *x3; unsigned int x4; char *x5; unsigned int x6; char *x7; unsigned int x8; char *x9; unsigned int x10; char *x11; unsigned int x12; char *x13; unsigned int x14; } x6; } *)arg0;

@end
