//
//     Generated by private class-dump
//

@class IESMMEffectStickerInfo, IESMMCanvasGroup, IESGLAddEdgeFilter, IESEffectVideoAnimatedRenderer, NSMutableArray, NSString, IESMediaInfo, HTSGLTransformFilter, HTSFilterInterface, VEConfigData, HTSGLFilterGroup, IESImageAnimationStickerFilter, HTSGLCropFilter, VEGLCicleFilter, HTSGLContext, HTSLensHdrFilter, HTSGLFilterInput, IESMMMVModel, HTSGLFilter, IESMMStoryImageGroup, IESTrackInfosManager, IESFiltersManager, HTSVideoData, HTSRawDataOutputRender, IESVideoAddEdgeData, HTSGLPicture;
@protocol IESVideoEngineEffectProtocol, IESMMEffectGroupProtocol, IVEEffectPublicProtocol, IVEEffectAlgorithmProtocol, IVEReverseProtocol, HTSGLInput;

@interface VEEffectProcess : VEUnitObject <IVEEffectProcess> {
    BOOL _bUseFilter;
    BOOL _disableEdgeBeforeStickerJudge;
    BOOL _needResetFilter;
    BOOL _enablePhotoTransManager;
    BOOL _switchStatus;
    BOOL _enableEndingWaterMarkFilter;
    BOOL _encodeUseFenceRender;
    BOOL _useEdgeBeforeSticker;
    BOOL _enableSkipEffectProcess;
    HTSGLFilter *_waterMarkFilter;
    HTSGLFilterInput *_input;
    HTSGLFilter<IESVideoEngineEffectProtocol> *_engineFilter;
    IESMMEffectStickerInfo *_currentPerformEffectInfo;
    IESMMMVModel *_mvModel;
    IESVideoAddEdgeData *_edgeBeforeSticker;
    id<IVEReverseProtocol> _reverseUnit;
    IESMMEffectStickerInfo *_globalEffectGroupInfo;
    double _skipEffectPropertionForExport;
    NSString *_route;
    id /* block */ _imageBlock;
    id /* block */ _canvasObservableEvent;
    id /* block */ _stickerRecoverEvent;
    id /* block */ faceDetectEvent;
    HTSGLContext *_context;
    HTSRawDataOutputRender *_dataOutput;
    HTSGLFilter *_filter;
    IESGLAddEdgeFilter *_addEdgeFilter;
    IESGLAddEdgeFilter *_beforeStickerAddEdgeFilter;
    HTSGLCropFilter *_cropFilter;
    HTSGLTransformFilter *_transformFilter;
    VEGLCicleFilter *_circleFilter;
    NSMutableArray *_filterArray;
    unsigned long long _fillMode;
    IESImageAnimationStickerFilter *_stickerAnimationFilter;
    HTSGLFilterGroup<IESMMEffectGroupProtocol> *_rdEffectFilter;
    HTSGLFilterGroup<IESMMEffectGroupProtocol> *_effectFilter;
    IESMMCanvasGroup *_canvasGroup;
    IESEffectVideoAnimatedRenderer *_videoAnimatedRenderer;
    NSString *_colorFilterPath;
    HTSLensHdrFilter *_lensHdrFilter;
    IESMMStoryImageGroup *_storyImageFilter;
    HTSGLPicture *_storySourceImageFilter;
    HTSFilterInterface<HTSGLInput> *_lastFilter;
    long long _processScene;
    NSMutableArray *_brushIDArray;
    NSString *_letterInfo;
    HTSVideoData *_videoData;
    id /* block */ _stickerStatusBlock;
    VEConfigData *_configData;
    IESMediaInfo *_mediaInfo;
    IESFiltersManager *_filtersManager;
    IESTrackInfosManager *_tracksManager;
    NSMutableArray *_stickers;
    long long _errorFrameCount;
    unsigned long long _count;
    unsigned long long _skipEffectCount;
    struct CGSize { double width; double height; } _previewSize;
    struct CGSize { double width; double height; } _inputVideoSize;
    struct CGSize { double width; double height; } _outputVideoSize;
    struct CGSize { double width; double height; } _viewContainerSize;
    struct CGSize { double width; double height; } _storyFrameSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _frameTime;
}

@property (retain, nonatomic) HTSGLContext *context;
@property (retain, nonatomic) HTSRawDataOutputRender *dataOutput;
@property (retain, nonatomic) HTSGLFilter *filter;
@property (retain, nonatomic) IESGLAddEdgeFilter *addEdgeFilter;
@property (retain, nonatomic) IESGLAddEdgeFilter *beforeStickerAddEdgeFilter;
@property (retain, nonatomic) HTSGLCropFilter *cropFilter;
@property (retain, nonatomic) HTSGLTransformFilter *transformFilter;
@property (retain, nonatomic) VEGLCicleFilter *circleFilter;
@property (retain, nonatomic) NSMutableArray *filterArray;
@property (nonatomic) struct CGSize { double width; double height; } inputVideoSize;
@property (nonatomic) struct CGSize { double width; double height; } outputVideoSize;
@property (nonatomic) struct CGSize { double width; double height; } viewContainerSize;
@property (nonatomic) unsigned long long fillMode;
@property (retain, nonatomic) IESImageAnimationStickerFilter *stickerAnimationFilter;
@property (nonatomic) BOOL enablePhotoTransManager;
@property (retain, nonatomic) HTSGLFilterGroup<IESMMEffectGroupProtocol> *rdEffectFilter;
@property (retain, nonatomic) HTSGLFilterGroup<IESMMEffectGroupProtocol> *effectFilter;
@property (retain, nonatomic) IESMMCanvasGroup *canvasGroup;
@property (retain, nonatomic) IESEffectVideoAnimatedRenderer *videoAnimatedRenderer;
@property (copy, nonatomic) NSString *colorFilterPath;
@property (nonatomic) BOOL switchStatus;
@property (nonatomic) BOOL enableEndingWaterMarkFilter;
@property (retain, nonatomic) HTSLensHdrFilter *lensHdrFilter;
@property (retain, nonatomic) IESMMStoryImageGroup *storyImageFilter;
@property (retain, nonatomic) HTSGLPicture *storySourceImageFilter;
@property (retain, nonatomic) HTSFilterInterface<HTSGLInput> *lastFilter;
@property (nonatomic) struct CGSize { double width; double height; } storyFrameSize;
@property (nonatomic) long long processScene;
@property (retain, nonatomic) NSMutableArray *brushIDArray;
@property (retain, nonatomic) NSString *letterInfo;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (copy, nonatomic) id /* block */ stickerStatusBlock;
@property (retain, nonatomic) VEConfigData *configData;
@property (nonatomic) BOOL encodeUseFenceRender;
@property (nonatomic) BOOL useEdgeBeforeSticker;
@property (nonatomic) BOOL disableEdgeBeforeStickerJudge;
@property (retain, nonatomic) IESMediaInfo *mediaInfo;
@property (retain, nonatomic) IESFiltersManager *filtersManager;
@property (retain, nonatomic) IESTrackInfosManager *tracksManager;
@property (retain, nonatomic) NSMutableArray *stickers;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } frameTime;
@property (nonatomic) long long errorFrameCount;
@property (nonatomic) BOOL enableSkipEffectProcess;
@property (nonatomic) unsigned long long count;
@property (nonatomic) unsigned long long skipEffectCount;
@property (retain, nonatomic) HTSGLFilter *waterMarkFilter;
@property (retain, nonatomic) HTSGLFilterInput *input;
@property (retain, nonatomic) HTSGLFilter<IESVideoEngineEffectProtocol> *engineFilter;
@property (nonatomic) BOOL bUseFilter;
@property (readonly, nonatomic) struct CGSize { double width; double height; } previewSize;
@property (retain, nonatomic) IESMMEffectStickerInfo *globalEffectGroupInfo;
@property (retain, nonatomic) IESMMEffectStickerInfo *currentPerformEffectInfo;
@property (retain, nonatomic) IESMMMVModel *mvModel;
@property (retain, nonatomic) id<IVEReverseProtocol> reverseUnit;
@property (nonatomic) BOOL needResetFilter;
@property (copy, nonatomic) id /* block */ canvasObservableEvent;
@property (copy, nonatomic) id /* block */ stickerRecoverEvent;
@property (copy, nonatomic) id /* block */ faceDetectEvent;
@property (nonatomic) double skipEffectPropertionForExport;
@property (retain, nonatomic) NSString *route;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<IVEEffectAlgorithmProtocol> algorithmImp;
@property (readonly, nonatomic) id<IVEEffectPublicProtocol> effectImp;
@property (copy, nonatomic) id /* block */ imageBlock;
@property (retain, nonatomic) IESVideoAddEdgeData *edgeBeforeSticker;
@property (copy, nonatomic) id /* block */ effectBitmapRequestBlock;
@property (copy, nonatomic) id /* block */ messageHandler;

+ (id)effectProcessWithVideoData:(id)arg0;
+ (id)effectProcessWithVideoData:(id)arg0 mvModel:(id)arg1 withEditorSession:(id)arg2 externalControlEditorSession:(id)arg3;
+ (id)effectProcessWithVideoData:(id)arg0 mvModel:(id)arg1 withEditorSession:(id)arg2 externalControlEditorSession:(id)arg3 configData:(id)arg4;
+ (id)effectProcessWithVideoData:(id)arg0 mvModel:(id)arg1 withEditorSession:(id)arg2;
+ (id)effectProcessWithVideoData:(id)arg0 mvModel:(id)arg1;

- (id)effectFilter;
- (id /* block */)effectBitmapRequestBlock;
- (void)setEffectBitmapRequestBlock:(id /* block */)arg0;
- (void)setRenderCacheStringByKey:(id)arg0 value:(id)arg1;
- (int)switchColorFilterIntensity:(id)arg0 inFilterPath:(id)arg1 inPosition:(float)arg2 inLeftIntensity:(float)arg3 inRightIntensity:(float)arg4;
- (int)setColorFilterIntensity:(id)arg0 inIntensity:(float)arg1;
- (BOOL)getColorFilterIntensity:(id)arg0 outIntensity:(float *)arg1;
- (BOOL)updateComposerNode:(id)arg0 key:(id)arg1 value:(double)arg2;
- (BOOL)updateMutipleComposerNodes:(id)arg0 keys:(id)arg1 values:(id)arg2;
- (float)getValueForComposerNode:(id)arg0 key:(id)arg1;
- (id)getCurrentComposerNodes;
- (id)judgeComposerPriority:(id)arg0 oldNodePath:(id)arg1 tag:(id)arg2;
- (id)judgeComposerPriority:(id)arg0 tag:(id)arg1;
- (BOOL)dumpComposerNodes:(id)arg0;
- (BOOL)setMaleMakeupState:(BOOL)arg0;
- (void)removeStickerWithKey:(id)arg0;
- (BOOL)handleTouchDown:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handleTouchUp:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handlePanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 location:(struct CGPoint { double x0; double x1; })arg1;
- (BOOL)handleLongPressEventWithLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)handleScaleEvent:(double)arg0;
- (BOOL)toggleGestureRecognition:(BOOL)arg0 type:(int)arg1;
- (void)sendMessageToEffect:(id)arg0;
- (void)bef_effect_clear_event;
- (long long)effectTextLimit;
- (void)setEffectText:(id)arg0 arg1:(int)arg1 arg2:(int)arg2 arg3:(const char *)arg3;
- (void)setInputKeyboardHide:(BOOL)arg0;
- (id)getEffectTextArray;
- (id /* block */)stickerStatusBlock;
- (void)setStickerStatusBlock:(id /* block */)arg0;
- (int)setStickerPreviewMode:(long long)arg0 previewMode:(int)arg1;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSizeNormaliz:(long long)arg0;
- (id)getInfoStickers;
- (struct CGPoint { double x0; double x1; })transStickerOffsetToNormaliz:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSize:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getstickerEditBoundBox:(long long)arg0;
- (struct CGSize { double x0; double x1; })getInfoStickerSize:(long long)arg0;
- (double)getStickerRotation:(long long)arg0;
- (struct CGPoint { double x0; double x1; })getStickerPosition:(long long)arg0;
- (BOOL)getStickerVisible:(long long)arg0;
- (BOOL)isInfoStickerOutOfBounds;
- (void)cancelPin:(long long)arg0;
- (long long)getStickerPinStatus:(long long)arg0;
- (id)getTemplateStickerTextParams:(long long)arg0;
- (BOOL)isAnimationSticker:(long long)arg0;
- (void)startChangeStickerDuration:(long long)arg0;
- (void)stopChangeStickerDuration:(long long)arg0;
- (void)setInfoStickerRestoreMode:(long long)arg0;
- (void)updateSticker:(long long)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (long long)addBrushSticker:(id)arg0 params:(id)arg1;
- (void)setSticker:(long long)arg0 startTime:(double)arg1 duration:(double)arg2;
- (int)updateBrushSticker:(long long)arg0 param:(id)arg1;
- (void)removeInfoSticker:(long long)arg0;
- (void)setRenderCacheTextureByKey:(id)arg0 value:(id)arg1;
- (long long)addInfoSticker:(id)arg0 withEffectInfo:(id)arg1 userInfo:(id)arg2;
- (void)setStickerNormaliz:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2;
- (void)setStickerAngle:(long long)arg0 angle:(double)arg1;
- (void)setStickerScale:(long long)arg0 scale:(double)arg1;
- (void)setSticker:(long long)arg0 flipX:(BOOL)arg1 flipY:(BOOL)arg2;
- (void)setSticker:(long long)arg0 alpha:(double)arg1;
- (long long)addStickerbyUIImage:(id)arg0 letterInfo:(id)arg1;
- (long long)addTextStickerWithUserInfo:(id)arg0;
- (int)setTextStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (long long)addSubtitleSticker;
- (void)setSrtInfo:(long long)arg0 srt:(id)arg1;
- (void)setSrtFont:(long long)arg0 fontPath:(id)arg1;
- (void)setSrtColor:(long long)arg0 red:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)setSrtAudioInfo:(long long)arg0 seqIn:(double)arg1 trimIn:(double)arg2 duration:(double)arg3 audioCycle:(BOOL)arg4;
- (unsigned long long)addTemplateWithResourcePath:(id)arg0 dependResourceParams:(id)arg1;
- (int)setTemplateStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (int)setStickerAnim:(long long)arg0 animType:(int)arg1 animPath:(id)arg2 duration:(double)arg3;
- (void)setImageBlock:(id /* block */)arg0;
- (id)getBrushSticker:(long long)arg0 bboxCalculatedByPixel:(BOOL)arg1;
- (BOOL)brushStart;
- (BOOL)brushEnd;
- (void)removeLastBrush;
- (void)setBrushColorWithRed:(double)arg0 green:(double)arg1 blue:(double)arg2 alpah:(double)arg3;
- (void)setBrushCanvasAlpha:(double)arg0;
- (void)setBrushSize:(double)arg0;
- (long long)currentBrushNumber;
- (id /* block */)imageBlock;
- (long long)addEmojiSticker:(id)arg0;
- (BOOL)setStickerAnim:(long long)arg0 type:(int)arg1 key:(id)arg2 val:(id)arg3;
- (id)getStickerById:(long long)arg0;
- (void)setSticker:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2;
- (void)setStickerRelativeScale:(long long)arg0 scale:(double)arg1;
- (void)recoveryPinResult:(long long)arg0;
- (void)recoveryPinResult:(long long)arg0 withPinData:(id)arg1;
- (void)setEffectSrtData:(const struct IESSrtDdata { struct IESSrtLine *x0; int x1; } *)arg0;
- (void)setEffectFontPath:(id)arg0 faceIndex:(long long)arg1;
- (void)setEffectGenBitmap:(id /* block */)arg0 utf32Gen:(id /* block */)arg1;
- (void)setStickerAddBlock:(id /* block */)arg0;
- (long long)addTextSticker;
- (id)getInfoStickerTemplateParams:(id)arg0;
- (int)setPinSelectedArea:(long long)arg0 areaParams:(id)arg1;
- (id)getPinResult:(long long)arg0;
- (void)setAlgorithmReplayMmode:(long long)arg0 filePath:(id)arg1;
- (BOOL)setSafeAreas:(id)arg0 type:(long long)arg1;
- (BOOL)updateTouchInfoForRecognition:(struct _VETouchInfo { unsigned int x0; struct CGPoint { double x0; double x1; } x1; float x2; float x3; int x4; long long x5; })arg0;
- (BOOL)isTouchGestureRecognitionEnabled:(int)arg0;
- (void)setRenderCacheTextureWithBufferByKey:(id)arg0 value:(id)arg1;
- (void)setRenderCacheTextureOrientationByKey:(id)arg0 value:(long long)arg1;
- (void)setRenderCacheIntValueByKey:(id)arg0 value:(int)arg1;
- (void)readdInfoSticker:(long long)arg0 path:(id)arg1;
- (void)setSticker:(long long)arg0 pauseAnimation:(BOOL)arg1;
- (void)setStickerAbove:(long long)arg0;
- (void)getSticker:(long long)arg0 props:(id)arg1;
- (struct CGSize { double x0; double x1; })getStickerCanvasSize;
- (void)setStickerSizeNeedChangeBlock:(id /* block */)arg0;
- (void)setSrtManipulate:(long long)arg0 state:(BOOL)arg1;
- (void)setSrtInitialPos:(long long)arg0 posX:(double)arg1 posY:(double)arg2;
- (void)saveSrtInitialPos:(long long)arg0 posX:(double)arg1 posY:(double)arg2;
- (void)getSrtOffset:(long long)arg0 offsetX:(float *)arg1 offsetY:(float *)arg2;
- (void)preparePin:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (int)startPin:(long long)arg0 pinTime:(float)arg1 startTime:(float)arg2 duration:(float)arg3;
- (void)stopPin:(long long)arg0;
- (void)savePinResult:(long long)arg0;
- (void)clearStickerPinResult:(long long)arg0;
- (id)videoData;
- (void)setVideoData:(id)arg0;
- (BOOL)operateComposerNodesWithTags:(id)arg0 operation:(long long)arg1;
- (void)addFeature:(id)arg0 forAsset:(id)arg1;
- (void)deleteFeature:(id)arg0 forAsset:(id)arg1;
- (void)updateFeature:(id)arg0 forAsset:(id)arg1;
- (void)replaceFeature:(id)arg0 oldFeature:(id)arg1 forAsset:(id)arg2;
- (void)addFrameExtractDriver:(id)arg0 forAsset:(id)arg1;
- (void)setEffectLoadStatusBlock:(id /* block */)arg0;
- (int)applyEffectWithInfo:(id)arg0 type:(long long)arg1;
- (void)setConfigData:(id)arg0;
- (id)configData;
- (BOOL)switchStatus;
- (void)setSwitchStatus:(BOOL)arg0;
- (void)setPreviewFillMode:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })getNewFrameSize;
- (int)applyLensOneKeyHdrDetect;
- (id)getAllKeyFramesAtPts:(unsigned long long)arg0;
- (void)commitAllKeyFrame;
- (void)applyEffectIntensity:(struct IESIndensityParam_t { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; float x27; float x28; float x29; float x30; float x31; float x32; })arg0 type:(long long)arg1;
- (int)applyLensHdrWithPath:(id)arg0;
- (int)applyLensOneKeyHdrInfo:(id)arg0;
- (int)applyFilterWithPath:(id)arg0;
- (void)updateVideoTextureVertices:(id)arg0 forKey:(id)arg1;
- (void)transformSource:(id)arg0 source:(id)arg1;
- (void)refreshCanvasGroupsWithKey:(id)arg0 config:(id)arg1;
- (void)updateAssetBlendMode:(id)arg0 blendMode:(id)arg1;
- (void)updateAssetAnimateInfo:(id)arg0 animateInfo:(id)arg1;
- (void)setKeyFrameCallBack:(id /* block */)arg0;
- (void)setStickerRecoverEvent:(id /* block */)arg0;
- (id)getProcessMD5;
- (void)setPhotoMovieTransShowDuration:(double)arg0;
- (id /* block */)stickerRecoverEvent;
- (void)setVideoAnimatedRenderer:(id)arg0;
- (id)engineFilter;
- (void)setEngineFilter:(id)arg0;
- (id)colorFilterPath;
- (void)setColorFilterPath:(id)arg0;
- (BOOL)appendSegmentedComposerTimeRange:(id)arg0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (id /* block */)canvasObservableEvent;
- (id)videoAnimatedRenderer;
- (id)getSegmentedComposerTimeRange:(id)arg0;
- (void)updateColorInfo:(id)arg0;
- (void)CancelMattingDetect:(id)arg0;
- (void)updateSubTrackAssetLayer:(id)arg0 layer:(long long)arg1;
- (BOOL)replaceComposerNodesWithTags:(id)arg0 old:(id)arg1;
- (BOOL)operateSegmentedComposer:(id)arg0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1 action:(id)arg2 forceDetect:(BOOL)arg3;
- (BOOL)removeSegmentedComposerTimeRange:(id)arg0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (id)getAllSegmentedComposerTimeRange;
- (id)getSegmentedComposerQueueAtTime:(id)arg0 atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (id)getSegmentedComposerQueue:(id)arg0;
- (id)getAllSegmentedComposerQueue;
- (void)setCanvasObservableEvent:(id /* block */)arg0;
- (id /* block */)faceDetectEvent;
- (void)setFaceDetectEvent:(id /* block */)arg0;
- (void)setAddEdgeInfo:(id)arg0;
- (void)setenableLensHdr2Sdr:(BOOL)arg0;
- (void)applyStabFilter:(id)arg0 videoAsset:(id)arg1;
- (id)applyEffectPath:(id)arg0 withTime:(double)arg1 duration:(double)arg2;
- (void)getCurrentPlayImageAsset:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)rebuildCanvasGroups;
- (id)algorithmImp;
- (id)getMVExportData;
- (void)setEffectFilter:(id)arg0;
- (void)setEncodeUseFenceRender:(BOOL)arg0;
- (BOOL)encodeUseFenceRender;
- (void)setTargetVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (id)mvModel;
- (void)setMvModel:(id)arg0;
- (id)initWithMVModel:(id)arg0 context:(id)arg1;
- (void)changeGetAudioTimeCallBack:(BOOL)arg0;
- (BOOL)bUseFilter;
- (void)resetTargetVideoSize;
- (void)resetScene:(long long)arg0;
- (void)setDPSMode:(BOOL)arg0 with:(BOOL)arg1;
- (void)setFilterArray:(id)arg0;
- (void)setProcessScene:(long long)arg0;
- (void)setCurrentPerformEffectInfo:(id)arg0;
- (void)setBrushIDArray:(id)arg0;
- (id)waterMarkFilter;
- (void)resetFilters;
- (id)currentPerformEffectInfo;
- (id)filtersManager;
- (void)setNeedResetFilter:(BOOL)arg0;
- (id)storyImageFilter;
- (id)createOrGetEffectFilter;
- (id)filterArray;
- (id)p_getEffectGroupFromFilterChain;
- (id)lensHdrFilter;
- (void)setLensHdrFilter:(id)arg0;
- (void)checkLVEffectPathBlock;
- (id)globalEffectGroupInfo;
- (void)setOutputVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (void)updateVideoSize;
- (void)updatePreviewSizeByVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (id)addEdgeFilter;
- (void)setCropFilter:(id)arg0;
- (void)enableAddEdgeFilter:(id)arg0;
- (void)setAddEdgeFilter:(id)arg0;
- (void)setTransformFilter:(id)arg0;
- (void)enableTransformFilter:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (id)transformFilter;
- (id)stickerAnimationFilter;
- (void)setStickerAnimationFilter:(id)arg0;
- (id)createOrGetEngineFilter;
- (BOOL)enableEndingWaterMarkFilter;
- (id)cropFilter;
- (id)circleFilter;
- (id)beforeStickerAddEdgeFilter;
- (void)setLetterInfo:(id)arg0;
- (void)setEnablePhotoTransManager:(BOOL)arg0;
- (void)setEnableEndingWaterMarkFilter:(BOOL)arg0;
- (void)setRdEffectFilter:(id)arg0;
- (void)setBUseFilter:(BOOL)arg0;
- (void)setLastFilter:(id)arg0;
- (id)storySourceImageFilter;
- (id)rdEffectFilter;
- (id)canvasGroup;
- (void)setUseEdgeBeforeSticker:(BOOL)arg0;
- (long long)processScene;
- (void)selectTargetType:(id)arg0 sampleData:(id)arg1;
- (BOOL)processNewPlayerSampleData:(id)arg0;
- (void)processPixelBuf:(struct __CVBuffer { } *)arg0 frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 realFramePts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2 sampleData:(id)arg3;
- (void)setEnableSkipEffectProcess:(BOOL)arg0;
- (void)setDataOutput:(id)arg0;
- (void)setStoryFrameSize:(struct CGSize { double x0; double x1; })arg0;
- (void)switchPhotoMovieTransition:(long long)arg0;
- (void)setStoryImageFilterForPreview:(id)arg0;
- (struct CGSize { double x0; double x1; })storyFrameSize;
- (void)restoreInfoSticker:(id)arg0;
- (void)setFiltersManager:(id)arg0;
- (void)setTracksManager:(id)arg0;
- (void)p_updateLVFiltersMananager;
- (void)p_recoveryRecordData;
- (void)updateMatingFilter;
- (void)CreateCanvasGroupIfNeed;
- (BOOL)StartMattingDetect:(id)arg0 mattingInfo:(id)arg1;
- (void)setCanvasGroup:(id)arg0;
- (void)updateCanvasGroupWithKey:(id)arg0 config:(id)arg1;
- (void)setEdgeBeforeSticker:(id)arg0;
- (void)updateAssetFeature:(id)arg0 add:(id)arg1 delete:(id)arg2 update:(id)arg3;
- (long long)featureIndex:(id)arg0 inAsset:(id)arg1 inArray:(id)arg2;
- (void)setStoryImageFilter:(id)arg0;
- (void)setStorySourceImageFilter:(id)arg0;
- (id)lastFilter;
- (id)brushIDArray;
- (id)letterInfo;
- (void)p_setSrtInitialPos:(long long)arg0 posX:(double)arg1 posY:(double)arg2 needsNormalization:(BOOL)arg3;
- (void)processDownStream:(id)arg0;
- (void)setSkipEffectPropertionForExport:(double)arg0;
- (id)tracksManager;
- (BOOL)enableSkipEffectProcess;
- (long long)errorFrameCount;
- (void)setErrorFrameCount:(long long)arg0;
- (void)setTransformData:(id)arg0;
- (int)switchFilterWithPathOne:(id)arg0 PathTwo:(id)arg1 direction:(long long)arg2 progress:(double)arg3;
- (int)startEffectWithPathId:(id)arg0 startTime:(double)arg1 performTime:(double)arg2;
- (void)stopEffectStartTime:(double)arg0;
- (void)applyEffectPathId:(id)arg0 withTime:(double)arg1 endTime:(double)arg2;
- (void)removeEffectWithPath:(id)arg0;
- (void)removeAllEffect;
- (void)updateEffectContext:(id)arg0 forAsset:(id)arg1;
- (void)setGetAudioTimeCallback:(id /* block */)arg0;
- (id)effectImp;
- (id)edgeBeforeSticker;
- (BOOL)setConfig:(id)arg0 updateVideoDataType:(long long)arg1;
- (void)setRecordEffectFilter:(id)arg0;
- (void)setEndingWaterMark:(BOOL)arg0 waterImage:(id)arg1 gaussImage:(id)arg2;
- (void)setEndingWaterMarkIntensity:(double)arg0;
- (void)setEndingGaussIntensity:(double)arg0;
- (void)processStoryImageFilterWithCompleteBlock:(id /* block */)arg0;
- (void)setdisableEdgeBeforeStickerJudge:(BOOL)arg0;
- (void)setWaterMarkFilter:(id)arg0;
- (void)setGlobalEffectGroupInfo:(id)arg0;
- (id)reverseUnit;
- (void)setReverseUnit:(id)arg0;
- (BOOL)needResetFilter;
- (double)skipEffectPropertionForExport;
- (void)updatePlayerStatus:(int)arg0;
- (void)enableCropFilter:(id)arg0;
- (BOOL)disableEdgeBeforeStickerJudge;
- (void)setDisableEdgeBeforeStickerJudge:(BOOL)arg0;
- (void)setBeforeStickerAddEdgeFilter:(id)arg0;
- (void)setCircleFilter:(id)arg0;
- (struct CGSize { double x0; double x1; })viewContainerSize;
- (void)setViewContainerSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)enablePhotoTransManager;
- (BOOL)useEdgeBeforeSticker;
- (unsigned long long)skipEffectCount;
- (void)setSkipEffectCount:(unsigned long long)arg0;
- (BOOL)processSampleData:(id)arg0;
- (id /* block */)messageHandler;
- (void)setCount:(unsigned long long)arg0;
- (void)setFillMode:(unsigned long long)arg0;
- (void)setFilter:(id)arg0;
- (id)init;
- (unsigned long long)fillMode;
- (id)filter;
- (BOOL)setConfig:(id)arg0;
- (id)input;
- (void)active;
- (void).cxx_destruct;
- (void)setInput:(id)arg0;
- (id)route;
- (void)setContext:(id)arg0;
- (void)inactive;
- (BOOL)handleTouchEvent:(struct CGPoint { double x0; double x1; })arg0;
- (void)setRoute:(id)arg0;
- (unsigned long long)count;
- (void)setMessageHandler:(id /* block */)arg0;
- (id)context;
- (void)dealloc;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (struct CGSize { double x0; double x1; })previewSize;
- (void)setPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setInputLanguage:(id)arg0;
- (id)stickers;
- (void)addSticker:(id)arg0;
- (id)dataOutput;
- (struct CGSize { double x0; double x1; })outputVideoSize;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })frameTime;
- (void)setFrameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)resetTargets;
- (BOOL)handleRotationEvent:(double)arg0;
- (struct CGSize { double x0; double x1; })inputVideoSize;
- (void)setInputVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (id)mediaInfo;
- (void)setMediaInfo:(id)arg0;
- (void)setCropInfo:(id)arg0;
- (void)setStickers:(id)arg0;

@end
