//
//     Generated by private class-dump
//

@class NSMutableDictionary, __end_cap_, CADisplayLink, __end_;

@interface AWEPerfFPSMonitor : NSObject {
    CADisplayLink *displayLink;
    BOOL supportsTargetTimestamp;
    BOOL supportsDynamicFrameRate;
    unsigned long long anrCount;
    double anrDuration;
    BOOL anrIsTrackingMode;
    BOOL anrMonitoringEnabled;
    struct { double duration; double hitchDuration; unsigned char drop; unsigned char jank; } lastFrame;
    BOOL lastTrackingMode;
    double lastTimestamp;
    double last2ndTimestamp;
    double last3rdTimestamp;
    double last4thTimestamp;
    double lastTargetTimestamp;
    double lastVSyncInterval;
    struct vector<AWEPerfFPSRecord *, std::allocator<AWEPerfFPSRecord *>> { __end_ **__begin_; __end_cap_ **x0; struct __compressed_pair<AWEPerfFPSRecord *__strong *, std::allocator<AWEPerfFPSRecord *>> { id *__value_; } x1; } activeRecords;
    NSMutableDictionary *keyedRecords;
    NSMutableDictionary *hitchTimestampDict;
    BOOL trackHitchTimestamp;
    BOOL _shouldLogAsync;
}

@property (readonly, nonatomic, getter=isActive) BOOL active;

+ (void)beginCustomTracking;
+ (void)endCustomTracking;
+ (BOOL)isCustomTracking;
+ (BOOL)isEnabled;
+ (id)sharedMonitor;

- (id)endSceneWithName:(id)arg0 context:(const void *)arg1;
- (id)beginSceneWithName:(id)arg0 context:(const void *)arg1;
- (void)updateExtra:(id)arg0 forSceneWithName:(id)arg1 context:(const void *)arg2;
- (void)setupDisplayLinkPaused:(BOOL)arg0;
- (void)displayLinkDidUpdate:(id)arg0;
- (void)onAppNotification:(id)arg0;
- (void)logRecord:(id)arg0 withScene:(id)arg1 extra:(id)arg2;
- (id)sceneWithName:(id)arg0 context:(const void *)arg1;
- (id)beginWithKey:(id)arg0;
- (void)logScene:(id)arg0;
- (id)recordWithKey:(id)arg0;
- (id)pauseWithKey:(id)arg0;
- (id)pauseSceneWithName:(id)arg0 context:(const void *)arg1;
- (id)cancelSceneWithName:(id)arg0 context:(const void *)arg1;
- (void)scene_onAppNotification:(id)arg0;
- (void)onHMDANROver:(id)arg0;
- (id)endWithKey:(id)arg0;
- (void)beginTrackHitchTimestamp;
- (id)endTrackHitchTimestamp;
- (void)startTrackerFirstMinuteUIFrame;
- (BOOL)first_min_enabled;
- (void)swizzled_onAppNotification:(id)arg0;
- (void)reportFirstMinuteUIFrame:(id)arg0 fromSceneName:(id)arg1 fromVC:(BOOL)arg2;
- (void)endTrackerFirstMinuteUIFrameForGlobal;
- (void)endTrackerFirstMinuteUIFrameForFeed;
- (id)init;
- (void).cxx_destruct;
- (BOOL)isActive;
- (id).cxx_construct;
- (void)setupNotifications;

@end
