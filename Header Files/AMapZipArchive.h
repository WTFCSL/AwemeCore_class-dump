//
//     Generated by private class-dump
//

@class NSString;

@interface AMapZipArchive : NSObject {
    NSString *_path;
    NSString *_filename;
    void *_zip;
}

@property (readonly, nonatomic) BOOL open;
@property (readonly, nonatomic) BOOL close;

+ (id)_dateWithMSDOSFormat:(unsigned int)arg0;
+ (BOOL)createZipFileAtPath:(id)arg0 withFilesAtPaths:(id)arg1 withPassword:(id)arg2;
+ (BOOL)createZipFileAtPath:(id)arg0 withContentsOfDirectory:(id)arg1 withPassword:(id)arg2;
+ (BOOL)createZipFileAtPath:(id)arg0 withContentsOfDirectory:(id)arg1 keepParentDirectory:(BOOL)arg2 withPassword:(id)arg3;
+ (id)_temporaryPathForDiscardableFile;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 overwrite:(BOOL)arg2 password:(id)arg3 error:(id *)arg4;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 delegate:(id)arg2;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 overwrite:(BOOL)arg2 password:(id)arg3 error:(id *)arg4 delegate:(id)arg5;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 overwrite:(BOOL)arg2 password:(id)arg3 progressHandler:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 progressHandler:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
+ (BOOL)unzipFileAtPath:(id)arg0 toDestination:(id)arg1 overwrite:(BOOL)arg2 password:(id)arg3 error:(id *)arg4 delegate:(id)arg5 progressHandler:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
+ (BOOL)createZipFileAtPath:(id)arg0 withFilesAtPaths:(id)arg1;
+ (BOOL)createZipFileAtPath:(id)arg0 withContentsOfDirectory:(id)arg1;
+ (BOOL)createZipFileAtPath:(id)arg0 withContentsOfDirectory:(id)arg1 keepParentDirectory:(BOOL)arg2;

- (BOOL)writeFile:(id)arg0 withPassword:(id)arg1;
- (BOOL)writeFolderAtPath:(id)arg0 withFolderName:(id)arg1 withPassword:(id)arg2;
- (BOOL)writeFileAtPath:(id)arg0 withFileName:(id)arg1 withPassword:(id)arg2;
- (void)zipInfo:(struct { struct tm_zip_s { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)arg0 setDate:(id)arg1;
- (BOOL)writeData:(id)arg0 filename:(id)arg1 withPassword:(id)arg2;
- (id)initWithPath:(id)arg0;
- (void).cxx_destruct;
- (BOOL)open;
- (BOOL)close;

@end
