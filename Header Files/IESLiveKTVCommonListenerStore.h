//
//     Generated by private class-dump
//

@class IESLiveGCDTimer, IESLiveKTVSEIModel, NSNumber, NSMutableArray;

@interface IESLiveKTVCommonListenerStore : NSObject {
    BOOL _isTimerSuspend;
    BOOL _isInSameMusic;
    BOOL _isAnchorEnterBackground;
    double _currentPlayingTime;
    double _curPlayingTime;
    NSNumber *_currentPlayingMusicID;
    IESLiveGCDTimer *_timer;
    double _seiPlayingTime;
    double _seiPlayingTimeTS;
    double _seiPlayingTimeOffset;
    NSMutableArray *_seiTimeArray;
    NSMutableArray *_localTimeArray;
    IESLiveKTVSEIModel *_lastSeiModel;
    double _timerInterval;
}

@property (retain, nonatomic) NSNumber *currentPlayingMusicID;
@property (retain, nonatomic) IESLiveGCDTimer *timer;
@property (nonatomic) double seiPlayingTime;
@property (nonatomic) double seiPlayingTimeTS;
@property (nonatomic) double seiPlayingTimeOffset;
@property (nonatomic) BOOL isInSameMusic;
@property (retain, nonatomic) NSMutableArray *seiTimeArray;
@property (retain, nonatomic) NSMutableArray *localTimeArray;
@property (retain, nonatomic) IESLiveKTVSEIModel *lastSeiModel;
@property (nonatomic) BOOL isAnchorEnterBackground;
@property (nonatomic) double timerInterval;
@property (nonatomic) BOOL isTimerSuspend;
@property (nonatomic) double currentPlayingTime;
@property (nonatomic) double curPlayingTime;

- (double)currentPlayingTime;
- (double)timerInterval;
- (BOOL)isTimerSuspend;
- (void)setIsTimerSuspend:(BOOL)arg0;
- (void)setCurrentPlayingTime:(double)arg0;
- (id)currentPlayingMusicID;
- (void)updateListenerPlayingTimeWithSEIModel:(id)arg0;
- (void)setCurrentPlayingMusicID:(id)arg0;
- (BOOL)pr_isTimerExisted;
- (void)setLastSeiModel:(id)arg0;
- (BOOL)isAnchorEnterBackground;
- (void)handleAudienceSyncMusicStatus:(id)arg0;
- (void)handleEnterKTV:(id)arg0;
- (void)handleAudienceLyricStart:(id)arg0;
- (void)audiencePauseAudienceTimer:(id)arg0;
- (void)audienceResumeAudienceTimer:(id)arg0;
- (void)finishedMusicWithID:(id)arg0 force:(BOOL)arg1;
- (void)handleMoreLyrics:(id)arg0;
- (void)startMusicForTrack:(id)arg0;
- (void)updatePlayingTime;
- (void)updateSeiTime:(id)arg0;
- (void)endMusicForTrack:(id)arg0;
- (void)cleanTime;
- (double)seiPlayingTimeOffset;
- (void)setSeiPlayingTime:(double)arg0;
- (void)setSeiPlayingTimeTS:(double)arg0;
- (void)recordTimeForTrack;
- (double)seiPlayingTimeTS;
- (double)seiPlayingTime;
- (double)curPlayingTime;
- (void)setCurPlayingTime:(double)arg0;
- (void)setSeiPlayingTimeOffset:(double)arg0;
- (void)setIsInSameMusic:(BOOL)arg0;
- (id)seiTimeArray;
- (id)localTimeArray;
- (void)endTimeTrack;
- (id)lastSeiModel;
- (void)setIsAnchorEnterBackground:(BOOL)arg0;
- (BOOL)isInSameMusic;
- (void)audiencePauseIsAnchorOut;
- (void)audienceResumeIsAnchorIn;
- (void)setSeiTimeArray:(id)arg0;
- (void)setLocalTimeArray:(id)arg0;
- (id)timer;
- (id)init;
- (void).cxx_destruct;
- (void)stopTimer;
- (void)setTimer:(id)arg0;
- (void)dealloc;
- (void)reset;
- (void)setTimerInterval:(double)arg0;

@end
