//
//     Generated by private class-dump
//

@class NSString, NSArray, NSSet, NSDictionary, NSNumber;
@protocol TIMXClientProtocol, TIMXOStrangerExplicitDelegate, TIMXLongConnectionClientUnderlayingWebSocket, TIMXOIMClientObserverDelegate;

@interface TIMXConfig : MTLModel {
    BOOL _enableErrorInfoOutput;
    BOOL _enableUploadBOE;
    BOOL _enableCombineInboxCheck;
    BOOL _enableUseV2AndBadgeCountLogic;
    BOOL _enableMessageRead;
    BOOL _enableMessageReadHistoryMessageUnreadForNewParticipant;
    BOOL _enableLocalOnlyLoadHistory;
    BOOL _enableDatabasePerformanceLog;
    BOOL _userDefaultFallbackToSingleInstancePath;
    BOOL _chaFileFallbackToSingleInstancePath;
    BOOL _mmkvFallbackToSingleInstancePath;
    BOOL _enablePullerRefactor;
    BOOL _milestoneHintOptRevert;
    BOOL _enableSdkConfigGetApiOpt;
    BOOL _overrideSentMessageContentSyncFromServer;
    BOOL _enableTakeOutPrefixSync;
    BOOL _enableSyncClickToReceiver;
    BOOL _enableBatchConversationInfoUpdate;
    BOOL _isIMImportant;
    BOOL _enableApplicationStatusReport;
    BOOL _manuallyKickoffInboxPuller;
    BOOL _enableReadIndexCompensateUnreadCount;
    BOOL _enableAddConversationVisible;
    BOOL _isNewRegisterUser;
    BOOL _shouldDropLoginReuqestForNewUser;
    BOOL _enablePullerInitOptimize;
    BOOL _enableSendIgnoreTicket;
    BOOL _enableWebSocketErrorCheck;
    BOOL _enableReportUnreadCountByInbox;
    BOOL _enableRecall;
    BOOL _enableReportUnreadCount;
    BOOL _dbPerformanceTraceEnable;
    BOOL _enablePBRequestTrack;
    BOOL _enableStrangerTrashBox;
    BOOL _saveIndexV2BaseOpt;
    BOOL _enablePullingStickOnMsgsWhenReceiveCommandMsg;
    BOOL _enableIgnorePullingFlag;
    BOOL _enableStangerSettingInfoNotify;
    BOOL _enableOptimizationOfTheArchitectureOfStrangers;
    BOOL _enableMsgTabFirstFrameTrackOpt;
    BOOL _enableRemovedFromChatOptimize;
    BOOL _enableSubscribeUnreadCountOnMuteFunction;
    BOOL _enableOptimizeReceivingMessageSwitchingThread;
    BOOL _enableCompensationMessageContent;
    BOOL _enableOptimizeMarkRead;
    BOOL _enableConcurrentlyCallTheNetworkInterfaceToSendMessages;
    BOOL _enableMeasureDBMarkReadElapsedTime;
    BOOL _enableTemporaryDropOldMarkReadCommand;
    BOOL _enableLoadFirstFrameDataFirstOptimization;
    BOOL _enablePassingTransactionWhenInsertMessage;
    BOOL _enableFirstFrameQueryConversationOptimization;
    BOOL _enableReceiveMessageLog;
    BOOL _enableLoadMsgLinkTracker;
    BOOL _enableLoadingMessageSwitchingThreadOptimization;
    BOOL _enableLoadMessageCheckingEmptyOptimize;
    BOOL _passportCertAuthEnable;
    BOOL _enableParallelSendMessage;
    BOOL _enableParallelSendMessageOutOfDBWriteQueue;
    BOOL _enableMeasureClientInvokeCallback;
    BOOL _enableReceiveMessageUseIndependentQueue;
    BOOL _enableClearParallelSendMessageFlag;
    BOOL _enableConvInfoFetchOptimise;
    BOOL _enableRefiningSendMessageElapsededTime;
    BOOL _enableFixAffectedBySwitchingBackground;
    BOOL _enableFixKeyNilCrash;
    BOOL _enableUpdateConversationLog;
    BOOL _enableFixNewUserCannotStartInit;
    BOOL _enableFixPullerKickofTwice;
    BOOL _enableStrangerFetcherOpt;
    BOOL _unreadCountReportDowngradeThreshold;
    BOOL _enableStrangerConvRemoteFetchFix;
    BOOL _enableBatchUpdateSettingInfosDelegateFix;
    BOOL _isFullEncrypt;
    BOOL _dbRepairEnable;
    BOOL _upgradeFromHTS;
    BOOL _dbRepairDisableRepairKit;
    BOOL _dbFilterDataForCorrupt;
    BOOL _fetchAllGroupsByDBOpt;
    BOOL _enableIssueAirCushion;
    BOOL _fixIMArraryOverflow;
    BOOL _enableImUCTrakCompletion;
    BOOL _localCheckMsgOpt;
    BOOL _enableNotDisplayFeature;
    BOOL _enableUnreadCountMsgBoxAndDemoteFix;
    BOOL _enableNoticeUpdateOpt;
    BOOL _enableCheckMessageInfoOpt;
    BOOL _msgLinkTrackerEnable;
    BOOL _enableLogDBConvMsgCountInfo;
    BOOL _sdkNetworkMonitor;
    BOOL _readInterfaceOptimize;
    BOOL _minIndexInterfaceOptimize;
    BOOL _reportConvChainSource;
    BOOL _syncRealMsgStatusWithServer;
    BOOL _enableMarkReadCommandMessageLog;
    BOOL _rmAuthCertToIES;
    BOOL _markReadOptimizeRollBack;
    BOOL _mergeUpdateGroupConvExt;
    BOOL _shouldPullAllMessages;
    BOOL _enableParticipantMap;
    BOOL _enableLiveConsultMsgAbility;
    BOOL _enableMMKVTest;
    BOOL _revertOfflinePullAsyncWriteDB;
    BOOL _fixSendMessageAsyncBadOrderIndex;
    BOOL _dbWatchDogOpt;
    BOOL _dbInitOpt;
    BOOL _dbElapsedTimeGather;
    BOOL _dbOnTimeClose;
    BOOL _dbIOOpt;
    BOOL _dbSplitEnable;
    BOOL _dbSplitFullFit;
    BOOL _dbSplitFull;
    BOOL _dbSplitCrudCMDOpt;
    BOOL _dbSplitWriteQueueOpt;
    BOOL _dbSplitLogicOpt;
    BOOL _dbSplitMaxMsgCreateTime;
    BOOL _dbSplitWriteQueueToReadQueue;
    BOOL _dbSplitBackup;
    BOOL _dbSplitInsertMessageUseQueue;
    BOOL _insertMsgSuccessUpdateIndex;
    BOOL _migrationOpt;
    BOOL _splitDeleteOldFile;
    BOOL _splitMsgWriteConcurencyOpt;
    BOOL _termiateBlockDB;
    BOOL _enableSendMessageMonitorOptimize;
    BOOL _markReadUnreadReportOptimize;
    BOOL _readReceiptUpdateOptimize;
    BOOL _fixOrderIndexOptimize;
    BOOL _enableMarkOnScreenMarkRead;
    BOOL _enableIMSDKMemoryUseOpt;
    BOOL _enableLoadMoreOptimizeForFilterBoxType;
    BOOL _unreadCountReportOptimize;
    BOOL _enableUnreadOptiomizeIIForGeneralBoxType;
    BOOL _enableDeleteConversationIdentifiersOptimize;
    BOOL _skipCrossUserCursorWriteInOfflinePulling;
    BOOL _fixThrottleQueue;
    BOOL _fixOfficialAssistantOrder;
    BOOL _recallMsgInChain;
    BOOL _fixHardDeleteMsgsBatchUpdate;
    BOOL _sdkAlogOptimize;
    BOOL _unreadConvNoticeFix;
    BOOL _strangerUnreadNotifyFix;
    BOOL _timxStatisticsCrashFix;
    BOOL _cmdIndexUpdateFix;
    BOOL _deleteConversationCommandFix;
    BOOL _historyMessagesFetchOptimize;
    BOOL _conversationFilterMemoryOptimize;
    BOOL _unreadConvFilteringEnable;
    BOOL _networkReqConfigOptimize;
    BOOL _ignoreInternalModelSet;
    BOOL _enableBots;
    BOOL _ignoreSomeParticipantsModel;
    BOOL _enableEditMessage;
    BOOL _enableShowMsgEdited;
    BOOL _enableUpdateMsgContent;
    BOOL _enableUploadReadIndexLog;
    BOOL _enableConversationNilLog;
    BOOL _coreinfoChangePushApplyBasicInfo;
    BOOL _enableRedundantOfflinePullOpt;
    BOOL _enableRepairKit;
    BOOL _initHasMoreFix;
    BOOL _mixChainFlagKeyIsolation;
    BOOL _enableLoadMsgFromDBUntilLastIndexV2;
    BOOL _isAutoPollingWhenNoWs;
    BOOL _enableLoadMsgOnConvUpdate;
    int _sdkConfigGetApiVersionCode;
    int _metricInbox;
    int _strangerConversationOptType;
    int _strangerboxOptType;
    int _unreadConvFilteringLimit;
    NSString *_appID;
    NSString *_deviceID;
    NSString *_uid;
    NSString *_appDistributionChannel;
    NSString *_appVersionCode;
    NSString *_appBundleVersion;
    NSString *_osVersion;
    NSString *_devicePlatform;
    NSString *_deviceType;
    id<TIMXLongConnectionClientUnderlayingWebSocket> _webSocketImpl;
    long long _service;
    NSArray *_arrAdditionalReceiveService;
    long long _method;
    NSString *_fpID;
    NSString *_wsServerBaseURL;
    NSString *_wsAppKey;
    id /* block */ _wsParamsGenerator;
    id<TIMXClientProtocol> _httpClientImpl;
    NSString *_imServerBaseURL;
    NSString *_imSettingBaseURL;
    long long _httpRequestMaxTryCount;
    long long _httpTimeout;
    long long _webSocketTimeout;
    double _requestRetryDelay;
    long long _authType;
    long long _userLinkInitSubType;
    NSSet *_inboxes;
    NSSet *_inboxesDisableUserChain;
    long long _indexV2Base;
    NSArray *_arrConversationListViewControllerClass;
    NSArray *_arrConversationViewControllerClass;
    unsigned long long _maxWALFilePages;
    unsigned long long _instanceImplementationType;
    NSString *_businessID;
    NSArray *_groupTypesEnabledInFoldBox;
    long long _printInfoCount;
    double _batchConversationInfoUpdateInterval;
    long long _maxPayloadLength;
    long long _sendMessageAsyncResponseWaitTime;
    double _webSocketErrorInterval;
    long long _webSocketMaxTryCount;
    long long _ignoreCheckPointFirstFewSeconds;
    long long _checkConversationMatchThreshold;
    long long _strangerBoxModify;
    NSDictionary *_sendMsgCommonClientExt;
    NSDictionary *_pbRequestTrackSampleConfig;
    NSDictionary *_dbTraceFTCTimes;
    long long _dbRemoteDefaultFTCTime;
    NSDictionary *_measureElapsedTimeDict;
    long long _measureDBMarkReadElapsedTimeExceptionDuration;
    long long _clientInvokeCallBackReportDuration;
    NSArray *_passportCertAuthCMDWhitelist;
    NSDictionary *_enableMeasureDispatchQueueElapsededTime;
    NSDictionary *_measureClientInvokeCallbackConfig;
    long long _defaultExceptionDuration;
    double _pollingPullOfflineMsgInterval;
    NSString *_defaultBiz;
    NSString *_defaultAccess;
    id /* block */ _getFreeDiskSpaceBlock;
    NSDictionary *_imsdkConfig;
    double _dbRepairBackupCycle;
    double _dbRepairBackupMaxSize;
    double _dbRepairBackupMinSpaceSize;
    long long _dbRepairBackupSizeMinMultiple;
    long long _msgDBVersion;
    NSArray *_dbRebuildErrorCodes;
    NSArray *_dbRepairBackupExcludeErrorCodes;
    NSArray *_dbTraceThreadErrorCodes;
    NSArray *_dbTraceThreadErrorMsgs;
    long long _dbFirstLoadDetect;
    id /* block */ _shouldFilterLastHintMsgUpdateBlock;
    NSArray *_trackValidRequestList;
    long long _maxDBStrangerConvCount;
    long long _mmkvTestFastTestCount;
    double _dbOnTimeCloseInterval;
    NSDictionary *_dbSplitRefactor;
    double _dbSplitMinFreeSpace;
    double _dbSplitMinMultipleDBSize;
    long long _dbSplitMsgMaxLimit;
    long long _dbSplitMaxMigrateCount;
    NSDictionary *_updateSortOrderOptimize;
    NSDictionary *_imAwemeDomainSwitchWhiteList;
    NSDictionary *_offlinePullerOptimize;
    NSString *_overrideTableNamePrefix;
    id /* block */ _conversationSortOrderCalculator;
    id /* block */ _sortOrderCalculatorHighPerformance;
    id /* block */ _certAuthGenerator;
    id<TIMXOIMClientObserverDelegate> _timoIMClientDelegate;
    NSNumber *_timoStrangerExplicitInbox;
    id<TIMXOStrangerExplicitDelegate> _timoStrangerExplicitDelegate;
    unsigned long long _innerPushTimelinessOptimize;
    double _rejectLCPullDelayTimeInterval;
    unsigned long long _getByConversationMaxRecursiveCount;
    NSDictionary *_pullReadStateInboxToBizRoleMapper;
    NSString *_bizCustomTrackPrefix;
    NSDictionary *_bizCustomTrackParams;
}

@property (copy, nonatomic) NSString *appID;
@property (copy, nonatomic) NSString *deviceID;
@property (copy, nonatomic) NSString *uid;
@property (copy, nonatomic) NSString *appDistributionChannel;
@property (copy, nonatomic) NSString *appVersionCode;
@property (copy, nonatomic) NSString *appBundleVersion;
@property (copy, nonatomic) NSString *osVersion;
@property (copy, nonatomic) NSString *devicePlatform;
@property (copy, nonatomic) NSString *deviceType;
@property (retain, nonatomic) id<TIMXLongConnectionClientUnderlayingWebSocket> webSocketImpl;
@property (nonatomic) long long service;
@property (copy, nonatomic) NSArray *arrAdditionalReceiveService;
@property (nonatomic) long long method;
@property (copy, nonatomic) NSString *fpID;
@property (copy, nonatomic) NSString *wsServerBaseURL;
@property (copy, nonatomic) NSString *wsAppKey;
@property (copy, nonatomic) id /* block */ wsParamsGenerator;
@property (retain, nonatomic) id<TIMXClientProtocol> httpClientImpl;
@property (copy, nonatomic) NSString *imServerBaseURL;
@property (copy, nonatomic) NSString *imSettingBaseURL;
@property (nonatomic) long long httpRequestMaxTryCount;
@property (nonatomic) long long httpTimeout;
@property (nonatomic) long long webSocketTimeout;
@property (nonatomic) double requestRetryDelay;
@property (nonatomic) BOOL enableErrorInfoOutput;
@property (nonatomic) BOOL enableUploadBOE;
@property (nonatomic) long long authType;
@property (nonatomic) long long userLinkInitSubType;
@property (copy, nonatomic) NSSet *inboxes;
@property (copy, nonatomic) NSSet *inboxesDisableUserChain;
@property (nonatomic) BOOL enableCombineInboxCheck;
@property (nonatomic) BOOL enableUseV2AndBadgeCountLogic;
@property (nonatomic) long long indexV2Base;
@property (nonatomic) BOOL enableMessageRead;
@property (nonatomic) BOOL enableMessageReadHistoryMessageUnreadForNewParticipant;
@property (nonatomic) BOOL enableLocalOnlyLoadHistory;
@property (copy, nonatomic) NSArray *arrConversationListViewControllerClass;
@property (copy, nonatomic) NSArray *arrConversationViewControllerClass;
@property (nonatomic) BOOL enableDatabasePerformanceLog;
@property (nonatomic) unsigned long long maxWALFilePages;
@property unsigned long long instanceImplementationType;
@property (copy, nonatomic) NSString *businessID;
@property (nonatomic) BOOL userDefaultFallbackToSingleInstancePath;
@property (nonatomic) BOOL chaFileFallbackToSingleInstancePath;
@property (nonatomic) BOOL mmkvFallbackToSingleInstancePath;
@property (nonatomic) BOOL enablePullerRefactor;
@property (retain, nonatomic) NSArray *groupTypesEnabledInFoldBox;
@property (nonatomic) BOOL milestoneHintOptRevert;
@property (nonatomic) BOOL enableSdkConfigGetApiOpt;
@property (nonatomic) int sdkConfigGetApiVersionCode;
@property (nonatomic) long long printInfoCount;
@property (nonatomic) int metricInbox;
@property (nonatomic) BOOL overrideSentMessageContentSyncFromServer;
@property (nonatomic) BOOL enableTakeOutPrefixSync;
@property (nonatomic) BOOL enableSyncClickToReceiver;
@property (nonatomic) BOOL enableBatchConversationInfoUpdate;
@property (nonatomic) double batchConversationInfoUpdateInterval;
@property (nonatomic) BOOL isIMImportant;
@property (nonatomic) BOOL enableApplicationStatusReport;
@property (nonatomic) BOOL manuallyKickoffInboxPuller;
@property (nonatomic) BOOL enableReadIndexCompensateUnreadCount;
@property (nonatomic) BOOL enableAddConversationVisible;
@property (nonatomic) long long maxPayloadLength;
@property (nonatomic) long long sendMessageAsyncResponseWaitTime;
@property (nonatomic) BOOL isNewRegisterUser;
@property (nonatomic) BOOL shouldDropLoginReuqestForNewUser;
@property (nonatomic) BOOL enablePullerInitOptimize;
@property (nonatomic) BOOL enableSendIgnoreTicket;
@property (nonatomic) BOOL enableWebSocketErrorCheck;
@property (nonatomic) double webSocketErrorInterval;
@property (nonatomic) BOOL enableReportUnreadCountByInbox;
@property (nonatomic) BOOL enableRecall;
@property (nonatomic) BOOL enableReportUnreadCount;
@property long long webSocketMaxTryCount;
@property long long ignoreCheckPointFirstFewSeconds;
@property long long checkConversationMatchThreshold;
@property long long strangerBoxModify;
@property (copy) NSDictionary *sendMsgCommonClientExt;
@property (nonatomic) BOOL dbPerformanceTraceEnable;
@property (nonatomic) BOOL enablePBRequestTrack;
@property (copy, nonatomic) NSDictionary *pbRequestTrackSampleConfig;
@property (nonatomic) BOOL enableStrangerTrashBox;
@property (nonatomic) BOOL saveIndexV2BaseOpt;
@property (nonatomic) BOOL enablePullingStickOnMsgsWhenReceiveCommandMsg;
@property (nonatomic) int strangerConversationOptType;
@property (nonatomic) BOOL enableIgnorePullingFlag;
@property (nonatomic) BOOL enableStangerSettingInfoNotify;
@property (nonatomic) int strangerboxOptType;
@property (copy, nonatomic) NSDictionary *dbTraceFTCTimes;
@property (nonatomic) long long dbRemoteDefaultFTCTime;
@property BOOL enableOptimizationOfTheArchitectureOfStrangers;
@property (nonatomic) BOOL enableMsgTabFirstFrameTrackOpt;
@property (nonatomic) BOOL enableRemovedFromChatOptimize;
@property (nonatomic) BOOL enableSubscribeUnreadCountOnMuteFunction;
@property (nonatomic) BOOL enableOptimizeReceivingMessageSwitchingThread;
@property (nonatomic) BOOL enableCompensationMessageContent;
@property (nonatomic) BOOL enableOptimizeMarkRead;
@property (nonatomic) BOOL enableConcurrentlyCallTheNetworkInterfaceToSendMessages;
@property (copy, nonatomic) NSDictionary *measureElapsedTimeDict;
@property (nonatomic) BOOL enableMeasureDBMarkReadElapsedTime;
@property (nonatomic) long long measureDBMarkReadElapsedTimeExceptionDuration;
@property (nonatomic) BOOL enableTemporaryDropOldMarkReadCommand;
@property (nonatomic) BOOL enableLoadFirstFrameDataFirstOptimization;
@property (nonatomic) BOOL enablePassingTransactionWhenInsertMessage;
@property (nonatomic) BOOL enableFirstFrameQueryConversationOptimization;
@property (nonatomic) BOOL enableReceiveMessageLog;
@property (nonatomic) BOOL enableLoadMsgLinkTracker;
@property (nonatomic) BOOL enableLoadingMessageSwitchingThreadOptimization;
@property (nonatomic) long long clientInvokeCallBackReportDuration;
@property (nonatomic) BOOL enableLoadMessageCheckingEmptyOptimize;
@property (nonatomic) BOOL passportCertAuthEnable;
@property (copy, nonatomic) NSArray *passportCertAuthCMDWhitelist;
@property BOOL enableParallelSendMessage;
@property (nonatomic) BOOL enableParallelSendMessageOutOfDBWriteQueue;
@property (copy, nonatomic) NSDictionary *enableMeasureDispatchQueueElapsededTime;
@property (copy, nonatomic) NSDictionary *measureClientInvokeCallbackConfig;
@property (nonatomic) BOOL enableMeasureClientInvokeCallback;
@property (nonatomic) BOOL enableReceiveMessageUseIndependentQueue;
@property BOOL enableClearParallelSendMessageFlag;
@property BOOL enableConvInfoFetchOptimise;
@property BOOL enableRefiningSendMessageElapsededTime;
@property BOOL enableFixAffectedBySwitchingBackground;
@property BOOL enableFixKeyNilCrash;
@property BOOL enableUpdateConversationLog;
@property BOOL enableFixNewUserCannotStartInit;
@property BOOL enableFixPullerKickofTwice;
@property long long defaultExceptionDuration;
@property BOOL enableStrangerFetcherOpt;
@property double pollingPullOfflineMsgInterval;
@property BOOL unreadCountReportDowngradeThreshold;
@property (copy) NSString *defaultBiz;
@property (copy) NSString *defaultAccess;
@property BOOL enableStrangerConvRemoteFetchFix;
@property BOOL enableBatchUpdateSettingInfosDelegateFix;
@property (nonatomic) BOOL isFullEncrypt;
@property (copy, nonatomic) id /* block */ getFreeDiskSpaceBlock;
@property (copy, nonatomic) NSDictionary *imsdkConfig;
@property (nonatomic) BOOL dbRepairEnable;
@property (nonatomic) BOOL upgradeFromHTS;
@property (nonatomic) double dbRepairBackupCycle;
@property (nonatomic) double dbRepairBackupMaxSize;
@property (nonatomic) double dbRepairBackupMinSpaceSize;
@property (nonatomic) long long dbRepairBackupSizeMinMultiple;
@property (nonatomic) BOOL dbRepairDisableRepairKit;
@property (nonatomic) long long msgDBVersion;
@property (copy, nonatomic) NSArray *dbRebuildErrorCodes;
@property (copy, nonatomic) NSArray *dbRepairBackupExcludeErrorCodes;
@property (copy, nonatomic) NSArray *dbTraceThreadErrorCodes;
@property (copy, nonatomic) NSArray *dbTraceThreadErrorMsgs;
@property (nonatomic) long long dbFirstLoadDetect;
@property (readonly, nonatomic) BOOL dbFilterDataForCorrupt;
@property (readonly, nonatomic) BOOL fetchAllGroupsByDBOpt;
@property (readonly, nonatomic) BOOL enableIssueAirCushion;
@property (readonly, nonatomic) BOOL fixIMArraryOverflow;
@property (readonly, nonatomic) BOOL enableImUCTrakCompletion;
@property (readonly, nonatomic) BOOL localCheckMsgOpt;
@property (readonly, nonatomic) BOOL enableNotDisplayFeature;
@property (readonly, nonatomic) BOOL enableUnreadCountMsgBoxAndDemoteFix;
@property (readonly, nonatomic) BOOL enableNoticeUpdateOpt;
@property (readonly, nonatomic) BOOL enableCheckMessageInfoOpt;
@property (copy, nonatomic) id /* block */ shouldFilterLastHintMsgUpdateBlock;
@property (nonatomic) BOOL msgLinkTrackerEnable;
@property (readonly, nonatomic) BOOL enableLogDBConvMsgCountInfo;
@property (readonly, nonatomic) BOOL sdkNetworkMonitor;
@property (readonly, nonatomic) BOOL readInterfaceOptimize;
@property (readonly, nonatomic) BOOL minIndexInterfaceOptimize;
@property (readonly, nonatomic) BOOL reportConvChainSource;
@property (readonly, nonatomic) BOOL syncRealMsgStatusWithServer;
@property (readonly, nonatomic) BOOL enableMarkReadCommandMessageLog;
@property (readonly, nonatomic) BOOL rmAuthCertToIES;
@property (readonly, nonatomic) BOOL markReadOptimizeRollBack;
@property (readonly, nonatomic) BOOL mergeUpdateGroupConvExt;
@property (copy, nonatomic) NSArray *trackValidRequestList;
@property (nonatomic) long long maxDBStrangerConvCount;
@property (nonatomic) BOOL shouldPullAllMessages;
@property (nonatomic) BOOL enableParticipantMap;
@property (nonatomic) BOOL enableLiveConsultMsgAbility;
@property (nonatomic) BOOL enableMMKVTest;
@property (nonatomic) long long mmkvTestFastTestCount;
@property (nonatomic) BOOL revertOfflinePullAsyncWriteDB;
@property (nonatomic) BOOL fixSendMessageAsyncBadOrderIndex;
@property (nonatomic) BOOL dbWatchDogOpt;
@property (nonatomic) BOOL dbInitOpt;
@property (nonatomic) BOOL dbElapsedTimeGather;
@property (nonatomic) BOOL dbOnTimeClose;
@property (nonatomic) double dbOnTimeCloseInterval;
@property (nonatomic) BOOL dbIOOpt;
@property (copy, nonatomic) NSDictionary *dbSplitRefactor;
@property (nonatomic) BOOL dbSplitEnable;
@property (nonatomic) BOOL dbSplitFullFit;
@property (nonatomic) BOOL dbSplitFull;
@property (nonatomic) BOOL dbSplitCrudCMDOpt;
@property (nonatomic) BOOL dbSplitWriteQueueOpt;
@property (nonatomic) BOOL dbSplitLogicOpt;
@property (nonatomic) double dbSplitMinFreeSpace;
@property (nonatomic) double dbSplitMinMultipleDBSize;
@property (nonatomic) long long dbSplitMsgMaxLimit;
@property (nonatomic) BOOL dbSplitMaxMsgCreateTime;
@property (nonatomic) BOOL dbSplitWriteQueueToReadQueue;
@property (nonatomic) BOOL dbSplitBackup;
@property (nonatomic) long long dbSplitMaxMigrateCount;
@property (nonatomic) BOOL dbSplitInsertMessageUseQueue;
@property (nonatomic) BOOL insertMsgSuccessUpdateIndex;
@property (nonatomic) BOOL migrationOpt;
@property (nonatomic) BOOL splitDeleteOldFile;
@property (nonatomic) BOOL splitMsgWriteConcurencyOpt;
@property (nonatomic) BOOL termiateBlockDB;
@property (nonatomic) BOOL enableSendMessageMonitorOptimize;
@property (nonatomic) BOOL markReadUnreadReportOptimize;
@property (nonatomic) BOOL readReceiptUpdateOptimize;
@property (copy, nonatomic) NSDictionary *updateSortOrderOptimize;
@property (nonatomic) BOOL fixOrderIndexOptimize;
@property (nonatomic) BOOL enableMarkOnScreenMarkRead;
@property (nonatomic) BOOL enableIMSDKMemoryUseOpt;
@property (nonatomic) BOOL enableLoadMoreOptimizeForFilterBoxType;
@property (readonly, nonatomic) BOOL unreadCountReportOptimize;
@property (copy, nonatomic) NSDictionary *imAwemeDomainSwitchWhiteList;
@property (copy, nonatomic) NSDictionary *offlinePullerOptimize;
@property (nonatomic) BOOL enableUnreadOptiomizeIIForGeneralBoxType;
@property (nonatomic) BOOL enableDeleteConversationIdentifiersOptimize;
@property (readonly, nonatomic) BOOL skipCrossUserCursorWriteInOfflinePulling;
@property (readonly, nonatomic) BOOL fixThrottleQueue;
@property (readonly, nonatomic) BOOL fixOfficialAssistantOrder;
@property (readonly, nonatomic) BOOL recallMsgInChain;
@property (readonly, nonatomic) BOOL fixHardDeleteMsgsBatchUpdate;
@property (readonly, nonatomic) BOOL sdkAlogOptimize;
@property (readonly, nonatomic) BOOL unreadConvNoticeFix;
@property BOOL strangerUnreadNotifyFix;
@property BOOL timxStatisticsCrashFix;
@property BOOL cmdIndexUpdateFix;
@property BOOL deleteConversationCommandFix;
@property (copy, nonatomic) NSString *overrideTableNamePrefix;
@property (copy, nonatomic) id /* block */ conversationSortOrderCalculator;
@property (copy, nonatomic) id /* block */ sortOrderCalculatorHighPerformance;
@property (copy, nonatomic) id /* block */ certAuthGenerator;
@property (weak, nonatomic) id<TIMXOIMClientObserverDelegate> timoIMClientDelegate;
@property (retain, nonatomic) NSNumber *timoStrangerExplicitInbox;
@property (weak, nonatomic) id<TIMXOStrangerExplicitDelegate> timoStrangerExplicitDelegate;
@property unsigned long long innerPushTimelinessOptimize;
@property BOOL historyMessagesFetchOptimize;
@property BOOL conversationFilterMemoryOptimize;
@property BOOL unreadConvFilteringEnable;
@property int unreadConvFilteringLimit;
@property BOOL networkReqConfigOptimize;
@property (readonly, nonatomic) BOOL ignoreInternalModelSet;
@property (nonatomic) BOOL enableBots;
@property (readonly, nonatomic) BOOL ignoreSomeParticipantsModel;
@property (nonatomic) BOOL enableEditMessage;
@property (nonatomic) BOOL enableShowMsgEdited;
@property (nonatomic) BOOL enableUpdateMsgContent;
@property (nonatomic) BOOL enableUploadReadIndexLog;
@property (nonatomic) BOOL enableConversationNilLog;
@property (readonly, nonatomic) BOOL coreinfoChangePushApplyBasicInfo;
@property (nonatomic) BOOL enableRedundantOfflinePullOpt;
@property (nonatomic) double rejectLCPullDelayTimeInterval;
@property (nonatomic) BOOL enableRepairKit;
@property (nonatomic) BOOL initHasMoreFix;
@property (nonatomic) BOOL mixChainFlagKeyIsolation;
@property (nonatomic) unsigned long long getByConversationMaxRecursiveCount;
@property (nonatomic) BOOL enableLoadMsgFromDBUntilLastIndexV2;
@property (copy, nonatomic) NSDictionary *pullReadStateInboxToBizRoleMapper;
@property (nonatomic) BOOL isAutoPollingWhenNoWs;
@property (copy, nonatomic) NSString *bizCustomTrackPrefix;
@property (copy, nonatomic) NSDictionary *bizCustomTrackParams;
@property (nonatomic) BOOL enableLoadMsgOnConvUpdate;

- (id)appVersionCode;
- (void)setAppVersionCode:(id)arg0;
- (id)fpID;
- (void)setFpID:(id)arg0;
- (void)setInboxes:(id)arg0;
- (void)setWebSocketTimeout:(long long)arg0;
- (void)setHttpClientImpl:(id)arg0;
- (void)setImServerBaseURL:(id)arg0;
- (BOOL)enableReportUnreadCountByInbox;
- (void)setEnableReportUnreadCountByInbox:(BOOL)arg0;
- (void)setArrConversationListViewControllerClass:(id)arg0;
- (void)setArrConversationViewControllerClass:(id)arg0;
- (void)setEnableMessageRead:(BOOL)arg0;
- (void)setEnableMessageReadHistoryMessageUnreadForNewParticipant:(BOOL)arg0;
- (void)setIsIMImportant:(BOOL)arg0;
- (void)setEnableTakeOutPrefixSync:(BOOL)arg0;
- (void)setEnableApplicationStatusReport:(BOOL)arg0;
- (void)setMaxWALFilePages:(unsigned long long)arg0;
- (void)setBizCustomTrackPrefix:(id)arg0;
- (void)setBizCustomTrackParams:(id)arg0;
- (id)pullReadStateInboxToBizRoleMapper;
- (void)setPullReadStateInboxToBizRoleMapper:(id)arg0;
- (void)setWebSocketImpl:(id)arg0;
- (void)setIndexV2Base:(long long)arg0;
- (void)setEnablePullerRefactor:(BOOL)arg0;
- (void)setShouldPullAllMessages:(BOOL)arg0;
- (void)setEnableLoadMsgFromDBUntilLastIndexV2:(BOOL)arg0;
- (void)setEnableUseV2AndBadgeCountLogic:(BOOL)arg0;
- (BOOL)mixChainFlagKeyIsolation;
- (void)setMixChainFlagKeyIsolation:(BOOL)arg0;
- (BOOL)enableLoadMsgOnConvUpdate;
- (void)setEnableLoadMsgOnConvUpdate:(BOOL)arg0;
- (unsigned long long)getByConversationMaxRecursiveCount;
- (void)setGetByConversationMaxRecursiveCount:(unsigned long long)arg0;
- (id)imsdkConfig;
- (void)setImsdkConfig:(id)arg0;
- (void)setInstanceImplementationType:(unsigned long long)arg0;
- (long long)webSocketTimeout;
- (long long)httpTimeout;
- (void)setHttpTimeout:(long long)arg0;
- (double)batchConversationInfoUpdateInterval;
- (BOOL)enableBatchConversationInfoUpdate;
- (long long)indexV2Base;
- (BOOL)enableMessageReadHistoryMessageUnreadForNewParticipant;
- (BOOL)isAutoPollingWhenNoWs;
- (BOOL)enableLoadMsgFromDBUntilLastIndexV2;
- (BOOL)enableReadIndexCompensateUnreadCount;
- (BOOL)overrideSentMessageContentSyncFromServer;
- (long long)httpRequestMaxTryCount;
- (double)requestRetryDelay;
- (BOOL)enableErrorInfoOutput;
- (void)setEnableCombineInboxCheck:(BOOL)arg0;
- (BOOL)enableApplicationStatusReport;
- (unsigned long long)instanceImplementationType;
- (BOOL)enableUseV2AndBadgeCountLogic;
- (BOOL)enableLocalOnlyLoadHistory;
- (int)metricInbox;
- (id)imServerBaseURL;
- (BOOL)enablePullerRefactor;
- (BOOL)enableWebSocketErrorCheck;
- (double)webSocketErrorInterval;
- (id)inboxesDisableUserChain;
- (BOOL)enableCombineInboxCheck;
- (BOOL)manuallyKickoffInboxPuller;
- (BOOL)enableMessageRead;
- (BOOL)enableSendIgnoreTicket;
- (long long)sendMessageAsyncResponseWaitTime;
- (BOOL)enableDatabasePerformanceLog;
- (unsigned long long)maxWALFilePages;
- (id)bizCustomTrackPrefix;
- (id)bizCustomTrackParams;
- (id)arrConversationListViewControllerClass;
- (id)arrConversationViewControllerClass;
- (void)setHttpRequestMaxTryCount:(long long)arg0;
- (void)setSendMessageAsyncResponseWaitTime:(long long)arg0;
- (void)setBatchConversationInfoUpdateInterval:(double)arg0;
- (void)setIsAutoPollingWhenNoWs:(BOOL)arg0;
- (id)appDistributionChannel;
- (void)setAppDistributionChannel:(id)arg0;
- (id)wsServerBaseURL;
- (void)setWsServerBaseURL:(id)arg0;
- (id)wsAppKey;
- (void)setWsAppKey:(id)arg0;
- (id /* block */)wsParamsGenerator;
- (void)setWsParamsGenerator:(id /* block */)arg0;
- (id)imSettingBaseURL;
- (void)setImSettingBaseURL:(id)arg0;
- (void)setRequestRetryDelay:(double)arg0;
- (void)setEnableErrorInfoOutput:(BOOL)arg0;
- (long long)userLinkInitSubType;
- (void)setUserLinkInitSubType:(long long)arg0;
- (void)setInboxesDisableUserChain:(id)arg0;
- (void)setEnableLocalOnlyLoadHistory:(BOOL)arg0;
- (void)setEnableDatabasePerformanceLog:(BOOL)arg0;
- (long long)printInfoCount;
- (void)setPrintInfoCount:(long long)arg0;
- (void)setMetricInbox:(int)arg0;
- (void)setOverrideSentMessageContentSyncFromServer:(BOOL)arg0;
- (BOOL)enableTakeOutPrefixSync;
- (BOOL)enableSyncClickToReceiver;
- (void)setEnableSyncClickToReceiver:(BOOL)arg0;
- (void)setEnableBatchConversationInfoUpdate:(BOOL)arg0;
- (BOOL)isIMImportant;
- (void)setManuallyKickoffInboxPuller:(BOOL)arg0;
- (void)setEnableReadIndexCompensateUnreadCount:(BOOL)arg0;
- (BOOL)enableAddConversationVisible;
- (void)setEnableAddConversationVisible:(BOOL)arg0;
- (long long)maxPayloadLength;
- (void)setMaxPayloadLength:(long long)arg0;
- (BOOL)isNewRegisterUser;
- (void)setIsNewRegisterUser:(BOOL)arg0;
- (BOOL)shouldDropLoginReuqestForNewUser;
- (void)setShouldDropLoginReuqestForNewUser:(BOOL)arg0;
- (BOOL)enablePullerInitOptimize;
- (void)setEnablePullerInitOptimize:(BOOL)arg0;
- (void)setEnableSendIgnoreTicket:(BOOL)arg0;
- (void)setEnableWebSocketErrorCheck:(BOOL)arg0;
- (void)setWebSocketErrorInterval:(double)arg0;
- (BOOL)shouldPullAllMessages;
- (BOOL)enableRecall;
- (void)setEnableRecall:(BOOL)arg0;
- (BOOL)enableReportUnreadCount;
- (void)setEnableReportUnreadCount:(BOOL)arg0;
- (BOOL)enableOptimizeReceivingMessageSwitchingThread;
- (void)setEnableOptimizeReceivingMessageSwitchingThread:(BOOL)arg0;
- (BOOL)enableMsgTabFirstFrameTrackOpt;
- (BOOL)conversationFilterMemoryOptimize;
- (BOOL)enableNotDisplayFeature;
- (BOOL)dbPerformanceTraceEnable;
- (BOOL)enableNoticeUpdateOpt;
- (BOOL)enableRefiningSendMessageElapsededTime;
- (BOOL)enableUnreadOptiomizeIIForGeneralBoxType;
- (BOOL)msgLinkTrackerEnable;
- (BOOL)enablePassingTransactionWhenInsertMessage;
- (long long)defaultExceptionDuration;
- (BOOL)enableFixAffectedBySwitchingBackground;
- (id)groupTypesEnabledInFoldBox;
- (id)webSocketImpl;
- (BOOL)enableFixPullerKickofTwice;
- (BOOL)enableLoadMsgLinkTracker;
- (BOOL)historyMessagesFetchOptimize;
- (BOOL)enableParallelSendMessageOutOfDBWriteQueue;
- (BOOL)dbSplitCrudCMDOpt;
- (BOOL)enableEditMessage;
- (BOOL)enableLiveConsultMsgAbility;
- (long long)webSocketMaxTryCount;
- (void)setWebSocketMaxTryCount:(long long)arg0;
- (void)setGroupTypesEnabledInFoldBox:(id)arg0;
- (BOOL)milestoneHintOptRevert;
- (void)setMilestoneHintOptRevert:(BOOL)arg0;
- (long long)ignoreCheckPointFirstFewSeconds;
- (void)setIgnoreCheckPointFirstFewSeconds:(long long)arg0;
- (long long)checkConversationMatchThreshold;
- (void)setCheckConversationMatchThreshold:(long long)arg0;
- (id)sendMsgCommonClientExt;
- (void)setSendMsgCommonClientExt:(id)arg0;
- (long long)strangerBoxModify;
- (void)setStrangerBoxModify:(long long)arg0;
- (void)setDbPerformanceTraceEnable:(BOOL)arg0;
- (BOOL)enablePBRequestTrack;
- (void)setEnablePBRequestTrack:(BOOL)arg0;
- (id)pbRequestTrackSampleConfig;
- (void)setPbRequestTrackSampleConfig:(id)arg0;
- (BOOL)enableStrangerTrashBox;
- (void)setEnableStrangerTrashBox:(BOOL)arg0;
- (BOOL)saveIndexV2BaseOpt;
- (void)setSaveIndexV2BaseOpt:(BOOL)arg0;
- (int)strangerConversationOptType;
- (void)setStrangerConversationOptType:(int)arg0;
- (int)strangerboxOptType;
- (void)setStrangerboxOptType:(int)arg0;
- (long long)dbRemoteDefaultFTCTime;
- (void)setDbRemoteDefaultFTCTime:(long long)arg0;
- (id)dbTraceFTCTimes;
- (void)setDbTraceFTCTimes:(id)arg0;
- (BOOL)enableOptimizationOfTheArchitectureOfStrangers;
- (void)setEnableOptimizationOfTheArchitectureOfStrangers:(BOOL)arg0;
- (void)setEnableMsgTabFirstFrameTrackOpt:(BOOL)arg0;
- (BOOL)enableSubscribeUnreadCountOnMuteFunction;
- (void)setEnableSubscribeUnreadCountOnMuteFunction:(BOOL)arg0;
- (BOOL)enableOptimizeMarkRead;
- (void)setEnableOptimizeMarkRead:(BOOL)arg0;
- (BOOL)enableParallelSendMessage;
- (void)setEnableParallelSendMessage:(BOOL)arg0;
- (void)setEnableParallelSendMessageOutOfDBWriteQueue:(BOOL)arg0;
- (BOOL)enableClearParallelSendMessageFlag;
- (void)setEnableClearParallelSendMessageFlag:(BOOL)arg0;
- (BOOL)enableConvInfoFetchOptimise;
- (void)setEnableConvInfoFetchOptimise:(BOOL)arg0;
- (void)setEnableRefiningSendMessageElapsededTime:(BOOL)arg0;
- (void)setEnableFixAffectedBySwitchingBackground:(BOOL)arg0;
- (void)setDefaultExceptionDuration:(long long)arg0;
- (BOOL)enableLoadingMessageSwitchingThreadOptimization;
- (void)setEnableLoadingMessageSwitchingThreadOptimization:(BOOL)arg0;
- (void)setEnablePassingTransactionWhenInsertMessage:(BOOL)arg0;
- (BOOL)timxStatisticsCrashFix;
- (void)setTimxStatisticsCrashFix:(BOOL)arg0;
- (BOOL)cmdIndexUpdateFix;
- (void)setCmdIndexUpdateFix:(BOOL)arg0;
- (BOOL)enableBots;
- (void)setEnableBots:(BOOL)arg0;
- (void)setEnableEditMessage:(BOOL)arg0;
- (BOOL)enableShowMsgEdited;
- (void)setEnableShowMsgEdited:(BOOL)arg0;
- (BOOL)enableUpdateMsgContent;
- (void)setEnableUpdateMsgContent:(BOOL)arg0;
- (BOOL)enableUploadReadIndexLog;
- (void)setEnableUploadReadIndexLog:(BOOL)arg0;
- (BOOL)enableConversationNilLog;
- (void)setEnableConversationNilLog:(BOOL)arg0;
- (BOOL)enableFixKeyNilCrash;
- (void)setEnableFixKeyNilCrash:(BOOL)arg0;
- (BOOL)enableUpdateConversationLog;
- (void)setEnableUpdateConversationLog:(BOOL)arg0;
- (BOOL)enableFixNewUserCannotStartInit;
- (void)setEnableFixNewUserCannotStartInit:(BOOL)arg0;
- (void)setEnableFixPullerKickofTwice:(BOOL)arg0;
- (BOOL)enableStrangerFetcherOpt;
- (void)setEnableStrangerFetcherOpt:(BOOL)arg0;
- (double)pollingPullOfflineMsgInterval;
- (void)setPollingPullOfflineMsgInterval:(double)arg0;
- (BOOL)unreadCountReportDowngradeThreshold;
- (void)setUnreadCountReportDowngradeThreshold:(BOOL)arg0;
- (id)defaultBiz;
- (void)setDefaultBiz:(id)arg0;
- (id)defaultAccess;
- (void)setDefaultAccess:(id)arg0;
- (BOOL)enableStrangerConvRemoteFetchFix;
- (void)setEnableStrangerConvRemoteFetchFix:(BOOL)arg0;
- (BOOL)upgradeFromHTS;
- (void)setUpgradeFromHTS:(BOOL)arg0;
- (BOOL)isFullEncrypt;
- (void)setIsFullEncrypt:(BOOL)arg0;
- (id /* block */)getFreeDiskSpaceBlock;
- (void)setGetFreeDiskSpaceBlock:(id /* block */)arg0;
- (id /* block */)shouldFilterLastHintMsgUpdateBlock;
- (void)setShouldFilterLastHintMsgUpdateBlock:(id /* block */)arg0;
- (BOOL)dbRepairEnable;
- (void)setDbRepairEnable:(BOOL)arg0;
- (double)dbRepairBackupCycle;
- (void)setDbRepairBackupCycle:(double)arg0;
- (double)dbRepairBackupMaxSize;
- (void)setDbRepairBackupMaxSize:(double)arg0;
- (double)dbRepairBackupMinSpaceSize;
- (void)setDbRepairBackupMinSpaceSize:(double)arg0;
- (long long)dbRepairBackupSizeMinMultiple;
- (void)setDbRepairBackupSizeMinMultiple:(long long)arg0;
- (BOOL)dbRepairDisableRepairKit;
- (void)setDbRepairDisableRepairKit:(BOOL)arg0;
- (BOOL)enableIgnorePullingFlag;
- (void)setEnableIgnorePullingFlag:(BOOL)arg0;
- (long long)msgDBVersion;
- (void)setMsgDBVersion:(long long)arg0;
- (id)dbRepairBackupExcludeErrorCodes;
- (void)setDbRepairBackupExcludeErrorCodes:(id)arg0;
- (id)dbTraceThreadErrorCodes;
- (void)setDbTraceThreadErrorCodes:(id)arg0;
- (long long)dbFirstLoadDetect;
- (void)setDbFirstLoadDetect:(long long)arg0;
- (void)setMsgLinkTrackerEnable:(BOOL)arg0;
- (void)setEnableLoadMsgLinkTracker:(BOOL)arg0;
- (long long)maxDBStrangerConvCount;
- (void)setMaxDBStrangerConvCount:(long long)arg0;
- (BOOL)enableParticipantMap;
- (void)setEnableParticipantMap:(BOOL)arg0;
- (void)setEnableLiveConsultMsgAbility:(BOOL)arg0;
- (BOOL)enableMMKVTest;
- (void)setEnableMMKVTest:(BOOL)arg0;
- (long long)mmkvTestFastTestCount;
- (void)setMmkvTestFastTestCount:(long long)arg0;
- (BOOL)revertOfflinePullAsyncWriteDB;
- (void)setRevertOfflinePullAsyncWriteDB:(BOOL)arg0;
- (BOOL)fixSendMessageAsyncBadOrderIndex;
- (void)setFixSendMessageAsyncBadOrderIndex:(BOOL)arg0;
- (BOOL)enablePullingStickOnMsgsWhenReceiveCommandMsg;
- (void)setEnablePullingStickOnMsgsWhenReceiveCommandMsg:(BOOL)arg0;
- (BOOL)markReadUnreadReportOptimize;
- (void)setMarkReadUnreadReportOptimize:(BOOL)arg0;
- (BOOL)readReceiptUpdateOptimize;
- (void)setReadReceiptUpdateOptimize:(BOOL)arg0;
- (BOOL)enableLoadMoreOptimizeForFilterBoxType;
- (void)setEnableLoadMoreOptimizeForFilterBoxType:(BOOL)arg0;
- (void)setEnableUnreadOptiomizeIIForGeneralBoxType:(BOOL)arg0;
- (BOOL)enableDeleteConversationIdentifiersOptimize;
- (void)setEnableDeleteConversationIdentifiersOptimize:(BOOL)arg0;
- (unsigned long long)innerPushTimelinessOptimize;
- (void)setInnerPushTimelinessOptimize:(unsigned long long)arg0;
- (void)setHistoryMessagesFetchOptimize:(BOOL)arg0;
- (void)setConversationFilterMemoryOptimize:(BOOL)arg0;
- (id /* block */)conversationSortOrderCalculator;
- (void)setConversationSortOrderCalculator:(id /* block */)arg0;
- (BOOL)enableRedundantOfflinePullOpt;
- (void)setEnableRedundantOfflinePullOpt:(BOOL)arg0;
- (double)rejectLCPullDelayTimeInterval;
- (void)setRejectLCPullDelayTimeInterval:(double)arg0;
- (void)setOverrideTableNamePrefix:(id)arg0;
- (void)setEnableReceiveMessageLog:(BOOL)arg0;
- (void)setClientInvokeCallBackReportDuration:(long long)arg0;
- (void)setPassportCertAuthEnable:(BOOL)arg0;
- (void)setPassportCertAuthCMDWhitelist:(id)arg0;
- (BOOL)passportCertAuthEnable;
- (id)passportCertAuthCMDWhitelist;
- (void)setCertAuthGenerator:(id /* block */)arg0;
- (void)setTimoIMClientDelegate:(id)arg0;
- (void)setTimoStrangerExplicitInbox:(id)arg0;
- (void)setTimoStrangerExplicitDelegate:(id)arg0;
- (void)setChaFileFallbackToSingleInstancePath:(BOOL)arg0;
- (void)setMmkvFallbackToSingleInstancePath:(BOOL)arg0;
- (void)setUserDefaultFallbackToSingleInstancePath:(BOOL)arg0;
- (BOOL)networkReqConfigOptimize;
- (id)httpClientImpl;
- (BOOL)enableCheckMessageInfoOpt;
- (int)sdkConfigGetApiVersionCode;
- (BOOL)enableSdkConfigGetApiOpt;
- (void)p_setupDefaultValue_DouYinIMP;
- (void)p_setupDefaultValue_DefaultIMP;
- (void)setEnableUploadBOE:(BOOL)arg0;
- (id)p_fetchDeviceType;
- (void)setDbIOOpt:(BOOL)arg0;
- (id)arrAdditionalReceiveService;
- (void)setArrAdditionalReceiveService:(id)arg0;
- (BOOL)enableUploadBOE;
- (BOOL)userDefaultFallbackToSingleInstancePath;
- (BOOL)chaFileFallbackToSingleInstancePath;
- (BOOL)mmkvFallbackToSingleInstancePath;
- (void)setEnableSdkConfigGetApiOpt:(BOOL)arg0;
- (void)setSdkConfigGetApiVersionCode:(int)arg0;
- (BOOL)enableStangerSettingInfoNotify;
- (void)setEnableStangerSettingInfoNotify:(BOOL)arg0;
- (BOOL)enableRemovedFromChatOptimize;
- (void)setEnableRemovedFromChatOptimize:(BOOL)arg0;
- (BOOL)enableCompensationMessageContent;
- (void)setEnableCompensationMessageContent:(BOOL)arg0;
- (BOOL)enableConcurrentlyCallTheNetworkInterfaceToSendMessages;
- (void)setEnableConcurrentlyCallTheNetworkInterfaceToSendMessages:(BOOL)arg0;
- (id)measureElapsedTimeDict;
- (void)setMeasureElapsedTimeDict:(id)arg0;
- (BOOL)enableMeasureDBMarkReadElapsedTime;
- (void)setEnableMeasureDBMarkReadElapsedTime:(BOOL)arg0;
- (long long)measureDBMarkReadElapsedTimeExceptionDuration;
- (void)setMeasureDBMarkReadElapsedTimeExceptionDuration:(long long)arg0;
- (BOOL)enableTemporaryDropOldMarkReadCommand;
- (void)setEnableTemporaryDropOldMarkReadCommand:(BOOL)arg0;
- (BOOL)enableLoadFirstFrameDataFirstOptimization;
- (void)setEnableLoadFirstFrameDataFirstOptimization:(BOOL)arg0;
- (BOOL)enableFirstFrameQueryConversationOptimization;
- (void)setEnableFirstFrameQueryConversationOptimization:(BOOL)arg0;
- (BOOL)enableReceiveMessageLog;
- (long long)clientInvokeCallBackReportDuration;
- (BOOL)enableLoadMessageCheckingEmptyOptimize;
- (void)setEnableLoadMessageCheckingEmptyOptimize:(BOOL)arg0;
- (id)enableMeasureDispatchQueueElapsededTime;
- (void)setEnableMeasureDispatchQueueElapsededTime:(id)arg0;
- (id)measureClientInvokeCallbackConfig;
- (void)setMeasureClientInvokeCallbackConfig:(id)arg0;
- (BOOL)enableMeasureClientInvokeCallback;
- (void)setEnableMeasureClientInvokeCallback:(BOOL)arg0;
- (BOOL)enableReceiveMessageUseIndependentQueue;
- (void)setEnableReceiveMessageUseIndependentQueue:(BOOL)arg0;
- (BOOL)enableBatchUpdateSettingInfosDelegateFix;
- (void)setEnableBatchUpdateSettingInfosDelegateFix:(BOOL)arg0;
- (id)dbRebuildErrorCodes;
- (void)setDbRebuildErrorCodes:(id)arg0;
- (id)dbTraceThreadErrorMsgs;
- (void)setDbTraceThreadErrorMsgs:(id)arg0;
- (BOOL)dbFilterDataForCorrupt;
- (BOOL)fetchAllGroupsByDBOpt;
- (BOOL)enableIssueAirCushion;
- (BOOL)fixIMArraryOverflow;
- (BOOL)enableImUCTrakCompletion;
- (BOOL)localCheckMsgOpt;
- (BOOL)enableUnreadCountMsgBoxAndDemoteFix;
- (BOOL)enableLogDBConvMsgCountInfo;
- (BOOL)sdkNetworkMonitor;
- (BOOL)readInterfaceOptimize;
- (BOOL)minIndexInterfaceOptimize;
- (BOOL)reportConvChainSource;
- (BOOL)syncRealMsgStatusWithServer;
- (BOOL)enableMarkReadCommandMessageLog;
- (BOOL)rmAuthCertToIES;
- (BOOL)markReadOptimizeRollBack;
- (BOOL)mergeUpdateGroupConvExt;
- (id)trackValidRequestList;
- (void)setTrackValidRequestList:(id)arg0;
- (BOOL)dbWatchDogOpt;
- (void)setDbWatchDogOpt:(BOOL)arg0;
- (BOOL)dbInitOpt;
- (void)setDbInitOpt:(BOOL)arg0;
- (BOOL)dbElapsedTimeGather;
- (void)setDbElapsedTimeGather:(BOOL)arg0;
- (BOOL)dbOnTimeClose;
- (void)setDbOnTimeClose:(BOOL)arg0;
- (double)dbOnTimeCloseInterval;
- (void)setDbOnTimeCloseInterval:(double)arg0;
- (BOOL)dbIOOpt;
- (id)dbSplitRefactor;
- (void)setDbSplitRefactor:(id)arg0;
- (BOOL)dbSplitEnable;
- (void)setDbSplitEnable:(BOOL)arg0;
- (BOOL)dbSplitFullFit;
- (void)setDbSplitFullFit:(BOOL)arg0;
- (BOOL)dbSplitFull;
- (void)setDbSplitFull:(BOOL)arg0;
- (void)setDbSplitCrudCMDOpt:(BOOL)arg0;
- (BOOL)dbSplitWriteQueueOpt;
- (void)setDbSplitWriteQueueOpt:(BOOL)arg0;
- (BOOL)dbSplitLogicOpt;
- (void)setDbSplitLogicOpt:(BOOL)arg0;
- (double)dbSplitMinFreeSpace;
- (void)setDbSplitMinFreeSpace:(double)arg0;
- (double)dbSplitMinMultipleDBSize;
- (void)setDbSplitMinMultipleDBSize:(double)arg0;
- (long long)dbSplitMsgMaxLimit;
- (void)setDbSplitMsgMaxLimit:(long long)arg0;
- (BOOL)dbSplitMaxMsgCreateTime;
- (void)setDbSplitMaxMsgCreateTime:(BOOL)arg0;
- (BOOL)dbSplitWriteQueueToReadQueue;
- (void)setDbSplitWriteQueueToReadQueue:(BOOL)arg0;
- (BOOL)dbSplitBackup;
- (void)setDbSplitBackup:(BOOL)arg0;
- (long long)dbSplitMaxMigrateCount;
- (void)setDbSplitMaxMigrateCount:(long long)arg0;
- (BOOL)dbSplitInsertMessageUseQueue;
- (void)setDbSplitInsertMessageUseQueue:(BOOL)arg0;
- (BOOL)insertMsgSuccessUpdateIndex;
- (void)setInsertMsgSuccessUpdateIndex:(BOOL)arg0;
- (BOOL)migrationOpt;
- (void)setMigrationOpt:(BOOL)arg0;
- (BOOL)splitDeleteOldFile;
- (void)setSplitDeleteOldFile:(BOOL)arg0;
- (BOOL)splitMsgWriteConcurencyOpt;
- (void)setSplitMsgWriteConcurencyOpt:(BOOL)arg0;
- (BOOL)termiateBlockDB;
- (void)setTermiateBlockDB:(BOOL)arg0;
- (BOOL)enableSendMessageMonitorOptimize;
- (void)setEnableSendMessageMonitorOptimize:(BOOL)arg0;
- (id)updateSortOrderOptimize;
- (void)setUpdateSortOrderOptimize:(id)arg0;
- (BOOL)fixOrderIndexOptimize;
- (void)setFixOrderIndexOptimize:(BOOL)arg0;
- (BOOL)enableMarkOnScreenMarkRead;
- (void)setEnableMarkOnScreenMarkRead:(BOOL)arg0;
- (BOOL)enableIMSDKMemoryUseOpt;
- (void)setEnableIMSDKMemoryUseOpt:(BOOL)arg0;
- (BOOL)unreadCountReportOptimize;
- (id)imAwemeDomainSwitchWhiteList;
- (void)setImAwemeDomainSwitchWhiteList:(id)arg0;
- (id)offlinePullerOptimize;
- (void)setOfflinePullerOptimize:(id)arg0;
- (BOOL)skipCrossUserCursorWriteInOfflinePulling;
- (BOOL)fixThrottleQueue;
- (BOOL)fixOfficialAssistantOrder;
- (BOOL)recallMsgInChain;
- (BOOL)fixHardDeleteMsgsBatchUpdate;
- (BOOL)sdkAlogOptimize;
- (BOOL)unreadConvNoticeFix;
- (BOOL)strangerUnreadNotifyFix;
- (void)setStrangerUnreadNotifyFix:(BOOL)arg0;
- (BOOL)deleteConversationCommandFix;
- (void)setDeleteConversationCommandFix:(BOOL)arg0;
- (id)overrideTableNamePrefix;
- (id /* block */)sortOrderCalculatorHighPerformance;
- (void)setSortOrderCalculatorHighPerformance:(id /* block */)arg0;
- (id /* block */)certAuthGenerator;
- (id)timoIMClientDelegate;
- (id)timoStrangerExplicitInbox;
- (id)timoStrangerExplicitDelegate;
- (BOOL)unreadConvFilteringEnable;
- (void)setUnreadConvFilteringEnable:(BOOL)arg0;
- (int)unreadConvFilteringLimit;
- (void)setUnreadConvFilteringLimit:(int)arg0;
- (void)setNetworkReqConfigOptimize:(BOOL)arg0;
- (BOOL)ignoreInternalModelSet;
- (BOOL)ignoreSomeParticipantsModel;
- (BOOL)coreinfoChangePushApplyBasicInfo;
- (BOOL)enableRepairKit;
- (void)setEnableRepairKit:(BOOL)arg0;
- (BOOL)initHasMoreFix;
- (void)setInitHasMoreFix:(BOOL)arg0;
- (void)setUid:(id)arg0;
- (id)uid;
- (id)init;
- (void)setAppID:(id)arg0;
- (void)setDeviceID:(id)arg0;
- (id)deviceType;
- (id)osVersion;
- (void).cxx_destruct;
- (void)setService:(long long)arg0;
- (id)deviceID;
- (long long)method;
- (long long)authType;
- (void)setMethod:(long long)arg0;
- (id)initWithType:(unsigned long long)arg0;
- (id)appID;
- (void)setDeviceType:(id)arg0;
- (id)businessID;
- (void)setAuthType:(long long)arg0;
- (long long)service;
- (void)setBusinessID:(id)arg0;
- (void)setOsVersion:(id)arg0;
- (id)inboxes;
- (id)devicePlatform;
- (void)setDevicePlatform:(id)arg0;
- (id)appBundleVersion;
- (void)setAppBundleVersion:(id)arg0;

@end
