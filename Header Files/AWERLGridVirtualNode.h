//
//     Generated by private class-dump
//

@class NSMutableArray;

@interface AWERLGridVirtualNode : AWERLVirtualNode {
    NSMutableArray *_children;
    id /* block */ _itemSizeBlock;
    struct AWERLGridStyle { struct CGSize { double width; double height; } itemSize; struct UIEdgeInsets { double top; double left; double bottom; double right; } padding; double minimumInteritemSpacing; double minimumLineSpacing; } _style;
}

@property (retain, nonatomic) NSMutableArray *children;
@property (copy, nonatomic) id /* block */ itemSizeBlock;
@property (nonatomic) struct AWERLGridStyle { struct CGSize { double width; double height; } itemSize; struct UIEdgeInsets { double top; double left; double bottom; double right; } padding; double minimumInteritemSpacing; double minimumLineSpacing; } style;

- (void)updateChildren:(id)arg0;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 style:(struct AWERLGridStyle { struct CGSize { double x0; double x1; } x0; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x1; double x2; double x3; })arg1 props:(id)arg2 children:(id)arg3;
- (id)createLayoutNode;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 style:(struct AWERLGridStyle { struct CGSize { double x0; double x1; } x0; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x1; double x2; double x3; })arg1 itemSizeBlock:(id /* block */)arg2 props:(id)arg3 children:(id)arg4;
- (id /* block */)itemSizeBlock;
- (void)setItemSizeBlock:(id /* block */)arg0;
- (struct AWERLGridStyle { struct CGSize { double x0; double x1; } x0; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x1; double x2; double x3; })style;
- (void)setChildren:(id)arg0;
- (void).cxx_destruct;
- (id)children;
- (void)setStyle:(struct AWERLGridStyle { struct CGSize { double x0; double x1; } x0; struct UIEdgeInsets { double x0; double x1; double x2; double x3; } x1; double x2; double x3; })arg0;
- (unsigned long long)numberOfChildren;
- (id)childAtIndex:(unsigned long long)arg0;

@end
