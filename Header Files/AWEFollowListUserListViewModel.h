//
//     Generated by private class-dump
//

@class NSError, NSArray, NSDictionary, NSMutableSet, AWERelationListDataController, NSMutableArray, NSString;

@interface AWEFollowListUserListViewModel : AWEFollowUserListBaseSectionViewModel <AWEUserMessage, AWEConcernFollowListUnreadCacheMessage, AWEConcernRecentUpdateUnreadListPageHandlerProtocol> {
    BOOL _isCached;
    BOOL _searching;
    BOOL _shouldHideHeader;
    BOOL _hasError;
    BOOL _hasMore;
    BOOL _withForceInsert;
    BOOL _isLookWorksLoading;
    NSString *_vcd;
    long long _sortingSourceType;
    NSError *_requestError;
    NSArray *_currentUnreadUserIDList;
    NSArray *_groupFilters;
    unsigned long long _groupFetchStatus;
    long long _groupFilterType;
    long long _mixCount;
    NSString *_requestLogID;
    AWERelationListDataController *_dataController;
    long long _shuffleSeed;
    NSMutableSet *_pushingUpdateUIDs;
    NSDictionary *_trackerParam;
    NSMutableArray *_topUserIds;
}

@property (retain, nonatomic) AWERelationListDataController *dataController;
@property (nonatomic) BOOL hasMore;
@property (nonatomic) long long sortingSourceType;
@property (nonatomic) BOOL shouldHideHeader;
@property (nonatomic) BOOL withForceInsert;
@property (nonatomic) long long shuffleSeed;
@property (nonatomic) BOOL isLookWorksLoading;
@property (retain, nonatomic) NSMutableSet *pushingUpdateUIDs;
@property (copy, nonatomic) NSDictionary *trackerParam;
@property (retain, nonatomic) NSMutableArray *topUserIds;
@property (retain, nonatomic) NSArray *groupFilters;
@property (nonatomic) unsigned long long groupFetchStatus;
@property (nonatomic) long long groupFilterType;
@property (copy, nonatomic) NSString *vcd;
@property (nonatomic) BOOL isCached;
@property (nonatomic) BOOL searching;
@property (nonatomic) BOOL hasError;
@property (retain, nonatomic) NSError *requestError;
@property (readonly, nonatomic) BOOL forceAllUnread;
@property (copy, nonatomic) NSArray *currentUnreadUserIDList;
@property (readonly, nonatomic) BOOL isRequestOnAir;
@property (nonatomic) long long mixCount;
@property (copy, nonatomic) NSString *requestLogID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)aAWERelationDOUYINHTSAdapterClass;

- (void)didFinishFollowUser:(id)arg0 status:(long long)arg1 error:(id)arg2;
- (void)didFinishUnFollowUser:(id)arg0 status:(long long)arg1 error:(id)arg2;
- (void)didFinishTopFollowingUser:(id)arg0 status:(long long)arg1;
- (void)didFinishUnTopFollowingUser:(id)arg0 status:(long long)arg1;
- (void)didFinishBlockUser:(id)arg0 status:(long long)arg1;
- (void)didFinishTapTAIsFriendWithUser:(id)arg0 isFriend:(BOOL)arg1;
- (void)didFinishSetRemarkWithUser:(id)arg0;
- (void)didFinishRemoveFansWithUser:(id)arg0;
- (void)didSpecialFollowWithUser:(id)arg0 error:(id)arg1;
- (void)didCancelSpecialFollowWithUser:(id)arg0 error:(id)arg1;
- (BOOL)isRequestOnAir;
- (void)followListUnreadCacheDidChangeWithUserID:(id)arg0 deleteItemIDs:(id)arg1;
- (Class)emptyCellClass;
- (id)currentUnreadUserIDList;
- (BOOL)noMoreUserData;
- (void)loadMoreUnreadUserWithCompletion:(id /* block */)arg0;
- (id)userModelWithUserID:(id)arg0;
- (void)followListUnreadCacheDidReplaceWithUserID:(id)arg0;
- (void)setDataController:(id)arg0;
- (id)enterFromString;
- (id)trackerParam;
- (void)setTrackerParam:(id)arg0;
- (void)unfollowUser:(id)arg0;
- (void)syncModelFollowStatus:(id)arg0;
- (void)onClickUnFollowUserOnProfileMenu:(id)arg0 trackerParam:(id)arg1;
- (BOOL)forceAllUnread;
- (BOOL)hotsoonHasMoreData;
- (id)aAWERelationDOUYINHTSAdapter;
- (long long)mixCount;
- (void)setMixCount:(long long)arg0;
- (void)setRequestLogID:(id)arg0;
- (id)vcd;
- (void)setVcd:(id)arg0;
- (id)requestLogID;
- (BOOL)revertLibra;
- (void)refreshCurrentUnreadUserIDList;
- (BOOL)shouldHideHeader;
- (id)groupFilters;
- (long long)sortingSourceType;
- (long long)groupFilterType;
- (unsigned long long)groupFetchStatus;
- (void)trackFollowingVideoEntranceShowWithModel:(id)arg0;
- (void)setPushingUpdateUIDs:(id)arg0;
- (void)setShuffleSeed:(long long)arg0;
- (void)fetchListData:(BOOL)arg0 groupType:(long long)arg1 completion:(id /* block */)arg2;
- (void)setGroupFetchStatus:(unsigned long long)arg0;
- (void)cacheUnreadItemsIfNeededWithFollowingUser:(id)arg0;
- (BOOL)enableCacheWithScene:(long long)arg0;
- (void)replaceUserListWithList:(id)arg0;
- (void)setGroupFilters:(id)arg0;
- (void)trackGroupFilterButtonShowAndClick;
- (BOOL)needCacheFollowingUserUnreadItems;
- (void)setSortingSourceType:(long long)arg0;
- (void)setGroupFilterType:(long long)arg0;
- (void)setShouldHideHeader:(BOOL)arg0;
- (void)replaceUserListWithList:(id)arg0 animated:(BOOL)arg1;
- (BOOL)autoUnTopUserIfNeed:(id)arg0;
- (void)restoreSpecialFollow:(id)arg0 enterFrom:(id)arg1 completion:(id /* block */)arg2;
- (void)restoreTopFollow:(id)arg0 enterFrom:(id)arg1 completion:(id /* block */)arg2;
- (long long)currentTopCount;
- (long long)shuffleSeed;
- (void)setCurrentUnreadUserIDList:(id)arg0;
- (id)tractParamsWithGroupFilter:(id)arg0 isClickTract:(BOOL)arg1;
- (void)fetchListData:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)loadMoreListData:(BOOL)arg0 vcdAuthFirstTime:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)fetchGroupFilter;
- (void)updateDataControllerSourType:(long long)arg0;
- (void)updateDataControllerGroupFilterType:(long long)arg0;
- (void)listReloadForHeaderUpdate:(BOOL)arg0;
- (void)setupForCache;
- (void)loadMoreHotsoonDataWithCompletion:(id /* block */)arg0;
- (void)cancelFollowStayPutCellIfNeed:(id)arg0;
- (void)willFollowStayPutUser:(id)arg0;
- (void)didFollowStayPutUser:(id)arg0 enterFrom:(id)arg1;
- (void)updateTopCount;
- (BOOL)isUserToppedWithUserID:(id)arg0;
- (BOOL)withForceInsert;
- (void)setWithForceInsert:(BOOL)arg0;
- (BOOL)isLookWorksLoading;
- (void)setIsLookWorksLoading:(BOOL)arg0;
- (id)pushingUpdateUIDs;
- (id)topUserIds;
- (void)setTopUserIds:(id)arg0;
- (void).cxx_destruct;
- (void)setHasMore:(BOOL)arg0;
- (BOOL)hasMore;
- (id)shuffle:(id)arg0;
- (void)dealloc;
- (void)setUp;
- (void)setHasError:(BOOL)arg0;
- (void)addObserver;
- (BOOL)hasError;
- (BOOL)searching;
- (void)setSearching:(BOOL)arg0;
- (BOOL)isCached;
- (void)setIsCached:(BOOL)arg0;
- (id)dataController;
- (id)requestError;
- (void)setRequestError:(id)arg0;

@end
