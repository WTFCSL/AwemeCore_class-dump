//
//     Generated by private class-dump
//

@class IESLiveAnchorSpeechCommentMonitor, NSString, IESLiveAnchorSpeechKWSManager, IESLiveAnchorSpeechASRManager, IESLiveAnchorSpeechCommentView, HTSLiveAnchorAudioConf, NSObject, NSMutableArray, IESLivePSComponentConfigModel, IESLiveAnchorSpeechCommentApi;
@protocol OS_dispatch_queue;

@interface IESLiveAnchorSpeechCommentFragment : IESLiveRoomComponent <IESLiveMessageInteractionDataCollectionAction, IESLiveAnchorSpeechKWSDelegate, IESLiveAnchorSpeechASRDelegate, IESLiveAnchorAudioListener, IESLiveAnchorSpeechCommentActions, IESLiveSettingsSubscriber> {
    BOOL _needStartKWS;
    BOOL _needStartASR;
    BOOL _kwsModelReady;
    BOOL _needConsumeBuffer;
    BOOL _hasShownGuideTip;
    BOOL _disableInterruption;
    BOOL _enableFixCrash;
    BOOL _disableExpireUserAction;
    long long _auth;
    IESLiveAnchorSpeechKWSManager *_KWSManager;
    IESLiveAnchorSpeechASRManager *_ASRManager;
    NSString *_kwsModelRootPath;
    NSMutableArray *_audioBuffer;
    NSObject<OS_dispatch_queue> *_audioProcessQueue;
    IESLiveAnchorSpeechCommentView *_anchorSpeechCommentView;
    IESLivePSComponentConfigModel *_configModel;
    IESLiveAnchorSpeechCommentApi *_api;
    IESLiveAnchorSpeechCommentMonitor *_monitor;
    long long _abGroup;
    long long _asrTempDuration;
    long long _asrCompleteDuration;
    long long _hotWordsScale;
    HTSLiveAnchorAudioConf *_settingModel;
    NSMutableArray *_availUserActions;
    NSMutableArray *_curProcessUserActions;
    NSString *_curProcessHotwords;
    NSString *_curProcessKeyword;
    NSString *_curReqId;
    NSString *_speechResult;
    NSString *_audioFilePath;
    double _startSpeechTimeStamp;
    long long _userActionMaxCount;
}

@property (nonatomic) long long auth;
@property (retain, nonatomic) IESLiveAnchorSpeechKWSManager *KWSManager;
@property (retain, nonatomic) IESLiveAnchorSpeechASRManager *ASRManager;
@property (nonatomic) BOOL needStartKWS;
@property (nonatomic) BOOL needStartASR;
@property (nonatomic) BOOL kwsModelReady;
@property (copy, nonatomic) NSString *kwsModelRootPath;
@property (retain, nonatomic) NSMutableArray *audioBuffer;
@property (nonatomic) BOOL needConsumeBuffer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *audioProcessQueue;
@property (retain, nonatomic) IESLiveAnchorSpeechCommentView *anchorSpeechCommentView;
@property (retain, nonatomic) IESLivePSComponentConfigModel *configModel;
@property (retain, nonatomic) IESLiveAnchorSpeechCommentApi *api;
@property (retain, nonatomic) IESLiveAnchorSpeechCommentMonitor *monitor;
@property (nonatomic) BOOL hasShownGuideTip;
@property (nonatomic) long long abGroup;
@property (nonatomic) long long asrTempDuration;
@property (nonatomic) long long asrCompleteDuration;
@property (nonatomic) long long hotWordsScale;
@property (retain, nonatomic) HTSLiveAnchorAudioConf *settingModel;
@property (retain, nonatomic) NSMutableArray *availUserActions;
@property (retain, nonatomic) NSMutableArray *curProcessUserActions;
@property (copy, nonatomic) NSString *curProcessHotwords;
@property (copy, nonatomic) NSString *curProcessKeyword;
@property (copy, nonatomic) NSString *curReqId;
@property (copy, nonatomic) NSString *speechResult;
@property (copy, nonatomic) NSString *audioFilePath;
@property (nonatomic) double startSpeechTimeStamp;
@property (nonatomic) BOOL disableInterruption;
@property (nonatomic) BOOL enableFixCrash;
@property (nonatomic) BOOL disableExpireUserAction;
@property (nonatomic) long long userActionMaxCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)componentShouldActive:(id)arg0;

- (void)setConfigModel:(id)arg0;
- (id)configModel;
- (void)setAudioFilePath:(id)arg0;
- (void)trackBubbleShow;
- (void)trackBubbleClick;
- (void)componentBindService;
- (void)componentCreate;
- (void)componentMount;
- (void)componentUnmount;
- (void)ASREngineDidStartWithReqId:(id)arg0;
- (void)ASREngineError;
- (void)ASREngineRecognizeResult:(id)arg0 complete:(BOOL)arg1;
- (void)finishTalking;
- (void)didMessageListNodeDidDisplayOnScreenOnce:(id)arg0;
- (void)didUserEnterNodeDidDisplayOnScreen:(id)arg0;
- (void)anchorSpeechSettingChanged:(id)arg0;
- (void)anchorSpeechAuthChanged:(long long)arg0;
- (void)setHasShownGuideTip:(BOOL)arg0;
- (void)fetchKwsModelIfNeed;
- (id)KWSManager;
- (id)ASRManager;
- (void)fetchKwsModelWithName:(id)arg0;
- (void)setKwsModelRootPath:(id)arg0;
- (void)setKwsModelReady:(BOOL)arg0;
- (BOOL)filterWakeUpMessage:(id)arg0;
- (void)stopKWSEngine;
- (void)setNeedStartKWS:(BOOL)arg0;
- (BOOL)kwsModelReady;
- (BOOL)hasShownGuideTip;
- (void)showBubbleGuideIfNeed;
- (id)availUserActions;
- (long long)userActionMaxCount;
- (BOOL)disableExpireUserAction;
- (void)cleanExpiredUserActions;
- (BOOL)needStartASR;
- (id)audioProcessQueue;
- (void)setNeedStartASR:(BOOL)arg0;
- (BOOL)needStartKWS;
- (void)removeViewAndStopAsr;
- (void)setAnchorSpeechCommentView:(id)arg0;
- (void)stopASREngine;
- (id)speechResult;
- (id)curReqId;
- (double)startSpeechTimeStamp;
- (id)curProcessKeyword;
- (id)anchorSpeechCommentView;
- (id)curProcessUserActions;
- (void)trackAnchorSpeechVerifyResultFail;
- (void)trackAnchorSpeechVerifyResultSuccessWithTextType:(long long)arg0 isToAll:(BOOL)arg1;
- (void)setCurProcessKeyword:(id)arg0;
- (void)setCurReqId:(id)arg0;
- (void)setCurProcessHotwords:(id)arg0;
- (void)setSpeechResult:(id)arg0;
- (long long)hotWordsScale;
- (id)kwsModelRootPath;
- (id)curProcessHotwords;
- (BOOL)needConsumeBuffer;
- (void)setNeedConsumeBuffer:(BOOL)arg0;
- (void)updateSettingWithConfig:(id)arg0;
- (void)userActionDidDisplayOnScreen:(id)arg0;
- (BOOL)enableFixCrash;
- (void)processKWSInAudioQueueWithAudioData:(id)arg0 numberOfFrames:(int)arg1 sampleRate:(double)arg2 channels:(int)arg3;
- (void)processASRInAudioQueueWithAudioData:(id)arg0 numberOfFrames:(int)arg1 sampleRate:(double)arg2 channels:(int)arg3;
- (BOOL)disableInterruption;
- (void)asrNoResultTimeout;
- (void)verifySpeechCommentResultIfNeedWithInterruption;
- (void)setCurProcessUserActions:(id)arg0;
- (id)getRecentNicknames;
- (void)setStartSpeechTimeStamp:(double)arg0;
- (void)setupPublicScreenComponent;
- (long long)asrTempDuration;
- (long long)asrCompleteDuration;
- (void)trackAnchorSpeechKeywordWakeUp;
- (void)verifySpeechCommentResultIfNeed;
- (void)wakeUpResult:(id)arg0 traceback:(double)arg1;
- (void)audioFeedbackWithData:(id)arg0 numberOfFrames:(int)arg1 sampleRate:(double)arg2 channels:(int)arg3 pts:(long long)arg4 type:(long long)arg5;
- (void)settingUpdateWithKey:(id)arg0 value:(id)arg1;
- (void)trackPublicScreenSettingPanelViewClick;
- (void)setKWSManager:(id)arg0;
- (void)setASRManager:(id)arg0;
- (void)setAudioProcessQueue:(id)arg0;
- (void)setAsrTempDuration:(long long)arg0;
- (void)setAsrCompleteDuration:(long long)arg0;
- (void)setHotWordsScale:(long long)arg0;
- (void)setAvailUserActions:(id)arg0;
- (void)setDisableInterruption:(BOOL)arg0;
- (void)setEnableFixCrash:(BOOL)arg0;
- (void)setDisableExpireUserAction:(BOOL)arg0;
- (void)setUserActionMaxCount:(long long)arg0;
- (long long)abGroup;
- (void).cxx_destruct;
- (id)audioBuffer;
- (id)monitor;
- (void)setAudioBuffer:(id)arg0;
- (void)setMonitor:(id)arg0;
- (void)setAbGroup:(long long)arg0;
- (id)api;
- (void)setSettingModel:(id)arg0;
- (id)settingModel;
- (long long)auth;
- (void)setAuth:(long long)arg0;
- (void)setApi:(id)arg0;
- (id)audioFilePath;

@end
