//
//     Generated by private class-dump
//

@class NSURLResponse, AFSecurityPolicy, NSObject, NSDictionary, NSString, NSSet, NSURLRequest, NSInputStream, NSRecursiveLock, NSURLConnection, NSData, NSURLCredential, NSError, NSOutputStream;
@protocol OS_dispatch_queue, OS_dispatch_group;

@interface AFURLConnectionOperation : NSOperation <NSURLConnectionDelegate, NSURLConnectionDataDelegate, NSSecureCoding, NSCopying> {
    BOOL _shouldUseCredentialStorage;
    NSOutputStream *_outputStream;
    NSSet *_runLoopModes;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSDictionary *_userInfo;
    long long _state;
    NSRecursiveLock *_lock;
    NSURLConnection *_connection;
    NSString *_responseString;
    unsigned long long _responseStringEncoding;
    long long _totalBytesRead;
    unsigned long long _backgroundTaskIdentifier;
    id /* block */ _uploadProgress;
    id /* block */ _downloadProgress;
    id /* block */ _authenticationChallenge;
    id /* block */ _cacheResponse;
    id /* block */ _redirectResponse;
}

@property (copy, nonatomic) id /* block */ uploadProgress;
@property (nonatomic, setter=af_setUploadProgressAnimated:) BOOL af_uploadProgressAnimated;
@property (copy, nonatomic) id /* block */ downloadProgress;
@property (nonatomic, setter=af_setDownloadProgressAnimated:) BOOL af_downloadProgressAnimated;
@property (nonatomic) long long state;
@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSURLConnection *connection;
@property (retain, nonatomic) NSURLRequest *request;
@property (retain, nonatomic) NSURLResponse *response;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSData *responseData;
@property (copy, nonatomic) NSString *responseString;
@property (nonatomic) unsigned long long responseStringEncoding;
@property (nonatomic) long long totalBytesRead;
@property (nonatomic) unsigned long long backgroundTaskIdentifier;
@property (copy, nonatomic) id /* block */ uploadProgress;
@property (copy, nonatomic) id /* block */ downloadProgress;
@property (copy, nonatomic) id /* block */ authenticationChallenge;
@property (copy, nonatomic) id /* block */ cacheResponse;
@property (copy, nonatomic) id /* block */ redirectResponse;
@property (retain, nonatomic) NSSet *runLoopModes;
@property (nonatomic) BOOL shouldUseCredentialStorage;
@property (retain, nonatomic) NSURLCredential *credential;
@property (retain, nonatomic) AFSecurityPolicy *securityPolicy;
@property (retain, nonatomic) NSInputStream *inputStream;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup;
@property (retain, nonatomic) NSDictionary *userInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)batchOfRequestOperations:(id)arg0 progressBlock:(id /* block */)arg1 completionBlock:(id /* block */)arg2;
+ (BOOL)supportsSecureCoding;
+ (void)networkRequestThreadEntryPoint:(id)arg0;
+ (id)networkRequestThread;

- (void)setShouldUseCredentialStorage:(BOOL)arg0;
- (unsigned long long)responseStringEncoding;
- (void)setResponseStringEncoding:(unsigned long long)arg0;
- (void)operationDidPause;
- (BOOL)shouldUseCredentialStorage;
- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(id /* block */)arg0;
- (id /* block */)downloadProgress;
- (BOOL)isFinished;
- (void)setResponseData:(id)arg0;
- (void)setCompletionQueue:(id)arg0;
- (void)connection:(id)arg0 didFailWithError:(id)arg1;
- (id)initWithRequest:(id)arg0;
- (BOOL)isConcurrent;
- (id)responseData;
- (void)resume;
- (void).cxx_destruct;
- (BOOL)isExecuting;
- (long long)state;
- (id)completionQueue;
- (void)setResponse:(id)arg0;
- (void)connectionDidFinishLoading:(id)arg0;
- (void)finish;
- (void)setConnection:(id)arg0;
- (id)credential;
- (void)setState:(long long)arg0;
- (void)setInputStream:(id)arg0;
- (void)connection:(id)arg0 willSendRequestForAuthenticationChallenge:(id)arg1;
- (BOOL)isReady;
- (void)setUserInfo:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)connection:(id)arg0 didSendBodyData:(long long)arg1 totalBytesWritten:(long long)arg2 totalBytesExpectedToWrite:(long long)arg3;
- (void)setRequest:(id)arg0;
- (void)setCompletionBlock:(id /* block */)arg0;
- (id)response;
- (void)connection:(id)arg0 didReceiveResponse:(id)arg1;
- (id)securityPolicy;
- (void)setOutputStream:(id)arg0;
- (id)request;
- (void)setDownloadProgress:(id /* block */)arg0;
- (void)connection:(id)arg0 didReceiveData:(id)arg1;
- (id)outputStream;
- (id)lock;
- (void)setSecurityPolicy:(id)arg0;
- (id)initWithCoder:(id)arg0;
- (id)userInfo;
- (id)completionGroup;
- (void)cancel;
- (id)connection;
- (BOOL)isPaused;
- (void)setError:(id)arg0;
- (id)description;
- (id)inputStream;
- (void)setUploadProgressBlock:(id /* block */)arg0;
- (void)encodeWithCoder:(id)arg0;
- (void)start;
- (void)dealloc;
- (void)pause;
- (void)setLock:(id)arg0;
- (id)error;
- (void)setCompletionGroup:(id)arg0;
- (void)setRunLoopModes:(id)arg0;
- (id)runLoopModes;
- (void)setTotalBytesRead:(long long)arg0;
- (id /* block */)authenticationChallenge;
- (id)connection:(id)arg0 willSendRequest:(id)arg1 redirectResponse:(id)arg2;
- (id)connection:(id)arg0 willCacheResponse:(id)arg1;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg0;
- (unsigned long long)backgroundTaskIdentifier;
- (void)setCredential:(id)arg0;
- (id /* block */)cacheResponse;
- (void)setCacheResponse:(id /* block */)arg0;
- (void)setBackgroundTaskIdentifier:(unsigned long long)arg0;
- (void)cancelConnection;
- (void)setDownloadProgressBlock:(id /* block */)arg0;
- (id /* block */)uploadProgress;
- (id /* block */)redirectResponse;
- (void)setRedirectResponse:(id /* block */)arg0;
- (id)responseString;
- (long long)totalBytesRead;
- (void)operationDidStart;
- (void)setCacheResponseBlock:(id /* block */)arg0;
- (void)setRedirectResponseBlock:(id /* block */)arg0;
- (void)setResponseString:(id)arg0;
- (void)setUploadProgress:(id /* block */)arg0;
- (void)setAuthenticationChallenge:(id /* block */)arg0;
- (void)setWillSendRequestForAuthenticationChallengeBlock:(id /* block */)arg0;

@end
