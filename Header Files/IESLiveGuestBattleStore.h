//
//     Generated by private class-dump
//

@class HTSEventContext, IESLiveGuestBattleResourceManager, HTSLiveGuestBattleInfo, IESLiveGuestBattleEventTracker, IESLiveGuestBattlerRoleUpdater, IESLiveCountTimer, NSString, IESLiveGuestBattleStateManager, IESLiveGuestBattleApi, HTSLiveGuestBattleMessage, IESLiveGuestBattleModel;
@protocol IESLiveRoomService, IESLiveGuestBattleReaction;

@interface IESLiveGuestBattleStore : NSObject <IESLiveGuestBattleProvider, IESLiveGuestBattleService, IESLiveGuestBattleActions, HTSLiveMessageSubscriber, IESLiveGuestBattlerRoleUpdateExecutor> {
    BOOL _crownUpgrade;
    BOOL _showedCrown;
    BOOL _isPreload;
    BOOL _isRequesting;
    IESLiveGuestBattleModel *_battleModel;
    id<IESLiveRoomService> _room;
    HTSEventContext *_trackContext;
    id<IESLiveGuestBattleReaction> _reaction;
    IESLiveGuestBattleEventTracker *_eventTracker;
    IESLiveGuestBattleResourceManager *_resource;
    IESLiveGuestBattleApi *_guestBattleApi;
    IESLiveGuestBattleStateManager *_stateManager;
    IESLiveGuestBattlerRoleUpdater *_roleUpdater;
    IESLiveCountTimer *_battleTimeOutTimer;
    HTSLiveGuestBattleInfo *_cacheBattleInfo;
    HTSLiveGuestBattleMessage *_updateMessage;
    long long _lastShowWinnerLevel;
}

@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) IESLiveGuestBattleResourceManager *resource;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveGuestBattleApi *guestBattleApi;
@property (retain, nonatomic) IESLiveGuestBattleStateManager *stateManager;
@property (retain, nonatomic) IESLiveGuestBattlerRoleUpdater *roleUpdater;
@property (retain, nonatomic) IESLiveCountTimer *battleTimeOutTimer;
@property (retain, nonatomic) HTSLiveGuestBattleInfo *cacheBattleInfo;
@property (retain, nonatomic) HTSLiveGuestBattleMessage *updateMessage;
@property (nonatomic) BOOL crownUpgrade;
@property (nonatomic) BOOL showedCrown;
@property (nonatomic) long long lastShowWinnerLevel;
@property (nonatomic) BOOL isPreload;
@property (nonatomic) BOOL isRequesting;
@property (weak, nonatomic) id<IESLiveGuestBattleReaction> reaction;
@property (readonly, nonatomic) IESLiveGuestBattleEventTracker *eventTracker;
@property (retain, nonatomic) IESLiveGuestBattleModel *battleModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (void)didSetAttachingDIContext;
- (void)setIsRequesting:(BOOL)arg0;
- (BOOL)isRequesting;
- (BOOL)isPreload;
- (void)setIsPreload:(BOOL)arg0;
- (void)componentMount;
- (void)componentUnmount;
- (BOOL)isSelfGuest;
- (BOOL)isInGuestBattle;
- (id)initWithRoom:(id)arg0 trackContext:(id)arg1 componentContext:(id)arg2;
- (id)buildCommonTrackParams;
- (BOOL)crownUpgrade;
- (BOOL)isInBigParty;
- (void)onGuestBattleStartFromNone;
- (void)onGuestBattleStartFromSettle;
- (void)onGuestBattleSettleFromNone;
- (void)onGuestBattleSettleFromBattle;
- (void)onGuestBattleFinish;
- (void)onGuestBattleSessionFinish;
- (long long)battleState;
- (long long)battleSubStage;
- (void)fireGuestBattleEvent:(long long)arg0;
- (int)guestBattleSeatCount;
- (int)guestBattleUserCount;
- (BOOL)isPreloadBattleInfo;
- (id)battleModel;
- (void)setBattleModel:(id)arg0;
- (id)guestBattleScoreViewMap;
- (void)registerAutoReportAudienceEnterDuration;
- (void)componentEnterRoom;
- (void)componentDidChangedFromLayout:(id)arg0 toLayout:(id)arg1;
- (void)componentDidUpdatedGuestList:(id)arg0;
- (void)openGuestBattleWithScoreType:(id)arg0 duration:(id)arg1 loserNum:(id)arg2 isAnchorInvolved:(id)arg3 uiType:(id)arg4 completion:(id /* block */)arg5;
- (void)openGuestBattle;
- (void)openGuestBattleWithCompletion:(id /* block */)arg0;
- (void)finishGuestBattleWithReason:(long long)arg0 completion:(id /* block */)arg1;
- (void)pauseGuestBattleWithCompletion:(id /* block */)arg0;
- (void)resumeGuestBattleWithCompletion:(id /* block */)arg0;
- (void)startGuestBattleTimeOutTimerIfNeeded;
- (void)handleGuestBattleMessage:(id)arg0;
- (void)handleGuestBattleScoreMessage:(id)arg0;
- (id)updateBattlersRoleAndCreateAnimation;
- (BOOL)isEnableReadyOptimize;
- (void)setupBattleWithCacheBattleInfoIfNeeded;
- (void)finishGuestBattleIfNeeded;
- (void)getGuestBattleInfo;
- (BOOL)shouldUpdateBattlersInfo:(id)arg0;
- (void)stopRoleUpdateTaskIfNeeded:(id)arg0;
- (void)refreshBattlersIfNeeded:(id)arg0;
- (id)guestBattleApi;
- (void)createBattleWithBattleInfo:(id)arg0;
- (void)trackOpenGuestBattleWithError:(id)arg0 battleState:(long long)arg1;
- (void)setupBattleWithBattleInfo:(id)arg0;
- (void)processWithBattleInfo:(id)arg0;
- (void)setLastShowWinnerLevel:(long long)arg0;
- (void)setShowedCrown:(BOOL)arg0;
- (void)trackCreateSuccessIfneed;
- (void)stopGuestBattleTimeOutTimer;
- (void)monitorFinishBattleSession;
- (void)trackAudienceBattleWatchDuration;
- (void)trackPlaymodeEndWithPlaymodeName:(id)arg0;
- (void)monitorFinishBattle:(long long)arg0;
- (void)setCacheBattleInfo:(id)arg0;
- (id)roleUpdater;
- (void)setCrownUpgrade:(BOOL)arg0;
- (BOOL)showedCrown;
- (void)onReceivedLinkMicGuideMessage:(id)arg0;
- (void)onReceivedBattleCreateMessage:(id)arg0;
- (void)onReceivedBattleUpdateMessage:(id)arg0;
- (void)onReceivedBattlePauseMessage:(id)arg0;
- (void)onReceivedBattleResumeMessage:(id)arg0;
- (void)onReceivedBattleShowResultMessage:(id)arg0;
- (void)onReceivedBattleFinishMessage:(id)arg0;
- (void)updateSubstageAndShowSubstageAnimIfNeed:(id)arg0;
- (void)createAndDispatchBattlersRoleUpdateTask;
- (void)startBattleWithBattleUpdateMessage:(id)arg0;
- (void)monitorReceiveFinishBattle:(id)arg0;
- (id)reasonStrWithReason:(int)arg0;
- (void)setBattleTimeOutTimer:(id)arg0;
- (id)battleTimeOutTimer;
- (BOOL)isGuestListReady:(id)arg0;
- (void)cacheBattleInfoIfNeeded:(id)arg0;
- (void)trackNewBattleStartIfNeeded;
- (void)monitorStartWithEnterRoom;
- (id)cacheBattleInfo;
- (BOOL)isInEqualBigParty;
- (BOOL)isInMultiAudio;
- (BOOL)isNormal1v6:(long long)arg0;
- (void)setGuestBattleApi:(id)arg0;
- (void)setRoleUpdater:(id)arg0;
- (long long)lastShowWinnerLevel;
- (void).cxx_destruct;
- (id)eventTracker;
- (id)stateManager;
- (void)dealloc;
- (void)setResource:(id)arg0;
- (id)resource;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)messageReceived:(id)arg0;
- (id)reaction;
- (id)updateMessage;
- (void)setReaction:(id)arg0;
- (void)setUpdateMessage:(id)arg0;
- (void)setStateManager:(id)arg0;

@end
