//
//     Generated by private class-dump
//

@class IESForestResponse, LynxUIImage, NSString;

@interface LynxImageService : NSObject <LynxServiceImageProtocol> {
    IESForestResponse *_response;
    LynxUIImage *_imageUI;
}

@property (retain, nonatomic) IESForestResponse *response;
@property (weak, nonatomic) LynxUIImage *imageUI;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned long long)serviceScope;
+ (id)serviceBizID;
+ (unsigned long long)serviceType;

- (BOOL)isAnimatedImage:(id)arg0;
- (void)reportResourceStatus:(id)arg0 data:(id)arg1 extra:(id)arg2;
- (void)pauseImage:(id)arg0 callback:(id /* block */)arg1;
- (void)stopImage:(id)arg0 callback:(id /* block */)arg1;
- (void)resumeImage:(id)arg0 callback:(id /* block */)arg1;
- (BOOL)restartImageIfPossible:(id)arg0 callback:(id /* block */)arg1;
- (void)setAutoPlay:(id)arg0 value:(BOOL)arg1;
- (void)addAnimatedImageCallBack:(id)arg0 UI:(id)arg1;
- (BOOL)checkImageType:(id)arg0;
- (id /* block */)loadNewImageFromURL:(id)arg0 size:(struct CGSize { double x0; double x1; })arg1 contextInfo:(id)arg2 processors:(id)arg3 completed:(id /* block */)arg4 LynxUIImage:(id)arg5;
- (void)appendExtraImageLoadDetailForEvent:(id)arg0 originalDetail:(id)arg1;
- (id)getMappedCategorizedPicErrorCode:(id)arg0;
- (void)prefetchImage:(id)arg0 params:(id)arg1;
- (void)handleAnimatedImage:(id)arg0 view:(id)arg1 loopCount:(long long)arg2;
- (BOOL)checkImageType:(id)arg0 callback:(id /* block */)arg1;
- (void)failCallback:(id /* block */)arg0 message:(id)arg1;
- (void)successCallback:(id /* block */)arg0 message:(id)arg1;
- (void)reportError:(id)arg0 errInfo:(id)arg1;
- (id)syncProcessorsHandler:(id)arg0 withImage:(id)arg1;
- (long long)generateRequestOptions:(id)arg0;
- (id)imageUI;
- (void)setImageUI:(id)arg0;
- (void).cxx_destruct;
- (void)setResponse:(id)arg0;
- (id)imageView;
- (id)response;
- (id)decodeImage:(id)arg0;

@end
