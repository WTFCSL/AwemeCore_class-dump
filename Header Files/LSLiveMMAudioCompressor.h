//
//     Generated by private class-dump
//

@class LSLiveAudioCompressorFormat;

@interface LSLiveMMAudioCompressor : NSObject {
    struct { float metergain; float meterrelease; float threshold; float knee; float linearpregain; float linearthreshold; float slope; float attacksamplesinv; float satreleasesamplesinv; float wet; float dry; float k; float kneedboffset; float linearthresholdknee; float mastergain; float a; float b; float c; float d; float detectoravg; float detectoravg_thd; float attenuationdb_thd; float compgain; float maxcompdiffdb; int delaybufsize; int delaywritepos; int delayreadpos; float delaybuf[1024]; float delaybufLR[1024]; struct { int rate; float pregain; float threshold; float knee; float ratio; float attack; float release; float predelay; float releasezone1; float releasezone2; float releasezone3; float releasezone4; float postgain; float wet; } _params; float momentary_max; int print_count; } drum_compressor;
    int _samplerate;
    int _channels;
    float *_bufferData;
    float *_outputLeft;
    int _leftLength;
    int _rightLength;
    float *_outputRight;
    int _bufferLength;
    LSLiveAudioCompressorFormat *_format;
}

- (id)initWithSample:(int)arg0 channels:(int)arg1 withFormat:(id)arg2;
- (BOOL)processBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
- (void)processAudio:(float *)arg0 output:(float **)arg1 samples:(int)arg2;
- (void)updateFormat:(id)arg0;
- (void)initCompressor;
- (void).cxx_destruct;
- (void)dealloc;

@end
