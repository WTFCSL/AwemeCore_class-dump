//
//     Generated by private class-dump
//

@class NSArray, NSString, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface HMDControllerTimeManager : HeimdallrModule <HMDPerformanceReporterDataSource> {
    double _startTimestamp;
    double _lastFlushTimestamp;
    NSMutableArray *_recordsArray;
    NSObject<OS_dispatch_queue> *_syncQueue;
    long long _hmdCountLimit;
    NSArray *_andConditions;
    struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } _uploadingRange;
}

@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; } uploadingRange;
@property (nonatomic) long long hmdCountLimit;
@property (retain, nonatomic) NSArray *andConditions;
@property (nonatomic) double lastFlushTimestamp;
@property (retain, nonatomic) NSMutableArray *recordsArray;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } uploadingRange;
@property (nonatomic) long long hmdCountLimit;
@property (retain, nonatomic) NSArray *andConditions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)allocWithZone:(struct _NSZone { } *)arg0;
+ (id)sharedInstance;

- (void)updateConfig:(id)arg0;
- (BOOL)performanceDataSource;
- (void)cleanupWithConfig:(id)arg0;
- (long long)dbMaxSize;
- (void)performanceDataSaveImmediately;
- (void)setupWithHeimdallr:(id)arg0;
- (id)andConditions;
- (void)setAndConditions:(id)arg0;
- (void)dropAllDataForServerState;
- (unsigned long long)reporterPriority;
- (id)performanceDataWithCountLimit:(long long)arg0;
- (id)debugRealPerformanceDataWithConfig:(id)arg0;
- (void)cleanupPerformanceDataWithConfig:(id)arg0;
- (void)performanceDataDidReportSuccess:(BOOL)arg0;
- (id)performanceDataWithLimitSize:(unsigned long long)arg0 limitCount:(long long)arg1 currentSize:(unsigned long long *)arg2;
- (void)performanceSizeLimitedDataDidReportSuccess:(BOOL)arg0;
- (void)cleanupNotUploadAndReportedPerformanceData;
- (id)fetchUploadRecords;
- (void)setUploadingRange:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0;
- (struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })uploadingRange;
- (id)getDataWithRecords:(id)arg0;
- (double)lastFlushTimestamp;
- (void)setHmdCountLimit:(long long)arg0;
- (long long)hmdCountLimit;
- (id)recordsArray;
- (void)clearRecordsArray;
- (void)tracksCountChangedWithImmediately:(BOOL)arg0;
- (id)getAggregateDataWithRecords:(id)arg0;
- (void)hmdControllerName:(id)arg0 typeName:(id)arg1 timeInterval:(double)arg2 isFirstOpen:(long long)arg3;
- (void)setRecordsArray:(id)arg0;
- (void)setLastFlushTimestamp:(double)arg0;
- (id)syncQueue;
- (id)init;
- (void).cxx_destruct;
- (void)stop;
- (void)setSyncQueue:(id)arg0;
- (void)start;
- (void)dealloc;
- (Class)storeClass;
- (void)applicationWillEnterBackground:(id)arg0;

@end
