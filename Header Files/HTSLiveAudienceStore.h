//
//     Generated by private class-dump
//

@class IESLiveAudienceCheckPermissionApi, IESLiveStreamColorMonitor, IESLiveGCDTimer, NSDate, IESLiveAudienceWatchTimeTracker, NSDictionary, IESLiveRoomStrategyController, IESLiveEnterRoomSequenceQueue, HTSLiveMessageHandler, NSString, IESLiveUIAspectUtil, IESLiveExitRoomContext, NSTimer, IESLiveRoomService, HTSEventContext, NSNumber, HTSLiveAudienceWatchTime, NSError, HTSLiveAudiencePingApi;
@protocol IESLiveStrategyService, IESLiveUserService, IESLiveAudienceReaction, HTSLiveRoomRemoteActions, IESLiveClientAIInjector, IESLiveRoomService, IESLiveMonitor;

@interface HTSLiveAudienceStore : NSObject <HTSLiveAudienceWatchTimeDelegate, HTSLiveHideComponentAction, HTSLiveAudiencePingApiDelegate, IESLiveScreenLockActions, IESLiveCloseAction, IESLiveReplayActions, IESLiveStatusBarAction, IESLivePauseAction, IESLiveDataSyncDelegate, IESLivePipActions, IESLiveSeekAction, IESLiveCurrentMatchInfoActions, IESLiveAudienceStoreRouter, IESLiveVSLandscapeToLandscapeService, HTSLiveAudienceActions, HTSLiveMessageSubscriber> {
    BOOL _needHideAllComponent;
    BOOL _anchorLeftRoom;
    BOOL _screenLock;
    BOOL _kickoutFromMessage;
    BOOL _closeRoot;
    BOOL _didPlayed;
    BOOL _goWork;
    BOOL _disableReportPlay;
    BOOL _isAutoLandscapeFromPreview;
    BOOL _isVRCamera;
    BOOL _hasRequestEnter;
    BOOL _continueWhenEnterNewVC;
    BOOL _trackLiveDurationWhenStop;
    BOOL _needFinishLiveWhenAppBecomeActive;
    BOOL _needForbidRoomWhenAppBecomeActive;
    BOOL _canKickout;
    BOOL _liveDidAppear;
    BOOL _didLoadComponents;
    BOOL _hadTrackNotRenderEvent;
    BOOL _hadSendAutoLiveEvent;
    BOOL _livePaused;
    BOOL _mseqLoyalFix;
    BOOL _stallMonitorEnable;
    BOOL _degreeEnableForGameRoom;
    BOOL _degreeEnableTipsForGameRoom;
    BOOL _degreeEnableFullSceneForGameRoom;
    BOOL _hasTriggerStallMonitor;
    BOOL _diSettingEnable;
    BOOL _gameRoomIsShowHintView;
    id<IESLiveRoomService> _roomModel;
    IESLiveRoomService *_roomService;
    HTSEventContext *_pageContext;
    id<IESLiveAudienceReaction> _reaction;
    NSString *_lastPrompts;
    NSString *_enterRoomFailPrompts;
    long long _loadState;
    unsigned long long _closeReason;
    NSError *_closeError;
    long long _orientationUpdating;
    long long _orientationUpdated;
    NSString *_sourcePage;
    unsigned long long _returnType;
    NSDictionary *_sourceExtraParams;
    double _trialStayDuration;
    double _trialStayDurationWithoutBackground;
    double _promiseStayDuration;
    double _promiseStayDurationWithoutBackground;
    IESLiveEnterRoomSequenceQueue *_sequenceQueue;
    NSString *_strategySDKKey;
    IESLiveExitRoomContext *_exitRoomContext;
    NSNumber *_diggColor;
    HTSLiveMessageHandler *_messageHandler;
    HTSLiveMessageHandler *_dataSyncHandler;
    NSTimer *_permissionDelayTimer;
    IESLiveAudienceCheckPermissionApi *_checkPermissionApi;
    HTSLiveAudienceWatchTime *_watchTime;
    IESLiveAudienceWatchTimeTracker *_watchTimeTracker;
    id<IESLiveMonitor> _monitor;
    HTSLiveAudiencePingApi *_audiencePing;
    id<HTSLiveRoomRemoteActions> _remoteDispatcher;
    NSString *_enterSource;
    IESLiveUIAspectUtil *_uiAspectUtil;
    id<IESLiveClientAIInjector> _clientAIInjector;
    id<IESLiveStrategyService> _strategyService;
    long long _stall_monitor_window_size;
    long long _stall_monitor_downgrade_count_thresh;
    long long _stall_monitor_downgrade_duration_thresh;
    long long _stall_monitor_max_notice_count;
    NSDate *_startStallDate;
    long long _currentStallTimes;
    double _currentStallDuration;
    long long _currentRoomNoticeTimes;
    NSDate *_stallTrackerEnterRoomDate;
    unsigned long long _currentPipShowType;
    IESLiveStreamColorMonitor *_colorMonitor;
    NSDate *_initialTime;
    NSDate *_firstFrameTime;
    id<IESLiveUserService> _userService;
    IESLiveRoomStrategyController *_strategyController;
    IESLiveGCDTimer *_gameRoomStallTimerNew;
    NSTimer *_gameRoomHintViewShowTimer;
    long long _gameRoomHintViewShowTimeMin;
    long long _gameRoomHintViewCurrentShowTime;
    long long _gameRoomStallTime;
    long long _gameRoomHintViewPositionValue;
}

@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (copy, nonatomic) NSString *lastPrompts;
@property (copy, nonatomic) NSString *enterRoomFailPrompts;
@property (nonatomic) long long loadState;
@property (nonatomic) unsigned long long closeReason;
@property (retain, nonatomic) NSNumber *diggColor;
@property (nonatomic) long long orientationUpdating;
@property (nonatomic) long long orientationUpdated;
@property (nonatomic) BOOL needHideAllComponent;
@property (nonatomic) BOOL anchorLeftRoom;
@property (nonatomic) BOOL screenLock;
@property (nonatomic) BOOL hasRequestEnter;
@property (nonatomic) BOOL continueWhenEnterNewVC;
@property (nonatomic) BOOL trackLiveDurationWhenStop;
@property (retain, nonatomic) HTSLiveMessageHandler *messageHandler;
@property (retain, nonatomic) HTSLiveMessageHandler *dataSyncHandler;
@property (retain, nonatomic) NSTimer *permissionDelayTimer;
@property (retain, nonatomic) IESLiveAudienceCheckPermissionApi *checkPermissionApi;
@property (retain, nonatomic) HTSLiveAudienceWatchTime *watchTime;
@property (retain, nonatomic) IESLiveAudienceWatchTimeTracker *watchTimeTracker;
@property (nonatomic) BOOL needFinishLiveWhenAppBecomeActive;
@property (nonatomic) BOOL needForbidRoomWhenAppBecomeActive;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (retain, nonatomic) HTSLiveAudiencePingApi *audiencePing;
@property (retain, nonatomic) id<HTSLiveRoomRemoteActions> remoteDispatcher;
@property (copy, nonatomic) NSString *enterSource;
@property (retain, nonatomic) NSError *closeError;
@property (nonatomic) BOOL kickoutFromMessage;
@property (nonatomic) BOOL canKickout;
@property (nonatomic) BOOL liveDidAppear;
@property (nonatomic) BOOL didLoadComponents;
@property (nonatomic) BOOL hadTrackNotRenderEvent;
@property (nonatomic) BOOL hadSendAutoLiveEvent;
@property (retain, nonatomic) IESLiveUIAspectUtil *uiAspectUtil;
@property (nonatomic, getter=isLivePaused) BOOL livePaused;
@property (retain, nonatomic) id<IESLiveClientAIInjector> clientAIInjector;
@property (retain, nonatomic) id<IESLiveStrategyService> strategyService;
@property (nonatomic) BOOL mseqLoyalFix;
@property (nonatomic) BOOL stallMonitorEnable;
@property (nonatomic) long long stall_monitor_window_size;
@property (nonatomic) long long stall_monitor_downgrade_count_thresh;
@property (nonatomic) long long stall_monitor_downgrade_duration_thresh;
@property (nonatomic) long long stall_monitor_max_notice_count;
@property (nonatomic) BOOL degreeEnableForGameRoom;
@property (nonatomic) BOOL degreeEnableTipsForGameRoom;
@property (nonatomic) BOOL degreeEnableFullSceneForGameRoom;
@property (nonatomic) BOOL hasTriggerStallMonitor;
@property (retain, nonatomic) NSDate *startStallDate;
@property (nonatomic) long long currentStallTimes;
@property (nonatomic) double currentStallDuration;
@property (nonatomic) long long currentRoomNoticeTimes;
@property (retain, nonatomic) NSDate *stallTrackerEnterRoomDate;
@property (nonatomic) unsigned long long currentPipShowType;
@property (retain, nonatomic) IESLiveStreamColorMonitor *colorMonitor;
@property (retain, nonatomic) NSDate *initialTime;
@property (retain, nonatomic) NSDate *firstFrameTime;
@property (retain, nonatomic) id<IESLiveUserService> userService;
@property (nonatomic) BOOL diSettingEnable;
@property (retain, nonatomic) IESLiveRoomStrategyController *strategyController;
@property (retain, nonatomic) IESLiveExitRoomContext *exitRoomContext;
@property (retain, nonatomic) IESLiveGCDTimer *gameRoomStallTimerNew;
@property (nonatomic) BOOL gameRoomIsShowHintView;
@property (retain, nonatomic) NSTimer *gameRoomHintViewShowTimer;
@property (nonatomic) long long gameRoomHintViewShowTimeMin;
@property (nonatomic) long long gameRoomHintViewCurrentShowTime;
@property (nonatomic) long long gameRoomStallTime;
@property (nonatomic) long long gameRoomHintViewPositionValue;
@property (readonly, nonatomic) IESLiveRoomService *roomService;
@property (retain, nonatomic) HTSEventContext *pageContext;
@property (weak, nonatomic) id<IESLiveAudienceReaction> reaction;
@property (readonly, nonatomic) BOOL isInMseq;
@property (readonly, nonatomic) BOOL isInOffcialMseq;
@property (nonatomic) BOOL closeRoot;
@property (nonatomic) BOOL didPlayed;
@property (nonatomic) BOOL goWork;
@property (copy, nonatomic) NSString *sourcePage;
@property (nonatomic) unsigned long long returnType;
@property (copy, nonatomic) NSDictionary *sourceExtraParams;
@property (nonatomic) BOOL disableReportPlay;
@property (nonatomic) double trialStayDuration;
@property (nonatomic) double trialStayDurationWithoutBackground;
@property (nonatomic) double promiseStayDuration;
@property (nonatomic) double promiseStayDurationWithoutBackground;
@property (retain, nonatomic) IESLiveEnterRoomSequenceQueue *sequenceQueue;
@property (nonatomic) BOOL isAutoLandscapeFromPreview;
@property (nonatomic) BOOL isVRCamera;
@property (copy, nonatomic) NSString *strategySDKKey;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setEnterSource:(id)arg0;
- (id)enterSource;
- (id)roomModel;
- (void)didSetAttachingDIContext;
- (BOOL)isVRCamera;
- (void)onOrientationTransitionBegin:(long long)arg0;
- (void)enterRoom;
- (BOOL)forceCloseCurrentRoom;
- (void)setSourcePage:(id)arg0;
- (id)firstFrameTime;
- (void)setFirstFrameTime:(id)arg0;
- (void)setRoomModel:(id)arg0;
- (id)watchTime;
- (void)setWatchTime:(id)arg0;
- (id)sourcePage;
- (void)checkDispatchSequenceIfNeed;
- (id)sequenceQueue;
- (void)liveComponentsLoadComplete;
- (void)setSequenceQueue:(id)arg0;
- (void)setRemoteDispatcher:(id)arg0;
- (id)roomService;
- (id)strategyController;
- (void)startToShowPipWithShowType:(unsigned long long)arg0;
- (void)updateRoom;
- (void)closeAbnormalAnchorRoom;
- (void)closeAbnormalAnchorRoom:(id /* block */)arg0;
- (void)closeRoomToRoot:(BOOL)arg0;
- (void)writeInteractiveFanTickets:(id)arg0;
- (void)liveWillStart;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (void)liveWillAppear;
- (void)liveWillDisappear;
- (void)liveDidPause;
- (void)liveDidContinue;
- (void)liveWillSuspend;
- (void)liveWillTerminated;
- (void)liveDidEnterBackground;
- (void)liveWillEnterForground;
- (void)liveDidBecomeActive;
- (void)liveDidCloseAllRoom;
- (void)liveComponentDidLoaded;
- (void)pauseWatchTimer;
- (void)resumeWatchTimer;
- (void)didUpdateRoomFail:(id)arg0;
- (void)didEnterLiveRoom:(id)arg0;
- (BOOL)liveDidAppear;
- (void)showBusinessPip;
- (void)hideBusinessPip;
- (id)initWithRoomModel:(id)arg0;
- (id)userService;
- (void)setUserService:(id)arg0;
- (void)didForceUpdateToOrientation:(long long)arg0;
- (id)strategyService;
- (void)setStrategyService:(id)arg0;
- (void)clickCloseButton:(id)arg0;
- (void)clickCloseButton:(id)arg0 trace:(id)arg1 completion:(id /* block */)arg2;
- (void)forceCloseRoomByMSeq;
- (BOOL)isLivePaused;
- (void)startWatchingTime;
- (void)subscribedSyncDataWithValue:(id)arg0 version:(long long)arg1;
- (void)subscribedSyncDataUpdatedWithValue:(id)arg0 oldVersion:(long long)arg1 newVersion:(long long)arg2;
- (id)strategySDKKey;
- (void)setStrategySDKKey:(id)arg0;
- (void)didUpdateRoom:(id)arg0;
- (BOOL)isVSLandscapeToLandscapeEnable;
- (void)hideAllComponent;
- (void)showAllComponent;
- (void)unlockScreen;
- (void)enableVSLandscapeToLandscape;
- (void)disableVSLandscapeToLandscape;
- (BOOL)supportLandscapeToLandscape;
- (void)setDiSettingEnable:(BOOL)arg0;
- (BOOL)diSettingEnable;
- (void)onOrientationTransitionEnd;
- (void)didUpdateReplayStatus:(unsigned long long)arg0;
- (double)promiseStayDuration;
- (double)promiseStayDurationWithoutBackground;
- (BOOL)isAutoLandscapeFromPreview;
- (void)setIsAutoLandscapeFromPreview:(BOOL)arg0;
- (void)onSeekEndIfIsLatestTime:(BOOL)arg0;
- (void)willShowStageForPipModel:(id)arg0;
- (void)setDegreeEnableForGameRoom:(BOOL)arg0;
- (void)setDegreeEnableFullSceneForGameRoom:(BOOL)arg0;
- (BOOL)enableDegreeForGameRoom;
- (BOOL)degreeEnableForGameRoom;
- (BOOL)degreeEnableFullSceneForGameRoom;
- (void)liveRoomWatchMinitTick:(unsigned long long)arg0;
- (BOOL)isHorizontalStream;
- (BOOL)mseqLoyalFix;
- (void)setMseqLoyalFix:(BOOL)arg0;
- (void)setSourceExtraParams:(id)arg0;
- (void)setOriginCameraIDstr:(id)arg0;
- (id)sourceExtraParams;
- (void)ping:(id)arg0 statusModel:(id)arg1;
- (void)checkLiveRoomAlive;
- (void)cancelPermissionTimer;
- (id)gameRoomStallTimerNew;
- (void)invalidateStallTimer;
- (void)_checkStall;
- (void)setStrategyController:(id)arg0;
- (void)logSceneEvent:(id)arg0 status:(unsigned long long)arg1;
- (void)setStallMonitorEnable:(BOOL)arg0;
- (void)setStall_monitor_window_size:(long long)arg0;
- (void)setStall_monitor_downgrade_count_thresh:(long long)arg0;
- (void)setStall_monitor_downgrade_duration_thresh:(long long)arg0;
- (void)setStall_monitor_max_notice_count:(long long)arg0;
- (void)setDegreeEnableTipsForGameRoom:(BOOL)arg0;
- (void)setGameRoomStallTime:(long long)arg0;
- (void)setGameRoomHintViewShowTimeMin:(long long)arg0;
- (void)setGameRoomHintViewPositionValue:(long long)arg0;
- (void)setCurrentStallTimes:(long long)arg0;
- (void)setCurrentStallDuration:(double)arg0;
- (void)setCurrentRoomNoticeTimes:(long long)arg0;
- (void)setExitRoomContext:(id)arg0;
- (void)stopWatchingTimeForDisappear;
- (void)liveWatchEnableContinueWhenEnterNewVC:(BOOL)arg0;
- (void)liveWatchEnableTrackLiveDurationWhenEnterNewVC:(BOOL)arg0;
- (void)updateStatusBarHiddenOnPortrait:(BOOL)arg0;
- (void)registerMessageHandlers;
- (void)observeUserStatusChange;
- (void)setStallTrackerEnterRoomDate:(id)arg0;
- (void)setUiAspectUtil:(id)arg0;
- (void)setHasRequestEnter:(BOOL)arg0;
- (id)traceAudienceWatchCommonParams;
- (void)didClickPauseButton:(id)arg0 forState:(unsigned long long)arg1;
- (void)messageReceivedChangeCurrentMatchInfoWithIsContentIDChange:(BOOL)arg0 isMainCamera:(BOOL)arg1;
- (void)tryUpdateRoom:(unsigned long long)arg0;
- (void)_liveFinished;
- (id)dataSyncHandler;
- (void)traceEnterPreview;
- (void)setLiveDidAppear:(BOOL)arg0;
- (void)finishRoomOrForbidRoomIfNeeded;
- (void)subscribeRemoteMessagesIfNeed;
- (void)setCanKickout:(BOOL)arg0;
- (void)kickoutIfNeeded;
- (unsigned long long)currentPipShowType;
- (void)setCurrentPipShowType:(unsigned long long)arg0;
- (BOOL)continueWhenEnterNewVC;
- (BOOL)trackLiveDurationWhenStop;
- (void)setContinueWhenEnterNewVC:(BOOL)arg0;
- (void)setTrackLiveDurationWhenStop:(BOOL)arg0;
- (void)turningBackTrack:(BOOL)arg0;
- (void)closeRoom;
- (long long)orientationUpdated;
- (void)setOrientationUpdated:(long long)arg0;
- (void)setOrientationUpdating:(long long)arg0;
- (void)liveRoomEnterBackgroundWatch;
- (BOOL)needForbidRoomWhenAppBecomeActive;
- (BOOL)needFinishLiveWhenAppBecomeActive;
- (void)setCloseRoot:(BOOL)arg0;
- (void)setDidLoadComponents:(BOOL)arg0;
- (BOOL)stallMonitorEnable;
- (BOOL)isGameLive;
- (BOOL)enableStallMonitor;
- (BOOL)hasTriggerStallMonitor;
- (void)setHasTriggerStallMonitor:(BOOL)arg0;
- (void)_beginStallMonitor;
- (void)_streamPlayerEndStall;
- (BOOL)_showCountReachMax;
- (BOOL)_isReachInterval;
- (BOOL)shouldShowHintView:(BOOL)arg0;
- (void)setGameRoomIsShowHintView:(BOOL)arg0;
- (void)setGameRoomHintViewCurrentShowTime:(long long)arg0;
- (id)gameRoomHintViewShowTimer;
- (void)updateShowTime:(id)arg0;
- (void)setGameRoomHintViewShowTimer:(id)arg0;
- (void)_trackStallDegradeResolutionToastShow:(id)arg0;
- (void)setGameRoomStallTimerNew:(id)arg0;
- (BOOL)_streamStallNoticeCountReachMax;
- (BOOL)_exitHintViewCountReachMax;
- (void)setStartStallDate:(id)arg0;
- (long long)currentStallTimes;
- (void)_trackDidStall;
- (BOOL)degreeEnableTipsForGameRoom;
- (long long)gameRoomHintViewCurrentShowTime;
- (long long)gameRoomHintViewShowTimeMin;
- (void)_hideHintView;
- (id)startStallDate;
- (double)currentStallDuration;
- (long long)stall_monitor_window_size;
- (long long)stall_monitor_downgrade_count_thresh;
- (long long)stall_monitor_downgrade_duration_thresh;
- (long long)stall_monitor_max_notice_count;
- (long long)currentRoomNoticeTimes;
- (id)stallTrackerEnterRoomDate;
- (void)setNeedHideAllComponent:(BOOL)arg0;
- (BOOL)needHideAllComponent;
- (BOOL)hasRequestEnter;
- (void)setEnterRoomFailPrompts:(id)arg0;
- (void)tryEnterRoom:(long long)arg0 retryIndex:(unsigned long long)arg1;
- (void)didEnterLiveRoomFail:(id)arg0 logId:(id)arg1;
- (BOOL)enterRetryPolicyEnable;
- (int)retryTimeInterval:(id)arg0 retryCount:(long long)arg1;
- (BOOL)noNeedRetryEnterRoom:(id)arg0;
- (id)enterRetryTimeIntervals;
- (void)enterRoomWithoutDispatch;
- (id)uiAspectUtil;
- (void)reEnterRoomOnSpecialEvents;
- (void)handleRemoteError:(id)arg0;
- (void)setAnchorLeftRoom:(BOOL)arg0;
- (void)setLastPrompts:(id)arg0;
- (BOOL)canEnterFinishedVC;
- (void)_roomFinished;
- (void)roomForbidden:(id)arg0;
- (id)enterRoomFailPrompts;
- (void)trackEnterBlockedRoom;
- (void)anchorLeft;
- (void)anchorResume;
- (id)loadUserSyncMessageHandler;
- (id)loadMemberMessageHandler;
- (id)loadGameStatusMessageHandle;
- (id)loadHotRoomInfoMessagehandler;
- (id)loadPermissMessagehandler;
- (void)setKickoutFromMessage:(BOOL)arg0;
- (void)resetHotRoomInfo;
- (void)fetchPermissionaWithSyncData:(id)arg0;
- (void)setPermissionDelayTimer:(id)arg0;
- (id)checkPermissionApi;
- (void)setCheckPermissionApi:(id)arg0;
- (BOOL)canKickout;
- (BOOL)kickoutFromMessage;
- (BOOL)didLoadComponents;
- (BOOL)isInMseq;
- (void)_livePlayAutoLive:(double)arg0;
- (void)trackWatchSeconds:(long long)arg0;
- (BOOL)isInOffcialMseq;
- (id)watchTimeTracker;
- (void)liveRoomWatchDidCloseWithDuration:(double)arg0;
- (double)trialStayDurationWithoutBackground;
- (BOOL)didPlayed;
- (BOOL)disableReportPlay;
- (id)clientAIInjector;
- (id)colorMonitor;
- (id)trackParamsWithDuration:(double)arg0;
- (BOOL)hadTrackNotRenderEvent;
- (void)setHadTrackNotRenderEvent:(BOOL)arg0;
- (id)liveTypeString;
- (void)setScreenLock:(BOOL)arg0;
- (BOOL)hadSendAutoLiveEvent;
- (void)setHadSendAutoLiveEvent:(BOOL)arg0;
- (id)audiencePing;
- (void)liveRoomWatchDidPauseWithDurationForInitRoom:(double)arg0 durationForFirstFrame:(double)arg1;
- (void)liveRoomWatchDidStopWithDuration:(double)arg0 trackLiveDuration:(BOOL)arg1;
- (void)liveRoomWatchDidCloseWithDuration:(double)arg0 playedDuration:(double)arg1 lastPlayedDuration:(double)arg2 playBackDuration:(double)arg3;
- (void)liveRoomBackgroundWatchEndWithDuration:(double)arg0 withEndReason:(unsigned long long)arg1;
- (void)liveRoomVideoOverDuration:(double)arg0 trigger:(id)arg1;
- (void)liveCameraWatchDidCloseWithDuration:(double)arg0;
- (void)liveCameraContentWatchDidCloseWithDuration:(double)arg0;
- (void)liveOrientationWatchDidChangedWithPlayTime:(double)arg0 totalDuration:(double)arg1 closeLive:(BOOL)arg2;
- (void)exexuteBootCompleteBlock:(id /* block */)arg0;
- (void)livePlayTracked;
- (void)updateWatchInitialTime:(id)arg0 needWatchTimechange:(BOOL)arg1;
- (void)streamPlayerLoadFirstFrame;
- (void)streamPlayerStartStall;
- (void)streamPlayerEndStall;
- (void)preloadRoom;
- (void)trackDidSwitchCamera;
- (void)trackStreamNotRenderEvent:(unsigned long long)arg0;
- (void)logLiveCloseEvent;
- (void)resetExitRoomContext;
- (id)lastPrompts;
- (long long)orientationUpdating;
- (BOOL)anchorLeftRoom;
- (BOOL)screenLock;
- (BOOL)closeRoot;
- (void)setDidPlayed:(BOOL)arg0;
- (BOOL)goWork;
- (void)setGoWork:(BOOL)arg0;
- (void)setDisableReportPlay:(BOOL)arg0;
- (double)trialStayDuration;
- (void)setTrialStayDuration:(double)arg0;
- (void)setTrialStayDurationWithoutBackground:(double)arg0;
- (void)setPromiseStayDuration:(double)arg0;
- (void)setPromiseStayDurationWithoutBackground:(double)arg0;
- (void)setIsVRCamera:(BOOL)arg0;
- (id)exitRoomContext;
- (id)diggColor;
- (void)setDiggColor:(id)arg0;
- (void)setDataSyncHandler:(id)arg0;
- (id)permissionDelayTimer;
- (void)setWatchTimeTracker:(id)arg0;
- (void)setNeedFinishLiveWhenAppBecomeActive:(BOOL)arg0;
- (void)setNeedForbidRoomWhenAppBecomeActive:(BOOL)arg0;
- (void)setAudiencePing:(id)arg0;
- (void)setLivePaused:(BOOL)arg0;
- (void)setClientAIInjector:(id)arg0;
- (void)setColorMonitor:(id)arg0;
- (BOOL)gameRoomIsShowHintView;
- (long long)gameRoomStallTime;
- (long long)gameRoomHintViewPositionValue;
- (id)messageHandler;
- (void).cxx_destruct;
- (id)monitor;
- (long long)loadState;
- (unsigned long long)returnType;
- (void)stopTimer;
- (void)setMonitor:(id)arg0;
- (void)setup;
- (void)setInitialTime:(id)arg0;
- (unsigned long long)closeReason;
- (void)lockScreen;
- (void)setMessageHandler:(id)arg0;
- (void)setReturnType:(unsigned long long)arg0;
- (id)initialTime;
- (void)dealloc;
- (void)messageReceived:(id)arg0;
- (id)reaction;
- (id)closeError;
- (id)pageContext;
- (void)setPageContext:(id)arg0;
- (void)setReaction:(id)arg0;
- (void)setCloseReason:(unsigned long long)arg0;
- (id)remoteDispatcher;
- (void)setCloseError:(id)arg0;
- (void)setLoadState:(long long)arg0;

@end
