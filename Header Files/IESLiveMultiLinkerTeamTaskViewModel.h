//
//     Generated by private class-dump
//

@class NSString, IESLiveMultiLinkerTeamTaskModel;
@protocol IESLiveCompoundSubscription;

@interface IESLiveMultiLinkerTeamTaskViewModel : NSObject {
    BOOL _isTaskPhase;
    BOOL _hadContributed;
    BOOL _isRoomOwner;
    BOOL _didReceiveTeamTaskMsg;
    BOOL _showedNotice;
    int _teamWorkType;
    int _taskResult;
    int _teammateTaskResult;
    IESLiveMultiLinkerTeamTaskModel *_taskModel;
    unsigned long long _taskState;
    NSString *_currentLoginUser;
    NSString *_anchorUserID;
    NSString *_teammateUidOf2V2TeamBattle;
    id<IESLiveCompoundSubscription> _disposable;
}

@property (retain, nonatomic) IESLiveMultiLinkerTeamTaskModel *taskModel;
@property (nonatomic) unsigned long long taskState;
@property (nonatomic) BOOL isTaskPhase;
@property (nonatomic) BOOL hadContributed;
@property (nonatomic) int teamWorkType;
@property (nonatomic) BOOL isRoomOwner;
@property (copy, nonatomic) NSString *currentLoginUser;
@property (copy, nonatomic) NSString *anchorUserID;
@property (copy, nonatomic) NSString *teammateUidOf2V2TeamBattle;
@property (nonatomic) BOOL didReceiveTeamTaskMsg;
@property (nonatomic) BOOL showedNotice;
@property (nonatomic) int taskResult;
@property (nonatomic) int teammateTaskResult;
@property (retain, nonatomic) id<IESLiveCompoundSubscription> disposable;

- (id)taskModel;
- (void)setTaskModel:(id)arg0;
- (id)currentLoginUser;
- (void)setDisposable:(id)arg0;
- (id)disposable;
- (int)taskResult;
- (void)setCurrentLoginUser:(id)arg0;
- (BOOL)isRoomOwner;
- (void)setIsRoomOwner:(BOOL)arg0;
- (id)anchorUserID;
- (void)setAnchorUserID:(id)arg0;
- (id)initWithDIContext:(id)arg0 anchorModel:(id)arg1;
- (void)resolveTeamTaskMessage:(id)arg0;
- (int)teamWorkType;
- (void)setTeamWorkType:(int)arg0;
- (void)trackTeamTaskEvent:(id)arg0 extra:(id)arg1;
- (id)pkSource;
- (BOOL)isTaskPhase;
- (void)goalFailed;
- (void)setTaskResult:(int)arg0;
- (id)teammateUidOf2V2TeamBattle;
- (void)setTeammateTaskResult:(int)arg0;
- (void)trackTeamTaskResult:(BOOL)arg0;
- (void)observeDoingTask;
- (int)teammateTaskResult;
- (void)observeReward;
- (void)setHadContributed:(BOOL)arg0;
- (void)judgeIndependentTaskResult;
- (void)updateStateWithRemainTime:(long long)arg0;
- (BOOL)onlyOneAnchorAchieveGoal;
- (void)handleWaitTaskResultTimeOut;
- (void)judgeTaskResult;
- (BOOL)showedNotice;
- (void)forceChangeStateToEggNotice;
- (void)setShowedNotice:(BOOL)arg0;
- (void)setIsTaskPhase:(BOOL)arg0;
- (BOOL)hadContributed;
- (void)setTeammateUidOf2V2TeamBattle:(id)arg0;
- (BOOL)didReceiveTeamTaskMsg;
- (void)setDidReceiveTeamTaskMsg:(BOOL)arg0;
- (unsigned long long)taskState;
- (void)setTaskState:(unsigned long long)arg0;
- (void).cxx_destruct;
- (void)goalAchieved;

@end
