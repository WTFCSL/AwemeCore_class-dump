//
//     Generated by private class-dump
//

@class IESLiveInteractiveLinkService, NSDictionary, HTSLiveLinkMessage, HTSLiveInteractiveAPI, HTSLiveUser, NSMutableArray, IESLivePKInteractUserService, IESLivePKGuestPreApplyManager, NSString, IESLivePKGuestTrackerContext, HTSEventContext, HTSLiveLinkMicMethod, NSNumber, IESLiveInterativeTimeOutManager, HTSGroupedLiveMessageHandler, NSError, IESLivePKModel;
@protocol IESLiveRoomServiceAdapter;

@interface IESLivePKGuestAudienceBuilder : NSObject <HTSLiveAudienceActions, HTSLiveMessageSubscriber, IESLivePKGuestAnchorInvitationActions, IESLiveInteractiveLinkServiceDelegate, IESLivePKGuestAudienceBuilderService> {
    BOOL connected;
    BOOL muteOnJoinChannel;
    BOOL _interactiveModeEnabled;
    BOOL _enableAdminRight;
    BOOL _isJoiningChannel;
    BOOL _isProcessingApply;
    BOOL _doPermitProcessAfterApply;
    BOOL _adminRightIsChanged;
    BOOL _isAdminWhenEnterRoom;
    BOOL _interactStarted;
    long long _mode;
    long long linkMicStatus;
    unsigned long long currentVendor;
    NSDictionary *rtcExtraInfo;
    NSDictionary *vpassSDKParams;
    NSMutableArray *anchorUserListArray;
    unsigned long long overType;
    NSNumber *replyTimestamp;
    HTSLiveInteractiveAPI *_interactiveAPI;
    id<IESLiveRoomServiceAdapter> _room;
    HTSEventContext *_eventContext;
    IESLivePKInteractUserService *_userService;
    IESLiveInteractiveLinkService *_linkService;
    NSNumber *_waitingStartTime;
    NSError *_verifyError;
    NSString *_requestPage;
    NSString *_joinToken;
    NSString *_toast;
    HTSLiveLinkMicMethod *_inviteAudienceMsg;
    HTSLiveLinkMessage *_confirmUnsilenceMsg;
    IESLivePKGuestPreApplyManager *_preApplyManager;
    NSString *_anchorLinkmicStrID;
    NSString *_invitorSecUserId;
    id /* block */ _reApplyOrReplyBlock;
    IESLiveInterativeTimeOutManager *_timeOutManager;
    IESLivePKModel *_pkmodel;
    HTSGroupedLiveMessageHandler *_groupedHandler;
    IESLivePKGuestTrackerContext *_guestTrackerContext;
    NSNumber *_timeStamp;
}

@property (retain, nonatomic) HTSEventContext *eventContext;
@property (nonatomic) BOOL interactiveModeEnabled;
@property (retain, nonatomic) NSString *anchorLinkmicStrID;
@property (retain, nonatomic) NSNumber *waitingStartTime;
@property (nonatomic) BOOL connected;
@property (retain, nonatomic) NSError *verifyError;
@property (copy, nonatomic) NSString *requestPage;
@property (copy, nonatomic) NSString *invitorSecUserId;
@property (copy, nonatomic) id /* block */ reApplyOrReplyBlock;
@property (nonatomic) BOOL isJoiningChannel;
@property (nonatomic) BOOL isProcessingApply;
@property (nonatomic) BOOL doPermitProcessAfterApply;
@property (retain, nonatomic) IESLiveInterativeTimeOutManager *timeOutManager;
@property (copy, nonatomic) NSString *joinToken;
@property (retain, nonatomic) IESLivePKModel *pkmodel;
@property (retain, nonatomic) HTSLiveLinkMicMethod *inviteAudienceMsg;
@property (retain, nonatomic) HTSLiveLinkMessage *confirmUnsilenceMsg;
@property (nonatomic) BOOL adminRightIsChanged;
@property (nonatomic) BOOL enableAdminRight;
@property (retain, nonatomic) HTSGroupedLiveMessageHandler *groupedHandler;
@property (retain, nonatomic) IESLivePKGuestTrackerContext *guestTrackerContext;
@property (retain, nonatomic) NSNumber *timeStamp;
@property (nonatomic) BOOL isAdminWhenEnterRoom;
@property (nonatomic) BOOL interactStarted;
@property (retain, nonatomic) HTSLiveInteractiveAPI *interactiveAPI;
@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> room;
@property (readonly, nonatomic) HTSLiveUser *currentUser;
@property (retain, nonatomic) IESLivePKInteractUserService *userService;
@property (retain, nonatomic) IESLiveInteractiveLinkService *linkService;
@property (copy, nonatomic) NSString *toast;
@property (retain, nonatomic) IESLivePKGuestPreApplyManager *preApplyManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long mode;
@property (nonatomic) long long linkMicStatus;
@property (copy, nonatomic) NSDictionary *vpassSDKParams;
@property (nonatomic) unsigned long long currentVendor;
@property (retain, nonatomic) NSDictionary *rtcExtraInfo;
@property (nonatomic) unsigned long long overType;
@property (retain, nonatomic) NSMutableArray *anchorUserListArray;
@property (retain, nonatomic) NSNumber *replyTimestamp;
@property (nonatomic) BOOL muteOnJoinChannel;

- (void)didSetAttachingDIContext;
- (void)setEventContext:(id)arg0;
- (id)requestPage;
- (void)setRequestPage:(id)arg0;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (id)userService;
- (void)setUserService:(id)arg0;
- (BOOL)adminModeEnable;
- (void)setPkmodel:(id)arg0;
- (id)pkmodel;
- (id)linkService;
- (void)setLinkService:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0;
- (id)groupedHandler;
- (void)setGroupedHandler:(id)arg0;
- (id)rtcExtraInfo;
- (id)interactiveAPI;
- (void)setInteractiveAPI:(id)arg0;
- (void)onReceivedEnableAudienceMessage:(id)arg0;
- (void)onReceivedDisableAudienceMessage:(id)arg0;
- (void)onReceivedPermitAudienceMessage:(id)arg0;
- (void)onReceivedKickoutedAudienceMessage:(id)arg0;
- (void)onReceivedInviteAudienceMessage:(id)arg0;
- (void)onReceivedReplyAudienceMessage:(id)arg0;
- (void)onReceivedSystemKickOutMessage:(id)arg0;
- (void)onReceivedActiveSignalMessage:(id)arg0;
- (void)onReceiveAudienceCameraOpenReply:(id)arg0;
- (void)onReceiveLinkApplyExpired:(id)arg0;
- (void)onReceivedAudienceConFirmUnsilenceMessage:(id)arg0;
- (void)onReceivedLinkBattleConnectMessage:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2 extraParams:(id)arg3;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2 completion:(id /* block */)arg3;
- (void)adminMuteGuest:(id)arg0;
- (void)adminUnMuteGuest:(id)arg0;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 linkType:(id)arg2 requestSource:(id)arg3 completion:(id /* block */)arg4;
- (void)adminPermitUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2;
- (void)onInteractiveModeStartWithRoomEnterTimeStamp:(id)arg0 isAdmin:(BOOL)arg1;
- (void)endInteractWaiting;
- (void)reApplyOrReplyAfterPermissionCheck;
- (BOOL)isInvitingUser:(id)arg0;
- (void)userActiveChanged:(BOOL)arg0 linkmicId:(id)arg1;
- (void)setRtcExtraInfo:(id)arg0;
- (void)joinChannel:(id)arg0;
- (id)anchorUserListArray;
- (id)guestTrackerContext;
- (void)setGuestTrackerContext:(id)arg0;
- (BOOL)isInteractionRuning;
- (void)reportJoinRTCSucceed;
- (void)refreshLinkServiceDelegate;
- (long long)linkMicStatus;
- (void)setLinkMicStatus:(long long)arg0;
- (id)vpassSDKParams;
- (void)setVpassSDKParams:(id)arg0;
- (unsigned long long)currentVendor;
- (void)setCurrentVendor:(unsigned long long)arg0;
- (unsigned long long)overType;
- (void)setOverType:(unsigned long long)arg0;
- (void)setAnchorUserListArray:(id)arg0;
- (id)replyTimestamp;
- (void)setReplyTimestamp:(id)arg0;
- (BOOL)muteOnJoinChannel;
- (void)setMuteOnJoinChannel:(BOOL)arg0;
- (id)timeOutManager;
- (id)getMuteGusetNicknameByUserID:(id)arg0;
- (void)setTimeOutManager:(id)arg0;
- (void)setPreApplyManager:(id)arg0;
- (void)startInteractiveModeIfNeeded;
- (void)setIsAdminWhenEnterRoom:(BOOL)arg0;
- (BOOL)interactStarted;
- (void)setInteractStarted:(BOOL)arg0;
- (BOOL)isAdminWhenEnterRoom;
- (void)onInteractiveModeStartedWithTimeStamp:(id)arg0 listStatus:(int)arg1;
- (void)setInteractiveModeEnabled:(BOOL)arg0;
- (id)preApplyManager;
- (void)onInteractiveModeStoppedByForce:(BOOL)arg0;
- (BOOL)currentSceneIsPK;
- (BOOL)isProcessingApply;
- (BOOL)canJoinChannel;
- (void)setAnchorLinkmicStrID:(id)arg0;
- (id)anchorLinkmicStrID;
- (void)pr_afterReceivePermit;
- (void)setDoPermitProcessAfterApply:(BOOL)arg0;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3;
- (void)setInvitorSecUserId:(id)arg0;
- (void)setInviteAudienceMsg:(id)arg0;
- (void)onInteractiveKickouted;
- (id)userModelWrapperConfig;
- (void)setConfirmUnsilenceMsg:(id)arg0;
- (id /* block */)reApplyOrReplyBlock;
- (void)setReApplyOrReplyBlock:(id /* block */)arg0;
- (void)setIsProcessingApply:(BOOL)arg0;
- (void)applyConnectionInMode:(long long)arg0 applySource:(unsigned long long)arg1 withPosition:(id)arg2 afterFollow:(BOOL)arg3 paidCount:(int)arg4 limitedTime:(int)arg5 reason:(id)arg6 eventExtra:(id)arg7 andCompletion:(id /* block */)arg8;
- (void)setVerifyError:(id)arg0;
- (BOOL)doPermitProcessAfterApply;
- (id)waitingStartTime;
- (void)setWaitingStartTime:(id)arg0;
- (BOOL)isJoiningChannel;
- (void)setIsJoiningChannel:(BOOL)arg0;
- (void)setJoinToken:(id)arg0;
- (id)invitorSecUserId;
- (BOOL)interactiveModeEnabled;
- (void)leaveOnLiveEndWithReason:(unsigned long long)arg0;
- (void)setdown;
- (BOOL)adminRightChangeWhenAdminModeEnable;
- (BOOL)enableAdminRight;
- (BOOL)noAdminRight;
- (void)adminPermitWithUserID:(id)arg0 secUserID:(id)arg1;
- (id)joinToken;
- (long long)determineFinalLinkTypeWithOrigin:(long long)arg0;
- (id)initWithRoom:(id)arg0 diContext:(id)arg1 eventContext:(id)arg2;
- (void)setupCurrentUserInUserService:(id)arg0;
- (void)adminPermit:(id)arg0;
- (id)verifyError;
- (id)inviteAudienceMsg;
- (id)confirmUnsilenceMsg;
- (void)setEnableAdminRight:(BOOL)arg0;
- (BOOL)adminRightIsChanged;
- (void)setAdminRightIsChanged:(BOOL)arg0;
- (void)setConnected:(BOOL)arg0;
- (void).cxx_destruct;
- (BOOL)connected;
- (id)timeStamp;
- (long long)mode;
- (void)stopConnection;
- (void)setMode:(long long)arg0;
- (void)setup;
- (id)eventContext;
- (id)currentUser;
- (void)setTimeStamp:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)messageReceived:(id)arg0;
- (BOOL)isAdmin;
- (void)setToast:(id)arg0;
- (id)toast;
- (void)setupService;
- (void)clean;

@end
