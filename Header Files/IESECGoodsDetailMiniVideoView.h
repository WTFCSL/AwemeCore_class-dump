//
//     Generated by private class-dump
//

@class UIView, IESECommerceSpeakerView, IESECGoodsDetailMiniVideoModel, IESECGradientView, IESECGoodsDetailTracker, UIImageView, NSDictionary, IESECVideoPlayerView, UIPanGestureRecognizer, NSString, UILabel;
@protocol IESECVideoPlayerViewDelegate, IESECGoodsDetailMiniVideoViewDelegate, IESECVideoPlayerProtocol;

@interface IESECGoodsDetailMiniVideoView : UIView <IESECVideoPlayerControllerDelegate, IESECVideoPlayerViewDelegate> {
    BOOL _resetPlayerWhenHidden;
    BOOL _mute;
    BOOL _enableUIOpt;
    BOOL _needResumePlay;
    BOOL _isPlayOver;
    IESECGoodsDetailMiniVideoModel *_videoModel;
    IESECVideoPlayerView *_currentPlayerView;
    id<IESECGoodsDetailMiniVideoViewDelegate> _delegate;
    IESECGoodsDetailTracker *_tracker;
    NSDictionary *_trackMeta;
    NSString *_playerTag;
    NSString *_playerSubTag;
    id<IESECVideoPlayerProtocol> _playerWrapper;
    IESECVideoPlayerView *_sharedPlayerView;
    UIView *_sharedPlayerSuperView;
    id<IESECVideoPlayerViewDelegate> _sharedPlayerOriginDelegate;
    UIView *_speakerContainerView;
    IESECommerceSpeakerView *_speakerView;
    UIView *_closeView;
    UILabel *_replayTextLabel;
    IESECGradientView *_gradientView;
    UIPanGestureRecognizer *_panGesture;
    unsigned long long _currentPlayState;
    long long _startPlayTime;
    UIView *_playView;
    UIImageView *_playImageView;
    UILabel *_timeLabel;
    UIImageView *_playImageViewOpt;
    UIView *_playImageViewOptBgView;
    UIImageView *_backgroundImageView;
    unsigned long long _storedPlayState;
    double _prePlayTime;
    struct CGPoint { double x; double y; } _topRight;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _panableZone;
}

@property (retain, nonatomic) id<IESECVideoPlayerProtocol> playerWrapper;
@property (retain, nonatomic) IESECVideoPlayerView *sharedPlayerView;
@property (weak, nonatomic) UIView *sharedPlayerSuperView;
@property (weak, nonatomic) id<IESECVideoPlayerViewDelegate> sharedPlayerOriginDelegate;
@property (nonatomic) struct CGPoint { double x; double y; } topRight;
@property (retain, nonatomic) UIView *speakerContainerView;
@property (retain, nonatomic) IESECommerceSpeakerView *speakerView;
@property (retain, nonatomic) UIView *closeView;
@property (retain, nonatomic) UILabel *replayTextLabel;
@property (retain, nonatomic) IESECGradientView *gradientView;
@property (retain, nonatomic) UIPanGestureRecognizer *panGesture;
@property (readonly, nonatomic) unsigned long long currentPlayState;
@property (nonatomic) long long startPlayTime;
@property (retain, nonatomic) UIView *playView;
@property (retain, nonatomic) UIImageView *playImageView;
@property (retain, nonatomic) UILabel *timeLabel;
@property (retain, nonatomic) UIImageView *playImageViewOpt;
@property (retain, nonatomic) UIView *playImageViewOptBgView;
@property (retain, nonatomic) UIImageView *backgroundImageView;
@property (nonatomic) BOOL enableUIOpt;
@property (nonatomic) unsigned long long storedPlayState;
@property (nonatomic) BOOL needResumePlay;
@property (nonatomic) BOOL isPlayOver;
@property (nonatomic) double prePlayTime;
@property (readonly, nonatomic) IESECGoodsDetailMiniVideoModel *videoModel;
@property (readonly, nonatomic) IESECVideoPlayerView *currentPlayerView;
@property (weak, nonatomic) id<IESECGoodsDetailMiniVideoViewDelegate> delegate;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } panableZone;
@property (retain, nonatomic) IESECGoodsDetailTracker *tracker;
@property (nonatomic) BOOL resetPlayerWhenHidden;
@property (copy, nonatomic) NSDictionary *trackMeta;
@property (copy, nonatomic) NSString *playerTag;
@property (copy, nonatomic) NSString *playerSubTag;
@property (nonatomic) BOOL mute;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct CGSize { double x0; double x1; })miniWindowSizeWithVideoSize:(struct CGSize { double x0; double x1; })arg0 fixSize:(BOOL)arg1;

- (void)playerPlayTime:(double)arg0 canPlayTime:(double)arg1 totalTime:(double)arg2;
- (void)setPlayerSubTag:(id)arg0;
- (void)setStartPlayTime:(long long)arg0;
- (void)setPlayerTag:(id)arg0;
- (id)videoModel;
- (id)sharedPlayerView;
- (id)closeView;
- (void)setCloseView:(id)arg0;
- (long long)startPlayTime;
- (unsigned long long)currentPlayState;
- (void)createPlayerView;
- (void)realPlay;
- (void)addPeriodicTimeObserver;
- (id)playerTag;
- (id)playerSubTag;
- (void)addObserve;
- (void)playViewWillResignActive:(id)arg0;
- (void)playerViewDidBecomeActive:(id)arg0;
- (id)speakerView;
- (void)setSpeakerView:(id)arg0;
- (id)currentPlayerView;
- (void)playerController:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (void)playerController:(id)arg0 playerDidFinishError:(id)arg1;
- (void)setPlayerWrapper:(id)arg0;
- (void)panAction:(id)arg0;
- (id)trackMeta;
- (void)setTrackMeta:(id)arg0;
- (void)playerDidChangePlaybackStateWithAction:(unsigned long long)arg0;
- (void)setSmallVideoWindowTop:(double)arg0;
- (void)setPanableZone:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)initWithBottomRight:(struct CGPoint { double x0; double x1; })arg0 videoModel:(id)arg1 enableUIOpt:(BOOL)arg2;
- (double)oncePlayTime;
- (BOOL)isPlayOver;
- (void)createPlayerViewOld;
- (void)resetSharedPlayerToOriginSuperView;
- (void)setSharedPlayerView:(id)arg0;
- (void)setSharedPlayerSuperView:(id)arg0;
- (void)updateMiniVideoWithPlayerView:(id)arg0 videoFrameSize:(struct CGSize { double x0; double x1; })arg1 videoSuperView:(id)arg2 bottomRight:(struct CGPoint { double x0; double x1; })arg3 fixSize:(BOOL)arg4;
- (id)playImageViewOptBgView;
- (void)setNeedResumePlay:(BOOL)arg0;
- (BOOL)needResumePlay;
- (id)sharedPlayerSuperView;
- (BOOL)resetPlayerWhenHidden;
- (id)sharedPlayerOriginDelegate;
- (double)prePlayTime;
- (void)setPrePlayTime:(double)arg0;
- (void)muteAction;
- (void)setSharedPlayerOriginDelegate:(id)arg0;
- (id)replayTextLabel;
- (void)setSpeakerContainerView:(id)arg0;
- (id)speakerContainerView;
- (id)playImageViewOpt;
- (void)updatePlaybackTime:(double)arg0;
- (void)setIsPlayOver:(BOOL)arg0;
- (void)updatePlayButtonState;
- (id)initWithTopRight:(struct CGPoint { double x0; double x1; })arg0 enableUIOpt:(BOOL)arg1;
- (void)updateMiniVideoWithPlayerView:(id)arg0 videoFrameSize:(struct CGSize { double x0; double x1; })arg1 videoSuperView:(id)arg2 fixSize:(BOOL)arg3;
- (void)setLeftBottomText:(id)arg0 leftOffset:(double)arg1 hideMuteButton:(BOOL)arg2;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panableZone;
- (void)setResetPlayerWhenHidden:(BOOL)arg0;
- (void)setReplayTextLabel:(id)arg0;
- (void)setPlayImageViewOpt:(id)arg0;
- (void)setPlayImageViewOptBgView:(id)arg0;
- (BOOL)enableUIOpt;
- (void)setEnableUIOpt:(BOOL)arg0;
- (unsigned long long)storedPlayState;
- (void)setStoredPlayState:(unsigned long long)arg0;
- (BOOL)mute;
- (void)recover;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void).cxx_destruct;
- (id)backgroundImageView;
- (void)store;
- (void)close;
- (BOOL)stop;
- (void)setGradientView:(id)arg0;
- (struct CGPoint { double x0; double x1; })topRight;
- (void)setTimeLabel:(id)arg0;
- (id)delegate;
- (void)closeAction;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setHidden:(BOOL)arg0;
- (BOOL)play;
- (id)gradientView;
- (BOOL)pause;
- (void)setBackgroundImage:(id)arg0;
- (id)timeLabel;
- (void)setMute:(BOOL)arg0;
- (id)panGesture;
- (void)setPanGesture:(id)arg0;
- (void)setBackgroundImageView:(id)arg0;
- (void)setTopRight:(struct CGPoint { double x0; double x1; })arg0;
- (void)playAction;
- (id)playerWrapper;
- (id)playView;
- (void)setPlayView:(id)arg0;
- (void)tapAction;
- (id)playImageView;
- (void)setPlayImageView:(id)arg0;

@end
