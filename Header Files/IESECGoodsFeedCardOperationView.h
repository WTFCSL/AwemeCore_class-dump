//
//     Generated by private class-dump
//

@class IESECLLView, IESECGoodsDetailParameters, IESECGoodsFeedActionButton, IESECGoodsFeedCardOperationViewConfiguration, IESECButton;
@protocol IESECGoodsFeedCardOperationViewDelegate;

@interface IESECGoodsFeedCardOperationView : UIView {
    IESECGoodsFeedCardOperationViewConfiguration *_configuration;
    IESECGoodsDetailParameters *_parameters;
    IESECLLView *_contentView;
    IESECButton *_addToShoppingCartButton;
    IESECGoodsFeedActionButton *_buyButton;
    id<IESECGoodsFeedCardOperationViewDelegate> _delegate;
}

@property (weak, nonatomic) id<IESECGoodsFeedCardOperationViewDelegate> delegate;

- (id)itemWithType:(unsigned long long)arg0;
- (void)updateWithParameters:(id)arg0;
- (void)handleOperationItemGesture:(id)arg0;
- (void)operationItemDidSelect:(id)arg0;
- (id /* block */)contentViewBuilder;
- (struct unordered_map<IESECGoodsFeedCardOperationItemType, card_item, std::hash<IESECGoodsFeedCardOperationItemType>, std::equal_to<IESECGoodsFeedCardOperationItemType>, std::allocator<std::pair<const IESECGoodsFeedCardOperationItemType, card_item>>> { struct __hash_table<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, std::__unordered_map_hasher<IESECGoodsFeedCardOperationItemType, std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, std::hash<IESECGoodsFeedCardOperationItemType>, std::equal_to<IESECGoodsFeedCardOperationItemType>>, std::__unordered_map_equal<IESECGoodsFeedCardOperationItemType, std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, std::equal_to<IESECGoodsFeedCardOperationItemType>, std::hash<IESECGoodsFeedCardOperationItemType>>, std::allocator<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> *>>> { void **x0; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> *>> { unsigned long long x0; } x0; } x1; } x0; } x0; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, void *> *> { void *x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<IESECGoodsFeedCardOperationItemType, std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, std::hash<IESECGoodsFeedCardOperationItemType>, std::equal_to<IESECGoodsFeedCardOperationItemType>>> { unsigned long long x0; } x2; struct __compressed_pair<float, std::__unordered_map_equal<IESECGoodsFeedCardOperationItemType, std::__hash_value_type<IESECGoodsFeedCardOperationItemType, card_item>, std::equal_to<IESECGoodsFeedCardOperationItemType>, std::hash<IESECGoodsFeedCardOperationItemType>>> { float x0; } x3; } x0; })cardItemMap;
- (struct card_item { id x0; id x1; id x2; id x3; })cardItemForType:(unsigned long long)arg0;
- (void)updateItemTitle:(id)arg0 withType:(unsigned long long)arg1;
- (id)initWithConfiguration:(id)arg0 parameters:(id)arg1;
- (void)updateItemTitleWithMap:(id)arg0;
- (void)updateItemButtonState:(id)arg0 withType:(unsigned long long)arg1;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (id)buttonWithType:(unsigned long long)arg0;
- (void)setupSubviews;

@end
