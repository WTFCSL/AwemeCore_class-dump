//
//     Generated by private class-dump
//

@class UIImage, UIColor, UIView;

@interface CKMMixtureImageModel : NSObject {
    UIImage *_backgroundImage;
    UIImage *_foregroundImage;
    double _foregroundNormalizedWidthScale;
    double _foregroundImageNormalizedCornerRadius;
    UIColor *_foregroundImageBorderColor;
    double _foregroundImageNormalizedBorderWidth;
    double _normalizedTopOffset;
    double _normalizedLeftOffset;
    double _normalizedWatermarkStringWidth;
    double _normalizedWatermarkStringFont;
    double _normalizedBottomOffsetForWatermark;
    double _normalizedRightOffsetForWatermark;
    UIImage *_mapImage;
    UIView *_avatarView;
    struct CGSize { double width; double height; } _finalImageSize;
    struct CGSize { double width; double height; } _normalizedWatermarkImageSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _normalizedRect;
}

@property (nonatomic) struct CGSize { double width; double height; } finalImageSize;
@property (retain, nonatomic) UIImage *backgroundImage;
@property (retain, nonatomic) UIImage *foregroundImage;
@property (nonatomic) double foregroundNormalizedWidthScale;
@property (nonatomic) double foregroundImageNormalizedCornerRadius;
@property (retain, nonatomic) UIColor *foregroundImageBorderColor;
@property (nonatomic) double foregroundImageNormalizedBorderWidth;
@property (nonatomic) double normalizedTopOffset;
@property (nonatomic) double normalizedLeftOffset;
@property (nonatomic) struct CGSize { double width; double height; } normalizedWatermarkImageSize;
@property (nonatomic) double normalizedWatermarkStringWidth;
@property (nonatomic) double normalizedWatermarkStringFont;
@property (nonatomic) double normalizedBottomOffsetForWatermark;
@property (nonatomic) double normalizedRightOffsetForWatermark;
@property (retain, nonatomic) UIImage *mapImage;
@property (retain, nonatomic) UIView *avatarView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } normalizedRect;

- (void)setForegroundImageBorderColor:(id)arg0;
- (void)setForegroundImageNormalizedBorderWidth:(double)arg0;
- (void)setForegroundImageNormalizedCornerRadius:(double)arg0;
- (void)setForegroundNormalizedWidthScale:(double)arg0;
- (void)setNormalizedTopOffset:(double)arg0;
- (double)foregroundNormalizedWidthScale;
- (void)setNormalizedLeftOffset:(double)arg0;
- (struct CGSize { double x0; double x1; })finalImageSize;
- (void)setFinalImageSize:(struct CGSize { double x0; double x1; })arg0;
- (double)foregroundImageNormalizedCornerRadius;
- (id)foregroundImageBorderColor;
- (double)foregroundImageNormalizedBorderWidth;
- (double)normalizedTopOffset;
- (double)normalizedLeftOffset;
- (struct CGSize { double x0; double x1; })normalizedWatermarkImageSize;
- (void)setNormalizedWatermarkImageSize:(struct CGSize { double x0; double x1; })arg0;
- (double)normalizedWatermarkStringWidth;
- (void)setNormalizedWatermarkStringWidth:(double)arg0;
- (double)normalizedWatermarkStringFont;
- (void)setNormalizedWatermarkStringFont:(double)arg0;
- (double)normalizedBottomOffsetForWatermark;
- (void)setNormalizedBottomOffsetForWatermark:(double)arg0;
- (double)normalizedRightOffsetForWatermark;
- (void)setNormalizedRightOffsetForWatermark:(double)arg0;
- (id)mapImage;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })normalizedRect;
- (void)setNormalizedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)backgroundImage;
- (void)setAvatarView:(id)arg0;
- (id)avatarView;
- (void).cxx_destruct;
- (id)foregroundImage;
- (void)setBackgroundImage:(id)arg0;
- (void)setForegroundImage:(id)arg0;
- (void)setMapImage:(id)arg0;

@end
