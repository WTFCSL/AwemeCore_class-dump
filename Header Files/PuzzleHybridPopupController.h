//
//     Generated by private class-dump
//

@class PuzzleContext, UIView, NSString, PuzzleHybridContainer, NSNumber, UIButton, NSDictionary, UIPanGestureRecognizer, IESLivePuzzleOrientationHandler, MASConstraint, NSMutableArray, PuzzlePopupControllerUIConfig;
@protocol IESHYHybridViewProtocol, IESHYControllerDelegate, PuzzleNavigationBarProtocol;

@interface PuzzleHybridPopupController : UIViewController <IESHYHybridViewLifecycleProtocol, UIGestureRecognizerDelegate, UIScrollViewDelegate, IESHYControllerProtocol> {
    NSNumber *_topLevelEnable;
    BOOL _tapMaskToClose;
    BOOL _triggerBackByBackBtn;
    BOOL _showingKeyboard;
    BOOL _disableNativeClose;
    BOOL _triggerPullDownClose;
    BOOL _enableFull;
    BOOL _enableHalf;
    BOOL _webShouldUseKVO;
    BOOL _keyboardNotiShouldUseFrame;
    BOOL _appearFirstTime;
    id<IESHYControllerDelegate> _delegate;
    PuzzleContext *_context;
    UIView *_statusBarBackgroundView;
    MASConstraint *_hybridViewBottomOffset;
    UIView *_containerView;
    double _animationDuration;
    UIView *_closeIndicator;
    UIButton *_backBtn;
    UIButton *_closeBtn;
    UIPanGestureRecognizer *_pullDownCloseGesture;
    double _containerViewHeight;
    double _containerViewWidth;
    double _appearTime;
    UIPanGestureRecognizer *_halfToFullScreenGesture;
    double _halfToFullScreenOriginalY;
    unsigned long long _halfScreenState;
    UIView *_halfScreenContainerView;
    UIButton *_halfScreenCloseButon;
    UIView<PuzzleNavigationBarProtocol> *_navigationBar;
    id _keyboardShowObserver;
    id _keyboardHideObserver;
    NSDictionary *_shareInfo;
    UIButton *_shareBtn;
    NSMutableArray *_wkObserverKeys;
    PuzzleHybridContainer *_hybridView;
    PuzzlePopupControllerUIConfig *_popupConfig;
    UIView *_maskBgView;
    struct CGPoint { double x; double y; } _lastLocation;
    struct CGPoint { double x; double y; } _originLocation;
}

@property (retain, nonatomic) IESLivePuzzleOrientationHandler *orientationHandler;
@property (retain, nonatomic) PuzzleContext *context;
@property (retain, nonatomic) UIView *statusBarBackgroundView;
@property (retain, nonatomic) MASConstraint *hybridViewBottomOffset;
@property (nonatomic) BOOL tapMaskToClose;
@property (retain, nonatomic) UIView *containerView;
@property (nonatomic) double animationDuration;
@property (retain, nonatomic) UIView *closeIndicator;
@property (retain, nonatomic) UIButton *backBtn;
@property (retain, nonatomic) UIButton *closeBtn;
@property (nonatomic) BOOL triggerBackByBackBtn;
@property (nonatomic) BOOL showingKeyboard;
@property (nonatomic) BOOL disableNativeClose;
@property (nonatomic) struct CGPoint { double x; double y; } lastLocation;
@property (nonatomic) struct CGPoint { double x; double y; } originLocation;
@property (nonatomic) BOOL triggerPullDownClose;
@property (retain, nonatomic) UIPanGestureRecognizer *pullDownCloseGesture;
@property (nonatomic) double containerViewHeight;
@property (nonatomic) double containerViewWidth;
@property (nonatomic) double appearTime;
@property (retain, nonatomic) UIPanGestureRecognizer *halfToFullScreenGesture;
@property (nonatomic) double halfToFullScreenOriginalY;
@property (nonatomic) unsigned long long halfScreenState;
@property (retain, nonatomic) UIView *halfScreenContainerView;
@property (retain, nonatomic) UIButton *halfScreenCloseButon;
@property (retain, nonatomic) UIView<PuzzleNavigationBarProtocol> *navigationBar;
@property (nonatomic) BOOL enableFull;
@property (nonatomic) BOOL enableHalf;
@property (retain, nonatomic) id keyboardShowObserver;
@property (retain, nonatomic) id keyboardHideObserver;
@property (retain, nonatomic) NSDictionary *shareInfo;
@property (retain, nonatomic) UIButton *shareBtn;
@property (retain, nonatomic) NSMutableArray *wkObserverKeys;
@property (nonatomic) BOOL webShouldUseKVO;
@property (nonatomic) BOOL keyboardNotiShouldUseFrame;
@property (nonatomic) BOOL appearFirstTime;
@property (retain, nonatomic) PuzzleHybridContainer *hybridView;
@property (retain, nonatomic) PuzzlePopupControllerUIConfig *popupConfig;
@property (retain, nonatomic) UIView *maskBgView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView<IESHYHybridViewProtocol> *kitView;
@property (weak, nonatomic) id<IESHYControllerDelegate> delegate;

- (void)live_takeover_dismissWithAnimated:(id)arg0 animator:(SEL)arg1 closeType:(void /* unknown type, empty encoding */)arg2 completion:(void /* unknown type, empty encoding */)arg3;
- (void)dismissWithAnimated:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)backBtnClicked;
- (id)kitView;
- (void)closeBtnClicked;
- (id)closeBtn;
- (id)backBtn;
- (void)setBackBtn:(id)arg0;
- (void)setCloseBtn:(id)arg0;
- (void)registerBridge;
- (double)containerViewHeight;
- (id)hmdPageExtension;
- (void)viewDidCreated:(id)arg0;
- (void)viewDidStartLoading;
- (void)viewDidFinishLoadWithURL:(id)arg0;
- (void)viewDidLoadFailedWithUrl:(id)arg0 error:(id)arg1;
- (void)closeViewIfNeeded;
- (void)viewDidBackForward;
- (id)shareBtn;
- (void)setShareBtn:(id)arg0;
- (id)halfScreenCloseButon;
- (void)setHalfScreenCloseButon:(id)arg0;
- (void)halfCloseBtnClicked;
- (id)wkObserverKeys;
- (void)setWkObserverKeys:(id)arg0;
- (void)setTopLevelEnable:(id)arg0;
- (id)topLevelEnable;
- (void)cancelLoadingAnimation;
- (void)injectShareInfo:(id)arg0;
- (void)showWithAnimated:(BOOL)arg0 animator:(id)arg1 completion:(id /* block */)arg2;
- (void)closeHybridWithCompletion:(id /* block */)arg0;
- (void)dismissWithAnimated:(BOOL)arg0 animator:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)isBottomHalfPopup;
- (void)setWebViewBounceEnable:(BOOL)arg0;
- (void)setDisableNativeClose:(BOOL)arg0;
- (void)setCloseByClickMaskEnable:(BOOL)arg0;
- (void)setCloseByGestureEnbale:(BOOL)arg0;
- (double)parseWidth;
- (BOOL)shouldUseLandscapeSize;
- (BOOL)isIpadPortraitMode;
- (BOOL)hasRightOrBottomMargin;
- (BOOL)isBottomPopup;
- (double)upStatusBarHeight;
- (void)setPullDownHeight:(double)arg0;
- (id)initWithConfig:(id)arg0 context:(id)arg1 delegate:(id)arg2;
- (id)hybridView;
- (id)popupConfig;
- (id)maskBgView;
- (void)hideFloatLiveWindow;
- (void)showFloatLiveWindow;
- (void)setContainerViewWidth:(double)arg0;
- (void)setContainerViewHeight:(double)arg0;
- (double)containerViewWidth;
- (BOOL)isLightMode;
- (double)appearTime;
- (void)setAppearTime:(double)arg0;
- (void)addMaskView;
- (void)setCloseIndicator:(id)arg0;
- (id)closeIndicator;
- (void)p_BtnActionWithBtnType:(id)arg0;
- (void)setHybridView:(id)arg0;
- (void)p_dismissWithType:(long long)arg0 completion:(id /* block */)arg1;
- (void)p_showTracker;
- (void)didHalfToFullScreenGesture:(id)arg0;
- (void)setHalfToFullScreenOriginalY:(double)arg0;
- (double)halfToFullScreenOriginalY;
- (BOOL)shouldIgnoreHalfCloseBtnAlpha;
- (void)updateHalfScreenButtonsTopOffset;
- (void)addStatusBarContainerView;
- (double)homeIndicatorHeight;
- (id)halfScreenContainerView;
- (void)setHalfScreenContainerView:(id)arg0;
- (void)setPopupConfig:(id)arg0;
- (void)setAppearFirstTime:(BOOL)arg0;
- (BOOL)appearFirstTime;
- (void)setMaskBgView:(id)arg0;
- (void)addContainerView;
- (void)setOrientationHandler:(id)arg0;
- (id)orientationHandler;
- (void)addKeyboardObserver;
- (BOOL)disableNativeClose;
- (void)removeWKObserver;
- (id)keyboardShowObserver;
- (id)keyboardHideObserver;
- (void)setWebShouldUseKVO:(BOOL)arg0;
- (void)UIInit;
- (void)addScreenshotObserver;
- (void)setupGrayIfNeeded;
- (void)addHybirdView;
- (void)addWKObserver;
- (void)dealWithAccessibility;
- (void)p_checkAndPostOpenNextPage;
- (void)executePopupAnimationBlockWhenDisappear;
- (void)calculateWidthAndHeight;
- (void)addBottomUI;
- (void)addCenterUI;
- (void)maskTapClose;
- (void)setTapMaskToClose:(BOOL)arg0;
- (BOOL)tapMaskToClose;
- (void)reLayoutContainerView;
- (void)setHybridViewBottomOffset:(id)arg0;
- (double)hybridViewRightConstraintOffset;
- (double)hybridViewBottomConstraintOffset;
- (void)hybirdViewUIConfig;
- (void)addHybirdViewCorners;
- (void)updateBackBtn;
- (void)addShareButton;
- (void)shareBtnClicked;
- (void)addCloseIndicator;
- (void)addPullDownCloseGesture;
- (void)addHalfToFullScreenPanGesture;
- (void)addUpToFullScreenCloseBtn;
- (void)setHalfScreenState:(unsigned long long)arg0;
- (void)setEnableFull:(BOOL)arg0;
- (void)setEnableHalf:(BOOL)arg0;
- (void)addUpNavigationBar;
- (void)didPanHotArea:(id)arg0;
- (void)setPullDownCloseGesture:(id)arg0;
- (id)pullDownCloseGesture;
- (void)setHalfToFullScreenGesture:(id)arg0;
- (void)addNavigationBarShareButton;
- (void)updateNavigatioinBarLeftButton;
- (BOOL)webShouldUseKVO;
- (void)updateUpHalfScreenCloseBtnIcon;
- (unsigned long long)halfScreenState;
- (long long)targetUIMode;
- (void)setContainerLayoutWithSize:(struct CGSize { double x0; double x1; })arg0 cornerRadius:(double)arg1 margin:(double)arg2 tapMaskToClose:(BOOL)arg3 orientation:(id)arg4;
- (void)setEnableToFull:(BOOL)arg0;
- (void)setEnableToHalf:(BOOL)arg0;
- (void)setSwitchCloseButtonToggle:(BOOL)arg0;
- (double)parseHeight;
- (id)commonTrackerParam;
- (void)setTriggerBackByBackBtn:(BOOL)arg0;
- (void)setOriginLocation:(struct CGPoint { double x0; double x1; })arg0;
- (id)hybridViewBottomOffset;
- (void)setTriggerPullDownClose:(BOOL)arg0;
- (BOOL)triggerPullDownClose;
- (BOOL)enableHalf;
- (void)changeHalfScreenViewsAlpha:(double)arg0 ignoreHalfCloseBtn:(BOOL)arg1;
- (BOOL)enableFull;
- (void)updateNavigationBarOnFinish;
- (BOOL)keyboardNotiShouldUseFrame;
- (void)setKeyboardShowObserver:(id)arg0;
- (void)setKeyboardHideObserver:(id)arg0;
- (void)sendScreenshotEvent;
- (void)updateFullScreenBtnAlpha:(double)arg0;
- (id)halfToFullScreenGesture;
- (void)p_postWillShowNotificaion:(BOOL)arg0;
- (void)dismissWithAnimated:(BOOL)arg0 animator:(id)arg1 closeType:(long long)arg2 completion:(id /* block */)arg3;
- (void)p_postWillOpenNextPageNotification;
- (BOOL)interceptCloseAndSendEventWithType:(long long)arg0;
- (void)resetHeight:(double)arg0;
- (void)resetWidth:(double)arg0;
- (void)closeLastContainerIfNeeded:(id)arg0;
- (BOOL)triggerBackByBackBtn;
- (void)addInteractivePopGesture;
- (BOOL)isLynxHybrid;
- (void)setKeyboardNotiShouldUseFrame:(BOOL)arg0;
- (double)defaultHeight;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (double)animationDuration;
- (id)statusBarBackgroundView;
- (struct CGPoint { double x0; double x1; })lastLocation;
- (void)setContext:(id)arg0;
- (void)setLastLocation:(struct CGPoint { double x0; double x1; })arg0;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)setContainerView:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)viewDidDisappear:(BOOL)arg0;
- (id)shareInfo;
- (void)scrollViewDidScroll:(id)arg0;
- (void)setStatusBarBackgroundView:(id)arg0;
- (void)setAnimationDuration:(double)arg0;
- (void)setShareInfo:(id)arg0;
- (id)delegate;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (BOOL)showingKeyboard;
- (void)addChildViewController:(id)arg0;
- (id)containerView;
- (id)context;
- (void)setShowingKeyboard:(BOOL)arg0;
- (BOOL)isLandscape;
- (id)navigationBar;
- (void)setNavigationBar:(id)arg0;
- (void)viewWillAppear:(BOOL)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (double)defaultWidth;
- (id)setupContext;
- (void)loadRequest;
- (void)didPan:(id)arg0;
- (struct CGPoint { double x0; double x1; })originLocation;

@end
