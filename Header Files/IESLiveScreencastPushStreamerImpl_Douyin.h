//
//     Generated by private class-dump
//

@class LiveStreamConfiguration, NSString, LiveCore, IESLivePushStreamLogger;

@interface IESLiveScreencastPushStreamerImpl_Douyin : NSObject <LiveStreamSessionProtocol, LiveCoreCaptureDelegate, IESLiveScreencastPushStreamer> {
    BOOL _enableUpdateConfigCallAB;
    BOOL _isPause;
    BOOL _needPushOutAuxAudioData;
    BOOL _isHeadsetConnecting;
    id /* block */ streamLogCallback;
    id /* block */ streamErrorCallback;
    id /* block */ updateEncodeBitrateCallback;
    id /* block */ sessionStatusChangedHandler;
    id /* block */ audioCaptureEventHandler;
    LiveCore *_liveCore;
    long long _lastVideoPts;
    long long _lastVideoDts;
    long long _lastMicAudioPts;
    long long _lastAppAudioPts;
    long long _videoBufferCount;
    long long _micAudioBufferCount;
    long long _appAudioBufferCount;
    long long _outAuxStreamTid;
    IESLivePushStreamLogger *_pushStreamLogger;
}

@property (retain, nonatomic) LiveCore *liveCore;
@property (nonatomic) BOOL isPause;
@property long long lastVideoPts;
@property long long lastVideoDts;
@property long long lastMicAudioPts;
@property long long lastAppAudioPts;
@property long long videoBufferCount;
@property long long micAudioBufferCount;
@property long long appAudioBufferCount;
@property long long outAuxStreamTid;
@property BOOL needPushOutAuxAudioData;
@property BOOL isHeadsetConnecting;
@property (retain, nonatomic) IESLivePushStreamLogger *pushStreamLogger;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) LiveStreamConfiguration *streamConfiguration;
@property (readonly, nonatomic) BOOL isMicRunning;
@property (readonly, nonatomic) long long micAudioVolumePower;
@property (copy, nonatomic) id /* block */ sessionStatusChangedHandler;
@property (copy, nonatomic) id /* block */ streamLogCallback;
@property (copy, nonatomic) id /* block */ streamErrorCallback;
@property (copy, nonatomic) id /* block */ updateEncodeBitrateCallback;
@property (copy, nonatomic) id /* block */ audioCaptureEventHandler;
@property (nonatomic) BOOL enableUpdateConfigCallAB;

- (void)onAudioCaptureEvent:(long long)arg0;
- (BOOL)isMicRunning;
- (void)setStreamLogCallback:(id /* block */)arg0;
- (void)setLastVideoPts:(long long)arg0;
- (BOOL)enableUpdateConfigCallAB;
- (long long)lastVideoPts;
- (void)streamSession:(id)arg0 onStatusChanged:(long long)arg1;
- (void)streamSession:(id)arg0 errorType:(long long)arg1 onError:(long long)arg2 errorMessage:(id)arg3;
- (void)retryStreaming;
- (void)setEnableUpdateConfigCallAB:(BOOL)arg0;
- (id /* block */)streamLogCallback;
- (id /* block */)updateEncodeBitrateCallback;
- (void)setUpdateEncodeBitrateCallback:(id /* block */)arg0;
- (BOOL)isPause;
- (void)setIsPause:(BOOL)arg0;
- (id)pushStreamLogger;
- (void)setPushStreamLogger:(id)arg0;
- (void)setupLiveCoreWithConfig:(id)arg0;
- (id)liveCore;
- (id)buildStreamConfigurationWithScreenshotStreamConfig:(id)arg0;
- (void)buildSessionWithStreamConfiguration:(id)arg0;
- (void)setLastVideoDts:(long long)arg0;
- (long long)videoBufferCount;
- (void)setVideoBufferCount:(long long)arg0;
- (void)setLastAppAudioPts:(long long)arg0;
- (long long)appAudioBufferCount;
- (void)setAppAudioBufferCount:(long long)arg0;
- (void)setLastMicAudioPts:(long long)arg0;
- (long long)micAudioBufferCount;
- (void)setMicAudioBufferCount:(long long)arg0;
- (BOOL)needPushOutAuxAudioData;
- (BOOL)isHeadsetConnecting;
- (long long)outAuxStreamTid;
- (void)stopMicAudioCapture;
- (void)startMicAudioCapture;
- (void)getCurrentHeadsetStatus;
- (void)setOutAuxStreamTid:(long long)arg0;
- (id)streamConfiguration;
- (void)audioSessionRouteDidChange;
- (void)setNeedPushOutAuxAudioData:(BOOL)arg0;
- (void)setLiveCore:(id)arg0;
- (long long)lastVideoDts;
- (long long)lastAppAudioPts;
- (long long)lastMicAudioPts;
- (void)setIsHeadsetConnecting:(BOOL)arg0;
- (id /* block */)sessionStatusChangedHandler;
- (id /* block */)streamErrorCallback;
- (id /* block */)audioCaptureEventHandler;
- (void)resetStreamingConfigurationIfNeed;
- (void)pushEncodedVideoData:(id)arg0 head:(struct { int x0; int x1; long long x2; long long x3; })arg1;
- (void)pushAudioData:(id)arg0 head:(struct { int x0; int x1; int x2; int x3; int x4; long long x5; int x6; })arg1;
- (void)createOutAuxAudioStream;
- (void)releaseOutAuxAudioStream;
- (void)setNeedPlayOutAuxAudio:(BOOL)arg0;
- (long long)micAudioVolumePower;
- (void)setSessionStatusChangedHandler:(id /* block */)arg0;
- (void)setStreamErrorCallback:(id /* block */)arg0;
- (void)setAudioCaptureEventHandler:(id /* block */)arg0;
- (void)streamSession:(id)arg0 onError:(long long)arg1;
- (void).cxx_destruct;
- (void)startSession;
- (void)resumeSession;
- (void)closeSession;
- (void)pauseSession;

@end
