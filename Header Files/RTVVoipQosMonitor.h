//
//     Generated by private class-dump
//

@class NSString;
@protocol RTVUserProfileManagerInterface, RTVRoomSyncController, RTVQosMonitorV2Protocol, RTVXRRoomSessionControllerInterface, RxInjector, RTVXRControllerInjector, RTVVoipSettingManagerInterface;

@interface RTVVoipQosMonitor : NSObject <RTVXRRoomSessionControllerObserver, RTVXREngineDelegate, RTVVoipQosMonitorController> {
    BOOL _noFirstFrameRenderCallBack;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVXRRoomSessionControllerInterface> _roomController;
    id<RTVVoipSettingManagerInterface> _settingManager;
    id<RTVUserProfileManagerInterface> _profileManager;
    id<RTVRoomSyncController> _roomSyncController;
    id<RTVQosMonitorV2Protocol> _monitor;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, weak, nonatomic) id<RTVXRRoomSessionControllerInterface> roomController;
@property (readonly, nonatomic) id<RTVVoipSettingManagerInterface> settingManager;
@property (readonly, nonatomic) id<RTVUserProfileManagerInterface> profileManager;
@property (weak, nonatomic) id<RTVRoomSyncController> roomSyncController;
@property (retain, nonatomic) id<RTVQosMonitorV2Protocol> monitor;
@property (nonatomic) BOOL noFirstFrameRenderCallBack;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rxAwakeFromPropertyInjection;
- (void)rtv_awakeFromControllerInjector;
- (id)controllerInjector;
- (void)renderBusinessHandler:(id)arg0 context:(id)arg1;
- (void)markNoFirstFrameVideoCallback;
- (void)__log:(id)arg0;
- (id)roomController;
- (void)rtvSession:(id)arg0 contextKeyPathChange:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3;
- (void)voipSession:(id)arg0 remoteParticipant:(id)arg1 didChangeToMicOff:(BOOL)arg2;
- (void)voipSession:(id)arg0 remoteParticipant:(id)arg1 didChangeToCameraOff:(BOOL)arg2;
- (void)xrEngine:(id)arg0 didJoinRoom:(id)arg1 withUid:(id)arg2;
- (void)xrEngine:(id)arg0 newSessionCreatedLocal:(BOOL)arg1 withUid:(id)arg2;
- (void)xrEngine:(id)arg0 didReceiveFirstRemoteAudioFrameOfUid:(id)arg1;
- (void)xrEngine:(id)arg0 onAudioFramePlayStateChanged:(id)arg1 state:(unsigned long long)arg2;
- (void)xrEngine:(id)arg0 didReceiveFirstRemoteVideoFrameOfUid:(id)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (void)xrEngine:(id)arg0 didVideoEnabled:(BOOL)arg1 byUid:(id)arg2;
- (void)xrEngine:(id)arg0 didAudioEnabled:(BOOL)arg1 byUid:(id)arg2;
- (void)xrEngine:(id)arg0 onAudioDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)xrEngine:(id)arg0 onVideoDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)xrEngine:(id)arg0 videoCaptureStateChange:(unsigned long long)arg1;
- (void)xrEngine:(id)arg0 audioCaptureStateChange:(unsigned long long)arg1;
- (void)xrEngine:(id)arg0 onRemoteVideoStateChanged:(id)arg1 videoState:(long long)arg2 stateChangeReason:(long long)arg3;
- (void)xrEngine:(id)arg0 onLocalVideoStateChanged:(long long)arg1 streamState:(long long)arg2 withStreamError:(long long)arg3;
- (void)xrEngine:(id)arg0 onLocalAudioStateChanged:(long long)arg1 withStreamError:(long long)arg2;
- (void)xrEngine:(id)arg0 onRemoteAudioStateChanged:(id)arg1 audioState:(long long)arg2 stateChangeReason:(long long)arg3;
- (void)xrEngine:(id)arg0 onAudioFrameSendStateChanged:(id)arg1 state:(unsigned long long)arg2;
- (void)xrEngine:(id)arg0 onVideoFrameSendStateChanged:(id)arg1 state:(unsigned long long)arg2;
- (void)xrEngine:(id)arg0 didRemotePublish:(BOOL)arg1 streamType:(unsigned long long)arg2 byUid:(id)arg3;
- (void)xrEngine:(id)arg0 didSubscribeStream:(unsigned long long)arg1 state:(long long)arg2 uid:(id)arg3;
- (id)roomSyncController;
- (void)setRoomSyncController:(id)arg0;
- (id)nodeWithIdentifier:(id)arg0;
- (void)startNodeIfNeededWithIdentifier:(id)arg0;
- (void)finishNodeIfNeededWithIdentifier:(id)arg0 error:(id)arg1 extraMonitorInfo:(id)arg2;
- (void)triggerAcceptionNodesWithExtraMonitorInfo:(id)arg0;
- (void)__configMonitor;
- (void)__decideInitialSkippedNodes;
- (void)setNoFirstFrameRenderCallBack:(BOOL)arg0;
- (void)__skipReceiveVideoNodesIfNeeded;
- (void)__updateReceiveVideoNodesSkip:(BOOL)arg0;
- (void)__skipReceiveAudioNodesIfNeeded;
- (void)__updateSendAudioNodesSkip:(BOOL)arg0;
- (void)__updateSendVideoNodesSkip:(BOOL)arg0;
- (id)__sendAudioNodeKeys;
- (void)__updateSendNodesSkip:(BOOL)arg0 forNodes:(id)arg1;
- (id)__sendVideoNodeKeys;
- (void)updateNodeSkippedWithIdentifier:(id)arg0 skipped:(BOOL)arg1;
- (BOOL)__isRemoteParticipantsAllMicOff;
- (id)__receiveAudioNodeKeys;
- (BOOL)__isRemoteParticipantsAllCameraOff;
- (BOOL)noFirstFrameRenderCallBack;
- (id)__receiveVideoNodeKeys;
- (id)__extraMonitorInfoForUserID:(id)arg0;
- (void).cxx_destruct;
- (id)monitor;
- (void)setMonitor:(id)arg0;
- (id)injector;
- (void)dealloc;
- (id)settingManager;
- (id)profileManager;

@end
