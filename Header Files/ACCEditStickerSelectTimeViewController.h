//
//     Generated by private class-dump
//

@class AWEVideoImageGenerator, UIView, NSArray, NSString, ACCStickerContainerView, UIImageView, AWEVideoRangeSlider, AWEImagesView, UIButton, ACCTextStickerView, AWEVideoPublishViewModel, UILabel;
@protocol ACCEditServiceProtocol, ACCStickerSelectTimeVCDelegate, ACCStickerSelectTimeConfig, ACCLoadingViewProtocol, ACCStickerProtocol, ACCStickerPlayerApplying, ACCEditPreviewProtocol, ACCEditTransitionServiceProtocol;

@interface ACCEditStickerSelectTimeViewController : UIViewController <AWEMediaSmallAnimationProtocol, AWEVideoRangeSliderDelegate> {
    BOOL _isPlaying;
    BOOL _isSliding;
    BOOL _loading;
    BOOL _viewHasAppeared;
    id<ACCStickerSelectTimeConfig> _config;
    UIView *_bottomView;
    UILabel *_bottomTitleLabel;
    UILabel *_selectTimeLabel;
    UIButton *_playButton;
    AWEImagesView *_framesView;
    UIImageView *_fakeWaveView;
    AWEVideoRangeSlider *_videoRangeSlider;
    UIButton *_cancelBtn;
    UIButton *_saveBtn;
    UIView *_lineView;
    AWEVideoImageGenerator *_imageGenerator;
    UIView *_playerContainer;
    id<ACCStickerPlayerApplying> _player;
    UIView<ACCStickerProtocol> *_selectedStickerView;
    ACCTextStickerView *_selectedTextView;
    NSArray *_infoStickers;
    ACCStickerContainerView *_stickerContainer;
    NSArray *_preLoadFramesArray;
    double _containerScale;
    NSString *_currentStickerIds;
    id<ACCEditTransitionServiceProtocol> _transitionService;
    id<ACCStickerSelectTimeVCDelegate> _delegate;
    id<ACCEditPreviewProtocol> _previewService;
    AWEVideoPublishViewModel *_repository;
    id<ACCEditServiceProtocol> _editService;
    UIView<ACCLoadingViewProtocol> *_loadingView;
    unsigned long long _bufferingCount;
    UIView *_loadingViewContainer;
    struct CGPoint { double x; double y; } _containerCenter;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _originalPlayerRect;
}

@property (retain, nonatomic) id<ACCStickerSelectTimeConfig> config;
@property (retain, nonatomic) UIView *bottomView;
@property (retain, nonatomic) UILabel *bottomTitleLabel;
@property (retain, nonatomic) UILabel *selectTimeLabel;
@property (retain, nonatomic) UIButton *playButton;
@property (retain, nonatomic) AWEImagesView *framesView;
@property (retain, nonatomic) UIImageView *fakeWaveView;
@property (retain, nonatomic) AWEVideoRangeSlider *videoRangeSlider;
@property (retain, nonatomic) UIButton *cancelBtn;
@property (retain, nonatomic) UIButton *saveBtn;
@property (retain, nonatomic) UIView *lineView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } originalPlayerRect;
@property (retain, nonatomic) AWEVideoImageGenerator *imageGenerator;
@property (retain, nonatomic) UIView *playerContainer;
@property (retain, nonatomic) id<ACCStickerPlayerApplying> player;
@property (retain, nonatomic) UIView<ACCStickerProtocol> *selectedStickerView;
@property (retain, nonatomic) ACCTextStickerView *selectedTextView;
@property (copy, nonatomic) NSArray *infoStickers;
@property (nonatomic) BOOL isPlaying;
@property (nonatomic) BOOL isSliding;
@property (retain, nonatomic) ACCStickerContainerView *stickerContainer;
@property (retain, nonatomic) NSArray *preLoadFramesArray;
@property (nonatomic) double containerScale;
@property (nonatomic) struct CGPoint { double x; double y; } containerCenter;
@property (copy, nonatomic) NSString *currentStickerIds;
@property (weak, nonatomic) id<ACCEditTransitionServiceProtocol> transitionService;
@property (weak, nonatomic) id<ACCStickerSelectTimeVCDelegate> delegate;
@property (weak, nonatomic) id<ACCEditPreviewProtocol> previewService;
@property (retain, nonatomic) AWEVideoPublishViewModel *repository;
@property (weak, nonatomic) id<ACCEditServiceProtocol> editService;
@property (retain, nonatomic) UIView<ACCLoadingViewProtocol> *loadingView;
@property (nonatomic, getter=isLoading) BOOL loading;
@property (nonatomic) unsigned long long bufferingCount;
@property (retain, nonatomic) UIView *loadingViewContainer;
@property (nonatomic, getter=isViewHasAppeared) BOOL viewHasAppeared;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)dismissLoading;
- (id)infoStickers;
- (void)setInfoStickers:(id)arg0;
- (id)cancelBtn;
- (void)setCancelBtn:(id)arg0;
- (void)p_dismiss:(id /* block */)arg0;
- (id)transitionService;
- (void)setTransitionService:(id)arg0;
- (BOOL)isSliding;
- (void)setIsSliding:(BOOL)arg0;
- (id)editService;
- (void)setEditService:(id)arg0;
- (id)playerContainer;
- (void)setPlayerContainer:(id)arg0;
- (id)saveBtn;
- (void)setSaveBtn:(id)arg0;
- (id)stickerContainer;
- (void)setStickerContainer:(id)arg0;
- (id)mediaSmallMediaContainer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mediaSmallMediaContainerFrame;
- (id)mediaSmallBottomView;
- (BOOL)isViewHasAppeared;
- (void)didClickCancelBtn:(id)arg0;
- (void)didClickSaveBtn:(id)arg0;
- (void)configScale;
- (struct CGPoint { double x0; double x1; })containerCenter;
- (void)addMaskConrnerView;
- (void)setContainerScale:(double)arg0;
- (void)setContainerCenter:(struct CGPoint { double x0; double x1; })arg0;
- (double)containerScale;
- (id)selectedStickerView;
- (void)setSelectedStickerView:(id)arg0;
- (id)videoRangeSlider;
- (void)setVideoRangeSlider:(id)arg0;
- (void)moviePause;
- (void)trackSliderAdjustment;
- (BOOL)videoRangeIgnoreGesture;
- (void)videoRangeDidBeginByType:(unsigned long long)arg0;
- (void)videoRangeDidEndByType:(unsigned long long)arg0;
- (void)videoRangeDidChangByPosition:(double)arg0 movedType:(unsigned long long)arg1;
- (void)moviePlay;
- (void)setPreviewService:(id)arg0;
- (id)previewService;
- (void)setOriginalPlayerRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })originalPlayerRect;
- (void)observeDownloaderIfNeeded;
- (void)resetStreamEditStatus;
- (unsigned long long)bufferingCount;
- (double)minimumPlayBufferedTimeWithCount:(unsigned long long)arg0;
- (double)minimumPauseBufferedTime;
- (void)setBufferingCount:(unsigned long long)arg0;
- (id)loadingViewContainer;
- (double)leftPlayerTime;
- (void)setLoadingViewContainer:(id)arg0;
- (id)initWithConfig:(id)arg0 inputData:(id)arg1;
- (void)updateSelectedStickerView:(id)arg0;
- (void)beforeReceiveGestureRecognizerTargetView:(id)arg0;
- (void)setupSlideBar;
- (void)showFrameImages;
- (void)recoverStickerView;
- (void)updateTextReadAndWave:(BOOL)arg0;
- (void)updateStickerContainerHiddenStatusWithCurrentPlayerTime:(double)arg0;
- (void)setStickersAlpha:(BOOL)arg0;
- (double)p_limitMaxDuration:(double)arg0;
- (id)selectedTextView;
- (id)selectTimeLabel;
- (id)framesView;
- (id)fakeWaveView;
- (void)setFakeWaveView:(id)arg0;
- (void)configFakeWaveView;
- (void)makeMaskLayerForContainerView:(id)arg0;
- (void)p_setupUIOptimization;
- (id)preLoadFramesArray;
- (void)loadFirstPreviewFrame;
- (void)reloadPreviewFrames;
- (void)setPreLoadFramesArray:(id)arg0;
- (BOOL)hasAnyPinnedInfoSticker;
- (void)clickPlayButton:(id)arg0;
- (double)p_selectTimeFramesViewTopY;
- (void)configTextReadWhenExit:(BOOL)arg0;
- (void)p_trackTimeSetCancel;
- (void)p_trackTimeSetConfirm;
- (void)p_trackTimeSetAdjust;
- (void)setCurrentStickerIds:(id)arg0;
- (id)currentStickerIds;
- (BOOL)needUpdateVideoRangeSlider:(id)arg0;
- (void)videoRangeSliderAnimation;
- (void)updateVideoRangeSlider;
- (double)mediaSmallBottomViewHeight;
- (id)createStickerInfoWithInfo:(id)arg0;
- (void)p_setupUIOptimizationSaveCancelBtn;
- (void)p_setupUIOptimizationPlayBtn;
- (void)setSelectTimeLabel:(id)arg0;
- (void)setFramesView:(id)arg0;
- (void)setSelectedTextView:(id)arg0;
- (BOOL)isLoading;
- (void)setLoading:(BOOL)arg0;
- (void)setConfig:(id)arg0;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (id)config;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)setPlayer:(id)arg0;
- (id)delegate;
- (void)setRepository:(id)arg0;
- (id)imageGenerator;
- (id)repository;
- (BOOL)isPlaying;
- (BOOL)prefersStatusBarHidden;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setIsPlaying:(BOOL)arg0;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (id)player;
- (void)setImageGenerator:(id)arg0;
- (id)bottomView;
- (id)lineView;
- (void)setLineView:(id)arg0;
- (void)setupUI;
- (void)setBottomView:(id)arg0;
- (void)setViewHasAppeared:(BOOL)arg0;
- (id)playButton;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (void)setPlayButton:(id)arg0;
- (void)setupPlayer;
- (id)bottomTitleLabel;
- (void)setBottomTitleLabel:(id)arg0;
- (void)showLoading;

@end
