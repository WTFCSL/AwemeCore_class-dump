//
//     Generated by private class-dump
//

@class NSString, AWEECRouterInterceptMonitor, JsWorkerIOS, NSArray, UIViewController;
@protocol HybridResourceService, HybridResourceLoaderTaskProtocol;

@interface AWEECRouterIntercept : NSObject <AWEECRouterInterceptDelegate, ErrorCallback> {
    BOOL _rootSwitch;
    BOOL _loadingSwitch;
    BOOL _workerTerminalNil;
    JsWorkerIOS *_worker;
    AWEECRouterInterceptMonitor *_monitor;
    id<HybridResourceLoaderTaskProtocol> _geckoFetchTask;
    id<HybridResourceService> _resourceLoader;
    NSString *_originURLString;
    UIViewController *_sourceVC;
    NSString *_jsURL;
    NSString *_schemaUrl;
    NSArray *_allowOptPageKey;
    NSArray *_allowOptEnterFrom;
}

@property (retain, nonatomic) JsWorkerIOS *worker;
@property (retain, nonatomic) AWEECRouterInterceptMonitor *monitor;
@property (retain, nonatomic) id<HybridResourceLoaderTaskProtocol> geckoFetchTask;
@property (retain, nonatomic) id<HybridResourceService> resourceLoader;
@property (copy, nonatomic) NSString *originURLString;
@property (weak, nonatomic) UIViewController *sourceVC;
@property (nonatomic) BOOL rootSwitch;
@property (copy, nonatomic) NSString *jsURL;
@property (nonatomic) BOOL loadingSwitch;
@property (nonatomic) BOOL workerTerminalNil;
@property (copy, nonatomic) NSString *schemaUrl;
@property (copy, nonatomic) NSArray *allowOptPageKey;
@property (copy, nonatomic) NSArray *allowOptEnterFrom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)setupIntercept;
+ (id)sharedInstance;

- (id)gurdAccessKey;
- (void)transferToURLString:(id)arg0;
- (id)schemaUrl;
- (void)setSchemaUrl:(id)arg0;
- (id)originURLString;
- (void)networkReturn:(id)arg0 error:(id)arg1;
- (void)setRootSwitch:(BOOL)arg0;
- (void)setJsURL:(id)arg0;
- (void)setLoadingSwitch:(BOOL)arg0;
- (void)setWorkerTerminalNil:(BOOL)arg0;
- (void)setAllowOptPageKey:(id)arg0;
- (void)setAllowOptEnterFrom:(id)arg0;
- (BOOL)transferPageIntercept:(id)arg0 transfer:(id)arg1;
- (BOOL)rootSwitch;
- (void)setOriginURLString:(id)arg0;
- (void)setSourceVC:(id)arg0;
- (void)beginTransfer;
- (id)allowOptPageKey;
- (id)allowOptEnterFrom;
- (BOOL)drainageNotGotoMall;
- (id)jsURL;
- (void)overTransfer:(id)arg0;
- (void)fallBackToTransferPage;
- (void)setGeckoFetchTask:(id)arg0;
- (BOOL)loadingSwitch;
- (id)geckoFetchTask;
- (BOOL)workerTerminalNil;
- (id)sourceVC;
- (void)handleError:(id)arg0;
- (void).cxx_destruct;
- (id)monitor;
- (void)startLoading;
- (void)setMonitor:(id)arg0;
- (void)setResourceLoader:(id)arg0;
- (id)resourceLoader;
- (id)worker;
- (void)setWorker:(id)arg0;

@end
