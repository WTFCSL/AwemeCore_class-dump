//
//     Generated by private class-dump
//

@class TTReachability, NSString, NSTimer, NSObject;
@protocol OS_dispatch_queue;

@interface TTTracker : NSObject <TTTrackerInternalTracer> {
    NSObject<OS_dispatch_queue> *_trackHookQueue;
    BOOL _started;
    BOOL _eventUserIDEnable;
    BOOL _eventEnable;
    BOOL _fixBackgroundLaunchingReport;
    BOOL _databaseDidDelete;
    id /* block */ _requestLimitBlock;
    id /* block */ _launchRequestLimitBlock;
    id /* block */ _timerRandomBlock;
    NSString *_appID;
    NSString *_channel;
    NSString *_appName;
    id /* block */ _configParamsBlock;
    id /* block */ _URLBlock;
    id /* block */ _customHeaderBlock;
    id /* block */ _customEventBlock;
    id /* block */ _vidWithUserBlock;
    id /* block */ _vidBlock;
    id /* block */ _filter;
    id /* block */ _commonParamsBlock;
    id /* block */ _logSettingsHTTPHeaderBlock;
    unsigned long long _databaseSizeOnLaunch;
    NSTimer *_trackerTimer;
    TTReachability *_reachability;
    long long _registerStartTime;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *appID;
@property (copy, nonatomic) NSString *channel;
@property (copy, nonatomic) NSString *appName;
@property (retain, nonatomic) NSTimer *trackerTimer;
@property (retain, nonatomic) TTReachability *reachability;
@property (nonatomic) long long registerStartTime;
@property (nonatomic) BOOL started;
@property (copy, nonatomic) id /* block */ requestLimitBlock;
@property (copy, nonatomic) id /* block */ launchRequestLimitBlock;
@property (copy, nonatomic) id /* block */ timerRandomBlock;
@property (copy, nonatomic) id /* block */ configParamsBlock;
@property (copy, nonatomic) id /* block */ URLBlock;
@property (copy, nonatomic) id /* block */ customHeaderBlock;
@property (copy, nonatomic) id /* block */ customEventBlock;
@property (copy, nonatomic) id /* block */ vidWithUserBlock;
@property (copy, nonatomic) id /* block */ vidBlock;
@property (copy, nonatomic) id /* block */ filter;
@property (nonatomic) BOOL eventUserIDEnable;
@property BOOL eventEnable;
@property (copy) id /* block */ commonParamsBlock;
@property (copy) id /* block */ logSettingsHTTPHeaderBlock;
@property (nonatomic) BOOL fixBackgroundLaunchingReport;
@property (nonatomic) BOOL databaseDidDelete;
@property (nonatomic) unsigned long long databaseSizeOnLaunch;

+ (void)pty_tt_trackCustomKey:(id)arg0 withEvent:(id)arg1;
+ (void)eventV3:(id)arg0 params:(id)arg1;
+ (void)eventV3:(id)arg0 params:(id)arg1 isDoubleSending:(BOOL)arg2;
+ (void)event:(id)arg0 label:(id)arg1;
+ (void)eventData:(id)arg0;
+ (void)eventData:(id)arg0 isV3Format:(BOOL)arg1;
+ (void)event:(id)arg0 label:(id)arg1 value:(id)arg2 extValue:(id)arg3 extValue2:(id)arg4;
+ (void)event:(id)arg0 label:(id)arg1 value:(id)arg2 extValue:(id)arg3 extValue2:(id)arg4 dict:(id)arg5;
+ (void)event:(id)arg0 label:(id)arg1 json:(id)arg2;
+ (void)category:(id)arg0 event:(id)arg1 label:(id)arg2 json:(id)arg3;
+ (void)category:(id)arg0 event:(id)arg1 label:(id)arg2 dict:(id)arg3;
+ (void)category:(id)arg0 event:(id)arg1 label:(id)arg2 dict:(id)arg3 json:(id)arg4;
+ (void)trackItemImpressionEvent:(id)arg0;
+ (void)trackLogDataEvent:(id)arg0;
+ (void)trackCustomKey:(id)arg0 withEvent:(id)arg1;
+ (void)loginETWithScheme:(id)arg0;
+ (void)ttTrackEventWithCustomKeys:(id)arg0 label:(id)arg1 value:(id)arg2 source:(id)arg3 extraDic:(id)arg4;
+ (void)clearAllEventData;
+ (void)configTracer;
+ (void)setTracerEnable:(BOOL)arg0;
+ (void)setTracerReportInterval:(long long)arg0;
+ (void)eventData:(id)arg0 policy:(long long)arg1 isV3Format:(BOOL)arg2;
+ (void)startWithAppID:(id)arg0 channel:(id)arg1 appName:(id)arg2 autoActivated:(BOOL)arg3;
+ (void)eventData:(id)arg0 policy:(long long)arg1;
+ (void)enableDebugFlag;
+ (void)setEventSamplingEnable:(BOOL)arg0;
+ (void)enableHADispacher;
+ (void)enablePrioritizedEvents;
+ (void)setExpectedBatchEventInterval:(double)arg0 withCaller:(id)arg1 withUniqueKey:(id)arg2;
+ (void)traceKey:(id)arg0 state:(id)arg1 duration:(long long)arg2;
+ (void)turnOffEventFilter;
+ (void)turnOnEventFilter;
+ (void)syncDumpData;
+ (void)traceKey:(id)arg0 state:(id)arg1 count:(unsigned long long)arg2;
+ (void)setDatabaseFileSizeLimit:(unsigned long long)arg0;
+ (id)sharedInstance;
+ (void)registerPlugin:(Class)arg0;
+ (void)setDeviceCategory:(id)arg0;
+ (void)event:(id)arg0;

- (id /* block */)commonParamsBlock;
- (void)setCommonParamsBlock:(id /* block */)arg0;
- (void)setCustomHeaderBlock:(id /* block */)arg0;
- (id /* block */)customHeaderBlock;
- (id)configParams;
- (void)setConfigParamsBlock:(id /* block */)arg0;
- (void)setIsInHouseVersion:(BOOL)arg0;
- (id /* block */)configParamsBlock;
- (void)setEventEnable:(BOOL)arg0;
- (void)_startWithAppID:(id)arg0 channel:(id)arg1 appName:(id)arg2 autoActivated:(BOOL)arg3;
- (void)setRegisterStartTime:(long long)arg0;
- (void)startTrackerCleanerTimer;
- (void)reportStartupEvent;
- (long long)registerStartTime;
- (id /* block */)timerRandomBlock;
- (id)trackerTimer;
- (void)setTrackerTimer:(id)arg0;
- (void)startTrackerCleaner:(id)arg0;
- (void)stopTrackerCleanerTimer;
- (void)_eventWithData:(id)arg0 eventIndex:(long long)arg1;
- (void)_event:(id)arg0 category:(id)arg1 label:(id)arg2 value:(id)arg3 extValue:(id)arg4;
- (void)_event:(id)arg0 category:(id)arg1 label:(id)arg2 value:(id)arg3 extValue:(id)arg4 eventType:(int)arg5;
- (void)_event:(id)arg0 label:(id)arg1;
- (void)setDebugLogServerAddress:(id)arg0;
- (id /* block */)requestLimitBlock;
- (void)setRequestLimitBlock:(id /* block */)arg0;
- (void)setLaunchRequestLimitBlock:(id /* block */)arg0;
- (void)setTimerRandomBlock:(id /* block */)arg0;
- (void)setURLBlock:(id /* block */)arg0;
- (void)setCustomEventBlock:(id /* block */)arg0;
- (void)setVidWithUserBlock:(id /* block */)arg0;
- (void)setVidBlock:(id /* block */)arg0;
- (void)setEventUserIDEnable:(BOOL)arg0;
- (void)setLogSettingsHTTPHeaderBlock:(id /* block */)arg0;
- (void)setFixBackgroundLaunchingReport:(BOOL)arg0;
- (BOOL)databaseDidDelete;
- (unsigned long long)databaseSizeOnLaunch;
- (id /* block */)launchRequestLimitBlock;
- (id /* block */)customEventBlock;
- (id /* block */)logSettingsHTTPHeaderBlock;
- (id /* block */)URLBlock;
- (void)setDatabaseSizeOnLaunch:(unsigned long long)arg0;
- (void)setDatabaseDidDelete:(BOOL)arg0;
- (BOOL)eventEnable;
- (BOOL)eventUserIDEnable;
- (id /* block */)vidWithUserBlock;
- (id /* block */)vidBlock;
- (BOOL)fixBackgroundLaunchingReport;
- (void)setAppName:(id)arg0;
- (id)appName;
- (id)channel;
- (void)setFilter:(id /* block */)arg0;
- (id)init;
- (void)setAppID:(id)arg0;
- (id /* block */)filter;
- (id)reachability;
- (void).cxx_destruct;
- (void)setChannel:(id)arg0;
- (void)didEnterBackground:(id)arg0;
- (void)setReachability:(id)arg0;
- (BOOL)started;
- (void)setStarted:(BOOL)arg0;
- (id)appID;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)willEnterForeground:(id)arg0;

@end
