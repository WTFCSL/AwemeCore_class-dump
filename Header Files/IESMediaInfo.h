//
//     Generated by private class-dump
//

@class IESMMMVEffectFilter, AVAsset, HTSVideoData, NSMutableDictionary, NSMutableArray, IESMMTimeMachine, NSObject, IESMMMVModel;
@protocol OS_dispatch_queue, HTSGLInput, OS_dispatch_semaphore;

@interface IESMediaInfo : NSObject {
    void *operationQueueKey;
    BOOL _useSystemVideoCompostion;
    BOOL _enableMultiTrack;
    BOOL _allVideoInOneTrack;
    BOOL _allAudioInOneTrack;
    BOOL _isMicMuted;
    BOOL _enableHighFrameRatePreview;
    id<HTSGLInput> _outputFilter;
    HTSVideoData *_videoData;
    IESMMMVEffectFilter *_mvEffectFilter;
    IESMMMVModel *_mvModel;
    long long _mediaType;
    double _animationDuration;
    double _movieDuration;
    NSMutableArray *_videoAssets;
    NSMutableArray *_subTrackVideoAssets;
    NSMutableArray *_audioAssets;
    NSMutableDictionary *_videoTimeClipInfo;
    NSMutableDictionary *_videoTimeScaleInfo;
    NSMutableDictionary *_audioTimeClipInfo;
    NSMutableDictionary *_assetMattingInfos;
    NSMutableDictionary *_volumnInfo;
    NSMutableArray *_filterTimeLine;
    NSMutableArray *_filterZoom;
    NSMutableDictionary *_mediaFilter;
    IESMMTimeMachine *_timeMachine;
    unsigned long long _audioRepeatCount;
    NSMutableArray *_extraMusicEffectInfo;
    NSMutableArray *_extraMusicEffectAsset;
    double _totalDurationWithTimeMachine;
    AVAsset *_endingWaterMarkAudio;
    NSMutableDictionary *_mvResourceID;
    NSObject<OS_dispatch_queue> *_operationQueue;
    NSObject<OS_dispatch_semaphore> *_resourceSemaphore;
    long long _noLockOperationCount;
    struct CGSize { double width; double height; } _outputSize;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *resourceSemaphore;
@property (nonatomic) long long noLockOperationCount;
@property (retain, nonatomic) id<HTSGLInput> outputFilter;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (retain, nonatomic) HTSVideoData *videoData;
@property (nonatomic) BOOL useSystemVideoCompostion;
@property (weak, nonatomic) IESMMMVEffectFilter *mvEffectFilter;
@property (weak, nonatomic) IESMMMVModel *mvModel;
@property (nonatomic) BOOL enableMultiTrack;
@property (nonatomic) BOOL allVideoInOneTrack;
@property (nonatomic) BOOL allAudioInOneTrack;
@property (nonatomic) long long mediaType;
@property (nonatomic) double animationDuration;
@property (nonatomic) double movieDuration;
@property (retain, nonatomic) NSMutableArray *videoAssets;
@property (retain, nonatomic) NSMutableArray *subTrackVideoAssets;
@property (retain, nonatomic) NSMutableArray *audioAssets;
@property (retain, nonatomic) NSMutableDictionary *videoTimeClipInfo;
@property (retain, nonatomic) NSMutableDictionary *videoTimeScaleInfo;
@property (retain, nonatomic) NSMutableDictionary *audioTimeClipInfo;
@property (retain, nonatomic) NSMutableDictionary *assetMattingInfos;
@property (retain, nonatomic) NSMutableDictionary *volumnInfo;
@property (retain, nonatomic) NSMutableArray *filterTimeLine;
@property (retain, nonatomic) NSMutableArray *filterZoom;
@property (retain, nonatomic) NSMutableDictionary *mediaFilter;
@property (retain, nonatomic) IESMMTimeMachine *timeMachine;
@property (nonatomic) BOOL isMicMuted;
@property (nonatomic) unsigned long long audioRepeatCount;
@property (retain, nonatomic) NSMutableArray *extraMusicEffectInfo;
@property (retain, nonatomic) NSMutableArray *extraMusicEffectAsset;
@property (nonatomic) double totalDurationWithTimeMachine;
@property (retain, nonatomic) AVAsset *endingWaterMarkAudio;
@property (retain, nonatomic) NSMutableDictionary *mvResourceID;
@property (nonatomic) BOOL enableHighFrameRatePreview;

+ (long long)getSubTrackNums:(id)arg0;
+ (id)sortVideoTrack:(id)arg0;
+ (BOOL)isSubTrack:(id)arg0;
+ (long long)getMainTrackNums:(id)arg0;
+ (unsigned long long)rotationModeFromDegress:(float)arg0;
+ (long long)getScaleModeWithFillMode:(long long)arg0;

- (void)setOutputFilter:(id)arg0;
- (void)runAsync:(id /* block */)arg0;
- (void)runSync:(id /* block */)arg0;
- (unsigned long long)rotationMode:(unsigned long long)arg0 AddRotation:(float)arg1;
- (unsigned long long)degressFromVideoAsset:(id)arg0 degress:(float)arg1;
- (id)videoData;
- (void)setVideoData:(id)arg0;
- (BOOL)enableMultiTrack;
- (void)setEnableMultiTrack:(BOOL)arg0;
- (BOOL)isMicMuted;
- (void)setIsMicMuted:(BOOL)arg0;
- (id)endingWaterMarkAudio;
- (void)setEndingWaterMarkAudio:(id)arg0;
- (id)volumnInfo;
- (id)videoAssets;
- (id)subTrackVideoAssets;
- (id)videoTimeClipInfo;
- (void)setVideoAssets:(id)arg0;
- (id)videoTimeScaleInfo;
- (id)timeMachine;
- (id)audioTimeClipInfo;
- (double)totalDurationWithTimeMachine;
- (void)setAssetMattingInfos:(id)arg0;
- (id)mvEffectFilter;
- (void)setMvEffectFilter:(id)arg0;
- (id)assetMattingInfos;
- (id)filterTimeLine;
- (void)setFilterTimeLine:(id)arg0;
- (id)filterZoom;
- (void)setFilterZoom:(id)arg0;
- (id)initWithVideoData:(id)arg0 enableMultiTrack:(BOOL)arg1;
- (void)setUseSystemVideoCompostion:(BOOL)arg0;
- (void)setAllAudioInOneTrack:(BOOL)arg0;
- (BOOL)allAudioInOneTrack;
- (id)mvModel;
- (void)setMvModel:(id)arg0;
- (void)setMediatype:(id)arg0;
- (BOOL)hasMV;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })videoTimeClipRangeForAsset:(id)arg0;
- (id)mediaFilter;
- (void)createMediaAssets:(id)arg0 videoData:(id)arg1;
- (id)mvResourceID;
- (void)setTimeMachine:(id)arg0;
- (unsigned long long)audioRepeatCount;
- (void)setAudioRepeatCount:(unsigned long long)arg0;
- (id)extraMusicEffectInfo;
- (void)setExtraMusicEffectInfo:(id)arg0;
- (id)extraMusicEffectAsset;
- (void)setExtraMusicEffectAsset:(id)arg0;
- (void)setTotalDurationWithTimeMachine:(double)arg0;
- (BOOL)useSystemVideoCompostion;
- (void)setSubTrackVideoAssets:(id)arg0;
- (void)setAudioAssets:(id)arg0;
- (void)setVideoTimeClipInfo:(id)arg0;
- (void)setVideoTimeScaleInfo:(id)arg0;
- (void)setAudioTimeClipInfo:(id)arg0;
- (void)setVolumnInfo:(id)arg0;
- (void)setMediaFilter:(id)arg0;
- (void)setMvResourceID:(id)arg0;
- (double)videoRateForAsset:(id)arg0;
- (BOOL)allVideoInOneTrack;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })audioTimeClipRangeForAsset:(id)arg0;
- (id)volumeForAsset:(id)arg0;
- (long long)getmediaDataFilter:(id)arg0;
- (void)setAllVideoInOneTrack:(BOOL)arg0;
- (BOOL)enableHighFrameRatePreview;
- (void)setEnableHighFrameRatePreview:(BOOL)arg0;
- (id)resourceSemaphore;
- (void)setResourceSemaphore:(id)arg0;
- (long long)noLockOperationCount;
- (void)setNoLockOperationCount:(long long)arg0;
- (void)unlock;
- (id)init;
- (void)setMediaType:(long long)arg0;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (double)animationDuration;
- (void)initOperationQueue;
- (long long)mediaType;
- (struct CGSize { double x0; double x1; })outputSize;
- (void)setAnimationDuration:(double)arg0;
- (id)operationQueue;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (id)audioAssets;
- (void)setMovieDuration:(double)arg0;
- (double)movieDuration;
- (id)outputFilter;

@end
