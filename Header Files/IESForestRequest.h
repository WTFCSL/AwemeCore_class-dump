//
//     Generated by private class-dump
//

@class NSString, NSArray, IESForestConfig, IESForestRemoteParameters, NSMutableDictionary, NSObject, IESForestRequestParameters, IESForestPerformanceMetrics, IESForestQueryParameters;
@protocol OS_dispatch_queue;

@interface IESForestRequest : NSObject {
    BOOL _isSync;
    BOOL _runWorkflowInGlobalQueue;
    BOOL _disableGecko;
    BOOL _disableBuiltin;
    BOOL _disableCDN;
    BOOL _disableCDNCache;
    BOOL _enableMemoryCache;
    BOOL _waitGeckoUpdate;
    BOOL _onlyLocal;
    BOOL _onlyPath;
    BOOL _isPreload;
    BOOL _enableRequestReuse;
    BOOL _allowRequestReuse;
    BOOL _isFromMemory;
    BOOL _isRequestReused;
    BOOL _isCDNCacheNegotiation;
    IESForestConfig *_forestConfig;
    IESForestRequestParameters *_requestParameters;
    NSString *_url;
    NSString *_rawUrl;
    NSString *_accessKey;
    NSString *_channel;
    NSString *_bundle;
    NSArray *_fetcherSequence;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSMutableDictionary *_extraInfo;
    NSString *_sessionId;
    NSString *_fetcherNames;
    IESForestPerformanceMetrics *_metrics;
    long long _errorCode;
    long long _ttNetErrorCode;
    long long _httpStatusCode;
    long long _geckoErrorCode;
    long long _geckoSDKErrorCode;
    NSString *_memoryError;
    NSString *_geckoError;
    NSString *_builtinError;
    NSString *_cdnError;
    NSString *_debugInfo;
    IESForestQueryParameters *_queryParameters;
    IESForestRemoteParameters *_remoteParameters;
    NSString *_geckoConfigSource;
    NSString *_identity;
}

@property (retain, nonatomic) IESForestQueryParameters *queryParameters;
@property (retain, nonatomic) IESForestRemoteParameters *remoteParameters;
@property (copy, nonatomic) NSString *geckoConfigSource;
@property (retain, nonatomic) NSString *identity;
@property (retain, nonatomic) IESForestConfig *forestConfig;
@property (retain, nonatomic) IESForestRequestParameters *requestParameters;
@property (nonatomic) BOOL isSync;
@property (nonatomic) BOOL runWorkflowInGlobalQueue;
@property (copy, nonatomic) NSString *url;
@property (copy, nonatomic) NSString *rawUrl;
@property (copy, nonatomic) NSString *accessKey;
@property (copy, nonatomic) NSString *channel;
@property (copy, nonatomic) NSString *bundle;
@property (nonatomic) BOOL disableGecko;
@property (nonatomic) BOOL disableBuiltin;
@property (nonatomic) BOOL disableCDN;
@property (nonatomic) BOOL disableCDNCache;
@property (nonatomic) BOOL enableMemoryCache;
@property (nonatomic) BOOL waitGeckoUpdate;
@property (copy, nonatomic) NSArray *fetcherSequence;
@property (nonatomic) BOOL onlyLocal;
@property (nonatomic) BOOL onlyPath;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue;
@property (retain, nonatomic) NSMutableDictionary *extraInfo;
@property (retain, nonatomic) NSString *sessionId;
@property (copy, nonatomic) NSString *fetcherNames;
@property (retain, nonatomic) IESForestPerformanceMetrics *metrics;
@property (nonatomic) long long errorCode;
@property (nonatomic) long long ttNetErrorCode;
@property (nonatomic) long long httpStatusCode;
@property (nonatomic) long long geckoErrorCode;
@property (nonatomic) long long geckoSDKErrorCode;
@property (copy, nonatomic) NSString *memoryError;
@property (copy, nonatomic) NSString *geckoError;
@property (copy, nonatomic) NSString *builtinError;
@property (copy, nonatomic) NSString *cdnError;
@property (nonatomic) BOOL isPreload;
@property (nonatomic) BOOL enableRequestReuse;
@property (nonatomic) BOOL allowRequestReuse;
@property (nonatomic) BOOL isFromMemory;
@property (nonatomic) BOOL isRequestReused;
@property (nonatomic) BOOL isPreloaded;
@property (nonatomic) BOOL isCDNCacheNegotiation;
@property (copy, nonatomic) NSString *debugInfo;

- (void)setExtraInfo:(id)arg0;
- (BOOL)isPreload;
- (void)setIsPreload:(BOOL)arg0;
- (void)setIsSync:(BOOL)arg0;
- (void)setDisableCDN:(BOOL)arg0;
- (void)setWaitGeckoUpdate:(BOOL)arg0;
- (void)setFetcherSequence:(id)arg0;
- (void)setOnlyPath:(BOOL)arg0;
- (void)setDisableCDNCache:(BOOL)arg0;
- (void)setOnlyLocal:(BOOL)arg0;
- (void)setEnableMemoryCache:(BOOL)arg0;
- (BOOL)enableMemoryCache;
- (BOOL)isFromMemory;
- (BOOL)disableGecko;
- (void)setDisableGecko:(BOOL)arg0;
- (void)setEnableRequestReuse:(BOOL)arg0;
- (BOOL)disableCDNCache;
- (void)setIsFromMemory:(BOOL)arg0;
- (id)rawUrl;
- (BOOL)disableCDN;
- (BOOL)onlyLocal;
- (BOOL)onlyPath;
- (id)shuffleDomains;
- (BOOL)waitGeckoUpdate;
- (BOOL)disableBuiltin;
- (void)setDisableBuiltin:(BOOL)arg0;
- (id)fetcherSequence;
- (void)setForestConfig:(id)arg0;
- (id)forestConfig;
- (BOOL)enableRequestReuse;
- (long long)resourceScene;
- (void)setRunWorkflowInGlobalQueue:(BOOL)arg0;
- (void)setIsRequestReused:(BOOL)arg0;
- (void)setIsPreloaded:(BOOL)arg0;
- (BOOL)isRequestReused;
- (BOOL)isPreloaded;
- (id)extractAccessKey;
- (id)extractChannel;
- (id)extractBundle;
- (BOOL)extractDisableGecko;
- (BOOL)extractDisableBuiltin;
- (BOOL)extractDisableCDN;
- (BOOL)extractDisableCDNCache;
- (BOOL)extractEnableMemoryCache;
- (BOOL)extractOnlyLocal;
- (BOOL)extractWaitGeckoUpdate;
- (id)fetcherNames;
- (void)setFetcherNames:(id)arg0;
- (long long)ttNetErrorCode;
- (id)geckoError;
- (id)builtinError;
- (id)cdnError;
- (void)setBuiltinError:(id)arg0;
- (BOOL)hasValidGeckoInfo;
- (void)setCdnError:(id)arg0;
- (id)cdnRetryTimes;
- (void)setTtNetErrorCode:(long long)arg0;
- (void)setIsCDNCacheNegotiation:(BOOL)arg0;
- (double)cdnTimeoutInterval;
- (BOOL)runWorkflowInGlobalQueue;
- (id)geckoConfigSource;
- (id)resourceSceneDescription;
- (BOOL)isCDNCacheNegotiation;
- (long long)geckoErrorCode;
- (id)customParameters;
- (void)setGeckoError:(id)arg0;
- (void)setGeckoErrorCode:(long long)arg0;
- (id)initWithUrl:(id)arg0 forestConfig:(id)arg1 requestParameters:(id)arg2;
- (void)appendProcessInfo:(id)arg0;
- (void)setAllowRequestReuse:(BOOL)arg0;
- (BOOL)skipMonitor;
- (double)memoryExpiredTime;
- (void)setMemoryError:(id)arg0;
- (void)extractChannelAndBundle;
- (BOOL)extractOnlyPath;
- (BOOL)extractIsPreload;
- (BOOL)extractEnableRequestReuse;
- (BOOL)extractAllowRequestReuse;
- (id)extractCompletionQueue;
- (BOOL)extractRunWorkflowInGlobalQueue;
- (id)extractSessionID;
- (id)extractIdentity;
- (id)remoteParameters;
- (void)setGeckoConfigSource:(id)arg0;
- (id)formatUrlString:(id)arg0;
- (id)extractChannelBundleWithUrlString:(id)arg0 prefix:(id)arg1;
- (long long)geckoSDKErrorCode;
- (void)setGeckoSDKErrorCode:(long long)arg0;
- (id)actualFetcherSequence;
- (id)extractPrefixList;
- (void)setRawUrl:(id)arg0;
- (BOOL)allowRequestReuse;
- (void)setRemoteParameters:(id)arg0;
- (void)setCompletionQueue:(id)arg0;
- (id)bundle;
- (id)channel;
- (BOOL)isSync;
- (id)metrics;
- (void)setSessionId:(id)arg0;
- (void)setMetrics:(id)arg0;
- (void).cxx_destruct;
- (void)setChannel:(id)arg0;
- (id)completionQueue;
- (void)setIdentity:(id)arg0;
- (void)setBundle:(id)arg0;
- (id)sessionId;
- (void)setUrl:(id)arg0;
- (id)debugInfo;
- (id)groupId;
- (void)setErrorCode:(long long)arg0;
- (long long)errorCode;
- (id)identity;
- (id)requestParameters;
- (id)description;
- (id)url;
- (void)setRequestParameters:(id)arg0;
- (id)queryParameters;
- (void)setQueryParameters:(id)arg0;
- (id)accessKey;
- (void)setAccessKey:(id)arg0;
- (void)setDebugInfo:(id)arg0;
- (long long)httpStatusCode;
- (void)setHttpStatusCode:(long long)arg0;
- (id)extraInfo;
- (id)initWithUrl:(id)arg0;
- (id)memoryError;

@end
