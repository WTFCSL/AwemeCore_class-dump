//
//     Generated by private class-dump
//

@class IESLiveKTVChorusMusicManager, HTSEventContext, NSString, IESLiveKTVCommonStore, IESLiveKTVChorusApi, IESLiveChorusInfo, IESLiveKTVChorusSEIHandler;
@protocol IESLiveCompoundSubscription;

@interface IESLiveKTVChorusStore : NSObject <HTSLiveMessageSubscriber, IESLiveKTVActions, IESLiveRevenueInteractAction, IESLiveKTVChorusRouter, IESLiveKTVChorusActions, IESLiveKTVChorusProvider> {
    BOOL _isChorusStart;
    IESLiveKTVChorusSEIHandler *_seiHandler;
    IESLiveKTVChorusMusicManager *_musicManager;
    IESLiveChorusInfo *_chorusInfo;
    IESLiveKTVChorusApi *_api;
    IESLiveKTVCommonStore *_commonStore;
    id<IESLiveCompoundSubscription> _dispose;
    HTSEventContext *_trackContext;
}

@property (retain, nonatomic) IESLiveChorusInfo *chorusInfo;
@property (retain, nonatomic) IESLiveKTVChorusApi *api;
@property (weak, nonatomic) IESLiveKTVCommonStore *commonStore;
@property (nonatomic) BOOL isChorusStart;
@property (retain, nonatomic) id<IESLiveCompoundSubscription> dispose;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveKTVChorusSEIHandler *seiHandler;
@property (retain, nonatomic) IESLiveKTVChorusMusicManager *musicManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)currentMusic;
- (void)endRevenueInteractWithScene:(unsigned long long)arg0;
- (id)musicManager;
- (void)setMusicManager:(id)arg0;
- (void)bindStore:(id)arg0;
- (id)initWithDIContext:(id)arg0 trackContext:(id)arg1;
- (void)setDispose:(id)arg0;
- (BOOL)isInChorus;
- (BOOL)isCurrentUserLeader;
- (id)chorusInfo;
- (void)startChorus:(id)arg0;
- (void)endChorus:(id)arg0 reason:(int)arg1;
- (void)didSongListChanged:(id)arg0;
- (void)didPlayUnvailableMusic:(id)arg0;
- (BOOL)isChorusStart;
- (id)ktvMusicManager;
- (BOOL)isCurrentUserFollower;
- (id)whoseMusicForTrack:(id)arg0;
- (id)chorusDictForTrack;
- (BOOL)isInChorusWithScene;
- (void)fetchChorusOrderList:(id /* block */)arg0;
- (void)setSeiHandler:(id)arg0;
- (void)audienceGetState;
- (void)setCommonStore:(id)arg0;
- (id)commonStore;
- (id)seiHandler;
- (void)tr_endChorus;
- (id)currentChannelId;
- (void)p_willChorusStart:(id)arg0 chorusInfo:(id)arg1;
- (void)leaderHandleSingerStateChanged;
- (void)p_willChorusEnd:(id)arg0;
- (void)setIsChorusStart:(BOOL)arg0;
- (void)setChorusInfo:(id)arg0;
- (void)tr_startChorus;
- (void)leaderCheckNextState;
- (BOOL)isLeader:(id)arg0;
- (void)didComponentUnmount;
- (id)dispose;
- (void).cxx_destruct;
- (void)addObserver;
- (id)player;
- (void)messageReceived:(id)arg0;
- (id)api;
- (void)setApi:(id)arg0;

@end
