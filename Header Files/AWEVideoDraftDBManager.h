//
//     Generated by private class-dump
//

@class WCTDatabase, NSString, NSObject;
@protocol OS_dispatch_queue;

@interface AWEVideoDraftDBManager : NSObject <ACCUserServiceMessage> {
    WCTDatabase *_database;
    NSObject<OS_dispatch_queue> *_databaseQueue;
    long long _draftCacheCount;
}

@property (retain, nonatomic) WCTDatabase *database;
@property (readonly, copy, nonatomic) NSString *dbPath;
@property (readonly, copy, nonatomic) NSString *recoveryDBPath;
@property (readonly, copy, nonatomic) NSString *tableName;
@property (readonly, copy, nonatomic) NSString *projectTableName;
@property (readonly, copy, nonatomic) NSString *userId;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *databaseQueue;
@property (nonatomic) long long draftCacheCount;

+ (id)projectTableName;
+ (id)dbName;
+ (id)tableName;
+ (id)defaultManager;

- (void)didFinishLogin;
- (long long)draftCount;
- (BOOL)p_createTableWithError:(id *)arg0;
- (BOOL)hasDraft;
- (id)retrieveBasicDrafts;
- (BOOL)hasPublishBackUp;
- (BOOL)draftExistWithID:(id)arg0;
- (BOOL)saveDraft:(id)arg0 error:(id *)arg1;
- (void)prepareDBOnce;
- (void)p_trackIfCorruptedWithError:(id)arg0;
- (BOOL)p_createProjectTableWithError:(id *)arg0;
- (BOOL)p_correctDraftStatusIfNeededWithId:(id)arg0 status:(unsigned long long)arg1 error:(id *)arg2;
- (long long)convertExpireTime:(long long)arg0;
- (id)retrieveBasicDraftWithDraftID:(id)arg0 error:(id *)arg1;
- (BOOL)correctDraftBackupIfNeededWithBasicDraft:(id)arg0 backup:(BOOL *)arg1;
- (id)projectTableName;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_publishBackupCondition;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_conditionIgnorePublishTask:(BOOL)arg0;
- (struct Order { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; })p_order;
- (void)p_updateRelatedUserForDrafts:(id)arg0;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_projectDraftsConfition:(id)arg0;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_deletedCondition;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_editBackupCondition;
- (long long)p_draftCountWithError:(id *)arg0;
- (void)recoverDatabaseIfNeeded;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_editBackupConditionExceptDraft:(id)arg0;
- (id)deleteProjectDraftsWithIDS:(id)arg0 error:(id *)arg1;
- (id)deleteProjectDraftsWithID:(id)arg0 error:(id *)arg1;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_visibleConditionIgnoreUser;
- (BOOL)p_hasBackup;
- (BOOL)p_recoverDatabaseWithError:(id *)arg0;
- (id)recoveryDBPath;
- (id)backupPath;
- (id)p_pathForDBName:(id)arg0;
- (BOOL)transitionStatusNormalWithDraftID:(id)arg0 error:(id *)arg1;
- (BOOL)transitionStatusPendingDeleteWithDraftID:(id)arg0 duration:(long long)arg1 requireBackup:(BOOL)arg2 scene:(id)arg3 error:(id *)arg4;
- (BOOL)transitionStatusToDeleteWithDraftID:(id)arg0 error:(id *)arg1;
- (BOOL)extendExpireTimeWithDraftID:(id)arg0 duration:(long long)arg1 error:(id *)arg2;
- (BOOL)saveProjectDrafts:(id)arg0 error:(id *)arg1;
- (BOOL)markAllPublishBackupAsDraftWithError:(id *)arg0;
- (BOOL)markDraftSourceWithID:(id)arg0 trackParams:(id)arg1 error:(id *)arg2;
- (id)retrieveDraftsWithError:(id *)arg0;
- (id)retrieveProjectDraftsWithDraftID:(id)arg0 error:(id *)arg1;
- (id)retrievePorjectDraftWithDraftID:(id)arg0 uuid:(id)arg1 error:(id *)arg2;
- (id)retrieveDeletedDrafts;
- (id)retrieveEditBackUpsWithError:(id *)arg0;
- (id)retrieveWithDraftId:(id)arg0 error:(id *)arg1;
- (id)retrieveWithItemId:(id)arg0 error:(id *)arg1;
- (id)retrieveNewestDraftWithError:(id *)arg0;
- (id)deleteAllEditBackupsWithErorr:(id *)arg0 exceptDraft:(id)arg1;
- (BOOL)deleteDraftWithId:(id)arg0 error:(id *)arg1;
- (long long)allDraftCount;
- (id)allDraftIds;
- (id)allVisibleDraftIds;
- (id)allUserIdWithDraftIds;
- (BOOL)deleteDraftsExcept:(id)arg0 inDBFilePath:(id)arg1;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_backupAsDraftCondition:(id)arg0;
- (struct WCTExpr { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long x2 : 63; unsigned char x3 : 1; } x0; struct __short { char x0[23]; unsigned char x1[0]; unsigned char x2 : 7; unsigned char x3 : 1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; } x0; Class x1; struct shared_ptr<WCTColumnBinding> { struct WCTColumnBinding *x0; struct __shared_weak_count *x1; } x2; Class x3; })p_publishDraftAsBackupCondition:(id)arg0;
- (long long)draftCacheCount;
- (void)setDraftCacheCount:(long long)arg0;
- (id)tableName;
- (id)databaseQueue;
- (id)database;
- (void).cxx_destruct;
- (void)setDatabase:(id)arg0;
- (id)type;
- (id)dbPath;
- (id)userId;
- (void)setDatabaseQueue:(id)arg0;
- (void)prepare;

@end
