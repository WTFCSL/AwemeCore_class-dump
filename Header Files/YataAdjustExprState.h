//
//     Generated by private class-dump
//

@class YataStore, NSString, NSDictionary, YataProtocolModel, NSArray, YataEventData, NSMutableDictionary;

@interface YataAdjustExprState : NSObject <YataState> {
    YataStore *_store;
    NSDictionary *_triggerParams;
    NSString *_triggerName;
    NSString *_currentNodeName;
    YataProtocolModel *_cacheProtocol;
    NSArray *_updateList;
    NSDictionary *_currentNodeDataFields;
    NSString *_currentRenderNodeKey;
    YataEventData *_eventData;
    NSMutableDictionary *_mergedProtocolDataDict;
}

@property (retain, nonatomic) NSDictionary *triggerParams;
@property (copy, nonatomic) NSString *triggerName;
@property (copy, nonatomic) NSString *currentNodeName;
@property (retain, nonatomic) YataProtocolModel *cacheProtocol;
@property (retain, nonatomic) NSArray *updateList;
@property (retain, nonatomic) NSDictionary *currentNodeDataFields;
@property (copy, nonatomic) NSString *currentRenderNodeKey;
@property (retain, nonatomic) YataEventData *eventData;
@property (retain, nonatomic) NSMutableDictionary *mergedProtocolDataDict;
@property (weak, nonatomic) YataStore *store;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)triggerParams;
- (id)initWithAdjustEventData:(id)arg0;
- (BOOL)adjustStoreFields;
- (void)setMergedProtocolDataDict:(id)arg0;
- (id)currentRenderNodeKey;
- (id)currentNodeName;
- (BOOL)adjustExprWithUpdateStrategy:(id)arg0 dataItemFields:(id)arg1 updatedFieldsList:(id)arg2;
- (id)mergedProtocolDataDict;
- (BOOL)isPassFilterWithStrategy:(id)arg0 error:(id *)arg1;
- (void)reportExprError:(id)arg0 type:(unsigned long long)arg1;
- (id)targetNodeFieldsWithStrategy:(id)arg0 dataItemFields:(id)arg1 error:(id *)arg2;
- (void)preprocessWithStrategy:(id)arg0 preprocessError:(id *)arg1;
- (id)updateFieldsWithStrategy:(id)arg0 adjustExprDataFields:(id)arg1 updateFieldsError:(id *)arg2;
- (BOOL)validateExprResultBooleanType:(id)arg0 expression:(id)arg1 error:(id *)arg2;
- (id)matchNodeWithExprs:(id)arg0 matchNodeExpressionError:(id *)arg1;
- (id)currentNodeDataFields;
- (void)setTriggerParams:(id)arg0;
- (void)setCurrentNodeName:(id)arg0;
- (id)cacheProtocol;
- (void)setCacheProtocol:(id)arg0;
- (void)setUpdateList:(id)arg0;
- (void)setCurrentNodeDataFields:(id)arg0;
- (void)setCurrentRenderNodeKey:(id)arg0;
- (id)eventData;
- (void).cxx_destruct;
- (id)store;
- (void)setStore:(id)arg0;
- (id)updateList;
- (void)setEventData:(id)arg0;
- (id)triggerName;
- (void)setTriggerName:(id)arg0;

@end
