//
//     Generated by private class-dump
//

@class NSTimer, AWEUITaskSpreadQueueV2, CADisplayLink;

@interface AWEUITaskDelaySpreadExecutor : NSObject {
    BOOL _enabled;
    BOOL _enableCpuUsageOnly;
    unsigned long long _runningIntervalCount;
    double _runningLimitation;
    unsigned long long _intervalCount;
    double _interval;
    double _maxInterval;
    double _cpuUsageThreshold;
    double _cpuUsageCheckInterval;
    CADisplayLink *_displayLink;
    double _lastTargetTimestamp;
    long long _skipCount;
    double _lastInvokeTimestamp;
    double _originInterval;
    NSTimer *_timer;
    AWEUITaskSpreadQueueV2 *_queue;
}

@property (retain, nonatomic) CADisplayLink *displayLink;
@property (nonatomic) double lastTargetTimestamp;
@property (nonatomic) long long skipCount;
@property (nonatomic) double lastInvokeTimestamp;
@property (nonatomic) double originInterval;
@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) AWEUITaskSpreadQueueV2 *queue;
@property (nonatomic) BOOL enabled;
@property (nonatomic) unsigned long long runningIntervalCount;
@property (nonatomic) double runningLimitation;
@property (nonatomic) unsigned long long intervalCount;
@property (nonatomic) double interval;
@property (nonatomic) double maxInterval;
@property (nonatomic) double cpuUsageThreshold;
@property (nonatomic) double cpuUsageCheckInterval;
@property (nonatomic) BOOL enableCpuUsageOnly;

+ (id)sharedInstance;

- (double)lastTargetTimestamp;
- (void)setLastTargetTimestamp:(double)arg0;
- (void)cancelGroup:(id)arg0;
- (void)setCpuUsageThreshold:(double)arg0;
- (void)setCpuUsageCheckInterval:(double)arg0;
- (BOOL)enableCpuUsageOnly;
- (void)setEnableCpuUsageOnly:(BOOL)arg0;
- (id)invokeBlock:(id /* block */)arg0 afterDelay:(double)arg1;
- (void)_resetDisplayLink;
- (void)resetIntervalConfig;
- (void)disableCpuUsageOnly;
- (id)invokeBlock:(id /* block */)arg0 afterDelay:(double)arg1 groupID:(id)arg2 finishBlock:(id /* block */)arg3;
- (void)_setupDisplayLinkPaused:(BOOL)arg0;
- (double)lastInvokeTimestamp;
- (void)_invokeBlockWithCurrentTime:(double)arg0 runTimeLimitation:(double)arg1;
- (void)setLastInvokeTimestamp:(double)arg0;
- (void)cpuUsageOnly;
- (double)cpuUsageThreshold;
- (double)originInterval;
- (void)setOriginInterval:(double)arg0;
- (double)cpuUsageCheckInterval;
- (void)adjustIntervalForCpuUsage;
- (void)setRunningIntervalCount:(unsigned long long)arg0;
- (void)setRunningLimitation:(double)arg0;
- (id)invokeBlock:(id /* block */)arg0 groupID:(id)arg1 finishBlock:(id /* block */)arg2;
- (unsigned long long)runningIntervalCount;
- (double)runningLimitation;
- (id)timer;
- (void)setDisplayLink:(id)arg0;
- (void)cancelTask:(id)arg0;
- (id)init;
- (id)invokeBlock:(id /* block */)arg0;
- (BOOL)enabled;
- (void)startTimer;
- (void).cxx_destruct;
- (void)stopTimer;
- (double)interval;
- (void)setInterval:(double)arg0;
- (void)_invalidateDisplayLink;
- (void)setTimer:(id)arg0;
- (id)displayLink;
- (void)setEnabled:(BOOL)arg0;
- (id)queue;
- (void)dealloc;
- (void)setQueue:(id)arg0;
- (void)setIntervalCount:(unsigned long long)arg0;
- (unsigned long long)intervalCount;
- (long long)skipCount;
- (void)setSkipCount:(long long)arg0;
- (void)_displayLinkDidUpdate:(id)arg0;
- (void)endImmediately;
- (double)maxInterval;
- (void)setMaxInterval:(double)arg0;

@end
