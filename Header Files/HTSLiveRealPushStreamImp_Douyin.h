//
//     Generated by private class-dump
//

@class HTSLiveNormalStreamImp_Douyin, IESLiveScreencastPushStreamerImpl_Douyin, IESLivePushStreamLogger, NSString, IESLiveInteractPureRTCStreamImpl_Douyin, HTSLivePushStreamBitrateImp_Douyin, IESLiveAnchorAudioCaptureServiceIMP, IESLiveNormalStreamConfig, IESLiveLinkInteractStreamImp_Douyin, LiveCore;
@protocol IESLivePushStreamEntryConfig, IESLiveKTVStreaming, IESLiveFullLinkMonitor, IESLiveStreamStateProtocol;

@interface HTSLiveRealPushStreamImp_Douyin : NSObject <IESLiveRealStreamingProvider, IESLiveRoomRealStreamingService, IESLivePerfMonitorStreamProvider> {
    BOOL _isDarkFramePushing;
    id<IESLiveStreamStateProtocol> delegate;
    id<IESLivePushStreamEntryConfig> _entryConfig;
    LiveCore *_liveCoreSession;
    HTSLiveNormalStreamImp_Douyin *_realNormalStreamer;
    id<IESLiveKTVStreaming> _ktvHandler;
    HTSLivePushStreamBitrateImp_Douyin *_bitrateProcesser;
    IESLiveScreencastPushStreamerImpl_Douyin *_realScreencastStreamer;
    unsigned long long _contentType;
    IESLivePushStreamLogger *_pushStreamLogger;
    IESLiveLinkInteractStreamImp_Douyin *_realInteractStreamer;
    IESLiveInteractPureRTCStreamImpl_Douyin *_realPureRTCStreamer;
    IESLiveAnchorAudioCaptureServiceIMP *_audioCapture;
    id<IESLiveFullLinkMonitor> _fullLinkMonitor;
}

@property (retain, nonatomic) id<IESLivePushStreamEntryConfig> entryConfig;
@property (retain, nonatomic) LiveCore *liveCoreSession;
@property (retain, nonatomic) HTSLiveNormalStreamImp_Douyin *realNormalStreamer;
@property (retain, nonatomic) id<IESLiveKTVStreaming> ktvHandler;
@property (retain, nonatomic) HTSLivePushStreamBitrateImp_Douyin *bitrateProcesser;
@property (retain, nonatomic) IESLiveScreencastPushStreamerImpl_Douyin *realScreencastStreamer;
@property (nonatomic) unsigned long long contentType;
@property (retain, nonatomic) IESLivePushStreamLogger *pushStreamLogger;
@property (retain, nonatomic) IESLiveLinkInteractStreamImp_Douyin *realInteractStreamer;
@property (retain, nonatomic) IESLiveInteractPureRTCStreamImpl_Douyin *realPureRTCStreamer;
@property (retain, nonatomic) IESLiveAnchorAudioCaptureServiceIMP *audioCapture;
@property (nonatomic) BOOL isDarkFramePushing;
@property (retain, nonatomic) id<IESLiveFullLinkMonitor> fullLinkMonitor;
@property (weak, nonatomic) id<IESLiveStreamStateProtocol> delegate;
@property (readonly, nonatomic) IESLiveNormalStreamConfig *liveStreamConfig;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMusicVolume:(float)arg0;
- (id)audioCapture;
- (void)setAudioCapture:(id)arg0;
- (void)setEnablePlayer:(BOOL)arg0;
- (void)stopPlayAudioFile;
- (void)playAudioFile:(id)arg0 audioFileWillPlay:(id /* block */)arg1 audioFileStoped:(id /* block */)arg2 audioFilePlayError:(id /* block */)arg3;
- (double)getFileDuration;
- (BOOL)stopEffectBachAlgorithm;
- (void)setEnableSpeaker:(BOOL)arg0;
- (void)setHeadphonesMonitoringEnabled:(BOOL)arg0;
- (void)setEnablePlayoutEcho:(BOOL)arg0;
- (void)setContourDataCallBack:(id /* block */)arg0;
- (void)setEffectBachAlgorithmEnable:(BOOL)arg0 threshold:(long long)arg1;
- (void)setEchoCancellationEnabled:(BOOL)arg0;
- (void)stopPushDarkFrame;
- (void)startPushDarkFrame;
- (void)pushVideoBuffer:(struct __CVBuffer { } *)arg0 andCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (int)sendSEIMsgWithKey:(id)arg0 value:(id)arg1 repeatTimes:(long long)arg2 keyFrameOnly:(BOOL)arg3 allowsCovered:(BOOL)arg4 timeGap:(int)arg5 seiFlag:(int)arg6;
- (void)updateTransportParamter:(id)arg0 value:(id)arg1;
- (long long)sendSEIMsgWithKey:(id)arg0 value:(id)arg1 repeatTimes:(long long)arg2 keyFrameOnly:(BOOL)arg3 allowsCovered:(BOOL)arg4;
- (void)setEnableAudioDeviceMonitor:(BOOL)arg0 timefreq:(int)arg1;
- (void)setADMonitorDelegate:(id)arg0;
- (void)pushEffectedVideoBuffer:(struct __CVBuffer { } *)arg0 texture:(int)arg1 andCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2;
- (void)pushEffectedVideoBufferAfterStarted:(struct __CVBuffer { } *)arg0 texture:(int)arg1 andCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2;
- (void)startPushEffectedFrame;
- (void)stopPushEffectedFrame;
- (id)attachingDIContext;
- (id)fullLinkMonitor;
- (void)setFullLinkMonitor:(id)arg0;
- (int)createOutAuxAudioStream:(long long)arg0;
- (int)createOutAuxAudioStream:(long long)arg0 withAudioFileConfig:(id)arg1;
- (int)releaseOutAuxAudioStream:(int)arg0;
- (void)setOutAuxStreamVolume:(int)arg0 volume:(float)arg1;
- (void)interuptOutAuxStream:(int)arg0 interupt:(BOOL)arg1;
- (void)prepareOutAuxAudioStream:(int)arg0 sampleRate:(int)arg1 channels:(int)arg2;
- (int)pushOutAuxFLTAudioData:(int)arg0 data:(float **)arg1 size:(long long)arg2;
- (id)previewFps;
- (id)streamingLiveCoreSession;
- (id)normalStreamer;
- (id)interactStreamer;
- (id)ktv;
- (id)bitrateHandler;
- (id)screencastStreamer;
- (id)pureRTCStreamer;
- (void)sendSEIInfo:(id)arg0 withKey:(id)arg1;
- (BOOL)isDarkFrameStreamPushing;
- (void)startAudioCaptureWithReason:(id)arg0;
- (void)stopAudioCaptureWithReason:(id)arg0;
- (BOOL)startEffectBachAlgorithm;
- (double)currentMicrophoneVolume;
- (void)setMicorphoneVolume:(double)arg0;
- (id)liveStreamConfig;
- (BOOL)echoCancellationEnabled;
- (void)setEchoCancellationEnabled:(BOOL)arg0 withPrivacyCert:(id)arg1;
- (id)entryConfig;
- (id)pushStreamLogger;
- (void)setPushStreamLogger:(id)arg0;
- (id)inCapFps;
- (id)outCapFps;
- (id)encodeFps;
- (id)realFps;
- (void)reportAudioKeyApiCallWithEventKey:(id)arg0 params:(id)arg1 reason:(id)arg2;
- (BOOL)isCurrentRoomAnchor;
- (void)setupWithContentType:(unsigned long long)arg0 entryConfig:(id)arg1;
- (id)liveCoreSession;
- (void)setLiveCoreSession:(id)arg0;
- (id)ktvHandler;
- (id)realNormalStreamer;
- (id)realInteractStreamer;
- (id)bitrateProcesser;
- (id)realScreencastStreamer;
- (id)realPureRTCStreamer;
- (void)setIsDarkFramePushing:(BOOL)arg0;
- (long long)audioOutAuxStreamMixType:(long long)arg0;
- (BOOL)isDarkFramePushing;
- (void)setupScreencastStreamers;
- (void)setupPureRTCStreamer;
- (void)setupNormalStreamers;
- (void)setRealScreencastStreamer:(id)arg0;
- (void)setKtvHandler:(id)arg0;
- (void)setupInteractStreamer;
- (void)loadLiveCoreSession;
- (void)setRealNormalStreamer:(id)arg0;
- (void)setBitrateProcesser:(id)arg0;
- (void)setRealInteractStreamer:(id)arg0;
- (void)setRealPureRTCStreamer:(id)arg0;
- (BOOL)isLiveCoreAudioOn;
- (void)setEntryConfig:(id)arg0;
- (void)setContentType:(unsigned long long)arg0;
- (unsigned long long)contentType;
- (float)musicVolume;
- (void).cxx_destruct;
- (void)cleanup;
- (void)setup;
- (id)delegate;
- (void)setDelegate:(id)arg0;

@end
