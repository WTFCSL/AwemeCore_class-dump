//
//     Generated by private class-dump
//

@class NSString;

@interface VEAudioQueueUnit : IESMMObject <VEAudioPlayerProtocol> {
    struct AudioQueueBuffer **_audioQueueBufferRefArray;
    BOOL isPlaying;
    BOOL _isResetting;
    BOOL _waitingForFirstPlayCallback;
    BOOL _isAsyncExecute;
    unsigned int _renderFrames;
    int _bufferCount;
    id /* block */ _getUnitNextBufferBlock;
    id /* block */ _getNextBufferBlock;
    id /* block */ _playDidStartBlock;
    struct OpaqueAudioQueue { } *_audioQueue;
    struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _asbd;
}

@property (nonatomic) struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } asbd;
@property (nonatomic) struct OpaqueAudioQueue { } *audioQueue;
@property (nonatomic) unsigned int renderFrames;
@property (nonatomic) int bufferCount;
@property (nonatomic) BOOL isResetting;
@property (nonatomic) BOOL waitingForFirstPlayCallback;
@property (nonatomic) BOOL isAsyncExecute;
@property (copy, nonatomic) id /* block */ getNextBufferBlock;
@property (copy, nonatomic) id /* block */ getUnitNextBufferBlock;
@property (copy, nonatomic) id /* block */ playDidStartBlock;
@property (nonatomic) BOOL isPlaying;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)recordQueueUnitCreation:(id)arg0;
+ (void)recordQueueUnitDestruction:(id)arg0;
+ (id)audioQueueUnitFromPointer:(void *)arg0;

- (void)createAudioBufferQueue;
- (void)setRenderFrames:(unsigned int)arg0;
- (void)setIsAsyncExecute:(BOOL)arg0;
- (BOOL)isAsyncExecute;
- (void)setIsResetting:(BOOL)arg0;
- (void)enqueueBuffer:(struct AudioQueueBuffer { unsigned int x0; void *x1; unsigned int x2; void *x3; unsigned int x4; struct AudioStreamPacketDescription *x5; unsigned int x6; } *)arg0;
- (unsigned int)renderFrames;
- (void)setBufferCount:(int)arg0;
- (id)initWithAudioFormat:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg0;
- (id /* block */)playDidStartBlock;
- (void)setPlayDidStartBlock:(id /* block */)arg0;
- (void)setGetUnitNextBufferBlock:(id /* block */)arg0;
- (void)setGetNextBufferBlock:(id /* block */)arg0;
- (void)resetAudioQueue;
- (void)setWaitingForFirstPlayCallback:(BOOL)arg0;
- (void)resetAudioQueueBufferArray;
- (id /* block */)getNextBufferBlock;
- (id /* block */)getUnitNextBufferBlock;
- (BOOL)waitingForFirstPlayCallback;
- (id)init;
- (void).cxx_destruct;
- (void)flush;
- (void)stop;
- (BOOL)isResetting;
- (BOOL)isPlaying;
- (void)setVolume:(float)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)setIsPlaying:(BOOL)arg0;
- (void)fillBuffer;
- (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })asbd;
- (void)setAsbd:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg0;
- (float)getVolume;
- (int)bufferCount;
- (struct OpaqueAudioQueue { } *)audioQueue;
- (void)setAudioQueue:(struct OpaqueAudioQueue { } *)arg0;

@end
