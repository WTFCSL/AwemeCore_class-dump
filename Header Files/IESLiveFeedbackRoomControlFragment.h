//
//     Generated by private class-dump
//

@class NSString, IESLivePublicScreenFixedCardItem, HTSLiveApi, HTSLiveFeedbackCard, IESLiveFeedbackCardLayoutProxy, NSTimer;

@interface IESLiveFeedbackRoomControlFragment : IESLiveRoomComponent <HTSLiveMessageSubscriber, IESLiveUserActions, HTSLiveGiftActions, IESLiveMessageInteractionModuleCommentAction, HTSLiveDiggAction, IESLiveFeedbackRoomControlRouter, IESLiveFeedbackAction, IESLiveFansGroupActions> {
    BOOL _isOverTime;
    BOOL _hadAction;
    HTSLiveApi *_api;
    HTSLiveFeedbackCard *_card;
    IESLivePublicScreenFixedCardItem *_cardItem;
    IESLiveFeedbackCardLayoutProxy *_feedbackCardLayoutProxy;
    NSTimer *_beforeTimer;
    NSTimer *_afterTimer;
    long long _fromTime;
    long long _toTime;
    long long _pcuValue;
}

@property (retain, nonatomic) HTSLiveApi *api;
@property (retain, nonatomic) HTSLiveFeedbackCard *card;
@property (retain, nonatomic) IESLivePublicScreenFixedCardItem *cardItem;
@property (retain, nonatomic) IESLiveFeedbackCardLayoutProxy *feedbackCardLayoutProxy;
@property (retain, nonatomic) NSTimer *beforeTimer;
@property (retain, nonatomic) NSTimer *afterTimer;
@property (nonatomic) long long fromTime;
@property (nonatomic) long long toTime;
@property (nonatomic) BOOL isOverTime;
@property (nonatomic) BOOL hadAction;
@property (nonatomic) long long pcuValue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)componentShouldActive:(id)arg0;

- (void)userActionWithType:(long long)arg0;
- (void)setFromTime:(long long)arg0;
- (long long)fromTime;
- (long long)toTime;
- (void)componentBindService;
- (void)componentUnmount;
- (void)remoteRoomDataReady:(id)arg0;
- (void)willSendComment:(id)arg0;
- (void)didSendGiftWithCost:(long long)arg0;
- (BOOL)showFeedbackCardBlockQuitRoom;
- (void)setToTime:(long long)arg0;
- (void)diggClicked:(BOOL)arg0 touchPoint:(struct CGPoint { double x0; double x1; })arg1 gapTime:(double)arg2;
- (void)onFeedbackStateChange:(long long)arg0;
- (void)setIsOverTime:(BOOL)arg0;
- (BOOL)isOverTime;
- (void)setCardItem:(id)arg0;
- (void)didReceiveHTSLiveFansclubMessage:(id)arg0;
- (void)p_registerFollowAction;
- (void)p_handleFeedBackCard:(id)arg0;
- (void)p_handleUserAction:(long long)arg0 from:(id)arg1;
- (void)p_handleFeedbackMessage:(id)arg0;
- (BOOL)p_hasActionWithType:(long long)arg0;
- (void)setPcuValue:(long long)arg0;
- (void)p_requestFeedbackData:(id)arg0;
- (long long)p_feedbackShowType:(id)arg0;
- (void)p_showRoomInFeedAndPreviewFeedbackCard:(id)arg0;
- (void)p_clearCurrentData;
- (long long)p_timeTypeWithData:(id)arg0;
- (void)p_showRoomFeedback:(id)arg0;
- (void)setBeforeTimer:(id)arg0;
- (BOOL)hadAction;
- (void)setAfterTimer:(id)arg0;
- (void)p_showRoomInPreviewFeedbackCard:(id)arg0;
- (void)p_showRoomInLiveFeedback:(id)arg0;
- (BOOL)p_isPassTimeLimitCheck;
- (BOOL)enableAnchorFeedBack;
- (void)showPublicScreenFeedBackCardWithShowInLive:(BOOL)arg0;
- (id)feedbackCardLayoutProxy;
- (void)p_increaseFeedBackFrequencyCount;
- (id)feedBackKeyID;
- (void)p_removeFeedbackFrequencyControl:(id)arg0;
- (void)setHadAction:(BOOL)arg0;
- (long long)pcuValue;
- (BOOL)isHitClientImpression;
- (void)p_removeAllExpiredFeedBackIDs;
- (void)p_updateFeedBackIDInKVStore:(id)arg0;
- (id)beforeTimer;
- (id)afterTimer;
- (void)setFeedbackCardLayoutProxy:(id)arg0;
- (void).cxx_destruct;
- (void)setCard:(id)arg0;
- (id)card;
- (void)messageReceived:(id)arg0;
- (id)cardItem;
- (id)api;
- (void)setApi:(id)arg0;

@end
