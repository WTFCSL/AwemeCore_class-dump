//
//     Generated by private class-dump
//

@class AWESidebarPanGestureRecognizer, NSString, AWESideBarTransitionContext, UIView, UIViewController;
@protocol AWESidebarTransitionProtocol, AWESideBarViewControllerProtocol;

@interface AWESidebarTransitionManager : NSObject <AWEPadUIAdaptionViewTransitionObserver, UIGestureRecognizerDelegate> {
    BOOL _sidebarAnimating;
    BOOL _hasHaptic;
    id<AWESidebarTransitionProtocol> _sidebarTransitionDelegate;
    UIViewController<AWESideBarViewControllerProtocol> *_sideBarViewController;
    long long _sideBarStatus;
    long long _leftSideBarOpenOperateMethod;
    AWESideBarTransitionContext *_currentContext;
    AWESidebarPanGestureRecognizer *_showPanGesture;
    AWESidebarPanGestureRecognizer *_hidePanGesture;
    UIView *_sideBarMenuView;
    double _sidebarMoveOffsetX;
    long long _frameChangeLogCount;
    UIView *_tabbarMaskView;
}

@property (retain, nonatomic) AWESideBarTransitionContext *currentContext;
@property (retain, nonatomic) AWESidebarPanGestureRecognizer *showPanGesture;
@property (retain, nonatomic) AWESidebarPanGestureRecognizer *hidePanGesture;
@property (retain, nonatomic) UIView *sideBarMenuView;
@property (nonatomic) double sidebarMoveOffsetX;
@property (retain, nonatomic) UIViewController<AWESideBarViewControllerProtocol> *sideBarViewController;
@property (nonatomic) long long sideBarStatus;
@property (nonatomic) BOOL sidebarAnimating;
@property (nonatomic) long long frameChangeLogCount;
@property (retain, nonatomic) UIView *tabbarMaskView;
@property (nonatomic) BOOL hasHaptic;
@property (weak, nonatomic) id<AWESidebarTransitionProtocol> sidebarTransitionDelegate;
@property (nonatomic) long long leftSideBarOpenOperateMethod;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)aAWEPadLeftSideBarAdapterClass;

- (void)awe_viewController:(id)arg0 willTransitionToSize:(struct CGSize { double x0; double x1; })arg1 transitionCoordinator:(id)arg2;
- (id)getTabBarController;
- (unsigned long long)directionForPan:(id)arg0;
- (void)dismissAnimation:(id)arg0;
- (double)leftSideBarWidth;
- (BOOL)awe_slidingScrollViewShouldScrollWithPan:(id)arg0;
- (long long)sideBarStatus;
- (id)aAWEPadLeftSideBarAdapter;
- (void)closeLeftSideBar:(BOOL)arg0 operateMethod:(long long)arg1;
- (void)setSidebarTransitionDelegate:(id)arg0;
- (void)openLeftSideBar:(BOOL)arg0 operateMethod:(long long)arg1;
- (double)rightSideHotEdge;
- (id)getLeftSideBarOpenOperateMethodTrackName;
- (BOOL)sideBarIsOpen;
- (id)showPanGesture;
- (id)hidePanGesture;
- (id)sideBarMenuView;
- (BOOL)sidebarAnimating;
- (id)sidebarTransitionDelegate;
- (void)handlePanGestureSideBarIsOpen:(BOOL)arg0 gestureRecognizer:(id)arg1;
- (void)setSidebarMoveOffsetX:(double)arg0;
- (void)setLeftSideBarOpenOperateMethod:(long long)arg0;
- (void)setSideBarStatus:(long long)arg0;
- (id)generateSideBarViewController;
- (void)showLeftSideBarViewController;
- (void)leftSideBarHaptic;
- (void)updateCurrentViewWithOriginX:(double)arg0;
- (double)sidebarMoveOffsetX;
- (void)leftSideBarAnimationWithOriginX:(double)arg0 duration:(double)arg1 showSideBar:(BOOL)arg2 isOpen:(BOOL)arg3 operateMethod:(long long)arg4;
- (void)track_leftSideBarStartIsOpen:(BOOL)arg0;
- (void)moniter_leftSideBarStartIsOpen:(BOOL)arg0 success:(BOOL)arg1 operateMethod:(long long)arg2;
- (void)__leftSideBarWithoutAnimationWithOriginX:(double)arg0 showSideBar:(BOOL)arg1 isOpen:(BOOL)arg2 operateMethod:(long long)arg3;
- (void)setSidebarAnimating:(BOOL)arg0;
- (void)hideLeftSideBarViewController;
- (void)handleShowSliderPanGesture:(id)arg0;
- (void)handleHideSliderPanGesture:(id)arg0;
- (void)_updateTabBarSnapshot;
- (long long)leftSideBarOpenOperateMethod;
- (void)setShowPanGesture:(id)arg0;
- (void)setHidePanGesture:(id)arg0;
- (void)setSideBarMenuView:(id)arg0;
- (long long)frameChangeLogCount;
- (void)setFrameChangeLogCount:(long long)arg0;
- (id)tabbarMaskView;
- (void)setTabbarMaskView:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void)setHasHaptic:(BOOL)arg0;
- (void).cxx_destruct;
- (id)currentContext;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)setCurrentContext:(id)arg0;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (BOOL)hasHaptic;
- (void)dealloc;
- (id)sideBarViewController;
- (void)setSideBarViewController:(id)arg0;

@end
