//
//     Generated by private class-dump
//

@class TTAccountUserEntity, NSString, TTAccountConfiguration, NSObject;
@protocol OS_dispatch_queue, TTAccountUIDelegate;

@interface TTAccount : NSObject {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _accountUserLock;
    BOOL _isLogin;
    int _accountCrashResolveSwitch;
    TTAccountUserEntity *_user;
    NSString *_multiSids;
    NSString *_multiSidsSec;
    NSString *_dTicket;
    NSString *_secUserId;
    id /* block */ _newAccountUIBlock;
    NSObject<OS_dispatch_queue> *_storeQueue;
    NSString *_installTime;
}

@property (class, retain, nonatomic) TTAccountConfiguration *accountConf;

@property (readonly, copy, nonatomic) NSString *installTime;
@property (weak, nonatomic) id<TTAccountUIDelegate> UIDelegate;
@property (readonly, copy, nonatomic) NSString *traceId;
@property (nonatomic) BOOL isLogin;
@property (retain, nonatomic) TTAccountUserEntity *user;
@property (copy, nonatomic) id /* block */ newAccountUIBlock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *storeQueue;
@property (copy, nonatomic) NSString *installTime;
@property (nonatomic) int accountCrashResolveSwitch;
@property (copy, nonatomic) NSString *multiSids;
@property (copy, nonatomic) NSString *multiSidsSec;
@property (copy, nonatomic) NSString *dTicket;
@property (copy, nonatomic) NSString *secUserId;

+ (id)commonRequestWithURL:(id)arg0 Method:(id)arg1 params:(id)arg2 extraGetParams:(id)arg3 completion:(id /* block */)arg4;
+ (id)commonRequestWithURL:(id)arg0 Method:(id)arg1 params:(id)arg2 extraGetParams:(id)arg3 headerField:(id)arg4 needHandlePictureVerify:(BOOL)arg5 completion:(id /* block */)arg6;
+ (id)commonRequestAutoParseUserInfoWithURL:(id)arg0 method:(id)arg1 params:(id)arg2 extraGetParams:(id)arg3 headerField:(id)arg4 needHandlePictureVerify:(BOOL)arg5 completion:(id /* block */)arg6;
+ (id)commonRequestAutoParseUserInfoWithURL:(id)arg0 method:(id)arg1 params:(id)arg2 extraGetParams:(id)arg3 completion:(id /* block */)arg4;
+ (void)addMulticastDelegate:(id)arg0;
+ (void)removeMulticastDelegate:(id)arg0;
+ (BOOL)isAPPFirstInstall;
+ (void)setAPPHasInstalled;
+ (BOOL)isSucceedInRequestingNewSessionLogin;
+ (void)setIsSucceedInRequestingNewSessionLogin:(BOOL)arg0;
+ (BOOL)isSuccceedInSynchronizingAccountUserStatus;
+ (void)setIsSucceedInSynchronizingAccountUserStatus:(BOOL)arg0;
+ (void)synchronizeAccountUserStatusByNetwork:(id /* block */)arg0 waitUntilDone:(BOOL)arg1;
+ (void)handleAccountUserNetworkSynchronization:(id /* block */)arg0 jsonData:(id)arg1 error:(id)arg2 originalURL:(id)arg3;
+ (void)addTokenToRequest:(id)arg0;
+ (void)cleanXttToken;
+ (id)currentXttToken;
+ (id)addXTokenGuardHeadersForRequest:(id)arg0;
+ (id)xTokenGuardHeadersForURL:(id)arg0 error:(id *)arg1;
+ (BOOL)isLoginInNSUserDefault;
+ (id)accountUserInNSUserDefault;
+ (id)getAccountUserInArchive;
+ (void)setAccountUserInNSUserDefault:(id)arg0;
+ (BOOL)__multiThreadSafeSupported__;
+ (void)setIsLoginInNSUserDefault:(BOOL)arg0;
+ (void)saveAccountUserInArchive:(id)arg0;
+ (id)__sharingKeyChainGroup__;
+ (id)currentAccountUserInDisk;
+ (void)configNewAccountUIBlock:(id /* block */)arg0;
+ (BOOL)newAccountUIIsActive;
+ (void)setAccountConf:(id)arg0;
+ (id)latestLocalDeviceLoginInfo;
+ (id)trustedDeviceOnekeyLoginWithModel:(id)arg0 completed:(id /* block */)arg1;
+ (id)canDeviceOnekeyLoginWithModel:(id)arg0 completed:(id /* block */)arg1;
+ (id)fetchHistoryLoginInfoWithDuplicateUid:(BOOL)arg0;
+ (id)trustedDeviceOnekeyLoginWithCompleted:(id /* block */)arg0;
+ (id)canDeviceOnekeyLoginWithCompleted:(id /* block */)arg0;
+ (id)trustedDeviceOnekeyLoginContinueWithTicket:(id)arg0 completed:(id /* block */)arg1;
+ (id)fetchDeviceLoginInfoWithType:(long long)arg0 timeRange:(long long)arg1 completetion:(id /* block */)arg2;
+ (BOOL)handlePassportError:(id)arg0 request:(id)arg1 response:(id)arg2 jsonObj:(id)arg3;
+ (id)requestNewSessionWithSessionKey:(id)arg0 installId:(id)arg1 completion:(id /* block */)arg2;
+ (id)accountConf;
+ (BOOL)setXTokenWithResponse:(id)arg0 responseError:(id)arg1 request:(id)arg2 sessionHasExpired:(BOOL)arg3;
+ (void)wapLoginSuccessRefreshToken;
+ (BOOL)setXTokenWithResponse:(id)arg0 responseError:(id)arg1 sessionHasExpired:(BOOL)arg2;
+ (void)handleResponseFilterSessionExpiredWithResponse:(id)arg0 sessionCheckedCallback:(id /* block */)arg1;
+ (id)cancelAccountWithType:(long long)arg0 token:(id)arg1 completion:(id /* block */)arg2;
+ (id)getTicketWithURL:(id)arg0 params:(id)arg1 completion:(id /* block */)arg2;
+ (id)resetPasswordWithURL:(id)arg0 params:(id)arg1 completion:(id /* block */)arg2;
+ (id)switchAccountToUserId:(id)arg0 SecUserId:(id)arg1 completion:(id /* block */)arg2;
+ (id)logoutAccountWithUserId:(id)arg0 SecUserId:(id)arg1 completion:(id /* block */)arg2;
+ (void)registerOneKeyLoginService:(id)arg0 appId:(id)arg1 appKey:(id)arg2 isTestChannel:(BOOL)arg3;
+ (void)getOneKeyLoginPhoneNumberCompleted:(id /* block */)arg0;
+ (void)oneKeyLoginWithCompleted:(id /* block */)arg0;
+ (void)oneKeyLoginOnlyWithExtraTrackInfo:(id)arg0 completed:(id /* block */)arg1;
+ (void)oneKeyLoginContinueWithSMSCodeKey:(id)arg0 completed:(id /* block */)arg1;
+ (void)oneKeyBindPhoneWithPassword:(id)arg0 unbind:(BOOL)arg1 completed:(id /* block */)arg2;
+ (void)oneKeyBindPhoneWithProfileKey:(id)arg0 completed:(id /* block */)arg1;
+ (id)cancelPostWithIdUri1:(id)arg0 idUri2:(id)arg1 applyUri:(id)arg2 ticket:(id)arg3 completion:(id /* block */)arg4;
+ (id)cancelPostWithIdUri1:(id)arg0 idUri2:(id)arg1 applyUri:(id)arg2 ticket:(id)arg3 completionNew:(id /* block */)arg4;
+ (id)cancelAccountWithType:(int)arg0 completion:(id /* block */)arg1;
+ (id)cancelIndexWithCompletion:(id /* block */)arg0;
+ (id)cancelCheckUserWithCompletion:(id /* block */)arg0;
+ (id)cancelCheckWithTicket:(id)arg0 extraInfo:(id)arg1 completion:(id /* block */)arg2;
+ (id)cancelConfirmWithValueTicket:(id)arg0 token:(id)arg1 cancelTicket:(id)arg2 extraInfo:(id)arg3 completion:(id /* block */)arg4;
+ (id)cancelPWDAuthorizeWithAccount:(id)arg0 password:(id)arg1 accountType:(long long)arg2 extraInfo:(id)arg3 completion:(id /* block */)arg4;
+ (id)cancelAuthAuthorizeWithParams:(id)arg0 completion:(id /* block */)arg1;
+ (id)loginWithAccount:(id)arg0 password:(id)arg1 captcha:(id)arg2 accountType:(long long)arg3 completion:(id /* block */)arg4;
+ (id)sendSMSCodeWithPhone:(id)arg0 captcha:(id)arg1 SMSCodeType:(long long)arg2 unbindExist:(BOOL)arg3 completion:(id /* block */)arg4;
+ (id)sendSMSCodeWithPhone:(id)arg0 captcha:(id)arg1 SMSCodeType:(long long)arg2 extraInfo:(id)arg3 completion:(id /* block */)arg4;
+ (id)sendSMSCodeWithPhone:(id)arg0 oldMobile:(id)arg1 captcha:(id)arg2 SMSCodeType:(long long)arg3 unbindExist:(BOOL)arg4 completion:(id /* block */)arg5;
+ (id)requestCheckSMSCodeWithMobile:(id)arg0 SMSCode:(id)arg1 codeType:(long long)arg2 completion:(id /* block */)arg3;
+ (id)validateSMSCode:(id)arg0 SMSCodeType:(long long)arg1 captcha:(id)arg2 needTicket:(int)arg3 scene:(int)arg4 completion:(id /* block */)arg5;
+ (id)requestResetPasswordByTicketWithPassword:(id)arg0 ticket:(id)arg1 completion:(id /* block */)arg2;
+ (id)setPasswordWithPassword:(id)arg0 captcha:(id)arg1 completion:(id /* block */)arg2;
+ (id)resetPasswordWithPhone:(id)arg0 SMSCode:(id)arg1 password:(id)arg2 captcha:(id)arg3 completionWithJosn:(id /* block */)arg4;
+ (id)modifyPasswordWithNewPassword:(id)arg0 SMSCode:(id)arg1 captcha:(id)arg2 completion:(id /* block */)arg3;
+ (id)registerWithPhone:(id)arg0 SMSCode:(id)arg1 password:(id)arg2 captcha:(id)arg3 completion:(id /* block */)arg4;
+ (id)quickLoginWithPhone:(id)arg0 SMSCode:(id)arg1 captcha:(id)arg2 jsonObjCompletion:(id /* block */)arg3;
+ (id)quickLoginOnlyWithPhone:(id)arg0 SMSCode:(id)arg1 captcha:(id)arg2 jsonObjCompletion:(id /* block */)arg3;
+ (id)quickLoginOnlyContinueWithPhone:(id)arg0 smsCodeKey:(id)arg1 captcha:(id)arg2 jsonObjCompletion:(id /* block */)arg3;
+ (id)loginWithPhone:(id)arg0 token:(id)arg1 captcha:(id)arg2 completion:(id /* block */)arg3;
+ (id)bindPhoneWithPhone:(id)arg0 SMSCode:(id)arg1 password:(id)arg2 captcha:(id)arg3 unbind:(BOOL)arg4 completion:(id /* block */)arg5;
+ (id)changePhoneNumber:(id)arg0 SMSCode:(id)arg1 captcha:(id)arg2 completion:(id /* block */)arg3;
+ (id)changePhoneNumber:(id)arg0 ticket:(id)arg1 SMSCode:(id)arg2 captcha:(id)arg3 completion:(id /* block */)arg4;
+ (id)changePhoneNumber:(id)arg0 ticket:(id)arg1 SMSCode:(id)arg2 captcha:(id)arg3 customParams:(id)arg4 completion:(id /* block */)arg5;
+ (id)requesetBindAndLogingWithPhonenumber:(id)arg0 SMSCode:(id)arg1 profileKey:(id)arg2 SMSCodeType:(long long)arg3 captcha:(id)arg4 completion:(id /* block */)arg5;
+ (id)checkHasSetPasswordWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)refreshCaptchaWithCompletion:(id /* block */)arg0;
+ (id)getUserInfoWithScene:(long long)arg0 completion:(id /* block */)arg1;
+ (id)getUserAuditInfoWithCompletion:(id /* block */)arg0;
+ (id)getUserAuditInfoIgnoreDispatchWithCompletion:(id /* block */)arg0;
+ (id)startUploadUserBgImage:(id)arg0 progress:(id *)arg1 completion:(id /* block */)arg2;
+ (id)checkUsername:(id)arg0 completion:(id /* block */)arg1;
+ (id)updateUserProfileWithDict:(id)arg0 completion:(id /* block */)arg1;
+ (id)updateUserExtraProfileWithDict:(id)arg0 completion:(id /* block */)arg1;
+ (id)getThirdpartUserInfoWithDict:(id)arg0 Completion:(id /* block */)arg1;
+ (id)logoutInScene:(long long)arg0 completion:(id /* block */)arg1;
+ (id)logoutWithScene:(long long)arg0 extraInfo:(id)arg1 completion:(id /* block */)arg2;
+ (id)logoutPlatform:(id)arg0 completion:(id /* block */)arg1;
+ (id)switchAccountToUserId:(id)arg0 completion:(id /* block */)arg1;
+ (id)switchAccountToSecUserId:(id)arg0 completion:(id /* block */)arg1;
+ (id)logoutOtherAccountsWithCompletion:(id /* block */)arg0;
+ (id)logoutAccountWithUserId:(id)arg0 completion:(id /* block */)arg1;
+ (id)logoutAccountWithSecUserId:(id)arg0 completion:(id /* block */)arg1;
+ (id)requestAuthSwitchTicketWithCipher:(id)arg0 completion:(id /* block */)arg1;
+ (id)registerWithEmail:(id)arg0 emailCode:(id)arg1 password:(id)arg2 captcha:(id)arg3 completion:(id /* block */)arg4;
+ (id)registerV2WithEmail:(id)arg0 emailCode:(id)arg1 password:(id)arg2 captcha:(id)arg3 recaptchaToken:(id)arg4 extra:(id)arg5 completion:(id /* block */)arg6;
+ (id)getEmailCodeWithEmail:(id)arg0 emailCodeType:(long long)arg1 password:(id)arg2 jumpUrl:(id)arg3 captcha:(id)arg4 completion:(id /* block */)arg5;
+ (id)validateRegisterWithEmail:(id)arg0 emailCode:(id)arg1 emailCodeType:(long long)arg2 captchaString:(id)arg3 completion:(id /* block */)arg4;
+ (id)registerWithEmail:(id)arg0 emailCode:(id)arg1 emailCodeType:(long long)arg2 captchaString:(id)arg3 completion:(id /* block */)arg4;
+ (id)bindWithEmail:(id)arg0 emailCode:(id)arg1 emailCodeType:(long long)arg2 captchaString:(id)arg3 completion:(id /* block */)arg4;
+ (id)requestCheckEmailCodeWithEmail:(id)arg0 emailCode:(id)arg1 emailCodeType:(long long)arg2 completion:(id /* block */)arg3;
+ (id)requestEmailResetPasswordByTicketWithPassword:(id)arg0 ticket:(id)arg1 completion:(id /* block */)arg2;
+ (id)requestBindEmail:(id)arg0 password:(id)arg1 completion:(id /* block */)arg2;
+ (id)requestVerifyEmailWithCode:(id)arg0 emailCodeType:(long long)arg1 completion:(id /* block */)arg2;
+ (id)cancelLogoutWithToken:(id)arg0 completion:(id /* block */)arg1;
+ (id)fetchLatestLoginInfoWithcompletion:(id /* block */)arg0;
+ (id)checkPhoneIsUseableWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)fetchAvailableWaysWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)verifyAccountWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)getSMSCodeWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)getSMSCodeWithModel:(id)arg0 jsonCompletion:(id /* block */)arg1;
+ (id)changeUserPhoneWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)generateTicketByPhoneWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)loginContinueWithMobile:(id)arg0 ticket:(id)arg1 completion:(id /* block */)arg2;
+ (id)userDeviceLoginWithCompleted:(id /* block */)arg0;
+ (id)bindVistorAccountWithCompleted:(id /* block */)arg0;
+ (id)checkMobileCodeWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (id)checkEmailRegistedWithEmail:(id)arg0 captcha:(id)arg1 completion:(id /* block */)arg2;
+ (id)startUploadImage:(id)arg0 progress:(id *)arg1 completion:(id /* block */)arg2;
+ (id)startCheckCanSetUserType:(long long)arg0 completion:(id /* block */)arg1;
+ (id)startCheckUserDefaultInfoWithScene:(long long)arg0 completion:(id /* block */)arg1;
+ (void)addPassportErrorHandler:(Class)arg0;
+ (id)chainLoginUserInfoModelWithProviderAppId:(id)arg0;
+ (void)getChainLoginUserInfoWithProviderAppId:(id)arg0 completion:(id /* block */)arg1;
+ (void)safeChainLoginWithProviderAppId:(id)arg0 completion:(id /* block */)arg1;
+ (void)safeChainLoginWithSecUserId:(id)arg0 completion:(id /* block */)arg1;
+ (void)clearChainLoginInfo;
+ (void)getAvatarInfoWithProviderAppId:(id)arg0 completion:(id /* block */)arg1;
+ (void)setChainLoginSharedKeyChainAccessGroup:(id)arg0;
+ (void)saveCustomUserInfoForChainLogin:(id)arg0;
+ (id)chainLoginUserInfoWithProviderAppId:(id)arg0;
+ (void)saveUserInfoWithModelForChainLogin:(id)arg0;
+ (void)getChainLoginUserInfoModelWithProviderAppId:(id)arg0 completion:(id /* block */)arg1;
+ (void)handleUserInfoForChainLoginIfNeeded;
+ (BOOL)canHandleVerifyWithVerifyDecision:(id)arg0;
+ (void)handleVerifyWithVerifyDecision:(id)arg0 completion:(id /* block */)arg1;
+ (void)setTimeoutInterval:(double)arg0;
+ (void)load;
+ (id)sharedAccount;

- (void)setSecUserId:(id)arg0;
- (id)passportSDKVersion;
- (id)secUserId;
- (id)installTime;
- (void)didStartUp;
- (void)setIsLogin:(BOOL)arg0;
- (void)startSyncRemoteLoginStatus;
- (void)trackSdkSessionLaunch;
- (void)wapLoginSuccessRefreshTokenWithcompletion;
- (void)ttNetServerConfigDidChange:(id)arg0;
- (void)autoSynchronizeLoginStatusIfNeeded;
- (void)autoSynchronizeAccountUserInfoByTimer;
- (void)autoSynchronizeAccountUserInfo;
- (void)displayToastInView:(id)arg0 text:(id)arg1 type:(long long)arg2;
- (void)dismissToastInView:(id)arg0;
- (void)__registerNotifications__;
- (void)__loadAccountUserFromDisk__;
- (void)__unregisterNotifications__;
- (void)saveAccountUser;
- (void)setAccountCrashResolveSwitch:(int)arg0;
- (void)setNewAccountUIBlock:(id /* block */)arg0;
- (id /* block */)newAccountUIBlock;
- (void)loginAuthorizedPlatform:(id)arg0;
- (void)logoutAuthorizedPlatform:(id)arg0;
- (id)connectedAccountForPlatform:(id)arg0;
- (id)userIdString;
- (void)cleanLoginStatusAndUserInfo;
- (void)openAccountCrashResolveNotice:(id)arg0;
- (id)multiSids;
- (id)multiSidsSec;
- (void)setInstallTime:(id)arg0;
- (int)accountCrashResolveSwitch;
- (void)setMultiSids:(id)arg0;
- (void)setMultiSidsSec:(id)arg0;
- (void)setDTicket:(id)arg0;
- (id)dTicket;
- (id)odinUserType;
- (void)startTraceWithScene:(id)arg0;
- (void)stopTraceWithScene:(id)arg0;
- (void)setUser:(id)arg0;
- (id)init;
- (void)persistence;
- (id)user;
- (void)applicationWillEnterForeground:(id)arg0;
- (void).cxx_destruct;
- (id)traceId;
- (void)updateSettings:(id)arg0;
- (id)sessionKey;
- (void)setSessionKey:(id)arg0;
- (void)start;
- (void)setStoreQueue:(id)arg0;
- (void)dealloc;
- (id)service;
- (id)storeQueue;
- (id)sdkVersion;
- (void)setUIDelegate:(id)arg0;
- (id)UIDelegate;
- (BOOL)isLogin;

@end
