//
//     Generated by private class-dump
//

@class NSString;

@interface HMDOOMAppState : NSObject {
    BOOL _isNewData;
    double _enterForegoundTime;
}

@property (nonatomic) BOOL isNewData;
@property (nonatomic) BOOL isAppEnterBackground;
@property (nonatomic) BOOL isAppQuitByExit;
@property (nonatomic) BOOL isAppQuitByUser;
@property (nonatomic) BOOL isMonitorStopped;
@property (nonatomic) unsigned long long memoryPressure;
@property (nonatomic) double memoryPressureTimestamp;
@property (nonatomic) BOOL isCrash;
@property (nonatomic) BOOL isWatchDog;
@property (nonatomic) double enterForegoundTime;
@property (nonatomic) double enterBackgoundTime;
@property (nonatomic) double latestTime;
@property (copy, nonatomic) NSString *internalSessionID;
@property (nonatomic) double appStartTime;
@property (nonatomic) BOOL isDebug;
@property (nonatomic) BOOL isXCTest;
@property (copy, nonatomic) NSString *appVersion;
@property (copy, nonatomic) NSString *buildVersion;
@property (copy, nonatomic) NSString *sysVersion;
@property (copy, nonatomic) NSString *libraryPath;
@property (nonatomic) unsigned long long exception_main_address;
@property (nonatomic) BOOL isSlardarMallocInuse;
@property (nonatomic) unsigned long long slardarMallocUsageSize;
@property (nonatomic) struct { double x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; } memoryInfo;
@property (nonatomic) int appContinuousQuitTimes;
@property (copy, nonatomic) NSString *thermalState;
@property (nonatomic) BOOL isWeakWatchDog;
@property (nonatomic) BOOL isCPUException;
@property (nonatomic) double lastSenceChangedTime;

+ (id)infoPath;
+ (id)sharedInstance;

- (int)appContinuousQuitTimes;
- (unsigned long long)memoryPressure;
- (BOOL)isCPUException;
- (BOOL)isAppEnterBackground;
- (void)setIsAppQuitByExit:(BOOL)arg0;
- (void)setIsAppQuitByUser:(BOOL)arg0;
- (void)setIsAppEnterBackground:(BOOL)arg0;
- (void)setIsMonitorStopped:(BOOL)arg0;
- (void)setMemoryPressure:(unsigned long long)arg0;
- (void)setMemoryPressureTimestamp:(double)arg0;
- (void)setIsWatchDog:(BOOL)arg0;
- (void)setIsCrash:(BOOL)arg0;
- (void)setIsWeakWatchDog:(BOOL)arg0;
- (void)setEnterForegoundTime:(double)arg0;
- (void)setEnterBackgoundTime:(double)arg0;
- (void)setLatestTime:(double)arg0;
- (void)setInternalSessionID:(id)arg0;
- (void)setAppStartTime:(double)arg0;
- (void)setIsXCTest:(BOOL)arg0;
- (void)setSysVersion:(id)arg0;
- (void)setIsCPUException:(BOOL)arg0;
- (void)setMemoryInfo:(struct { double x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; })arg0;
- (void)setLastSenceChangedTime:(double)arg0;
- (double)lastSenceChangedTime;
- (void)setException_main_address:(unsigned long long)arg0;
- (void)update:(id /* block */)arg0 msync:(BOOL)arg1;
- (void)setIsSlardarMallocInuse:(BOOL)arg0;
- (void)setSlardarMallocUsageSize:(unsigned long long)arg0;
- (BOOL)isNewData;
- (id)internalSessionID;
- (double)latestTime;
- (void)setAppContinuousQuitTimes:(int)arg0;
- (BOOL)isWatchDog;
- (BOOL)isAppQuitByUser;
- (BOOL)isWeakWatchDog;
- (BOOL)isAppQuitByExit;
- (id)sysVersion;
- (BOOL)isMonitorStopped;
- (void)setIsNewData:(BOOL)arg0;
- (double)enterForgoundTime;
- (double)memoryPressureTimestamp;
- (void)setEnterForegroundTime:(double)arg0;
- (double)enterForegoundTime;
- (double)enterBackgoundTime;
- (double)appStartTime;
- (unsigned long long)exception_main_address;
- (BOOL)isSlardarMallocInuse;
- (unsigned long long)slardarMallocUsageSize;
- (void)update:(id /* block */)arg0;
- (struct { double x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; })memoryInfo;
- (void)setBuildVersion:(id)arg0;
- (id)buildVersion;
- (void)setAppVersion:(id)arg0;
- (id)libraryPath;
- (id)appVersion;
- (BOOL)isCrash;
- (id)thermalState;
- (BOOL)isDebug;
- (void)setThermalState:(id)arg0;
- (void)setLibraryPath:(id)arg0;
- (void)setIsDebug:(BOOL)arg0;
- (BOOL)isXCTest;

@end
