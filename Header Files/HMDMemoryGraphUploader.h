//
//     Generated by private class-dump
//

@class NSString, NSObject;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface HMDMemoryGraphUploader : NSObject <HMDURLProvider, HMDInspectorDiskSpaceDistribution> {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _fileLock;
    NSObject<OS_dispatch_queue> *_uploadQueue;
    NSObject<OS_dispatch_semaphore> *_uploadSemaphore;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *uploadQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *uploadSemaphore;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)removableFileDirectoryPath;
+ (void)cleanupIdentifier:(id)arg0;
+ (id)memoryGraphProcessingPath;
+ (id)memoryGraphPreparedPath;
+ (id)checkEnvParamsWithIdentifier:(id)arg0;
+ (id)memoryGraphRootPath;

- (id)URLHostProviderConfigHosts:(id)arg0;
- (id)URLHostProviderInjectedHosts:(id)arg0;
- (id)URLHostProviderDefaultHosts:(id)arg0;
- (void)setUploadSemaphore:(id)arg0;
- (id)uploadSemaphore;
- (BOOL)removeFileImmediately:(id)arg0;
- (id)URLPathProviderURLPath:(id)arg0;
- (void)uploadPreparedFiles;
- (id)zipFileCounterDic;
- (void)uploadMemoryGraphIfNeeded;
- (void)prepareOnProcessingDirectory;
- (void)cleanPreparedFiles;
- (BOOL)safeCreateZipFileAtPath:(id)arg0 withContentsOfDirectory:(id)arg1;
- (id)fetchPendingIdentifiers;
- (BOOL)deleteZipFileIfNeedWithIdentifier:(id)arg0;
- (void)cleanCounterWithIdentifier:(id)arg0;
- (void)internal_uploadIdentifier:(id)arg0 activateManner:(id)arg1 finishBlock:(id /* block */)arg2;
- (void)checkServerStateWithPrepareCount:(unsigned long long)arg0 activateManner:(id)arg1 finishBlock:(id /* block */)arg2;
- (void)increaseCounterWithIdentifier:(id)arg0;
- (void)asyncCheckAndUpload;
- (void)uploadIdentifier:(id)arg0 activateManner:(id)arg1 needCheckServer:(BOOL)arg2 finishBlock:(id /* block */)arg3;
- (id)init;
- (void).cxx_destruct;
- (id)uploadQueue;
- (void)setUploadQueue:(id)arg0;
- (BOOL)shouldEncrypt;

@end
