//
//     Generated by private class-dump
//

@interface SVGKPointsAndPathsParser : NSObject

+ (void)readWhitespace:(id)arg0;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readMovetoDrawto:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readMoveto:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readMovetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct CGPoint { double x0; double x1; })readCoordinatePair:(id)arg0;
+ (void)readCommaAndWhitespace:(id)arg0;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readLinetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (void)readCoordinate:(id)arg0 intoFloat:(double *)arg1;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readQuadraticCurvetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readQuadraticCurvetoArgument:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothQuadraticCurvetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothQuadraticCurvetoArgument:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readCurvetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readCurvetoArgument:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothCurvetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3 isRelative:(BOOL)arg4;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothCurvetoArgument:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readVerticalLinetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readHorizontalLinetoArgumentSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct CGPoint { double x0; double x1; })readEllipticalArcArgumentsSequence:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })startingCurve;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readMovetoDrawtoCommandGroups:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readLinetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readQuadraticCurvetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothQuadraticCurvetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readCurvetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readSmoothCurvetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 withPrevCurve:(struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })arg3 isRelative:(BOOL)arg4;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readVerticalLinetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readHorizontalLinetoCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readCloseCommand:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2;
+ (struct SVGCurve { unsigned long long x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })readEllipticalArcArguments:(id)arg0 path:(struct CGPath { } *)arg1 relativeTo:(struct CGPoint { double x0; double x1; })arg2 isRelative:(BOOL)arg3;

@end
