//
//     Generated by private class-dump
//

@class IESLiveMultiKTVIndicatorViewModel, NSTimer, NSString, IESLiveMixKTVApi, HTSEventContext, NSDictionary, IESLiveKTVChorusStore, IESLiveKTVCommonStore, NSMutableArray, IESLiveKTVMultiChorusStore, NSMutableSet, IESLiveComponentContext;
@protocol IESLiveCompoundSubscription, IESLiveRoomService;

@interface IESLiveMixKTVStore : NSObject <IESLiveKTVActions, IESLiveKTVWantListenListActions, IESLiveKTVApplySingListActions, IESLiveKTVSongListActions, IESLiveKTVControlActions, IESLiveKTVServiceActions, IESLiveKTVChorusActions, HTSLiveMessageSubscriber, IESLiveKTVSEIActions, IESLiveKTVSettingActions> {
    BOOL _canApplySing;
    BOOL _canMultiChorusSing;
    BOOL _isStarted;
    BOOL _isOpenRequesting;
    BOOL _needShowIndicator;
    BOOL _hasSelfApply;
    BOOL _hasShowWantListenToast;
    BOOL _isCloseRequesting;
    NSString *_overType;
    NSMutableArray *_audienceAlreadyReadList;
    IESLiveKTVCommonStore *_commonStore;
    IESLiveKTVChorusStore *_chorusStore;
    IESLiveKTVMultiChorusStore *_multiChorusStore;
    id<IESLiveRoomService> _room;
    HTSEventContext *_trackContext;
    IESLiveComponentContext *_componentContext;
    double _startMixKTVTime;
    NSDictionary *_ktvTempDatas;
    long long _listenCount;
    long long _applyCount;
    NSMutableArray *_waitCheckMusicArray;
    IESLiveMixKTVApi *_api;
    IESLiveMultiKTVIndicatorViewModel *_indicatorViewModel;
    id<IESLiveCompoundSubscription> _runningDispossable;
    NSMutableSet *_multiChorusCountSet;
    NSTimer *_checkTimer;
}

@property (nonatomic) BOOL canApplySing;
@property (nonatomic) BOOL canMultiChorusSing;
@property (nonatomic) BOOL isStarted;
@property (nonatomic) BOOL isOpenRequesting;
@property (nonatomic) BOOL needShowIndicator;
@property (nonatomic) double startMixKTVTime;
@property (retain, nonatomic) NSDictionary *ktvTempDatas;
@property (nonatomic) long long listenCount;
@property (nonatomic) long long applyCount;
@property (nonatomic) BOOL hasShowWantListenToast;
@property (nonatomic) BOOL isCloseRequesting;
@property (retain, nonatomic) NSMutableArray *waitCheckMusicArray;
@property (retain, nonatomic) IESLiveKTVCommonStore *commonStore;
@property (retain, nonatomic) IESLiveKTVChorusStore *chorusStore;
@property (retain, nonatomic) IESLiveKTVMultiChorusStore *multiChorusStore;
@property (retain, nonatomic) IESLiveMixKTVApi *api;
@property (retain, nonatomic) IESLiveMultiKTVIndicatorViewModel *indicatorViewModel;
@property (retain, nonatomic) id<IESLiveCompoundSubscription> runningDispossable;
@property (retain, nonatomic) NSMutableSet *multiChorusCountSet;
@property (retain, nonatomic) NSTimer *checkTimer;
@property (nonatomic) BOOL hasSelfApply;
@property (retain, nonatomic) NSString *overType;
@property (retain, nonatomic) NSMutableArray *audienceAlreadyReadList;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)componentContext;
- (void)setComponentContext:(id)arg0;
- (void)didSetAttachingDIContext;
- (id)checkTimer;
- (void)setCheckTimer:(id)arg0;
- (id)musicManager;
- (id)initWithRoom:(id)arg0 trackContext:(id)arg1 componentContext:(id)arg2;
- (BOOL)isSinging;
- (BOOL)canMultiChorusSing;
- (void)willChorusStart:(id)arg0;
- (void)didChorusStarted:(id)arg0;
- (void)didChorusEnd:(id)arg0;
- (id)overType;
- (void)setOverType:(id)arg0;
- (void)togglePlayAction;
- (void)nextSongAction;
- (void)toggleOrigialSingToType:(unsigned long long)arg0;
- (void)toggleShowLyricsAction;
- (void)toggleShowLyricsAction:(BOOL)arg0 showToast:(BOOL)arg1;
- (void)toggleScoreMode;
- (id)remotePlayingMusicID;
- (id)midiStore;
- (void)addMuiscModel:(id)arg0 source:(id)arg1 completion:(id /* block */)arg2;
- (void)goTopActionWithMusicModel:(id)arg0;
- (void)removeMusicModel:(id)arg0 successToast:(id)arg1 completion:(id /* block */)arg2;
- (void)favoriteMusicModel:(id)arg0 cell:(id)arg1 completion:(id /* block */)arg2;
- (void)updateMusicModel:(id)arg0 isPause:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)addAllMusicModel:(id)arg0 source:(id)arg1 addCompletion:(id /* block */)arg2;
- (BOOL)isScoreMode;
- (id)currentPlayKTVMusic;
- (BOOL)canApplySing;
- (void)agreeApply:(id)arg0 isMultiChorusApply:(BOOL)arg1 withCompletion:(id /* block */)arg2;
- (void)cancelApply:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)fetchApplyListWithCursor:(id)arg0 isMultiChorusApply:(BOOL)arg1 withCompletion:(id /* block */)arg2;
- (void)acceptListen:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)fetchWantListenListWithCursor:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)wantListenMusicModel:(id)arg0 source:(id)arg1 complteion:(id /* block */)arg2;
- (void)willStartPlayMusicWithMusicID:(id)arg0 afterTime:(long long)arg1;
- (void)didStopPlayMusicWithMusicID:(id)arg0 finished:(BOOL)arg1;
- (void)didKTVOrderListChanged;
- (void)didKTVIMOrderListChanged;
- (void)updateKTVSettingWithType:(unsigned long long)arg0 needReport:(BOOL)arg1;
- (void)setApplyCount:(long long)arg0;
- (long long)applyCount;
- (void)setCommonStore:(id)arg0;
- (id)commonStore;
- (void)addSongSuccessWithModel:(id)arg0 afterFollow:(BOOL)arg1 inSongWaitingList:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)handleKTVSEIModel:(id)arg0;
- (void)handlerScoreSEIModel:(id)arg0;
- (id)audienceAlreadyReadList;
- (void)setAudienceAlreadyReadList:(id)arg0;
- (id)indicatorViewModel;
- (void)getMixKTVComponentSettingWithCompletion:(id /* block */)arg0;
- (void)cancelSelfApply;
- (id)chorusStore;
- (void)enterMixKTVFrom:(id)arg0 needReport:(BOOL)arg1 canApplySing:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)startAudienceMixKTVWithApplySing:(BOOL)arg0 canMultiChorusSing:(BOOL)arg1;
- (void)trackEndMixKTVDurationIsUser:(BOOL)arg0;
- (void)exitMixKTVMode;
- (void)exitMixKTVIsAuto:(BOOL)arg0 withCompletion:(id /* block */)arg1;
- (void)closeAudienceMixKTV;
- (BOOL)hasSelfApply;
- (BOOL)isOpenRequesting;
- (void)setHasSelfApply:(BOOL)arg0;
- (BOOL)needShowIndicator;
- (void)setChorusStore:(id)arg0;
- (void)setIsOpenRequesting:(BOOL)arg0;
- (void)setStartMixKTVTime:(double)arg0;
- (void)startMixKTVWithApplySing:(BOOL)arg0 canMultiChorusSing:(BOOL)arg1 enterFrom:(id)arg2;
- (void)setCanApplySing:(BOOL)arg0;
- (void)setCanMultiChorusSing:(BOOL)arg0;
- (void)startMixKTVWithSource:(id)arg0;
- (void)startMixAnchorPing;
- (void)setIndicatorViewModel:(id)arg0;
- (void)addMixDispossable;
- (id)multiChorusStore;
- (void)updateMultiChorusCountSet;
- (id)runningDispossable;
- (void)setMultiChorusStore:(id)arg0;
- (BOOL)isCloseRequesting;
- (void)setIsCloseRequesting:(BOOL)arg0;
- (void)setNeedShowIndicator:(BOOL)arg0;
- (void)setKtvTempDatas:(id)arg0;
- (id)ktvTempDatas;
- (void)addAllSongList:(id)arg0 source:(id)arg1 addCompletion:(id /* block */)arg2;
- (id)multiChorusCountSet;
- (void)setMultiChorusCountSet:(id)arg0;
- (void)trackAcceptApplyWithModel:(id)arg0 isMultiChorusApply:(BOOL)arg1 isFull:(BOOL)arg2;
- (void)trackAcceptApplyPopClickWithType:(id)arg0;
- (void)trackConnectionPassWithModel:(id)arg0 isMultiChorusApply:(BOOL)arg1;
- (void)trackAcceptApplyPopShow;
- (void)addSongPrepareApplyWithCompletion:(id /* block */)arg0;
- (void)trackAddSongPreApply;
- (id)waitCheckMusicArray;
- (void)refreshAddMusic;
- (void)p_ktvOrderListChange;
- (void)setListenCount:(long long)arg0;
- (BOOL)hasShowWantListenToast;
- (void)setHasShowWantListenToast:(BOOL)arg0;
- (double)startMixKTVTime;
- (void)setWaitCheckMusicArray:(id)arg0;
- (BOOL)isInteractCanApplySing;
- (long long)listenCount;
- (void)setRunningDispossable:(id)arg0;
- (BOOL)isStarted;
- (void).cxx_destruct;
- (id)monitor;
- (unsigned long long)state;
- (void)dealloc;
- (id)player;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)messageReceived:(id)arg0;
- (id)api;
- (void)setIsStarted:(BOOL)arg0;
- (void)setApi:(id)arg0;

@end
