//
//     Generated by private class-dump
//

@class AWELivePreStreamContext, AWEAwemeModel, NSString, NSError, AWELivePreStreamLayoutMachine, IESLiveStreamPlayerModel, IESLiveLinkmicRoomEnterTracker, IESLiveBackgroundView, NSTimer, NSMutableDictionary, IESLiveFeedAudioView, NSArray, IESLiveGCDTimer, IESLiveNewPlayerFactory, IESLiveSmoothSwitchResolutionController, IESLiveBigPartyPreStreamAdapterWrapper, UIView, IESLiveLinkMicSEIParserResult, IESLiveKTVPreStreamController, HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality, IESLiveExplainBarInfoView, UIImageView, IESLiveBigPartyPreStreamController, IESLiveExplainWindowInfoView, IESLivePlayerAudioLoudness, IESLiveInteractiveSEIParser, NSNumber;
@protocol IESLivePaidStreamProvider, IESLiveInteractionAsyncResourceLoader, IESLivePlayerProtocol, IESLiveWifiToCellularManagerInterface;

@interface AWELivePreStreamPlayer : NSObject <IESLivePlayerControllerDelegate, IESLiveBigPartyPreStreamDelegate, IESLiveBigPartyPreStreamDataSource, AFDMuteAwemeMessage, AWELivePreStreamMessageSubscriber, IESLiveStrategyEventDispatcherObserver, IESLiveWifiToCellularServiceAction, IESLiveStreamUnifyLayoutPlayer, IESLiveInteractionAsyncResourceLoading, AWELiveStreamPlayerDelegate, IESLivePreStreamPlayerProvider> {
    BOOL _isNeedUpdateMultiLinkerLayout;
    BOOL _disableMuteOperation;
    BOOL isViceHidden;
    BOOL shouldHasViceView;
    BOOL isGameViceViewExist;
    BOOL _didEndedLive;
    BOOL _enableCheckSEISourceAndAppData;
    BOOL _isIntimateChatOn;
    BOOL _shouldMuted;
    BOOL _shouldReportAudioFrame;
    BOOL _supportPictureInPictureMode;
    BOOL _didStartFromHighlight;
    BOOL _didSeekTime;
    BOOL _isPKGoingOn;
    BOOL _isMultiLinkerGoingOn;
    BOOL _didDealVSTimeFormat;
    BOOL _needRecordProcess;
    BOOL _isShowingViceMsg;
    BOOL _isPrepareStreamData;
    id<IESLiveInteractionAsyncResourceLoader> _asyncResourceLoader;
    double viceViewRightOffSet;
    NSArray *_multiLinkerGridRatioFrames;
    unsigned long long preAlignMode;
    long long preScaleType;
    IESLivePlayerAudioLoudness *_sourceLoudness;
    AWEAwemeModel *_model;
    id /* block */ _tipDistanceChangeAction;
    id /* block */ _updateInteractListAction;
    id /* block */ _timateChatChangeAction;
    id /* block */ _playerStopAction;
    id /* block */ _playLoadStateChangeAction;
    id /* block */ _playbackStateChangeAction;
    id /* block */ _receiveErrorAction;
    id /* block */ _bigPartyShowAction;
    id /* block */ _bigPartySEIReceivedAction;
    id /* block */ _openAudioBlock;
    id /* block */ _processAudioBlock;
    id /* block */ _onRenderAudioFrameBlock;
    id /* block */ _landscapePlayerFrameBlock;
    id<IESLivePaidStreamProvider> _paidStream;
    id /* block */ _reportBlock;
    id /* block */ _seiReceiveAction;
    id /* block */ _startPlayBlock;
    id /* block */ _resumePlayBlock;
    id /* block */ _frozenPlayBlock;
    NSString *_resolutionType;
    id<IESLivePlayerProtocol> _playerController;
    IESLiveFeedAudioView *_audioAnimationView;
    NSString *_referString;
    NSNumber *_preferScaleType;
    AWELivePreStreamContext *_pageContext;
    double _currentWatchTime;
    NSString *_strategySDKKey;
    UIView *_parentContainer;
    UIView *_viceView;
    UIView *_belowContainer;
    UIView *_aboveContainer;
    IESLiveInteractiveSEIParser *_seiParser;
    IESLiveBigPartyPreStreamController *_bigPartyController;
    IESLiveBigPartyPreStreamAdapterWrapper *_bigPartyPreStreamAdapter;
    IESLiveStreamPlayerModel *_streamPlayerModel;
    IESLiveLinkmicRoomEnterTracker *_roomEnterTracker;
    UIImageView *_pkStreamBackground;
    double _currentPKStreamRatio;
    NSString *_pkBackgroundColor;
    double _pkTopDistance;
    double _multilinkerDistance;
    NSString *_multilinkerBackgroundColor;
    NSMutableDictionary *_lastMultiLinkerSEIMetaInfo;
    NSNumber *_gridsOffsetY;
    NSNumber *_gridsOffsetX;
    IESLiveNewPlayerFactory *_factory;
    IESLiveGCDTimer *_natureTimer;
    IESLiveExplainBarInfoView *_viceBarInfoView;
    IESLiveExplainWindowInfoView *_viceWindowView;
    NSString *_currentSEIRoomID;
    IESLiveBackgroundView *_landscapeViceBgView;
    long long _preViewStreamType;
    NSTimer *_preloadTimer;
    HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *_beforePlayerQuality;
    HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *_playerQuality;
    IESLiveKTVPreStreamController *_ktvController;
    NSError *_error;
    NSMutableDictionary *_bizMonitorInfo;
    IESLiveSmoothSwitchResolutionController *_smoothSwitchController;
    IESLiveLinkMicSEIParserResult *_lastLinkMicSSEIResult;
    long long _currentLayoutType;
    long long _currentScaleType;
    long long _currentAlignMode;
    AWELivePreStreamLayoutMachine *_layoutMachine;
    id<IESLiveWifiToCellularManagerInterface> _wifiToCellularManager;
    struct CGSize { double width; double height; } mediaSize;
    struct CGSize { double width; double height; } specifyRatio;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _renderViewFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pkRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _pkCropSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _multilinkerCropSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _multilinkerRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentFrame;
}

@property (retain, nonatomic) UIView *parentContainer;
@property (retain, nonatomic) UIView *viceView;
@property (retain, nonatomic) UIView *belowContainer;
@property (retain, nonatomic) UIView *aboveContainer;
@property (retain, nonatomic) IESLiveFeedAudioView *audioAnimationView;
@property (retain, nonatomic) id<IESLivePlayerProtocol> playerController;
@property (retain, nonatomic) IESLiveInteractiveSEIParser *seiParser;
@property (retain, nonatomic) IESLiveBigPartyPreStreamController *bigPartyController;
@property (retain, nonatomic) IESLiveBigPartyPreStreamAdapterWrapper *bigPartyPreStreamAdapter;
@property (retain, nonatomic) IESLiveStreamPlayerModel *streamPlayerModel;
@property (retain, nonatomic) IESLiveLinkmicRoomEnterTracker *roomEnterTracker;
@property (copy, nonatomic) NSString *resolutionType;
@property (nonatomic) BOOL isPKGoingOn;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkCropSize;
@property (retain, nonatomic) UIImageView *pkStreamBackground;
@property (nonatomic) double currentPKStreamRatio;
@property (copy, nonatomic) NSString *pkBackgroundColor;
@property (nonatomic) double pkTopDistance;
@property (nonatomic) BOOL isMultiLinkerGoingOn;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multilinkerCropSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multilinkerRatioFrame;
@property (nonatomic) double multilinkerDistance;
@property (copy, nonatomic) NSString *multilinkerBackgroundColor;
@property (retain, nonatomic) NSMutableDictionary *lastMultiLinkerSEIMetaInfo;
@property (nonatomic) BOOL isIntimateChatOn;
@property (retain, nonatomic) NSNumber *gridsOffsetY;
@property (retain, nonatomic) NSNumber *gridsOffsetX;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } currentFrame;
@property (nonatomic) BOOL didDealVSTimeFormat;
@property (nonatomic) BOOL needRecordProcess;
@property (retain, nonatomic) IESLiveNewPlayerFactory *factory;
@property (retain, nonatomic) IESLiveGCDTimer *natureTimer;
@property (retain, nonatomic) NSNumber *preferScaleType;
@property (retain, nonatomic) IESLiveExplainBarInfoView *viceBarInfoView;
@property (retain, nonatomic) IESLiveExplainWindowInfoView *viceWindowView;
@property (nonatomic) BOOL isShowingViceMsg;
@property (retain, nonatomic) NSString *currentSEIRoomID;
@property (retain, nonatomic) IESLiveBackgroundView *landscapeViceBgView;
@property (nonatomic) long long preViewStreamType;
@property (copy, nonatomic) NSString *strategySDKKey;
@property (retain, nonatomic) NSTimer *preloadTimer;
@property (nonatomic) BOOL isPrepareStreamData;
@property (retain, nonatomic) HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *beforePlayerQuality;
@property (retain, nonatomic) HTSLiveStreamUrl_LiveCoreSDKData_PullData_Options_Quality *playerQuality;
@property (retain, nonatomic) IESLiveKTVPreStreamController *ktvController;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSMutableDictionary *bizMonitorInfo;
@property (retain, nonatomic) IESLiveSmoothSwitchResolutionController *smoothSwitchController;
@property (retain, nonatomic) IESLiveLinkMicSEIParserResult *lastLinkMicSSEIResult;
@property (nonatomic) long long currentLayoutType;
@property (nonatomic) long long currentScaleType;
@property (nonatomic) long long currentAlignMode;
@property (retain, nonatomic) AWELivePreStreamLayoutMachine *layoutMachine;
@property (retain, nonatomic) id<IESLiveWifiToCellularManagerInterface> wifiToCellularManager;
@property (readonly, nonatomic) AWEAwemeModel *model;
@property (copy, nonatomic) id /* block */ tipDistanceChangeAction;
@property (copy, nonatomic) id /* block */ updateInteractListAction;
@property (copy, nonatomic) id /* block */ timateChatChangeAction;
@property (copy, nonatomic) id /* block */ playerStopAction;
@property (copy, nonatomic) id /* block */ playLoadStateChangeAction;
@property (copy, nonatomic) id /* block */ playbackStateChangeAction;
@property (copy, nonatomic) id /* block */ receiveErrorAction;
@property (copy, nonatomic) id /* block */ bigPartyShowAction;
@property (copy, nonatomic) id /* block */ bigPartySEIReceivedAction;
@property (copy, nonatomic) id /* block */ openAudioBlock;
@property (copy, nonatomic) id /* block */ processAudioBlock;
@property (copy, nonatomic) id /* block */ onRenderAudioFrameBlock;
@property (copy, nonatomic) id /* block */ landscapePlayerFrameBlock;
@property (weak, nonatomic) id<IESLivePaidStreamProvider> paidStream;
@property (copy, nonatomic) id /* block */ reportBlock;
@property (copy, nonatomic) id /* block */ seiReceiveAction;
@property (copy, nonatomic) id /* block */ startPlayBlock;
@property (copy, nonatomic) id /* block */ resumePlayBlock;
@property (copy, nonatomic) id /* block */ frozenPlayBlock;
@property (nonatomic) BOOL didEndedLive;
@property (nonatomic) BOOL enableCheckSEISourceAndAppData;
@property (readonly, nonatomic) UIView *playerView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } renderViewFrame;
@property (nonatomic) BOOL shouldMuted;
@property (nonatomic) BOOL shouldReportAudioFrame;
@property (copy, nonatomic) NSString *referString;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (weak, nonatomic) AWELivePreStreamContext *pageContext;
@property (nonatomic) BOOL didStartFromHighlight;
@property (nonatomic) BOOL didSeekTime;
@property (nonatomic) double currentWatchTime;
@property (nonatomic) BOOL disableMuteOperation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<IESLivePlayerProtocol> player;
@property (nonatomic) struct CGSize { double width; double height; } mediaSize;
@property (nonatomic) unsigned long long alignMode;
@property (nonatomic) long long scaleType;
@property (readonly, nonatomic) BOOL isGameViceViewExist;
@property (nonatomic) BOOL shouldHasViceView;
@property (nonatomic) BOOL isViceHidden;
@property (nonatomic) double viceViewRightOffSet;
@property (nonatomic) long long cameraVerticalType;
@property (readonly, nonatomic) struct CGSize { double width; double height; } specifyRatio;
@property (weak, nonatomic) id<IESLiveInteractionAsyncResourceLoader> asyncResourceLoader;
@property (retain, nonatomic) NSArray *multiLinkerGridRatioFrames;
@property (nonatomic) long long preScaleType;
@property (nonatomic) unsigned long long preAlignMode;
@property (nonatomic) BOOL isNeedUpdateMultiLinkerLayout;
@property (retain, nonatomic) IESLivePlayerAudioLoudness *sourceLoudness;

- (id)referString;
- (void)setReferString:(id)arg0;
- (void)player:(id)arg0 loadStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 didReceiveError:(id)arg1;
- (void)player:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 mediaSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)player:(id)arg0 didReceiveMetaInfo:(id)arg1 processed:(BOOL)arg2;
- (void)player:(id)arg0 willOpenAudioRenderWithSampleRate:(int)arg1 channels:(int)arg2 duration:(int)arg3;
- (void)player:(id)arg0 willProcessAudioFrameWithRawData:(float **)arg1 samples:(int)arg2 timeStamp:(long long)arg3;
- (void)player:(id)arg0 didAutomaticallySwitchFromPreviousResolution:(id)arg1 toCurrentResolution:(id)arg2 userInfo:(id)arg3;
- (void)player:(id)arg0 reportURL:(id)arg1 monitorStateInfo:(id)arg2;
- (void)player:(id)arg0 srTypeUpdate:(long long)arg1 hasManualSetSRType:(BOOL)arg2;
- (void)player:(id)arg0 onNetworkQualityChangedBehavior:(long long)arg1 detail:(id)arg2;
- (void)playerFrozen:(id)arg0;
- (void)playerResume:(id)arg0;
- (id)bizTransTrackerParams;
- (void)onLoudness:(float)arg0 soucePeak:(float)arg1 targetLufs:(float)arg2 isEnableExternalAETargetLufs:(BOOL)arg3;
- (void)muteAwemeCanceled;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)supportPictureInPictureMode;
- (void)destroyVicePlayerView:(id)arg0;
- (void)setShouldReportAudioFrame:(BOOL)arg0;
- (BOOL)shouldReportAudioFrame;
- (void)player:(id)arg0 onRenderAudioFrame:(id)arg1;
- (void)didSetAttachingDIContext;
- (id)anchorID;
- (id)liveRoomModel;
- (id)preloadTimer;
- (void)setPreloadTimer:(id)arg0;
- (id /* block */)reportBlock;
- (void)setReportBlock:(id /* block */)arg0;
- (unsigned long long)alignMode;
- (void)setAlignMode:(unsigned long long)arg0;
- (BOOL)isAudioLive;
- (void)clearPlayer;
- (void)setCurrentWatchTime:(double)arg0;
- (double)currentWatchTime;
- (BOOL)isValidRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)preloadWithModel:(id)arg0;
- (void)resetPreload;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderViewFrame;
- (void)setRenderViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setShouldMuted:(BOOL)arg0;
- (void)correctMuteStateIfNeeded;
- (id)bigPartyController;
- (void)setBigPartyController:(id)arg0;
- (void)onMessageReceivce:(id)arg0 withDict:(id)arg1;
- (BOOL)didEndedLive;
- (id)previewViewWithCallTrace:(id)arg0;
- (id)playerViewWithCallTrace:(id)arg0;
- (id)viceViewWithCallTrace:(id)arg0;
- (void)layoutWithType:(unsigned long long)arg0 callTrace:(id)arg1;
- (BOOL)isVRStream;
- (void)storageUsedSpecifyRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getUsedSpecifyRatioFrame;
- (id)multiLinkerGridRatioFrames;
- (BOOL)disableMuteOperation;
- (void)setDisableMuteOperation:(BOOL)arg0;
- (BOOL)shouldHasViceView;
- (BOOL)isGameViceViewExist;
- (struct CGSize { double x0; double x1; })specifyRatio;
- (id)paidStream;
- (void)setPaidStream:(id)arg0;
- (BOOL)isIntimateChatOn;
- (BOOL)didStartFromHighlight;
- (void)setDidStartFromHighlight:(BOOL)arg0;
- (BOOL)didSeekTime;
- (void)setDidSeekTime:(BOOL)arg0;
- (id)preStreamEnterRoomLayout;
- (id)preStreamEnterRoomUserList;
- (struct CGSize { double x0; double x1; })playerViewSize;
- (void)setMultiLinkerGridRatioFrames:(id)arg0;
- (long long)preScaleType;
- (void)setPreScaleType:(long long)arg0;
- (unsigned long long)preAlignMode;
- (void)setPreAlignMode:(unsigned long long)arg0;
- (BOOL)isNeedUpdateMultiLinkerLayout;
- (void)setIsNeedUpdateMultiLinkerLayout:(BOOL)arg0;
- (id)sourceLoudness;
- (void)setSourceLoudness:(id)arg0;
- (id)playerDebugInfo;
- (void)setDidEndedLive:(BOOL)arg0;
- (void)playerStopWithToken:(id)arg0;
- (void)playerPlayWithToken:(id)arg0;
- (void)setPlayerMuted:(BOOL)arg0 token:(id)arg1;
- (void)trackLogWithEventKey:(id)arg0 params:(id)arg1;
- (void)removeStrategyServiceObserser;
- (id)wifiToCellularManager;
- (id)roomEnterTracker;
- (void)setRoomEnterTracker:(id)arg0;
- (void)setAsyncResourceLoader:(id)arg0;
- (void)addStrategyServiceObserserIfNeeded;
- (id)layoutMachine;
- (id)audioAnimationView;
- (void)setAudioAnimationView:(id)arg0;
- (void)loadAudioViewIfNeededWith:(id)arg0 roomModel:(id)arg1;
- (id)bigPartyPreStreamAdapter;
- (void)updatePlayerStainedInfo:(id)arg0;
- (id)ktvController;
- (void)dequeuePlayerControllerWithCallTrace:(id)arg0;
- (id)viceView;
- (long long)preViewStreamType;
- (void)setPlayerAlpha:(double)arg0 token:(id)arg1;
- (void)setPlayerHidden:(BOOL)arg0 token:(id)arg1;
- (BOOL)p_isViceHidden;
- (BOOL)isPrepareStreamData;
- (void)p_playerReloadStream:(id)arg0;
- (void)detectRoomStreamMismatch;
- (void)invalidatePreloadTimer;
- (void)setPreViewStreamType:(long long)arg0;
- (BOOL)isSameStream;
- (id)streamPlayerModel;
- (void)preparePlayerStreamData;
- (void)playResetWithToken:(id)arg0;
- (void)fakeFirstFrame;
- (void)p_fakeFirstFrame;
- (void)stopPreloadWithTimer:(id)arg0;
- (void)updatePlayerResolution;
- (id)strategySDKKey;
- (void)setIsPrepareStreamData:(BOOL)arg0;
- (void)managePlayerVideoEnhancement;
- (void)p_presetUsingCellularIfNeeded:(id)arg0;
- (id)playerQuality;
- (void)trackPlayForQuality:(id)arg0 type:(long long)arg1;
- (void)setPreStreamPlayerIsRealAutoResolution;
- (void)setPlayerQuality:(id)arg0;
- (void)setBeforePlayerQuality:(id)arg0;
- (void)updatePlayerTrackInfo:(int)arg0;
- (id)beforePlayerQuality;
- (void)clearViceView;
- (BOOL)isPKGoingOn;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pkCropSize;
- (BOOL)isMultiLinkerGoingOn;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multilinkerCropSize;
- (id /* block */)playerStopAction;
- (void)resetAudioView;
- (id)pkStreamBackground;
- (void)setPkStreamBackground:(id)arg0;
- (void)p_recordCurrentProcess;
- (void)setDidDealVSTimeFormat:(BOOL)arg0;
- (id /* block */)resumePlayBlock;
- (id /* block */)frozenPlayBlock;
- (void)setPreferScaleType:(id)arg0;
- (id)findExistStrategySDKkey:(id)arg0;
- (void)setStrategySDKKey:(id)arg0;
- (void)changeSuperResolutionWithStrategy;
- (void)changeSDR2HDRWithStrategy;
- (void)adjustVolumeEffectTargetLufs;
- (void)choosePlayerSpecifySceneForLOB;
- (void)adjustWholeVolumeEffectParam;
- (id /* block */)playbackStateChangeAction;
- (id)smoothSwitchController;
- (BOOL)isTryPreviewStream;
- (id)firstFrameLogInfo;
- (void)adjustAppearanceWhenFirstFrameCome:(id)arg0;
- (void)setStrategySRTypeIfNeeded:(id)arg0;
- (id /* block */)playLoadStateChangeAction;
- (id)vrBgEventParams;
- (void)resetVRConfigWithPlayer:(id)arg0;
- (void)mediaSizeDidChange:(struct CGSize { double x0; double x1; })arg0;
- (void)dealWithViceViewMeta:(id)arg0;
- (void)dealWithVSTimeFormat:(id)arg0;
- (void)dealWithLinkMicWithMetaInfo:(id)arg0;
- (void)dealWithAnchorVideoPlayMetaInfo:(id)arg0;
- (void)dealWithSonicGameWithMetaInfo:(id)arg0;
- (void)dealWithRoiBMFSR:(id)arg0;
- (id /* block */)seiReceiveAction;
- (void)smoothExitRoomToPreview;
- (id /* block */)openAudioBlock;
- (id /* block */)processAudioBlock;
- (id /* block */)onRenderAudioFrameBlock;
- (void)setCurrentSEIRoomID:(id)arg0;
- (id)viceWindowView;
- (BOOL)isShowingViceMsg;
- (void)updateExplainMsgIfNeed;
- (void)changeGameViceStreamLayout:(BOOL)arg0;
- (id)aboveContainer;
- (id)asyncResourceLoader;
- (id /* block */)updateInteractListAction;
- (void)removeFakeBizeView;
- (BOOL)isNeedROI:(long long)arg0;
- (BOOL)unifyPlayerPKLayout;
- (void)dealPKSEIWithMetaInfo:(id)arg0 room:(id)arg1;
- (void)dealMultiLinkerSEIWithMetaInfo:(id)arg0 room:(id)arg1;
- (id)seiParser;
- (BOOL)enableCheckSEISourceAndAppData;
- (void)setGridsOffsetY:(id)arg0;
- (void)setGridsOffsetX:(id)arg0;
- (id)gridsOffsetY;
- (void)setIsIntimateChatOn:(BOOL)arg0;
- (id /* block */)timateChatChangeAction;
- (id)preferScaleType;
- (id)bizMonitorInfo;
- (id)lastMultiLinkerSEIMetaInfo;
- (void)resetMultiLinkerParams;
- (void)setLastMultiLinkerSEIMetaInfo:(id)arg0;
- (void)setupMultiLinkerPlayerParamIfNeeded;
- (void)setIsMultiLinkerGoingOn:(BOOL)arg0;
- (BOOL)shouldUpdateMultiLinkerLayoutWithSEIResult:(id)arg0;
- (void)setMultilinkerCropSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)configLayoutParams:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getPadPlayerRatioFrameWithScreenSize:(struct CGSize { double x0; double x1; })arg0 isLandscape:(BOOL)arg1;
- (void)setMultilinkerRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)calculatePCCropGridRatioFramesWithParserResult:(id)arg0 playerSize:(struct CGSize { double x0; double x1; })arg1 contentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (void)setMultilinkerDistance:(double)arg0;
- (void)setMultilinkerBackgroundColor:(id)arg0;
- (void)setupMultiLinkerPlayerWithContainerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCurrentScaleType:(long long)arg0;
- (void)setCurrentAlignMode:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multilinkerRatioFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })losePrecisionRectWith:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)multilinkerBackgroundColor;
- (long long)currentScaleType;
- (long long)currentAlignMode;
- (double)multilinkerDistance;
- (id)lastLinkMicSSEIResult;
- (void)updatePlayerBackgroundColorForPK:(BOOL)arg0;
- (void)checkPKPlayerPropState;
- (void)setIsPKGoingOn:(BOOL)arg0;
- (void)setPkTopDistance:(double)arg0;
- (void)setPkBackgroundColor:(id)arg0;
- (void)setupPKPlayerFrame;
- (double)caculateStreamRatioHeightWithRatio:(double)arg0;
- (void)setCurrentPKStreamRatio:(double)arg0;
- (void)setPkCropSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })ratioFrameForIpadWithHeight:(double)arg0 width:(double)arg1 shortTouchHeight:(double)arg2 isLandscape:(BOOL)arg3;
- (double)currentPKStreamRatio;
- (void)setPkRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)adjustPlayerSizeForPKWithSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pkRatioFrame;
- (double)pkTopDistance;
- (id)pkBackgroundColor;
- (void)startPlayerAudioRendering;
- (id /* block */)bigPartyShowAction;
- (id /* block */)bigPartySEIReceivedAction;
- (BOOL)isFromFeedVideo;
- (void)layoutPlayerIfNeededWithCallTrace:(id)arg0;
- (BOOL)enablePlayerUnifyLayout;
- (void)landScapeLayoutWithSize:(struct CGSize { double x0; double x1; })arg0;
- (void)intimateChatOnStreamLayoutWithSize:(struct CGSize { double x0; double x1; })arg0;
- (long long)getScreenshotScaleTypeWith:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)enableUserSelectedExternalScaleTypeWith:(struct CGSize { double x0; double x1; })arg0;
- (long long)getUserSelectedExternalScaleTypeWith:(struct CGSize { double x0; double x1; })arg0;
- (void)normalStreamLayoutWithSize:(struct CGSize { double x0; double x1; })arg0 preferScaleType:(id)arg1;
- (id /* block */)tipDistanceChangeAction;
- (struct CGSize { double x0; double x1; })currentBigPartyPlaceholderSize;
- (void)setViceView:(id)arg0;
- (void)initViceViewForGame;
- (id)currentSEIRoomID;
- (void)setIsShowingViceMsg:(BOOL)arg0;
- (id)viceBarInfoView;
- (BOOL)isViceHidden;
- (void)setExplainViceContrainsIfNeed;
- (id)gridsOffsetX;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })changeLandscapeMediaSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)shouldSpecifyRatioWithVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })getSpecifyRatio;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })changeSizeWithVideoSize:(struct CGSize { double x0; double x1; })arg0 specifyRatio:(struct CGSize { double x0; double x1; })arg1;
- (id /* block */)landscapePlayerFrameBlock;
- (void)createLandscapeViceBgViewIfNeeded;
- (id)landscapeViceBgView;
- (double)viceViewRightOffSet;
- (void)setGameViceContrainsIfNeed;
- (id /* block */)receiveErrorAction;
- (void)updatePlayerDropFrameRate:(long long)arg0;
- (void)updatePlayerDropFrameMinFps:(long long)arg0;
- (void)resetAnchorInteractStatus;
- (void)smoothEnterRoom;
- (void)setLandscapeViceBgView:(id)arg0;
- (void)pkFameRotateToSize:(struct CGSize { double x0; double x1; })arg0;
- (void)multiLinkerPlayerRotateToSize:(struct CGSize { double x0; double x1; })arg0;
- (void)onStreamStartPlay;
- (BOOL)didDealVSTimeFormat;
- (void)p_setVSHighlightTimeShift;
- (void)setNeedRecordProcess:(BOOL)arg0;
- (BOOL)p_vsEnableSeekTime;
- (double)p_highlightRecordProcess;
- (void)startNatureTimerIfNeed;
- (void)handleTimeNaturalGrowth;
- (id)natureTimer;
- (void)setNatureTimer:(id)arg0;
- (BOOL)needRecordProcess;
- (id)ktvPreStreamContext;
- (BOOL)shouldMuted;
- (BOOL)enablePlayerAudioRendering;
- (void)setLayoutMachine:(id)arg0;
- (void)createPlayerLayoutMachine;
- (void)initPlayerDropFrameConfigs;
- (void)setViceWindowView:(id)arg0;
- (void)setViceBarInfoView:(id)arg0;
- (void)setSmoothSwitchController:(id)arg0;
- (void)updateStrategySDKkey;
- (id)specifyRatioSupportLiveModes;
- (id /* block */)startPlayBlock;
- (void)bigPartyDidActivate;
- (void)bigPartyDidDeactivate;
- (void)bigPartyLayoutStyleStart:(id)arg0;
- (void)bigPartyLayoutStyleEnd:(id)arg0;
- (void)layoutPlayerIfNeed;
- (id)playerForBigParty;
- (id)seiReceiverForBigParty;
- (id)containerForBigParty;
- (id)playerContainerForBigParty;
- (struct CGSize { double x0; double x1; })mediaSizeForBigParty;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })containerFrameForBigParty;
- (long long)bigPartyContentModeForEqual;
- (long long)bigPartyContentModeForNonOverlapping;
- (id)playModeListForBigParty;
- (void)eventDispatcherWillDispatchValue:(id)arg0 withFactorKey:(id)arg1;
- (void)didChangeToCellularTransData:(id)arg0;
- (void)didChangeToDefaultTransData:(id)arg0;
- (void)layoutWithData:(struct { long long x0; long long x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; BOOL x3; })arg0 layoutType:(unsigned long long)arg1;
- (void)vicePlayerViewCreateWithRenderingArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 maskView:(id)arg1;
- (void)vicePlayerViewSetWith:(id)arg0 maskView:(id)arg1;
- (void)vicePlayerViewSetAlpha:(double)arg0;
- (void)setShouldHasViceView:(BOOL)arg0;
- (void)setIsViceHidden:(BOOL)arg0;
- (void)setViceViewRightOffSet:(double)arg0;
- (BOOL)isRTMFormatType;
- (id)reloadTriggerReason;
- (id)playerSessionID;
- (void)setBizMonitorInfo:(id)arg0 value:(id)arg1;
- (id)initWithContainer:(id)arg0 above:(id)arg1 below:(id)arg2 diContext:(id)arg3;
- (void)reloadAudioAnimationView;
- (void)updateModel:(id)arg0 callTrace:(id)arg1;
- (void)setModel:(id)arg0 callTrace:(id)arg1;
- (void)prePlayWithAuthenticationBlock:(id /* block */)arg0;
- (void)playWithMute:(BOOL)arg0 withAuthenticationBlock:(id /* block */)arg1;
- (void)preViewStreamIfNeededWithPreloadInterval:(long long)arg0 callTrace:(id)arg1;
- (void)preCreatePlayerIfNeeded;
- (void)smoothBackPreviewWithPause;
- (void)closeWithToken:(id)arg0;
- (void)enqueuePlayerWithToken:(id)arg0;
- (void)updatePreferScaleType:(id)arg0;
- (void)loadAudioViewWith:(id)arg0;
- (double)multiLinkerStreamOffset;
- (void)enterLiveEnd;
- (void)resetPlayerController;
- (id)bigPartyControllerProtocol;
- (BOOL)videoRoomInteractiveIsGoingOn;
- (void)playerPauseWithToken:(id)arg0;
- (void)setTipDistanceChangeAction:(id /* block */)arg0;
- (void)setUpdateInteractListAction:(id /* block */)arg0;
- (void)setTimateChatChangeAction:(id /* block */)arg0;
- (void)setPlayerStopAction:(id /* block */)arg0;
- (void)setPlayLoadStateChangeAction:(id /* block */)arg0;
- (void)setPlaybackStateChangeAction:(id /* block */)arg0;
- (void)setReceiveErrorAction:(id /* block */)arg0;
- (void)setBigPartyShowAction:(id /* block */)arg0;
- (void)setBigPartySEIReceivedAction:(id /* block */)arg0;
- (void)setOpenAudioBlock:(id /* block */)arg0;
- (void)setProcessAudioBlock:(id /* block */)arg0;
- (void)setOnRenderAudioFrameBlock:(id /* block */)arg0;
- (void)setLandscapePlayerFrameBlock:(id /* block */)arg0;
- (void)setSeiReceiveAction:(id /* block */)arg0;
- (void)setStartPlayBlock:(id /* block */)arg0;
- (void)setResumePlayBlock:(id /* block */)arg0;
- (void)setFrozenPlayBlock:(id /* block */)arg0;
- (void)setEnableCheckSEISourceAndAppData:(BOOL)arg0;
- (id)belowContainer;
- (void)setBelowContainer:(id)arg0;
- (void)setAboveContainer:(id)arg0;
- (void)setSeiParser:(id)arg0;
- (void)setBigPartyPreStreamAdapter:(id)arg0;
- (void)setStreamPlayerModel:(id)arg0;
- (void)setKtvController:(id)arg0;
- (void)setBizMonitorInfo:(id)arg0;
- (void)setLastLinkMicSSEIResult:(id)arg0;
- (void)setWifiToCellularManager:(id)arg0;
- (void)setModel:(id)arg0;
- (unsigned long long)playbackState;
- (void)resetTimer;
- (void)resetError;
- (void).cxx_destruct;
- (unsigned long long)loadState;
- (id)factory;
- (id)model;
- (id)playerController;
- (void)stop;
- (void)setFactory:(id)arg0;
- (void)setPlayerController:(id)arg0;
- (void)prepareForReuse;
- (void)setError:(id)arg0;
- (void)setVolume:(float)arg0;
- (id)playerView;
- (void)dealloc;
- (void)reset;
- (id)error;
- (id)player;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentFrame;
- (id)parentContainer;
- (void)setParentContainer:(id)arg0;
- (void)didReceiveError:(id)arg0;
- (id)roomID;
- (id)pageContext;
- (void)setPageContext:(id)arg0;
- (id)resolutionType;
- (void)setResolutionType:(id)arg0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })mediaSize;
- (long long)scaleType;
- (void)setScaleType:(long long)arg0;
- (void)setMediaSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCurrentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)currentLayoutType;
- (void)setCurrentLayoutType:(long long)arg0;

@end
