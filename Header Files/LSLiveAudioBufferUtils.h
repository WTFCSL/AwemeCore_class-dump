//
//     Generated by private class-dump
//

@interface LSLiveAudioBufferUtils : NSObject

+ (struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)createBufferList:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })arg0 frameCount:(unsigned int)arg1;
+ (void)freeBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
+ (void)copyBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 srcBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg1;
+ (void)resetBufferQueue:(struct AudioBufferQueue { char *x0; unsigned int x1; } *)arg0;
+ (void)resetAudioBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
+ (void)mixAudioBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 dstBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg1;
+ (void)mixAudioDataWithVolume:(short *)arg0 srcLength:(int)arg1 srcVolume:(double)arg2 dstData:(short *)arg3 dstLength:(int)arg4 dstVolume:(double)arg5;
+ (void)mixAudioBufferListWithVolume:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 srcVolume:(double)arg1 dstBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg2 dstVolume:(double)arg3;
+ (void)mixAudioBuffer:(short *)arg0 srcDataSize:(unsigned int)arg1 srcVolume:(double)arg2 dstBuffer:(short *)arg3 dstDataSize:(unsigned int)arg4 dstVolume:(double)arg5;
+ (void)writePCMFile:(id)arg0 pcmData:(char *)arg1 length:(int)arg2;
+ (void)createBufferQueue:(struct AudioBufferQueue { char *x0; unsigned int x1; } *)arg0;
+ (void)freeBufferQueue:(struct AudioBufferQueue { char *x0; unsigned int x1; } *)arg0;
+ (void)pushQueue:(struct AudioBufferQueue { char *x0; unsigned int x1; } *)arg0 srcData:(short *)arg1 dataSize:(unsigned int)arg2;
+ (int)dequeue:(struct AudioBufferQueue { char *x0; unsigned int x1; } *)arg0 dstData:(short *)arg1 outputSize:(unsigned int)arg2;

@end
