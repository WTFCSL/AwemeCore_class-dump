//
//     Generated by private class-dump
//

@class ACCRepositoryWorkspace, NSString, NSMutableSet, BDImageCache, NSObject;
@protocol OS_dispatch_queue;

@interface ACCSequencePreviewImageCache : NSObject <NLEMultiImageCacheProtocol> {
    BOOL _isDraft;
    ACCRepositoryWorkspace *_workspace;
    BDImageCache *_imageCache;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_coverImageQueue;
    NSMutableSet *_draftEditKeys;
}

@property (retain, nonatomic) BDImageCache *imageCache;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *coverImageQueue;
@property (nonatomic) BOOL isDraft;
@property (retain, nonatomic) NSMutableSet *draftEditKeys;
@property (weak, nonatomic) ACCRepositoryWorkspace *workspace;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)draftKeyByPath:(id)arg0;
+ (long long)sequenceCoverImgaeEdge;

- (BOOL)containsImageForKey:(id)arg0;
- (void)setImage:(id)arg0 forProjectUUID:(id)arg1;
- (void)setSmallImage:(id)arg0 forProjectUUID:(id)arg1;
- (void)saveDrafteEdit:(BOOL)arg0;
- (void)imageForProjectUUID:(id)arg0 highPriority:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setImagePath:(id)arg0 forProjectUUID:(id)arg1;
- (void)copyKeyFrom:(id)arg0 to:(id)arg1;
- (void)thumbnailImageForProjectUUID:(id)arg0 highPriority:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)thumbnailImageWithImageFilePath:(id)arg0;
- (id)draftEditKeys;
- (void)runOnImageQueue:(id /* block */)arg0;
- (id)coverImageQueue;
- (void)getImageForKey:(id)arg0 highPriority:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)initWithPath:(id)arg0 isDraft:(BOOL)arg1;
- (void)setCoverImageQueue:(id)arg0;
- (void)setDraftEditKeys:(id)arg0;
- (id)workspace;
- (BOOL)isDraft;
- (void).cxx_destruct;
- (void)setSerialQueue:(id)arg0;
- (id)serialQueue;
- (void)setImageCache:(id)arg0;
- (void)setMemoryCacheCostLimit:(unsigned long long)arg0;
- (id)imageCache;
- (unsigned long long)memoryCacheCountLimit;
- (unsigned long long)memoryCacheCostLimit;
- (void)setIsDraft:(BOOL)arg0;
- (void)dealloc;
- (void)setMemoryCacheCountLimit:(unsigned long long)arg0;
- (void)setWorkspace:(id)arg0;
- (void)clearImageCache;
- (void)setImage:(id)arg0 forKey:(id)arg1;

@end
