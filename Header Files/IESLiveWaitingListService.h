//
//     Generated by private class-dump
//

@class NSCache, NSString, NSNumber, HTSEventContext, HTSLiveInteractiveAPI, NSMutableDictionary, NSDictionary, NSMutableArray, IESLiveWaitingListUser, HTSLiveText;
@protocol IESLiveRoomService;

@interface IESLiveWaitingListService : NSObject {
    BOOL _hasFetchWaitingList;
    BOOL _enableApplyListLoadMore;
    BOOL _enablePaidWaitingListLoadMore;
    BOOL _showPaidListTab;
    BOOL _selectedPaidListTab;
    BOOL _hasLinkPaidGuidence;
    BOOL _isLoadMoreList;
    int _waitingListSortStrategy;
    int _paidWaitingListSortStrategy;
    int _waitingListSource;
    int _userListStatus;
    NSMutableArray *_waitingList;
    NSMutableArray *_paidWaitingList;
    NSMutableArray *_allWaitingList;
    IESLiveWaitingListUser *_waitingUser;
    IESLiveWaitingListUser *_paidWaitingUser;
    HTSLiveText *_displayText;
    NSNumber *_serverTime;
    id<IESLiveRoomService> _roomModel;
    NSDictionary *_waitingOffsetInfo;
    NSDictionary *_applyWaitingTrackInfo;
    HTSEventContext *_trackContext;
    long long _totalCount;
    long long _waitingListTotalCount;
    long long _paidWaitingListTotalCount;
    HTSLiveInteractiveAPI *_linkmicAPI;
    NSString *_waitingListNextCursor;
    NSString *_paidWaitingListNextCursor;
    unsigned long long _userListType;
    NSMutableDictionary *_requestTimeMap;
    NSCache *_getWaitingUserInfoRequestThrottler;
}

@property (retain, nonatomic) HTSLiveInteractiveAPI *linkmicAPI;
@property (copy, nonatomic) NSString *waitingListNextCursor;
@property (copy, nonatomic) NSString *paidWaitingListNextCursor;
@property (nonatomic) BOOL enableApplyListLoadMore;
@property (nonatomic) BOOL enablePaidWaitingListLoadMore;
@property (nonatomic) BOOL isLoadMoreList;
@property (nonatomic) unsigned long long userListType;
@property (nonatomic) int userListStatus;
@property (retain, nonatomic) NSMutableDictionary *requestTimeMap;
@property (retain, nonatomic) NSCache *getWaitingUserInfoRequestThrottler;
@property (retain, nonatomic) NSMutableArray *waitingList;
@property (retain, nonatomic) NSMutableArray *paidWaitingList;
@property (retain, nonatomic) NSMutableArray *allWaitingList;
@property (nonatomic) int waitingListSortStrategy;
@property (nonatomic) int paidWaitingListSortStrategy;
@property (retain, nonatomic) IESLiveWaitingListUser *waitingUser;
@property (retain, nonatomic) IESLiveWaitingListUser *paidWaitingUser;
@property (retain, nonatomic) HTSLiveText *displayText;
@property (retain, nonatomic) NSNumber *serverTime;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (retain, nonatomic) NSDictionary *waitingOffsetInfo;
@property (retain, nonatomic) NSDictionary *applyWaitingTrackInfo;
@property (nonatomic) BOOL hasFetchWaitingList;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (nonatomic) long long totalCount;
@property (nonatomic) long long waitingListTotalCount;
@property (nonatomic) long long paidWaitingListTotalCount;
@property (nonatomic) BOOL showPaidListTab;
@property (nonatomic) BOOL selectedPaidListTab;
@property (nonatomic) BOOL hasLinkPaidGuidence;
@property (nonatomic) int waitingListSource;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)roomModel;
- (void)didSetAttachingDIContext;
- (void)setServerTime:(id)arg0;
- (void)setRoomModel:(id)arg0;
- (id)initWithRoom:(id)arg0 trackContext:(id)arg1;
- (id)waitingList;
- (id)waitingUser;
- (BOOL)showPaidListTab;
- (void)setWaitingUser:(id)arg0;
- (int)waitingListSortStrategy;
- (void)setWaitingList:(id)arg0;
- (void)setWaitingListSortStrategy:(int)arg0;
- (BOOL)hasFetchWaitingList;
- (void)setHasFetchWaitingList:(BOOL)arg0;
- (id)waitingOffsetInfo;
- (void)setWaitingOffsetInfo:(id)arg0;
- (void)setWaitingListSource:(int)arg0;
- (BOOL)enableApplyListLoadMore;
- (long long)waitingListTotalCount;
- (void)removeWaitingModelWithUid:(id)arg0;
- (id)linkmicAPI;
- (void)removeWaitingUsersWithActiveUsers:(id)arg0;
- (void)setLinkmicAPI:(id)arg0;
- (void)setWaitingListNextCursor:(id)arg0;
- (void)fetchWaitingListWithType:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (void)setIsLoadMoreList:(BOOL)arg0;
- (id)requestTimeMap;
- (id)waitingListNextCursor;
- (int)waitingListSource;
- (void)setEnableApplyListLoadMore:(BOOL)arg0;
- (void)classifyInterativeList:(id)arg0 type:(int)arg1;
- (void)setWaitingListTotalCount:(long long)arg0;
- (BOOL)isLoadMoreList;
- (void)updateWaitingOffsetInfo:(long long)arg0;
- (id)applyWaitingTrackInfo;
- (void)setApplyWaitingTrackInfo:(id)arg0;
- (BOOL)hasLinkPaidGuidence;
- (void)setHasLinkPaidGuidence:(BOOL)arg0;
- (void)setRequestTimeMap:(id)arg0;
- (long long)paidWaitingListTotalCount;
- (void)refreshWaitingListWithType:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (id)paidWaitingList;
- (void)loadMoreWaitingListWithType:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (BOOL)selectedPaidListTab;
- (void)setPaidWaitingList:(id)arg0;
- (void)setPaidWaitingListTotalCount:(long long)arg0;
- (void)setShowPaidListTab:(BOOL)arg0;
- (void)setSelectedPaidListTab:(BOOL)arg0;
- (id)allWaitingList;
- (id)offlineQueryWaitingInfoOfUser:(id)arg0;
- (void)loadWaitingListWithType:(unsigned long long)arg0 completion:(id /* block */)arg1;
- (void)realTimeQueryWaitingInfoOfUser:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)enablePaidWaitingListLoadMore;
- (void)setPaidWaitingListNextCursor:(id)arg0;
- (id)paidWaitingListNextCursor;
- (void)setEnablePaidWaitingListLoadMore:(BOOL)arg0;
- (id)p_mergeList:(id)arg0 withList:(id)arg1 frontFilterBack:(BOOL)arg2;
- (void)setAllWaitingList:(id)arg0;
- (void)setPaidWaitingListSortStrategy:(int)arg0;
- (id)getWaitingUserInfoRequestThrottler;
- (void)realTimeQueryWaitingInfoOfUsers:(id)arg0 completion:(id /* block */)arg1;
- (int)paidWaitingListSortStrategy;
- (id)paidWaitingUser;
- (void)setPaidWaitingUser:(id)arg0;
- (unsigned long long)userListType;
- (void)setUserListType:(unsigned long long)arg0;
- (int)userListStatus;
- (void)setUserListStatus:(int)arg0;
- (void)setGetWaitingUserInfoRequestThrottler:(id)arg0;
- (id)serverTime;
- (void).cxx_destruct;
- (id)displayText;
- (long long)totalCount;
- (void)setDisplayText:(id)arg0;
- (void)setTotalCount:(long long)arg0;

@end
