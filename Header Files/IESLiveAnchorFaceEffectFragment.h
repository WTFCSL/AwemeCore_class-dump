//
//     Generated by private class-dump
//

@class IESLiveStickerOriginFrameReporter, IESLiveFaceEffectView, IESLiveFaceEffectAlertView, HTSLiveToolbarItem, NSString, NSDictionary, IESLiveEffectPreviewHandler, IESLiveFaceEffectViewModel, IESEffectModel, IESLiveFaceEffectReportHelper;
@protocol IESLivePerfSampler, IESLiveMonitor, IESLiveEffectPlatformConfig;

@interface IESLiveAnchorFaceEffectFragment : IESLiveRoomComponent <IESLiveFaceStickerRouter, IESLiveApplyFaceStickerRouter, IESLiveEffectInfoService, IESLiveAnchorVideoPlayActions, IESLiveFaceEffectViewDelegate, IESLiveFaceEffectServiceDelegate, IESLiveFaceEffectReportHelperDelegate, IESLiveEffectConflictStatusHandle, IESLiveSocialInteractAction, IESLiveRevenueInteractAction, IESLiveAnchorEffectPanelService, HTSLiveMessageSubscriber> {
    BOOL _inLinkMicMode;
    BOOL _inPKMode;
    BOOL _isEffectTurboStart;
    HTSLiveToolbarItem *_faceEffectItem;
    IESLiveFaceEffectView *_faceEffectView;
    IESLiveFaceEffectAlertView *_faceAlertView;
    IESLiveFaceEffectViewModel *_faceEffectService;
    id<IESLiveEffectPlatformConfig> _epConfig;
    id<IESLiveMonitor> _monitor;
    id<IESLivePerfSampler> _perfSampler;
    IESLiveStickerOriginFrameReporter *_effectOriginReporter;
    IESLiveFaceEffectReportHelper *_reportHelper;
    IESEffectModel *_initialEffect;
    IESEffectModel *_battleEffect;
    IESEffectModel *_trickyEffect;
    long long _originFrameReportCount;
    double _appearTime;
    double _lastEffectStartUseTime;
    double _lastAigcBgEffectStartUseTime;
    double _lastEffectStartUseTimeForMutiScene;
    NSDictionary *_multiCoreParams;
    IESLiveEffectPreviewHandler *_previewHandler;
    NSString *_linkageEffectTip;
    IESEffectModel *_uploadedLinkageEffect;
    NSDictionary *_interationDataCache;
}

@property (retain, nonatomic) HTSLiveToolbarItem *faceEffectItem;
@property (retain, nonatomic) IESLiveFaceEffectView *faceEffectView;
@property (retain, nonatomic) IESLiveFaceEffectAlertView *faceAlertView;
@property (retain, nonatomic) IESLiveFaceEffectViewModel *faceEffectService;
@property (retain, nonatomic) id<IESLiveEffectPlatformConfig> epConfig;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (retain, nonatomic) id<IESLivePerfSampler> perfSampler;
@property (retain, nonatomic) IESLiveStickerOriginFrameReporter *effectOriginReporter;
@property (retain, nonatomic) IESLiveFaceEffectReportHelper *reportHelper;
@property (retain, nonatomic) IESEffectModel *initialEffect;
@property (retain, nonatomic) IESEffectModel *battleEffect;
@property (retain, nonatomic) IESEffectModel *trickyEffect;
@property (nonatomic) long long originFrameReportCount;
@property (nonatomic) double appearTime;
@property (nonatomic) double lastEffectStartUseTime;
@property (nonatomic) double lastAigcBgEffectStartUseTime;
@property (nonatomic) double lastEffectStartUseTimeForMutiScene;
@property (retain, nonatomic) NSDictionary *multiCoreParams;
@property (retain, nonatomic) IESLiveEffectPreviewHandler *previewHandler;
@property (nonatomic) BOOL inLinkMicMode;
@property (nonatomic) BOOL inPKMode;
@property (retain, nonatomic) NSString *linkageEffectTip;
@property (retain, nonatomic) IESEffectModel *uploadedLinkageEffect;
@property (retain, nonatomic) NSDictionary *interationDataCache;
@property (nonatomic) BOOL isEffectTurboStart;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)componentShouldActive:(id)arg0;

- (void)setupParams;
- (double)appearTime;
- (void)setAppearTime:(double)arg0;
- (void)componentBindService;
- (void)componentCreate;
- (void)componentMount;
- (void)componentUnmount;
- (void)showEntrance;
- (id)perfSampler;
- (void)setPerfSampler:(id)arg0;
- (void)cameraDidSet;
- (void)mountDidFinishForLevel:(long long)arg0;
- (void)startRevenueInteractWithScene:(unsigned long long)arg0;
- (void)endRevenueInteractWithScene:(unsigned long long)arg0;
- (id)currentSticker;
- (id)currentStickerEffectID;
- (void)handleEffectConflictStatus:(long long)arg0 scene:(long long)arg1;
- (void)performGuestBattleStickerWithModel:(id)arg0;
- (void)cleanGuestBattleStickerIfNeeded;
- (void)hideCurrentFaceSticker;
- (void)resumeCurrentFaceSticker;
- (BOOL)isApplyFaceSticker;
- (BOOL)isPlayingEffectGame;
- (void)showSticker:(id)arg0;
- (void)showSticker:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)openFaceStickerPanel;
- (id)noneFaceAlertView;
- (void)downloadEffectModelByID:(id)arg0 completion:(id /* block */)arg1;
- (void)downloadEffectModelByIDWaitForBack:(id)arg0 completion:(id /* block */)arg1;
- (void)clearForceFaceSticker;
- (void)startRealOriginFrameReport;
- (void)stopRealOriginFrameReport;
- (void)eraseCurrentSticker;
- (id)getEffectModelById:(id)arg0;
- (id)reportHelper;
- (void)openEffectPanelAtTab:(id)arg0 effectID:(id)arg1 shouldScrollToEffect:(BOOL)arg2 shouldSelectEffect:(BOOL)arg3 completion:(id /* block */)arg4;
- (BOOL)checkEffectInUsed:(id)arg0;
- (void)updateLivePanelEffect:(id)arg0 isApplied:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)currentEffectId;
- (id)getEffectInCategory:(id)arg0 effectId:(id)arg1;
- (void)getActivityEffects:(id /* block */)arg0;
- (void)getCategoryEffects:(id)arg0 completion:(id /* block */)arg1;
- (id)effectPanelExtraInfo;
- (void)insertEffectToHotTabFront:(id)arg0;
- (void)changerEffectItemToImage:(id)arg0 effect:(id)arg1 clickAction:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)changeEffectItemToNormalStatus;
- (BOOL)isEffectAlreadyShown:(id)arg0;
- (void)interactionModeStartedWithLayout:(id)arg0;
- (void)interactionModeEndedWithLayout:(id)arg0;
- (void)setupFaceEffectView;
- (void)setupFaceEffectService;
- (void)loadFaceEffectsIfNeed:(id /* block */)arg0;
- (void)setupToolbarItem;
- (void)bindMultiService;
- (void)recordFaceEffectSceneAppearTime;
- (void)trackLastEffectUseTime;
- (void)trackLastEffectUseTimeForMutiScene;
- (void)recordFaceEffectSceneDisAppearTime;
- (void)stopFaceEffectTurbo;
- (void)applyInitialEffectIfNeed;
- (void)hideFaceAlertView;
- (void)setFaceEffectService:(id)arg0;
- (id)faceEffectService;
- (BOOL)isEffectFavor:(id)arg0;
- (id)buttonModelList;
- (id)previewEffect;
- (void)setFaceEffectView:(id)arg0;
- (void)setFaceAlertView:(id)arg0;
- (id)faceAlertView;
- (void)anchorVideoPlayWillBegin;
- (void)anchorVideoPlayWillEnd;
- (void)setReportHelper:(id)arg0;
- (void)setEffectOriginReporter:(id)arg0;
- (id)effectOriginReporter;
- (void)setInitialEffect:(id)arg0;
- (void)setTrickyEffect:(id)arg0;
- (void)setBattleEffect:(id)arg0;
- (void)setOriginFrameReportCount:(long long)arg0;
- (void)setInLinkMicMode:(BOOL)arg0;
- (void)setInPKMode:(BOOL)arg0;
- (id)previewHandler;
- (void)setLastAigcBgEffectStartUseTime:(double)arg0;
- (void)setFaceEffectItem:(id)arg0;
- (void)onFaceEffectItemTapped;
- (void)showFaceEffectView;
- (id)faceEffectItem;
- (id)faceEffectView;
- (void)trackEffectPanelDidShowed:(double)arg0 scene:(id)arg1;
- (BOOL)showLinkageEffectEnable;
- (id)linkageEffectTip;
- (BOOL)linkageEffectSwitchOn;
- (void)updateLinkageEffectInUsed:(id)arg0;
- (void)showEffectTips;
- (BOOL)enableEffectPreview;
- (void)trackEffectPanelClick;
- (id)effectModelOfIndexPath:(id)arg0;
- (BOOL)aigcBgImagesReady:(id)arg0;
- (id)epConfig;
- (void)trackEffectSearch:(id)arg0 startTime:(double)arg1 error:(id)arg2;
- (void)doRemoveFaceEffect;
- (id)faceEffectCategoryList;
- (id)trickyEffect;
- (BOOL)shouldShowEffectRender;
- (void)doSelectEffect:(id)arg0;
- (BOOL)inLinkMicMode;
- (BOOL)inPKMode;
- (BOOL)isEnableCategoryLoad;
- (void)stopAigcBgRender:(id)arg0;
- (void)stopOriginFrameReport;
- (void)removeAllDetectHandler;
- (void)updateGestureAndSpeechRecognition:(id)arg0;
- (void)applyFaceEffect:(id)arg0;
- (void)addFaceDetectHandlerIfNeeded:(id)arg0;
- (void)startRenderAigcBg:(id)arg0;
- (void)setLastEffectStartUseTime:(double)arg0;
- (void)setLastEffectStartUseTimeForMutiScene:(double)arg0;
- (void)startOriginFrameReport:(id)arg0;
- (void)trackAnchorSelectEffect:(id)arg0;
- (void)showFaceAlertViewIfNeed;
- (BOOL)canShowFaceAlertView;
- (long long)originFrameReportCount;
- (id)uploadedLinkageEffect;
- (void)setUploadedLinkageEffect:(id)arg0;
- (double)lastAigcBgEffectStartUseTime;
- (id)initialEffect;
- (BOOL)isEffectTurboStart;
- (void)setIsEffectTurboStart:(BOOL)arg0;
- (void)startFaceEffectTurboIfNeed;
- (void)removeOtherEffect:(id)arg0 scene:(long long)arg1;
- (void)applyOtherEffect:(id)arg0 scene:(long long)arg1;
- (id)battleEffect;
- (void)openPanelAtTab:(id)arg0 effectID:(id)arg1 shouldScrollToEffect:(BOOL)arg2 shouldSelectEffect:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)didSelectEffectAtIndexPath:(id)arg0;
- (void)setMultiCoreParams:(id)arg0;
- (void)setLinkageEffectSwitchOn:(BOOL)arg0;
- (void)setLinkageEffectTip:(id)arg0;
- (double)lastEffectStartUseTime;
- (id)aigcBgGenerateSelectedKeyword;
- (double)lastEffectStartUseTimeForMutiScene;
- (id)multiCoreParams;
- (void)onEffectListLoadingFor:(id)arg0 indexPath:(id)arg1 completion:(id /* block */)arg2;
- (void)onEffectDownloadAtIndexPath:(id)arg0 progress:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)didSearchTextChanged:(id)arg0 completion:(id /* block */)arg1;
- (void)onRemoveEffectBtnTapped;
- (void)didSelectCategoryAtIndex:(long long)arg0;
- (void)didTappedItemAtIndexPath:(id)arg0;
- (void)didSelectSearchHashTag:(id)arg0;
- (void)onEffectWillDisplayAtIndexPath:(id)arg0;
- (BOOL)isEffectForbiddenAtIndexPath:(id)arg0;
- (void)didTappedFavorButton:(BOOL)arg0 completion:(id /* block */)arg1;
- (id)getEffectRenderView;
- (void)didHidePreviewView;
- (id)aigcBgprogressTaskResultTip;
- (void)aigcBgGenerateButtonDidClick:(id)arg0 keyword:(id)arg1;
- (void)aigcBgReSelectBtnClicked:(id)arg0;
- (void)aigcBgGenerateConfirmBtnClicked;
- (BOOL)shouldShowLinkageButton;
- (void)onEffectiveUseScheduled;
- (void)onAigcBgEffectiveUseScheduled;
- (void)useRecommandEffect:(id)arg0 isPK:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setEpConfig:(id)arg0;
- (void)setPreviewHandler:(id)arg0;
- (id)interationDataCache;
- (void)setInterationDataCache:(id)arg0;
- (void).cxx_destruct;
- (id)monitor;
- (id)currentEffect;
- (void)setMonitor:(id)arg0;
- (void)dealloc;
- (void)messageReceived:(id)arg0;
- (id)searchModel;

@end
