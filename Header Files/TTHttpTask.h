//
//     Generated by private class-dump
//

@class NSString;

@interface TTHttpTask : NSObject <BDARVCancelableTask> {
    BOOL _skipSSLCertificateError;
    BOOL _isStreamingTask;
    BOOL _enableHttpCache;
    BOOL _enableCustomizedCookie;
    BOOL _sentAlready;
    unsigned int _requestTypeFlags;
    long long _state;
    double _recvHeaderTimeout;
    double _readDataTimeout;
    double _protectTimeout;
    double _timeoutInterval;
    long long _loadFlags;
    NSString *_originalHost;
    NSString *_dispatchedHost;
    double _dispatchTime;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) long long state;
@property (nonatomic) double recvHeaderTimeout;
@property (nonatomic) double readDataTimeout;
@property (nonatomic) double protectTimeout;
@property double timeoutInterval;
@property BOOL skipSSLCertificateError;
@property BOOL isStreamingTask;
@property (nonatomic) BOOL enableHttpCache;
@property (nonatomic) BOOL enableCustomizedCookie;
@property long long loadFlags;
@property unsigned int requestTypeFlags;
@property (copy, nonatomic) NSString *originalHost;
@property (copy, nonatomic) NSString *dispatchedHost;
@property (nonatomic) double dispatchTime;
@property (nonatomic) BOOL sentAlready;

- (void)setThrottleNetSpeed:(long long)arg0;
- (void)setRecvHeaderTimeout:(double)arg0;
- (void)setReadDataTimeout:(double)arg0;
- (void)setProtectTimeout:(double)arg0;
- (void)setHeaderCallback:(id /* block */)arg0;
- (BOOL)enableHttpCache;
- (void)setEnableHttpCache:(BOOL)arg0;
- (double)protectTimeout;
- (double)recvHeaderTimeout;
- (double)readDataTimeout;
- (void)setSkipSSLCertificateError:(BOOL)arg0;
- (void)setDispatchedHost:(id)arg0;
- (BOOL)sentAlready;
- (void)setSentAlready:(BOOL)arg0;
- (void)setLoadFlags:(long long)arg0;
- (id)dispatchedHost;
- (long long)loadFlags;
- (void)setIsStreamingTask:(BOOL)arg0;
- (BOOL)skipSSLCertificateError;
- (BOOL)isStreamingTask;
- (BOOL)enableCustomizedCookie;
- (unsigned int)requestTypeFlags;
- (void)setEnableCustomizedCookie:(BOOL)arg0;
- (void)setUploadProgressCallback:(id /* block */)arg0;
- (void)setDownloadProgressCallback:(id /* block */)arg0;
- (void)setRequestTypeFlags:(unsigned int)arg0;
- (void)readDataOfMinLength:(unsigned long long)arg0 maxLength:(unsigned long long)arg1 timeout:(double)arg2 completionHandler:(id /* block */)arg3;
- (void)setTimeoutInterval:(double)arg0;
- (void)resume;
- (void).cxx_destruct;
- (long long)state;
- (void)suspend;
- (void)setPriority:(float)arg0;
- (double)timeoutInterval;
- (id)request;
- (void)cancel;
- (void)setOriginalHost:(id)arg0;
- (id)originalHost;
- (double)dispatchTime;
- (void)setDispatchTime:(double)arg0;

@end
