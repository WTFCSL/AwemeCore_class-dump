//
//     Generated by private class-dump
//

@class AWEAssetModel, NSArray, IESMMVideoDataClipRange, RACSubject, AWEAIVideoClipManager, ACCEditClipAssetsViewModel, NSString, NSObject, RACSignal, AVAsset;
@protocol ACCEditServiceProtocol, ACCEditVideoDataProtocol;

@interface AWEVideoEditClipViewModel : ACCEditViewModel <ACCEditClipV1ServiceProtocol> {
    BOOL _isAiMode;
    BOOL _isRangeMode;
    BOOL _isRecordVideo;
    BOOL _deselectMusic;
    BOOL _isCliping;
    BOOL _needReloadPoints;
    BOOL _isSingleAsset;
    BOOL _isCurrentAssetModelReshooted;
    BOOL _hasReshoot;
    BOOL _needRebuildAIClip;
    BOOL _backupVideoMuted;
    AWEAIVideoClipManager *_aiClipManager;
    long long _currentIndex;
    unsigned long long _editMode;
    unsigned long long _totalRotate;
    NSObject<ACCEditVideoDataProtocol> *_originalVideoData;
    NSObject<ACCEditVideoDataProtocol> *_videoData;
    NSObject<ACCEditVideoDataProtocol> *_clippedVideoData;
    AWEAssetModel *_currentAssetModel;
    NSArray *_sourceAssetArray;
    IESMMVideoDataClipRange *_originMusicClipRange;
    AVAsset *_audioAsset;
    ACCEditClipAssetsViewModel *_assetsViewModel;
    long long _seekIndex;
    long long _rangeInitIndex;
    NSObject<ACCEditVideoDataProtocol> *_rangeBackupVideoData;
    NSArray *_rangeModeBackupSourceAssetArray;
    RACSubject *_updateVideoDataSubject;
    RACSubject *_didAISwitchClickedSubject;
    RACSubject *_didAISwitchFinishedSubject;
    RACSubject *_didAIClipClickedSubject;
    RACSubject *_didClipRangeClickedSubject;
    RACSubject *_didRotateClickedSubject;
    RACSubject *_didSpeedClickedSubject;
    RACSubject *_didDeleteClickedSubject;
    RACSubject *_didReshootClickedSubject;
    RACSubject *_removeAllEditsSubject;
    RACSubject *_updateAIClipStatusSubject;
    RACSubject *_didFinishClipEditSubject;
    RACSubject *_finishClipCheckMusicSubject;
    RACSubject *_startCreateAIClipSubject;
    RACSubject *_endCreateAIClipSubject;
    RACSubject *_videoClipClickedSubject;
    RACSubject *_refreshMusicVolumeAfterAiClipSubject;
    AWEAssetModel *_rangeCurrentAssetModel;
    NSString *_lastAIMD5;
    NSObject<ACCEditVideoDataProtocol> *_reshootVideoData;
    NSObject<ACCEditVideoDataProtocol> *_bufferedVideoData;
    IESMMVideoDataClipRange *_audioRange;
    id<ACCEditServiceProtocol> _editService;
    long long _backupTotalStickerSavePhotos;
    unsigned long long _backupVideoClipMode;
    AVAsset *_backupBgmAsset;
    struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } _currentRange;
}

@property (retain, nonatomic) ACCEditClipAssetsViewModel *assetsViewModel;
@property (retain, nonatomic) AWEAIVideoClipManager *aiClipManager;
@property (nonatomic) BOOL isSingleAsset;
@property (nonatomic) BOOL isAiMode;
@property (nonatomic) BOOL isRecordVideo;
@property (nonatomic) BOOL isCurrentAssetModelReshooted;
@property (nonatomic) BOOL hasReshoot;
@property (nonatomic) BOOL deselectMusic;
@property (nonatomic) BOOL isCliping;
@property (nonatomic) long long currentIndex;
@property (nonatomic) long long seekIndex;
@property (nonatomic) long long rangeInitIndex;
@property (nonatomic) unsigned long long editMode;
@property (nonatomic) unsigned long long totalRotate;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *videoData;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *rangeBackupVideoData;
@property (retain, nonatomic) AWEAssetModel *currentAssetModel;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *originalVideoData;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *clippedVideoData;
@property (retain, nonatomic) NSArray *sourceAssetArray;
@property (retain, nonatomic) NSArray *rangeModeBackupSourceAssetArray;
@property (retain, nonatomic) IESMMVideoDataClipRange *originMusicClipRange;
@property (retain, nonatomic) RACSubject *updateVideoDataSubject;
@property (retain, nonatomic) RACSubject *didAISwitchClickedSubject;
@property (retain, nonatomic) RACSubject *didAISwitchFinishedSubject;
@property (retain, nonatomic) RACSubject *didAIClipClickedSubject;
@property (retain, nonatomic) RACSubject *didClipRangeClickedSubject;
@property (retain, nonatomic) RACSubject *didRotateClickedSubject;
@property (retain, nonatomic) RACSubject *didSpeedClickedSubject;
@property (retain, nonatomic) RACSubject *didDeleteClickedSubject;
@property (retain, nonatomic) RACSubject *didReshootClickedSubject;
@property (retain, nonatomic) RACSubject *removeAllEditsSubject;
@property (retain, nonatomic) RACSubject *updateAIClipStatusSubject;
@property (retain, nonatomic) RACSubject *didFinishClipEditSubject;
@property (retain, nonatomic) RACSubject *finishClipCheckMusicSubject;
@property (retain, nonatomic) RACSubject *startCreateAIClipSubject;
@property (retain, nonatomic) RACSubject *endCreateAIClipSubject;
@property (retain, nonatomic) RACSubject *videoClipClickedSubject;
@property (retain, nonatomic) RACSubject *refreshMusicVolumeAfterAiClipSubject;
@property (nonatomic) BOOL isRangeMode;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } currentRange;
@property (retain, nonatomic) AWEAssetModel *rangeCurrentAssetModel;
@property (retain, nonatomic) NSString *lastAIMD5;
@property (nonatomic) BOOL needRebuildAIClip;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *reshootVideoData;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *bufferedVideoData;
@property (retain, nonatomic) AVAsset *audioAsset;
@property (retain, nonatomic) IESMMVideoDataClipRange *audioRange;
@property (retain, nonatomic) id<ACCEditServiceProtocol> editService;
@property (nonatomic) long long backupTotalStickerSavePhotos;
@property (nonatomic) unsigned long long backupVideoClipMode;
@property (retain, nonatomic) AVAsset *backupBgmAsset;
@property (nonatomic) BOOL backupVideoMuted;
@property (readonly, nonatomic) BOOL hasChanged;
@property (readonly, nonatomic) BOOL hasMusic;
@property (nonatomic) BOOL needReloadPoints;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } seekTime;
@property (readonly, nonatomic) RACSignal *updateVideoDataSignal;
@property (readonly, nonatomic) RACSignal *didAISwitchClickedSignal;
@property (readonly, nonatomic) RACSignal *didAISwitchFinishedSignal;
@property (readonly, nonatomic) RACSignal *didAIClipClickedSignal;
@property (readonly, nonatomic) RACSignal *didClipRangeClickedSignal;
@property (readonly, nonatomic) RACSignal *didRotateClickedSignal;
@property (readonly, nonatomic) RACSignal *didSpeedClickedSignal;
@property (readonly, nonatomic) RACSignal *didDeleteClickedSignal;
@property (readonly, nonatomic) RACSignal *didReshootClickedSignal;
@property (readonly, nonatomic) RACSignal *updateAIClipStatusSignal;
@property (readonly, nonatomic) RACSignal *startCreateAIClipSignal;
@property (readonly, nonatomic) RACSignal *endCreateAIClipSignal;
@property (readonly, nonatomic) RACSignal *removeAllEditsSignal;
@property (readonly, nonatomic) RACSignal *didFinishClipEditSignal;
@property (readonly, nonatomic) RACSignal *finishClipCheckMusicSignal;
@property (readonly, nonatomic) RACSignal *videoClipClickedSignal;
@property (readonly, nonatomic) RACSignal *refreshMusicVolumeAfterAiClipSignal;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (double)videoMinSeconds;
+ (double)videoMaxSeconds;
+ (id)degreeOfRotateType:(unsigned long long)arg0;
+ (id)p_errorWithCode:(long long)arg0 message:(id)arg1;

- (id)videoData;
- (void)setVideoData:(id)arg0;
- (id)publishModel;
- (void)updateVideoData:(id)arg0;
- (id)audioRange;
- (void)setAudioRange:(id)arg0;
- (id)editService;
- (void)setEditService:(id)arg0;
- (double)videoMinSeconds;
- (double)videoMaxSeconds;
- (BOOL)hasChanged;
- (void)setSourceAssetArray:(id)arg0;
- (id)removeAllEditsSignal;
- (id)didFinishClipEditSignal;
- (void)updateInputData;
- (void)sendVideoClipClickedSignal;
- (BOOL)isSingleAsset;
- (BOOL)isCliping;
- (id)finishClipCheckMusicSignal;
- (id)videoClipClickedSignal;
- (id)startCreateAIClipSignal;
- (id)endCreateAIClipSignal;
- (id)refreshMusicVolumeAfterAiClipSignal;
- (BOOL)deselectMusic;
- (id)sourceAssetArray;
- (id)originalVideoData;
- (id)currentAssetModel;
- (void)p_resetMediaTypeAssetArray:(id)arg0;
- (BOOL)isRecordVideo;
- (id)findAVAssetInVideoData:(id)arg0 withAssetModel:(id)arg1;
- (void)updateAVAssetForSourceAssetArray:(id)arg0 videoData:(id)arg1;
- (void)setAiClipManager:(id)arg0;
- (id)aiClipManager;
- (void)p_handleAIVideoClipGenerateFailed:(id)arg0;
- (void)p_updateBgmWithVideoData:(id)arg0;
- (void)updateRotateForAIVideoData:(id)arg0;
- (void)updateVideoData:(id)arg0 isBrandNewAiData:(BOOL)arg1 forceUPdateUI:(BOOL)arg2;
- (id)degreeOfRotateType:(unsigned long long)arg0;
- (id)assetsViewModel;
- (id)p_errorWithCode:(long long)arg0 message:(id)arg1;
- (BOOL)isAdvancedEditOn;
- (void)setOriginalVideoData:(id)arg0;
- (BOOL)backupVideoMuted;
- (id)assetModelWithAsset:(id)arg0 fragmentInfo:(id)arg1;
- (unsigned long long)backupVideoClipMode;
- (long long)backupTotalStickerSavePhotos;
- (id)backupBgmAsset;
- (BOOL)hasReshoot;
- (double)videoRateForAssetModel:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })scaleTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 scale:(double)arg1;
- (BOOL)CMTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 isEqualTo:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (BOOL)CMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 isEqualTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)setCurrentAssetModel:(id)arg0;
- (void)setHasReshoot:(BOOL)arg0;
- (id)restoreSourceAssetArrayFromVideoData:(id)arg0;
- (void)setBackupVideoClipMode:(unsigned long long)arg0;
- (void)setBackupTotalStickerSavePhotos:(long long)arg0;
- (void)setBackupBgmAsset:(id)arg0;
- (void)setBackupVideoMuted:(BOOL)arg0;
- (id)bgmAssetInVideo:(id)arg0 withAudio:(id)arg1;
- (BOOL)isCurrentAssetModelReshooted;
- (void)setIsCurrentAssetModelReshooted:(BOOL)arg0;
- (void)setIsCliping:(BOOL)arg0;
- (void)setAssetsViewModel:(id)arg0;
- (void)sendRemoveAllEditsSignal;
- (void)updateIsCliping:(BOOL)arg0;
- (void)restoreAudioAssetsFromVideo:(id)arg0 toVideo:(id)arg1 bgmAsset:(id)arg2;
- (void)createAIClipVideoCompletion:(id /* block */)arg0;
- (void)createNormalVideoDurationUnlimitedByCompletion:(id /* block */)arg0;
- (void)createAIClipVideoWithMusicRange:(struct _HTSAudioRange { double x0; double x1; })arg0 Completion:(id /* block */)arg1;
- (id)didAISwitchFinishedSignal;
- (void)updateVolumnWithVideoData:(id)arg0;
- (void)copyClipInfoFromVideoData:(id)arg0 toVideoData:(id)arg1 withoutBgm:(BOOL)arg2;
- (void)setBufferedVideoData:(id)arg0;
- (id)bufferedVideoData;
- (id)reshootVideoData;
- (void)setReshootVideoData:(id)arg0;
- (id)updateVideoDataSubject;
- (id)updateVideoDataSignal;
- (id)removeAllEditsSubject;
- (void)setUpdateVideoDataSubject:(id)arg0;
- (void)setRemoveAllEditsSubject:(id)arg0;
- (void)resetAudioAndClipInfoOfClippedVideoWithVideoData:(id)arg0;
- (void)p_createNormalVideoWithLimitDuration:(BOOL)arg0 withoutBgm:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setSeekIndex:(long long)arg0;
- (id)startCreateAIClipSubject;
- (id)endCreateAIClipSubject;
- (void)p_createAIClipVideoCompletion:(id /* block */)arg0;
- (void)p_createAIClipVideoWithMusicRange:(struct _HTSAudioRange { double x0; double x1; })arg0 completion:(id /* block */)arg1;
- (id)didFinishClipEditSubject;
- (id)finishClipCheckMusicSubject;
- (id)videoClipClickedSubject;
- (id)refreshMusicVolumeAfterAiClipSubject;
- (void)resetAudioAndClipInfoOfClippedVideoWithVideoData:(id)arg0 withoutBgm:(BOOL)arg1;
- (id)clippedVideoData;
- (void)setIsAiMode:(BOOL)arg0;
- (void)sendRefreshMusicVolumeAfterAiClipSignal;
- (void)p_createNormalVideoWithSourceAssetModels:(id)arg0 isLimitDuration:(BOOL)arg1 withoutBgm:(BOOL)arg2 completion:(id /* block */)arg3;
- (BOOL)isRangeMode;
- (void)setNeedReloadPoints:(BOOL)arg0;
- (void)setIsSingleAsset:(BOOL)arg0;
- (id)rangeCurrentAssetModel;
- (long long)seekIndex;
- (id)didAISwitchClickedSubject;
- (id)didAISwitchFinishedSubject;
- (id)didAIClipClickedSubject;
- (id)didClipRangeClickedSubject;
- (id)didRotateClickedSubject;
- (id)didSpeedClickedSubject;
- (id)didDeleteClickedSubject;
- (id)didReshootClickedSubject;
- (id)updateAIClipStatusSubject;
- (id)findAssetModelInAssetArray:(id)arg0 withAssetModel:(id)arg1;
- (void)sendDidFinishClipEditSignal:(BOOL)arg0;
- (void)sendFinishClipCheckMusicSignal;
- (void)p_resetViewModel;
- (struct CGSize { double x0; double x1; })p_convertSize:(struct CGSize { double x0; double x1; })arg0 toLimitSize:(struct CGSize { double x0; double x1; })arg1;
- (id)didAISwitchClickedSignal;
- (id)didAIClipClickedSignal;
- (id)didClipRangeClickedSignal;
- (id)didRotateClickedSignal;
- (id)didSpeedClickedSignal;
- (id)didDeleteClickedSignal;
- (id)didReshootClickedSignal;
- (id)updateAIClipStatusSignal;
- (BOOL)isAiMode;
- (void)setIsRangeMode:(BOOL)arg0;
- (void)setIsRecordVideo:(BOOL)arg0;
- (void)setDeselectMusic:(BOOL)arg0;
- (BOOL)needReloadPoints;
- (unsigned long long)totalRotate;
- (void)setTotalRotate:(unsigned long long)arg0;
- (void)setClippedVideoData:(id)arg0;
- (id)originMusicClipRange;
- (void)setOriginMusicClipRange:(id)arg0;
- (long long)rangeInitIndex;
- (void)setRangeInitIndex:(long long)arg0;
- (id)rangeBackupVideoData;
- (void)setRangeBackupVideoData:(id)arg0;
- (id)rangeModeBackupSourceAssetArray;
- (void)setRangeModeBackupSourceAssetArray:(id)arg0;
- (void)setDidAISwitchClickedSubject:(id)arg0;
- (void)setDidAISwitchFinishedSubject:(id)arg0;
- (void)setDidAIClipClickedSubject:(id)arg0;
- (void)setDidClipRangeClickedSubject:(id)arg0;
- (void)setDidRotateClickedSubject:(id)arg0;
- (void)setDidSpeedClickedSubject:(id)arg0;
- (void)setDidDeleteClickedSubject:(id)arg0;
- (void)setDidReshootClickedSubject:(id)arg0;
- (void)setUpdateAIClipStatusSubject:(id)arg0;
- (void)setDidFinishClipEditSubject:(id)arg0;
- (void)setFinishClipCheckMusicSubject:(id)arg0;
- (void)setStartCreateAIClipSubject:(id)arg0;
- (void)setEndCreateAIClipSubject:(id)arg0;
- (void)setVideoClipClickedSubject:(id)arg0;
- (void)setRefreshMusicVolumeAfterAiClipSubject:(id)arg0;
- (void)setRangeCurrentAssetModel:(id)arg0;
- (id)lastAIMD5;
- (void)setLastAIMD5:(id)arg0;
- (BOOL)needRebuildAIClip;
- (void)setNeedRebuildAIClip:(BOOL)arg0;
- (void).cxx_destruct;
- (long long)currentIndex;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })currentRange;
- (void)setCurrentIndex:(long long)arg0;
- (void)setCurrentRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (id)initWithServiceProvider:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })seekTime;
- (void)dealloc;
- (unsigned long long)editMode;
- (void)setEditMode:(unsigned long long)arg0;
- (void)setAudioAsset:(id)arg0;
- (id)audioAsset;
- (BOOL)hasMusic;

@end
