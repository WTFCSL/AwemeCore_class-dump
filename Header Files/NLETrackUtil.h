//
//     Generated by private class-dump
//

@interface NLETrackUtil : NSObject

+ (BOOL)isMVTypeOfModle:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })mainTrackOfModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (long long)getMaxEndTimeForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0;
+ (long long)getMaxEndTimeExcludeNotFillMaxSticker:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (id)assetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 inVideoData:(id)arg1 resourceFinder:(id)arg2 assetMap:(id)arg3;
+ (void)removeAssetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 assetMap:(id)arg1;
+ (id)assetKeyForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
+ (struct vector<std::shared_ptr<cut::model::NLETrackSlot>, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLETrackSlot> *, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; } x2; })getRelativeKeyframes:(struct shared_ptr<const cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 inTrack:(struct shared_ptr<const cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
+ (id)getRGBAArrayFromARGBInt:(unsigned int)arg0;
+ (id)colorFromUInt:(unsigned int)arg0;
+ (struct vector<std::shared_ptr<cut::model::NLEFilter>, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLEFilter> *, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; } x2; })sortedFiltersInTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0;
+ (float)getScaleForSlot:(struct shared_ptr<const cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 ofTrack:(struct shared_ptr<const cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 inModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg2 videoSize:(struct CGSize { double x0; double x1; })arg3;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })getSourceTimeRange:(struct shared_ptr<cut::model::NLESegment> { struct NLESegment *x0; struct __shared_weak_count *x1; })arg0;
+ (id)stringArrayFromVector:(const void *)arg0;
+ (struct vector<NodeChangeInfo, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; struct NodeChangeInfo *x1; struct __compressed_pair<NodeChangeInfo *, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; } x2; })renewDiffTracks:(void *)arg0 withModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1;
+ (struct CGSize { double x0; double x1; })calculateCanvasSize:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (long long)getMaxEndTimeExcludeDisableNode:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (unsigned int)colorFromRGBAArray:(id)arg0;
+ (id)assetKeyForReverseVideoSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
+ (struct vector<std::shared_ptr<cut::model::NLETrack>, std::allocator<std::shared_ptr<cut::model::NLETrack>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLETrack> *, std::allocator<std::shared_ptr<cut::model::NLETrack>>> { void *x0; } x2; })allTracksOfType:(int)arg0 InModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1;
+ (struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })getSlotForName:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg0 inTracks:(void *)arg1;
+ (struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })firstTrackSlotInModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0 WithTrackType:(int)arg1 resourceType:(int)arg2;
+ (struct vector<std::shared_ptr<cut::model::NLETrackSlot>, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLETrackSlot> *, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; } x2; })trackSlotInModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0 WithTrackType:(int)arg1 resourceType:(int)arg2;
+ (struct vector<std::shared_ptr<cut::model::NLETrackSlot>, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLETrackSlot> *, std::allocator<std::shared_ptr<cut::model::NLETrackSlot>>> { void *x0; } x2; })allTrackSlotsOfType:(int)arg0 inTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
+ (BOOL)isBingoTypeOfModle:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
+ (struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })slotOfName:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg0 InModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1;
+ (id)getExtraInResource:(struct shared_ptr<cut::model::NLEResourceNode> { struct NLEResourceNode *x0; struct __shared_weak_count *x1; })arg0 ForKey:(id)arg1;
+ (struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })getSlotForName:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg0 withTrackType:(int)arg1 inModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg2;
+ (BOOL)checkResourceNode:(struct shared_ptr<cut::model::NLEResourceNode> { struct NLEResourceNode *x0; struct __shared_weak_count *x1; })arg0 inTracks:(void *)arg1;
+ (BOOL)isIntersectBetweend:(struct shared_ptr<const cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg0 with:(struct shared_ptr<const cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1;

@end
