//
//     Generated by private class-dump
//

@interface WCTDatabase : WCTInterface {
    void *_database;
}

+ (id)DefaultBasicConfigName;
+ (id)DefaultCipherConfigName;
+ (id)DefaultTraceConfigName;
+ (id)DefaultCheckpointConfigName;
+ (id)DefaultSynchronousConfigName;
+ (id)DefaultTokenizeConfigName;
+ (void)PurgeFreeHandlesInAllDatabases;
+ (void)load;

- (void)setConfig:(struct function<bool (std::shared_ptr<WCDB::Handle> &, WCDB::Error &)> { struct __value_func<bool (std::shared_ptr<WCDB::Handle> &, WCDB::Error &)> { struct type { unsigned char x0[24]; } x0; void *x1; } x0; })arg0 forName:(id)arg1 withOrder:(int)arg2;
- (void)setConfig:(struct function<bool (std::shared_ptr<WCDB::Handle> &, WCDB::Error &)> { struct __value_func<bool (std::shared_ptr<WCDB::Handle> &, WCDB::Error &)> { struct type { unsigned char x0[24]; } x0; void *x1; } x0; })arg0 forName:(id)arg1;
- (void)setSynchronousFull:(BOOL)arg0;
- (id)initWithExistingTag:(int)arg0;
- (void)setCipherKey:(id)arg0;
- (void)setCipherKey:(id)arg0 andCipherPageSize:(int)arg1;
- (BOOL)canOpen;
- (BOOL)canOpenWithError:(id *)arg0;
- (void)blockade;
- (void)unblockade;
- (void)purgeFreeHandles;
- (BOOL)isBlockaded;
- (void)setTokenizers:(id)arg0;
- (BOOL)removeFilesWithError:(id *)arg0;
- (BOOL)moveFilesToDirectory:(id)arg0 withExtraFiles:(id)arg1 andError:(id *)arg2;
- (BOOL)moveFilesToDirectory:(id)arg0 withError:(id *)arg1;
- (id)getPaths;
- (unsigned long long)getFilesSizeWithError:(id *)arg0;
- (BOOL)backupWithCipher:(id)arg0;
- (BOOL)recoverFromPath:(id)arg0 withPageSize:(int)arg1 backupCipher:(id)arg2 databaseCipher:(id)arg3;
- (void)setPerformanceTrace:(id /* block */)arg0;
- (BOOL)createTableAndIndexesOfName:(id)arg0 withClass:(Class)arg1;
- (BOOL)createVirtualTableOfName:(id)arg0 withClass:(Class)arg1;
- (BOOL)createTableOfName:(id)arg0 withColumnDefList:(const void *)arg1;
- (BOOL)createTableOfName:(id)arg0 withColumnDefList:(const void *)arg1 andConstraintList:(const void *)arg2;
- (BOOL)isTableExists:(id)arg0;
- (BOOL)dropTableOfName:(id)arg0;
- (BOOL)createIndexOfName:(id)arg0 withIndexList:(const void *)arg1 forTable:(id)arg2;
- (BOOL)dropIndexOfName:(id)arg0;
- (BOOL)addColumn:(const void *)arg0 forTable:(id)arg1;
- (id)getTransaction;
- (BOOL)runTransaction:(id /* block */)arg0 event:(id /* block */)arg1;
- (BOOL)runTransaction:(id /* block */)arg0;
- (BOOL)studio_recoverFromPath:(id)arg0 withPageSize:(int)arg1 backupCipher:(id)arg2 databaseCipher:(id)arg3 error:(id *)arg4;
- (id)ecomtim_getAnSafeTransaction;
- (BOOL)isOpened;
- (id)initWithPath:(id)arg0;
- (BOOL)rollbackTransaction;
- (BOOL)beginTransaction;
- (void)close;
- (BOOL)commitTransaction;
- (void)setTag:(int)arg0;
- (void)close:(id /* block */)arg0;
- (void)setTokenizer:(id)arg0;

@end
