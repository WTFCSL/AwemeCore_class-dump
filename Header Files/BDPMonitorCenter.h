//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary;

@interface BDPMonitorCenter : NSObject <BDPRuntimeLifeCycleMessage, BDPBootLifeCycleMessage, BDPContainerLifeCycleMessage, BDPWarmBootMessage, BDPCommonActiveChangeMessage> {
    BOOL _enablePerformanceMonitor;
    NSMutableDictionary *_monitors;
    NSMutableDictionary *_paramBlocks;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *monitors;
@property (retain, nonatomic) NSMutableDictionary *paramBlocks;
@property (nonatomic) BOOL enablePerformanceMonitor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)getMonitorParamseWithUniqueID:(id)arg0 extraParams:(id)arg1 completion:(id /* block */)arg2;
+ (void)handleShareEvent:(id)arg0;
+ (void)handleStoreCommonData:(id)arg0;
+ (id)pr_getMonitorCategoryWithData:(id)arg0 uniqueID:(id)arg1;
+ (void)getMonitorCategoryWithUniqueID:(id)arg0 completion:(id /* block */)arg1;
+ (void)handleKillLevelMemoryWaring:(id)arg0;
+ (void)handleAdShowEvent:(id)arg0;
+ (void)handleRtcEngineCreateEvent:(id)arg0;
+ (void)handleJSLockEvent:(id)arg0;
+ (void)handleGameRecordEvent:(id)arg0;
+ (void)monitorPerformanceWithDuration:(double)arg0 completion:(id /* block */)arg1;
+ (id)sharedInstance;

- (BOOL)enablePerformanceMonitor;
- (void)runningDispatchQueue:(id)arg0 didStopWithUniqueID:(id)arg1;
- (void)registerBusinessMonitor:(id)arg0 forUniqueID:(id)arg1;
- (void)cleanWarmCacheWithUniqueID:(id)arg0;
- (void)addMonitor:(id)arg0 forUniqueID:(id)arg1;
- (void)applicationInterruptionStateChange:(BOOL)arg0 uniqueID:(id)arg1;
- (void)applicationLoadFinishWithUniqueID:(id)arg0 error:(id)arg1 content:(id)arg2 extraParams:(id)arg3;
- (void)applicationReadyToBootWithUniqueID:(id)arg0 schema:(id)arg1 launchParam:(id)arg2;
- (void)applicationWorkBeforeCloseWithUniqueID:(id)arg0;
- (void)triggerOnceFPSMonitorTaskWithUniqueID:(id)arg0 caller:(id)arg1;
- (void)stopOnceFPSMonitorTaskWithUniqueID:(id)arg0;
- (void)addFPSMonitorWithUniqueID:(id)arg0;
- (void)monitorAlertInfo:(id)arg0 withUniqueID:(id)arg1;
- (void)commonBecomeActive:(BOOL)arg0 forUniqueID:(id)arg1;
- (void)flushMonitorInfoWithUniqueID:(id)arg0;
- (void)runningDispatchQueueDidFatalWithUniqueID:(id)arg0;
- (id)bdp_queue;
- (id)bdp_nativeGameMonitorDatas;
- (void)registerNativeGameMonitorData:(id)arg0 uniqueID:(id)arg1;
- (void)removeNativeGameMonitorDataWithUniqueID:(id)arg0;
- (void)resisterNativeGameMessage;
- (void)unResisterNativeGameMessage;
- (BOOL)enableTriggerOnceFPSMonitorTaskWithUniqueID:(id)arg0;
- (id)FPSMonitorWithTimes:(long long)arg0 caller:(id)arg1 uniqueID:(id)arg2;
- (id)paramBlocks;
- (void)reportFPSMonitorWithData:(id)arg0 frameLossRate:(float)arg1 state:(id)arg2 uniqueID:(id)arg3;
- (void)reportAlertMonitorWithData:(id)arg0 alertCount:(long long)arg1 uniqueID:(id)arg2;
- (BOOL)frameSchedulerCallBackOnOtherQueue:(id)arg0;
- (id)frameSchedulerCallBackConfig;
- (void)reportCPUMonitorWithData:(id)arg0 jscDatas:(id)arg1 uniqueID:(id)arg2;
- (void)reportGPUMonitorWithData:(id)arg0 uniqueID:(id)arg1;
- (void)reportMemoryMonitorWithData:(id)arg0 sizeDatas:(id)arg1 uniqueID:(id)arg2;
- (void)reportBatteryMonitorWithData:(double)arg0 capacityDelta:(double)arg1 batteryStatus:(long long)arg2 batteryLow:(BOOL)arg3 thermalStatus:(long long)arg4 count:(long long)arg5 uniqueID:(id)arg6;
- (void)event:(id)arg0 attributes:(id)arg1 uniqueID:(id)arg2;
- (void)registerTrackerParamsWithUniqueID:(id)arg0 paramsBlock:(id /* block */)arg1;
- (void)setEnablePerformanceMonitor:(BOOL)arg0;
- (void)setParamBlocks:(id)arg0;
- (void).cxx_destruct;
- (void)setMonitors:(id)arg0;
- (id)_init;
- (id)monitors;
- (void)dealloc;

@end
