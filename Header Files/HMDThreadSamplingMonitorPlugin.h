//
//     Generated by private class-dump
//

@class NSDictionary, NSString, NSObject;
@protocol OS_dispatch_source;

@interface HMDThreadSamplingMonitorPlugin : NSObject <HMDThreadMonitorPluginProtocol> {
    BOOL _isRunning;
    BOOL _enableBacktrace;
    long long _sampleInterval;
    NSObject<OS_dispatch_source> *_sampleTimer;
    long long _threadCountThreshold;
    long long _specialThreadThreshold;
    NSDictionary *_specialThreadWhiteList;
}

@property (nonatomic) BOOL isRunning;
@property (nonatomic) long long sampleInterval;
@property (nonatomic) BOOL enableBacktrace;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *sampleTimer;
@property (nonatomic) long long threadCountThreshold;
@property (nonatomic) long long specialThreadThreshold;
@property (copy, nonatomic) NSDictionary *specialThreadWhiteList;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)pluginInstance;

- (id)sampleTimer;
- (void)setSampleTimer:(id)arg0;
- (void)startTimerSampling;
- (void)stopTimerSampling;
- (BOOL)enableBacktrace;
- (void)setEnableBacktrace:(BOOL)arg0;
- (id)specialThreadWhiteList;
- (void)setSpecialThreadWhiteList:(id)arg0;
- (long long)threadCountThreshold;
- (void)setThreadCountThreshold:(long long)arg0;
- (long long)specialThreadThreshold;
- (void)setSpecialThreadThreshold:(long long)arg0;
- (void)collectThreadInfo;
- (void)uploadAllThreadCount:(id)arg0;
- (void)uploadAllThreadBacktracesExceptionType:(id)arg0 specialThreadID:(unsigned int)arg1 extInfo:(id)arg2;
- (void)setupThreadConfig:(id)arg0;
- (void)setIsRunning:(BOOL)arg0;
- (BOOL)isRunning;
- (id)init;
- (void).cxx_destruct;
- (void)stop;
- (long long)sampleInterval;
- (void)setSampleInterval:(long long)arg0;
- (void)start;

@end
