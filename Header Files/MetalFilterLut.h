//
//     Generated by private class-dump
//

@class MTKTextureLoader;
@protocol MTLTexture, MTLBuffer;

@interface MetalFilterLut : MetalFilterDefault {
    MTKTextureLoader *loader;
    id<MTLTexture> lutTexture;
    id<MTLTexture> lutTextureHdr;
    struct CGImage { } *curImage;
    struct CGImage { } *curImageHdr;
    unsigned int curColorConversionType;
    id<MTLBuffer> curColorConversionBuffer;
    long long curYCbCrMatrixType;
    int _initErrorSdr;
    int _initErrorHdr;
}

@property (nonatomic) int initErrorSdr;
@property (nonatomic) int initErrorHdr;

- (id)getFragmentShader;
- (id)getEffectPatameterStr;
- (int)initError;
- (long long)renderBefore:(id)arg0 frame:(struct MetalTextureBuffer { void /* function */ **x0; struct __CVBuffer *x1; void **x2; int *x3; id x4; id x5; id x6; int x7; id x8; id x9; id x10; int x11; int x12; int x13; int x14; int x15; void *x16; int x17; id x18; float x19; int x20; int x21; id x22; long long x23; long long x24; } *)arg1;
- (void)setInitErrorSdr:(int)arg0;
- (void)setInitErrorHdr:(int)arg0;
- (int)initErrorSdr;
- (int)initErrorHdr;
- (void)checkColorConversion:(unsigned int)arg0 YCbCrMatrixAttachment:(void *)arg1;
- (struct VideoFrame { struct VideoFrameBuffer *x0; } *)process:(struct VideoFrame { struct VideoFrameBuffer *x0; } *)arg0;
- (void).cxx_destruct;
- (void)setEffect:(id)arg0;
- (void)dealloc;
- (id)initWithDictionary:(id)arg0 index:(int)arg1;

@end
