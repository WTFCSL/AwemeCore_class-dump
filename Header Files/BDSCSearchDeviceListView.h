//
//     Generated by private class-dump
//

@class NSTimer, UIView, NSArray, BDSCLoadingView, BDByteScreenCastTracker, NSString, UIButton, UITableView, NSMutableArray, BDSCSearchListUIModel, UILabel, NSIndexPath;
@protocol BDSCSearchDeviceListViewDelegate, BDSCSearchDeviceNoNetworkViewProtocol, BDSCSearchDeviceLoadingViewProtocol;

@interface BDSCSearchDeviceListView : UIView <UITableViewDataSource, UITableViewDelegate> {
    BOOL _supportDanmaku;
    BOOL _supportClarityLimit;
    BOOL _isLandscape;
    BOOL _foldModeEnable;
    BOOL _newStyle;
    BOOL _isVPNActive;
    BOOL _hasLocalNetworkPermission;
    BOOL _hasResearchCardConfig;
    BOOL _enableDeviceChooseTag;
    BOOL _hasXsg;
    BOOL _isAnimating;
    BOOL _isFold;
    UIView *_topBarContainerView;
    UILabel *_titleLabel;
    BDSCLoadingView *_searchButton;
    UIButton *_helpButton;
    UITableView *_tableView;
    id<BDSCSearchDeviceListViewDelegate> _delegate;
    unsigned long long _searchStatus;
    long long _networkStatus;
    NSArray *_devices;
    BDByteScreenCastTracker *_byteCastTracker;
    unsigned long long _xsgIdentifyStatus;
    BDSCSearchListUIModel *_uiModel;
    UIView<BDSCSearchDeviceLoadingViewProtocol> *_loadingView;
    UIView<BDSCSearchDeviceNoNetworkViewProtocol> *_noNetworkView;
    UIView *_noDeviceView;
    UIView *_noPermissionView;
    UIView *_vpnActiveView;
    NSIndexPath *_lastSelectedIndexPath;
    NSTimer *_lazyStopSearchTimer;
    NSMutableArray *_showedIndexPaths;
    NSArray *_realDevices;
    NSArray *_deviceGroups;
    NSMutableArray *_devicesQueue;
    long long _animationCellCount;
    unsigned long long _searchStatusWaitForIdentify;
    NSArray *_devicesWaitForIdentify;
}

@property (retain, nonatomic) UIView *topBarContainerView;
@property (retain, nonatomic) UILabel *titleLabel;
@property (retain, nonatomic) BDSCLoadingView *searchButton;
@property (retain, nonatomic) UIButton *helpButton;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) UIView<BDSCSearchDeviceLoadingViewProtocol> *loadingView;
@property (retain, nonatomic) UIView<BDSCSearchDeviceNoNetworkViewProtocol> *noNetworkView;
@property (retain, nonatomic) UIView *noDeviceView;
@property (retain, nonatomic) UIView *noPermissionView;
@property (retain, nonatomic) UIView *vpnActiveView;
@property (nonatomic) BOOL hasXsg;
@property (retain, nonatomic) NSIndexPath *lastSelectedIndexPath;
@property (retain, nonatomic) NSTimer *lazyStopSearchTimer;
@property (retain, nonatomic) NSMutableArray *showedIndexPaths;
@property (copy, nonatomic) NSArray *realDevices;
@property (copy, nonatomic) NSArray *deviceGroups;
@property (retain, nonatomic) NSMutableArray *devicesQueue;
@property (nonatomic) long long animationCellCount;
@property (nonatomic) BOOL isAnimating;
@property (nonatomic) unsigned long long searchStatusWaitForIdentify;
@property (copy, nonatomic) NSArray *devicesWaitForIdentify;
@property (nonatomic) BOOL isFold;
@property (weak, nonatomic) id<BDSCSearchDeviceListViewDelegate> delegate;
@property (nonatomic) unsigned long long searchStatus;
@property (nonatomic) long long networkStatus;
@property (copy, nonatomic) NSArray *devices;
@property (retain, nonatomic) BDByteScreenCastTracker *byteCastTracker;
@property (nonatomic) unsigned long long xsgIdentifyStatus;
@property (nonatomic) BOOL supportDanmaku;
@property (nonatomic) BOOL supportClarityLimit;
@property (nonatomic) BOOL isLandscape;
@property (nonatomic) BOOL foldModeEnable;
@property (nonatomic) BOOL newStyle;
@property (nonatomic) BOOL isVPNActive;
@property (nonatomic) BOOL hasLocalNetworkPermission;
@property (nonatomic) BOOL hasResearchCardConfig;
@property (nonatomic) BOOL enableDeviceChooseTag;
@property (retain, nonatomic) BDSCSearchListUIModel *uiModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)removeLoadingView;
- (void)setupSubViews;
- (id)localConfig;
- (BOOL)isFold;
- (void)setIsFold:(BOOL)arg0;
- (BOOL)newStyle;
- (void)setNewStyle:(BOOL)arg0;
- (void)setUiModel:(id)arg0;
- (void)setSupportClarityLimit:(BOOL)arg0;
- (unsigned long long)searchStatus;
- (id)byteCastTracker;
- (void)setXsgIdentifyStatus:(unsigned long long)arg0;
- (void)setFoldModeEnable:(BOOL)arg0;
- (void)setSearchStatus:(unsigned long long)arg0;
- (unsigned long long)xsgIdentifyStatus;
- (void)setByteCastTracker:(id)arg0;
- (void)setHasLocalNetworkPermission:(BOOL)arg0;
- (void)setIsVPNActive:(BOOL)arg0;
- (BOOL)hasLocalNetworkPermission;
- (id)helpButton;
- (void)setHasResearchCardConfig:(BOOL)arg0;
- (id)topBarContainerView;
- (BOOL)supportDanmaku;
- (void)setSupportDanmaku:(BOOL)arg0;
- (BOOL)supportClarityLimit;
- (void)setShowedIndexPaths:(id)arg0;
- (BOOL)failPageShowing;
- (BOOL)onlyApplyOnXsgDevice;
- (id)showedIndexPaths;
- (long long)animationCellCount;
- (void)setAnimationCellCount:(long long)arg0;
- (void)updateListIfNeeded;
- (void)setDevicesWaitForIdentify:(id)arg0;
- (void)setRealDevices:(id)arg0;
- (void)setSearchStatusWaitForIdentify:(unsigned long long)arg0;
- (unsigned long long)searchStatusWaitForIdentify;
- (id)devicesWaitForIdentify;
- (id)realDevices;
- (void)setHelpButton:(id)arg0;
- (id)noDeviceView;
- (id)noNetworkView;
- (id)noPermissionView;
- (id)vpnActiveView;
- (void)setNoNetworkView:(id)arg0;
- (void)setNoDeviceView:(id)arg0;
- (void)setNoPermissionView:(id)arg0;
- (void)setVpnActiveView:(id)arg0;
- (BOOL)enableDeviceChooseTag;
- (void)setEnableDeviceChooseTag:(BOOL)arg0;
- (void)invalidateLazyTimer;
- (void)showLazyLoadingView:(BOOL)arg0;
- (BOOL)isNoNetwork;
- (id)lazyStopSearchTimer;
- (void)setLazyStopSearchTimer:(id)arg0;
- (void)removeNoNetworkView;
- (void)removeNoDeviceView;
- (void)removeNoPermissionView;
- (void)removeVPNActiveView;
- (long long)countOfDevices:(id)arg0;
- (void)forceHideLoadingView;
- (void)stopLoadingIfNeeded;
- (id)generateDeviceModelsWith:(id)arg0;
- (void)constructTableViewDeviceCellWithoutWeaken:(id)arg0;
- (id)searchResultPanelWithSearchResultState:(unsigned long long)arg0;
- (id)cellImageBackgroundModelWith:(id)arg0;
- (id)cellImageBackgroundPlaceholder;
- (id)addTag:(id)arg0 toTagArray:(id)arg1 atIndex:(long long)arg2;
- (BOOL)foldModeEnable;
- (id)deviceModelAt:(id)arg0;
- (void)constructTableViewDeviceCell:(id)arg0;
- (void)foldButtonClick;
- (BOOL)hasXsg;
- (void)setHasXsg:(BOOL)arg0;
- (void)showNoNetworkView;
- (void)showNoPermissionView;
- (void)showVPNActiveView;
- (BOOL)hasResearchCardConfig;
- (BOOL)isShowResearchCard;
- (void)showNoDeviceView;
- (void)helpButtonDidClicked:(id)arg0;
- (void)reStartSearchingByButton:(id)arg0;
- (void)setTopBarContainerView:(id)arg0;
- (void)setDevices:(id)arg0;
- (BOOL)isAnimating;
- (double)margin;
- (id)tableView:(id)arg0 viewForHeaderInSection:(long long)arg1;
- (void)tableView:(id)arg0 willDisplayCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg0;
- (void)tableView:(id)arg0 didSelectRowAtIndexPath:(id)arg1;
- (double)tableView:(id)arg0 heightForHeaderInSection:(long long)arg1;
- (long long)networkStatus;
- (void)setTableView:(id)arg0;
- (long long)tableView:(id)arg0 numberOfRowsInSection:(long long)arg1;
- (void).cxx_destruct;
- (id)tableView;
- (id)devicesQueue;
- (void)setSearchButton:(id)arg0;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (BOOL)isScrolling;
- (id)titleLabel;
- (void)setIsLandscape:(BOOL)arg0;
- (id)searchButton;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)devices;
- (id)delegate;
- (void)setDevicesQueue:(id)arg0;
- (BOOL)isVPNActive;
- (void)setDeviceGroups:(id)arg0;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (BOOL)isLandscape;
- (void)setNetworkStatus:(long long)arg0;
- (id)lastSelectedIndexPath;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setTitleLabel:(id)arg0;
- (void)setIsAnimating:(BOOL)arg0;
- (id)deviceGroups;
- (double)tableView:(id)arg0 heightForFooterInSection:(long long)arg1;
- (id)tableView:(id)arg0 viewForFooterInSection:(long long)arg1;
- (void)setLastSelectedIndexPath:(id)arg0;
- (void)rebuildConstraints;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (void)startLoadingIfNeeded;
- (id)uiModel;
- (void)hideLoadingView;

@end
