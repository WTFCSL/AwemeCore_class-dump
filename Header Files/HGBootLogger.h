//
//     Generated by private class-dump
//

@class NSString, HGTrackerTimingEvent, HGBootStatus;
@protocol HGBootLogDataSource;

@interface HGBootLogger : NSObject {
    BOOL _loadDurationShouldClear;
    BOOL _shouldEventMPClose;
    HGTrackerTimingEvent *_loadTimingEvent;
    HGTrackerTimingEvent *_launchTimingEvent;
    HGBootStatus *_bootStatus;
    NSString *_exitType;
    double _launchTime;
    NSString *_loadErrorCode;
    id<HGBootLogDataSource> _dataSource;
    NSString *_loadErrMsg;
    unsigned long long _loadResultType;
    double _loadEndTime;
    double _domReadyTime;
    unsigned long long _timeOfMpLaunch;
    unsigned long long _durationOfMpLaunch;
}

@property (copy, nonatomic) NSString *loadErrorCode;
@property (weak, nonatomic) id<HGBootLogDataSource> dataSource;
@property (copy, nonatomic) NSString *loadErrMsg;
@property (nonatomic) unsigned long long loadResultType;
@property (nonatomic) double loadEndTime;
@property (nonatomic) double domReadyTime;
@property (nonatomic) BOOL shouldEventMPClose;
@property (nonatomic) BOOL loadDurationShouldClear;
@property (retain, nonatomic) HGTrackerTimingEvent *loadTimingEvent;
@property (retain, nonatomic) HGTrackerTimingEvent *launchTimingEvent;
@property (retain, nonatomic) HGBootStatus *bootStatus;
@property (copy, nonatomic) NSString *exitType;
@property (nonatomic) double launchTime;

- (void)setLoadErrorCode:(id)arg0;
- (id)loadErrorCode;
- (void)setLaunchTime:(double)arg0;
- (double)launchTime;
- (void)setLoadResultType:(unsigned long long)arg0;
- (void)setTrackerCommonParams:(id)arg0;
- (void)eventSchemaInfoWithSchema:(id)arg0 error:(id)arg1;
- (id)loadInstance;
- (void)setLaunchTimingEvent:(id)arg0;
- (void)eventMpEntranceClick:(BOOL)arg0;
- (void)eventMpLoadStart;
- (void)reportGameHistoryWithParams:(id)arg0;
- (void)eventMpClose;
- (unsigned long long)loadResultType;
- (id)appFileReader;
- (void)reportTimelineAppInfo:(id)arg0 reader:(id)arg1;
- (void)updateTrackerCommonParams:(id)arg0;
- (id)launchParam;
- (void)eventMpLaunchWithParams:(id)arg0;
- (void)eventDomReady;
- (id)eventWithBaseEventKey:(id)arg0;
- (void)eventMpApplyAsyncUpdate;
- (id)loadTimingEvent;
- (id)buildTrackerParams:(id)arg0;
- (void)setLoadTimingEvent:(id)arg0;
- (id)launchTimingEvent;
- (void)setLoadDurationShouldClear:(BOOL)arg0;
- (void)setShouldEventMPClose:(BOOL)arg0;
- (double)loadEndTime;
- (void)tryEventMpClose;
- (BOOL)shouldEventMPClose;
- (double)domReadyTime;
- (id)bootStatus;
- (id)loadErrMsg;
- (void)setLoadEndTime:(double)arg0;
- (void)setLoadErrMsg:(id)arg0;
- (BOOL)loadDurationShouldClear;
- (void)eventMpSessionLaunch;
- (void)setDomReadyTime:(double)arg0;
- (void)eventMpEnter;
- (void)eventMpExit;
- (id)eventMpLoadResult:(unsigned long long)arg0 errMsg:(id)arg1 extraParams:(id)arg2;
- (void)eventMpLaunchResultWithParams:(id)arg0;
- (void)eventMpAsyncUpdateReadyNotify;
- (void)eventWarmBootResult:(BOOL)arg0 duration:(double)arg1 errMsg:(id)arg2;
- (void)eventBlankScreen:(BOOL)arg0 reason:(id)arg1 needReboot:(BOOL)arg2 duration:(unsigned long long)arg3 bgColors:(id)arg4 error:(id)arg5;
- (void)monitorLoadError:(id)arg0 errorCodeStr:(id)arg1;
- (void)setBootStatus:(id)arg0;
- (id)initWithDataSource:(id)arg0;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (void).cxx_destruct;
- (id)uniqueID;
- (id)schema;
- (id)exitType;
- (void)setExitType:(id)arg0;

@end
