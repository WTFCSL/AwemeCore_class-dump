//
//     Generated by private class-dump
//

@class NSString, IESLiveImageCropViewController, IESLiveImageCropApi;
@protocol IESLivePhotoLibraryService;

@interface IESLiveImageCropHandler : NSObject <UINavigationControllerDelegate, UIImagePickerControllerDelegate> {
    BOOL _isEmojiTemplate;
    BOOL _isCamera;
    id<IESLivePhotoLibraryService> _photoService;
    id /* block */ _completionBlock;
    id /* block */ _avatorCompletionBlock;
    id /* block */ _cameraCompletionBlock;
    id /* block */ _emojiTemplateCompletionBlock;
    NSString *_requestPage;
    NSString *_descriptionUrl;
    IESLiveImageCropViewController *_imageCropViewController;
    double _cropSizeWidth;
    double _cropSizeHeight;
    long long _anchorImageMaxSize;
    long long _imageCropType;
    NSString *_coverStatus;
    IESLiveImageCropApi *_imageCropApi;
}

@property (retain, nonatomic) id<IESLivePhotoLibraryService> photoService;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (copy, nonatomic) id /* block */ avatorCompletionBlock;
@property (copy, nonatomic) id /* block */ cameraCompletionBlock;
@property (copy, nonatomic) id /* block */ emojiTemplateCompletionBlock;
@property (copy, nonatomic) NSString *requestPage;
@property (copy, nonatomic) NSString *descriptionUrl;
@property (retain, nonatomic) IESLiveImageCropViewController *imageCropViewController;
@property (nonatomic) double cropSizeWidth;
@property (nonatomic) double cropSizeHeight;
@property (nonatomic) long long anchorImageMaxSize;
@property (nonatomic) long long imageCropType;
@property (copy, nonatomic) NSString *coverStatus;
@property (retain, nonatomic) IESLiveImageCropApi *imageCropApi;
@property (nonatomic) BOOL isEmojiTemplate;
@property (nonatomic) BOOL isCamera;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setIsCamera:(BOOL)arg0;
- (id)requestPage;
- (void)setRequestPage:(id)arg0;
- (void)setCoverStatus:(id)arg0;
- (id)coverStatus;
- (id)photoService;
- (void)setPhotoService:(id)arg0;
- (void)openCameraWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1 requestPage:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)openImageCarpPgaeFromEmojiTemplateWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1 requestPage:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)setImageCropApi:(id)arg0;
- (void)setImageCropType:(long long)arg0;
- (void)setDescriptionUrl:(id)arg0;
- (void)initCropSize;
- (void)showPhotoPickerViewIfCanWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1 withContext:(id)arg2;
- (void)setAvatorCompletionBlock:(id /* block */)arg0;
- (void)setEmojiTemplateCompletionBlock:(id /* block */)arg0;
- (void)setIsEmojiTemplate:(BOOL)arg0;
- (void)setCameraCompletionBlock:(id /* block */)arg0;
- (void)showCameraPickerViewIfCanWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1;
- (void)setAnchorImageMaxSize:(long long)arg0;
- (long long)imageCropType;
- (void)setCropSizeWidth:(double)arg0;
- (void)setCropSizeHeight:(double)arg0;
- (void)setImageCropViewController:(id)arg0;
- (id /* block */)avatorCompletionBlock;
- (void)checkImageAndOpenCropVC:(id)arg0 pickerVC:(id)arg1;
- (void)endWithUploadResult:(BOOL)arg0 code:(unsigned long long)arg1;
- (double)cropSizeWidth;
- (double)cropSizeHeight;
- (long long)anchorImageMaxSize;
- (void)openAnchorAvatorImageCropVC:(id)arg0 withPickerController:(id)arg1;
- (void)openImageCropVC:(id)arg0 withPickerController:(id)arg1;
- (id)imageCropViewController;
- (BOOL)isEmojiTemplate;
- (id)imageCropApi;
- (id /* block */)emojiTemplateCompletionBlock;
- (id /* block */)cameraCompletionBlock;
- (id)compositeWithBase64:(id)arg0;
- (void)openImageCarpPageWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1 withCompletionBlock:(id /* block */)arg2 requestPage:(id)arg3 withContext:(id)arg4;
- (void)openAnchorAvatorImageCarpPageWithPrivacyCert:(id)arg0 withPrivacyCert:(id)arg1 withCompletionBlock:(id /* block */)arg2 requestPage:(id)arg3 coverStatus:(id)arg4 withContext:(id)arg5;
- (void).cxx_destruct;
- (id /* block */)completionBlock;
- (void)setCompletionBlock:(id /* block */)arg0;
- (void)imagePickerControllerDidCancel:(id)arg0;
- (void)imagePickerController:(id)arg0 didFinishPickingMediaWithInfo:(id)arg1;
- (BOOL)isCamera;
- (id)descriptionUrl;
- (void)p_clearData;

@end
