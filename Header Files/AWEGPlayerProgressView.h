//
//     Generated by private class-dump
//

@class AWEGPlayerProgressPreviewView, AWEPageContext, UIView, AWEAwemeModel, AWEGPlayerProgressContainer;
@protocol AWEGPlayerPageContextProtocol, AWEGPlayerProgressViewDelegate;

@interface AWEGPlayerProgressView : UIView {
    BOOL _isAnimating;
    BOOL _isAnimatingToEnd;
    id<AWEGPlayerProgressViewDelegate> _delegate;
    unsigned long long _sliderState;
    AWEAwemeModel *_model;
    AWEPageContext<AWEGPlayerPageContextProtocol> *_context;
    double _playTime;
    double _totalTime;
    double _playTimeBeforeDrag;
    UIView *_playedView;
    AWEGPlayerProgressContainer *_progressContainer;
    UIView *_touchingPlayedView;
    UIView *_touchingThumbView;
    UIView *_touchingContainer;
    UIView *_touchingEffectView;
    AWEGPlayerProgressPreviewView *_previewContainer;
    id /* block */ _animatedToEndBlock;
    double _seekingToTime;
}

@property (retain, nonatomic) AWEAwemeModel *model;
@property (retain, nonatomic) AWEPageContext<AWEGPlayerPageContextProtocol> *context;
@property (nonatomic) double playTime;
@property (nonatomic) double totalTime;
@property (nonatomic) double playTimeBeforeDrag;
@property (retain, nonatomic) UIView *playedView;
@property (retain, nonatomic) AWEGPlayerProgressContainer *progressContainer;
@property (retain, nonatomic) UIView *touchingPlayedView;
@property (retain, nonatomic) UIView *touchingThumbView;
@property (retain, nonatomic) UIView *touchingContainer;
@property (retain, nonatomic) UIView *touchingEffectView;
@property (retain, nonatomic) AWEGPlayerProgressPreviewView *previewContainer;
@property (nonatomic) BOOL isAnimating;
@property (nonatomic) BOOL isAnimatingToEnd;
@property (copy, nonatomic) id /* block */ animatedToEndBlock;
@property (nonatomic) unsigned long long sliderState;
@property (nonatomic) double seekingToTime;
@property (weak, nonatomic) id<AWEGPlayerProgressViewDelegate> delegate;

+ (double)sliderHeight;
+ (double)sliderTopOffset;
+ (double)sliderBottomOffset;

- (void)setPlayTime:(double)arg0;
- (void)setPreviewContainer:(id)arg0;
- (void)updateGPlayerState:(unsigned long long)arg0;
- (id)playedView;
- (void)setPlayedView:(id)arg0;
- (void)refreshPlayTime:(double)arg0 canPlayTime:(double)arg1 totalTime:(double)arg2;
- (void)handleProgressViewPanBegin:(double)arg0;
- (void)handleProgressViewPanEnd:(double)arg0;
- (void)updateWithModel:(id)arg0 currentPlayTime:(double)arg1 context:(id)arg2;
- (void)playerWillStartNextLoop;
- (void)updateProgressSliderState:(unsigned long long)arg0;
- (void)updateWithPlayTime:(double)arg0 canPlayTime:(double)arg1 animated:(BOOL)arg2;
- (unsigned long long)sliderState;
- (BOOL)isAnimatingToEnd;
- (id /* block */)animatedToEndBlock;
- (void)setAnimatedToEndBlock:(id /* block */)arg0;
- (void)updateWithPlayTime:(double)arg0 canPlayTime:(double)arg1 animated:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)setIsAnimatingToEnd:(BOOL)arg0;
- (id)progressContainer;
- (id)touchingEffectView;
- (id)touchingContainer;
- (id)touchingPlayedView;
- (id)touchingThumbView;
- (void)setSliderState:(unsigned long long)arg0;
- (void)setPlayTimeBeforeDrag:(double)arg0;
- (void)showPreview:(BOOL)arg0 targetTime:(double)arg1 scrollChapterAnimated:(BOOL)arg2;
- (double)targetTimeWithOffset:(double)arg0;
- (void)handleProgressViewPanChanging:(double)arg0;
- (double)playTimeBeforeDrag;
- (void)setProgressContainer:(id)arg0;
- (void)setTouchingPlayedView:(id)arg0;
- (void)setTouchingThumbView:(id)arg0;
- (void)setTouchingContainer:(id)arg0;
- (void)setTouchingEffectView:(id)arg0;
- (BOOL)isAnimating;
- (void)setModel:(id)arg0;
- (double)totalTime;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (id)model;
- (double)playTime;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)previewContainer;
- (id)delegate;
- (id)context;
- (void)setDelegate:(id)arg0;
- (void)reset;
- (void)setTotalTime:(double)arg0;
- (void)setIsAnimating:(BOOL)arg0;
- (void)setupUI;
- (void)handlePanGesture:(id)arg0;
- (void)setSeekingToTime:(double)arg0;
- (double)seekingToTime;

@end
