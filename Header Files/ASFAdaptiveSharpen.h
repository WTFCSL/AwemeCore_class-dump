//
//     Generated by private class-dump
//

@class ASFBoxFilter, ASFCalcGammaFilter, ASFMetalContext, ASFCopyUVFilter, ASFYUV2RGBFilter, ASFRGB2YUVFilter, ASFCalcDiffFilter, NSMutableArray, ASFAddDiffFilter;
@protocol MTLTexture;

@interface ASFAdaptiveSharpen : NSObject {
    int _width;
    int _height;
    int _allocWidth;
    int _allocHeight;
    ASFMetalContext *_context;
    ASFRGB2YUVFilter *_rgb2yuvFilter;
    ASFBoxFilter *_boxFilter;
    ASFCalcDiffFilter *_calcDiffFilter;
    ASFAddDiffFilter *_addDiffFilter;
    ASFYUV2RGBFilter *_yuv2rgbFilter;
    ASFCalcGammaFilter *_calcGammaFilter;
    ASFCopyUVFilter *_UVFilter;
    id<MTLTexture> _inYTexture;
    id<MTLTexture> _inUVTexture;
    id<MTLTexture> _varGTexture;
    id<MTLTexture> _gammaTexture;
    id<MTLTexture> _diffTexture;
    id<MTLTexture> _outYTexture;
    id<MTLTexture> _outputTexture;
    id<MTLTexture> _outputUVTexture;
    id<MTLTexture> _outputUVTexture_copy;
    id<MTLTexture> _minMaxTexture;
    struct __CVMetalTextureCache { } *_textureCache;
    struct __CVBuffer { } *_outputPixelBuffer;
    NSMutableArray *_texturPool;
    NSMutableArray *_textureList;
    struct ASFSharpenParam { void *context; int inType; int outType; float edge_weight_esp; int calc_diff_size; int enable_edge_tune; float edge_gamma; int enable_diff_smooth; int diff_smooth_size; float amount; float ratio; int minmax_filter_size; int perf_level; } _asfParam;
}

@property (retain, nonatomic) ASFMetalContext *context;
@property (nonatomic) int width;
@property (nonatomic) int height;
@property (retain, nonatomic) ASFRGB2YUVFilter *rgb2yuvFilter;
@property (retain, nonatomic) ASFBoxFilter *boxFilter;
@property (retain, nonatomic) ASFCalcDiffFilter *calcDiffFilter;
@property (retain, nonatomic) ASFAddDiffFilter *addDiffFilter;
@property (retain, nonatomic) ASFYUV2RGBFilter *yuv2rgbFilter;
@property (retain, nonatomic) ASFCalcGammaFilter *calcGammaFilter;
@property (retain, nonatomic) ASFCopyUVFilter *UVFilter;
@property (retain, nonatomic) id<MTLTexture> inYTexture;
@property (retain, nonatomic) id<MTLTexture> inUVTexture;
@property (retain, nonatomic) id<MTLTexture> varGTexture;
@property (retain, nonatomic) id<MTLTexture> gammaTexture;
@property (retain, nonatomic) id<MTLTexture> diffTexture;
@property (retain, nonatomic) id<MTLTexture> outYTexture;
@property (retain, nonatomic) id<MTLTexture> outputTexture;
@property (retain, nonatomic) id<MTLTexture> outputUVTexture;
@property (retain, nonatomic) id<MTLTexture> outputUVTexture_copy;
@property (retain, nonatomic) id<MTLTexture> minMaxTexture;
@property (nonatomic) struct ASFSharpenParam { void *context; int inType; int outType; float edge_weight_esp; int calc_diff_size; int enable_edge_tune; float edge_gamma; int enable_diff_smooth; int diff_smooth_size; float amount; float ratio; int minmax_filter_size; int perf_level; } asfParam;
@property (nonatomic) struct __CVMetalTextureCache { } *textureCache;
@property (nonatomic) struct __CVBuffer { } *outputPixelBuffer;
@property (nonatomic) int allocWidth;
@property (nonatomic) int allocHeight;
@property (retain, nonatomic) NSMutableArray *texturPool;
@property (retain, nonatomic) NSMutableArray *textureList;

+ (id)init:(id)arg0 width:(int)arg1 height:(int)arg2 param:(struct ASFSharpenParam { void *x0; int x1; int x2; float x3; int x4; int x5; float x6; int x7; int x8; float x9; float x10; int x11; int x12; } *)arg3;

- (id)create:(id)arg0 width:(int)arg1 height:(int)arg2 param:(struct ASFSharpenParam { void *x0; int x1; int x2; float x3; int x4; int x5; float x6; int x7; int x8; float x9; float x10; int x11; int x12; } *)arg3;
- (void)setAsfParam:(struct ASFSharpenParam { void *x0; int x1; int x2; float x3; int x4; int x5; float x6; int x7; int x8; float x9; float x10; int x11; int x12; })arg0;
- (void)setAllocWidth:(int)arg0;
- (void)setAllocHeight:(int)arg0;
- (void)setTexturPool:(id)arg0;
- (void)setTextureList:(id)arg0;
- (struct ASFSharpenParam { void *x0; int x1; int x2; float x3; int x4; int x5; float x6; int x7; int x8; float x9; float x10; int x11; int x12; })asfParam;
- (void)setRgb2yuvFilter:(id)arg0;
- (void)setYuv2rgbFilter:(id)arg0;
- (void)setBoxFilter:(id)arg0;
- (void)setCalcDiffFilter:(id)arg0;
- (void)setAddDiffFilter:(id)arg0;
- (void)setCalcGammaFilter:(id)arg0;
- (void)setUVFilter:(id)arg0;
- (void)alloc_mem;
- (void)release_mem;
- (id)rgb2yuvFilter;
- (void)setInYTexture:(id)arg0;
- (void)setInUVTexture:(id)arg0;
- (id)yuv2rgbFilter;
- (void)setOutYTexture:(id)arg0;
- (id)inYTexture;
- (id)inUVTexture;
- (id)boxFilter;
- (id)varGTexture;
- (id)minMaxTexture;
- (id)calcGammaFilter;
- (id)gammaTexture;
- (id)calcDiffFilter;
- (id)diffTexture;
- (id)addDiffFilter;
- (id)outYTexture;
- (id)UVFilter;
- (id)outputUVTexture;
- (id)outputUVTexture_copy;
- (void)initMap:(id)arg0 outTexture:(id)arg1;
- (void)setOutputUVTexture:(id)arg0;
- (int)processTexture:(id)arg0;
- (int)allocWidth;
- (int)allocHeight;
- (id)alloc_texture:(unsigned long long)arg0 width:(int)arg1 height:(int)arg2;
- (void)setMinMaxTexture:(id)arg0;
- (void)setVarGTexture:(id)arg0;
- (void)setGammaTexture:(id)arg0;
- (void)setDiffTexture:(id)arg0;
- (id)texturPool;
- (id)textureList;
- (void)setOutputUVTexture_copy:(id)arg0;
- (void)uninit;
- (int)getoutput:(void **)arg0 output1:(void **)arg1;
- (int)reconfig:(int)arg0 height:(int)arg1 param:(struct ASFSharpenParam { void *x0; int x1; int x2; float x3; int x4; int x5; float x6; int x7; int x8; float x9; float x10; int x11; int x12; } *)arg2;
- (int)process:(void *)arg0;
- (void).cxx_destruct;
- (int)height;
- (void)setContext:(id)arg0;
- (void)setOutputPixelBuffer:(struct __CVBuffer { } *)arg0;
- (int)processPixelBuffer:(struct __CVBuffer { } *)arg0;
- (void)setTextureCache:(struct __CVMetalTextureCache { } *)arg0;
- (struct __CVMetalTextureCache { } *)textureCache;
- (id)context;
- (void)setWidth:(int)arg0;
- (void)setHeight:(int)arg0;
- (int)width;
- (struct __CVBuffer { } *)outputPixelBuffer;
- (id)outputTexture;
- (void)setOutputTexture:(id)arg0;

@end
