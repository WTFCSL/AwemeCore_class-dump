//
//     Generated by private class-dump
//

@class NSString, NSSet, NSMutableSet, UIImage;
@protocol ACCPublishRepository;

@interface ACCRepoImageInfoInstanceModel : NSObject <ACCInstanceRepoImageInfoData, ACCRepoRegister, NSCopying, ACCRepositoryContextDeprecated> {
    BOOL _isCoverAdjusted;
    BOOL _asyncFetch;
    BOOL _hasTextReader;
    BOOL _isParsedTemplateCategory;
    BOOL _forceNeedSendFrame;
    id<ACCPublishRepository> repoDeprecated;
    NSString *_imageFilePath;
    NSString *_compressedImageFilePath;
    double _imageScale;
    double _imageDuration;
    NSString *_phAssetLocalIdentifier;
    UIImage *_originalPicture;
    NSString *_editedImageFilePath;
    double _editedImageScale;
    NSString *_picTemplateId;
    NSString *_picTemplateName;
    NSString *_picTemplateCategoryId;
    NSString *_picTemplateCategoryName;
    double _canvasScaleDiff;
    NSMutableSet *_dynamicStickerSet;
    struct CGSize { double width; double height; } _imageSize;
    struct CGSize { double width; double height; } _editedImageSize;
}

@property (retain, nonatomic) NSMutableSet *dynamicStickerSet;
@property (copy, nonatomic) NSString *imageFilePath;
@property (copy, nonatomic) NSString *compressedImageFilePath;
@property (readonly, copy, nonatomic) NSSet *dynamicStickerIds;
@property (nonatomic) struct CGSize { double width; double height; } imageSize;
@property (nonatomic) double imageScale;
@property (nonatomic) double imageDuration;
@property (copy, nonatomic) NSString *phAssetLocalIdentifier;
@property (nonatomic) BOOL isCoverAdjusted;
@property (nonatomic) BOOL asyncFetch;
@property (retain, nonatomic) UIImage *originalPicture;
@property (copy, nonatomic) NSString *editedImageFilePath;
@property (nonatomic) struct CGSize { double width; double height; } editedImageSize;
@property (nonatomic) double editedImageScale;
@property (nonatomic) BOOL hasTextReader;
@property (nonatomic) BOOL isParsedTemplateCategory;
@property (retain, nonatomic) NSString *picTemplateId;
@property (retain, nonatomic) NSString *picTemplateName;
@property (retain, nonatomic) NSString *picTemplateCategoryId;
@property (retain, nonatomic) NSString *picTemplateCategoryName;
@property (nonatomic) double canvasScaleDiff;
@property (readonly, nonatomic) BOOL hasCropped;
@property (nonatomic) BOOL forceNeedSendFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<ACCPublishRepository> repoDeprecated;

+ (double)dynamicEffectClipPlayDuration;
+ (id)repo_dataProtocol;
+ (double)defaultPlayDuration;

- (id)phAssetLocalIdentifier;
- (void)setPhAssetLocalIdentifier:(id)arg0;
- (id)compressedImageFilePath;
- (void)setCompressedImageFilePath:(id)arg0;
- (double)imageDuration;
- (void)setImageDuration:(double)arg0;
- (BOOL)isParsedTemplateCategory;
- (void)setIsParsedTemplateCategory:(BOOL)arg0;
- (BOOL)hasCropped;
- (id)initWithDraft:(id)arg0;
- (void)saveWithDraft:(id)arg0;
- (id)repoDeprecated;
- (void)draftWillBeSavedWithID:(id)arg0;
- (void)modelDidRetrievedFromDraftWithID:(id)arg0;
- (void)setRepoDeprecated:(id)arg0;
- (void)setPicTemplateId:(id)arg0;
- (void)setForceNeedSendFrame:(BOOL)arg0;
- (id)originalPicture;
- (id)getOriginalImage;
- (struct CGSize { double x0; double x1; })imageSizeWithCrop;
- (void)resetEditedImageInfo;
- (void)setEditedImageSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setEditedImageScale:(double)arg0;
- (void)setEditedImageFilePath:(id)arg0;
- (void)setPicTemplateName:(id)arg0;
- (void)setPicTemplateCategoryId:(id)arg0;
- (void)setPicTemplateCategoryName:(id)arg0;
- (id)dynamicStickerIds;
- (void)addDynamicStickerID:(long long)arg0;
- (id)picTemplateId;
- (id)picTemplateName;
- (id)picTemplateCategoryId;
- (id)picTemplateCategoryName;
- (void)setAsyncFetch:(BOOL)arg0;
- (BOOL)isCoverAdjusted;
- (void)setIsCoverAdjusted:(BOOL)arg0;
- (BOOL)forceNeedSendFrame;
- (id)editedImageFilePath;
- (struct CGSize { double x0; double x1; })editedImageSize;
- (double)editedImageScale;
- (BOOL)hasEditedImageCache;
- (id)corpInfo;
- (void)setOriginalPicture:(id)arg0;
- (BOOL)hasTextReader;
- (BOOL)hasDynamicEffect;
- (void)removeDynamicStickerID:(long long)arg0;
- (BOOL)asyncFetch;
- (void)setDynamicStickerSet:(id)arg0;
- (void)setHasTextReader:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })imageCropedSize;
- (void)clearDynamicSticker;
- (id)getOriginalCompressedImage;
- (BOOL)isImageExists;
- (double)fetchClipPlayDuration;
- (double)canvasScaleDiff;
- (void)setCanvasScaleDiff:(double)arg0;
- (id)dynamicStickerSet;
- (id)init;
- (BOOL)enabled;
- (void)setImageScale:(double)arg0;
- (double)imageScale;
- (struct CGSize { double x0; double x1; })imageSize;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRect;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)reset;
- (void)setImageSize:(struct CGSize { double x0; double x1; })arg0;
- (id)imageFilePath;
- (void)setImageFilePath:(id)arg0;

@end
