//
//     Generated by private class-dump
//

@class ACCCameraSubscription, NSString, NSTimer, ACCRepositoryWorkspace;
@protocol ACCSequenceEditServiceProtocol;

@interface ACCSequencePlayControlServiceImpl : NSObject <ACCSequencePlayControlServiceProtocol> {
    BOOL _enableAutoplay;
    BOOL _isIndicatorWithAnimation;
    BOOL _editorDisappear;
    BOOL _isAutoplaying;
    double _defaultAutoplayInterval;
    double _variableAutoplayInterval;
    double _assistTimerDiffInterval;
    id /* block */ assistTimerAction;
    ACCRepositoryWorkspace *_workspace;
    id<ACCSequenceEditServiceProtocol> _editService;
    long long _stopFlagCount;
    NSTimer *_autoplayTimer;
    NSTimer *_autoplayTickTimer;
    unsigned long long _playMode;
    long long _pauseByMode;
    NSTimer *_assistTimer;
    ACCCameraSubscription *_subscription;
}

@property (nonatomic) long long stopFlagCount;
@property (retain, nonatomic) NSTimer *autoplayTimer;
@property (retain, nonatomic) NSTimer *autoplayTickTimer;
@property (nonatomic) unsigned long long playMode;
@property (nonatomic) long long pauseByMode;
@property (nonatomic) BOOL isAutoplaying;
@property (retain, nonatomic) NSTimer *assistTimer;
@property (retain, nonatomic) ACCCameraSubscription *subscription;
@property (retain, nonatomic) ACCRepositoryWorkspace *workspace;
@property (weak, nonatomic) id<ACCSequenceEditServiceProtocol> editService;
@property (nonatomic) BOOL editorDisappear;
@property (nonatomic) BOOL enableAutoplay;
@property (nonatomic) BOOL isIndicatorWithAnimation;
@property (nonatomic) double defaultAutoplayInterval;
@property (nonatomic) double variableAutoplayInterval;
@property (nonatomic) double assistTimerDiffInterval;
@property (copy, nonatomic) id /* block */ assistTimerAction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)enableAutoplay;
- (void)setEnableAutoplay:(BOOL)arg0;
- (id)editService;
- (void)setEditService:(id)arg0;
- (void)setEnableAutoplayNoSideEffect:(BOOL)arg0;
- (void)resetTimerFromCurrentWithResumeModel:(unsigned long long)arg0;
- (void)startAutoplayNested;
- (void)startAutoplayNestedWithMode:(unsigned long long)arg0;
- (void)stopAutoplayNested;
- (void)startAutoplayForced;
- (void)startAutoplayForcedWithMode:(unsigned long long)arg0;
- (void)stopAutoplayForced;
- (void)enterAutoplayMode;
- (void)enterSingleMode;
- (void)enterSingleModeForced;
- (BOOL)exitSingleMode;
- (void)enterPauseMode;
- (BOOL)exitPauseMode;
- (void)clearPauseByMode;
- (void)playerNotifyCurrentTime:(double)arg0;
- (void)refreshPlayDurationForIndex:(long long)arg0 resetProgress:(BOOL)arg1;
- (void)resetPlayProgressForIndex:(long long)arg0;
- (void)resetPlayProgressForAllIndexes;
- (BOOL)isAutoplaying;
- (long long)pauseByMode;
- (BOOL)isIndicatorWithAnimation;
- (void)setIsIndicatorWithAnimation:(BOOL)arg0;
- (double)defaultAutoplayInterval;
- (void)setDefaultAutoplayInterval:(double)arg0;
- (double)variableAutoplayInterval;
- (void)setVariableAutoplayInterval:(double)arg0;
- (double)assistTimerDiffInterval;
- (void)setAssistTimerDiffInterval:(double)arg0;
- (id /* block */)assistTimerAction;
- (void)setAssistTimerAction:(id /* block */)arg0;
- (void)setEditorDisappear:(BOOL)arg0;
- (void)_stopAutoplayTimer;
- (double)fetchTimerIntervalForIdx:(long long)arg0 ignorePlayerTime:(BOOL)arg1;
- (void)_autoplayTimerHandler;
- (void)setAutoplayTimer:(id)arg0;
- (void)_autoplayTickTimerHandler;
- (void)setAutoplayTickTimer:(id)arg0;
- (id)_playProgressAtIndex:(long long)arg0;
- (void)_updatePlayProgress:(id)arg0 duration:(double)arg1 resetProgress:(BOOL)arg2;
- (void)_startAssistTimerWithInterval:(double)arg0;
- (void)_resetTimerFromCurrentWithResumeModel:(unsigned long long)arg0;
- (void)setStopFlagCount:(long long)arg0;
- (void)setIsAutoplaying:(BOOL)arg0;
- (BOOL)editorDisappear;
- (void)_playerNotifyCurrentTime:(double)arg0;
- (double)_fetchAssistTimerInterval:(double)arg0;
- (id)_autoplayingImageProjectAtIndex:(long long)arg0;
- (void)_updatePlayProgress:(id)arg0 elapse:(double)arg1;
- (id)assistTimer;
- (long long)stopFlagCount;
- (id)autoplayTimer;
- (id)autoplayTickTimer;
- (void)setPauseByMode:(long long)arg0;
- (void)setAssistTimer:(id)arg0;
- (id)init;
- (id)workspace;
- (void).cxx_destruct;
- (void)applicationWillResignActive;
- (void)_invalidateTimer;
- (void)setSubscription:(id)arg0;
- (void)dealloc;
- (void)applicationDidBecomeActive;
- (void)addSubscriber:(id)arg0;
- (void)setWorkspace:(id)arg0;
- (id)subscription;
- (void)removeSubscriber:(id)arg0;
- (void)setPlayMode:(unsigned long long)arg0;
- (unsigned long long)playMode;

@end
