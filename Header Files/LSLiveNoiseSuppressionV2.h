//
//     Generated by private class-dump
//

@class NSString;

@interface LSLiveNoiseSuppressionV2 : NSObject <LSLiveAudioAlgorithmProcessor> {
    struct unique_ptr<float[], std::default_delete<float[]>> { struct __compressed_pair<float *, std::default_delete<float[]>> { float *__value_; } __ptr_; } _data;
    struct unique_ptr<float[], std::default_delete<float[]>> { struct __compressed_pair<float *, std::default_delete<float[]>> { float *__value_; } __ptr_; } _data1;
    struct unique_ptr<float[], std::default_delete<float[]>> { struct __compressed_pair<float *, std::default_delete<float[]>> { float *__value_; } __ptr_; } _data2;
    float *_inData[2];
    float *_MonoData[1];
    struct vector<unsigned char, std::allocator<unsigned char>> { char *__begin_; char *__end_; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char *__value_; } __end_cap_; } _modelVec;
    void *_handle;
    int _sampleRate;
    int _numChannels;
    int _blockSize;
    struct executorContextCreateParameter { int sampleRate; int maxBlockSize; char *modelBuffer; int modelLen; int numChannel; char *bussinessInfo; char *configInfo; int numAudioBuffer; } _createParameter;
    struct audioBuffer { unsigned int numberChannels; unsigned int numberSamples; int isInterleave; float **data; } _inBuffer;
    struct audioBlock { int dataType; unsigned int numberAudioData; void *audioData; } _inBlock;
    int _status;
    float _denoiseRate;
    float _denoiseMode;
    BOOL _useSingleChannel;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)processBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 inNumberFrames:(unsigned int)arg1;
- (id)initWithSample:(int)arg0 channels:(int)arg1 useSingleChannel:(BOOL)arg2 resourceUrl:(id)arg3;
- (void)setParams:(float)arg0 param2:(float)arg1 param3:(float)arg2;
- (void)initNNBlockWithSampleRate:(int)arg0 numChannels:(int)arg1 modelPath:(id)arg2;
- (void)initModelVecWithPath:(id)arg0;
- (void).cxx_destruct;
- (id).cxx_construct;

@end
