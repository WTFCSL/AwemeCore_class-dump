//
//     Generated by private class-dump
//

@class RxScheduler, NSString, NSArray, NSHashTable, NSError, NSObject, NSMutableArray;
@protocol OS_dispatch_semaphore;

@interface RxPromise : NSObject <RxCancellable> {
    struct MutexLock { void /* function */ **_vptr$LockingInterface; struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _impl; } _mutex;
    long long _state;
    NSObject<OS_dispatch_semaphore> *_sem;
    NSMutableArray *_callbacks;
    NSArray *_parentPromises;
    id _value;
    NSError *_error;
    NSHashTable *_cancellables;
    RxScheduler *_scheduler;
}

@property (readonly, nonatomic) id value;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) BOOL fulfilled;
@property (readonly, nonatomic) BOOL rejected;
@property (readonly, nonatomic, getter=isCancelled) BOOL cancelled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)when:(id)arg0;
+ (id)promise:(id /* block */)arg0 scheduler:(id)arg1;
+ (id)resolve:(id)arg0 scheduler:(id)arg1;
+ (id)reject:(id)arg0 scheduler:(id)arg1;
+ (id)promise:(id /* block */)arg0;
+ (void)__resolve:(id)arg0 value:(id)arg1 scheduler:(id)arg2;
+ (id)resolve:(id)arg0;
+ (id)reject:(id)arg0;
+ (id)join:(id)arg0;

- (id)then:(id /* block */)arg0 error:(id /* block */)arg1 scheduler:(id)arg2;
- (id)then:(id /* block */)arg0 scheduler:(id)arg1;
- (id)performWhenFinished:(id /* block */)arg0 scheduler:(id)arg1;
- (id)then:(id /* block */)arg0 error:(id /* block */)arg1;
- (void)addCancellable:(id)arg0;
- (void)resolveWithValue:(id)arg0 scheduler:(id)arg1;
- (void)rejectWithError:(id)arg0 scheduler:(id)arg1;
- (BOOL)isRunningOrResolved;
- (id)performWhenFinished:(id /* block */)arg0;
- (void)joinedPromiseFulfilled:(id)arg0 scheduler:(id)arg1;
- (id)waitForValueWithTimeout:(double)arg0;
- (id)waitForValue;
- (BOOL)isRunning;
- (id)init;
- (BOOL)completed;
- (id)then:(id /* block */)arg0;
- (void).cxx_destruct;
- (BOOL)fulfilled;
- (id)value;
- (void)finish;
- (void)cancel;
- (BOOL)cancelled;
- (id)description;
- (void)dealloc;
- (BOOL)isCancelled;
- (id)initWithScheduler:(id)arg0;
- (id).cxx_construct;
- (id)error;
- (BOOL)rejected;

@end
