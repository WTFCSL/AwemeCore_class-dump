//
//     Generated by private class-dump
//

@class NSString, BDPObjectReusePool;

@interface BDPRuntimePredefineObject : NSObject <BDPAppPreloadCacheDataSource> {
    BDPObjectReusePool *_runtimePool;
}

@property (retain, nonatomic) BDPObjectReusePool *runtimePool;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLoad;
+ (id)getPreloadDataSource;
+ (BOOL)supportPreloadForType:(long long)arg0;
+ (void)releaseRuntimeWithIdentifier:(id)arg0;
+ (id)sharedObject;

- (void)preloadObjectWithModel:(id)arg0 schema:(id)arg1 reader:(id)arg2 completion:(id /* block */)arg3;
- (BOOL)preloadCache:(id)arg0 shouldPreloadNextWithExistingObject:(id)arg1;
- (void)preloadCache:(id)arg0 willReleaseObject:(id)arg1;
- (BOOL)preloadDefineFilesEnable;
- (void)clearPreloadDefineFilesForRuntime:(id)arg0 completion:(id /* block */)arg1;
- (id)runtimePool;
- (void)preloadDefineFilesForRuntime:(id)arg0 reader:(id)arg1 completion:(id /* block */)arg2;
- (void)preloadCache:(id)arg0 willReleaseObject:(id)arg1 finish:(id /* block */)arg2;
- (void)setRuntimePool:(id)arg0;
- (long long)getPredefineFileSizeLimitWithType:(long long)arg0;
- (id)getRuntimeWithType:(long long)arg0;
- (void).cxx_destruct;

@end
