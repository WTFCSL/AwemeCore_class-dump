//
//     Generated by private class-dump
//

@class NSTimer, NSString, XPlayTimeRecorder, XPlayGameTopView, XPlayQualityStatsModel, XPlayBlockRateProcesser, NSMutableDictionary, UIViewController, XPlayItem, XPlayTrackHelper, XPlayConfiguration;
@protocol XPlayPermissionDelegate, XPlayScreenRecordProtocol, XPlayUserInfoProtocol, XPlayKeyboardProtocol, XPlayItemDelegate, XPlayItemBusinessDelegate;

@interface XPlayQueueItem : NSProxy <XPlaySocketHandler, XPlayItemDelegate, XPlayItemProtocol> {
    BOOL _alreadyPreload;
    BOOL _hasSentFastQueue;
    BOOL _socketConnectionLost;
    NSString *_core;
    NSString *_itemId;
    id<XPlayItemDelegate> delegate;
    id<XPlayItemBusinessDelegate> businessDelegate;
    id<XPlayPermissionDelegate> permissionDelegate;
    XPlayConfiguration *_configuration;
    XPlayTimeRecorder *_recorder;
    XPlayTrackHelper *_trackHelper;
    id<XPlayUserInfoProtocol> _userSession;
    XPlayItem *_proxyItem;
    NSTimer *_netWorkTimer;
}

@property (retain, nonatomic) XPlayItem *proxyItem;
@property (nonatomic) BOOL alreadyPreload;
@property (nonatomic) BOOL hasSentFastQueue;
@property (retain, nonatomic) NSTimer *netWorkTimer;
@property (nonatomic) BOOL socketConnectionLost;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<XPlayItemDelegate> delegate;
@property (weak, nonatomic) id<XPlayItemBusinessDelegate> businessDelegate;
@property (weak, nonatomic) id<XPlayPermissionDelegate> permissionDelegate;
@property (readonly, copy, nonatomic) NSString *core;
@property (readonly, copy, nonatomic) NSString *itemId;
@property (retain, nonatomic) XPlayConfiguration *configuration;
@property (retain, nonatomic) id<XPlayUserInfoProtocol> userSession;
@property (retain, nonatomic) UIViewController *controller;
@property (retain, nonatomic) XPlayGameTopView *view;
@property (retain, nonatomic) XPlayTrackHelper *trackHelper;
@property (retain, nonatomic) XPlayTimeRecorder *recorder;
@property (nonatomic) unsigned long long status;
@property (copy, nonatomic) XPlayQualityStatsModel *qualityStats;
@property (retain, nonatomic) XPlayBlockRateProcesser *blockProcesser;
@property (retain, nonatomic) id<XPlayScreenRecordProtocol> screenRecorder;
@property (retain, nonatomic) id<XPlayKeyboardProtocol> keyboard;
@property (retain, nonatomic) NSMutableDictionary *pluggins;
@property (readonly, nonatomic) BOOL useCustomKbps;

- (long long)startNetworkDetection;
- (id)trackHelper;
- (void)setTrackHelper:(id)arg0;
- (void)stopNetworkDetection;
- (id)businessDelegate;
- (void)setBusinessDelegate:(id)arg0;
- (id)permissionDelegate;
- (void)setPermissionDelegate:(id)arg0;
- (void)fastQueue;
- (void)postOpenFeedbackInQueue:(id)arg0 nickId:(id)arg1 queueType:(id)arg2 completion:(id /* block */)arg3;
- (void)trackEvent:(id)arg0 metric:(id)arg1 category:(id)arg2 extra:(id)arg3;
- (void)playItem:(id)arg0 didReceiveMessage:(id)arg1;
- (id)generatePrams;
- (void)playItem:(id)arg0 playQualityStats:(id)arg1;
- (void)playItem:(id)arg0 playStatusDidUpdated:(unsigned long long)arg1 info:(id)arg2;
- (void)playItem:(id)arg0 playTimeCountDown:(unsigned long long)arg1;
- (void)playItem:(id)arg0 preloadDidSucceed:(id)arg1;
- (void)callbackPreloadDidFailedWithInfo:(id)arg0;
- (void)playItem:(id)arg0 preloadDidFailed:(id)arg1;
- (void)playItem:(id)arg0 videoQualityChangeResult:(unsigned long long)arg1;
- (void)playItemViewWillAppear:(id)arg0;
- (void)playItemViewTouchBegan:(id)arg0;
- (void)playItem:(id)arg0 netStatus:(long long)arg1 needToast:(BOOL)arg2;
- (void)playItem:(id)arg0 netStatus:(long long)arg1 rtt:(long long)arg2 needToast:(BOOL)arg3 needNotification:(BOOL)arg4;
- (void)playItem:(id)arg0 updateUserInfo:(id)arg1 oldUserInfo:(id)arg2;
- (void)playItem:(id)arg0 increaseTimeResult:(id)arg1;
- (void)playItem:(id)arg0 taskFinishedWithCode:(int)arg1 type:(unsigned long long)arg2 time:(long long)arg3;
- (void)playItem:(id)arg0 config:(id)arg1;
- (void)playItem:(id)arg0 onNetworkDetectionWithQuality:(unsigned long long)arg1 rtt:(int)arg2 lostRate:(double)arg3 bitrate:(int)arg4 jitter:(int)arg5 isQualified:(BOOL)arg6;
- (void)playItem:(id)arg0 onNetworkDetectionStopped:(unsigned long long)arg1;
- (void)playItemcanChangeToFHD:(id)arg0;
- (id)socketCommonParam;
- (id)emptyInst;
- (void)didSocketStateChanged:(long long)arg0;
- (void)didSocketConnectionFailed:(id)arg0 with:(long long)arg1;
- (void)didReceiveMessage:(id)arg0 ackCallback:(id /* block */)arg1;
- (void)didReceiveAckMessage:(id)arg0 forMessage:(id)arg1;
- (id)queueInstWithType:(long long)arg0;
- (void)trackQueueEnterWithError:(id)arg0;
- (void)callbackPreloadDidFailedWithErrorCode:(unsigned long long)arg0 errorMessage:(id)arg1;
- (void)callbackFakeStatusFailWithInfo:(id)arg0;
- (void)endQueue;
- (void)setProxyItem:(id)arg0;
- (void)setHasSentFastQueue:(BOOL)arg0;
- (void)playItem:(id)arg0 canJoinQueue:(id)arg1 callback:(id /* block */)arg2;
- (void)playItem:(id)arg0 didUpdateQueueInfo:(id)arg1;
- (void)playItem:(id)arg0 didDequeue:(id)arg1;
- (void)playItem:(id)arg0 didFinishQueue:(id)arg1;
- (void)playItem:(id)arg0 didExpireQueue:(id)arg1;
- (BOOL)checkIsShowing;
- (void)realPreload:(BOOL)arg0;
- (id)netWorkTimer;
- (void)setNetWorkTimer:(id)arg0;
- (void)socketConnetionLostTimeout;
- (void)setSocketConnectionLost:(BOOL)arg0;
- (void)invalidateNetworkTimer;
- (BOOL)socketConnectionLost;
- (void)createNetworkTimer;
- (void)enterGame;
- (BOOL)isRanking;
- (void)callbackUpdateQueueInfo;
- (void)callbackQueueInterfaceSel:(SEL)arg0;
- (void)trackQueueUpdate;
- (void)trackQueueComplete;
- (BOOL)hasSentFastQueue;
- (void)callbackFinishQueue;
- (BOOL)callbackCheckIsshowingInterfaceSel:(SEL)arg0;
- (BOOL)callbackCheckIsShowing;
- (void)callbackDidExpireQueue;
- (void)trackQueueExpire;
- (id)originDescription;
- (BOOL)alreadyPreload;
- (void)setAlreadyPreload:(BOOL)arg0;
- (id)proxyItem;
- (void)trackQueueQuit;
- (void)callbackDequeue;
- (void)callbackPreloadSuccess;
- (void)callbackCanjoinQueueWithCallback:(id /* block */)arg0;
- (BOOL)conformsToProtocol:(id)arg0;
- (id)userSession;
- (BOOL)isProxy;
- (BOOL)isMemberOfClass:(Class)arg0;
- (void).cxx_destruct;
- (BOOL)isKindOfClass:(Class)arg0;
- (void)forwardInvocation:(id)arg0;
- (void)preload;
- (BOOL)respondsToSelector:(SEL)arg0;
- (id)recorder;
- (void)stop;
- (id)initWithConfiguration:(id)arg0;
- (void)dequeue;
- (void)setUserSession:(id)arg0;
- (id)methodSignatureForSelector:(SEL)arg0;
- (id)delegate;
- (id)configuration;
- (id)description;
- (void)setRecorder:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)setConfiguration:(id)arg0;
- (id)itemId;
- (id)core;

@end
