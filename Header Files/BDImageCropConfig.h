//
//     Generated by private class-dump
//

@interface BDImageCropConfig : NSObject <NSCopying> {
    BOOL _usingDefaultCropRect;
    BOOL _usingViewBasedCropRect;
    double _maxCropAreaRatio;
    struct CGSize { double width; double height; } _viewSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _customCropRect;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _defaultCropRect;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } defaultCropRect;
@property (nonatomic) BOOL usingDefaultCropRect;
@property (nonatomic) BOOL usingViewBasedCropRect;
@property (nonatomic) double maxCropAreaRatio;
@property (nonatomic) struct CGSize { double width; double height; } viewSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } customCropRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;

+ (struct CGSize { double x0; double x1; })cropImageOriginalSizeForData:(id)arg0;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })centralCropRectForViewSize:(struct CGSize { double x0; double x1; })arg0 imageSize:(struct CGSize { double x0; double x1; })arg1;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })centralCropRectBaseOnViewSize:(struct CGSize { double x0; double x1; })arg0 imageSize:(struct CGSize { double x0; double x1; })arg1 maxCropAreaRatio:(double)arg2;

- (void)generatingDefaultCropRectIfNeededForImageData:(id)arg0;
- (void)setCustomCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setDefaultCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setMaxCropAreaRatio:(double)arg0;
- (void)setUsingDefaultCropRect:(BOOL)arg0;
- (void)setUsingViewBasedCropRect:(BOOL)arg0;
- (BOOL)usingInternalCropRect;
- (BOOL)usingDefaultCropRect;
- (BOOL)usingViewBasedCropRect;
- (double)maxCropAreaRatio;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })defaultCropRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })customCropRect;
- (id)init;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRect;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (struct CGSize { double x0; double x1; })viewSize;
- (void)setViewSize:(struct CGSize { double x0; double x1; })arg0;

@end
