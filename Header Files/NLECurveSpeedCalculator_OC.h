//
//     Generated by private class-dump
//

@interface NLECurveSpeedCalculator_OC : NSObject {
    struct shared_ptr<nle::utils::NLECurveSpeedCalculator> { struct NLECurveSpeedCalculator *__ptr_; struct __shared_weak_count *__cntrl_; } _calculator;
}

+ (struct vector<std::shared_ptr<cut::model::NLEPoint>, std::allocator<std::shared_ptr<cut::model::NLEPoint>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLEPoint> *, std::allocator<std::shared_ptr<cut::model::NLEPoint>>> { void *x0; } x2; })nlePointsFromCGPoints:(id)arg0;
+ (id)pointsFromNLEPoints:(struct vector<std::shared_ptr<cut::model::NLEPoint>, std::allocator<std::shared_ptr<cut::model::NLEPoint>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLEPoint> *, std::allocator<std::shared_ptr<cut::model::NLEPoint>>> { void *x0; } x2; })arg0;
+ (id)segmentPToSequenceP:(id)arg0;
+ (struct shared_ptr<cut::model::NLEPoint> { struct NLEPoint *x0; struct __shared_weak_count *x1; })nlePointFromCGPoint:(id)arg0;
+ (id)pointFromNLEPoint:(struct shared_ptr<cut::model::NLEPoint> { struct NLEPoint *x0; struct __shared_weak_count *x1; })arg0;
+ (id)generateThirdBezierPathPoints:(id)arg0;
+ (id)generateBezierPathLookupTable:(id)arg0;
+ (id)recursiveCalculateCubePoint:(id)arg0 progress:(float)arg1;
+ (struct CGPoint { double x0; double x1; })getBezierPointsWithLeft:(struct CGPoint { double x0; double x1; })arg0 right:(struct CGPoint { double x0; double x1; })arg1 duration:(long long)arg2 offet:(long long)arg3;
+ (struct CGPoint { double x0; double x1; })calculateCubePointWithT:(float)arg0 start:(struct CGPoint { double x0; double x1; })arg1 control1:(struct CGPoint { double x0; double x1; })arg2 control2:(struct CGPoint { double x0; double x1; })arg3 end:(struct CGPoint { double x0; double x1; })arg4;

- (id)initWithSeqPoints:(id)arg0;
- (id)initWithSegPoints:(id)arg0;
- (double)getAveCurveSpeedRatio;
- (double)getSpeedRatioBySeqDelta:(long long)arg0 seqDurationUs:(long long)arg1;
- (long long)sequenceDelToSegmentDel:(long long)arg0 seqDurationUs:(long long)arg1;
- (long long)segmentDelToSequenceDel:(long long)arg0 seqDurationUs:(long long)arg1;
- (void).cxx_destruct;
- (id).cxx_construct;

@end
