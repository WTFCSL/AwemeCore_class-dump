//
//     Generated by private class-dump
//

@class YataRenderData, YataDataItemModel, YataRenderObject, YataContainerItemModel, YataNodeContext, NSDictionary, NSString, YataNodeInfoData, YataProtocolModel;
@protocol YataInstanceInnerInterface;

@interface YataStructureNode : YataAbstractNode {
    NSString *_key;
    id<YataInstanceInnerInterface> _instance;
    YataNodeContext *_nodeContext;
    YataRenderObject *_renderObject;
    long long _nodeIndex;
    YataNodeInfoData *_nodeInfo;
    YataStructureNode *_ancestorRenderStuNode;
}

@property (nonatomic) long long nodeIndex;
@property (retain, nonatomic) YataNodeInfoData *nodeInfo;
@property (weak, nonatomic) YataStructureNode *ancestorRenderStuNode;
@property (weak, nonatomic) id<YataInstanceInnerInterface> instance;
@property (retain, nonatomic) YataRenderObject *renderObject;
@property (retain, nonatomic) YataNodeContext *nodeContext;
@property (readonly, nonatomic) YataContainerItemModel *nodeContainer;
@property (readonly, nonatomic) YataDataItemModel *nodeData;
@property (readonly, nonatomic) NSDictionary *globalData;
@property (readonly, nonatomic) YataProtocolModel *currentMergedDownLinkData;
@property (readonly, nonatomic) YataRenderData *renderData;

+ (void)initialize;

- (void)updateChildren;
- (void)unmount;
- (id)globalData;
- (id)nodeInfo;
- (id)renderObject;
- (void)setRenderObject:(id)arg0;
- (id)nodeContainer;
- (id)currentMergedDownLinkData;
- (id)renderData;
- (id)initWithNodeContext:(id)arg0 key:(id)arg1 yataInstance:(id)arg2;
- (void)initialBuild:(long long)arg0;
- (void)setNodeContext:(id)arg0;
- (id)globalFields;
- (id)nodeContext;
- (void)createNodeInfo:(long long)arg0;
- (void)setNodeInfo:(id)arg0;
- (void)createRenderObject;
- (id)createChildWithNodeContext:(id)arg0 key:(id)arg1 nodeIndex:(long long)arg2;
- (void)tryUpdateNodeInfo;
- (void)dfsUpdateChildren;
- (void)updateRenderObject;
- (void)validateNodeData;
- (void)registerAfterRenderToEventCenter:(id)arg0;
- (id)updateChildren:(id)arg0 newKeys:(id)arg1;
- (void)updateNodeIndex:(long long)arg0;
- (void)mount:(id)arg0;
- (void)attachRenderObject;
- (void)detachRenderObject;
- (void)removeNodeInfoToNodeContext;
- (void)reportErrorCode:(unsigned long long)arg0 detail:(id)arg1 nodeName:(id)arg2 extra:(id)arg3;
- (void)checkNodeContainer:(id)arg0 extraParams:(id)arg1 nodeName:(id)arg2;
- (void)checkNodeFeature:(id)arg0 extraParams:(id)arg1 nodeName:(id)arg2;
- (void)reportEmptyFields:(id)arg0;
- (void)reportEmptyEvents:(id)arg0;
- (id)findAncestorRenderObject;
- (void)setAncestorRenderStuNode:(id)arg0;
- (id)ancestorRenderStuNode;
- (void)insertChildRenderObject:(id)arg0;
- (void)removeChildRenderObject:(id)arg0;
- (BOOL)hasRenderGroup;
- (BOOL)hasRenderObject;
- (void)unmountChild:(id)arg0;
- (BOOL)isSameNodeKey:(id)arg0;
- (void)createChildren;
- (id)key;
- (void).cxx_destruct;
- (id)instance;
- (void)setKey:(id)arg0;
- (unsigned long long)hash;
- (void)update;
- (BOOL)isEqual:(id)arg0;
- (void)setInstance:(id)arg0;
- (void)flushRender;
- (id)nodeData;
- (void)setNodeIndex:(long long)arg0;
- (long long)nodeIndex;

@end
