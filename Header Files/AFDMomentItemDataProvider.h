//
//     Generated by private class-dump
//

@class HMDThreadSafeArray, HMDThreadSafeDictionary, WCTDatabase, NSString, NSObject;
@protocol OS_dispatch_queue;

@interface AFDMomentItemDataProvider : NSObject <AWEUserMessage> {
    BOOL _isCachePrepared;
    HMDThreadSafeDictionary *_memoryCache;
    WCTDatabase *_database;
    HMDThreadSafeArray *_existItems;
    NSObject<OS_dispatch_queue> *_setToDiskCacheSerialQueue;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _lock;
}

@property (retain, nonatomic) WCTDatabase *database;
@property (retain, nonatomic) HMDThreadSafeArray *existItems;
@property (nonatomic) BOOL isCachePrepared;
@property (nonatomic) struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } lock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *setToDiskCacheSerialQueue;
@property (retain, nonatomic) HMDThreadSafeDictionary *memoryCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didFinishLogin;
- (void)setupCache;
- (id)retrieveCachedAwemeForItemID:(id)arg0;
- (id)retrieveCachedAwemeForInsertPfp:(id)arg0;
- (id)retrieveCachedAwemeList;
- (void)cacheMomentWithModel:(id)arg0;
- (id)setToDiskCacheSerialQueue;
- (void)setSetToDiskCacheSerialQueue:(id)arg0;
- (void)prepareDatabase;
- (BOOL)createTableWithError:(id *)arg0;
- (BOOL)isCorrupted:(id)arg0;
- (void)setIsCachePrepared:(BOOL)arg0;
- (id)existItems;
- (void)deleteUsersWithItemIDs:(id)arg0;
- (void)preloadAwemeCacheWithRequestItems:(id)arg0;
- (BOOL)isValidAweme:(id)arg0;
- (id)getAllSnapShotItems;
- (void)updateCachedAwemeForItems:(id)arg0;
- (BOOL)isCachePrepared;
- (void)setExistItems:(id)arg0;
- (id)tableName;
- (id)init;
- (id)database;
- (void).cxx_destruct;
- (void)setDatabase:(id)arg0;
- (struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })lock;
- (void)updateItem:(id)arg0;
- (id)dbFilePath;
- (id)memoryCache;
- (void)dealloc;
- (void)setLock:(struct _opaque_pthread_rwlock_t { long long x0; char x1[192]; })arg0;
- (void)resetCache;
- (void)addObservers;
- (void)setMemoryCache:(id)arg0;

@end
