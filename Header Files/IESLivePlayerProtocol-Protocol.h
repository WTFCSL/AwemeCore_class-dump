//
//     Generated by private class-dump
//

@class IESLivePlayerMiddlewarePropertyContainer, NSString, IESLivePlayerAttachment, UIView, NSURL, NSError, NSDictionary, NSArray, IESLivePlayerSEIMetaInfo;
@protocol IESLivePlayerControllerDelegate;

@protocol IESLivePlayerProtocol <IESLivePlayerDeprecatedAPIProtocol, IESLivePlayerProtocolAssistance, IESLivePlayerProtocolVRSupport, IESLivePlayerEffectProtocol>

@property (readonly, nonatomic) IESLivePlayerMiddlewarePropertyContainer *middlewareProperties;
@property (weak, nonatomic) id<IESLivePlayerControllerDelegate> delegate;
@property (readonly, nonatomic) IESLivePlayerAttachment *playerAttachment;
@property (nonatomic) long long renderType;
@property (nonatomic) BOOL muted;
@property (nonatomic) float volume;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL openSEI;
@property (nonatomic) BOOL stopPlayerOnApplicationBackground;
@property (nonatomic) long long scaleType;
@property (copy, nonatomic) id /* block */ nodeOptimizer;
@property (copy, nonatomic) id /* block */ strategyInfo;
@property (copy, nonatomic) id /* block */ eyesProtectLutImageBlock;
@property (readonly, nonatomic) IESLivePlayerSEIMetaInfo *binarySEIInfo;
@property (readonly, nonatomic) NSDictionary *receiveMetaInfo;
@property (readonly, nonatomic) NSDictionary *receiveStreamMetaInfo;
@property (readonly, nonatomic) NSDictionary *receiveImmidiatelyMetaInfo;
@property (readonly, nonatomic) UIView *view;
@property (readonly, nonatomic) UIView *playerView;
@property (readonly, nonatomic) NSURL *contentURL;
@property (readonly, nonatomic) NSString *sdkParams;
@property (readonly, copy, nonatomic) NSString *currentStreamData;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } streamSize;
@property (readonly, copy, nonatomic) NSString *streamIDStr;
@property (nonatomic) BOOL isNeedCropVice;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } cropSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoCropAreaSize;
@property (readonly, nonatomic) BOOL playStarted;
@property (readonly, nonatomic) BOOL playPaused;
@property (readonly, nonatomic) BOOL rendered;
@property (readonly, nonatomic) unsigned long long loadState;
@property (readonly, nonatomic) unsigned long long playbackState;
@property (readonly, nonatomic) long long alignMode;
@property (readonly, nonatomic) NSError *error;
@property (nonatomic) BOOL isInteractRunning;
@property (readonly, nonatomic) BOOL supportsTimeShift;
@property (readonly, nonatomic) double timeShiftLowerBoundInSeconds;
@property (nonatomic) double iesLiveInvalidTimeShiftLowerBound;
@property (readonly, nonatomic) NSString *resolutionType;
@property (readonly, nonatomic) long long renderingFPS;
@property (nonatomic) BOOL enableSupportPictureInPictureMode;
@property (readonly, nonatomic) BOOL enableForbidVideoProcess;
@property (nonatomic) BOOL enableAudioRecording;
@property (nonatomic) BOOL enableVideoRecording;
@property (readonly, copy, nonatomic) NSString *videoCodecType;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic) BOOL prepareForReuse;
@property (nonatomic) BOOL shouldUseVideoFrameInViceView;
@property (readonly, nonatomic) NSArray *currentVicePlayerViews;
@property (readonly, nonatomic) UIView *decorationView;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (nonatomic) BOOL enableReplacePauseToStopInRtm;
@property (nonatomic) BOOL enablePresetPlayerSize;
@property (nonatomic) BOOL enableBackgroundPlay;
@property (readonly, nonatomic) BOOL enableVideoProcess;
@property (nonatomic) BOOL shouldOptLargeStreamSuperReso;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } renderViewFrame;
@property (readonly, nonatomic) BOOL didROIBMFSROpened;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoRoiRegion;
@property (readonly, nonatomic) NSDictionary *reportParam;
@property (readonly, nonatomic) NSDictionary *debugInfo;
@property (readonly, nonatomic) NSDictionary *streamRenderAudioVolume;
@property (copy, nonatomic) id /* block */ appInfoFetchBlock;
@property (copy, nonatomic) id /* block */ reportStateBlock;
@property (copy, nonatomic) id /* block */ trackBlock;
@property (copy, nonatomic) id /* block */ assertBlock;
@property (copy, nonatomic) id /* block */ imageDownLoad;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, copy, nonatomic) NSString *sdkKey;
@property (readonly, nonatomic) BOOL smoothSwitching;

- (void)setHardwareDecode:(BOOL)arg0;
- (BOOL)hardwareDecode;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)supportPictureInPictureMode;
- (id)createVicePlayerViewWithRenderingArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)currentVicePlayerViews;
- (id)createVicePlayerView;
- (void)destroyVicePlayerView:(id)arg0;
- (void)setEnableReplacePauseToStopInRtm:(BOOL)arg0;
- (BOOL)enableVideoProcess;
- (void)setShouldReportAudioFrame:(BOOL)arg0;
- (BOOL)shouldUseVideoFrameInViceView;
- (long long)currentAudioStreamDecibel;
- (long long)renderingFPS;
- (BOOL)enableReplacePauseToStopInRtm;
- (void)setShouldUseVideoFrameInViceView:(BOOL)arg0;
- (void)setEnableAudioRecording:(BOOL)arg0;
- (void)setCommonTag:(id)arg0;
- (BOOL)enableAudioRecording;
- (struct __CVBuffer { } *)cropCopyPixelBuffer:(float)arg0 topLeftY:(float)arg1 cropW:(float)arg2 cropH:(float)arg3;
- (long long)renderType;
- (id)currentStreamData;
- (void)updateLivePlayersEyesProtectState:(BOOL)arg0 intensityValue:(double)arg1;
- (BOOL)playStarted;
- (id)sdkParams;
- (long long)alignMode;
- (void)setAlignMode:(long long)arg0;
- (BOOL)supportsTimeShift;
- (void)setStrategyInfo:(id /* block */)arg0;
- (id /* block */)strategyInfo;
- (double)timeShiftLowerBoundInSeconds;
- (struct CGSize { double x0; double x1; })cropSize;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1;
- (void)setMuted:(BOOL)arg0 callTrace:(id)arg1;
- (void)playWithCallTrace:(id)arg0;
- (void)pauseWithCallTrace:(id)arg0;
- (void)stopWithCallTrace:(id)arg0;
- (id)sdkKey;
- (void)resetWithCallTrace:(id)arg0;
- (void)updateSDKKey:(id)arg0 callTrace:(id)arg1;
- (void)updateTVLSettings:(id)arg0;
- (void)reloadURL:(id)arg0 callTrace:(id)arg1 sdkParams:(id)arg2;
- (void)closeWithCallTrace:(id)arg0;
- (BOOL)shouldReportByPlayerSDKApplog;
- (id)initWithURL:(id)arg0 sdkParams:(id)arg1;
- (BOOL)supportResolutionSDKKey:(id)arg0;
- (void)switchCurrentItemResolution:(id)arg0 callTrace:(id)arg1;
- (void)smoothlySwitchCurrentItemResolution:(id)arg0 switchReason:(long long)arg1 callTrace:(id)arg2 completion:(id /* block */)arg3;
- (void)updateSDKKey:(id)arg0 useTSL:(BOOL)arg1 callTrace:(id)arg2;
- (BOOL)tryUpdateSDKKey:(id)arg0 useTSL:(BOOL)arg1 callTrace:(id)arg2;
- (void)preparePlayerItemWithStreamData:(id)arg0 preferenceInfo:(id)arg1 callTrace:(id)arg2;
- (void)reloadURL:(id)arg0 callTrace:(id)arg1 sdkParams:(id)arg2 force:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 useTLS:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 force:(BOOL)arg2;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 force:(BOOL)arg2 skipReset:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 skipReset:(BOOL)arg4;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 preferenceInfo:(id)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 useTLS:(BOOL)arg4 preferenceInfo:(id)arg5;
- (void)clearSEIInfoWithCallTrace:(id)arg0;
- (void)setShouldMuted:(BOOL)arg0 callTrace:(id)arg1;
- (void)enableAudioProcessorInPlaying:(BOOL)arg0 callTrace:(id)arg1;
- (void)setPlayerMutedInAudioProcessing:(BOOL)arg0 callTrace:(id)arg1;
- (void)playWithCallTrace:(id)arg0 triggerReason:(id)arg1;
- (void)stopWithCallTrace:(id)arg0 forceOnMainThread:(BOOL)arg1;
- (void)removePlayerViewFromSuperViewWithCallTrace:(id)arg0;
- (void)preloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2;
- (void)resetPreloadWithCallTrace:(id)arg0;
- (void)startVideoRenderingWithCallTrace:(id)arg0;
- (void)stopVideoRenderingWithCallTrace:(id)arg0;
- (void)startAudioRenderingWithCallTrace:(id)arg0;
- (void)stopAudioRenderingWithCallTrace:(id)arg0;
- (void)updateTVLCommonParams:(id)arg0;
- (void)setTimeShift:(long long)arg0;
- (BOOL)isBufferFull;
- (void)setEnableForbidVideoProcess:(BOOL)arg0;
- (BOOL)isPlayerValid;
- (void)setSuperResolutionSwitchIfNeeded:(BOOL)arg0;
- (void)setSuperResolutionType:(long long)arg0;
- (void)setSuperResolutionTypeWithString:(id)arg0;
- (BOOL)queryPlayerVideoFrameDidRender;
- (id)middlewareProperties;
- (id)playerAttachment;
- (BOOL)openSEI;
- (void)setOpenSEI:(BOOL)arg0;
- (BOOL)stopPlayerOnApplicationBackground;
- (void)setStopPlayerOnApplicationBackground:(BOOL)arg0;
- (id /* block */)nodeOptimizer;
- (void)setNodeOptimizer:(id /* block */)arg0;
- (id /* block */)eyesProtectLutImageBlock;
- (void)setEyesProtectLutImageBlock:(id /* block */)arg0;
- (id)binarySEIInfo;
- (id)receiveMetaInfo;
- (id)receiveStreamMetaInfo;
- (id)receiveImmidiatelyMetaInfo;
- (struct CGSize { double x0; double x1; })streamSize;
- (id)streamIDStr;
- (BOOL)isNeedCropVice;
- (void)setIsNeedCropVice:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoCropAreaSize;
- (void)setVideoCropAreaSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)playPaused;
- (BOOL)isInteractRunning;
- (void)setIsInteractRunning:(BOOL)arg0;
- (double)iesLiveInvalidTimeShiftLowerBound;
- (void)setIesLiveInvalidTimeShiftLowerBound:(double)arg0;
- (BOOL)enableSupportPictureInPictureMode;
- (void)setEnableSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)enableForbidVideoProcess;
- (BOOL)enableVideoRecording;
- (void)setEnableVideoRecording:(BOOL)arg0;
- (void)setPrepareForReuse:(BOOL)arg0;
- (BOOL)enablePresetPlayerSize;
- (void)setEnablePresetPlayerSize:(BOOL)arg0;
- (BOOL)enableBackgroundPlay;
- (void)setEnableBackgroundPlay:(BOOL)arg0;
- (BOOL)shouldOptLargeStreamSuperReso;
- (void)setShouldOptLargeStreamSuperReso:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderViewFrame;
- (void)setRenderViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)didROIBMFSROpened;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoRoiRegion;
- (id)reportParam;
- (id)streamRenderAudioVolume;
- (id /* block */)appInfoFetchBlock;
- (void)setAppInfoFetchBlock:(id /* block */)arg0;
- (id /* block */)reportStateBlock;
- (void)setReportStateBlock:(id /* block */)arg0;
- (id /* block */)trackBlock;
- (void)setTrackBlock:(id /* block */)arg0;
- (id /* block */)assertBlock;
- (void)setAssertBlock:(id /* block */)arg0;
- (id /* block */)imageDownLoad;
- (void)setImageDownLoad:(id /* block */)arg0;
- (BOOL)smoothSwitching;
- (unsigned long long)playbackState;
- (id)init;
- (BOOL)muted;
- (id)sessionID;
- (unsigned long long)loadState;
- (float)volume;
- (void)setMuted:(BOOL)arg0;
- (id)contentURL;
- (id)debugInfo;
- (id)initWithConfig:(id)arg0;
- (id)delegate;
- (BOOL)prepareForReuse;
- (void)setVolume:(float)arg0;
- (id)playerView;
- (void)setDelegate:(id)arg0;
- (void)setRenderType:(long long)arg0;
- (id)currentSettings;
- (id)view;
- (void)viewWillAppear;
- (id)error;
- (void)setValue:(int)arg0 forKey:(int)arg1;
- (id)decorationView;
- (id)videoCodecType;
- (id)resolutionType;
- (long long)scaleType;
- (void)setScaleType:(long long)arg0;
- (struct CGSize { double x0; double x1; })videoSize;
- (BOOL)rendered;
- (void)viewWillDisappear;

@optional

- (void)player:(id)arg0 srTypeUpdate:(long long)arg1 hasManualSetSRType:(BOOL)arg2;
- (void)setPrepareForReuse:(BOOL)arg0 callTrace:(id)arg1;
- (void)setEnableVideoProcess:(BOOL)arg0 callTrace:(id)arg1;
- (void)setEnableVideoSDR2HDR:(BOOL)arg0 callTrace:(id)arg1;
- (BOOL)currentPlayeItemIsRTM;
- (void)adjustVolumeEffectTargetLufs:(float)arg0 callTrace:(id)arg1;
- (void)setWholeVolumeEffectParam:(id)arg0 callTrace:(id)arg1;
- (void)choosePlayerSpecifySceneForLOB:(long long)arg0 callTrace:(id)arg1;
- (void)setRoiBMFSR:(BOOL)arg0 xInRate:(float)arg1 yInRate:(float)arg2 wInRate:(float)arg3 hInRate:(float)arg4;
- (void)setOptionValue:(id)arg0 forOptionKey:(unsigned long long)arg1;

@end
