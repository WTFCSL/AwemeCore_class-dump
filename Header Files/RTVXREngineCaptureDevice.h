//
//     Generated by private class-dump
//

@class RxDeferred, NSTimer, NSString;
@protocol RTVMonitor, RxInjector, RTVXREngineCaptureDeviceDelegate;

@interface RTVXREngineCaptureDevice : NSObject <RTVXREngineDelegate> {
    id<RxInjector> _injector;
    id<RTVMonitor> _monitor;
    long long _type;
    long long _state;
    double _lastReceiveCaptureStreamTimestamp;
    NSTimer *_timer;
    id<RTVXREngineCaptureDeviceDelegate> _delegate;
    long long _monitorCount;
    RxDeferred *_blockReleaseEngineDeferred;
}

@property (nonatomic) long long monitorCount;
@property (retain) RxDeferred *blockReleaseEngineDeferred;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, nonatomic) id<RTVMonitor> monitor;
@property (readonly, nonatomic) long long type;
@property long long state;
@property double lastReceiveCaptureStreamTimestamp;
@property (retain) NSTimer *timer;
@property (weak, nonatomic) id<RTVXREngineCaptureDeviceDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rxAwakeFromPropertyInjection;
- (void)renderModel:(id)arg0 context:(id)arg1;
- (void)__logEvent:(id)arg0 params:(id)arg1;
- (double)monitorDuration;
- (id)blockReleaseEngineDeferred;
- (void)setBlockReleaseEngineDeferred:(id)arg0;
- (void)__updateBlockReleaseEngineDeferred:(id)arg0;
- (void)__reportException:(id)arg0;
- (void)setLastReceiveCaptureStreamTimestamp:(double)arg0;
- (id)applyOperation:(long long)arg0;
- (double)lastReceiveCaptureStreamTimestamp;
- (id)__applyOperation:(long long)arg0;
- (long long)monitorCount;
- (void)setMonitorCount:(long long)arg0;
- (void)__setNeedBlockReleaseEngine:(BOOL)arg0;
- (void)__reportException:(id)arg0 params:(id)arg1;
- (void)receiveCaptureStream;
- (double)lastReceiveCaptureStreamInterval;
- (double)durationOfConfirmLossStream;
- (double)durationOfConfirmReceiveStream;
- (id)timer;
- (void).cxx_destruct;
- (id)monitor;
- (long long)state;
- (void)setState:(long long)arg0;
- (long long)type;
- (id)injector;
- (id)delegate;
- (void)setTimer:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;

@end
