//
//     Generated by private class-dump
//

@class NSMutableDictionary, GPBFieldDescriptor, GPBExtensionDescriptor, NSDictionary, HTSLiveUser, HTSLiveCommon, IESLiveThreadSafeDictionary, IESGCPPBResponse_Header, NSString, HTSLivePBResponse_Header, IESECPBMessageExtra, GPBUnknownFieldSet, NSNumber, HTSLivePublicAreaCommon;
@protocol IESLiveAudioSendStatusChangeDelegate;

@interface GPBMessage : NSObject <NSSecureCoding, NSCopying> {
    GPBUnknownFieldSet *unknownFields_;
    NSMutableDictionary *extensionMap_;
    NSMutableDictionary *autocreatedExtensionMap_;
    GPBMessage *autocreator_;
    GPBFieldDescriptor *autocreatorField_;
    GPBExtensionDescriptor *autocreatorExtension_;
    _Atomic id readOnlySemaphore_;
    struct GPBMessage_Storage { unsigned int x0[0]; } *messageStorage_;
}

@property (retain, nonatomic) IESECPBMessageExtra *iesecExtra;
@property (retain, nonatomic) IESGCPPBResponse_Header *iesgcp_headerModel;
@property (retain, nonatomic) NSDictionary *iesgcp_responseHeaders;
@property (readonly, copy, nonatomic) NSString *iesgcp_logid;
@property (readonly, copy, nonatomic) NSString *iesgcp_requestId;
@property (nonatomic) unsigned long long ac_status;
@property (nonatomic) BOOL ac_hasPlay;
@property (weak, nonatomic) id<IESLiveAudioSendStatusChangeDelegate> statusChangeDelegate;
@property (nonatomic) BOOL isAnchorSpeechMsg;
@property (retain, nonatomic) NSString *atUserContent;
@property (nonatomic) long long liveIM_delayDispatchStreamTime;
@property (nonatomic) long long liveIM_msgID;
@property (copy, nonatomic) NSString *liveIM_method;
@property (nonatomic) BOOL liveIM_needWrdsStore;
@property (retain, nonatomic) NSNumber *liveIM_wrdsVersion;
@property (retain, nonatomic) NSString *liveIM_wrdsSubKey;
@property (retain, nonatomic) HTSLivePBResponse_Header *headerModel;
@property (retain, nonatomic) NSDictionary *responseHeaders;
@property (readonly, copy, nonatomic) NSString *logid;
@property (readonly, copy, nonatomic) NSString *requestId;
@property (retain, nonatomic) HTSLiveCommon *commonModel;
@property (retain, nonatomic) HTSLivePublicAreaCommon *publicAreaCommonModel;
@property (retain, nonatomic) HTSLiveUser *userModel;
@property (retain, nonatomic) HTSLiveUser *toUserModel;
@property (retain, nonatomic) IESLiveThreadSafeDictionary *customExtraData;
@property (retain, nonatomic) NSNumber *showTimeStamp;
@property (nonatomic) BOOL needFold;
@property (nonatomic) BOOL needFoldForStrategy;
@property (nonatomic) long long waitingTime;
@property (nonatomic) BOOL isLoadMoreHistoryMessage;
@property (nonatomic) long long historyCommentType;
@property (nonatomic) BOOL isAnonymousMsg;
@property (nonatomic) BOOL didEnterbackgroundBeforeOnScreen;
@property (nonatomic) BOOL needShowInPublicScreenImmediately;
@property (nonatomic) int msgIndividualPriority;
@property (retain, nonatomic) HTSLiveUser *userModel;
@property (retain, nonatomic) HTSLiveUser *toUserModel;
@property (copy, nonatomic) NSString *mixUserId;
@property (copy, nonatomic) NSString *mixAnchorId;
@property (copy, nonatomic) NSString *mixOwnerUserId;
@property (readonly, copy, nonatomic) NSString *mixToUserId;
@property (readonly, copy, nonatomic) NSString *mixFromUserId;
@property (copy, nonatomic) NSString *mixSecUserID;
@property (readonly, copy, nonatomic) NSString *mixSecFromUserId;
@property (readonly, copy, nonatomic) NSString *mixSecToUserId;
@property (copy, nonatomic) GPBUnknownFieldSet *unknownFields;
@property (readonly, nonatomic, getter=isInitialized) BOOL initialized;

+ (id)iesgamecp_parseFromJson:(id)arg0 error:(id *)arg1;
+ (id)ieslive_parseFromJson:(id)arg0 error:(id *)arg1;
+ (id)tim_parseFromJson:(id)arg0 error:(id *)arg1;
+ (void)tim_merge:(id)arg0 message:(id)arg1 ignoreDefaultValue:(BOOL)arg2;
+ (id)tim_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1;
+ (id)tim_fieldWithTextFormatName:(id)arg0 inDescriptor:(id)arg1;
+ (void)tim_mergeField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)tim_parseFieldValue:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)tim_mergeRepeatedField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)tim_mergeMapField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (id)tim_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2;
+ (union { BOOL x0; int x1; long long x2; unsigned int x3; unsigned long long x4; float x5; double x6; id x7; id x8; id x9; int x10; })tim_readValue:(id)arg0 dataType:(unsigned char)arg1 field:(id)arg2;
+ (id)tim_printField:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)tim_printSingleFieldValue:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)tim_printRepeatedFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)tim_printMapFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (void)iesec_merge:(id)arg0 message:(id)arg1 ignoreDefaultValue:(BOOL)arg2;
+ (id)iesec_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1;
+ (id)iesec_fieldWithTextFormatName:(id)arg0 inDescriptor:(id)arg1;
+ (void)iesec_mergeField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesec_parseFieldValue:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesec_mergeRepeatedField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesec_mergeMapField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (id)iesec_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2;
+ (union { BOOL x0; int x1; long long x2; unsigned int x3; unsigned long long x4; float x5; double x6; id x7; id x8; id x9; int x10; })iesec_readValue:(id)arg0 dataType:(unsigned char)arg1 field:(id)arg2;
+ (id)iesec_printField:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesec_printSingleFieldValue:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesec_printRepeatedFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesec_printMapFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesec_parseFromJson:(id)arg0 error:(id *)arg1;
+ (void)iesgamecp_merge:(id)arg0 message:(id)arg1 ignoreDefaultValue:(BOOL)arg2;
+ (id)iesgamecp_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1;
+ (id)iesgamecp_fieldWithTextFormatName:(id)arg0 inDescriptor:(id)arg1;
+ (void)iesgamecp_mergeField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesgamecp_parseFieldValue:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesgamecp_mergeRepeatedField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)iesgamecp_mergeMapField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (id)iesgamecp_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2;
+ (union { BOOL x0; int x1; long long x2; unsigned int x3; unsigned long long x4; float x5; double x6; id x7; id x8; id x9; int x10; })iesgamecp_readValue:(id)arg0 dataType:(unsigned char)arg1 field:(id)arg2;
+ (id)iesgamecp_printField:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesgamecp_printSingleFieldValue:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesgamecp_printRepeatedFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)iesgamecp_printMapFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (void)ieslive_merge:(id)arg0 message:(id)arg1 ignoreDefaultValue:(BOOL)arg2;
+ (id)ieslive_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1;
+ (id)ieslive_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1 useEnumRawValue:(BOOL)arg2;
+ (id)ieslive_fieldWithTextFormatName:(id)arg0 inDescriptor:(id)arg1;
+ (void)ieslive_mergeField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)ieslive_parseFieldValue:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)ieslive_mergeRepeatedField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)ieslive_mergeMapField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (id)ieslive_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2;
+ (union { BOOL x0; int x1; long long x2; unsigned int x3; unsigned long long x4; float x5; double x6; id x7; id x8; id x9; int x10; })ieslive_readValue:(id)arg0 dataType:(unsigned char)arg1 field:(id)arg2;
+ (id)ieslive_printField:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2 useEnumRawValue:(BOOL)arg3;
+ (id)ieslive_printSingleFieldValue:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2 useEnumRawValue:(BOOL)arg3;
+ (id)ieslive_printRepeatedFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2 useEnumRawValue:(BOOL)arg3;
+ (id)ieslive_printMapFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2 useEnumRawValue:(BOOL)arg3;
+ (id)ieslive_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2 useEnumRawValue:(BOOL)arg3;
+ (void)timx_merge:(id)arg0 message:(id)arg1 ignoreDefaultValue:(BOOL)arg2;
+ (id)timx_printMessage:(id)arg0 useTextFormatKey:(BOOL)arg1;
+ (id)timx_fieldWithTextFormatName:(id)arg0 inDescriptor:(id)arg1;
+ (void)timx_mergeField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)timx_parseFieldValue:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)timx_mergeRepeatedField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (void)timx_mergeMapField:(id)arg0 json:(id)arg1 message:(id)arg2 ignoreDefaultValue:(BOOL)arg3;
+ (id)timx_canonicalValue:(id)arg0 field:(id)arg1 toJson:(BOOL)arg2;
+ (union { BOOL x0; int x1; long long x2; unsigned int x3; unsigned long long x4; float x5; double x6; id x7; id x8; id x9; int x10; })timx_readValue:(id)arg0 dataType:(unsigned char)arg1 field:(id)arg2;
+ (id)timx_printField:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)timx_printSingleFieldValue:(id)arg0 msg:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)timx_printRepeatedFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)timx_printMapFieldValue:(id)arg0 value:(id)arg1 useTextFormatKey:(BOOL)arg2;
+ (id)timx_parseFromJson:(id)arg0 error:(id *)arg1;
+ (id)allocWithZone:(struct _NSZone { } *)arg0;
+ (void)initialize;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)alloc;
+ (BOOL)supportsSecureCoding;
+ (void)load;
+ (id)parseFromData:(id)arg0 error:(id *)arg1;
+ (id)message;
+ (id)descriptor;
+ (BOOL)resolveInstanceMethod:(SEL)arg0;
+ (BOOL)resolveClassMethod:(SEL)arg0;
+ (id)parseFromData:(id)arg0 extensionRegistry:(id)arg1 error:(id *)arg2;
+ (id)parseFromCodedInputStream:(id)arg0 extensionRegistry:(id)arg1 error:(id *)arg2;
+ (id)parseDelimitedFromCodedInputStream:(id)arg0 extensionRegistry:(id)arg1 error:(id *)arg2;

- (id)commonModel;
- (void)setCommonModel:(id)arg0;
- (void)setShowTimeStamp:(id)arg0;
- (id)showTimeStamp;
- (id)logid;
- (id)timx_toJson;
- (void)setRequestIdStr:(id)arg0;
- (id)iesgamecp_toJson;
- (id)ieslive_toJson;
- (id)tim_toJson;
- (void)tim_mergeFromJson:(id)arg0;
- (id)iesec_toJson;
- (id)iesecExtra;
- (id)iesec_toJsonWithFormatKey:(BOOL)arg0;
- (void)iesec_mergeFromJson:(id)arg0;
- (void)setIesecExtra:(id)arg0;
- (BOOL)iesec_hasTargetRoomID;
- (BOOL)iesec_isEqualToTargetRoomID:(id)arg0;
- (void)iesgamecp_mergeFromJson:(id)arg0;
- (id)iesgamecp_toJsonWithFormatKey:(BOOL)arg0;
- (void)setIesgcp_headerModel:(id)arg0;
- (id)iesgcp_responseHeaders;
- (id)iesgcp_headerModel;
- (void)setIesgcp_responseHeaders:(id)arg0;
- (id)iesgcp_logid;
- (id)iesgcp_requestId;
- (void)setIesgcp_requestId:(id)arg0;
- (BOOL)iesgcp_isSuccessResponse;
- (BOOL)isSuccessResponse;
- (unsigned long long)ac_status;
- (id)statusChangeDelegate;
- (BOOL)ac_hasPlay;
- (BOOL)isAnchorSpeechMsg;
- (id)atUserContent;
- (void)setAc_status:(unsigned long long)arg0;
- (void)setAc_hasPlay:(BOOL)arg0;
- (void)setStatusChangeDelegate:(id)arg0;
- (void)setIsAnchorSpeechMsg:(BOOL)arg0;
- (void)setAtUserContent:(id)arg0;
- (void)setIsAnonymousMsg:(BOOL)arg0;
- (id)customExtraData;
- (void)setAddition_msgType:(long long)arg0;
- (id)mixUserId;
- (void)setNeedFold:(BOOL)arg0;
- (id)localTimeStamp;
- (int)msgIndividualPriority;
- (long long)historyCommentType;
- (id)mixAnchorId;
- (void)setLocalTimeStamp:(id)arg0;
- (BOOL)isAnonymousMsg;
- (id)mixFromUserId;
- (id)mixToUserId;
- (id)fetchTimeStamp;
- (void)setMsgIndividualPriority:(int)arg0;
- (BOOL)needFold;
- (id)toUserModel;
- (id)toUserModel;
- (id)mixSecUserID;
- (id)publicAreaCommonModel;
- (BOOL)isFirstBatchMessage;
- (void)setIsFirstBatchMessage:(BOOL)arg0;
- (BOOL)didEnterbackgroundBeforeOnScreen;
- (BOOL)needShowInPublicScreenImmediately;
- (BOOL)isLoadMoreHistoryMessage;
- (void)setDidEnterbackgroundBeforeOnScreen:(BOOL)arg0;
- (void)setIsLoadMoreHistoryMessage:(BOOL)arg0;
- (void)setHistoryCommentType:(long long)arg0;
- (void)setNeedShowInPublicScreenImmediately:(BOOL)arg0;
- (BOOL)needFoldForStrategy;
- (void)ieslive_mergeFrom:(id)arg0;
- (id)ieslive_toJsonWithFormatKey:(BOOL)arg0 useEnumRawValue:(BOOL)arg1;
- (void)setNeedFoldForStrategy:(BOOL)arg0;
- (long long)liveIM_msgID;
- (BOOL)liveIM_needWrdsStore;
- (void)setLiveIM_method:(id)arg0;
- (id)liveIM_method;
- (void)setLiveIM_delayDispatchStreamTime:(long long)arg0;
- (void)setLiveIM_msgID:(long long)arg0;
- (void)setLiveIM_needWrdsStore:(BOOL)arg0;
- (void)setLiveIM_wrdsVersion:(id)arg0;
- (void)setLiveIM_wrdsSubKey:(id)arg0;
- (long long)liveIM_delayDispatchStreamTime;
- (id)liveIM_wrdsSubKey;
- (id)liveIM_wrdsVersion;
- (void)ieslive_mergeFromJson:(id)arg0;
- (id)ieslive_toJsonWithFormatKey:(BOOL)arg0;
- (id)live_userIdStringDict:(id)arg0;
- (id)live_userIdStringArray:(id)arg0;
- (id)live_userIdStringBOOLDict:(id)arg0;
- (id)live_userIdInt64Array:(id)arg0;
- (void)setToUserModel:(id)arg0;
- (void)setToUserModel:(id)arg0;
- (void)setPublicAreaCommonModel:(id)arg0;
- (void)ieslive_dealloc;
- (void)ieslive_handleArrayWith:(id)arg0;
- (long long)waitingTime;
- (void)setCustomExtraData:(id)arg0;
- (void)setWaitingTime:(long long)arg0;
- (long long)addition_msgType;
- (void)setFetchTimeStamp:(id)arg0;
- (id)live_mixIdFormSelector:(SEL)arg0;
- (void)setMixOwnerUserId:(id)arg0;
- (void)setMixUserId:(id)arg0;
- (void)setMixSecUserID:(id)arg0;
- (void)setMixAnchorId:(id)arg0;
- (id)mixOwnerUserId;
- (id)mixSecFromUserId;
- (id)mixSecToUserId;
- (void)timx_mergeFromJson:(id)arg0;
- (id)timx_safeValueForSelector:(SEL)arg0;
- (int)timx_safeIntValueForSelector:(SEL)arg0 defaultValue:(int)arg1;
- (BOOL)timx_safeBOOLValueForSelector:(SEL)arg0 defaultValue:(BOOL)arg1;
- (id)timx_safeStringValueForSelector:(SEL)arg0 defaultValue:(id)arg1;
- (BOOL)isInitialized;
- (id)initWithData:(id)arg0 error:(id *)arg1;
- (id)init;
- (id)data;
- (void)setResponseHeaders:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)responseHeaders;
- (id)userModel;
- (id)userModel;
- (void)setUserModel:(id)arg0;
- (void)setUserModel:(id)arg0;
- (id)descriptor;
- (id)initWithCoder:(id)arg0;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg0;
- (void)clear;
- (id)description;
- (void)mergeFrom:(id)arg0;
- (void)encodeWithCoder:(id)arg0;
- (void)dealloc;
- (id)requestId;
- (id)unknownFields;
- (id)initWithData:(id)arg0 extensionRegistry:(id)arg1 error:(id *)arg2;
- (id)initWithCodedInputStream:(id)arg0 extensionRegistry:(id)arg1 error:(id *)arg2;
- (void)copyFieldsInto:(id)arg0 zone:(struct _NSZone { } *)arg1 descriptor:(id)arg2;
- (void)internalClear:(BOOL)arg0;
- (id)delimitedData;
- (void)writeToOutputStream:(id)arg0;
- (void)writeToCodedOutputStream:(id)arg0;
- (void)writeDelimitedToOutputStream:(id)arg0;
- (void)writeDelimitedToCodedOutputStream:(id)arg0;
- (void)writeField:(id)arg0 toCodedOutputStream:(id)arg1;
- (id)getExtension:(id)arg0;
- (id)getExistingExtension:(id)arg0;
- (BOOL)hasExtension:(id)arg0;
- (id)extensionsCurrentlySet;
- (void)writeExtensionsToCodedOutputStream:(id)arg0 range:(struct GPBExtensionRange { unsigned int x0; unsigned int x1; })arg1;
- (void)setExtension:(id)arg0 value:(id)arg1;
- (void)addExtension:(id)arg0 value:(id)arg1;
- (void)setExtension:(id)arg0 index:(unsigned long long)arg1 value:(id)arg2;
- (void)clearExtension:(id)arg0;
- (void)mergeFromData:(id)arg0 extensionRegistry:(id)arg1;
- (void)mergeDelimitedFromCodedInputStream:(id)arg0 extensionRegistry:(id)arg1;
- (void)setUnknownFields:(id)arg0;
- (void)parseMessageSet:(id)arg0 extensionRegistry:(id)arg1;
- (BOOL)parseUnknownField:(id)arg0 extensionRegistry:(id)arg1 tag:(unsigned int)arg2;
- (void)addUnknownMapEntry:(int)arg0 value:(id)arg1;
- (void)mergeFromCodedInputStream:(id)arg0 extensionRegistry:(id)arg1;
- (unsigned long long)serializedSize;
- (void)setHeaderModel:(id)arg0;
- (id)headerModel;

@end
