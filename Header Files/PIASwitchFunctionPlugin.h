//
//     Generated by private class-dump
//

@class NSMutableDictionary, YYMemoryCache, PIAMMKVStorage, NSMutableSet;

@interface PIASwitchFunctionPlugin : NSObject <PIAFetchSettingsProtocol>

@property (class, readonly, nonatomic) PIAMMKVStorage *switchStorage;
@property (class, readonly, nonatomic) NSMutableSet *urlAllowList;
@property (class, readonly, nonatomic) NSMutableDictionary *functionMap;
@property (class, readonly, nonatomic) YYMemoryCache *urlCache;

+ (void)executeAfterPrepareTask;
+ (BOOL)checkURLMatchPIA:(id)arg0;
+ (BOOL)isFunctionCanBeUsed:(id)arg0 URL:(id)arg1 scene:(id)arg2;
+ (BOOL)getBaseSwitchValueForKey:(id)arg0;
+ (id)tryFetchSettingsKeyIfNeed:(id)arg0;
+ (void)injectSettingBridgeWithContext:(id)arg0 instance:(id)arg1;
+ (void)p_setFunctionKey;
+ (BOOL)ifPageURLExist:(id)arg0;
+ (BOOL)checkURLInBlockList:(id)arg0;
+ (BOOL)isURLInAllowDomainList:(id)arg0;
+ (id)switchKey:(id)arg0 type:(unsigned long long)arg1;
+ (id)functionMap;
+ (BOOL)isURLEnabled:(id)arg0 function:(id)arg1 scene:(id)arg2;
+ (BOOL)checkFunctionEnable:(id)arg0 ForURL:(id)arg1 originURL:(id)arg2;
+ (id)urlAllowList;
+ (id)switchStorage;
+ (void)registerFunctionDefaultSwitch:(id)arg0 enabled:(BOOL)arg1 type:(unsigned long long)arg2;
+ (BOOL)isFunctionCanBeUsed:(id)arg0 URL:(id)arg1 scene:(id)arg2 completion:(id /* block */)arg3;
+ (void)fetchSetting:(id)arg0;
+ (id)getPageConfigForKey:(id)arg0;
+ (void)initialize;
+ (id)urlCache;

@end
