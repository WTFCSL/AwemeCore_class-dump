//
//     Generated by private class-dump
//

@class BDAAppStorePreloadList, BDAAppStorePreloadItem, NSString;

@interface BDAAppStoreManager : NSObject <SKStoreProductViewControllerDelegate> {
    BOOL _preloadOnlyWIFI;
    BOOL _enablePreventSKGesture;
    BOOL _isReusePreload;
    BOOL _isPresentAnimated;
    BOOL _isEnableFixRetainCycle;
    BOOL _isCallSkanImpressionInAsyncThread;
    BOOL _isForbidAppStoreLogic;
    BOOL _shouldRequestAppManager;
    BOOL _isHalfAppStore;
    BOOL _isForbidSKStoreProductViewController;
    BOOL _enableRetainSkvcAvoidCrash;
    BOOL _presenting;
    unsigned long long _halfAppStoreFrameY;
    id /* block */ _SKStoreInitAction;
    id /* block */ _openURLAction;
    id /* block */ _openURLWithCompletionAction;
    BDAAppStorePreloadList *_preloadList;
    BDAAppStorePreloadItem *_presentingItem;
}

@property (nonatomic) BOOL presenting;
@property (retain, nonatomic) BDAAppStorePreloadList *preloadList;
@property (retain, nonatomic) BDAAppStorePreloadItem *presentingItem;
@property (nonatomic) BOOL preloadOnlyWIFI;
@property (nonatomic) BOOL enablePreventSKGesture;
@property (nonatomic) unsigned long long maxPreloadCount;
@property (nonatomic) BOOL isReusePreload;
@property (readonly, nonatomic) long long supportPreloadType;
@property (nonatomic) BOOL isPresentAnimated;
@property (nonatomic) BOOL isEnableFixRetainCycle;
@property (nonatomic) BOOL isCallSkanImpressionInAsyncThread;
@property (nonatomic) BOOL isForbidAppStoreLogic;
@property (nonatomic) BOOL shouldRequestAppManager;
@property (nonatomic) BOOL isHalfAppStore;
@property (nonatomic) unsigned long long halfAppStoreFrameY;
@property (nonatomic) BOOL isForbidSKStoreProductViewController;
@property (nonatomic) BOOL enableRetainSkvcAvoidCrash;
@property (copy, nonatomic) id /* block */ SKStoreInitAction;
@property (copy, nonatomic) id /* block */ openURLAction;
@property (copy, nonatomic) id /* block */ openURLWithCompletionAction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)hasControllerPreloadedByAppID:(id)arg0;
+ (id)controllerPreloadedByAppID:(id)arg0;
+ (void)clearPreloadCacheByAppID:(id)arg0;
+ (void)clearPreloadCacheBySKController:(id)arg0;
+ (id)convertProductParamsWithModel:(id)arg0;
+ (void)trackCommerceJumpEventWithModel:(id)arg0 isPermit:(BOOL)arg1 errorCode:(long long)arg2 errorCodeMessage:(id)arg3;
+ (void)checkAppStorePermissionWithModel:(id)arg0 completion:(id /* block */)arg1;
+ (void)trackCommerceOpenEventWithModel:(id)arg0 isPermit:(BOOL)arg1 errorCode:(long long)arg2 errorCodeMessage:(id)arg3;
+ (void)trackReserveInfoIfNeededWithModel:(id)arg0;
+ (void)clearAllPreloadCache;
+ (void)requestAppStoreManagerWithModel:(id)arg0 times:(long long)arg1 completion:(id /* block */)arg2;
+ (void)trackAppManagerRequestEventWithModel:(id)arg0 complianceData:(id)arg1 appleId:(id)arg2 status:(long long)arg3 duration:(double)arg4 times:(long long)arg5 message:(id)arg6;
+ (id)complianceDataMonitors:(id)arg0;
+ (void)preloadAppStoreControllerWithModel:(id)arg0;
+ (void)openAppStoreControllerWithModel:(id)arg0;
+ (id)duplicatedControllerWithAppID:(id)arg0 dismissAnimated:(BOOL)arg1;
+ (id)convertProductParamsWithSKAdParamString:(id)arg0;
+ (id)convertSKAdImpressionParamsWithSKAdParamString:(id)arg0;
+ (void)endImpressionWithSkanParamsString:(id)arg0 adEventData:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)startImpressionWithSkanParamsString:(id)arg0 adEventData:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)sharedManager;

- (BOOL)shouldRequestAppManager;
- (BOOL)isForbidSKStoreProductViewController;
- (BOOL)enableRetainSkvcAvoidCrash;
- (BOOL)hasControllerPreloadedByAppID:(id)arg0;
- (void)setMaxPreloadCount:(unsigned long long)arg0;
- (void)setPreloadOnlyWIFI:(BOOL)arg0;
- (id)controllerPreloadedByAppID:(id)arg0;
- (void)clearPreloadCacheByAppID:(id)arg0;
- (void)clearPreloadCacheBySKController:(id)arg0;
- (BOOL)preloadOnlyWIFI;
- (long long)supportPreloadType;
- (void)setIsReusePreload:(BOOL)arg0;
- (BOOL)isReusePreload;
- (BOOL)isPresentAnimated;
- (void)setIsPresentAnimated:(BOOL)arg0;
- (id)preloadList;
- (unsigned long long)maxPreloadCount;
- (void)setPreloadList:(id)arg0;
- (void)sdkSessionLaunchMonitor;
- (BOOL)enablePreventSKGesture;
- (void)preloadAppStoreControllerWithAppID:(id)arg0 skAdNetworkParams:(id)arg1 businessIdentifyInfo:(id)arg2 adID:(id)arg3 logExtra:(id)arg4 isDuplicate:(BOOL)arg5 completion:(id /* block */)arg6;
- (BOOL)isForbidAppStoreLogic;
- (void)openAppStoreControllerWithAppID:(id)arg0 downloadUrl:(id)arg1 model:(id)arg2;
- (id /* block */)openURLWithCompletionAction;
- (id /* block */)openURLAction;
- (void)clearAllPreloadCache;
- (id)duplicatedControllerPreloadedByAppID:(id)arg0 dismissAnimated:(BOOL)arg1;
- (BOOL)shouldStartPreloadWithAppID:(id)arg0 error:(id *)arg1;
- (void)trackPreloadEndEventWithAdId:(id)arg0 logExtra:(id)arg1 appleId:(id)arg2 status:(BOOL)arg3 hasPresent:(BOOL)arg4 failedReason:(long long)arg5 duration:(int)arg6 error:(id)arg7;
- (id /* block */)SKStoreInitAction;
- (void)trackOpenEndEventWithAdId:(id)arg0 logExtra:(id)arg1 appleId:(id)arg2 status:(BOOL)arg3 successStyle:(long long)arg4 failedReason:(long long)arg5 duration:(int)arg6 trackParams:(id)arg7 error:(id)arg8;
- (void)setPresentingItem:(id)arg0;
- (void)setEnablePreventSKGesture:(BOOL)arg0;
- (void)setIsEnableFixRetainCycle:(BOOL)arg0;
- (void)setIsCallSkanImpressionInAsyncThread:(BOOL)arg0;
- (void)setIsForbidAppStoreLogic:(BOOL)arg0;
- (void)setShouldRequestAppManager:(BOOL)arg0;
- (void)setIsHalfAppStore:(BOOL)arg0;
- (void)setHalfAppStoreFrameY:(unsigned long long)arg0;
- (void)setIsForbidSKStoreProductViewController:(BOOL)arg0;
- (void)setEnableRetainSkvcAvoidCrash:(BOOL)arg0;
- (void)setSKStoreInitAction:(id /* block */)arg0;
- (void)setOpenURLAction:(id /* block */)arg0;
- (void)setOpenURLWithCompletionAction:(id /* block */)arg0;
- (id)presentingItem;
- (BOOL)isHalfAppStore;
- (unsigned long long)halfAppStoreFrameY;
- (BOOL)isEnableFixRetainCycle;
- (BOOL)isCallSkanImpressionInAsyncThread;
- (id)init;
- (void).cxx_destruct;
- (void)setPresenting:(BOOL)arg0;
- (void)dealloc;
- (BOOL)presenting;

@end
