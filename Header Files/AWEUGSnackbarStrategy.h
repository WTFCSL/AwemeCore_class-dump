//
//     Generated by private class-dump
//

@class AWESnackbarUIConfigModel, NSString, NSDictionary, NSArray, AWEUGShowFreqControlsModel, AWEUGSnackbarViewController;
@protocol AWEUGSceneUndertakeEvadeProtocol;

@interface AWEUGSnackbarStrategy : NSObject <AWEUGSnackbarViewControllerDelegate> {
    NSString *_sceneType;
    id<AWEUGSceneUndertakeEvadeProtocol> _evadeStrategy;
    NSDictionary *_config;
    NSDictionary *_sceneTypeBusinessNameMap;
    NSArray *_snackbarActionList;
    AWEUGShowFreqControlsModel *_freqControls;
    AWEUGSnackbarViewController *_snackbarController;
    AWESnackbarUIConfigModel *_snackbarConfig;
}

@property (copy, nonatomic) NSString *sceneType;
@property (retain, nonatomic) id<AWEUGSceneUndertakeEvadeProtocol> evadeStrategy;
@property (copy, nonatomic) NSDictionary *config;
@property (copy, nonatomic) NSDictionary *sceneTypeBusinessNameMap;
@property (copy, nonatomic) NSArray *snackbarActionList;
@property (retain, nonatomic) AWEUGShowFreqControlsModel *freqControls;
@property (retain, nonatomic) AWEUGSnackbarViewController *snackbarController;
@property (retain, nonatomic) AWESnackbarUIConfigModel *snackbarConfig;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)formatActionScheme:(id)arg0;
- (void)p_registerMessageHandler;
- (void)initFrequencyConfig;
- (void)trackLogWithMessage:(id)arg0;
- (void)registerPitaya;
- (void)notifyViewStatus:(long long)arg0;
- (id)snackbarConfig;
- (void)setSceneTypeBusinessNameMap:(id)arg0;
- (void)setSnackbarActionList:(id)arg0;
- (void)setEvadeStrategy:(id)arg0;
- (id)sceneTypeBusinessNameMap;
- (id)snackbarActionList;
- (void)showSnackbarViewIfPossible;
- (BOOL)shouldEvadeForGeneralRule;
- (BOOL)checkFrequncyLimit:(id)arg0;
- (void)buildSnackbar;
- (void)sceneUndertakeViewShowFail;
- (void)shouldEvadeForSceneType:(id)arg0 completion:(id /* block */)arg1;
- (void)setSnackbarController:(id)arg0;
- (id)snackbarController;
- (id)evadeStrategy;
- (id)freqControls;
- (void)setFreqControls:(id)arg0;
- (void)handleConfigModel;
- (void)setSnackbarConfig:(id)arg0;
- (id)initWithSceneType:(id)arg0 config:(id)arg1 evadeStrategy:(id)arg2;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (id)sceneType;
- (void)setSceneType:(id)arg0;

@end
