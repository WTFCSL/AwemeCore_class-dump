//
//     Generated by private class-dump
//

@class NSOperationQueue, NSMutableDictionary, NSRecursiveLock;

@interface BDPRuntimePreloadCenter : NSObject {
    BOOL _enabled;
    NSRecursiveLock *_lock;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_preloadClassList;
}

@property BOOL enabled;
@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSOperationQueue *operationQueue;
@property (retain, nonatomic) NSMutableDictionary *preloadClassList;

+ (void)bootstrapLoad;
+ (void)releaseAllPreloadRuntime;
+ (void)preloadRuntime:(long long)arg0 schema:(id)arg1 caller:(id)arg2;
+ (void)registerPreloadObject:(Class)arg0 type:(long long)arg1;
+ (id)getRuntime:(long long)arg0 runtimeClass:(Class)arg1 uniqueID:(id)arg2 schema:(id)arg3;
+ (id)getRuntime:(long long)arg0 runtimeClass:(Class)arg1 uniqueID:(id)arg2 schema:(id)arg3 loader:(id)arg4;
+ (void)setPreloadEnabled:(BOOL)arg0;
+ (void)releasePreloadRuntime:(long long)arg0;
+ (id)getRuntime:(long long)arg0 runtimeClass:(Class)arg1 uniqueID:(id)arg2;
+ (void)preloadRuntime:(long long)arg0 caller:(id)arg1;
+ (BOOL)isPreloadEnabled;
+ (id)getRuntimeForPredefine:(long long)arg0;
+ (void)onRunningThreadProtectorEnabledChanged:(id)arg0;
+ (BOOL)enablePreloadRuntimeForMemoryLimitWithType:(long long)arg0;
+ (id)sharedCenter;

- (void)releaseAllPreloadRuntime;
- (void)setPreloadClassList:(id)arg0;
- (void)reciveMemoryWarningNotification:(id)arg0;
- (id)preloadClassList;
- (void)preloadRuntime:(long long)arg0 schema:(id)arg1 caller:(id)arg2;
- (void)registerPreloadObject:(Class)arg0 type:(long long)arg1;
- (id)getRuntime:(long long)arg0 runtimeClass:(Class)arg1 uniqueID:(id)arg2 schema:(id)arg3 loader:(id)arg4;
- (void)setPreloadEnabled:(BOOL)arg0;
- (void)releasePreloadRuntime:(long long)arg0;
- (void)preloadRuntime:(long long)arg0 caller:(id)arg1;
- (BOOL)isPreloadEnabled;
- (id)getRuntimeForPredefine:(long long)arg0;
- (id)init;
- (BOOL)enabled;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (id)operationQueue;
- (id)lock;
- (void)setEnabled:(BOOL)arg0;
- (void)dealloc;
- (void)addObserver;
- (void)setLock:(id)arg0;

@end
