//
//     Generated by private class-dump
//

@class AWECommentModel, NSString, AWEIMStickerModel, AWEAwemeModel, NSMutableArray, UIViewController;
@protocol AWECommentInputViewControllerProtocol, AWECommentGeneralModelProtocol, AWECommentInputViewContextProtocol, AWECommentInputViewManagerDelegate;

@interface AWECommentInputViewManager : NSObject <AWECommentInputViewControllerDelegate, AWECommentInputViewManagerProtocol> {
    id /* block */ didSendAlbumVideoComment;
    id /* block */ didHideKeyboard;
    id /* block */ willChangeFrame;
    id /* block */ didShowKeyboard;
    id /* block */ willHideKeyboard;
    id /* block */ willShowKeyboard;
    id /* block */ willPausePreviousPlayer;
    id /* block */ willResumePreviousPlayer;
    id /* block */ willTriggleShowKeyboard;
    id /* block */ userTappedSend;
    id /* block */ forbidComment;
    id /* block */ willShowInputViewAdditional;
    id /* block */ commentSentSuccessfully;
    id /* block */ commentWillSendAndCustomSendAction;
    id /* block */ commentSentFailed;
    id /* block */ tapReturnKeyboard;
    NSMutableArray *extraInfo;
    AWEIMStickerModel *sticker;
    id<AWECommentInputViewManagerDelegate> delegate;
    UIViewController<AWECommentInputViewControllerProtocol> *_commentInputViewController;
    id<AWECommentInputViewContextProtocol> _context;
    AWEAwemeModel *_awemeModel;
    id<AWECommentGeneralModelProtocol> _generalModel;
    AWECommentModel *_replyCommentModel;
    struct CGSize { double width; double height; } _keyboardSize;
}

@property (retain, nonatomic) UIViewController<AWECommentInputViewControllerProtocol> *commentInputViewController;
@property (retain, nonatomic) id<AWECommentInputViewContextProtocol> context;
@property (retain, nonatomic) AWEAwemeModel *awemeModel;
@property (retain, nonatomic) id<AWECommentGeneralModelProtocol> generalModel;
@property (retain, nonatomic) AWECommentModel *replyCommentModel;
@property (nonatomic) struct CGSize { double width; double height; } keyboardSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) id /* block */ willShowKeyboard;
@property (copy, nonatomic) id /* block */ willTriggleShowKeyboard;
@property (copy, nonatomic) id /* block */ willChangeFrame;
@property (copy, nonatomic) id /* block */ didShowKeyboard;
@property (copy, nonatomic) id /* block */ willHideKeyboard;
@property (copy, nonatomic) id /* block */ didHideKeyboard;
@property (copy, nonatomic) id /* block */ userTappedSend;
@property (copy, nonatomic) id /* block */ forbidComment;
@property (copy, nonatomic) id /* block */ tapReturnKeyboard;
@property (copy, nonatomic) id /* block */ willShowInputViewAdditional;
@property (copy, nonatomic) id /* block */ didSendAlbumVideoComment;
@property (copy, nonatomic) id /* block */ commentSentSuccessfully;
@property (copy, nonatomic) id /* block */ commentWillSendAndCustomSendAction;
@property (copy, nonatomic) id /* block */ commentSentFailed;
@property (copy, nonatomic) id /* block */ willPausePreviousPlayer;
@property (copy, nonatomic) id /* block */ willResumePreviousPlayer;
@property (readonly, nonatomic) NSMutableArray *extraInfo;
@property (readonly, nonatomic) AWEIMStickerModel *sticker;
@property (weak, nonatomic) id<AWECommentInputViewManagerDelegate> delegate;

+ (id)getKeyboardViewFromWindow:(id)arg0;
+ (BOOL)isPureEmoji:(id)arg0;

- (id /* block */)didSendAlbumVideoComment;
- (void)setDidSendAlbumVideoComment:(id /* block */)arg0;
- (id /* block */)willPausePreviousPlayer;
- (void)setWillPausePreviousPlayer:(id /* block */)arg0;
- (id /* block */)willResumePreviousPlayer;
- (void)setWillResumePreviousPlayer:(id /* block */)arg0;
- (id)awemeModel;
- (void)recoverInputContent:(id)arg0;
- (id)inputContent;
- (BOOL)hasContentToSend;
- (void)clearAllInputContent;
- (void)setGeneralModel:(id)arg0;
- (void)setAwemeModel:(id)arg0;
- (id)generalModel;
- (id /* block */)willShowKeyboard;
- (id /* block */)willTriggleShowKeyboard;
- (void)setWillTriggleShowKeyboard:(id /* block */)arg0;
- (id /* block */)willChangeFrame;
- (void)setWillChangeFrame:(id /* block */)arg0;
- (id /* block */)didShowKeyboard;
- (id /* block */)willHideKeyboard;
- (id /* block */)didHideKeyboard;
- (id /* block */)userTappedSend;
- (void)setUserTappedSend:(id /* block */)arg0;
- (id /* block */)forbidComment;
- (void)setForbidComment:(id /* block */)arg0;
- (id /* block */)tapReturnKeyboard;
- (void)setTapReturnKeyboard:(id /* block */)arg0;
- (id /* block */)willShowInputViewAdditional;
- (void)setWillShowInputViewAdditional:(id /* block */)arg0;
- (id /* block */)commentSentSuccessfully;
- (void)setCommentSentSuccessfully:(id /* block */)arg0;
- (id /* block */)commentWillSendAndCustomSendAction;
- (void)setCommentWillSendAndCustomSendAction:(id /* block */)arg0;
- (id /* block */)commentSentFailed;
- (void)setCommentSentFailed:(id /* block */)arg0;
- (void)showKeyBoardWithMethod:(long long)arg0;
- (void)updateWithAweme:(id)arg0 context:(id)arg1;
- (void)updateCommentPlaceholderWithReplyComment:(id)arg0;
- (id)currentCommentInputView;
- (id)currentCommentListInputView;
- (void)resetInputAfterSendIfNeed;
- (BOOL)canReplyCommentWithModel:(id)arg0 failReasonCallBack:(id /* block */)arg1;
- (void)publishComment:(id)arg0 skipToast:(BOOL)arg1;
- (void)publishComment:(id)arg0 skipToast:(BOOL)arg1 isRetry:(BOOL)arg2 waitInterval:(long long)arg3;
- (struct CGSize { double x0; double x1; })currentKeyboardSize;
- (void)showWithAweme:(id)arg0 context:(id)arg1;
- (void)setWillHideKeyboard:(id /* block */)arg0;
- (void)setWillShowKeyboard:(id /* block */)arg0;
- (void)setDidHideKeyboard:(id /* block */)arg0;
- (void)setDidShowKeyboard:(id /* block */)arg0;
- (id)replyCommentModel;
- (BOOL)manager_commentInputViewShouldReturn:(id)arg0;
- (BOOL)manager_commentInputViewCustomSendAction:(id)arg0;
- (BOOL)manager_commentInputViewShouldBeginEditing:(id)arg0;
- (void)manager_commentInputViewDanmakuSwitchButtonClicked;
- (BOOL)commentInputViewControllerWillSendComment:(id)arg0 fakeModel:(id)arg1;
- (void)commentInputViewControllerSendCommentFinished:(id)arg0 model:(id)arg1 error:(id)arg2;
- (id)commentInputViewController;
- (void)showWithContext;
- (BOOL)isDiffModel:(id)arg0 context:(id)arg1;
- (void)updateDiffModel:(id)arg0 context:(id)arg1;
- (void)updateCommentInputVCWhenSameModel:(id)arg0;
- (void)updateOnlyReplyComment:(id)arg0;
- (void)updateDiffModelAndReplyComment:(id)arg0 context:(id)arg1;
- (void)updateReplyCommentWhenSameModel:(id)arg0;
- (void)ignoreAwemeModelWithContext:(id)arg0;
- (void)mergeUpdateParam:(id)arg0 context:(id)arg1;
- (void)configCommentInputViewController:(id)arg0;
- (void)configCommentInputVCWithModel:(id)arg0 isEnableUpdate:(BOOL)arg1 context:(id)arg2;
- (void)setReplyCommentModel:(id)arg0;
- (void)mergeUpdateSameModelParam:(id)arg0;
- (void)commentInputViewControllerCreateRepostFinished:(id)arg0 success:(BOOL)arg1 extraLog:(id)arg2;
- (void)setCommentInputViewController:(id)arg0;
- (void)dismiss;
- (void).cxx_destruct;
- (void)showKeyboard;
- (void)setContext:(id)arg0;
- (void)dismissKeyboard;
- (id)delegate;
- (id)context;
- (void)setDelegate:(id)arg0;
- (struct CGSize { double x0; double x1; })keyboardSize;
- (void)setKeyboardSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isShowingKeyboard;
- (id)sticker;
- (id)extraInfo;
- (id)plainText;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bottomBarFrame;

@end
