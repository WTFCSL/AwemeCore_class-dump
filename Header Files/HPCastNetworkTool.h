//
//     Generated by private class-dump
//

@class NSString;

@interface HPCastNetworkTool : NSObject <NSURLSessionDelegate>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)getTid;
+ (BOOL)authWithAppid:(id)arg0 secretKey:(id)arg1 error:(id *)arg2;
+ (void)getGeneralConfigCallBlock:(id /* block */)arg0;
+ (void)interestsAuthWithUserId:(id)arg0 token:(id)arg1 nickname:(id)arg2 uid:(id)arg3 ehid:(id)arg4 otherParam:(id)arg5;
+ (id)vipInterestsError:(id *)arg0;
+ (BOOL)authIsSucceed;
+ (void)getDAConfigWithCompleter:(id /* block */)arg0;
+ (void)getDAResourcesWithURL:(id)arg0 timeout:(double)arg1 sessionid:(id)arg2 rappid:(id)arg3 ruid:(id)arg4 rhid:(id)arg5 udn:(id)arg6 uri:(id)arg7 completer:(id /* block */)arg8;
+ (void)setAbnormalUploadCountWithEt:(id)arg0 lastDate:(id)arg1;
+ (id)getNickName;
+ (id)getUserToken;
+ (BOOL)authFailureTimeLimit;
+ (void)saveAppid:(id)arg0 andSecretKey:(id)arg1;
+ (id)localSdkauthInterface;
+ (id)localSdkauthSwitch;
+ (id)getReg_time;
+ (id)sdkauthDomain_interface;
+ (void)setAuth402:(BOOL)arg0;
+ (void)recordAuthFailureTime;
+ (id)token_value;
+ (id)conf_interface;
+ (id)getUrlStringWithKey:(id)arg0;
+ (id)getIndexUrlStringWithUrls:(id)arg0 index:(long long)arg1;
+ (id)localSdkauthAllData;
+ (id)localSdkGeneralConfig;
+ (id)getAbnormalUploadCountWithEt:(id)arg0;
+ (void)interestsAuthWithUserId:(id)arg0 token:(id)arg1 nickname:(id)arg2;
+ (void)interestsAuthWithUserId:(id)arg0 token:(id)arg1 nickname:(id)arg2 uid:(id)arg3;
+ (void)interestsAuthWithUserId:(id)arg0 token:(id)arg1 nickname:(id)arg2 uid:(id)arg3 ehid:(id)arg4;
+ (void)setEhid:(id)arg0;
+ (void)setUserVip:(id)arg0;
+ (void)interestsAuthRequestWithUserId:(id)arg0 token:(id)arg1 nickname:(id)arg2 uid:(id)arg3 ehid:(id)arg4 block:(id /* block */)arg5;
+ (id)vipauth_interface;
+ (id)stringWithDict:(id)arg0;
+ (id)logreport_interface;
+ (id)logreportask_interface;
+ (id)gslb_interface;
+ (id)adengine_interface;
+ (id)getUrlStringWithKey:(id)arg0 index:(long long)arg1;
+ (id)localSdkLicenseAuthData;
+ (long long)getScanTime;
+ (id)getUserUID;
+ (id)getEhid;
+ (id)getFavoriteSwitch;
+ (id)getHistorySwitch;
+ (void)interestsAuthWithUserId:(id)arg0 token:(id)arg1;
+ (id)stringFormatter:(id)arg0;
+ (void)logUploadWithEid:(id)arg0 et:(id)arg1 phoneNum:(id)arg2 filePath:(id)arg3 callBlock:(id /* block */)arg4;
+ (void)idCodeParsingWithIdCodeArray:(id)arg0 callBlock:(id /* block */)arg1;
+ (id)report_interface;
+ (id)getAppid;
+ (id)getUserVip;
+ (BOOL)auth402;
+ (void)logUploadWithEid:(id)arg0 et:(id)arg1 phoneNum:(id)arg2 filePath:(id)arg3 ls:(id)arg4 callBlock:(id /* block */)arg5;
+ (void)logUploadWithEid:(id)arg0 et:(id)arg1 phoneNum:(id)arg2 filePath:(id)arg3 ls:(id)arg4 extraInfo:(id)arg5 callBlock:(id /* block */)arg6;
+ (BOOL)abnormalUploadCountWithEt:(id)arg0;
+ (id)getAbnormalNotUploadLogChannel;
+ (void)logReportAskCallback:(id /* block */)arg0;
+ (BOOL)getMultiProtocolDeviceDLNAHideSwitch;
+ (id)getTVApkDevNamePrompt;
+ (id)getSecretKey;
+ (BOOL)getSearchDeviceDataReportSwitch;
+ (long long)getSearchDeviceDataReportSeconds;
+ (void)getMdnsTXTInfoWithIpAddress:(id)arg0 remotePort:(long long)arg1 timeout:(double)arg2 block:(id /* block */)arg3;
+ (void)searchNoDeviceMonitoringCallBlock:(id /* block */)arg0;
+ (id)p_funcSimplifyIsOpen;
+ (void)getMdnsTXTInfoWithIpAddress:(id)arg0 remotePort:(long long)arg1 block:(id /* block */)arg2;
+ (void)setNickName:(id)arg0;
+ (void)setEnvironment:(long long)arg0;
+ (long long)environment;
+ (void)setUserToken:(id)arg0;
+ (void)setUserId:(id)arg0;
+ (id)getUserId;
+ (void)setUserUID:(id)arg0;

@end
