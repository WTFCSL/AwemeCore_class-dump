//
//     Generated by private class-dump
//

@class NSString;
@protocol ACCRecorderProtocolD, ACCAudioPortService;

@interface AWEStickerApplyAudioEffectHandler : AWEStickerApplyBaseHandler <ACCRecordFlowServiceSubscriber, ACCRecordSwitchModeServiceSubscriber> {
    BOOL _isComponentAppeared;
    id<ACCAudioPortService> _audioPortService;
    id<ACCRecorderProtocolD> _recorder;
    long long _currentMusicPlayMode;
}

@property (weak, nonatomic) id<ACCAudioPortService> audioPortService;
@property (retain, nonatomic) id<ACCRecorderProtocolD> recorder;
@property (nonatomic) BOOL isComponentAppeared;
@property (nonatomic) long long currentMusicPlayMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)startAudioCaptureIfNeeded;
- (void)componentDidAppear;
- (void)componentDidDisappear;
- (void)flowServiceDidAddFragment:(id)arg0;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (void)setIsComponentAppeared:(BOOL)arg0;
- (BOOL)isComponentAppeared;
- (id)currentSticker;
- (void)handlerDidBecomeActive;
- (void)camera:(id)arg0 didApplySticker:(id)arg1 success:(BOOL)arg2;
- (void)camera:(id)arg0 willApplySticker:(id)arg1 propSource:(long long)arg2;
- (void)setCurrentMusicPlayMode:(long long)arg0;
- (void)setAudioPortService:(id)arg0;
- (id)audioPortService;
- (long long)musicPlayNodeWithIOPort:(long long)arg0;
- (void)updateMusicPlayMode:(long long)arg0;
- (BOOL)disableAutoStartAudioCaptureAfterApplyGameControlProp;
- (long long)currentMusicPlayMode;
- (void).cxx_destruct;
- (id)recorder;
- (void)setRecorder:(id)arg0;

@end
