//
//     Generated by private class-dump
//

@class NSArray, NSTimer, NSMutableOrderedSet, NSString, HMDReportLimitSizeTool;
@protocol HMDNetworkProvider;

@interface HMDPerformanceReporter : NSObject <HMDLimitReportDataSizeToolDelegate> {
    _Atomic unsigned int _pendingCount;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutexLock;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _rwLock;
    BOOL _isSDKReporter;
    long long _reportMaxLogCount;
    double _reportPollingInterval;
    double _enableTimeStamp;
    id<HMDNetworkProvider> _provider;
    NSString *_sdkAid;
    NSMutableOrderedSet *_performanceModules;
    HMDReportLimitSizeTool *_reporSizeLimitTool;
    double _sizeLimitAvailableTime;
}

@property (retain, nonatomic) NSTimer *sizeLimitedReportTimer;
@property double sizeLimitAvailableTime;
@property (retain, nonatomic) NSMutableOrderedSet *performanceModules;
@property (retain, nonatomic) HMDReportLimitSizeTool *reporSizeLimitTool;
@property double sizeLimitAvailableTime;
@property (retain, nonatomic) id<HMDNetworkProvider> provider;
@property (nonatomic) long long reportMaxLogCount;
@property (nonatomic) double reportPollingInterval;
@property (nonatomic) double enableTimeStamp;
@property (readonly, nonatomic) NSArray *allReportingModules;
@property (copy, nonatomic) NSString *sdkAid;
@property (nonatomic) BOOL isSDKReporter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)awe_energy_optimize_hook;

- (void)updateConfig:(id)arg0;
- (void)setSdkAid:(id)arg0;
- (id)sdkAid;
- (void)setIsSDKReporter:(BOOL)arg0;
- (void)addReportModuleSafe:(id)arg0;
- (id)allReportingModules;
- (void)autoReportPerformanceDataWithSizeLimited:(id)arg0;
- (void)setSizeLimitedReportTimer:(id)arg0;
- (void)setReporSizeLimitTool:(id)arg0;
- (id)reporSizeLimitTool;
- (void)setSizeLimitAvailableTime:(double)arg0;
- (id)sizeLimitedReportTimer;
- (id)performanceModules;
- (void)setReportMaxLogCount:(long long)arg0;
- (long long)reportMaxLogCount;
- (void)reportPerformanceDataAsyncWithSizeLimited;
- (void)setEnableTimeStamp:(double)arg0;
- (void)setPerformanceModules:(id)arg0;
- (double)reportPollingInterval;
- (void)setReportPollingInterval:(double)arg0;
- (BOOL)ifNeedReportAfterUpdatingRecordCount:(long long)arg0;
- (void)removeReportModuleSafe:(id)arg0;
- (void)cleanupWithConfigUnsafe:(id)arg0;
- (double)sizeLimitAvailableTime;
- (void)stopSizeLimitedReportTimer;
- (void)startSizeLimitedReportTimer;
- (double)enableTimeStamp;
- (void)_sizeLimitedTimeAvaliableWithBody:(id)arg0;
- (void)clearRecordCountAfterReportingSuccessfully;
- (void)updateEnableTimeStampAfterReporting;
- (id)_dataArrayForSizeLimitedReportWithAddedMoudle:(id)arg0 modules:(id)arg1;
- (BOOL)isSDKReporter;
- (void)performanceSizeLimitReportStart;
- (void)performanceSizeLimitReportStop;
- (void)performanceDataSizeOutOfThreshold;
- (double)awe_energy_optimize_reportPollingInterval;
- (long long)awe_energy_optimize_reportMaxLogCount;
- (void)setProvider:(id)arg0;
- (id)provider;
- (void).cxx_destruct;
- (id)initWithProvider:(id)arg0;
- (void)dealloc;

@end
