//
//     Generated by private class-dump
//

@class IESMMCameraConfig, NSString, NSHashTable, AWEVideoPublishViewModel, ACCRecordViewControllerInputData;
@protocol ACCModeCameraSessionService, VERecorderPublicProtocol;

@interface ACCCameraFactoryImpls : NSObject <ACCCameraFactory, ACCModeCameraSessionConfigAssembler, CameraKit.CameraSessionSwitchSubscription> {
    BOOL _postInitCameraConfigFinished;
    unsigned long long _initStream;
    AWEVideoPublishViewModel *_repository;
    id<ACCModeCameraSessionService> _modeCameraSessionService;
    ACCRecordViewControllerInputData *_inputData;
    id<VERecorderPublicProtocol> _camera;
    IESMMCameraConfig *_config;
    NSHashTable *_subscribers;
}

@property (weak, nonatomic) ACCRecordViewControllerInputData *inputData;
@property (retain, nonatomic) id<VERecorderPublicProtocol> camera;
@property (retain, nonatomic) IESMMCameraConfig *config;
@property (retain, nonatomic) NSHashTable *subscribers;
@property (nonatomic) BOOL postInitCameraConfigFinished;
@property (weak, nonatomic) AWEVideoPublishViewModel *repository;
@property (retain, nonatomic) id<ACCModeCameraSessionService> modeCameraSessionService;
@property (nonatomic) unsigned long long initStream;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)preloadCameraInstanceAvailable:(id)arg0 forSessionKey:(id)arg1;
- (void)cameraInstanceDidCreated:(id)arg0 cameraSessionKey:(id)arg1;
- (void)didSwitchCameraSessionFrom:(id)arg0 to:(id)arg1;
- (void)willSwitchCameraSessionFrom:(id)arg0 to:(id)arg1;
- (id)initWithInputData:(id)arg0;
- (void)setCameraIfNeeded:(id)arg0;
- (void)addCameraListener:(id)arg0;
- (id)buildCameraWithContext:(const void *)arg0 cameraPreviewView:(id)arg1 completionBlock:(id /* block */)arg2;
- (BOOL)cansUpdateCameraSize;
- (void)assemblyCameraConfig:(id)arg0;
- (unsigned long long)initStream;
- (void)setInitStream:(unsigned long long)arg0;
- (id)createCameraWithContext:(const void *)arg0 cameraPreviewView:(id)arg1 completion:(id /* block */)arg2;
- (void)postCameraCreationConfiguration:(id)arg0;
- (BOOL)postInitCameraConfigFinished;
- (void)setPostInitCameraConfigFinished:(BOOL)arg0;
- (BOOL)p_isNeedCreateCamera;
- (id)cameraConfigWithInputData:(id)arg0;
- (void)configCameraConfig:(id)arg0 withInputData:(id)arg1;
- (void)p_cameraSessionManagerCameraAvailble:(id)arg0 forSessionKey:(id)arg1;
- (id)modeCameraSessionService;
- (void)setModeCameraSessionService:(id)arg0;
- (id)camera;
- (void)setConfig:(id)arg0;
- (void)setCamera:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (id)subscribers;
- (void)setRepository:(id)arg0;
- (id)repository;
- (id)inputData;
- (void)setInputData:(id)arg0;
- (void)setSubscribers:(id)arg0;

@end
