//
//     Generated by private class-dump
//

@class UIViewController, RTVFeedManager, RxScheduler, NSHashTable, NSString, RTVXRContainerLayoutAttributesSnapshot, RTVFeedTracker;
@protocol RTVVoipStorageAreaInterface, RTVVoipSettingManagerInterface, RTVXRRoomSessionControllerInterface, RTVFeedVolumeSettingController, RTVVideoPlayManager, RTVXRCaptureController, RTVXRParticipantManagementController, RTVInteractionConfigureManagerInterface, RTVFeedContentController, RTVUserProfileManagerInterface, RTVXRControllerInjector, RTVXRBusinessContextDelegate, RxInjector, RTVFeedShareNarrowControlViewController, RTVVoipParticipatorManagerInterface;

@interface RTVFeedShareNarrowViewController : UIViewController <RTVXRControllerInterface, RTVFeedShareNarrowViewController, RTVInteractionContentDelegate, RTVXRParticipantManagementControllerDelegate, RTVFeedShareNarrowControlViewControllerDelegate, AWEAudioFocusProtocol, RTVInteractionSendMessageActionControllerDelegate> {
    BOOL isActive;
    BOOL _disableInternalContentCreation;
    id<RTVXRBusinessContextDelegate> delegate;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVXRRoomSessionControllerInterface> _session;
    id<RTVFeedVolumeSettingController> _volumeSettingController;
    id<RTVXRCaptureController> _captureController;
    id<RTVUserProfileManagerInterface> _userProfileManager;
    unsigned long long _videoLayoutType;
    RTVFeedManager *_feedManager;
    UIViewController<RTVFeedContentController> *_feedShareContentViewController;
    UIViewController<RTVFeedShareNarrowControlViewController> *_feedShareControlViewController;
    id<RTVVoipParticipatorManagerInterface> _inviteManager;
    id<RTVXRParticipantManagementController> _inviteController;
    id<RTVVideoPlayManager> _videoPlayManager;
    RTVFeedTracker *_feedTracker;
    NSHashTable *_playingPlayerTable;
    RxScheduler *_scheduler;
    id<RTVVoipSettingManagerInterface> _settingsManager;
    id<RTVVoipStorageAreaInterface> _storage;
    id<RTVInteractionConfigureManagerInterface> _interactionConfigMananger;
    id<RTVInteractionConfigureManagerInterface> _configureManager;
    RTVXRContainerLayoutAttributesSnapshot *_preferredLayoutAttributes;
    struct CGSize { double width; double height; } _initialContentSize;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, weak, nonatomic) id<RTVXRRoomSessionControllerInterface> session;
@property (weak, nonatomic) id<RTVFeedVolumeSettingController> volumeSettingController;
@property (readonly, weak, nonatomic) id<RTVXRCaptureController> captureController;
@property (retain, nonatomic) id<RTVUserProfileManagerInterface> userProfileManager;
@property (nonatomic) unsigned long long videoLayoutType;
@property (readonly, nonatomic) RTVFeedManager *feedManager;
@property (weak, nonatomic) UIViewController<RTVFeedContentController> *feedShareContentViewController;
@property (retain, nonatomic) UIViewController<RTVFeedShareNarrowControlViewController> *feedShareControlViewController;
@property (readonly, nonatomic) id<RTVVoipParticipatorManagerInterface> inviteManager;
@property (readonly, nonatomic) id<RTVXRParticipantManagementController> inviteController;
@property (readonly, nonatomic) id<RTVVideoPlayManager> videoPlayManager;
@property (readonly, nonatomic) BOOL enableAutoPlayNext;
@property (nonatomic) BOOL disableInternalContentCreation;
@property (retain, nonatomic) RTVFeedTracker *feedTracker;
@property (readonly, nonatomic) NSHashTable *playingPlayerTable;
@property (readonly, nonatomic) RxScheduler *scheduler;
@property (retain, nonatomic) id<RTVVoipSettingManagerInterface> settingsManager;
@property (readonly, nonatomic) id<RTVVoipStorageAreaInterface> storage;
@property (readonly, nonatomic) id<RTVInteractionConfigureManagerInterface> interactionConfigMananger;
@property (readonly, nonatomic) id<RTVInteractionConfigureManagerInterface> configureManager;
@property (retain, nonatomic) RTVXRContainerLayoutAttributesSnapshot *preferredLayoutAttributes;
@property (nonatomic) struct CGSize { double width; double height; } initialContentSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<RTVXRBusinessContextDelegate> delegate;
@property (nonatomic) BOOL isActive;

- (void)rtv_awakeFromControllerInjector;
- (id)userProfileManager;
- (BOOL)audioIsPlaying;
- (void)audioPause;
- (void)notifyPlayerStartPlay:(id)arg0;
- (void)audioResumeIfNeeded:(id)arg0;
- (id)contentVC;
- (id)controllerInjector;
- (BOOL)shouldShowFeedTogetherPIP;
- (void)renderBusinessHandler:(id)arg0 context:(id)arg1;
- (BOOL)PIPSwitchIsOn;
- (id)interactionConfigMananger;
- (id)configureManager;
- (BOOL)willChangeToLayoutType:(unsigned long long)arg0;
- (void)updateCurrentPlayItemProgress:(double)arg0 totalTime:(double)arg1;
- (void)willStartNextLoop;
- (void)updateIsPause:(BOOL)arg0;
- (void)notifyChangeActive:(BOOL)arg0;
- (void)notifyDidChangeActive:(BOOL)arg0;
- (void)setFeedShareContentViewController:(id)arg0;
- (id)volumeSettingController;
- (void)setVolumeSettingController:(id)arg0;
- (id)feedShareContentViewController;
- (void)renderWithBusinessHandler:(id)arg0 context:(id)arg1;
- (void)switchFullScreenWithAnimator:(id)arg0;
- (void)switchNarrowWithAnimator:(id)arg0;
- (id)layoutTransitionDelegate;
- (id)preferredLayoutAttributes;
- (id)narrowWindowLayoutContext;
- (void)narrowViewDragDidEnd;
- (BOOL)useDefaultDragSafeArea;
- (void)configInitialContainer;
- (void)narrowViewFrameDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 animator:(id)arg1;
- (void)narrowViewDidBeginGesture:(long long)arg0;
- (void)narrowViewDidEndGesture:(long long)arg0;
- (long long)toFullScreenContainerType;
- (void)disableInternalContentVC;
- (id)dismissInterruptAndResignKeyWindow;
- (void)participantManagementController:(id)arg0 didInviteUserIDs:(id)arg1 groupIDs:(id)arg2;
- (void)participantManagementControllerDidCancelInvite:(id)arg0;
- (BOOL)enableAutoPlayNext;
- (void)exitInteractionWithReason:(long long)arg0 delay:(BOOL)arg1;
- (void)updateControllerInjector:(id)arg0;
- (void)reinstallInteractionContentViewController:(id)arg0;
- (void)updateVideoContentLayout:(unsigned long long)arg0;
- (void)updateInitialContentSize:(struct CGSize { double x0; double x1; })arg0;
- (double)defaultContentWidth;
- (void)feedShareControlTrigger:(unsigned long long)arg0;
- (id)feedTracker;
- (BOOL)feedShareControlShouldTrigger:(unsigned long long)arg0;
- (void)feedShareControlShowHalfIMVCofSender:(id)arg0;
- (void)__addChildViewController:(id)arg0;
- (id)feedShareControlViewController;
- (void)setDisableInternalContentCreation:(BOOL)arg0;
- (void)showPIPTip;
- (BOOL)canShowPIPTip;
- (unsigned long long)videoLayoutType;
- (void)setVideoLayoutType:(unsigned long long)arg0;
- (void)setPreferredLayoutAttributes:(id)arg0;
- (BOOL)disableInternalContentCreation;
- (id)playingPlayerTable;
- (void)__resetVideoVolume;
- (void)__refreshContentViewLayout;
- (struct CGSize { double x0; double x1; })initialContentSize;
- (id)videoPlayManager;
- (id)__removePlayingPlayer:(id)arg0;
- (id)__addPlayingPlayer:(id)arg0;
- (void)__decreaseVideoVolume;
- (void)setUserProfileManager:(id)arg0;
- (void)setFeedShareControlViewController:(id)arg0;
- (id)inviteManager;
- (void)setFeedTracker:(id)arg0;
- (void)setInitialContentSize:(struct CGSize { double x0; double x1; })arg0;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (id)storage;
- (id)session;
- (id)shadowView;
- (id)scheduler;
- (id)injector;
- (id)delegate;
- (id)captureController;
- (void)setSettingsManager:(id)arg0;
- (BOOL)isActive;
- (id)settingsManager;
- (id)feedManager;
- (void)setDelegate:(id)arg0;
- (void)viewDidLoad;
- (struct CGSize { double x0; double x1; })sizeForChildContentContainer:(id)arg0 withParentContainerSize:(struct CGSize { double x0; double x1; })arg1;
- (double)preferredCornerRadius;
- (long long)containerType;
- (BOOL)handleTapGesture:(id)arg0;
- (BOOL)handleDoubleTapGesture:(id)arg0;
- (id)inviteController;

@end
