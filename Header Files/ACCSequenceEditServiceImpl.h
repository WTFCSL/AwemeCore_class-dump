//
//     Generated by private class-dump
//

@class ACCSequenceSwitchProxy, ACCSequenceEditBGM, NLEMediaSession_OC, ACCThreadSafeMutableDictionary, ACCRepositoryWorkspace, ACCSequenceMediaContainerView, NSMutableArray, NSString, ACCSequenceEditPreviewImpl, NSHashTable, NSArray, ACCCameraSubscription, ACCNLELogger;
@protocol IESServiceProvider;

@interface ACCSequenceEditServiceImpl : NSObject <NLEMultiEditorPlayerDelegate, ACCSequenceMediaContainerViewDelegate, ACCSequenceEditServiceProtocol, NLEMultiEditorPlayerDataSource> {
    BOOL disableSwitchNextWithAnimation;
    BOOL _previewMode;
    id /* block */ prepareBlk;
    ACCSequenceSwitchProxy *_editProxy;
    ACCSequenceSwitchProxy *_editBuilderProxy;
    ACCSequenceSwitchProxy *_filterProxy;
    ACCSequenceSwitchProxy *_beautyProxy;
    ACCSequenceSwitchProxy *_stickerProxy;
    ACCSequenceSwitchProxy *_canvasProxy;
    ACCSequenceSwitchProxy *_hdrProxy;
    ACCSequenceSwitchProxy *_audioEffectProxy;
    ACCSequenceSwitchProxy *_BGMProxy;
    ACCSequenceSwitchProxy *_livePhotoProxy;
    ACCSequenceSwitchProxy *_specialEffectProxy;
    ACCSequenceSwitchProxy *_captureFrameProxy;
    ACCSequenceSwitchProxy *_playerMonitorProxy;
    ACCSequenceSwitchProxy *_multiTrackProxy;
    ACCSequenceSwitchProxy *_trimProxy;
    ACCSequenceSwitchProxy *_cropProxy;
    ACCSequenceSwitchProxy *_trimCropPieceProxy;
    ACCSequenceEditPreviewImpl *_preview;
    ACCSequenceEditBGM *_sequenceBGM;
    id<IESServiceProvider> _serviceProvider;
    unsigned long long _transferStatus;
    NLEMediaSession_OC *_mediaSession;
    ACCCameraSubscription *_subscription;
    ACCRepositoryWorkspace *_workspace;
    ACCSequenceMediaContainerView *_mediaContainerView;
    ACCThreadSafeMutableDictionary *_keepActiveData;
    NSMutableArray *_captureTask;
    NSHashTable *_providers;
    long long _needsDispatchTransferIndex;
    ACCNLELogger *_NLELogger;
    double _startTransferTime;
    long long _preProjectIndex;
    struct CGSize { double width; double height; } _preferredSize;
}

@property (nonatomic) unsigned long long transferStatus;
@property (retain, nonatomic) NLEMediaSession_OC *mediaSession;
@property (retain, nonatomic) ACCCameraSubscription *subscription;
@property (retain, nonatomic) ACCRepositoryWorkspace *workspace;
@property (readonly, copy, nonatomic) NSArray *allServiceProxys;
@property (retain, nonatomic) ACCSequenceMediaContainerView *mediaContainerView;
@property (retain, nonatomic) ACCThreadSafeMutableDictionary *keepActiveData;
@property (retain, nonatomic) NSMutableArray *captureTask;
@property (retain, nonatomic) NSHashTable *providers;
@property (nonatomic) long long needsDispatchTransferIndex;
@property (retain, nonatomic) ACCNLELogger *NLELogger;
@property (nonatomic) struct CGSize { double width; double height; } preferredSize;
@property (nonatomic) double startTransferTime;
@property (nonatomic) BOOL previewMode;
@property (nonatomic) long long preProjectIndex;
@property (retain, nonatomic) ACCSequenceSwitchProxy *editProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *editBuilderProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *filterProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *beautyProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *stickerProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *canvasProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *hdrProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *audioEffectProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *BGMProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *livePhotoProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *specialEffectProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *captureFrameProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *playerMonitorProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *multiTrackProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *trimProxy;
@property (retain, nonatomic) ACCSequenceSwitchProxy *cropProxy;
@property (weak, nonatomic) ACCSequenceSwitchProxy *trimCropPieceProxy;
@property (retain, nonatomic) ACCSequenceEditPreviewImpl *preview;
@property (retain, nonatomic) ACCSequenceEditBGM *sequenceBGM;
@property (weak, nonatomic) id<IESServiceProvider> serviceProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) id /* block */ prepareBlk;
@property (readonly, nonatomic) long long index;
@property (readonly, copy, nonatomic) NSString *UUID;
@property (readonly, nonatomic) NSArray *editServices;
@property (nonatomic) BOOL disableSwitchNextWithAnimation;

- (void)willTransferToIndex:(long long)arg0 needClearLast:(BOOL)arg1 isAutoTransfer:(BOOL)arg2;
- (id)cacheImageKeyForIndex:(long long)arg0;
- (void)onAutoPlayIndex:(long long)arg0;
- (id)previewAtIndex:(long long)arg0;
- (void)didPreparedAndStartToPlayToIndex:(long long)arg0 isAutoTransfer:(BOOL)arg1 WithNLE:(id)arg2;
- (void)didTransferToIndex:(long long)arg0 isAutoTransfer:(BOOL)arg1;
- (BOOL)supportPrefetch;
- (BOOL)shouldCachePreviewForNLE:(id)arg0;
- (void)activeAtIndex:(long long)arg0 completion:(id /* block */)arg1;
- (struct CGSize { double x0; double x1; })preferredCoverImageSize:(struct CGSize { double x0; double x1; })arg0;
- (void)didCachedPreviewForNLE:(id)arg0;
- (void)onPlayCompleteAtIndex:(long long)arg0;
- (void)unactiveAll;
- (void)tryDeactive;
- (void)unactiveAtIndex:(long long)arg0;
- (id)mediaContainerView;
- (void)setMediaContainerView:(id)arg0;
- (void)buildEditSession;
- (id)playControl;
- (void)switchNext;
- (void)switchProjectWithIndex:(long long)arg0 autoTransfer:(BOOL)arg1;
- (void)transferToPreferredInitialIndex:(long long)arg0;
- (void)bindEditServicesWithWorkspace:(id)arg0;
- (void)movePieceFromIndex:(long long)arg0 toIndex:(long long)arg1;
- (void)addViewProvider:(id)arg0;
- (void)removePieceAtIndexs:(id)arg0;
- (void)replaceAllWithProjects:(id)arg0;
- (id)addAudioPlayerTimeObserver:(id /* block */)arg0;
- (void)removeAudioPlayerTimeObserver:(id)arg0;
- (id)allEditService;
- (void)didStopDragScrollAtIndex:(long long)arg0;
- (id)sequencePreview;
- (void)preActiveIndex:(long long)arg0 completion:(id /* block */)arg1;
- (void)deActiveIndex:(long long)arg0;
- (void)deActiveForcedIndex:(long long)arg0;
- (void)captureAll;
- (void)updateContextAtIndex:(long long)arg0;
- (void)captureCurrentOnCompletion:(id /* block */)arg0;
- (void)capturePreviewImageAtIndex:(long long)arg0 completion:(id /* block */)arg1;
- (void)didLoadVideoSourceAtIndex:(long long)arg0;
- (void)prefetchActiveAtIndex:(long long)arg0;
- (void)keepActive:(id)arg0;
- (void)unkeepActive:(id)arg0;
- (void)captureProcessedImageAtIndex:(long long)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1 completion:(id /* block */)arg2;
- (void)updateBGM;
- (void)changeBGMToWorkspace;
- (void)changeBGMToProject;
- (void)configPreviewMode:(BOOL)arg0 forEditPage:(BOOL)arg1;
- (BOOL)shouldForceCloseTransferAnimation;
- (void)playModeDidChanged:(BOOL)arg0;
- (id /* block */)prepareBlk;
- (void)setPrepareBlk:(id /* block */)arg0;
- (id)editServices;
- (BOOL)disableSwitchNextWithAnimation;
- (void)setDisableSwitchNextWithAnimation:(BOOL)arg0;
- (id)sequenceBGM;
- (void)sequencePreviewSwipeUpGesture;
- (void)setTrimProxy:(id)arg0;
- (void)setCropProxy:(id)arg0;
- (id)trimProxy;
- (id)cropProxy;
- (void)setTrimCropPieceProxy:(id)arg0;
- (void)clickedAddItem;
- (void)setSequenceBGM:(id)arg0;
- (void)_switchEditServiceAndWorkspaceToIndex:(long long)arg0;
- (id)allServiceProxys;
- (void)_bindEditServiceWithProject:(id)arg0 atIndex:(long long)arg1;
- (void)_updateMediaSession;
- (void)updateSlidesState;
- (void)addSwitchProxysInstance:(id)arg0 atIndex:(long long)arg1;
- (id)editProxy;
- (void)_createMediaContainerView;
- (id)editBuilderProxy;
- (id)captureTask;
- (void)doCaptureNext;
- (void)setPreProjectIndex:(long long)arg0;
- (long long)preProjectIndex;
- (void)setStartTransferTime:(double)arg0;
- (void)applyEditCanvasStateWithIndex:(long long)arg0;
- (id)trimCropPieceProxy;
- (void)setNeedsDispatchTransferIndex:(long long)arg0;
- (long long)needsDispatchTransferIndex;
- (void)stopDragScrollAtIndex:(long long)arg0 isAutoTransfer:(BOOL)arg1;
- (double)startTransferTime;
- (void)applyPublishCanvasStateWithIndex:(long long)arg0;
- (id)filterProxy;
- (id)beautyProxy;
- (id)stickerProxy;
- (id)canvasProxy;
- (id)hdrProxy;
- (id)audioEffectProxy;
- (id)BGMProxy;
- (id)livePhotoProxy;
- (id)specialEffectProxy;
- (id)captureFrameProxy;
- (id)playerMonitorProxy;
- (id)multiTrackProxy;
- (id)NLELogger;
- (void)scrollDragStatusChanged:(BOOL)arg0;
- (void)mediaContainerView:(id)arg0 didChangePlayStatus:(BOOL)arg1;
- (void)mediaContainerView:(id)arg0 didSelectIndicatorIdx:(long long)arg1;
- (void)trackForClipSwitch:(id)arg0;
- (void)setEditProxy:(id)arg0;
- (void)setEditBuilderProxy:(id)arg0;
- (void)setFilterProxy:(id)arg0;
- (void)setBeautyProxy:(id)arg0;
- (void)setStickerProxy:(id)arg0;
- (void)setCanvasProxy:(id)arg0;
- (void)setHdrProxy:(id)arg0;
- (void)setAudioEffectProxy:(id)arg0;
- (void)setBGMProxy:(id)arg0;
- (void)setLivePhotoProxy:(id)arg0;
- (void)setSpecialEffectProxy:(id)arg0;
- (void)setCaptureFrameProxy:(id)arg0;
- (void)setPlayerMonitorProxy:(id)arg0;
- (void)setMultiTrackProxy:(id)arg0;
- (id)keepActiveData;
- (void)setKeepActiveData:(id)arg0;
- (void)setCaptureTask:(id)arg0;
- (void)setNLELogger:(id)arg0;
- (void)setProviders:(id)arg0;
- (id)init;
- (id)workspace;
- (void).cxx_destruct;
- (id)preview;
- (id)audioPlayer;
- (void)setServiceProvider:(id)arg0;
- (id)providers;
- (id)UUID;
- (void)setPreview:(id)arg0;
- (id)debugDescription;
- (long long)index;
- (id)serviceProvider;
- (void)setSubscription:(id)arg0;
- (void)addSubscriber:(id)arg0;
- (void)setWorkspace:(id)arg0;
- (id)subscription;
- (void)removeSubscriber:(id)arg0;
- (unsigned long long)transferStatus;
- (void)setTransferStatus:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })preferredSize;
- (void)setPreferredSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)previewMode;
- (void)setPreviewMode:(BOOL)arg0;
- (id)mediaSession;
- (void)setMediaSession:(id)arg0;

@end
