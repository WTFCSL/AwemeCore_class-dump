//
//     Generated by private class-dump
//

@class IESLiveKtvSongStruct, NSString, IESSoloKTVVoiceSlider, IESLiveNewKTVVolumeSliderViewDH, UILabel, IESLiveKTVTuningStore, IESLiveKTVTuningEffectView;

@interface IESLiveSoloKTVEditPanelView : UIView <IESLiveTuningStorePlayerProtocol> {
    BOOL canSwitchSongPlayingType;
    BOOL enableEarReturnMode;
    BOOL headphonesMonitoringEnabled;
    BOOL isScoreMode;
    BOOL isShowLyric;
    IESLiveKtvSongStruct *currentPlayKTVMusic;
    unsigned long long currentSongPlayingType;
    unsigned long long savedSongPlayingType;
    id /* block */ _updateVoiceVolume;
    id /* block */ _updateMusicVolume;
    id /* block */ _updateVoiceDelay;
    id /* block */ _updateEffectPath;
    IESLiveNewKTVVolumeSliderViewDH *_voiceSlider;
    IESLiveNewKTVVolumeSliderViewDH *_musicSlider;
    IESSoloKTVVoiceSlider *_delaySlider;
    IESLiveKTVTuningStore *_tuningStore;
    IESLiveKTVTuningEffectView *_effectView;
    UILabel *_delayLabel;
}

@property (retain, nonatomic) IESLiveNewKTVVolumeSliderViewDH *voiceSlider;
@property (retain, nonatomic) IESLiveNewKTVVolumeSliderViewDH *musicSlider;
@property (retain, nonatomic) IESSoloKTVVoiceSlider *delaySlider;
@property (retain, nonatomic) IESLiveKTVTuningStore *tuningStore;
@property (retain, nonatomic) IESLiveKTVTuningEffectView *effectView;
@property (retain, nonatomic) UILabel *delayLabel;
@property (copy, nonatomic) id /* block */ updateVoiceVolume;
@property (copy, nonatomic) id /* block */ updateMusicVolume;
@property (copy, nonatomic) id /* block */ updateVoiceDelay;
@property (copy, nonatomic) id /* block */ updateEffectPath;
@property (nonatomic) BOOL isScoreMode;
@property (nonatomic) BOOL isShowLyric;
@property (nonatomic) BOOL enableEarReturnMode;
@property (readonly, nonatomic) BOOL headphonesMonitoringEnabled;
@property (nonatomic) BOOL canSwitchSongPlayingType;
@property (nonatomic) unsigned long long currentSongPlayingType;
@property (nonatomic) unsigned long long savedSongPlayingType;
@property (retain, nonatomic) IESLiveKtvSongStruct *currentPlayKTVMusic;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setMusicVolume:(float)arg0;
- (void)setReverberationEnabled:(BOOL)arg0;
- (void)setHeadphonesMonitoringEnabled:(BOOL)arg0;
- (void)switchKtvEffectWithSourcePath:(id)arg0;
- (void)startEffect;
- (void)stopEffect;
- (void)initView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)voiceSlider;
- (void)setVoiceSlider:(id)arg0;
- (void)setEarMonitorVolume:(long long)arg0;
- (BOOL)headphonesMonitoringEnabled;
- (void)exitKTVMode;
- (void)setToneVolume:(float)arg0;
- (void)setCurrentSongPlayingType:(unsigned long long)arg0;
- (unsigned long long)currentSongPlayingType;
- (BOOL)isScoreMode;
- (BOOL)isShowLyric;
- (id)currentPlayKTVMusic;
- (void)setIsShowLyric:(BOOL)arg0;
- (void)setIsScoreMode:(BOOL)arg0;
- (unsigned long long)savedSongPlayingType;
- (id)tuningStore;
- (void)setSavedSongPlayingType:(unsigned long long)arg0;
- (void)setCurrentPlayKTVMusic:(id)arg0;
- (BOOL)enableEarReturnMode;
- (BOOL)canSwitchSongPlayingType;
- (void)setCanSwitchSongPlayingType:(BOOL)arg0;
- (BOOL)isEnabledAutotune;
- (void)setEarReturnOn:(BOOL)arg0;
- (void)setTuningStore:(id)arg0;
- (void)handleHeadphonesStatus;
- (void)setEnableEarReturnMode:(BOOL)arg0;
- (void)resetDefaultHeadphonesMonitoring;
- (void)setCurrentOrDefaultEarReturnOn:(BOOL)arg0;
- (void)updateViewWithDraftModel:(id)arg0;
- (void)setUpdateVoiceVolume:(id /* block */)arg0;
- (void)setUpdateMusicVolume:(id /* block */)arg0;
- (void)setUpdateVoiceDelay:(id /* block */)arg0;
- (void)setUpdateEffectPath:(id /* block */)arg0;
- (id /* block */)updateVoiceVolume;
- (id /* block */)updateMusicVolume;
- (void)setMusicSlider:(id)arg0;
- (id /* block */)updateVoiceDelay;
- (id)valueToText:(double)arg0;
- (id)delayLabel;
- (id)musicSlider;
- (void)setDelaySlider:(id)arg0;
- (void)setDelayLabel:(id)arg0;
- (id)delaySlider;
- (id /* block */)updateEffectPath;
- (id)init;
- (id)effectView;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setEffectView:(id)arg0;
- (void)setVoiceVolume:(float)arg0;

@end
