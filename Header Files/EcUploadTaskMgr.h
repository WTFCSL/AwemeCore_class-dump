//
//     Generated by private class-dump
//

@class NSMutableArray, NSString, EcUploadDispatch, NSMutableDictionary, NSError, NSObject, EcClient;
@protocol OS_dispatch_queue, EcTaskChangeProtocol;

@interface EcUploadTaskMgr : NSObject {
    long long _state;
    NSString *_taskKey;
    id<EcTaskChangeProtocol> _taskDelegate;
    id /* block */ _taskStageChange;
    NSString *_defaultPauseReason;
    EcClient *_client;
    EcUploadDispatch *_uploadDispatch;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_allItem;
    NSMutableDictionary *_pauseItem;
    NSMutableArray *_readyItem;
    NSMutableDictionary *_runningItem;
    NSMutableArray *_successTask;
    NSMutableArray *_failedTask;
    NSMutableDictionary *_runningTask;
    NSError *_error;
}

@property (copy, nonatomic) NSString *defaultPauseReason;
@property (weak, nonatomic) EcClient *client;
@property (weak, nonatomic) EcUploadDispatch *uploadDispatch;
@property (nonatomic) long long state;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (copy, nonatomic) NSString *taskKey;
@property (retain, nonatomic) NSMutableDictionary *allItem;
@property (retain, nonatomic) NSMutableDictionary *pauseItem;
@property (retain, nonatomic) NSMutableArray *readyItem;
@property (retain, nonatomic) NSMutableDictionary *runningItem;
@property (retain, nonatomic) NSMutableArray *successTask;
@property (retain, nonatomic) NSMutableArray *failedTask;
@property (retain, nonatomic) NSMutableDictionary *runningTask;
@property (retain, nonatomic) NSError *error;
@property (weak, nonatomic) id<EcTaskChangeProtocol> taskDelegate;
@property (copy, nonatomic) id /* block */ taskStageChange;

- (id)taskKey;
- (void)setTaskKey:(id)arg0;
- (void)pauseTask;
- (void)resumeTask;
- (void)getUploadItemTask:(id)arg0 complete:(id /* block */)arg1;
- (void)setDefaultPauseReason:(id)arg0;
- (void)setAllItem:(id)arg0;
- (void)setPauseItem:(id)arg0;
- (void)setReadyItem:(id)arg0;
- (void)setRunningItem:(id)arg0;
- (void)setSuccessTask:(id)arg0;
- (void)setFailedTask:(id)arg0;
- (void)setUploadDispatch:(id)arg0;
- (void)ecInitParam:(id)arg0;
- (id)allItem;
- (id)readyItem;
- (id)successTask;
- (id)failedTask;
- (id)pauseItem;
- (id)defaultPauseReason;
- (id)runningItem;
- (id)ecCreateTaskByItemModel:(id)arg0;
- (void)postItemChange:(id)arg0;
- (void)progressLogic:(id)arg0;
- (void)resultLogic:(id)arg0;
- (void)postTaskProgressChange;
- (void)taskGotoOver;
- (id)uploadDispatch;
- (void)doPauseByReason:(id)arg0;
- (void)retryTaskByAssetIds:(id)arg0;
- (void)doResumeTaskByReason:(id)arg0;
- (void)postTaskStateChange;
- (id /* block */)taskStageChange;
- (id)taskDelegate;
- (id)currentTaskStatus;
- (id)initWithTaskKey:(id)arg0 assetModelList:(id)arg1 uploadDispatch:(id)arg2 client:(id)arg3;
- (id)initWithTaskKey:(id)arg0 itemModelList:(id)arg1 pauseReason:(id)arg2 uploadDispatch:(id)arg3 client:(id)arg4;
- (void)appendAssetModelList:(id)arg0;
- (BOOL)hasReadyTask;
- (void)pauseTaskByReanson:(long long)arg0;
- (void)deleteItemByAssetIds:(id)arg0;
- (void)retryTask;
- (void)resumeTaskByReason:(long long)arg0;
- (id)getTaskItemState:(id)arg0;
- (void)clearDb;
- (void)setTaskDelegate:(id)arg0;
- (void)setTaskStageChange:(id /* block */)arg0;
- (void)setWorkQueue:(id)arg0;
- (id)workQueue;
- (void).cxx_destruct;
- (long long)state;
- (void)setClient:(id)arg0;
- (void)setState:(long long)arg0;
- (id)client;
- (void)refreshState;
- (void)setError:(id)arg0;
- (id)error;
- (id)currentProgress;
- (id)runningTask;
- (void)setRunningTask:(id)arg0;
- (void)cancelTask;
- (void)saveToDB;

@end
