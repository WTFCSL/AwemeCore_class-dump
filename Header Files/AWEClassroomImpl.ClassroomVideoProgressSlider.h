//
//     Generated by private class-dump
//

@interface AWEClassroomImpl.ClassroomVideoProgressSlider : UISlider <UIGestureRecognizerDelegate> {
    void /* unknown type, empty encoding */ halfScreenSliderHeight;
    void /* unknown type, empty encoding */ sliderHeight;
    void /* unknown type, empty encoding */ highlightSliderHeight;
    void /* unknown type, empty encoding */ isSliding;
    void /* unknown type, empty encoding */ isRedMode;
    void /* unknown type, empty encoding */ isHalfScreenMode;
    void /* unknown type, empty encoding */ isHightLightMode;
    void /* unknown type, empty encoding */ delegate;
    void /* unknown type, empty encoding */ $__lazy_storage_$_tapGesture;
}

- (void)handleTapGestureWithSender:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maximumValueImageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })minimumValueImageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 trackRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 value:(float)arg2;

@end
