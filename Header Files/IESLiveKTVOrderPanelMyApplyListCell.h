//
//     Generated by private class-dump
//

@class UITableView, NSString, PlaylistTab, IESLiveEmptyView, NSMutableArray, IESLiveCommonKTVOrderPanelModel;

@interface IESLiveKTVOrderPanelMyApplyListCell : UICollectionViewCell <UITableViewDataSource, UITableViewDelegate, IESLiveKTVOrderPanelListProtocol> {
    BOOL _hasMore;
    IESLiveCommonKTVOrderPanelModel *_panelModel;
    UITableView *_tableView;
    IESLiveEmptyView *_emptyView;
    NSString *_cursor;
    long long _totalCount;
    PlaylistTab *_category;
    NSMutableArray *_applyMusicList;
}

@property (retain, nonatomic) IESLiveCommonKTVOrderPanelModel *panelModel;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) IESLiveEmptyView *emptyView;
@property (retain, nonatomic) NSString *cursor;
@property (nonatomic) BOOL hasMore;
@property (nonatomic) long long totalCount;
@property (retain, nonatomic) PlaylistTab *category;
@property (retain, nonatomic) NSMutableArray *applyMusicList;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)panelModel;
- (void)setPanelModel:(id)arg0;
- (void)renderWithSectionModel:(id)arg0 index:(long long)arg1;
- (void)removeItemWithMusicID:(long long)arg0 orderUserID:(long long)arg1;
- (void)needUpdateList;
- (id)applyMusicList;
- (void)setApplyMusicList:(id)arg0;
- (void)fetchWantList;
- (id)cursor;
- (id)tableView:(id)arg0 viewForHeaderInSection:(long long)arg1;
- (void)tableView:(id)arg0 willDisplayCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (id)category;
- (double)tableView:(id)arg0 heightForHeaderInSection:(long long)arg1;
- (void)setTableView:(id)arg0;
- (long long)tableView:(id)arg0 numberOfRowsInSection:(long long)arg1;
- (void).cxx_destruct;
- (id)tableView;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (void)setCategory:(id)arg0;
- (void)reloadData;
- (void)scrollToTop;
- (void)setHasMore:(BOOL)arg0;
- (BOOL)hasMore;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (long long)totalCount;
- (void)addObserver;
- (void)setCursor:(id)arg0;
- (void)setupView;
- (id)emptyView;
- (void)setEmptyView:(id)arg0;
- (void)setTotalCount:(long long)arg0;
- (void)willDisplay;

@end
