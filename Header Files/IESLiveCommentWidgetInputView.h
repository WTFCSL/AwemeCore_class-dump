//
//     Generated by private class-dump
//

@class UITextView, NSString, IESLiveEmojiTextParser, IESLiveCommentContext, IESLiveCommentWidgetInputHelper;
@protocol IESLiveCommentWidgetInputDelegate;

@interface IESLiveCommentWidgetInputView : UIView <UITextViewDelegate> {
    BOOL _keyboardActivated;
    BOOL _isInTempReplaceText;
    BOOL _commentReplyLinkEnable;
    BOOL _chatChannelMentionEnable;
    id<IESLiveCommentWidgetInputDelegate> _delegate;
    NSString *_currentText;
    double _lastTextChangeTime;
    IESLiveCommentContext *_commentContext;
    UITextView *_commentTextView;
    UITextView *_commentCopyTextView;
    long long _characterInputLimit;
    UITextView *_placeHolderLabel;
    long long _activityEmojiInputLimit;
    IESLiveEmojiTextParser *_textParser;
    double _currentHeight;
    IESLiveCommentWidgetInputHelper *_inputHelper;
    struct _NSRange { unsigned long long location; unsigned long long length; } _tempReplaceTextRange;
}

@property (retain, nonatomic) IESLiveCommentContext *commentContext;
@property (retain, nonatomic) UITextView *commentTextView;
@property (retain, nonatomic) UITextView *commentCopyTextView;
@property (nonatomic) long long characterInputLimit;
@property (retain, nonatomic) UITextView *placeHolderLabel;
@property (nonatomic) long long activityEmojiInputLimit;
@property (retain, nonatomic) IESLiveEmojiTextParser *textParser;
@property (copy, nonatomic) NSString *currentText;
@property (nonatomic) double currentHeight;
@property (nonatomic) BOOL isInTempReplaceText;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } tempReplaceTextRange;
@property (nonatomic, getter=isKeyboardActivated) BOOL keyboardActivated;
@property (nonatomic) BOOL commentReplyLinkEnable;
@property (nonatomic) BOOL chatChannelMentionEnable;
@property (retain, nonatomic) IESLiveCommentWidgetInputHelper *inputHelper;
@property (weak, nonatomic) id<IESLiveCommentWidgetInputDelegate> delegate;
@property (nonatomic) double lastTextChangeTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setTextParser:(id)arg0;
- (id)textParser;
- (void)disableLocalizations;
- (id)initWithCommentContext:(id)arg0;
- (id)commentContext;
- (void)setCommentContext:(id)arg0;
- (void)setCurrentHeight:(double)arg0;
- (id)placeHolderLabel;
- (void)setPlaceHolderLabel:(id)arg0;
- (id)commentTextView;
- (void)setCommentTextView:(id)arg0;
- (BOOL)commentReplyLinkEnable;
- (BOOL)chatChannelMentionEnable;
- (void)setCommentReplyLinkEnable:(BOOL)arg0;
- (void)setChatChannelMentionEnable:(BOOL)arg0;
- (void)setupTextParser;
- (unsigned long long)liveCommentReplyLinkSwitch;
- (id)initWithCommentContext:(id)arg0 text:(id)arg1 placeHolder:(id)arg2 withChararcterLimit:(long long)arg3 activityEmojiCount:(long long)arg4;
- (void)activateKeyboardMode:(BOOL)arg0;
- (void)refreshPlaceHolderStr:(id)arg0;
- (void)startInsertTextForTemp;
- (void)insertForTempText:(id)arg0;
- (void)endInsertTextForTemp;
- (BOOL)isKeyboardActivated;
- (double)lastTextChangeTime;
- (void)removeAtUser:(id)arg0;
- (void)insertFusionEmojiWithModel:(id)arg0;
- (void)addTextViewObserver;
- (void)setupPlaceHoderLabel;
- (void)setCommentCopyTextView:(id)arg0;
- (id)commentCopyTextView;
- (void)setKeyboardActivated:(BOOL)arg0;
- (long long)characterInputLimit;
- (double)getCurrentTextViewLengthWithTexView:(id)arg0 cutTextWhenBeyondLimit:(BOOL)arg1;
- (id)inputHelper;
- (void)updateHeightIfNeeded;
- (void)setLastTextChangeTime:(double)arg0;
- (BOOL)checkTextViewIfReachMaxLengthWithInsertText:(id)arg0 replaceLength:(long long)arg1;
- (long long)activityEmojiInputLimit;
- (void)setCharacterInputLimit:(long long)arg0;
- (BOOL)textView:(id)arg0 checkActivityEmojiIfReachMaxCountWithInsertText:(id)arg1 replaceRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg2;
- (BOOL)isInTempReplaceText;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })tempReplaceTextRange;
- (void)replaceWithText:(id)arg0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1;
- (void)setTempReplaceTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0;
- (void)setIsInTempReplaceText:(BOOL)arg0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })currentCursorRange;
- (double)calculatePlaceHolderHeightChangeWithWidth:(double)arg0;
- (double)calculateTextViewHeightChangeWithWidth:(double)arg0;
- (void)replaceWithText:(id)arg0;
- (void)setActivityEmojiInputLimit:(long long)arg0;
- (void)setInputHelper:(id)arg0;
- (double)currentHeight;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)delegate;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)insertText:(id)arg0;
- (id)currentText;
- (void)setCurrentText:(id)arg0;
- (BOOL)textViewShouldBeginEditing:(id)arg0;
- (void)textViewDidEndEditing:(id)arg0;
- (void)textViewDidChange:(id)arg0;
- (BOOL)textView:(id)arg0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 replacementText:(id)arg2;
- (void)setupViews;
- (void)backspace;
- (void)setupTextView;
- (void)setCharacterLimit:(long long)arg0;

@end
