//
//     Generated by private class-dump
//

@class NSData, NSMutableData, NSObject;

@interface AMapPBCoder : NSObject {
    NSObject *m_obj;
    NSData *m_inputBuffer;
    struct MiniCodedInputData { char *x0; int x1; int x2; } *m_inputData;
    NSMutableData *m_outputBuffer;
    struct MiniCodedOutputData { char *x0; unsigned long long x1; int x2; } *m_outputData;
    struct vector<AMapPBEncodeItem, std::__1::allocator<AMapPBEncodeItem> > { struct AMapPBEncodeItem *x0; struct AMapPBEncodeItem *x1; struct __compressed_pair<AMapPBEncodeItem *, std::__1::allocator<AMapPBEncodeItem> > { struct AMapPBEncodeItem *x0; } x2; } *m_encodeItems;
}

+ (id)decodeContainerOfClass:(Class)arg0 withValueClass:(Class)arg1 fromData:(id)arg2;
+ (id)encodeDataWithObject:(id)arg0;
+ (BOOL)isMiniPBCoderCompatibleObject:(id)arg0;
+ (BOOL)isMiniPBCoderCompatibleType:(Class)arg0;
+ (id)decodeObjectOfClass:(Class)arg0 fromData:(id)arg1;

- (unsigned long long)prepareObjectForEncode:(id)arg0;
- (void)writeRootObject;
- (id)initForWritingWithTarget:(id)arg0;
- (id)getEncodeData;
- (id)decodeOneObject:(id)arg0 ofClass:(Class)arg1;
- (id)decodeOneDictionaryOfValueClass:(Class)arg0;
- (id)decodeOneArrayOfValueClass:(Class)arg0;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg0;

@end
