//
//     Generated by private class-dump
//

@class AWEAwemeModel, UIView, NSTimer, NSString, AWEBinding, UIControl, UIPanGestureRecognizer, MPVolumeView, LOTAnimationView, AWELandscapePageContext;
@protocol AWELandscapeVolumeBrightnessDelegate;

@interface AWELandscapeVolumeBrightnessControlView : UIView <UIGestureRecognizerDelegate> {
    BOOL _isChangingVolumeFromTouch;
    BOOL _isChangingBrightnessFromTouch;
    BOOL _shouldPreventHide;
    BOOL _shouldResponsePan;
    AWELandscapePageContext *_pageContext;
    id<AWELandscapeVolumeBrightnessDelegate> _delegate;
    UIPanGestureRecognizer *_panGesture;
    long long _volumeTouchViewStatus;
    long long _brightnessTouchViewStatus;
    long long _interactionViewStateBeforeDrag;
    AWEAwemeModel *_model;
    AWEBinding *_binding;
    id /* block */ _handlerBlock;
    MPVolumeView *_systemVolumeView;
    LOTAnimationView *_volumeLottieView;
    LOTAnimationView *_brightnessLottieView;
    UIView *_volumeTouchView;
    UIView *_brightnessTouchView;
    NSTimer *_dismissTimer;
    double _preVolume;
    double _volumeValueAfterManual;
    UIView *_topTipsContainer;
    UIView *_topEffectView;
    UIView *_topGreyView;
    UIView *_topWhiteView;
    UIControl *_volumeContainer;
    UIView *_volumeEffectView;
    UIView *_volumeWhiteView;
    UIControl *_brightnessContainer;
    UIView *_brightnessEffectView;
    UIView *_brightnessWhiteView;
}

@property (nonatomic) BOOL isChangingVolumeFromTouch;
@property (nonatomic) BOOL isChangingBrightnessFromTouch;
@property (nonatomic) BOOL shouldPreventHide;
@property (nonatomic) BOOL shouldResponsePan;
@property (nonatomic) long long volumeTouchViewStatus;
@property (nonatomic) long long brightnessTouchViewStatus;
@property (nonatomic) long long interactionViewStateBeforeDrag;
@property (retain, nonatomic) AWEAwemeModel *model;
@property (retain, nonatomic) AWEBinding *binding;
@property (copy, nonatomic) id /* block */ handlerBlock;
@property (retain, nonatomic) MPVolumeView *systemVolumeView;
@property (retain, nonatomic) LOTAnimationView *volumeLottieView;
@property (retain, nonatomic) LOTAnimationView *brightnessLottieView;
@property (retain, nonatomic) UIView *volumeTouchView;
@property (retain, nonatomic) UIView *brightnessTouchView;
@property (retain, nonatomic) NSTimer *dismissTimer;
@property (nonatomic) double preVolume;
@property (nonatomic) double volumeValueAfterManual;
@property (retain, nonatomic) UIPanGestureRecognizer *panGesture;
@property (retain, nonatomic) UIView *topTipsContainer;
@property (retain, nonatomic) UIView *topEffectView;
@property (retain, nonatomic) UIView *topGreyView;
@property (retain, nonatomic) UIView *topWhiteView;
@property (retain, nonatomic) UIControl *volumeContainer;
@property (retain, nonatomic) UIView *volumeEffectView;
@property (retain, nonatomic) UIView *volumeWhiteView;
@property (retain, nonatomic) UIControl *brightnessContainer;
@property (retain, nonatomic) UIView *brightnessEffectView;
@property (retain, nonatomic) UIView *brightnessWhiteView;
@property (retain, nonatomic) AWELandscapePageContext *pageContext;
@property (weak, nonatomic) id<AWELandscapeVolumeBrightnessDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (BOOL)shouldResponseGestureRecognizer:(id)arg0;
- (BOOL)handleResponseGestureRecognizer:(id)arg0;
- (void)willExitLandscape;
- (void)setupNotification;
- (double)systemBrightness;
- (id)systemVolumeView;
- (void)setSystemVolumeView:(id)arg0;
- (id)systemVolumeSlider;
- (double)preVolume;
- (void)setPreVolume:(double)arg0;
- (id)topTipsContainer;
- (void)setTopTipsContainer:(id)arg0;
- (void)showVolumeBrightnessControlView:(BOOL)arg0 animated:(BOOL)arg1 duration:(double)arg2 options:(unsigned long long)arg3;
- (BOOL)isPointInButton:(struct CGPoint { double x0; double x1; })arg0;
- (void)handleTapOnButton:(id)arg0;
- (void)showVolumeBrightnessControlView:(BOOL)arg0 animated:(BOOL)arg1;
- (void)showSystemVolumeView:(BOOL)arg0;
- (void)setupGesturesWithTargetView:(id)arg0;
- (BOOL)isChangingVolumeFromTouch;
- (BOOL)isChangingBrightnessFromTouch;
- (void)enterQuietModeFromVolume:(BOOL)arg0;
- (double)volumeValueAfterManual;
- (void)setVolumeValueAfterManual:(double)arg0;
- (void)changeVolumeWithNewValue:(double)arg0 fromReason:(long long)arg1;
- (void)setShouldPreventHide:(BOOL)arg0;
- (void)setIsChangingVolumeFromTouch:(BOOL)arg0;
- (void)setIsChangingBrightnessFromTouch:(BOOL)arg0;
- (BOOL)isPointInVolumeTouchView:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isPointInBrightnessTouchView:(struct CGPoint { double x0; double x1; })arg0;
- (id)volumeTouchView;
- (id)brightnessTouchView;
- (BOOL)isPointInVolumeButton:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)isPointInBrightnessButton:(struct CGPoint { double x0; double x1; })arg0;
- (double)buttonHotZoneValue;
- (id)volumeContainer;
- (BOOL)volumeButtonShowing;
- (id)brightnessContainer;
- (BOOL)brightnessButtonShowing;
- (BOOL)shouldPreventHide;
- (void)updateAdjustBarStatus:(long long)arg0 value:(double)arg1 isVolumBar:(BOOL)arg2 fromReason:(long long)arg3;
- (double)systemVolume;
- (void)showTopTipsContainer:(BOOL)arg0;
- (BOOL)shouldResponsePan;
- (void)handlePanOnTouchView:(id)arg0;
- (void)setShouldResponsePan:(BOOL)arg0;
- (BOOL)isPointInTouchView:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)shouldResponsePanGesture:(id)arg0;
- (void)setupTouchView;
- (id)volumeLottieView;
- (id)brightnessLottieView;
- (id)topWhiteView;
- (id)topGreyView;
- (void)setupTouchViewForLeftRightBarStyle;
- (id)gradientLayerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 isVolume:(BOOL)arg1;
- (id)shapeLayerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)brightnessEffectView;
- (id)brightnessWhiteView;
- (id)volumeEffectView;
- (id)volumeWhiteView;
- (void)makeLightShockIfNeededWithAdjustBarStatus:(long long)arg0 volume:(BOOL)arg1;
- (long long)volumeTouchViewStatus;
- (long long)brightnessTouchViewStatus;
- (BOOL)shouldShowTouchView;
- (void)setVolumeTouchViewStatus:(long long)arg0;
- (void)setBrightnessTouchViewStatus:(long long)arg0;
- (void)makeLightShock;
- (void)dismissFromReason:(long long)arg0 isVolume:(BOOL)arg1;
- (void)showAdjustBar:(BOOL)arg0 isVolume:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setInteractionViewStateBeforeDrag:(long long)arg0;
- (void)resetDismissTimerFromReason:(long long)arg0 isVolume:(BOOL)arg1 force:(BOOL)arg2;
- (long long)interactionViewStateBeforeDrag;
- (void)changeBrightnessWithNewValue:(double)arg0 fromReason:(long long)arg1;
- (double)volumeChangeValueMapRation;
- (void)updateSystemVolume:(double)arg0;
- (void)updateSystemBrightness:(double)arg0;
- (void)trackChangeWithBeginLocation:(struct CGPoint { double x0; double x1; })arg0 endLocation:(struct CGPoint { double x0; double x1; })arg1 beginValue:(double)arg2 endValue:(double)arg3 isVolume:(BOOL)arg4;
- (id)touchViewWithPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setVolumeLottieView:(id)arg0;
- (void)setBrightnessLottieView:(id)arg0;
- (void)setVolumeTouchView:(id)arg0;
- (void)setBrightnessTouchView:(id)arg0;
- (void)setTopGreyView:(id)arg0;
- (void)setTopWhiteView:(id)arg0;
- (void)setVolumeContainer:(id)arg0;
- (void)setVolumeEffectView:(id)arg0;
- (void)setVolumeWhiteView:(id)arg0;
- (void)setBrightnessContainer:(id)arg0;
- (void)setBrightnessEffectView:(id)arg0;
- (void)setBrightnessWhiteView:(id)arg0;
- (void)updateState:(long long)arg0;
- (id /* block */)handlerBlock;
- (void)setModel:(id)arg0;
- (void)setHandlerBlock:(id /* block */)arg0;
- (void)setDismissTimer:(id)arg0;
- (void).cxx_destruct;
- (id)model;
- (BOOL)isInteracting;
- (id)delegate;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)dismissTimer;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)reset;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (id)binding;
- (id)panGesture;
- (void)setPanGesture:(id)arg0;
- (void)setupUI;
- (id)topEffectView;
- (void)setTopEffectView:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 targetView:(id)arg1;
- (id)pageContext;
- (void)setPageContext:(id)arg0;
- (void)updateWithModel:(id)arg0;
- (void)setBinding:(id)arg0;

@end
