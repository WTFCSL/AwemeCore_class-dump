//
//     Generated by private class-dump
//

@class VPVREye;
@protocol VPVRHeadTrackerDelegate;

@interface VPVRHeadTracker : NSObject {
    struct CardboardHeadTracker { } *_cardboardHeadTracker;
    struct { void /* unknown type, empty encoding */ vector; } _currentQuaternion;
    struct { void /* unknown type, empty encoding */ vector; } _freezeQuaternion;
    struct { void /* unknown type, empty encoding */ vector; } _initialQuaternion;
    BOOL _didGetInitialHeadPose;
    long long _firstUpdateTimestampInNanoseconds;
    struct { void /* unknown type, empty encoding */ vector; } _deltaFreezeQuaternion;
    struct { void /* unknown type, empty encoding */ vector; } _currentAndFreezeQuaternion;
    struct { void /* unknown type, empty encoding */ vector; } _appliedQuaternion;
    struct { void /* unknown type, empty encoding */ vector; } _appliedQuaternionWithExtraQuat;
    struct { void /* unknown type, empty encoding */ vector; } _appliedQuaternionWithExtraSlerpQuat;
    BOOL _headTrackingEnabled;
    VPVREye *_leftEye;
    VPVREye *_rightEye;
    double _gyroSensitivity;
    long long _postNotifiVRPoseInterval;
    id<VPVRHeadTrackerDelegate> _trackerDelegate;
    long long _postNotifyVRHeadPoseCount;
    struct { void /* unknown type, empty encoding */ vector; } _extraQuaternion;
    struct { void /* unknown type, empty encoding */ columns[4]; } _headViewMatrix;
}

@property (retain, nonatomic) VPVREye *leftEye;
@property (retain, nonatomic) VPVREye *rightEye;
@property (nonatomic) struct { void /* unknown type, empty encoding */ columns[4]; } headViewMatrix;
@property (nonatomic) long long postNotifyVRHeadPoseCount;
@property (nonatomic, getter=isHeadTrackingEnabled) BOOL headTrackingEnabled;
@property (nonatomic) double gyroSensitivity;
@property struct { void /* unknown type, empty encoding */ vector; } extraQuaternion;
@property (nonatomic) long long postNotifiVRPoseInterval;
@property (weak, nonatomic) id<VPVRHeadTrackerDelegate> trackerDelegate;

- (void)recenter;
- (void)setHeadTrackingEnabled:(BOOL)arg0;
- (double)gyroSensitivity;
- (void)setGyroSensitivity:(double)arg0;
- (id)trackerDelegate;
- (void)setHeadViewMatrix:(struct { void /* unknown type, empty encoding */ x0[4]; })arg0;
- (struct { })extraQuaternion;
- (long long)postNotifiVRPoseInterval;
- (long long)postNotifyVRHeadPoseCount;
- (void)setPostNotifyVRHeadPoseCount:(long long)arg0;
- (struct { void /* unknown type, empty encoding */ x0[4]; })headViewMatrix;
- (struct { void /* unknown type, empty encoding */ x0[4]; })viewPoseMatrixWithEyeType:(unsigned long long)arg0;
- (id)initWithLeftEye:(id)arg0 andRightEye:(id)arg1;
- (void)updateHeadPoseWithOutputTextureOrientation:(unsigned long long)arg0 disableZaxis:(BOOL)arg1;
- (struct { void /* unknown type, empty encoding */ x0[4]; })modelViewProjectionMatrixWithEyeType:(unsigned long long)arg0;
- (void)setExtraQuaternion:(struct { })arg0;
- (void)setPostNotifiVRPoseInterval:(long long)arg0;
- (void)setTrackerDelegate:(id)arg0;
- (void).cxx_destruct;
- (void)dealloc;
- (id)rightEye;
- (void)setRightEye:(id)arg0;
- (id)leftEye;
- (void)setLeftEye:(id)arg0;
- (BOOL)isHeadTrackingEnabled;

@end
