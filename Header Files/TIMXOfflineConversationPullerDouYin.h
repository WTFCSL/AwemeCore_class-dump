//
//     Generated by private class-dump
//

@class TIMXGCDTimer;
@protocol TIMXOfflineConversationPullerDouYinDelegate, TIMXAppDoubleTrackerManagerProtocol, TIMXOfflineMsgPullerContextProtocol;

@interface TIMXOfflineConversationPullerDouYin : TIMXSingleStrategyPullerDouYin {
    BOOL _enableOfflinePullDropMessageFix;
    BOOL _needsPullOfflineCmdMessage;
    BOOL _pullingOfflineCmdMessage;
    BOOL _needsPullOfflineConversation;
    BOOL _pullingOfflineConversation;
    BOOL _needsPullOfflineMessage;
    BOOL _pullingOfflineMessage;
    BOOL _needsPullOfflineLiveConsultConversation;
    BOOL _pullingOfflineLiveConsultConversation;
    BOOL _enableMeasureOfflinePullElapsedTime;
    BOOL _enableMeasureMarkReadElapsedTime;
    BOOL _enableRedundantOfflinePullOpt;
    BOOL _delayGeneralOfflinePullExists;
    BOOL _enableOfflinePullOptimize;
    BOOL _isFirstPullAfterWebSocketBroke;
    id<TIMXOfflineConversationPullerDouYinDelegate> _delegate;
    TIMXGCDTimer *_offlineCmdMessagePullTimer;
    TIMXGCDTimer *_offlineConversationPullTimer;
    TIMXGCDTimer *_offlineMessagePullTimer;
    TIMXGCDTimer *_offlineLiveConsultConversationPullTimer;
    double _pullConvStartTime;
    double _pullCmdStartTime;
    double _pullMsgStartTime;
    long long _pullRequestTimes;
    long long _pullMessageCount;
    double _pullRequestDuration;
    double _pullSDKDuration;
    long long _offlinePullElapsedTimeExceptionDuration;
    long long _markReadElapsedTimeExceptionDuration;
    id<TIMXAppDoubleTrackerManagerProtocol> _tracker;
    long long _notifyConversationVersionNotContinuosCount;
    double _rejectLCPullBefore;
    double _lastGeneralOfflinePullTime;
    double _lastOfflinePullTimeOfEnterForeground;
    double _appEnterForegroundOfflinePullInterval;
    double _lastOfflinePullTime;
    double _macroOfflinePullInterval;
    double _rejectWSReconnectedPullInterval;
    id<TIMXOfflineMsgPullerContextProtocol> _lastContext;
}

@property BOOL needsPullOfflineCmdMessage;
@property BOOL pullingOfflineCmdMessage;
@property (retain) TIMXGCDTimer *offlineCmdMessagePullTimer;
@property BOOL needsPullOfflineConversation;
@property BOOL pullingOfflineConversation;
@property (retain) TIMXGCDTimer *offlineConversationPullTimer;
@property BOOL needsPullOfflineMessage;
@property BOOL pullingOfflineMessage;
@property (retain) TIMXGCDTimer *offlineMessagePullTimer;
@property BOOL needsPullOfflineLiveConsultConversation;
@property BOOL pullingOfflineLiveConsultConversation;
@property (retain) TIMXGCDTimer *offlineLiveConsultConversationPullTimer;
@property double pullConvStartTime;
@property double pullCmdStartTime;
@property double pullMsgStartTime;
@property long long pullRequestTimes;
@property long long pullMessageCount;
@property double pullRequestDuration;
@property double pullSDKDuration;
@property (nonatomic) BOOL enableMeasureOfflinePullElapsedTime;
@property (nonatomic) long long offlinePullElapsedTimeExceptionDuration;
@property (nonatomic) BOOL enableMeasureMarkReadElapsedTime;
@property (nonatomic) long long markReadElapsedTimeExceptionDuration;
@property (retain, nonatomic) id<TIMXAppDoubleTrackerManagerProtocol> tracker;
@property (readonly, nonatomic) BOOL enableOfflinePullDropMessageFix;
@property long long notifyConversationVersionNotContinuosCount;
@property (nonatomic) double rejectLCPullBefore;
@property (nonatomic) BOOL enableRedundantOfflinePullOpt;
@property (nonatomic) double lastGeneralOfflinePullTime;
@property (nonatomic) BOOL delayGeneralOfflinePullExists;
@property (nonatomic) BOOL enableOfflinePullOptimize;
@property (nonatomic) BOOL isFirstPullAfterWebSocketBroke;
@property (nonatomic) double lastOfflinePullTimeOfEnterForeground;
@property (nonatomic) double appEnterForegroundOfflinePullInterval;
@property (nonatomic) double lastOfflinePullTime;
@property (nonatomic) double macroOfflinePullInterval;
@property (nonatomic) double rejectWSReconnectedPullInterval;
@property (retain, nonatomic) id<TIMXOfflineMsgPullerContextProtocol> lastContext;
@property (weak, nonatomic) id<TIMXOfflineConversationPullerDouYinDelegate> delegate;

- (void)setPullMessageCount:(long long)arg0;
- (void)setPullRequestTimes:(long long)arg0;
- (void)setPullSDKDuration:(double)arg0;
- (void)setPullRequestDuration:(double)arg0;
- (void)setPullConvStartTime:(double)arg0;
- (void)setPullCmdStartTime:(double)arg0;
- (void)setPullMsgStartTime:(double)arg0;
- (long long)pullRequestTimes;
- (double)pullSDKDuration;
- (double)pullMsgStartTime;
- (double)pullRequestDuration;
- (long long)pullMessageCount;
- (double)pullConvStartTime;
- (double)pullCmdStartTime;
- (void)appEnterForeground:(id)arg0;
- (void)tokenChanged:(id)arg0;
- (void)wsStateChangedToConnected:(id)arg0;
- (BOOL)enableRedundantOfflinePullOpt;
- (void)setEnableRedundantOfflinePullOpt:(BOOL)arg0;
- (BOOL)pullingOfflineMessage;
- (void)setPullingOfflineMessage:(BOOL)arg0;
- (id)initWithRootObject:(id)arg0 inbox:(int)arg1 userID:(long long)arg2;
- (void)setNeedsPullWithContext:(id)arg0;
- (BOOL)enableMeasureMarkReadElapsedTime;
- (id)addMonitorInToArray:(id)arg0 event:(id)arg1;
- (long long)markReadElapsedTimeExceptionDuration;
- (void)setEnableMeasureMarkReadElapsedTime:(BOOL)arg0;
- (void)setMarkReadElapsedTimeExceptionDuration:(long long)arg0;
- (void)setNeedsPullOfflineCmdMessageWithReason:(long long)arg0;
- (void)setNeedsPullOfflineConversationWithReason:(long long)arg0;
- (void)setNeedsPullOfflineConversation:(BOOL)arg0;
- (id)offlineConversationPullTimer;
- (void)offlineConversationPullFired:(id)arg0;
- (void)setOfflineConversationPullTimer:(id)arg0;
- (BOOL)needsPullOfflineConversation;
- (BOOL)pullingOfflineConversation;
- (void)pullOfflineConversation;
- (void)setPullingOfflineConversation:(BOOL)arg0;
- (void)setNeedsPullOfflineCmdMessage:(BOOL)arg0;
- (id)offlineCmdMessagePullTimer;
- (void)offlineCmdMessagePullFired:(id)arg0;
- (void)setOfflineCmdMessagePullTimer:(id)arg0;
- (BOOL)needsPullOfflineCmdMessage;
- (BOOL)pullingOfflineCmdMessage;
- (void)pullOfflineCmdMessage;
- (void)setPullingOfflineCmdMessage:(BOOL)arg0;
- (void)wsResumeToListen:(id)arg0;
- (void)setNeedsPullOfflineMessageWithContext:(id)arg0;
- (void)logElapsedTimeWithMonitors:(id)arg0 prefix:(id)arg1;
- (BOOL)checkNotifyVersionContinues:(id)arg0 inboxType:(int)arg1;
- (long long)notifyConversationVersionNotContinuosCount;
- (void)setNotifyConversationVersionNotContinuosCount:(long long)arg0;
- (void)__updateConversationVersionWithNotify:(id)arg0 inboxType:(int)arg1;
- (void)mergePullVersionRangeWithMergeLeft:(long long)arg0 mergeRight:(long long)arg1;
- (BOOL)isInVersionRange:(long long)arg0;
- (BOOL)enableOfflinePullOptimize;
- (double)appEnterForegroundOfflinePullInterval;
- (double)lastOfflinePullTimeOfEnterForeground;
- (BOOL)isFirstPullAfterWebSocketBroke;
- (void)setIsFirstPullAfterWebSocketBroke:(BOOL)arg0;
- (void)setRejectLCPullBefore:(double)arg0;
- (double)rejectLCPullBefore;
- (void)pullOfflineStrangerConversation;
- (void)setNeedsPullOfflineLiveConsultConversationWithContext:(id)arg0;
- (void)p_trackOldChainUsing:(id)arg0;
- (BOOL)enableOfflinePullDropMessageFix;
- (void)setNeedsPullOfflineLiveConsultConversation:(BOOL)arg0;
- (id)offlineLiveConsultConversationPullTimer;
- (void)offlineLiveConsultConversationPullFired:(id)arg0;
- (void)setOfflineLiveConsultConversationPullTimer:(id)arg0;
- (BOOL)needsPullOfflineLiveConsultConversation;
- (BOOL)pullingOfflineLiveConsultConversation;
- (void)pullOfflineLiveConsultConversationWithContext:(id)arg0;
- (void)setPullingOfflineLiveConsultConversation:(BOOL)arg0;
- (void)p_trackValidOfflineRequest:(id)arg0;
- (void)setNeedsPullOfflineMessage:(BOOL)arg0;
- (id)offlineMessagePullTimer;
- (void)offlineMessagePullFired:(id)arg0 pullDirection:(unsigned long long)arg1 context:(id)arg2;
- (void)offlineMessagePullFired:(id)arg0 context:(id)arg1;
- (double)macroOfflinePullInterval;
- (double)lastOfflinePullTime;
- (void)offlineMessagePullFired:(id)arg0;
- (void)setOfflineMessagePullTimer:(id)arg0;
- (double)rejectWSReconnectedPullInterval;
- (id)p_logDescriptionOfRange:(id)arg0;
- (void)updateCurrentVersionFromPullVersionRange;
- (void)setLastOfflinePullTime:(double)arg0;
- (void)setLastOfflinePullTimeOfEnterForeground:(double)arg0;
- (BOOL)needsPullOfflineMessage;
- (void)pullOfflineMessageDirection:(unsigned long long)arg0 context:(id)arg1;
- (void)pullOfflineMessageWithContext:(id)arg0;
- (double)lastGeneralOfflinePullTime;
- (BOOL)delayGeneralOfflinePullExists;
- (void)setDelayGeneralOfflinePullExists:(BOOL)arg0;
- (void)setLastGeneralOfflinePullTime:(double)arg0;
- (void)pullOfflineMessageSuccess:(id)arg0 startingTime:(double)arg1 strangerVersion:(long long)arg2 jobId:(unsigned int)arg3 pullingDirection:(unsigned long long)arg4 context:(id)arg5;
- (void)pullOfflineMessageFailure:(id)arg0 strangerVersion:(long long)arg1 jobId:(unsigned int)arg2 context:(id)arg3;
- (id)pullRangeFromDirection:(unsigned long long)arg0;
- (BOOL)enableMeasureOfflinePullElapsedTime;
- (long long)offlinePullElapsedTimeExceptionDuration;
- (void)updatePullerCursor:(id)arg0 inboxType:(int)arg1 context:(id)arg2;
- (void)setEnableMeasureOfflinePullElapsedTime:(BOOL)arg0;
- (void)setOfflinePullElapsedTimeExceptionDuration:(long long)arg0;
- (void)setEnableOfflinePullOptimize:(BOOL)arg0;
- (void)setAppEnterForegroundOfflinePullInterval:(double)arg0;
- (void)setMacroOfflinePullInterval:(double)arg0;
- (void)setRejectWSReconnectedPullInterval:(double)arg0;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)lastContext;
- (void)kickoff;
- (void)setLastContext:(id)arg0;
- (id)sharedOperationQueue;

@end
