//
//     Generated by private class-dump
//

@class NSString, LSGLContext, NSObject, LSGLProgram;
@protocol OS_dispatch_semaphore;

@interface LSGLPictureInput : LSGLOutput {
    NSObject<OS_dispatch_semaphore> *_update_semaphore;
    unsigned int _inPixelFmt;
    BOOL _isVideoRange;
    BOOL _purgeFBOnGLError;
    unsigned int _yTexture;
    unsigned int _uTexture;
    LSGLProgram *_yuvConversionProgram;
    int _positionAttribute;
    int _coordinateAttribute;
    int _yTextureUniform;
    int _uTextureUniform;
    int _matrixUniform;
    const float *_preferredMatrix;
    unsigned int _vao;
    unsigned int _positionVBO;
    unsigned int _texCoordVBO;
    unsigned int _ebo;
    float _cropTextureCoord[8];
    BOOL _enableMipmap;
    LSGLProgram *_mipmapConversionProgram;
    int _positionAttributeMipmap;
    int _coordinateAttributeMipmap;
    int _mipmapTextureUniform;
    unsigned int _vaoMipmap;
    unsigned int _positionVBOMipmap;
    unsigned int _texCoordVBOMipmap;
    unsigned int _eboMipmap;
    struct CGSize { double width; double height; } _lastInputSize;
    struct CGSize { double width; double height; } _lastOutputSize;
    BOOL _updateVertex;
    float _imageVertices[8];
    BOOL _alwaysDiscardsLateVideoFrames;
    BOOL _needClear;
    BOOL _isAux;
    unsigned long long _outputRotation;
    unsigned long long _fillMode;
    NSString *_key;
    struct CGSize { double width; double height; } _outputSize;
    struct CGSize { double width; double height; } _captureOutputSize;
    struct CGSize { double width; double height; } _imageBufferSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropRegion;
}

@property (nonatomic) struct CGSize { double width; double height; } imageBufferSize;
@property (nonatomic) BOOL needClear;
@property (nonatomic) BOOL isAux;
@property (copy, nonatomic) NSString *key;
@property (readonly, nonatomic) unsigned int fmt;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cropRegion;
@property (nonatomic) struct CGSize { double width; double height; } outputSize;
@property (nonatomic) struct CGSize { double width; double height; } captureOutputSize;
@property (nonatomic) unsigned long long outputRotation;
@property (retain, nonatomic) LSGLContext *context;
@property (nonatomic) BOOL alwaysDiscardsLateVideoFrames;
@property (nonatomic) unsigned long long fillMode;

- (void)removeOutputFramebuffer;
- (id)initWithFormat:(unsigned int)arg0 purgeFBOnGLError:(BOOL)arg1;
- (void)initialPassThrough;
- (void)initialYUVConvertor;
- (void)updateCropTextureCoordinate;
- (id)initWithFormat:(unsigned int)arg0 context:(id)arg1 purgeFBOnGLError:(BOOL)arg2;
- (void)releaseVAOIfNeeded;
- (void)processPixelBuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)processPixelBuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 needRender:(BOOL)arg2;
- (void)setIsAux:(BOOL)arg0;
- (void)processPixelBuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 needRender:(BOOL)arg2 releaseBuffer:(BOOL)arg3;
- (void)loadTextureWithPixelBuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 format:(unsigned int)arg2;
- (void)updateTargetsForFrame:(int)arg0 height:(int)arg1 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2 needRender:(BOOL)arg3;
- (void)setImageBufferSize:(struct CGSize { double x0; double x1; })arg0;
- (void)loadTextureWithBGRABuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)loadTextureWithYUVBuffer:(struct __CVBuffer { } *)arg0 time:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (struct __CVBuffer { } *)I420ToNV12:(struct __CVBuffer { } *)arg0 format:(unsigned int)arg1;
- (struct CGSize { double x0; double x1; })imageBufferSize;
- (void)convertYUVToBGRAOutput;
- (BOOL)convertYUVToBGRAOutputWithMipmap:(unsigned long long)arg0 dstHeight:(unsigned long long)arg1;
- (BOOL)isAux;
- (void)bindVAO:(unsigned int)arg0;
- (BOOL)needClear;
- (BOOL)checkEnableMipmap:(unsigned long long)arg0 dstHeight:(unsigned long long)arg1;
- (void)setupVAOIfNeeded;
- (void)setupVAOForMipmap;
- (void)setNeedClear:(BOOL)arg0;
- (void)deleteVAO:(unsigned int *)arg0;
- (void)generateVAO:(unsigned int *)arg0;
- (void)checkNeedUpdateVao;
- (void)setCropRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)processAuxPixelBuffer:(struct __CVBuffer { } *)arg0 auxTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 key:(id)arg2;
- (void)setOutputRotation:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })captureOutputSize;
- (void)setCaptureOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (unsigned long long)outputRotation;
- (id)key;
- (void)setFillMode:(unsigned long long)arg0;
- (id)init;
- (unsigned long long)fillMode;
- (void).cxx_destruct;
- (void)processSampleBuffer:(struct opaqueCMSampleBuffer { } *)arg0;
- (struct CGSize { double x0; double x1; })outputSize;
- (void)setKey:(id)arg0;
- (unsigned int)fmt;
- (void)dealloc;
- (void)setAlwaysDiscardsLateVideoFrames:(BOOL)arg0;
- (void)setOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)alwaysDiscardsLateVideoFrames;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRegion;

@end
