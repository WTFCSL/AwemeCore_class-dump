//
//     Generated by private class-dump
//

@class NSString, NSMutableString, NSData, NSError;
@protocol BDRHTMLParserDelegate;

@interface BDRHTMLParser : NSObject {
    struct _xmlSAXHandler { void /* function */ *internalSubset; void /* function */ *isStandalone; void /* function */ *hasInternalSubset; void /* function */ *hasExternalSubset; void /* function */ *resolveEntity; void /* function */ *getEntity; void /* function */ *entityDecl; void /* function */ *notationDecl; void /* function */ *attributeDecl; void /* function */ *elementDecl; void /* function */ *unparsedEntityDecl; void /* function */ *setDocumentLocator; void /* function */ *startDocument; void /* function */ *endDocument; void /* function */ *startElement; void /* function */ *endElement; void /* function */ *reference; void /* function */ *characters; void /* function */ *ignorableWhitespace; void /* function */ *processingInstruction; void /* function */ *comment; void /* function */ *warning; void /* function */ *error; void /* function */ *fatalError; void /* function */ *getParameterEntity; void /* function */ *cdataBlock; void /* function */ *externalSubset; unsigned int initialized; void *_private; void /* function */ *startElementNs; void /* function */ *endElementNs; void /* function */ *serror; } _handler;
    NSData *_data;
    unsigned long long _encoding;
    struct _xmlParserCtxt { struct _xmlSAXHandler *x0; void *x1; struct _xmlDoc *x2; int x3; int x4; char *x5; char *x6; int x7; int x8; struct _xmlParserInput *x9; int x10; int x11; struct _xmlParserInput **x12; struct _xmlNode *x13; int x14; int x15; struct _xmlNode **x16; int x17; struct _xmlParserNodeInfoSeq { unsigned long long x0; unsigned long long x1; struct _xmlParserNodeInfo *x2; } x18; int x19; int x20; int x21; int x22; int x23; int x24; struct _xmlValidCtxt { void *x0; void /* function */ *x1; void /* function */ *x2; struct _xmlNode *x3; int x4; int x5; struct _xmlNode **x6; unsigned int x7; struct _xmlDoc *x8; int x9; struct _xmlValidState *x10; int x11; int x12; struct _xmlValidState *x13; struct _xmlAutomata *x14; struct _xmlAutomataState *x15; } x25; int x26; int x27; char *x28; char *x29; int x30; int x31; char **x32; long long x33; long long x34; int x35; int x36; int x37; char *x38; char *x39; char *x40; int *x41; int x42; int x43; int *x44; int x45; struct _xmlParserInput *x46; int x47; int x48; int x49; int x50; void *x51; int x52; int x53; void *x54; int x55; int x56; struct _xmlDict *x57; char **x58; int x59; int x60; char *x61; char *x62; char *x63; int x64; int x65; int x66; char **x67; int *x68; void **x69; struct _xmlHashTable *x70; struct _xmlHashTable *x71; int x72; int x73; int x74; int x75; struct _xmlNode *x76; int x77; struct _xmlAttr *x78; struct _xmlError { int x0; int x1; char *x2; int x3; char *x4; int x5; char *x6; char *x7; char *x8; int x9; int x10; void *x11; void *x12; } x79; int x80; unsigned long long x81; unsigned long long x82; struct _xmlParserNodeInfo *x83; int x84; int x85; struct _xmlParserNodeInfo *x86; int x87; unsigned long long x88; } *_parserContext;
    NSMutableString *_accumulateBuffer;
    BOOL _isAborting;
    NSError *_parserError;
    id<BDRHTMLParserDelegate> _delegate;
}

@property (retain, nonatomic) NSError *parserError;
@property (nonatomic) unsigned long long encoding;
@property (weak, nonatomic) id<BDRHTMLParserDelegate> delegate;
@property (readonly, nonatomic) BOOL isAborting;
@property (readonly, nonatomic) long long columnNumber;
@property (readonly, nonatomic) long long lineNumber;
@property (readonly, nonatomic) NSString *publicID;
@property (readonly, nonatomic) NSString *systemID;

- (void)_resetAccumulateBufferAndReportCharacters;
- (void)_accumulateCharacters:(const char *)arg0 length:(int)arg1;
- (BOOL)parse;
- (id)publicID;
- (unsigned long long)encoding;
- (void).cxx_destruct;
- (id)systemID;
- (long long)lineNumber;
- (id)parserError;
- (id)delegate;
- (id)initWithData:(id)arg0 encoding:(unsigned long long)arg1;
- (long long)columnNumber;
- (void)abortParsing;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setEncoding:(unsigned long long)arg0;
- (void)setParserError:(id)arg0;
- (BOOL)isAborting;

@end
