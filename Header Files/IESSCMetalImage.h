//
//     Generated by private class-dump
//

@protocol MTLTexture;

@interface IESSCMetalImage : NSObject {
    id<MTLTexture> _texture;
    struct __CVBuffer { } *_pixelBuffer;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _extent;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _transform;
}

@property (nonatomic) struct __CVBuffer { } *pixelBuffer;
@property (retain, nonatomic) id<MTLTexture> texture;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transform;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } extent;

+ (id)imageWithColor:(id)arg0 size:(struct CGSize { double x0; double x1; })arg1;
+ (id)imageWithData:(id)arg0 orientation:(unsigned int)arg1;
+ (id)imageWithPixelBuffer:(struct __CVBuffer { } *)arg0;
+ (id)imageWithImagePath:(id)arg0 orientation:(unsigned int)arg1;
+ (id)imageWithCGImage:(struct CGImage { } *)arg0 orientation:(unsigned int)arg1;
+ (id)imageWithImagePath:(id)arg0;
+ (id)imageWithData:(id)arg0;
+ (id)imageWithCGImage:(struct CGImage { } *)arg0;
+ (id)imageWithCIImage:(id)arg0;
+ (id)imageWithSize:(struct CGSize { double x0; double x1; })arg0;

- (id)initWithPixelBuffer:(struct __CVBuffer { } *)arg0 texture:(id)arg1;
- (void)imageByCompositingOverImage:(id)arg0 targetImage:(id)arg1;
- (void)setTexture:(id)arg0;
- (id)texture;
- (void).cxx_destruct;
- (struct __CVBuffer { } *)pixelBuffer;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (id)imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)setExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setPixelBuffer:(struct __CVBuffer { } *)arg0;

@end
