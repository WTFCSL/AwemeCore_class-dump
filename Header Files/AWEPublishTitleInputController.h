//
//     Generated by private class-dump
//

@class UIImageView, ACCTextErrorPopover, UILabel, AWEVideoPublishInputSuggestionView, NSObject, UITableView, ACCAnimatedButton, NSMutableArray, UIButton, UIView, CALayer, NSString, UIViewController, AWEVideoPublishViewModel, DUXLoadingCircleView, NSArray, AWEPublishSlidesTableViewCell, UITableViewCell, NSIndexPath;
@protocol AWETitleInputZoomStateProtocol, ACCTextViewProtocol, ACCTextInputControllerProtocol, OS_dispatch_source, AWEPublishTitleInputDelegate;

@interface AWEPublishTitleInputController : NSObject <UITextViewDelegate, ACCTextInputControllerDelegate, UITextPasteDelegate, UIGestureRecognizerDelegate> {
    BOOL _hitCaptionLimit;
    BOOL _additionViewShow;
    BOOL _isShowKeyboard;
    BOOL _isEditState;
    BOOL _suggestionSelected;
    BOOL _animationLock;
    BOOL _hashTagButtonTap;
    BOOL _lastOperationDelete;
    BOOL _lastInputIsNewLine;
    BOOL _shouldHandleSwitchButton;
    BOOL _shouldHandleHashTagButton;
    BOOL _shouldHandleAtButton;
    BOOL _isHashtagLoading;
    BOOL _KeyboardWillHide;
    BOOL _expendShowed;
    BOOL _hasSearchRemindTextShown;
    BOOL _isTitleInputEditing;
    BOOL _challengeSwitchStates;
    BOOL _keyboardWillHideForCaption;
    AWEVideoPublishViewModel *_model;
    UITableViewCell *_inputTableViewCell;
    UIImageView *_coverImageView;
    UIButton *_chooseCoverButton;
    UIView *_inputContentView;
    UIView *_leftContentView;
    id<ACCTextViewProtocol> _titleTextView;
    ACCAnimatedButton *_hashtagButton;
    UIView *_keyboardTopView;
    UIView *_keyboardAppearMaskView;
    ACCAnimatedButton *_switchInputButton;
    NSString *_challengeTitle;
    long long _continueWriteHashChoose;
    UIViewController *_viewController;
    UIView *_view;
    UITableView *_tableView;
    AWEPublishSlidesTableViewCell *_slidesTableViewCell;
    id /* block */ _keyboardMaskViewOffsetYBlock;
    id<AWEPublishTitleInputDelegate> _delegate;
    UIButton *_previewButton;
    DUXLoadingCircleView *_loadingView;
    UIImageView *_recommendHintImageView;
    id<ACCTextInputControllerProtocol> _textViewController;
    ACCAnimatedButton *_atButton;
    UILabel *_textCountLabel;
    AWEVideoPublishInputSuggestionView *_suggestionView;
    UIView *_expediteMentionContainerView;
    UIView *_keyboardAppearMidMaskView;
    UIButton *_doneButton;
    id<AWETitleInputZoomStateProtocol> _state;
    NSMutableArray *_additionViewActionBlocks;
    NSString *_searchRemindText;
    NSIndexPath *_tagCellIndexPath;
    NSArray *_longTextTemplateDataArray;
    UIView *_separateLineView;
    NSObject<OS_dispatch_source> *_titleTypingTimer;
    NSObject<OS_dispatch_source> *_captionTypingTimer;
    NSArray *_titleMatches;
    NSArray *_captionMatches;
    ACCTextErrorPopover *_currentTextErrorPopover;
    CALayer *_titleTextErrorLayer;
    CALayer *_captionTextErrorLayer;
}

@property (retain, nonatomic) id<ACCTextViewProtocol> captionTextView;
@property (retain, nonatomic) UIView *captionView;
@property (retain, nonatomic) AWEVideoPublishViewModel *model;
@property (retain, nonatomic) UITableViewCell *inputTableViewCell;
@property (retain, nonatomic) UIView *inputContentView;
@property (retain, nonatomic) UIImageView *coverImageView;
@property (retain, nonatomic) UIButton *previewButton;
@property (retain, nonatomic) UIButton *chooseCoverButton;
@property (retain, nonatomic) DUXLoadingCircleView *loadingView;
@property (retain, nonatomic) UIImageView *recommendHintImageView;
@property (retain, nonatomic) UIView *leftContentView;
@property (retain, nonatomic) id<ACCTextInputControllerProtocol> textViewController;
@property (retain, nonatomic) id<ACCTextViewProtocol> titleTextView;
@property (retain, nonatomic) ACCAnimatedButton *hashtagButton;
@property (retain, nonatomic) ACCAnimatedButton *atButton;
@property (retain, nonatomic) ACCAnimatedButton *switchInputButton;
@property (retain, nonatomic) UILabel *textCountLabel;
@property (retain, nonatomic) AWEVideoPublishInputSuggestionView *suggestionView;
@property (retain, nonatomic) UIView *expediteMentionContainerView;
@property (retain, nonatomic) UIView *keyboardAppearMaskView;
@property (retain, nonatomic) UIView *keyboardAppearMidMaskView;
@property (retain, nonatomic) UIView *keyboardTopView;
@property (retain, nonatomic) UIButton *doneButton;
@property (nonatomic) BOOL hashTagButtonTap;
@property (nonatomic) BOOL lastOperationDelete;
@property (nonatomic) BOOL hitCaptionLimit;
@property (nonatomic) BOOL isShowKeyboard;
@property (nonatomic) BOOL isEditState;
@property (nonatomic) BOOL lastInputIsNewLine;
@property (nonatomic) BOOL shouldHandleSwitchButton;
@property (nonatomic) BOOL shouldHandleHashTagButton;
@property (nonatomic) BOOL shouldHandleAtButton;
@property (nonatomic) BOOL isHashtagLoading;
@property (nonatomic) BOOL KeyboardWillHide;
@property (retain, nonatomic) id<AWETitleInputZoomStateProtocol> state;
@property (nonatomic) BOOL additionViewShow;
@property (retain, nonatomic) NSMutableArray *additionViewActionBlocks;
@property (nonatomic) BOOL expendShowed;
@property (copy, nonatomic) NSString *searchRemindText;
@property (nonatomic) BOOL hasSearchRemindTextShown;
@property (nonatomic) BOOL isTitleInputEditing;
@property (retain, nonatomic) NSIndexPath *tagCellIndexPath;
@property (retain, nonatomic) NSArray *longTextTemplateDataArray;
@property (retain, nonatomic) UIView *separateLineView;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *titleTypingTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *captionTypingTimer;
@property (copy, nonatomic) NSArray *titleMatches;
@property (copy, nonatomic) NSArray *captionMatches;
@property (retain, nonatomic) ACCTextErrorPopover *currentTextErrorPopover;
@property (retain, nonatomic) CALayer *titleTextErrorLayer;
@property (retain, nonatomic) CALayer *captionTextErrorLayer;
@property (nonatomic) BOOL challengeSwitchStates;
@property (nonatomic) BOOL keyboardWillHideForCaption;
@property (readonly, nonatomic) double leftContentRightMargin;
@property (retain, nonatomic) NSString *challengeTitle;
@property (nonatomic) long long continueWriteHashChoose;
@property (weak, nonatomic) UIViewController *viewController;
@property (weak, nonatomic) UIView *view;
@property (weak, nonatomic) UITableView *tableView;
@property (weak, nonatomic) AWEPublishSlidesTableViewCell *slidesTableViewCell;
@property (copy, nonatomic) id /* block */ keyboardMaskViewOffsetYBlock;
@property (weak, nonatomic) id<AWEPublishTitleInputDelegate> delegate;
@property (nonatomic) BOOL suggestionSelected;
@property (nonatomic) BOOL animationLock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)textInputDismissCompletion;
- (void)textInputValueChanged:(id)arg0;
- (void)textInputDidDeleteDuetChain:(id)arg0;
- (void)textInputDidExceedMaxLength:(id)arg0;
- (void)textInputDidDeleteCommentChain:(id)arg0;
- (void)textInputDidExceedMaxUserCount:(id)arg0;
- (void)textInputDidNeedClosingSuggestion:(id)arg0;
- (void)textInputDidStartLoadingSuggestions:(id)arg0;
- (void)textInput:(id)arg0 didReplaceTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 withText:(id)arg2;
- (void)textInput:(id)arg0 didRequestSuggestion:(id)arg1 hitBlockList:(BOOL)arg2;
- (id)expediteMentionContainerView;
- (void)setExpediteMentionContainerView:(id)arg0;
- (id)resolveHashTags;
- (BOOL)isImageAlbumSlides;
- (void)setCoverImageView:(id)arg0;
- (id)coverImageView;
- (BOOL)animationLock;
- (void)setAnimationLock:(BOOL)arg0;
- (void)setLeftContentView:(id)arg0;
- (struct CGSize { double x0; double x1; })coverImageViewSize;
- (id)separateLineView;
- (void)setSeparateLineView:(id)arg0;
- (BOOL)isImageAlbum;
- (id)textCountLabel;
- (void)setTextCountLabel:(id)arg0;
- (id)challengeTitle;
- (void)setChallengeTitle:(id)arg0;
- (void)updateChallengeTitle:(id)arg0;
- (id)p_commonTrackParams;
- (BOOL)isShowKeyboard;
- (void)setIsShowKeyboard:(BOOL)arg0;
- (BOOL)hitCaptionLimit;
- (void)removeRecommendHint;
- (void)updateCoverButtonTitle;
- (void)updateCoverImageViewSize;
- (void)stopLoadingRecommendCover;
- (void)controllerEndEditing;
- (void)setSuggestionSelected:(BOOL)arg0;
- (void)addHashtagsToExtraInfo;
- (void)hashtagStartLoading;
- (void)hashtagEndLoading;
- (void)hashtagButtonClicked;
- (void)atButtonClicked;
- (void)switchInputButtonClicked;
- (void)updateTitleDisplay;
- (id)switchInputButton;
- (void)challengeSwitchStatesChange:(BOOL)arg0;
- (void)startLoadingRecommendCover;
- (void)updateSwitchButtonState;
- (void)addKeyboardNotification;
- (void)resetChallengeTitle;
- (void)layoutUpdate;
- (void)removeKeyboardNotification;
- (long long)continueWriteHashChoose;
- (id)slidesTableViewCell;
- (void)setSlidesTableViewCell:(id)arg0;
- (id)inputTableViewCell;
- (void)setKeyboardMaskViewOffsetYBlock:(id /* block */)arg0;
- (BOOL)isEditState;
- (void)setIsEditState:(BOOL)arg0;
- (void)setSwitchInputButton:(id)arg0;
- (void)updateKeyboardAppearMaskViewWithTagRecommendTableViewCellHeight:(double)arg0;
- (BOOL)shouldNotChangeChainText;
- (BOOL)showToastWhenHashTagCountGreatThanOrEqualToStrongLimitIfNeeded;
- (void)p_addHashTagAndHotSpotWithModel:(id)arg0;
- (void)setTagRecommendIndexPath:(id)arg0;
- (void)captionTextInputDidExceedMaxLengthToast;
- (id)pasteFilterAttributedString:(id)arg0;
- (double)p_calculateWidthForButton:(id)arg0;
- (id)atButton;
- (id)hashtagButton;
- (void)setHashtagButton:(id)arg0;
- (void)setAtButton:(id)arg0;
- (void)setPreviewButton:(id)arg0;
- (BOOL)useNewVideoTitleCaption;
- (id)recommendHintImageView;
- (void)setRecommendHintImageView:(id)arg0;
- (id)chooseCoverButton;
- (void)setChooseCoverButton:(id)arg0;
- (BOOL)isImageAlbumPostPageLayout;
- (BOOL)needSwitchInputAlwaysShow;
- (void)dynamicUpdateCaptionViewHeightForVideo;
- (id)captionTextView;
- (id)captionCountLabel;
- (id)titleCountLabel;
- (id)placeholderString:(id)arg0 isCaption:(BOOL)arg1;
- (BOOL)needPublishVideoTitleExpose;
- (long long)newVideoMaxCaptionLength;
- (long long)newVideoMaxTitleLength;
- (long long)captionDynamicMaxLengthWithIsMaxCaption:(BOOL *)arg0;
- (void)combineCaptionAndTitle;
- (long long)captionDynamicMaxLength;
- (void)updateCaptionCount:(long long)arg0;
- (id)createCommonTextView;
- (void)setCaptionTextView:(id)arg0;
- (id)inputContentView;
- (void)setCaptionCountLabel:(id)arg0;
- (BOOL)imageAlbumPublishAsNoteStyleEnable;
- (void)updateTitleCountLabelIfNeedWith:(long long)arg0;
- (void)addSwitchButtonStateChangedObserver;
- (void)updateTitleCountLabelLayout;
- (void)setTitleCountLabel:(id)arg0;
- (BOOL)updateSwitchInputButtonHiddenStatus;
- (void)dynamicUpdateCaptionViewHeight;
- (void)adjustCaptionViewHeightForText:(id)arg0;
- (void)updateNewVideoStateForZoomOut:(BOOL)arg0;
- (void)captionViewAnimationHidden:(BOOL)arg0;
- (long long)titleDynamicMaxLength;
- (void)handlePublishReeditOrDraftCaptionIfNeeded;
- (id)textViewPlaceholderContent;
- (void)addCaptionCountLabel;
- (void)addTitleCountLabel;
- (void)updateTitleCount:(long long)arg0;
- (void)updateSwitchInputButtonForZoomOut:(BOOL)arg0;
- (id)zoomInHideState;
- (void)p_additionViewHiddenChanged;
- (void)handleDataForSlidesChangedIfNeeded;
- (void)setTitlePlaceHolder:(id)arg0;
- (BOOL)showToastWhenHashTagCountGreatThanStrongLimitIfNeeded;
- (void)checkCurrentTextErrorWithTextView:(id)arg0;
- (id)keyboardAppearMidMaskView;
- (id)keyboardAppearMaskView;
- (double)inputCellHeight;
- (id)keyboardTopView;
- (BOOL)isHashtagLoading;
- (void)setIsHashtagLoading:(BOOL)arg0;
- (id)chooseCoverButtonTitle;
- (double)leftContentRightMargin;
- (void)updateLongTitleField;
- (BOOL)expendShowed;
- (void)setExpendShowed:(BOOL)arg0;
- (void)p_reFreshLayoutSwitchInputButtonWithHidden:(BOOL)arg0;
- (void)p_doneButtonClicked;
- (BOOL)checkTitleLength;
- (void)p_handleAddHashtag;
- (void)p_setupSuggestViewAndLayout;
- (void)p_trackClickTagButton;
- (void)setHashTagButtonTap:(BOOL)arg0;
- (void)updateHashTagRecommendParam;
- (void)p_removeSearchRemindTextIfNeeded:(id)arg0;
- (void)p_handleAddAtUser;
- (void)p_trackClickAtButton;
- (void)p_addSearchRemindTextIfNeeded:(id)arg0;
- (void)p_handleSwitchButtonClickWithBlock:(id /* block */)arg0;
- (void)setShouldHandleSwitchButton:(BOOL)arg0;
- (void)updateKeyBoardAppearMidMaskViewHidden:(BOOL)arg0;
- (void)updateSwitchButtonWidthIfNeeded;
- (void)p_updateAccessibilityElementsWhenSwitchInputButtonClicked;
- (void)p_trackerClickOpenLongTitle;
- (void)updateKeyBoardAppearMaskViewHidden:(BOOL)arg0;
- (void)scrollTextViewToCorrectPosition;
- (void)setChallengeSwitchStates:(BOOL)arg0;
- (void)replaceHashTag:(id)arg0 withEnableChallenge:(BOOL)arg1;
- (BOOL)isTitleInputEditing;
- (id)searchRemindText;
- (BOOL)hasSearchRemindTextShown;
- (void)setHasSearchRemindTextShown:(BOOL)arg0;
- (id)titleTextErrorLayer;
- (void)setTitleTextErrorLayer:(id)arg0;
- (id)titleMatches;
- (void)setTitleMatches:(id)arg0;
- (id)hashtagExtraString;
- (void)p_onKeyboardWillShowNotification:(id)arg0;
- (void)p_onKeyboardWillHideNotification:(id)arg0;
- (void)handleJSBridgeNotification:(id)arg0;
- (void)handleCancelHotSpotRelation:(id)arg0;
- (void)p_setAccessibilityElementsHiddenForCells;
- (id /* block */)keyboardMaskViewOffsetYBlock;
- (void)updateKeyboardAppearMidMaskViewFrameWithTagRecommendTableViewCellHeight:(double)arg0;
- (void)p_trackerInputEndEditing;
- (BOOL)p_greatThanOrEqualToHashtagCountLimit;
- (void)p_showHashTagCountLimitToast;
- (BOOL)p_greatThanhashtagCountLimit;
- (id)tagCellIndexPath;
- (BOOL)enableNoteStyleThumbnailAnimation;
- (void)p_trackerTagToastEvent;
- (BOOL)additionViewShow;
- (void)setAdditionViewShow:(BOOL)arg0;
- (id)additionViewActionBlocks;
- (BOOL)KeyboardWillHide;
- (void)setKeyboardWillHide:(BOOL)arg0;
- (void)p_checkAdditionViewAction;
- (void)updateKeyboardMaskLayout;
- (BOOL)shouldHandleSwitchButton;
- (BOOL)shouldHandleHashTagButton;
- (BOOL)shouldHandleAtButton;
- (void)setShouldHandleHashTagButton:(BOOL)arg0;
- (void)setShouldHandleAtButton:(BOOL)arg0;
- (void)setKeyboardWillHideForCaption:(BOOL)arg0;
- (void)updateKeyboardTopViewPosition;
- (void)setTagCellIndexPath:(id)arg0;
- (BOOL)enableNoteStyleInputHeightExtend;
- (double)inputCellHeightForHasCaption:(BOOL)arg0;
- (BOOL)coverIsHorizontal;
- (void)p_setupCoverRelatedUI;
- (void)p_layoutButtons;
- (BOOL)titleStateOptionsZoomOut;
- (void)p_coverImageViewClicked;
- (void)p_chooseCoverButtonClicked;
- (void)tapTitleTextView:(id)arg0;
- (void)tapCaptionTextView:(id)arg0;
- (void)endEditingThroughGesture;
- (void)p_setupSuggestView;
- (id)lastSubString:(id)arg0;
- (void)setContinueWriteHashChoose:(long long)arg0;
- (void)configHotSpotTagIfNeededWithColor:(id)arg0 font:(id)arg1;
- (id)p_getSearchRemindText;
- (void)setIsTitleInputEditing:(BOOL)arg0;
- (void)p_trackerInputBegin:(id)arg0;
- (void)p_trackerPreAddText;
- (id)currentTextErrorPopover;
- (void)setCurrentTextErrorPopover:(id)arg0;
- (BOOL)keyboardWillHideForCaption;
- (void)setLastInputIsNewLine:(BOOL)arg0;
- (void)setLastOperationDelete:(BOOL)arg0;
- (BOOL)p_canInputHashTagWithInputText:(id)arg0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 textView:(id)arg2;
- (void)p_setCutFlagForTextViewControllerIfNeeded;
- (void)p_adjustSelectionPositionForTextView:(id)arg0;
- (id)captionTextErrorLayer;
- (void)setCaptionTextErrorLayer:(id)arg0;
- (id)captionMatches;
- (void)setCaptionMatches:(id)arg0;
- (BOOL)showTextErrorPopoverIfNeedWithTextView:(id)arg0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1;
- (id)titleTypingTimer;
- (void)setTitleTypingTimer:(id)arg0;
- (void)checkTextErrorWithTextView:(id)arg0;
- (id)captionTypingTimer;
- (void)setCaptionTypingTimer:(id)arg0;
- (void)setHitCaptionLimit:(BOOL)arg0;
- (BOOL)lastInputIsNewLine;
- (BOOL)suggestionSelected;
- (void)delegateHashtagChangedIfNeed:(unsigned long long)arg0;
- (BOOL)lastOperationDelete;
- (BOOL)hashTagButtonTap;
- (void)p_adjustSearchRemindTextAttributeForTextView:(id)arg0;
- (BOOL)challengeSwitchStates;
- (BOOL)livebackStyle;
- (void)p_layoutCoverUI;
- (id)chooseCoverIconImage;
- (void)p_layoutButtonIfEnablePublishTagOptimize;
- (void)p_layoutButtonIfclosePublishTagOptimize;
- (void)p_layoutButtonsWithTagOptimizeDiffRow;
- (double)getSwitchInputButtonWidth;
- (BOOL)enableNoteStyleSwitchInputButton;
- (void)expandInputContentView;
- (BOOL)isImageAlbumNoteShortPath;
- (void)configUIForLivePlayback;
- (BOOL)isImageAlbumOrMixedWithModel:(id)arg0;
- (double)naviBarBottom;
- (BOOL)hasCaptionTextFromReeditOrDraft;
- (id)zoomInShowState;
- (id)zoomOutShowState;
- (id)zoomOutHideState;
- (void)scrollCaptionTextViewToCorrectPosition;
- (double)heightNeedToChangeWithTitleContent;
- (void)setInputTableViewCell:(id)arg0;
- (void)setInputContentView:(id)arg0;
- (void)setKeyboardTopView:(id)arg0;
- (void)setKeyboardAppearMaskView:(id)arg0;
- (void)setKeyboardAppearMidMaskView:(id)arg0;
- (void)setAdditionViewActionBlocks:(id)arg0;
- (void)setSearchRemindText:(id)arg0;
- (id)longTextTemplateDataArray;
- (void)setLongTextTemplateDataArray:(id)arg0;
- (void)updateState:(id)arg0;
- (id)initWithModel:(id)arg0;
- (void)setModel:(id)arg0;
- (void)setViewController:(id)arg0;
- (id)viewController;
- (void)setTableView:(id)arg0;
- (void).cxx_destruct;
- (id)tableView;
- (id)state;
- (id)model;
- (void)setState:(id)arg0;
- (id)doneButton;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)setView:(id)arg0;
- (id)delegate;
- (void)setDoneButton:(id)arg0;
- (void)setDelegate:(id)arg0;
- (id)view;
- (id)leftContentView;
- (id)inputText;
- (id)textPasteConfigurationSupporting:(id)arg0 combineItemAttributedStrings:(id)arg1 forRange:(id)arg2;
- (void)textViewDidBeginEditing:(id)arg0;
- (BOOL)textViewShouldBeginEditing:(id)arg0;
- (void)textViewDidEndEditing:(id)arg0;
- (void)textViewDidChange:(id)arg0;
- (void)textViewDidChangeSelection:(id)arg0;
- (BOOL)textView:(id)arg0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 replacementText:(id)arg2;
- (void)setupUI;
- (id)titleTextView;
- (void)setTitleTextView:(id)arg0;
- (id)suggestionView;
- (void)setSuggestionView:(id)arg0;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (long long)titleMaxLength;
- (void)appendCharacter:(id)arg0;
- (id)previewButton;
- (id)textViewController;
- (void)setTextViewController:(id)arg0;
- (id)captionView;
- (void)setCaptionView:(id)arg0;

@end
