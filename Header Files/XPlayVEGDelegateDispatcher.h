//
//     Generated by private class-dump
//

@class NSString, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface XPlayVEGDelegateDispatcher : NSObject <VeGameManagerDelegate> {
    NSMutableArray *_delegates;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (retain, nonatomic) NSMutableArray *delegates;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)removeAllListener;
- (void)gameManager:(id)arg0 startSucceedResult:(id)arg1 rtcAppId:(id)arg2 roomId:(id)arg3 rtcUserId:(id)arg4 podId:(id)arg5 podUserId:(id)arg6 videoStreamProfileId:(long long)arg7 reservedId:(id)arg8 planId:(id)arg9 extra:(id)arg10;
- (void)gameManager:(id)arg0 onFirstRemoteVideoFrameDecoded:(long long)arg1 height:(long long)arg2;
- (void)gameManager:(id)arg0 onFirstRemoteVideoFrameRendered:(long long)arg1 height:(long long)arg2;
- (void)gameManager:(id)arg0 changedDeviceRotation:(long long)arg1;
- (void)gameManager:(id)arg0 operationDelay:(long long)arg1;
- (void)gameManager:(id)arg0 onPodExit:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 onMessageChannleError:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 connectionChangedToState:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 switchVideoStreamParameter:(int)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4 maxKbps:(int)arg5 minKbps:(int)arg6;
- (void)gameManager:(id)arg0 onRemoteVideoStateChanged:(id)arg1 withVideoState:(long long)arg2 withVideoStateReason:(long long)arg3;
- (void)gameManager:(id)arg0 onRoomMessageSendResult:(long long)arg1 error:(long long)arg2;
- (void)gameManager:(id)arg0 onRoomStateChanged:(id)arg1 withUid:(id)arg2 state:(long long)arg3 extraInfo:(id)arg4;
- (void)gameManager:(id)arg0 onNetworkDetectionResult:(unsigned long long)arg1 quality:(unsigned long long)arg2 rtt:(int)arg3 lostRate:(double)arg4 bitrate:(int)arg5 jitter:(int)arg6;
- (void)gameManager:(id)arg0 onRoomStats:(long long)arg1;
- (void)gameManager:(id)arg0 onNetworkDetectionStopped:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 onStreamAdd:(id)arg1;
- (void)gameManager:(id)arg0 onStreamRemove:(id)arg1 stream:(id)arg2 reason:(unsigned long long)arg3;
- (void)startAudioCaptureRequestFromGameManager:(id)arg0;
- (void)stopAudioCaptureRequestFromGameManager:(id)arg0;
- (void)gameManager:(id)arg0 onAudioRouteChanged:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 onUserUnpublishStream:(id)arg1 type:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)gameManager:(id)arg0 onUserPublishStream:(id)arg1 type:(long long)arg2;
- (void)gameManager:(id)arg0 onRemoteMessageOnline:(id)arg1;
- (void)gameManager:(id)arg0 onRemoteMessageOffline:(id)arg1;
- (void)gameManager:(id)arg0 onReceiveMessage:(id)arg1;
- (void)gameManager:(id)arg0 receivedBinaryMessage:(long long)arg1 subtype:(long long)arg2 pbData:(id)arg3;
- (void)gameManager:(id)arg0 onRemoteStreamStats:(id)arg1;
- (void)gameManager:(id)arg0 onWarning:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 onError:(unsigned long long)arg1;
- (void)gameManager:(id)arg0 onUserJoined:(id)arg1;
- (void)gameManager:(id)arg0 onUserLeave:(id)arg1 reason:(long long)arg2;
- (id)delegates;
- (void)setDelegates:(id)arg0;
- (void)removeListener:(id)arg0;
- (void).cxx_destruct;
- (void)addListener:(id)arg0;
- (id)queue;
- (void)setQueue:(id)arg0;

@end
