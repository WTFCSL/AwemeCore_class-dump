//
//     Generated by private class-dump
//

@class NSString, TTRedirectTask, NSMutableIndexSet, NSURL, NSProgress, NSObject, TTHttpRequestChromium;
@protocol OS_dispatch_queue;

@interface TTHttpTaskChromium : TTHttpTask <TTFetcherProtocol> {
    struct scoped_refptr<TTFetcherDelegate> { struct TTFetcherDelegate *ptr_; } fetcher_delegate;
    struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { _Atomic BOOL __a_value; } __a_; } is_task_resumed;
    BOOL _isFileAppend;
    BOOL _isCancelled;
    BOOL _isCompleted;
    BOOL _forceRun;
    BOOL _isWebviewRequest;
    float _taskPriority;
    int _taskType;
    int _level;
    int _delayTimeMills;
    TTRedirectTask *_redirectTask;
    NSURL *_fileDestinationURL;
    unsigned long long _uploadFileOffset;
    unsigned long long _uploadFileLength;
    void *_engine;
    TTHttpRequestChromium *_request;
    unsigned long long _taskId;
    id /* block */ _callbackBlock;
    id /* block */ _uploadProgressBlock;
    id /* block */ _downloadProgressBlock;
    long long _throttleNetBytesPerSecond;
    NSMutableIndexSet *_acceptableStatusCodes;
    NSObject<OS_dispatch_queue> *_dispatch_queue;
    id /* block */ _streamReadCompleteBlock;
    NSProgress *_uploadProgress;
    NSProgress *_downloadProgress;
    id /* block */ _headerBlock;
    id /* block */ _dataBlock;
    id /* block */ _redirectedBlock;
    NSString *_compressLog;
    NSObject<OS_dispatch_queue> *_downloadProgressCallbackQueue;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *downloadProgressCallbackQueue;
@property (retain, nonatomic) TTRedirectTask *redirectTask;
@property (retain, nonatomic) NSURL *fileDestinationURL;
@property (nonatomic) BOOL isFileAppend;
@property (nonatomic) unsigned long long uploadFileOffset;
@property (nonatomic) unsigned long long uploadFileLength;
@property (nonatomic) void *engine;
@property (retain, nonatomic) TTHttpRequestChromium *request;
@property (nonatomic) unsigned long long taskId;
@property (copy, nonatomic) id /* block */ callbackBlock;
@property (copy, nonatomic) id /* block */ uploadProgressBlock;
@property (copy, nonatomic) id /* block */ downloadProgressBlock;
@property (nonatomic) float taskPriority;
@property (nonatomic) BOOL isCancelled;
@property (nonatomic) BOOL isCompleted;
@property long long throttleNetBytesPerSecond;
@property (nonatomic) int taskType;
@property (nonatomic) BOOL forceRun;
@property (nonatomic) int level;
@property (retain, nonatomic) NSMutableIndexSet *acceptableStatusCodes;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatch_queue;
@property (copy, nonatomic) id /* block */ streamReadCompleteBlock;
@property (retain, nonatomic) NSProgress *uploadProgress;
@property (retain, nonatomic) NSProgress *downloadProgress;
@property (copy, nonatomic) id /* block */ headerBlock;
@property (copy, nonatomic) id /* block */ dataBlock;
@property (copy, nonatomic) id /* block */ redirectedBlock;
@property (nonatomic) BOOL isWebviewRequest;
@property (nonatomic) int delayTimeMills;
@property (copy, nonatomic) NSString *compressLog;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setThrottleNetSpeed:(long long)arg0;
- (void)setAcceptableStatusCodes:(id)arg0;
- (id)acceptableStatusCodes;
- (void)setHeaderCallback:(id /* block */)arg0;
- (void)onCancel:(id)arg0;
- (id)fileDestinationURL;
- (void)setFileDestinationURL:(id)arg0;
- (void)setHeaderBlock:(id /* block */)arg0;
- (void)setRedirectedBlock:(id /* block */)arg0;
- (id)compressLog;
- (void)setCompressLog:(id)arg0;
- (int)delayTimeMills;
- (BOOL)isFileAppend;
- (void)onTimeout:(int)arg0 error:(int)arg1 details:(id)arg2 requestLog:(id)arg3;
- (id)redirectTask;
- (id /* block */)headerBlock;
- (void)setFetcherPriority_:(struct URLFetcher { void /* function */ **x0; } *)arg0;
- (long long)throttleNetBytesPerSecond;
- (id)initWithRequest:(id)arg0 engine:(void *)arg1 dispatchQueue:(id)arg2 taskId:(unsigned long long)arg3 enableHttpCache:(BOOL)arg4 completedCallback:(id /* block */)arg5 uploadProgressCallback:(id /* block */)arg6 downloadProgressCallback:(id /* block */)arg7;
- (void)setDelayTimeMills:(int)arg0;
- (void)setDownloadProgressCallbackQueue:(id)arg0;
- (void)setIsWebviewRequest:(BOOL)arg0;
- (BOOL)isWebviewRequest;
- (int)getDelayTimeWithUrl:(id)arg0 requestTag:(id)arg1;
- (void)setThrottleNetBytesPerSecond:(long long)arg0;
- (id)downloadProgressCallbackQueue;
- (id /* block */)redirectedBlock;
- (void)setRedirectTask:(id)arg0;
- (void)startRedirect;
- (void)setStreamReadCompleteBlock:(id /* block */)arg0;
- (id /* block */)streamReadCompleteBlock;
- (void)onURLFetchComplete:(const struct URLFetcher { void /* function */ **x0; } *)arg0;
- (void)onURLFetchDownloadProgress:(const struct URLFetcher { void /* function */ **x0; } *)arg0 current:(long long)arg1 total:(long long)arg2 current_network_bytes:(long long)arg3;
- (void)onURLFetchUploadProgress:(const struct URLFetcher { void /* function */ **x0; } *)arg0 current:(long long)arg1 total:(long long)arg2;
- (void)onResponseStarted:(const struct URLFetcher { void /* function */ **x0; } *)arg0;
- (void)onURLRedirectReceived:(const struct URLFetcher { void /* function */ **x0; } *)arg0 redirect_info:(const void *)arg1 response_info:(const void *)arg2;
- (void)onReadResponseData:(id)arg0;
- (id)initWithRequest:(id)arg0 engine:(void *)arg1 dispatchQueue:(id)arg2 taskId:(unsigned long long)arg3 completedCallback:(id /* block */)arg4;
- (id)initWithRequest:(id)arg0 engine:(void *)arg1 dispatchQueue:(id)arg2 taskId:(unsigned long long)arg3 completedCallback:(id /* block */)arg4 uploadProgressCallback:(id /* block */)arg5 downloadProgressCallback:(id /* block */)arg6;
- (void)setUploadProgressCallback:(id /* block */)arg0;
- (void)setDownloadProgressCallback:(id /* block */)arg0;
- (void)setIsFileAppend:(BOOL)arg0;
- (void)setUploadFileOffset:(unsigned long long)arg0;
- (void)setUploadFileLength:(unsigned long long)arg0;
- (void)setDispatch_queue:(id)arg0;
- (unsigned long long)uploadFileOffset;
- (unsigned long long)uploadFileLength;
- (void)setLevel:(int)arg0;
- (id)downloadProgress;
- (int)taskType;
- (void)readDataOfMinLength:(unsigned long long)arg0 maxLength:(unsigned long long)arg1 timeout:(double)arg2 completionHandler:(id /* block */)arg3;
- (BOOL)isCompleted;
- (void)resume;
- (int)level;
- (void).cxx_destruct;
- (long long)state;
- (id /* block */)uploadProgressBlock;
- (void)setRequest:(id)arg0;
- (void)suspend;
- (void *)engine;
- (void)setPriority:(float)arg0;
- (id)request;
- (void)setDownloadProgress:(id)arg0;
- (void)cancel;
- (void)setUploadProgressBlock:(id /* block */)arg0;
- (void)dealloc;
- (BOOL)isCancelled;
- (void)setEngine:(void *)arg0;
- (unsigned long long)taskId;
- (id).cxx_construct;
- (void)setIsCancelled:(BOOL)arg0;
- (void)setTaskType:(int)arg0;
- (float)taskPriority;
- (void)setTaskPriority:(float)arg0;
- (void)setTaskId:(unsigned long long)arg0;
- (id)dispatch_queue;
- (id /* block */)callbackBlock;
- (id /* block */)dataBlock;
- (void)setDataBlock:(id /* block */)arg0;
- (void)setIsCompleted:(BOOL)arg0;
- (id /* block */)downloadProgressBlock;
- (void)setDownloadProgressBlock:(id /* block */)arg0;
- (BOOL)forceRun;
- (void)setForceRun:(BOOL)arg0;
- (void)setCallbackBlock:(id /* block */)arg0;
- (id)uploadProgress;
- (void)setUploadProgress:(id)arg0;

@end
