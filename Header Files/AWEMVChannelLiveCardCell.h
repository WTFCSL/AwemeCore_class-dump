//
//     Generated by private class-dump
//

@class AWEMVChannelLiveCardBottomView, NSString, AWEMVChannelAutoPlayHandler, AWEGradientView, AWEMVChannelLiveCardPaidTagView, UIButton, AWEMVChannelLiveCardRoomStatsView, UILabel;
@protocol AWELiveStreamPlayer, AWELiveVSMessageService;

@interface AWEMVChannelLiveCardCell : AWEMVChannelBaseCell <IESLivePlayerControllerDelegate, AWELivePaidLivePlayerDelegate, AWELiveVSMessageSubscriber, AWEMVChannelAutoPlayCardProtocol> {
    BOOL isActive;
    BOOL _isSmoothEnterRoom;
    AWEMVChannelAutoPlayHandler *autoPlayHandler;
    id<AWELiveStreamPlayer> _playerController;
    AWEMVChannelLiveCardBottomView *_bottomInfoView;
    AWEGradientView *_livingContainerView;
    UILabel *_livingLabel;
    AWEMVChannelLiveCardPaidTagView *_paidTagView;
    AWEMVChannelLiveCardRoomStatsView *_statsView;
    UIButton *_volumeSwitch;
    long long _viewRight;
    double _startPlayerTime;
    id<AWELiveVSMessageService> _messageService;
}

@property (retain, nonatomic) id<AWELiveStreamPlayer> playerController;
@property (retain, nonatomic) AWEMVChannelLiveCardBottomView *bottomInfoView;
@property (retain, nonatomic) AWEGradientView *livingContainerView;
@property (retain, nonatomic) UILabel *livingLabel;
@property (retain, nonatomic) AWEMVChannelLiveCardPaidTagView *paidTagView;
@property (retain, nonatomic) AWEMVChannelLiveCardRoomStatsView *statsView;
@property (retain, nonatomic) UIButton *volumeSwitch;
@property (nonatomic) BOOL isSmoothEnterRoom;
@property (nonatomic) long long viewRight;
@property (nonatomic) double startPlayerTime;
@property (retain, nonatomic) id<AWELiveVSMessageService> messageService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL isActive;
@property (weak, nonatomic) AWEMVChannelAutoPlayHandler *autoPlayHandler;

- (void)player:(id)arg0 loadStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (id)ticketType;
- (void)setAutoPlayHandler:(id)arg0;
- (id)autoPlayHandler;
- (void)setupSubViews;
- (long long)viewRight;
- (void)setViewRight:(long long)arg0;
- (void)updateVolumeSwitch;
- (void)trialTimeDidChange:(double)arg0;
- (void)viewStatusDidChange:(long long)arg0 hasShareTickets:(BOOL)arg1;
- (id)customTrialView;
- (id)customTrialContainerView;
- (void)configWithAwemeModel:(id)arg0 context:(id)arg1;
- (id)messageService;
- (void)setMessageService:(id)arg0;
- (double)startPlayerTime;
- (void)setStartPlayerTime:(double)arg0;
- (void)trackLiveSdkDuration;
- (id)bottomInfoView;
- (void)setBottomInfoView:(id)arg0;
- (void)updatePaidTagType:(long long)arg0;
- (void)uninstallMessageChannel;
- (id)livingLabel;
- (void)setLivingLabel:(id)arg0;
- (BOOL)isPaidLive;
- (BOOL)isVerticalStream;
- (id)livingContainerView;
- (id)livingTagText;
- (id)livingViewGradientColors;
- (void)setLivingContainerView:(id)arg0;
- (void)onMessageReceivce:(id)arg0 messageStr:(id)arg1;
- (id)coverImageURLArray;
- (void)installMessageChannel;
- (void)makePlayerControllerLayout;
- (void)trackLiveEvent:(id)arg0 extraParams:(id)arg1;
- (long long)currentPaidTagType;
- (BOOL)playerShouldMute;
- (id)liveCommonParams;
- (id)paidTagView;
- (id)mediumCommonParams;
- (void)handleResponseClicked;
- (void)willDisplayWithIndex:(long long)arg0;
- (void)setPaidTagView:(id)arg0;
- (id)statsView;
- (id)volumeSwitch;
- (void)makeSubViewsLayout;
- (void)setIsSmoothEnterRoom:(BOOL)arg0;
- (id)playerControllerLogExtraDict;
- (void)handleClickVolumeSwitch;
- (BOOL)isSmoothEnterRoom;
- (void)setStatsView:(id)arg0;
- (void)setVolumeSwitch:(id)arg0;
- (void)didBecomeActive;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (void)didResignActive;
- (id)playerController;
- (void)stop;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)identifier;
- (void)setPlayerController:(id)arg0;
- (BOOL)isActive;
- (void)prepareForReuse;
- (void)play;
- (void)pause;
- (id)activeView;
- (void)resetPlayer;

@end
