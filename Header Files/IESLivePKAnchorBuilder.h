//
//     Generated by private class-dump
//

@class NSString, IESLiveCountTimer, IESLivePKModel, HTSLivePKApi, HTSLiveLinkMessage, IESLiveInteractiveLinkService;
@protocol IESLiveCompoundSubscription, IESLiveNoticeActionsAdapter, IESLiveGameModuleAdapter, IESLIvePKAnchorBuilderDelegate;

@interface IESLivePKAnchorBuilder : NSObject <IESLivePKAnchorBuilderAction, IESLiveInteractiveLinkServiceDelegate, IESLiveSEIListener, IESLivePKStateAction, IESLiveDataSyncDelegate> {
    BOOL _isInFinishNetworkProcess;
    IESLiveInteractiveLinkService *_linkService;
    id<IESLIvePKAnchorBuilderDelegate> _delegate;
    HTSLivePKApi *_pkApi;
    long long _inviteTimerInterval;
    long long _inviteMsgAtLeastAvailableTime;
    IESLiveCountTimer *_replySEITimeOutTimer;
    IESLiveCountTimer *_replySEIRepeatTimer;
    id<IESLiveCompoundSubscription> _disposable;
    IESLivePKModel *_pkmodel;
    id<IESLiveNoticeActionsAdapter> _noticeActionCreator;
    id<IESLiveGameModuleAdapter> _gameModule;
    HTSLiveLinkMessage *_cacheReplyMsg;
    HTSLiveLinkMessage *_previousReplyMsg;
    long long _passiveRejectReason;
}

@property (retain, nonatomic) HTSLivePKApi *pkApi;
@property (nonatomic) long long inviteTimerInterval;
@property (nonatomic) long long inviteMsgAtLeastAvailableTime;
@property (retain, nonatomic) IESLiveCountTimer *replySEITimeOutTimer;
@property (retain, nonatomic) IESLiveCountTimer *replySEIRepeatTimer;
@property (retain, nonatomic) id<IESLiveCompoundSubscription> disposable;
@property (retain, nonatomic) IESLivePKModel *pkmodel;
@property (nonatomic) BOOL isInFinishNetworkProcess;
@property (retain, nonatomic) id<IESLiveNoticeActionsAdapter> noticeActionCreator;
@property (retain, nonatomic) id<IESLiveGameModuleAdapter> gameModule;
@property (retain, nonatomic) HTSLiveLinkMessage *cacheReplyMsg;
@property (retain, nonatomic) HTSLiveLinkMessage *previousReplyMsg;
@property (nonatomic) long long passiveRejectReason;
@property (retain, nonatomic) IESLiveInteractiveLinkService *linkService;
@property (weak, nonatomic) id<IESLIvePKAnchorBuilderDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setDisposable:(id)arg0;
- (id)disposable;
- (void)bindAction;
- (void)subscribedSyncDataWithValue:(id)arg0 version:(long long)arg1;
- (void)subscribedSyncDataUpdatedWithValue:(id)arg0 oldVersion:(long long)arg1 newVersion:(long long)arg2;
- (void)setPkmodel:(id)arg0;
- (void)updateNormalBattleSetting:(id)arg0 callback:(id /* block */)arg1;
- (id)pkmodel;
- (BOOL)isInInviteNetworkProcess;
- (id)linkService;
- (void)setLinkService:(id)arg0;
- (void)didChangePKStateFrom:(long long)arg0 to:(long long)arg1;
- (id)noticeActionCreator;
- (void)setNoticeActionCreator:(id)arg0;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (id)gameModule;
- (void)setGameModule:(id)arg0;
- (void)onReceivedLinkedListChangeMessage:(id)arg0;
- (void)onReceivedLinkEnterMessage:(id)arg0;
- (void)onReceivedLinkWatingListChangeMessage:(id)arg0;
- (void)onReceivedLinkCloseMessage:(id)arg0;
- (void)onReceivedLinkInviteMessage:(id)arg0;
- (void)onReceivedLinkReplyMessage:(id)arg0;
- (void)onReceivedLinkCancelInviteMessage:(id)arg0;
- (void)onReceivedLinkBanMessage:(id)arg0;
- (void)onReceiveAudienceCameraOpenReply:(id)arg0;
- (void)onTimeoutWithUid:(id)arg0 onInvite:(BOOL)arg1;
- (void)onReceivedLinkSwitchSceneMessage:(id)arg0;
- (id)businessMonitorParameters;
- (id)businessMonitorParamsFromMessage:(id)arg0;
- (id)businessMonitorParamsFromResponse:(id)arg0;
- (void)joinChannel;
- (void)inviteMatchedRoom:(id)arg0 inviteSource:(unsigned long long)arg1 inviteType:(unsigned long long)arg2 extraParams:(id)arg3 successHandler:(id /* block */)arg4 errorHandler:(id /* block */)arg5;
- (void)cancelInviteWithSource:(unsigned long long)arg0;
- (void)cancelInviteWithUid:(id)arg0 source:(unsigned long long)arg1;
- (void)cancelInviteRoom:(id)arg0 source:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)replyInvitationWithAgree:(BOOL)arg0;
- (void)turnOffInteractionWithSource:(unsigned long long)arg0;
- (void)sendReceiveReplyMsgSEIIfNeed;
- (void)onReceiveRTMLinkReplyMessage:(id)arg0;
- (void)setPassiveRejectReason:(long long)arg0;
- (void)p_trackWithInviteErrorCode:(unsigned long long)arg0;
- (long long)passiveRejectReason;
- (void)setPkApi:(id)arg0;
- (id)pkApi;
- (void)p_trackWithLimitErrorCodeIfNeeded:(unsigned long long)arg0;
- (void)cancelReplySEITimeOutTimer;
- (void)cancelReplySEIRepeatTimer;
- (void)onReceiveSignalMessage:(id)arg0;
- (long long)inviteTimerInterval;
- (BOOL)isRTMMessageHandleEnable;
- (id)previousReplyMsg;
- (void)setPreviousReplyMsg:(id)arg0;
- (void)handleLinkReplyMessage:(id)arg0;
- (void)setIsInFinishNetworkProcess:(BOOL)arg0;
- (void)setCacheReplyMsg:(id)arg0;
- (BOOL)isMatchedScene:(unsigned long long)arg0;
- (long long)inviteMsgAtLeastAvailableTime;
- (void)rejectPKInvitation:(id)arg0 withReplyType:(unsigned long long)arg1;
- (BOOL)unavailableInMultiInteract;
- (BOOL)isLinkMessageHandleEnable;
- (void)switchSceneWithData:(id)arg0;
- (void)switchToMultiLinkerOnReply;
- (void)didJoinCannelWithTimeStamp:(double)arg0;
- (void)setupReplySEITimeOutTimer;
- (void)updateOppositeUserInfo:(id)arg0;
- (void)inviteMultiLinkerMatchedRoom:(id)arg0 inviteType:(unsigned long long)arg1 extraParams:(id)arg2 successHandler:(id /* block */)arg3 errorHandler:(id /* block */)arg4;
- (id)cacheReplyMsg;
- (void)cancelInviteWithUser:(id)arg0 source:(unsigned long long)arg1;
- (BOOL)isInFinishNetworkProcess;
- (id)replySEIRepeatTimer;
- (void)sendRTCMessage:(unsigned long long)arg0;
- (void)setReplySEIRepeatTimer:(id)arg0;
- (void)setReplySEITimeOutTimer:(id)arg0;
- (id)replySEITimeOutTimer;
- (void)setInviteTimerInterval:(long long)arg0;
- (void)setInviteMsgAtLeastAvailableTime:(long long)arg0;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;

@end
