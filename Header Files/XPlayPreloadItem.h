//
//     Generated by private class-dump
//

@class XPlayBlockRateProcesser, NSString, XPlayQualityStatsModel, XPlayGameTopView, NSMutableDictionary, XPlayTimeRecorder, XPlayTrackHelper, XPlayConfiguration, UIViewController;
@protocol XPlayPermissionDelegate, XPlayScreenRecordProtocol, XPlayUserInfoProtocol, XPlayKeyboardProtocol, XPlayItemDelegate, XPlayItemBusinessDelegate;

@interface XPlayPreloadItem : XPlayItem <XPlayItemProtocol>

@property (weak, nonatomic) id<XPlayItemDelegate> delegate;
@property (weak, nonatomic) id<XPlayItemBusinessDelegate> businessDelegate;
@property (weak, nonatomic) id<XPlayPermissionDelegate> permissionDelegate;
@property (readonly, copy, nonatomic) NSString *core;
@property (readonly, copy, nonatomic) NSString *itemId;
@property (retain, nonatomic) XPlayConfiguration *configuration;
@property (retain, nonatomic) id<XPlayUserInfoProtocol> userSession;
@property (retain, nonatomic) UIViewController *controller;
@property (retain, nonatomic) XPlayGameTopView *view;
@property (retain, nonatomic) XPlayTrackHelper *trackHelper;
@property (retain, nonatomic) XPlayTimeRecorder *recorder;
@property (nonatomic) unsigned long long status;
@property (copy, nonatomic) XPlayQualityStatsModel *qualityStats;
@property (retain, nonatomic) XPlayBlockRateProcesser *blockProcesser;
@property (retain, nonatomic) id<XPlayScreenRecordProtocol> screenRecorder;
@property (retain, nonatomic) id<XPlayKeyboardProtocol> keyboard;
@property (retain, nonatomic) NSMutableDictionary *pluggins;
@property (readonly, nonatomic) BOOL useCustomKbps;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setAudioMute:(BOOL)arg0;
- (void)switchResolution:(id)arg0;
- (long long)startNetworkDetection;
- (void)sendCustomMessage:(id)arg0;
- (void)switchResolution:(id)arg0 callback:(id /* block */)arg1;
- (void)switchCustomResolution:(id)arg0 callback:(id /* block */)arg1;
- (void)stopGame;
- (void)stopNetworkDetection;
- (void)sendMessage:(id)arg0 callback:(id /* block */)arg1;
- (void)resume;
- (void)preload;
- (void)stop;
- (void)play;
- (void)pause;

@end
