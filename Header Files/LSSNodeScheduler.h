//
//     Generated by private class-dump
//

@class NSError, NSLock, LSSSchedulingRequestInfo, NSString, NSMutableDictionary, NSOperationQueue, LSSNetworkEngine, NSObject, NSDictionary, LSSSettings, NSMutableArray, NSMapTable;
@protocol OS_dispatch_source, LSSNodeSchedulerRequestDelegate;

@interface LSSNodeScheduler : NSObject {
    long long _lastPlayStopTime;
    int _exponentialBackoffTime;
    int _timeForUpdateDelay;
    BOOL _hasResumeTimer;
    BOOL _hasResumeTimerForSetTimerSerialInfo;
    NSLock *_timerLock;
    unsigned long long _optimizeStatus;
    long long _strategyInitTime;
    long long _startStrategyCost;
    long long _latestLocaldnsTimeCost;
    long long _latestPostTimeCost;
    BOOL _hasGetDomainInfos;
    id /* block */ _optimumNodeInfoTimeOutRequest;
    NSString *_requestHostInTimeOut;
    BOOL _didStartRunRequestTimeOut;
    NSLock *_commonLock;
    BOOL _firstStart;
    unsigned char _isHttpDnsReady;
    BOOL _ipv6ProbeDidRun;
    BOOL _udpProbeDidRun;
    id<LSSNodeSchedulerRequestDelegate> _requestDelegate;
    NSMapTable *_appInfoBySessionId;
    NSMutableDictionary *_selectNodeRequest;
    NSMutableDictionary *_httpDnsRequest;
    unsigned long long _state;
    NSError *_error;
    LSSSchedulingRequestInfo *_schedulingRequestInfo;
    NSObject<OS_dispatch_source> *_timer;
    NSObject<OS_dispatch_source> *_timerForSetTimerSerialInfo;
    NSOperationQueue *_operationQueue;
    unsigned long long _networkStatus;
    LSSNetworkEngine *_udpProbeEngine;
    NSMutableDictionary *_domains;
    long long _timeTTL;
    LSSSettings *_requestSettings;
    NSDictionary *_performanceData;
    long long _retryTimes;
    NSMutableArray *_highPriorityDomainArray;
}

@property unsigned long long state;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) LSSSchedulingRequestInfo *schedulingRequestInfo;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *timerForSetTimerSerialInfo;
@property (retain, nonatomic) NSOperationQueue *operationQueue;
@property (nonatomic) unsigned long long networkStatus;
@property (retain, nonatomic) LSSNetworkEngine *udpProbeEngine;
@property (retain, nonatomic) NSMutableDictionary *domains;
@property (nonatomic) long long timeTTL;
@property (readonly, nonatomic) BOOL ipv6ProbeDidRun;
@property (readonly, nonatomic) BOOL udpProbeDidRun;
@property (retain, nonatomic) LSSSettings *requestSettings;
@property (retain, nonatomic) NSDictionary *performanceData;
@property (nonatomic) long long retryTimes;
@property (retain, nonatomic) NSMutableArray *highPriorityDomainArray;
@property (readonly, nonatomic) NSDictionary *currentNodes;
@property (copy, nonatomic) id /* block */ appInfoRequest;
@property (weak, nonatomic) id<LSSNodeSchedulerRequestDelegate> requestDelegate;
@property (retain, nonatomic) NSMapTable *appInfoBySessionId;
@property (copy) NSMutableDictionary *selectNodeRequest;
@property (copy) NSMutableDictionary *httpDnsRequest;
@property unsigned char isHttpDnsReady;

+ (id)sharedScheduler;

- (id)getConfigAndStrategyBundle:(long long)arg0 sdkInfo:(id)arg1;
- (long long)retryTimes;
- (void)setRetryTimes:(long long)arg0;
- (void)setRequestDelegate:(id)arg0;
- (id)requestDelegate;
- (id)getConfigAndStrategyByIntKey:(long long)arg0 key:(long long)arg1 defaultValue:(id)arg2 sdkInfo:(id)arg3;
- (void)registerStrategyConfigUpdate:(id)arg0 callback:(id /* block */)arg1;
- (id)strategyRelatedToNetworkWithUserInfo:(id)arg0;
- (id)schedulingRequestInfo;
- (void)setSchedulingRequestInfo:(id)arg0;
- (void)updateCurrentNetworkStatus:(unsigned long long)arg0 withCacheFlushed:(BOOL)arg1;
- (void)performRequestWithURL:(id)arg0 method:(id)arg1 customRequestSerilizer:(Class)arg2 params:(id)arg3 success:(id /* block */)arg4 failure:(id /* block */)arg5;
- (void)requestSpecificHostsWithCompletion:(id /* block */)arg0;
- (id)excuteWithCommand:(id)arg0 userInfo:(id)arg1;
- (id)currentSchedulingRequestInfo;
- (void)updateCurrentSchedulingRequestInfo:(id)arg0;
- (id)nodeWithHost:(id)arg0;
- (void)updateCurrentNetworkStatus:(unsigned long long)arg0;
- (id)currentNodes;
- (id /* block */)appInfoRequest;
- (void)setAppInfoRequest:(id /* block */)arg0;
- (id)getConfigAndStrategyByKey:(long long)arg0 key:(id)arg1 defaultValue:(id)arg2 sdkInfo:(id)arg3;
- (void)setEventInfo:(long long)arg0 eventinfo:(id)arg1;
- (id)appInfoBySessionId;
- (id)requestSettings;
- (void)nodeWithHostList:(id)arg0;
- (id)currentAppInfo:(id)arg0;
- (void)updateLocalDNS;
- (void)preconnectTCPFastOpenAvailableNodes;
- (void)updatePerformanceData;
- (id)srPerformanceInfo;
- (void)handleOptimumNodeInfoWithTimeOut:(long long)arg0;
- (void)handleOptimumNodeInfoTimeOut;
- (id)highPriorityDomainArray;
- (id)configInfoWithDomain:(id)arg0;
- (void)updateLocalDNSAndSelectionInfoWithDomain:(id)arg0;
- (void)updateLocalDNSWithCurrentRequestInfo;
- (void)initPitayaIfNeed;
- (void)loadDB;
- (void)requestSpecificHosts;
- (void)retryRequest:(id /* block */)arg0;
- (void)updateDomainsWithDomainInfos:(id)arg0 userInfo:(id)arg1;
- (void)updateDNSResultAfterFirstRequest:(id)arg0;
- (void)_requestSpecificHosts;
- (long long)timeTTL;
- (void)setTimeTTL:(long long)arg0;
- (void)updateNodeInfoForTheFirstTime:(id)arg0;
- (void)updateLocalDNSWithCurrentRequestInfoWithDelay:(long long)arg0;
- (void)updateTimerWithInterval:(double)arg0 handler:(id /* block */)arg1;
- (id)recommendSettingRequestParameter;
- (void)requestSelectedNodesWithCurrentRequestInfo:(id)arg0;
- (void)updateLocaDNS:(BOOL)arg0;
- (void)updateTimeWithIntervalImmediately:(double)arg0 handler:(id /* block */)arg1 fireImmediately:(BOOL)arg2;
- (id)selectNodeRequestParametersWithDomains:(id)arg0;
- (void)setSelectNodeRequest:(id)arg0;
- (id)HTTPDNSRequestParametersWithDomains:(id)arg0;
- (void)setHttpDnsRequest:(id)arg0;
- (void)updateSelectedNodesWithNodeInfos:(id)arg0 userInfo:(id)arg1 shouldNotify:(BOOL)arg2;
- (void)_requestSelectedNodesWithCurrentRequestInfo:(id)arg0;
- (BOOL)checkIdDictionary:(id)arg0;
- (id)srInfo:(BOOL)arg0 cpuRate:(float)arg1 batteryLevel:(float)arg2 gpuUsage:(float)arg3 thermalType:(long long)arg4;
- (void)stopTimerForSetTimerSerialInfo;
- (id)timerForSetTimerSerialInfo;
- (void)setTimerForSetTimerSerialInfo:(id)arg0;
- (void)updateUDPProbeParams;
- (id)getNodeListWithHostByKey:(long long)arg0 host:(id)arg1;
- (id)getStrategyConfigByName:(id)arg0;
- (void)setHighPriorityDomainArray:(id)arg0;
- (void)updateLocalDNSAndSelectionInfoWithDomainList:(id)arg0;
- (void)updateDNSRecords:(id)arg0 ipList:(id)arg1 type:(long long)arg2;
- (void)setAppInfoBySessionId:(id)arg0;
- (id)selectNodeRequest;
- (id)httpDnsRequest;
- (unsigned char)isHttpDnsReady;
- (void)setIsHttpDnsReady:(unsigned char)arg0;
- (id)udpProbeEngine;
- (void)setUdpProbeEngine:(id)arg0;
- (BOOL)ipv6ProbeDidRun;
- (BOOL)udpProbeDidRun;
- (void)setRequestSettings:(id)arg0;
- (id)timer;
- (id)domains;
- (id)init;
- (void)setOperationQueue:(id)arg0;
- (unsigned long long)networkStatus;
- (void).cxx_destruct;
- (unsigned long long)state;
- (void)flush;
- (void)updateSettings:(id)arg0;
- (void)stopTimer;
- (void)setState:(unsigned long long)arg0;
- (void)stop;
- (void)_stopTimer;
- (void)_setupTimer;
- (id)operationQueue;
- (void)setTimer:(id)arg0;
- (void)setNetworkStatus:(unsigned long long)arg0;
- (void)setError:(id)arg0;
- (void)start;
- (void)setDomains:(id)arg0;
- (id)error;
- (void)setupTimer;
- (void)didReceiveError:(id)arg0;
- (id)performanceData;
- (void)setPerformanceData:(id)arg0;

@end
