//
//     Generated by private class-dump
//

@class NSString;
@protocol ACCEditViewContainer, ACCEditServiceProtocol, ACCSequenceEditServiceProtocol;

@interface ACCSlidesCropComponent : ACCFeatureComponent <ACCSlidesCropViewControllerTracker, ACCFeatureComponentReloadableProtocol> {
    NSString *_currentProjectUUID;
    id<ACCEditViewContainer> _viewContainer;
    id<ACCEditServiceProtocol> _editService;
    id<ACCSequenceEditServiceProtocol> _sequenceEditService;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *currentProjectUUID;
@property (weak, nonatomic) id<ACCEditViewContainer> viewContainer;
@property (weak, nonatomic) id<ACCEditServiceProtocol> editService;
@property (weak, nonatomic) id<ACCSequenceEditServiceProtocol> sequenceEditService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)componentDidMount;
- (unsigned long long)preferredLoadPhase;
- (id)commonTrackParams;
- (id)editService;
- (void)loadComponentView;
- (void)setEditService:(id)arg0;
- (id)sequenceEditService;
- (void)setSequenceEditService:(id)arg0;
- (id)currentProjectUUID;
- (void)componentWillReload;
- (void)componentDidReload;
- (void)setCurrentProjectUUID:(id)arg0;
- (BOOL)needShowTrimCropBar;
- (id)transToVerticesWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (void)updateBarItem;
- (id)p_cropBarItem;
- (void)p_clickedCropBarItemWithAnimation:(BOOL)arg0;
- (void)p_trackClickCropBarItem;
- (void)p_jumpToCropVCWithAnimation:(BOOL)arg0;
- (void)observeMultiEditorSignal;
- (void)putInCropInfo:(id)arg0;
- (void)obtainCropInfoWithCompletion:(id /* block */)arg0;
- (id)obtainCurrentProject;
- (long long)obtainCropRatioWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)obtainCanvasInfoWithProject:(id)arg0 Completion:(id /* block */)arg1;
- (BOOL)rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 inCenterOfSize:(struct CGSize { double x0; double x1; })arg1;
- (void)putInCanvasInfoWithVertics:(id)arg0 cropRatio:(long long)arg1;
- (id)obtainTargetProjectWithUUID:(id)arg0;
- (long long)obtainIndexWithProjectUUID:(id)arg0;
- (void)selectCropRatio:(id)arg0 isDefault:(BOOL)arg1;
- (void)p_trackCloseCrop:(id)arg0;
- (void)p_trackConfirmCropRatio:(id)arg0 isDefault:(BOOL)arg1 originRatio:(id)arg2 isPinch:(BOOL)arg3;
- (void)p_trackDidEndZoom:(id)arg0 pinchType:(id)arg1;
- (void).cxx_destruct;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;

@end
