//
//     Generated by private class-dump
//

@class NSMutableDictionary, HTSLiveMessageListNode, NSArray, NSString, NSMutableArray;
@protocol IESLiveTableViewScrollDelegate, IESLiveMessageListCellViewDelegate, IESLiveMessageListDataDelegate;

@interface IESLiveMessageListAdapterUpdater : IESLiveTableViewAdapterUpdater <IESLivePublicScreenAdapterUpdaterProtocol> {
    BOOL _queuedReloadData;
    BOOL _onlyUpdateHistoryMessage;
    BOOL _shouldRemoveFoldNode;
    id<IESLiveTableViewScrollDelegate> _scrollDelegate;
    id<IESLiveMessageListCellViewDelegate> _cellDelegate;
    NSArray *_showingRollNodes;
    id<IESLiveMessageListDataDelegate> _dataDelegate;
    double _floatDuration;
    NSMutableArray *_commonNodeBuffer;
    NSMutableArray *_foldNodeBuffer;
    NSMutableArray *_needPriorityShowFoldNodeBuffer;
    HTSLiveMessageListNode *_showingFoldNode;
    NSMutableArray *_historyNodeBuffer;
    NSMutableArray *_reloadNodeBuffer;
    NSMutableDictionary *_pendingDeleteMsgIds;
}

@property (retain, nonatomic) NSMutableArray *commonNodeBuffer;
@property (retain, nonatomic) NSMutableArray *foldNodeBuffer;
@property (retain, nonatomic) NSMutableArray *needPriorityShowFoldNodeBuffer;
@property (retain, nonatomic) HTSLiveMessageListNode *showingFoldNode;
@property (nonatomic) BOOL shouldRemoveFoldNode;
@property (retain, nonatomic) NSMutableArray *historyNodeBuffer;
@property (retain, nonatomic) NSMutableArray *reloadNodeBuffer;
@property (retain, nonatomic) NSMutableDictionary *pendingDeleteMsgIds;
@property (weak, nonatomic) id<IESLiveMessageListDataDelegate> dataDelegate;
@property (nonatomic) BOOL onlyUpdateHistoryMessage;
@property (nonatomic) double floatDuration;
@property (weak, nonatomic) id<IESLiveTableViewScrollDelegate> scrollDelegate;
@property (weak, nonatomic) id<IESLiveMessageListCellViewDelegate> cellDelegate;
@property (nonatomic) BOOL queuedReloadData;
@property (retain, nonatomic) NSArray *showingRollNodes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)registerCellWith:(id)arg0;
- (id)getRollSectionData;
- (id)commonNodeBuffer;
- (id)pendingDeleteMsgIds;
- (void)setQueuedReloadData:(BOOL)arg0;
- (id)reloadNodeBuffer;
- (void)setShowingRollNodes:(id)arg0;
- (id)showingRollNodes;
- (BOOL)queuedReloadData;
- (void)reloadMessageList;
- (id)scrollDispatcher;
- (void)addNodesToFoldBuffer:(id)arg0 needPriorityShow:(BOOL)arg1;
- (void)addNodesToCommonBuffer:(id)arg0;
- (void)addMessageIdsToDelete:(id)arg0;
- (void)addMessageToDelete:(id)arg0;
- (BOOL)prepareReloadMessageWithNode:(id)arg0;
- (id)showingNodes;
- (void)updateMessageList:(id /* block */)arg0;
- (void)removeAllNodesAndCache;
- (void)setCommonNodeBuffer:(id)arg0;
- (void)setReloadNodeBuffer:(id)arg0;
- (void)setPendingDeleteMsgIds:(id)arg0;
- (id)historyNodeBuffer;
- (void)setShouldRemoveFoldNode:(BOOL)arg0;
- (id)needPriorityShowFoldNodeBuffer;
- (id)foldNodeBuffer;
- (void)setShowingFoldNode:(id)arg0;
- (id)showingFoldNode;
- (BOOL)onlyUpdateHistoryMessage;
- (id)getRollSectionDataOnlyWithHistory;
- (void)setOnlyUpdateHistoryMessage:(BOOL)arg0;
- (BOOL)shouldRemoveFoldNode;
- (id)cellFromRegistrationMappingWithTableView:(id)arg0 node:(id)arg1;
- (void)addNodesToHistoryBuffer:(id)arg0;
- (void)addNodeToShowingNodes:(id)arg0 atIndex:(long long)arg1;
- (void)cleanNodeOnCameraWillChange;
- (void)resetRefreshState;
- (double)floatDuration;
- (void)setFloatDuration:(double)arg0;
- (void)setFoldNodeBuffer:(id)arg0;
- (void)setNeedPriorityShowFoldNodeBuffer:(id)arg0;
- (void)setHistoryNodeBuffer:(id)arg0;
- (void)removeAllNodes;
- (id)init;
- (void)tableView:(id)arg0 willDisplayCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (void).cxx_destruct;
- (void)tableView:(id)arg0 didEndDisplayingCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg0;
- (void)scrollViewWillEndDragging:(id)arg0 withVelocity:(struct CGPoint { double x0; double x1; })arg1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)arg2;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (void)setScrollDelegate:(id)arg0;
- (void)scrollViewDidScroll:(id)arg0;
- (id)scrollDelegate;
- (void)scrollViewDidEndDragging:(id)arg0 willDecelerate:(BOOL)arg1;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg0;
- (id)dataDelegate;
- (id)cellDelegate;
- (void)setCellDelegate:(id)arg0;
- (void)setDataDelegate:(id)arg0;

@end
