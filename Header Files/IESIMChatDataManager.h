//
//     Generated by private class-dump
//

@class NSHashTable, NSString, IESIMUnreadCountReportFilterManager, NSMutableArray, IESIMChatDataManagerConfig, NSMutableDictionary, NSDictionary, NSMutableSet, TIMXSDKInstance, NSObject, NSNumber, TIMXGCDTimer;
@protocol IESIMChatDataManagerColdStartDelegate, IESIMChatDataManagerDataSource, IESIMLoginManagerProtocol, OS_dispatch_semaphore, OS_dispatch_queue, IESIMSDKConversationsDataSource;

@interface IESIMChatDataManager : NSObject <TIMXOConversationsDataSourceDelegate, TIMXOChangeObserverDelegate, TIMXPullerStatusChangeObserverDelegate, IESIMConversationFilterMessage, IESIMTIMXLifeMessage, TIMXOSendMessageProcessTraceUtilityDelegate, IESIMChatDataManagerProtocol> {
    BOOL _hasMore;
    BOOL _shouldAddUnradCountToTotal;
    BOOL _appWillTerminate;
    BOOL _isRequesting;
    BOOL _hasKickOffPuller;
    BOOL _containMaskZero;
    BOOL _isForegorund;
    BOOL _enableOptimizeReceivingMessageSwitchingThread;
    BOOL _canUseOneSqlToInquireUnreadCount;
    id<IESIMLoginManagerProtocol> _loginManager;
    IESIMChatDataManagerConfig *_config;
    id<IESIMChatDataManagerDataSource> _dataSource;
    id<IESIMChatDataManagerColdStartDelegate> _coldStartDelegate;
    id /* block */ _notUpdateConversationTimeBlock;
    long long _dataManagerType;
    TIMXSDKInstance *_sdkRoot;
    id<IESIMSDKConversationsDataSource> _conversationDataSource;
    NSHashTable *_delegates;
    NSMutableDictionary *_chatDict;
    NSObject<OS_dispatch_queue> *_conversationQueue;
    long long _currentSession;
    NSString *_observerToken;
    NSString *_pullerObserverToken;
    double _startRequestTimestamp;
    id /* block */ _loadRemainSessionsCompletion;
    long long _boxType;
    long long _boxTypeMask;
    long long _shouldNotContainedBoxTypeMask;
    long long _unreadNeglectMask;
    IESIMUnreadCountReportFilterManager *_unreadCountReportFilterManager;
    NSMutableSet *_filterMessageBaseLogIdsSet;
    NSObject<OS_dispatch_semaphore> *_filterMessageBaseLogIdsSetLock;
    NSNumber *_hasMoreLocal;
    TIMXGCDTimer *_timer;
    NSMutableArray *_batchUpdateChats;
    id /* block */ _shouldIgnoreUnreadcount;
    NSDictionary *_loadFirstPageDurationInfo;
}

@property (weak) TIMXSDKInstance *sdkRoot;
@property (retain) id<IESIMSDKConversationsDataSource> conversationDataSource;
@property (retain, nonatomic) NSHashTable *delegates;
@property (retain, nonatomic) NSMutableDictionary *chatDict;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *conversationQueue;
@property long long currentSession;
@property BOOL appWillTerminate;
@property (copy, nonatomic) NSString *observerToken;
@property (copy, nonatomic) NSString *pullerObserverToken;
@property (nonatomic) BOOL isRequesting;
@property (nonatomic) double startRequestTimestamp;
@property (copy, nonatomic) id /* block */ loadRemainSessionsCompletion;
@property (nonatomic) BOOL hasKickOffPuller;
@property (nonatomic) long long boxType;
@property (nonatomic) long long boxTypeMask;
@property (nonatomic) long long shouldNotContainedBoxTypeMask;
@property (nonatomic) long long unreadNeglectMask;
@property (nonatomic) BOOL containMaskZero;
@property (nonatomic) BOOL isForegorund;
@property (retain, nonatomic) IESIMUnreadCountReportFilterManager *unreadCountReportFilterManager;
@property (nonatomic) BOOL enableOptimizeReceivingMessageSwitchingThread;
@property (retain, nonatomic) NSMutableSet *filterMessageBaseLogIdsSet;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *filterMessageBaseLogIdsSetLock;
@property (retain, nonatomic) NSNumber *hasMoreLocal;
@property (retain, nonatomic) TIMXGCDTimer *timer;
@property (retain, nonatomic) NSMutableArray *batchUpdateChats;
@property (copy, nonatomic) id /* block */ shouldIgnoreUnreadcount;
@property (nonatomic) BOOL canUseOneSqlToInquireUnreadCount;
@property (retain) NSDictionary *loadFirstPageDurationInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<IESIMLoginManagerProtocol> loginManager;
@property (retain, nonatomic) IESIMChatDataManagerConfig *config;
@property (weak, nonatomic) id<IESIMChatDataManagerDataSource> dataSource;
@property (nonatomic) BOOL hasMore;
@property (readonly, nonatomic) BOOL hasMoreRemote;
@property (weak, nonatomic) id<IESIMChatDataManagerColdStartDelegate> coldStartDelegate;
@property (copy, nonatomic) id /* block */ notUpdateConversationTimeBlock;
@property (nonatomic) long long dataManagerType;
@property (nonatomic) BOOL shouldAddUnradCountToTotal;

- (void)setupWithConfig:(id)arg0;
- (void)handleDidEnterBackgroundNotification:(id)arg0;
- (BOOL)appWillTerminate;
- (void)setIsRequesting:(BOOL)arg0;
- (BOOL)isRequesting;
- (long long)totalUnreadCount;
- (void)handleWillEnterForegroundNotification:(id)arg0;
- (void)loadSessions;
- (void)setBoxType:(long long)arg0;
- (void)conversationDataSource:(id)arg0 didUpdateWithUpdate:(id)arg1 updateReason:(long long)arg2;
- (long long)conversationDataSource:(id)arg0 compareConversationA:(id)arg1 withConversationB:(id)arg2;
- (void)conversationDataSource:(id)arg0 didLoadAllConversations:(id)arg1;
- (long long)conversationDataSource:(id)arg0 customUnreadCountForConversation:(id)arg1;
- (long long)conversationDataSource:(id)arg0 anotherUnreadCountForConversation:(id)arg1;
- (void)onConversationDataSourceConversationsDeleted:(id)arg0;
- (void)onConversationDataSourceMessagesCreated:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2;
- (void)onConversationDataSourceMessagesUpdated:(id)arg0 belongingConversationMap:(id)arg1;
- (void)onConversationDataSourceMessagesDeleted:(id)arg0 belongingConversationMap:(id)arg1;
- (void)onConversationDataSourceConversationCleared:(id)arg0;
- (void)conversationDataSource:(id)arg0 totalUnreadCountFirstCaculatedWithMonitorArray:(id)arg1 boxType:(long long)arg2;
- (BOOL)conversationDataSourceNeedUpdateSortOrder:(id)arg0;
- (void)conversationDataSource:(id)arg0 didEndUpdateSortOrderWithMonitor:(id)arg1 error:(id)arg2;
- (BOOL)conversationDataSource:(id)arg0 shouldShowConversation:(id)arg1;
- (BOOL)conversationDataSource:(id)arg0 shouldIgnoreUnreadCountForConversation:(id)arg1;
- (void)conversationDataSource:(id)arg0 unreadCountV2Update:(int)arg1;
- (void)conversationDataSource:(id)arg0 unreadMentionedCountV2Update:(int)arg1;
- (void)onBoxTypeConvUpdatedWithBoxType:(long long)arg0;
- (BOOL)conversationDataSource:(id)arg0 shouldIgnoreFilterCacheWithConversation:(id)arg1;
- (void)didEndInstallInitForUser:(long long)arg0 inbox:(int)arg1 pullerType:(long long)arg2;
- (void)onMessagesNewPropertiesUpdated:(id)arg0 inConversation:(id)arg1 messageOldPropertiesMap:(id)arg2 messageNewPropertiesMap:(id)arg3 reason:(long long)arg4;
- (void)onSilentConversation:(id)arg0 silentStatus:(long long)arg1;
- (void)newP2PMessageNotifyConversation:(id)arg0 message:(id)arg1;
- (void)didEndPullForUser:(long long)arg0 inbox:(int)arg1 pullerType:(long long)arg2 pullDirection:(unsigned long long)arg3 error:(id)arg4 hasMore:(BOOL)arg5 userInfo:(id)arg6;
- (void)conversationsUpdated:(id)arg0;
- (void)messageUpdated:(id)arg0 inConversation:(id)arg1 reason:(long long)arg2;
- (void)didInsertNewMessagesWithMessageIdentifiers:(id)arg0 belongingConversationMap:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void)onSilentMembers:(id)arg0 silentStatus:(long long)arg1 silentMembers:(id)arg2 silentEndTime:(long long)arg3;
- (void)setConversationQueue:(id)arg0;
- (id)conversationQueue;
- (void)p_addKVO;
- (void)handleAppWillTerminateNotification:(id)arg0;
- (void)setAppWillTerminate:(BOOL)arg0;
- (long long)boxType;
- (BOOL)shouldFilterConversation:(id)arg0;
- (void)fetchCreateConversationsInInbox:(int)arg0 cursor:(long long)arg1 conversationType:(unsigned long long)arg2 sortType:(long long)arg3 completion:(id /* block */)arg4;
- (void)fetchJoinedConversationsInInbox:(int)arg0 cursor:(long long)arg1 conversationType:(unsigned long long)arg2 sortType:(long long)arg3 completion:(id /* block */)arg4;
- (void)invalidConversationFilterResult:(id)arg0;
- (void)iesim_timxInstanceMounted:(id)arg0;
- (void)iesim_timxInstanceUnmounted:(id)arg0;
- (void)p_fillPropertyFromCurrentSDKIfNecessary;
- (id)sdkRoot;
- (id)p_storedSDKRoot;
- (void)p_clearPropertyOfSDK;
- (id)p_storedSDKRoot_Nullable;
- (void)setSdkRoot:(id)arg0;
- (id)initWithBoxType:(long long)arg0 boxTypeMask:(long long)arg1 unreadNeglectMask:(long long)arg2 containMaskZero:(BOOL)arg3;
- (void)p_configUnreadCountIgnoreBlock;
- (void)p_notifyTotalUnreadCountUpdate:(long long)arg0;
- (void)p_notifyTotalUnreadCountUpdate:(long long)arg0 subscribeUnreadCountOnMute:(long long)arg1;
- (void)p_asyncRunBlockWithValidSessionID:(long long)arg0 inQueue:(id)arg1 block:(id /* block */)arg2;
- (id)conversationDataSource;
- (void)p_notifyAnotherTotalUnreadCountUpdate:(long long)arg0;
- (void)p_notifyTotalUnreadMentionUpdate:(long long)arg0;
- (void)p_notifyAllUnreadCountUpdate:(long long)arg0;
- (long long)boxTypeMask;
- (void)setBoxTypeMask:(long long)arg0;
- (long long)unreadNeglectMask;
- (void)setUnreadNeglectMask:(long long)arg0;
- (BOOL)containMaskZero;
- (void)setContainMaskZero:(BOOL)arg0;
- (long long)shouldNotContainedBoxTypeMask;
- (void)setShouldNotContainedBoxTypeMask:(long long)arg0;
- (void)createConversationsDataSource;
- (void)p_bindSession:(long long)arg0 toDataSource:(id)arg1;
- (BOOL)enableOptimizeReceivingMessageSwitchingThread;
- (void)setEnableOptimizeReceivingMessageSwitchingThread:(BOOL)arg0;
- (void)setPullerObserverToken:(id)arg0;
- (BOOL)p_shouldDisplayConversation:(id)arg0 filterReason:(id *)arg1;
- (id)p_currentUnreadCountCareConfig;
- (void)setConversationDataSource:(id)arg0;
- (long long)dataManagerType;
- (BOOL)p_isValidConversationInDuoShan:(id)arg0;
- (BOOL)canUseOneSqlToInquireUnreadCount;
- (id)unreadCountReportFilterManager;
- (BOOL)p_isBehaviorSameAsGeneralBoxType:(long long)arg0;
- (BOOL)p_canUseBoxMaskTypeToFilterWithBoxType:(long long)arg0;
- (BOOL)p_isValidTIMOConversationInDuoShan:(id)arg0;
- (void)setShouldIgnoreUnreadcount:(id /* block */)arg0;
- (void)setStartRequestTimestamp:(double)arg0;
- (void)setLoadRemainSessionsCompletion:(id /* block */)arg0;
- (id)pullerObserverToken;
- (id)chatDict;
- (id)batchUpdateChats;
- (void)setHasKickOffPuller:(BOOL)arg0;
- (void)setLoadFirstPageDurationInfo:(id)arg0;
- (id)hasMoreLocal;
- (void)setHasMoreLocal:(id)arg0;
- (long long)p_sessionOfDataSource:(id)arg0;
- (void)continueFetchPullWithCompletion:(id /* block */)arg0;
- (void)refreshDataSourceConversations:(id)arg0;
- (void)p_filterConversationIDsWhenFetchedExplictly:(id)arg0 completion:(id /* block */)arg1;
- (void)fetchAllConversationsByLocalDBInInbox:(int)arg0 beforeSortOrder:(long long)arg1 conversationType:(unsigned long long)arg2 pageCount:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (BOOL)enableFilterMessageEffectedBySwitchingBackgroundWithBoxType:(long long)arg0;
- (void)p_registerProcessMessageDelegateIfNeeded:(id)arg0;
- (BOOL)p_shouldDisplayConversation:(id)arg0;
- (BOOL)hasKickOffPuller;
- (double)startRequestTimestamp;
- (id)coldStartDelegate;
- (id /* block */)loadRemainSessionsCompletion;
- (id /* block */)shouldIgnoreUnreadcount;
- (BOOL)p_shouldDisplayConversationV2:(id)arg0;
- (void)handleNotifyUpdateMonitorWithBaseLogId:(long long)arg0;
- (BOOL)shouldRealFilterConversation:(id)arg0;
- (void)p_msgLinkTrackerWithMsgs:(id)arg0 reason:(long long)arg1 filteredConversationMap:(id)arg2 baseLogId:(long long)arg3 context:(id)arg4;
- (void)syncRunBlock:(id /* block */)arg0;
- (id /* block */)notUpdateConversationTimeBlock;
- (void)setNotUpdateConversationTimeBlock:(id /* block */)arg0;
- (void)addBatchUpdateChats:(id)arg0;
- (void)iesim_invalidFilterCacheOfConversation:(id)arg0;
- (BOOL)enableFilterMessageEffectedBySwitchingBackground;
- (void)setIsForegorund:(BOOL)arg0;
- (id)filterMessageBaseLogIdsSetLock;
- (id)filterMessageBaseLogIdsSet;
- (BOOL)isForegorund;
- (void)addFilteredBaseLogIdIfNeeded:(id)arg0;
- (void)removeFilteredBaseLogId:(id)arg0;
- (void)batchUpdateChatsTimerFired:(id)arg0;
- (void)p_notifyChatsUpdated:(id)arg0;
- (BOOL)shouldAddUnradCountToTotal;
- (void)setCanUseOneSqlToInquireUnreadCount:(BOOL)arg0;
- (void)handleAffectBySwitchingBackgroundMessageWithBaseLogId:(long long)arg0 isAffectBySwitchBackground:(BOOL *)arg1 isForegorund:(BOOL *)arg2;
- (void)appendNtpParamsWithMessage:(id)arg0 params:(id)arg1 senderIsAndroid:(BOOL)arg2;
- (void)appendDetailElapsedTimeDictWithContext:(id)arg0 params:(id)arg1 syncedExt:(id)arg2 duration:(long long)arg3 baseLogId:(long long)arg4;
- (void)timx_messageTrack:(id)arg0 willHandleMessageWithBaseLogId:(id)arg1;
- (void)timx_messageTrack:(id)arg0 willIgnoreMessageWithBaseLogId:(id)arg1;
- (void)loadRemainSessionsWithCompletion:(id /* block */)arg0;
- (void)deleteConversation:(id)arg0 completion:(id /* block */)arg1;
- (id)chatForIdentifier:(id)arg0;
- (long long)chatCount;
- (void)fetchAllConversationsInInbox:(int)arg0 cursor:(long long)arg1 conversationType:(unsigned long long)arg2 pageCount:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)fetchMessagesInConversation:(id)arg0 messageTypes:(id)arg1 afterIndex:(long long)arg2 limit:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)forceCheckConversationListIntegrity;
- (BOOL)hasMoreRemote;
- (void)setColdStartDelegate:(id)arg0;
- (void)setDataManagerType:(long long)arg0;
- (void)setShouldAddUnradCountToTotal:(BOOL)arg0;
- (id)loadFirstPageDurationInfo;
- (id)initWithBoxType:(long long)arg0;
- (id)initWithBoxType:(long long)arg0 boxTypeMask:(long long)arg1 unreadNeglectMask:(long long)arg2;
- (void)p_notifyFinishUpgradeForGroup;
- (void)p_notifyChatUpdated:(id)arg0;
- (BOOL)conversationDatasource:(id)arg0 shouldIgnoreUnreadCountForConversationID:(id)arg1;
- (id)appendElapsedDictWithBaseLogId:(long long)arg0 context:(id)arg1;
- (void)setChatDict:(id)arg0;
- (void)setUnreadCountReportFilterManager:(id)arg0;
- (void)setFilterMessageBaseLogIdsSet:(id)arg0;
- (void)setFilterMessageBaseLogIdsSetLock:(id)arg0;
- (void)setBatchUpdateChats:(id)arg0;
- (id)delegates;
- (id)timer;
- (void)setDelegates:(id)arg0;
- (long long)currentSession;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (void)addDelegate:(id)arg0;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (void)removeDelegate:(id)arg0;
- (void)setObserverToken:(id)arg0;
- (void)setTimer:(id)arg0;
- (id)observerToken;
- (void)setHasMore:(BOOL)arg0;
- (BOOL)hasMore;
- (void)setCurrentSession:(long long)arg0;
- (void)clear;
- (void)dealloc;
- (void)_startTimerIfNeeded;
- (id)loginManager;
- (void)setLoginManager:(id)arg0;
- (void)p_removeObservers;
- (void)p_addObservers;

@end
