//
//     Generated by private class-dump
//

@class NSArray, NSDictionary, NSString;

@interface BDWebImageTTNetConfig : NSObject <BDModelCustom> {
    BOOL _enabledH2;
    BOOL _enablePingKeepAlive;
    BOOL _sessionCheckEnabled;
    unsigned long long _pingKeepAliveInterval;
    NSArray *_pingKeepAliveHosts;
    unsigned long long _pingProbeTimeout;
    unsigned long long _sessionCheckInterval;
    NSArray *_sessionCheckHosts;
    NSDictionary *_preconnectURLs;
    unsigned long long _unusedIdleSocketTimeout;
    unsigned long long _maxSocketsPerGroup;
    unsigned long long _usedIdleSocketTimeout;
}

@property (nonatomic) BOOL enabledH2;
@property (nonatomic) BOOL enablePingKeepAlive;
@property (nonatomic) unsigned long long pingKeepAliveInterval;
@property (copy, nonatomic) NSArray *pingKeepAliveHosts;
@property (nonatomic) unsigned long long pingProbeTimeout;
@property (nonatomic) BOOL sessionCheckEnabled;
@property (nonatomic) unsigned long long sessionCheckInterval;
@property (copy, nonatomic) NSArray *sessionCheckHosts;
@property (copy, nonatomic) NSDictionary *preconnectURLs;
@property (nonatomic) unsigned long long unusedIdleSocketTimeout;
@property (nonatomic) unsigned long long maxSocketsPerGroup;
@property (nonatomic) unsigned long long usedIdleSocketTimeout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)modelCustomPropertyMapper;

- (void)setPreconnectURLs:(id)arg0;
- (BOOL)enabledH2;
- (void)setEnabledH2:(BOOL)arg0;
- (BOOL)enablePingKeepAlive;
- (void)setEnablePingKeepAlive:(BOOL)arg0;
- (unsigned long long)pingKeepAliveInterval;
- (void)setPingKeepAliveInterval:(unsigned long long)arg0;
- (id)pingKeepAliveHosts;
- (void)setPingKeepAliveHosts:(id)arg0;
- (unsigned long long)pingProbeTimeout;
- (void)setPingProbeTimeout:(unsigned long long)arg0;
- (BOOL)sessionCheckEnabled;
- (void)setSessionCheckEnabled:(BOOL)arg0;
- (unsigned long long)sessionCheckInterval;
- (void)setSessionCheckInterval:(unsigned long long)arg0;
- (id)sessionCheckHosts;
- (void)setSessionCheckHosts:(id)arg0;
- (id)preconnectURLs;
- (unsigned long long)unusedIdleSocketTimeout;
- (void)setUnusedIdleSocketTimeout:(unsigned long long)arg0;
- (unsigned long long)maxSocketsPerGroup;
- (void)setMaxSocketsPerGroup:(unsigned long long)arg0;
- (unsigned long long)usedIdleSocketTimeout;
- (void)setUsedIdleSocketTimeout:(unsigned long long)arg0;
- (void).cxx_destruct;

@end
