//
//     Generated by private class-dump
//

@class ACCLyricsStickerHandler, ACCEditLyricsStickerViewController, NSString, ACCEditLyricStickerViewModel, AWEEditStickerHintView;
@protocol ACCEditServiceProtocol, ACCEditViewContainer, ACCStickerServiceProtocol, ACCEditTransitionServiceProtocol, ACCStickerPanelServiceProtocol, ACCEditVideoFilterServiceProtocol, ACCEditMusicServiceProtocol, ACCSelectTemplateServiceProtocol, ACCEditorDraftService, ACCEditCutMusicServiceProtocol;

@interface ACCEditLyricStickerComponent : ACCFeatureComponent <ACCEditLyricsStickerDatasource, ACCEditLyricsStickerDelegate, ACCStickerPannelObserver, ACCDraftResourceRecoverProtocol, ACCStickerMigrationProtocol> {
    BOOL _isFirstTimeToCallAddLyricOnEditPageShowWithMusicId;
    BOOL _isFirstTimeToCallPresentMusicStickerSearchVCFromLyricEdit;
    BOOL _isRecordLyricSticker;
    BOOL _isFromMusicPanel;
    BOOL _isKaraoke;
    BOOL _discardUnselectTrackEvent;
    ACCLyricsStickerHandler *_lyricsStickerHandler;
    ACCEditLyricsStickerViewController *_lyricStickerViewController;
    NSString *_lyricStickerChallengeId;
    id<ACCEditViewContainer> _viewContainer;
    ACCEditLyricStickerViewModel *_viewModel;
    id<ACCEditServiceProtocol> _editService;
    id<ACCEditorDraftService> _draftService;
    id<ACCStickerServiceProtocol> _stickerService;
    id<ACCEditCutMusicServiceProtocol> _cutMusicService;
    id<ACCEditMusicServiceProtocol> _musicService;
    id<ACCStickerPanelServiceProtocol> _stickerPanelService;
    id<ACCSelectTemplateServiceProtocol> _selectTemplateService;
    id<ACCEditTransitionServiceProtocol> _transitionService;
    id<ACCEditVideoFilterServiceProtocol> _filterService;
    AWEEditStickerHintView *_hintView;
    NSString *_coordinateRatioString;
    id /* block */ _dismissPanelHandle;
}

@property (retain, nonatomic) ACCLyricsStickerHandler *lyricsStickerHandler;
@property (nonatomic) BOOL isFirstTimeToCallAddLyricOnEditPageShowWithMusicId;
@property (nonatomic) BOOL isFirstTimeToCallPresentMusicStickerSearchVCFromLyricEdit;
@property (nonatomic) BOOL isRecordLyricSticker;
@property (retain, nonatomic) ACCEditLyricsStickerViewController *lyricStickerViewController;
@property (copy, nonatomic) NSString *lyricStickerChallengeId;
@property (retain, nonatomic) id<ACCEditViewContainer> viewContainer;
@property (nonatomic) BOOL isFromMusicPanel;
@property (retain, nonatomic) ACCEditLyricStickerViewModel *viewModel;
@property (weak, nonatomic) id<ACCEditServiceProtocol> editService;
@property (weak, nonatomic) id<ACCEditorDraftService> draftService;
@property (weak, nonatomic) id<ACCStickerServiceProtocol> stickerService;
@property (weak, nonatomic) id<ACCEditCutMusicServiceProtocol> cutMusicService;
@property (weak, nonatomic) id<ACCEditMusicServiceProtocol> musicService;
@property (weak, nonatomic) id<ACCStickerPanelServiceProtocol> stickerPanelService;
@property (weak, nonatomic) id<ACCSelectTemplateServiceProtocol> selectTemplateService;
@property (weak, nonatomic) id<ACCEditTransitionServiceProtocol> transitionService;
@property (weak, nonatomic) id<ACCEditVideoFilterServiceProtocol> filterService;
@property (retain, nonatomic) AWEEditStickerHintView *hintView;
@property (nonatomic) BOOL isKaraoke;
@property (nonatomic) BOOL discardUnselectTrackEvent;
@property (retain, nonatomic) NSString *coordinateRatioString;
@property (copy, nonatomic) id /* block */ dismissPanelHandle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)updateWithDownloadedEffects:(id)arg0 publishViewModel:(id)arg1 completion:(id /* block */)arg2;
+ (BOOL)fillCrossPlatformStickerByUserInfo:(id)arg0 repository:(id)arg1 context:(id)arg2 sticker:(id *)arg3;
+ (void)updateUserInfo:(id *)arg0 repoModel:(id)arg1 byCrossPlatformSlot:(id)arg2;
+ (void)updateRelatedResourcesFor:(id)arg0 withPublishModel:(id)arg1 completion:(id /* block */)arg2;

- (void)bindViewModel;
- (id)draftService;
- (void)setDraftService:(id)arg0;
- (BOOL)isKaraoke;
- (void)setIsKaraoke:(BOOL)arg0;
- (void)componentDidMount;
- (void)setHintView:(id)arg0;
- (id)transitionService;
- (void)setTransitionService:(id)arg0;
- (id)musicService;
- (void)setMusicService:(id)arg0;
- (id)editService;
- (void)loadComponentView;
- (id)serviceBinding;
- (void)setEditService:(id)arg0;
- (void)setFilterService:(id)arg0;
- (id)filterService;
- (void)bindServices:(id)arg0;
- (void)p_trackEvent:(id)arg0 params:(id)arg1;
- (void)setStickerService:(id)arg0;
- (id)stickerService;
- (id)cutMusicService;
- (id)selectTemplateService;
- (void)setCutMusicService:(id)arg0;
- (void)setSelectTemplateService:(id)arg0;
- (id)stickerPanelService;
- (void)setStickerPanelService:(id)arg0;
- (unsigned long long)stikerPriority;
- (BOOL)handleSelectSticker:(id)arg0 fromTab:(id)arg1 willSelectHandle:(id /* block */)arg2 dismissPanelHandle:(id /* block */)arg3;
- (id /* block */)dismissPanelHandle;
- (void)setDismissPanelHandle:(id /* block */)arg0;
- (void)editLyricsViewController:(id)arg0 addLyricsSticker:(id)arg1 path:(id)arg2 tabName:(id)arg3 completion:(id /* block */)arg4;
- (void)editLyricsViewController:(id)arg0 didSelectMusic:(id)arg1 error:(id)arg2;
- (void)p_removeMusicLyricSticker;
- (void)editLyricsViewControllerShowAudioClipView:(id)arg0;
- (void)editLyricsViewControllerClipMusic:(struct _HTSAudioRange { double x0; double x1; })arg0 repeatCount:(long long)arg1;
- (void)p_updateMusicLyricStickerAudioRange:(struct _HTSAudioRange { double x0; double x1; })arg0;
- (void)editLyricsViewControllerAddAudioClipView:(id)arg0;
- (void)editLyricsViewControllerRemoveMusicLyricSticker:(id)arg0;
- (void)editLyricsViewControllerDidDismiss:(id)arg0;
- (id)lyricsStickerHandler;
- (void)p_didAddMusic:(id)arg0 withRemoveLyricSticker:(BOOL)arg1;
- (id)lyricStickerViewController;
- (BOOL)supportLyricSticker;
- (void)p_dismissHintTextWithAnimation:(BOOL)arg0;
- (void)p_removeBindChallenge;
- (void)p_addLyricStickerFromMusicPanelWithMusic:(id)arg0 coordinateRatio:(id)arg1;
- (void)p_recoveryLyricsStickerIfNeeded;
- (void)p_downloadFontForLyricSticker;
- (void)setIsFirstTimeToCallAddLyricOnEditPageShowWithMusicId:(BOOL)arg0;
- (void)setIsFirstTimeToCallPresentMusicStickerSearchVCFromLyricEdit:(BOOL)arg0;
- (void)p_addLyricOnEditPageShowWithMusicId:(id)arg0 baseMusicModel:(id)arg1;
- (void)p_updateFontIfNeeded;
- (void)p_showLyricsStickerHint;
- (void)p_addLyricsSticker:(id)arg0 path:(id)arg1 tabName:(id)arg2 completion:(id /* block */)arg3;
- (void)p_addLyricsSticker:(id)arg0 path:(id)arg1 tabName:(id)arg2 locationModel:(id)arg3 effectInfos:(id)arg4 isFromMusicShare:(BOOL)arg5 completion:(id /* block */)arg6;
- (void)p_bindChallengeWithChallengeId:(id)arg0;
- (void)p_applyLyricsSticker:(long long)arg0 isFromMusicShare:(BOOL)arg1;
- (void)setIsFromMusicPanel:(BOOL)arg0;
- (void)p_checkMusicOrShowLyricMusicViewControllerWithIsFromMusicShare:(BOOL)arg0 Completion:(id /* block */)arg1;
- (void)p_updateEditLyricsViewControllerWithStickerId:(long long)arg0;
- (void)setCoordinateRatioString:(id)arg0;
- (id)coordinateRatioString;
- (void)p_checkMusicOrShowLyricMusicViewControllerWithMusicModel:(id)arg0 isFromMusicShare:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)p_addLyricOnEditPageShowWithMusicModel:(id)arg0;
- (id)p_applyLyricsStickerWithId:(long long)arg0 props:(id)arg1 editSize:(struct CGSize { double x0; double x1; })arg2 isFromMusicShare:(BOOL)arg3 configBlock:(id /* block */)arg4;
- (BOOL)isFromMusicPanel;
- (BOOL)isFirstTimeToCallAddLyricOnEditPageShowWithMusicId;
- (BOOL)isFirstTimeToCallPresentMusicStickerSearchVCFromLyricEdit;
- (BOOL)isRecordLyricSticker;
- (void)setIsRecordLyricSticker:(BOOL)arg0;
- (void)p_recoveryLyricsSticker;
- (void)p_recoveryLyricsStickerWithStickerInfo:(id)arg0;
- (void)p_showHintViewWithStickerWrapperView:(id)arg0;
- (id)lyricStickerChallengeId;
- (void)setLyricStickerChallengeId:(id)arg0;
- (void)p_dismissHintView;
- (void)p_startEditLyricSticker:(long long)arg0;
- (BOOL)discardUnselectTrackEvent;
- (void)setDiscardUnselectTrackEvent:(BOOL)arg0;
- (void)p_addLyricStickerFromExpressWithLyricsEditorConfig:(id)arg0;
- (void)p_setLyricStickerIDInPublishModel;
- (void)setLyricsStickerHandler:(id)arg0;
- (void)setLyricStickerViewController:(id)arg0;
- (void).cxx_destruct;
- (void)setViewModel:(id)arg0;
- (id)viewModel;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;
- (id)hintView;

@end
