//
//     Generated by private class-dump
//

@class BDARewardedVideoAdBaseController, NSString, NSMutableDictionary, NSArray, BDPUniqueID;
@protocol BDPAdvertisementRevisitPluginDelegate;

@interface BDPGameVideoAdvertisementImplHg : NSObject <BDARewardedVideoAdDelegate, BDARewardedVideoAlertDelegate, UINavigationControllerDelegate, BDPPluginGameVideoAdvertisementImplProtocol_HG> {
    BOOL _isShareInspireValid;
    BOOL _hasVideoAdRevisit;
    long long _watchCount;
    NSString *_multitonRewardedMsg;
    BDPUniqueID *_uniqueID;
    NSMutableDictionary *_videoContainer;
    NSString *_recordVideoPath;
    long long _abTestType;
    long long _maxShareSuccessTimes;
    long long _minIntervalTime;
    long long _isOpenForAllgames;
    NSArray *_whiteListOfGameId;
    double _lastShareTime;
    BDARewardedVideoAdBaseController *_failVideo;
    id /* block */ _shareCallback;
    NSArray *_allowListOfGameId;
    BDARewardedVideoAdBaseController *_revisitFailedVideo;
    id<BDPAdvertisementRevisitPluginDelegate> _revisitPluginDelegate;
}

@property (nonatomic) long long watchCount;
@property (copy, nonatomic) NSString *multitonRewardedMsg;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (retain, nonatomic) NSMutableDictionary *videoContainer;
@property (nonatomic) BOOL isShareInspireValid;
@property (retain, nonatomic) NSString *recordVideoPath;
@property (nonatomic) long long abTestType;
@property (nonatomic) long long maxShareSuccessTimes;
@property (nonatomic) long long minIntervalTime;
@property (nonatomic) long long isOpenForAllgames;
@property (retain, nonatomic) NSArray *whiteListOfGameId;
@property (nonatomic) double lastShareTime;
@property (retain, nonatomic) BDARewardedVideoAdBaseController *failVideo;
@property (copy, nonatomic) id /* block */ shareCallback;
@property (retain, nonatomic) NSArray *allowListOfGameId;
@property (nonatomic) BOOL hasVideoAdRevisit;
@property (retain, nonatomic) BDARewardedVideoAdBaseController *revisitFailedVideo;
@property (retain, nonatomic) id<BDPAdvertisementRevisitPluginDelegate> revisitPluginDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;

- (void)videoAd:(id)arg0 didClickCloseWithInfo:(id)arg1;
- (void)videoAdMoreRewardDisplayInfo:(id)arg0 index:(long long)arg1 callBack:(id /* block */)arg2;
- (void)videoAdBecomeEffective:(id)arg0;
- (id)show:(id)arg0 retainTime:(long long)arg1 title:(id)arg2;
- (void)videoAd:(id)arg0 didLoadFailWithError:(id)arg1;
- (void)videoAdDidLoadSuccess:(id)arg0;
- (void)videoAd:(id)arg0 didClickBannerBtnWithInfo:(id)arg1;
- (void)videoAd:(id)arg0 didClickBannerCardWithInfo:(id)arg1;
- (void)createVideoAdWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)operateVideoAdWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (id)videoContainer;
- (long long)watchCount;
- (void)_onStateAdClosedWithAdUnitID:(id)arg0 count:(long long)arg1;
- (id)revisitPluginDelegate;
- (void)_onStateAdErrorWithAdUnitID:(id)arg0 error:(id)arg1;
- (void)_onStateAdLoadedWithAdUnitID:(id)arg0 uniqueID:(id)arg1;
- (void)_createVideoAdWithParam:(id)arg0 instance:(id)arg1;
- (void)getRewardedVideoAdInspireConfig;
- (void)onAdInspireFailForClose;
- (void)onAdInspireSuccessForClose;
- (void)setShareCallback:(id /* block */)arg0;
- (BOOL)hasVideoAdRevisit;
- (void)setWatchCount:(long long)arg0;
- (id)revisitFailedVideo;
- (void)_videoAdRevisitClose:(BOOL)arg0;
- (void)setMultitonRewardedMsg:(id)arg0;
- (BOOL)_enableMultitonFromSettingsOrABTest:(id)arg0;
- (void)setIsShareInspireValid:(BOOL)arg0;
- (BOOL)_enableMultitonFromSettings:(id)arg0;
- (void)_advertisementStateChangeWithAdUnitID:(id)arg0 state:(id)arg1 data:(id)arg2;
- (id)multitonRewardedMsg;
- (void)setHasVideoAdRevisit:(BOOL)arg0;
- (void)setRevisitFailedVideo:(id)arg0;
- (BOOL)isShareInspireValid;
- (long long)isOpenForAllgames;
- (id)allowListOfGameId;
- (id)failVideo;
- (void)setFailVideo:(id)arg0;
- (long long)abTestType;
- (void)onAdInspireFailForShow;
- (void)shareAfterRAvideoADLoadFailed:(id)arg0;
- (double)lastShareTime;
- (long long)minIntervalTime;
- (long long)maxShareSuccessTimes;
- (BOOL)isValidForIntervalAndTimesLimit:(id)arg0;
- (id)getRecentVideoPath;
- (void)setRecordVideoPath:(id)arg0;
- (id)recordVideoPath;
- (void)showConfirmByDialog;
- (void)showConfirmByToast;
- (void)showShareMessageToastAndShareGame;
- (void)onAdInspireSuccessForShow;
- (void)shareRecordVideoForInspire;
- (void)setAbTestType:(long long)arg0;
- (void)setMaxShareSuccessTimes:(long long)arg0;
- (void)setMinIntervalTime:(long long)arg0;
- (void)setIsOpenForAllgames:(long long)arg0;
- (void)setAllowListOfGameId:(id)arg0;
- (id /* block */)shareCallback;
- (void)setLastShareTime:(double)arg0;
- (BOOL)_finishADWithWatchedTime:(id)arg0 effectiveTime:(id)arg1;
- (void)setVideoContainer:(id)arg0;
- (void)setRevisitPluginDelegate:(id)arg0;
- (void)setWhiteListOfGameId:(id)arg0;
- (id)whiteListOfGameId;
- (void)_setupObserver;
- (id)init;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (void)_enterForeground:(id)arg0;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg0;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(id)arg0;

@end
