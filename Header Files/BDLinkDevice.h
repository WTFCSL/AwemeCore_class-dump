//
//     Generated by private class-dump
//

@class NSURLSession, NSString, NSURLSessionTask, NSMutableDictionary, NSLock;

@interface BDLinkDevice : NSObject <BDByteCastURLSessionDelegate> {
    long long _checkCounter;
    BOOL _isSeeking;
    BOOL _supportPing;
    BOOL _hasSentStartCommand;
    NSString *_url;
    NSString *_name;
    NSString *_data;
    NSString *_sinkVersion;
    long long _playRefCounter;
    NSString *_playingUrl;
    NSURLSession *_urlSession;
    NSURLSessionTask *_playTask;
    NSMutableDictionary *_redirectionBlockDic;
    NSLock *_redirectionBlockDicLock;
}

@property (nonatomic) BOOL hasSentStartCommand;
@property (copy, nonatomic) NSString *playingUrl;
@property (retain, nonatomic) NSURLSession *urlSession;
@property (nonatomic) BOOL supportPing;
@property (weak, nonatomic) NSURLSessionTask *playTask;
@property (retain, nonatomic) NSMutableDictionary *redirectionBlockDic;
@property (retain, nonatomic) NSLock *redirectionBlockDicLock;
@property (readonly, copy, nonatomic) NSString *url;
@property (readonly, copy, nonatomic) NSString *ipAddress;
@property (readonly, nonatomic) long long port;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *data;
@property (readonly, copy, nonatomic) NSString *sinkVersion;
@property (nonatomic) BOOL isSeeking;
@property (nonatomic) long long checkCounter;
@property (nonatomic) long long playRefCounter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setPlayTask:(id)arg0;
- (id)playTask;
- (void)setIsSeeking:(BOOL)arg0;
- (void)setPlaySpeed:(float)arg0;
- (void)addVolume;
- (void)reduceVolume;
- (void)sendMessage:(id)arg0 withCallback:(id /* block */)arg1;
- (id)initWithUrl:(id)arg0 andName:(id)arg1 andData:(id)arg2 sinkVersion:(id)arg3 supportPing:(BOOL)arg4;
- (void)registerWithSourceDeviceInfo:(id)arg0 andCallback:(id /* block */)arg1;
- (void)unregisterWithSourceDeviceInfo:(id)arg0 andCallback:(id /* block */)arg1;
- (long long)playRefCounter;
- (void)setPlayRefCounter:(long long)arg0;
- (id)sinkVersion;
- (void)urlSessionDelegator:(id)arg0 requestUrl:(id)arg1 resolvedUrl:(id)arg2 taskDescription:(id)arg3 statusCode:(long long)arg4;
- (long long)checkCounter;
- (void)setCheckCounter:(long long)arg0;
- (id)redirectionBlockDicLock;
- (id)redirectionBlockDic;
- (void)setURLRedirectCompletionBlock:(id /* block */)arg0 forKey:(id)arg1;
- (void)requestRedirectWithOriginUrl:(id)arg0 intermediateUrl:(id)arg1 maxCount:(long long)arg2 currentIndex:(long long)arg3;
- (id /* block */)getAndRemoveURLRedirectCompletionBlockForKey:(id)arg0;
- (void)requestRedirectUrl:(id)arg0 maxCount:(long long)arg1 completion:(id /* block */)arg2;
- (void)setRedirectionBlockDic:(id)arg0;
- (void)setRedirectionBlockDicLock:(id)arg0;
- (void)setPlayingUrl:(id)arg0;
- (id)playingUrl;
- (BOOL)supportPing;
- (void)requestWithParameter:(id)arg0 cacheBodyData:(BOOL)arg1 andTimeout:(double)arg2;
- (void)play:(id)arg0 retryCount:(long long)arg1 completion:(id /* block */)arg2;
- (void)setHasSentStartCommand:(BOOL)arg0;
- (void)requestWithParameter:(id)arg0 cacheBodyData:(BOOL)arg1;
- (void)requestWithParameter:(id)arg0 cacheBodyData:(BOOL)arg1 andCallback:(id /* block */)arg2;
- (BOOL)hasSentStartCommand;
- (id)initWithUrl:(id)arg0 andName:(id)arg1 andData:(id)arg2 andSinkVersion:(id)arg3;
- (void)play:(id)arg0 completion:(id /* block */)arg1;
- (void)resumeWithSpeed:(float)arg0;
- (void)seekToPosition:(unsigned int)arg0 withTag:(unsigned int)arg1;
- (void)getVolumeInfoWithCallback:(id /* block */)arg0;
- (void)getStatusInfoWithCallback:(id /* block */)arg0;
- (void)setSupportPing:(BOOL)arg0;
- (long long)port;
- (id)data;
- (void).cxx_destruct;
- (id)urlSession;
- (void)stop;
- (void)setUrlSession:(id)arg0;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg0;
- (void)setVolume:(unsigned int)arg0;
- (BOOL)isSeeking;
- (void)dealloc;
- (void)pause;
- (id)url;
- (id)name;
- (id)ipAddress;
- (void)setBullet:(BOOL)arg0;

@end
