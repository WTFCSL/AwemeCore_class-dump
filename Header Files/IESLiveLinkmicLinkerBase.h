//
//     Generated by private class-dump
//

@class NSString, IESLiveLinkmicMonitor, IESLiveLinkmicLinkerModel, IESLiveLinkmicLinkerConfig;
@protocol IESLiveLinkmicLinkServiceInterface, IESLiveLinkmicLinkerDataSource, IESLiveLinkmicMediaServiceInterface, IESLiveLinkmicUserServiceInterface;

@interface IESLiveLinkmicLinkerBase : IESLiveLinkmicLinker <IESLiveLinkmicLinkServiceDelegate, IESLiveLinkmicMediaServiceDelegate, IESLiveLinkmicMonitorDataSource> {
    id<IESLiveLinkmicLinkerDataSource> _dataSource;
    IESLiveLinkmicLinkerConfig *_linkerConfig;
    IESLiveLinkmicLinkerModel *_linkerModel;
    id<IESLiveLinkmicUserServiceInterface> _userServiceI;
    id<IESLiveLinkmicLinkServiceInterface> _linkServiceI;
    id<IESLiveLinkmicMediaServiceInterface> _mediaServiceI;
    IESLiveLinkmicMonitor *_linkmicMonitor;
}

@property (retain, nonatomic) IESLiveLinkmicLinkerConfig *linkerConfig;
@property (retain, nonatomic) IESLiveLinkmicLinkerModel *linkerModel;
@property (retain, nonatomic) IESLiveLinkmicMonitor *linkmicMonitor;
@property (retain, nonatomic) id<IESLiveLinkmicUserServiceInterface> userServiceI;
@property (retain, nonatomic) id<IESLiveLinkmicLinkServiceInterface> linkServiceI;
@property (retain, nonatomic) id<IESLiveLinkmicMediaServiceInterface> mediaServiceI;
@property (weak, nonatomic) id<IESLiveLinkmicLinkerDataSource> dataSource;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)stopInteract;
- (void)startInteract;
- (void)enterLinkmic;
- (void)onReceivedCreateMessage:(id)arg0;
- (void)onReceivedCloseMessage:(id)arg0;
- (void)onReceivedInviteMessage:(id)arg0;
- (id)linkmicMonitor;
- (void)onReceivedReplyMessage:(id)arg0;
- (void)onReceivedPermitMessage:(id)arg0;
- (void)onReceivedEnterMessage:(id)arg0;
- (void)onReceivedLeaveMessage:(id)arg0;
- (void)onReceivedKickoutedMessage:(id)arg0;
- (void)onReceivedApplyMessage:(id)arg0;
- (id)monitorExtraParams;
- (void)cancelApplyWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)resumeWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)onSubtitleMessageReceived:(id)arg0;
- (void)setLinkmicMonitor:(id)arg0;
- (void)linkmicMediaService:(id)arg0 receivesError:(id)arg1;
- (void)linkmicMediaServiceDidStart:(id)arg0;
- (void)linkmicMediaServiceDidEnd:(id)arg0;
- (void)linkmicMediaService:(id)arg0 onUserJoined:(id)arg1;
- (void)linkmicMediaService:(id)arg0 onUserLeaved:(id)arg1;
- (void)linkmicMediaService:(id)arg0 onUserAudioMute:(id)arg1 mute:(BOOL)arg2;
- (void)linkmicMediaService:(id)arg0 firstRemoteAudioWithLinkmicUid:(id)arg1;
- (void)linkmicMediaServiceFirstLocalAudio:(id)arg0;
- (void)linkmicMediaService:(id)arg0 onUserVolumeIndication:(id)arg1 volume:(long long)arg2;
- (void)linkmicMediaService:(id)arg0 onTotalVolumeIndication:(long long)arg1;
- (void)linkmicMediaServiceDidStartPushStream:(id)arg0;
- (void)joinChannel;
- (id)linkerModel;
- (void)setLinkerModel:(id)arg0;
- (BOOL)canJoinChannel;
- (void)inviteWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)replyWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)applyWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)permitWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)joinChannelWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)kickoutWithParams:(id)arg0 completion:(id /* block */)arg1;
- (id)linkerConfig;
- (BOOL)canRTCStartParallel;
- (void)handleParallelRtcStartSuccess;
- (void)onLinkSuccess;
- (void)handleParallelRtcStartError:(id)arg0;
- (id)userServiceI;
- (void)linkmicMediaServiceWillEnd:(id)arg0;
- (void)linkmicMediaService:(id)arg0 newSessionCreated:(id)arg1 local:(BOOL)arg2;
- (void)linkmicMediaService:(id)arg0 firstRemoteVideoWithLinkmicUid:(id)arg1;
- (void)linkmicMediaService:(id)arg0 firstFrameRenderCallback:(id)arg1;
- (void)linkmicMediaService:(id)arg0 startPlayPublicStreamResult:(BOOL)arg1 needVideoCanvas:(BOOL)arg2;
- (void)linkmicMediaService:(id)arg0 stopPlayPublicStreamResult:(BOOL)arg1;
- (void)linkmicMediaService:(id)arg0 localSmallWindowSessionCreated:(id)arg1;
- (void)linkmicMediaService:(id)arg0 didVideoMuted:(BOOL)arg1 byUid:(id)arg2;
- (void)linkmicMediaServiceAppResignActive;
- (void)linkmicMediaServiceAppDidActive;
- (void)linkmicMediaService:(id)arg0 audioSessionInterrupt:(unsigned long long)arg1;
- (void)linkmicMediaService:(id)arg0 videoSizeChangedOfUid:(id)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (void)linkmicMediaService:(id)arg0 onSwitchMixTypeResult:(long long)arg1 isMixOnClient:(BOOL)arg2;
- (void)linkmicMediaService:(id)arg0 didUpdatedSessionsLocalLayout:(id)arg1;
- (struct CGSize { double x0; double x1; })linkmicMediaService:(id)arg0 captureSizeWithOutputSize:(struct CGSize { double x0; double x1; })arg1;
- (void)linkmicMediaService:(id)arg0 anchorDidChangeToBackupSession:(id)arg1 linkmicID:(id)arg2 backupLinkmicID:(id)arg3;
- (void)onSubtitleStateChange:(id)arg0;
- (void)setupLinkAndUserService;
- (id)linkServiceI;
- (void)updateMediaExtInfo;
- (void)stopInteractStream;
- (void)replyJoinChannel:(id)arg0;
- (void)handleParallelJoinChannelError:(id)arg0;
- (BOOL)canPreSetupMediaService:(id)arg0;
- (void)setupMediaService;
- (void)setMediaServiceI:(id)arg0;
- (void)setLinkServiceI:(id)arg0;
- (void)setUserServiceI:(id)arg0;
- (void)quitRoom:(id)arg0;
- (void)handleParallelJoinChannelSuccess;
- (id)mediaServiceI;
- (void)reportLinkSuccess;
- (void)reportLinkJoinChannelSuccess;
- (void)reportLinkRtcStartSuccess;
- (void)onReceivedInviteCancelMessage:(id)arg0;
- (void)createWithParams:(id)arg0 autoJoinChannel:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)closeWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)cancelInviteWWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)leaveWithParams:(id)arg0 completion:(id /* block */)arg1;
- (void)resetUserState;
- (void)forceWaitingState;
- (void)resumeLinkmicLinker:(BOOL)arg0;
- (void)cleanLinkmicLinker;
- (void)needUpdateMediaExtInfo;
- (void)startInteractStream;
- (void)updateRtcExtInfo:(id)arg0 liveCoreExtInfo:(id)arg1;
- (void)setLinkerConfig:(id)arg0;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (void).cxx_destruct;
- (BOOL)isConnected;
- (id)initWithConfig:(id)arg0;
- (void)clean;

@end
