//
//     Generated by private class-dump
//

@class IESLiveAssetReaderOutput, IESLiveVideoGiftResourceModel, NSString, NSObject, MTKView;
@protocol MTLTexture, MTLBuffer, OS_dispatch_queue, IESLiveVideoSRHandlerAction, OS_dispatch_source, MTLCommandQueue, MTLRenderPipelineState;

@interface IESLiveMetalRenderer : NSObject <MTKViewDelegate> {
    BOOL _useDrawTimer;
    BOOL _enableVideoSR;
    BOOL _asyncRenderMTKView;
    BOOL _hasRegenerate;
    BOOL _isPaused;
    BOOL _pipelineIsReady;
    BOOL _asyncSetupRenderPipeline;
    BOOL _blendingEnable;
    BOOL _hasFetchSuperOutPixelBufSize;
    id /* block */ _framePlayDurationCallBack;
    id /* block */ _frameCallBackBeforePlaying;
    id /* block */ _frameCallBackAfterPlaying;
    id /* block */ _fetchSuperOutputPixelBufferSizeCallBack;
    id /* block */ _frameCallBackAfterCmdBufCommit;
    NSObject<OS_dispatch_queue> *_mtkRenderQueue;
    double _framePlayDuration;
    unsigned long long _numVertices;
    struct __CVMetalTextureCache { } *_textureCache;
    NSObject<OS_dispatch_source> *_drawTimer;
    MTKView *_mtkView;
    id /* block */ _process;
    id /* block */ _completion;
    IESLiveAssetReaderOutput *_output;
    IESLiveVideoGiftResourceModel *_resourceModel;
    id<MTLRenderPipelineState> _videoPipelineState;
    id<MTLRenderPipelineState> _maskPipelineState;
    id<MTLCommandQueue> _commandQueue;
    id<MTLTexture> _texture;
    id<MTLBuffer> _vertices;
    id<MTLBuffer> _convertMatrix;
    id<IESLiveVideoSRHandlerAction> _bmfSRHandler;
    id<IESLiveVideoSRHandlerAction> _lensSRHandler;
    long long _srType;
    long long _srScaleMode;
    unsigned long long _nonFatalErrorReportLimitCount;
    void /* unknown type, empty encoding */ _renderPositionMultiFactor;
    void /* unknown type, empty encoding */ _viewportSize;
}

@property (nonatomic) double framePlayDuration;
@property (nonatomic) unsigned long long numVertices;
@property (nonatomic) struct __CVMetalTextureCache { } *textureCache;
@property (nonatomic) void /* unknown type, empty encoding */ viewportSize;
@property (nonatomic) BOOL hasRegenerate;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *drawTimer;
@property (nonatomic) BOOL isPaused;
@property (weak, nonatomic) MTKView *mtkView;
@property (copy, nonatomic) id /* block */ process;
@property (copy, nonatomic) id /* block */ completion;
@property (retain, nonatomic) IESLiveAssetReaderOutput *output;
@property (retain, nonatomic) IESLiveVideoGiftResourceModel *resourceModel;
@property (retain, nonatomic) id<MTLRenderPipelineState> videoPipelineState;
@property (retain, nonatomic) id<MTLRenderPipelineState> maskPipelineState;
@property (retain, nonatomic) id<MTLCommandQueue> commandQueue;
@property (retain, nonatomic) id<MTLTexture> texture;
@property (retain, nonatomic) id<MTLBuffer> vertices;
@property (retain, nonatomic) id<MTLBuffer> convertMatrix;
@property (nonatomic) BOOL pipelineIsReady;
@property (nonatomic) BOOL asyncSetupRenderPipeline;
@property (nonatomic) BOOL blendingEnable;
@property (retain, nonatomic) id<IESLiveVideoSRHandlerAction> bmfSRHandler;
@property (retain, nonatomic) id<IESLiveVideoSRHandlerAction> lensSRHandler;
@property (nonatomic) long long srType;
@property (nonatomic) long long srScaleMode;
@property (nonatomic) BOOL hasFetchSuperOutPixelBufSize;
@property (nonatomic) unsigned long long nonFatalErrorReportLimitCount;
@property (copy, nonatomic) id /* block */ framePlayDurationCallBack;
@property (copy, nonatomic) id /* block */ frameCallBackBeforePlaying;
@property (copy, nonatomic) id /* block */ frameCallBackAfterPlaying;
@property (copy, nonatomic) id /* block */ fetchSuperOutputPixelBufferSizeCallBack;
@property (copy, nonatomic) id /* block */ frameCallBackAfterCmdBufCommit;
@property (nonatomic, getter=isUsingDrawTimer) BOOL useDrawTimer;
@property (nonatomic) BOOL enableVideoSR;
@property (nonatomic) BOOL asyncRenderMTKView;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *mtkRenderQueue;
@property (nonatomic) void /* unknown type, empty encoding */ renderPositionMultiFactor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setUseDrawTimer:(BOOL)arg0;
- (void)addNotification;
- (void)setSrType:(long long)arg0;
- (long long)srType;
- (long long)srScaleMode;
- (id)bmfSRHandler;
- (id)lensSRHandler;
- (void)drawWithTimer;
- (void)drawMaskContainer:(id)arg0 sourceSize:(struct CGSize { double x0; double x1; })arg1 sourceRenderRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 preferredSourceRenderRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)arg3 yTexture:(id)arg4 uvTexture:(id)arg5 encoder:(id)arg6;
- (void)drawVideoLayer:(id)arg0 yTexture:(id)arg1 uvTexture:(id)arg2 encoder:(id)arg3;
- (id)videoVertexBufferWithLayerModel:(id)arg0;
- (void)drawInMTKView:(id)arg0 frame:(id)arg1;
- (BOOL)hasFetchSuperOutPixelBufSize;
- (id /* block */)fetchSuperOutputPixelBufferSizeCallBack;
- (void)setHasFetchSuperOutPixelBufSize:(BOOL)arg0;
- (void)drawLayerTextureWithMask:(id)arg0 yTexture:(id)arg1 uvTexture:(id)arg2 encoder:(id)arg3;
- (BOOL)pipelineIsReady;
- (void)setPipelineIsReady:(BOOL)arg0;
- (BOOL)asyncSetupRenderPipeline;
- (void)setAsyncSetupRenderPipeline:(BOOL)arg0;
- (void)setBmfSRHandler:(id)arg0;
- (void)setLensSRHandler:(id)arg0;
- (void)setSrScaleMode:(long long)arg0;
- (void)didApplicationDidEnterBackground:(id)arg0;
- (void)clearDrawTimer;
- (id)mtkRenderQueue;
- (void)setDrawTimer:(id)arg0;
- (id)drawTimer;
- (void)setFramePlayDuration:(double)arg0;
- (void)setHasRegenerate:(BOOL)arg0;
- (void)setResourceModel:(id)arg0;
- (void)setupMatrix;
- (void)setupVertex;
- (void)setupMaskResources;
- (void)setNonFatalErrorReportLimitCount:(unsigned long long)arg0;
- (double)framePlayDuration;
- (void)setupVideoPipelineWithLibrary:(id)arg0;
- (void)setupMaskPipelineWithLibrary:(id)arg0;
- (void)setVideoPipelineState:(id)arg0;
- (void)setMaskPipelineState:(id)arg0;
- (void)setConvertMatrix:(id)arg0;
- (id)resourceModel;
- (id)videoVertexBuffer;
- (id)maskPipelineState;
- (id)vertexBufferWithMask:(id)arg0 resource:(id)arg1;
- (id)convertMatrix;
- (void)_safeCheckRenderPositionMultiFactor;
- (void)didApplicationDidBecomeActive:(id)arg0;
- (id /* block */)frameCallBackBeforePlaying;
- (id)videoPipelineState;
- (BOOL)enableVideoSR;
- (id)srHandler;
- (unsigned long long)nonFatalErrorReportLimitCount;
- (void)drawMasks:(id)arg0 yTexture:(id)arg1 uvTexture:(id)arg2 encoder:(id)arg3;
- (id /* block */)frameCallBackAfterCmdBufCommit;
- (id /* block */)framePlayDurationCallBack;
- (id /* block */)frameCallBackAfterPlaying;
- (BOOL)hasRegenerate;
- (id)initWithMetalKitView:(id)arg0 configuration:(id)arg1;
- (void)renderOutput:(id)arg0 resourceModel:(id)arg1 process:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)renderMTKView;
- (void)setFramePlayDurationCallBack:(id /* block */)arg0;
- (void)setFrameCallBackBeforePlaying:(id /* block */)arg0;
- (void)setFrameCallBackAfterPlaying:(id /* block */)arg0;
- (void)setFrameCallBackAfterCmdBufCommit:(id /* block */)arg0;
- (BOOL)isUsingDrawTimer;
- (void)setEnableVideoSR:(BOOL)arg0;
- (void /* unknown type, empty encoding */)renderPositionMultiFactor;
- (void)setRenderPositionMultiFactor:(SEL)arg0;
- (BOOL)asyncRenderMTKView;
- (void)drainSampleBufferQueueAndClear;
- (void)setAsyncRenderMTKView:(BOOL)arg0;
- (void)setMtkRenderQueue:(id)arg0;
- (void)setFetchSuperOutputPixelBufferSizeCallBack:(id /* block */)arg0;
- (BOOL)blendingEnable;
- (void)setBlendingEnable:(BOOL)arg0;
- (void)setTexture:(id)arg0;
- (void)drawInMTKView:(id)arg0;
- (void)mtkView:(id)arg0 drawableSizeWillChange:(struct CGSize { double x0; double x1; })arg1;
- (id)texture;
- (void)resume;
- (id /* block */)completion;
- (void).cxx_destruct;
- (id /* block */)process;
- (void /* unknown type, empty encoding */)viewportSize;
- (void)setCompletion:(id /* block */)arg0;
- (void)setProcess:(id /* block */)arg0;
- (void)setOutput:(id)arg0;
- (id)output;
- (void)setup;
- (void)setTextureCache:(struct __CVMetalTextureCache { } *)arg0;
- (struct __CVMetalTextureCache { } *)textureCache;
- (double)currentTime;
- (BOOL)isPaused;
- (void)clear;
- (void)dealloc;
- (void)pause;
- (void)seekToTime:(double)arg0;
- (void)setIsPaused:(BOOL)arg0;
- (id)commandQueue;
- (void)setCommandQueue:(id)arg0;
- (id)mtkView;
- (void)setMtkView:(id)arg0;
- (void)setupPipeline;
- (id)vertices;
- (void)setVertices:(id)arg0;
- (void)setViewportSize:(SEL)arg0;
- (unsigned long long)numVertices;
- (void)setNumVertices:(unsigned long long)arg0;

@end
