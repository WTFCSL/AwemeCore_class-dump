//
//     Generated by private class-dump
//

@interface LynxTextLayoutManager : NSLayoutManager {
    long long _glyphCount;
    struct CGPoint { double x; double y; } _overflowOffset;
    struct CGSize { double width; double height; } _textBoundingRectSize;
    struct CGPoint { double x; double y; } _preEndPosition;
    struct _NSRange { unsigned long long location; unsigned long long length; } _preDrawableRange;
}

@property (nonatomic) struct CGPoint { double x; double y; } overflowOffset;
@property (nonatomic) struct CGSize { double width; double height; } textBoundingRectSize;
@property (nonatomic) long long glyphCount;
@property (nonatomic) struct CGPoint { double x; double y; } preEndPosition;
@property (nonatomic) struct _NSRange { unsigned long long location; unsigned long long length; } preDrawableRange;

- (struct CGSize { double x0; double x1; })textBoundingRectSize;
- (void)drawTextClipMaskWithFont:(id)arg0 glyphCount:(unsigned long long)arg1 glyphs:(const unsigned short *)arg2 maskContext:(struct CGContext { } *)arg3 mutableAttr:(id)arg4 positions:(const struct CGPoint { double x0; double x1; } *)arg5 size:(const struct CGSize { double x0; double x1; } *)arg6 textMatrix:(const struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)arg7;
- (struct CGPoint { double x0; double x1; })overflowOffset;
- (void)setOverflowOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)setTextBoundingRectSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setGlyphCount:(long long)arg0;
- (struct CGPoint { double x0; double x1; })preEndPosition;
- (void)setPreEndPosition:(struct CGPoint { double x0; double x1; })arg0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })preDrawableRange;
- (void)setPreDrawableRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0;
- (long long)glyphCount;
- (void)drawBackgroundForGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 atPoint:(struct CGPoint { double x0; double x1; })arg1;
- (void)showCGGlyphs:(const unsigned short *)arg0 positions:(const struct CGPoint { double x0; double x1; } *)arg1 count:(unsigned long long)arg2 font:(id)arg3 matrix:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg4 attributes:(id)arg5 inContext:(struct CGContext { } *)arg6;

@end
