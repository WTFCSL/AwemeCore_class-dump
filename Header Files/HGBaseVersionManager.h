//
//     Generated by private class-dump
//

@class NSString;

@interface HGBaseVersionManager : NSObject <HGBaseVersionManagerProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)installUpdatedLibIfNeed;
+ (void)downloadLibWithURL:(id)arg0 updateVersion:(id)arg1 baseVersion:(id)arg2 isForceUpdate:(BOOL)arg3 completion:(id /* block */)arg4;
+ (BOOL)isLocalSdkLowerThanVersion:(id)arg0;
+ (long long)localSDKVersion;
+ (void)resetLocalLibVersionCache;
+ (void)setupBundleVersionIfNeed;
+ (id)localLibBaseVersionString;
+ (void)setLocalTestEnable:(BOOL)arg0;
+ (void)lockJsLib:(BOOL)arg0;
+ (BOOL)localTestEnable;
+ (id)localLibVersionString;
+ (id)localSDKVersionString;
+ (void)_createUpdatingLibLock;
+ (void)cleanUpUpdatedLibFile;
+ (void)eventSdkValidation;
+ (id)_unformatedLocalLibVersionString;
+ (id)shortVersionStringWithContent:(id)arg0;
+ (id)timorInfo;
+ (long long)localLibVersion;
+ (long long)localLibBaseVersion;
+ (void)removeLocalLibUpdateVersionInfo;
+ (void)updateLibIfNeedWithCompletion:(id /* block */)arg0;
+ (void)downloadLibWithURL:(id)arg0 updateVersion:(id)arg1 baseVersion:(id)arg2 completion:(id /* block */)arg3;
+ (BOOL)localLibExisted;
+ (void)excuteAfterUnzip:(id /* block */)arg0;
+ (id)jsLibIsLock;
+ (void)clearPreloadMemoryCache;
+ (BOOL)hasUpdatedJSLib;
+ (BOOL)isUpdatingJSLib;
+ (void)setIsUpdatingJSLib:(BOOL)arg0;
+ (void)updateLibComplete:(BOOL)arg0 clearPreloadCache:(BOOL)arg1;
+ (void)eventV3WithLibEvent:(id)arg0 latestVersion:(id)arg1 resultType:(id)arg2 errMsg:(id)arg3 duration:(unsigned long long)arg4;
+ (long long)iosVersion2Int:(id)arg0;
+ (id)versionStringWithContent:(id)arg0;
+ (void)setPreloadFunctionsDisabled:(BOOL)arg0;
+ (BOOL)decodeSource:(id)arg0 toPath:(id)arg1;
+ (id)getBundleVersionString;
+ (void)initialize;
+ (BOOL)isValidVersion:(id)arg0;

@end
