//
//     Generated by private class-dump
//

@class NSString;
@protocol IESLiveTaskExcuted;

@interface IESLivePriorityQueue : NSObject <IESLiveSchedulerProtocol> {
    struct priority_queue<IESLiveTask, std::vector<IESLiveTask>, IESLiveCMP> { struct vector<IESLiveTask, std::allocator<IESLiveTask>> { struct IESLiveTask *__begin_; struct IESLiveTask *__end_; struct __compressed_pair<IESLiveTask *, std::allocator<IESLiveTask>> { struct IESLiveTask *__value_; } __end_cap_; } c; struct IESLiveCMP { } comp; } _queue;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _lock;
    id<IESLiveTaskExcuted> _observer;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)executeTask;
- (void)addTask:(id /* block */)arg0 priority:(long long)arg1;
- (void)addTask:(id /* block */)arg0 name:(id)arg1 identifer:(id)arg2 priority:(long long)arg3;
- (struct IESLiveTask { id /* block */ x0; unsigned long long x1; double x2; id x3; id x4; })topTask;
- (id)initWihExcuted:(id)arg0;
- (BOOL)empty;
- (id)init;
- (void).cxx_destruct;
- (void)setup;
- (long long)size;
- (void)dealloc;
- (id).cxx_construct;
- (void)clearTasks;

@end
