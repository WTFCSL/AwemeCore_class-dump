//
//     Generated by private class-dump
//

@class AWESearchAutoPlayHandler, NSArray, NSString, UIView;
@protocol AWESearchAutoPlayCardProtocol;

@interface AWESearchGeneralSearchDoubleColumnPlayRule : NSObject <AWESearchAutoPlayRuleProtocol> {
    BOOL _isActive;
    BOOL _disableDoubleColumnCard;
    AWESearchAutoPlayHandler *_handler;
    UIView<AWESearchAutoPlayCardProtocol> *_wantToActiveCard;
    double _topActiveRedio;
    double _bottomActiveRedio;
    NSArray *_playQueue;
    double _speedLimit;
    UIView<AWESearchAutoPlayCardProtocol> *_singleCard;
    double _outOfPageInactiveRatio;
    double _balance;
}

@property (nonatomic) BOOL isActive;
@property (nonatomic) double topActiveRedio;
@property (nonatomic) double bottomActiveRedio;
@property (retain, nonatomic) NSArray *playQueue;
@property (nonatomic) BOOL disableDoubleColumnCard;
@property (nonatomic) double speedLimit;
@property (weak, nonatomic) UIView<AWESearchAutoPlayCardProtocol> *singleCard;
@property (nonatomic) double outOfPageInactiveRatio;
@property (nonatomic) double balance;
@property (weak, nonatomic) UIView<AWESearchAutoPlayCardProtocol> *wantToActiveCard;
@property (weak, nonatomic) AWESearchAutoPlayHandler *handler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)getAutoPlayViewFromViews:(id)arg0 inContainer:(id)arg1 contentOffset:(struct CGPoint { double x0; double x1; })arg2 directionPoint:(struct CGPoint { double x0; double x1; })arg3 speedPoint:(struct CGPoint { double x0; double x1; })arg4;
- (void)setDisableDoubleColumnCard:(BOOL)arg0;
- (void)setTopActiveRedio:(double)arg0;
- (void)setBottomActiveRedio:(double)arg0;
- (void)setOutOfPageInactiveRatio:(double)arg0;
- (double)bottomActiveRedio;
- (double)topActiveRedio;
- (BOOL)disableDoubleColumnCard;
- (double)outOfPageInactiveRatio;
- (id)singleCard;
- (void)setPlayQueue:(id)arg0;
- (id)wantToActiveCard;
- (void)setWantToActiveCard:(id)arg0;
- (BOOL)shouldNotActiveWithCard:(id)arg0;
- (BOOL)p_playQueue:(id)arg0 ContainsCard:(id)arg1;
- (void)setSingleCard:(id)arg0;
- (id)playQueue;
- (long long)p_cardIndexInPlayQueue:(id)arg0;
- (BOOL)p_isCard1:(id)arg0 equalToCard2:(id)arg1;
- (void)currentCardPlayEnded;
- (void)becomeActive;
- (id)init;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (double)speedLimit;
- (void)resignActive;
- (void)setBalance:(double)arg0;
- (void)applicationWillResignActive;
- (void)setHandler:(id)arg0;
- (void)setSpeedLimit:(double)arg0;
- (BOOL)isActive;
- (id)handler;
- (double)balance;
- (void)applicationDidBecomeActive;
- (unsigned long long)ruleType;
- (void)addObservers;

@end
