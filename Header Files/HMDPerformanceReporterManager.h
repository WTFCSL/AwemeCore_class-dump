//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, NSTimer, HMDServerStateChecker, NSObject, HMDDoubleReporter;
@protocol OS_dispatch_queue;

@interface HMDPerformanceReporterManager : NSObject <HMDURLProvider, HMDPerformanceReporterCheckPointProtocol, HMDDoubleReporterDelegate> {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _rwlock;
    BOOL _isUploading;
    BOOL _needEncrypt;
    unsigned long long _maxRetryTimes;
    unsigned long long _reportFailBaseInterval;
    NSMutableDictionary *_reporters;
    double _reportPollingInterval;
    NSTimer *_autoReportTimer;
    NSObject<OS_dispatch_queue> *_reportorQueue;
    HMDDoubleReporter *_doubleReporter;
    HMDServerStateChecker *_serverStateChecker;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *reporters;
@property (nonatomic) double reportPollingInterval;
@property (retain, nonatomic) NSTimer *autoReportTimer;
@property BOOL isUploading;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *reportorQueue;
@property (retain, nonatomic) HMDDoubleReporter *doubleReporter;
@property (retain, nonatomic) HMDServerStateChecker *serverStateChecker;
@property (nonatomic) BOOL needEncrypt;
@property (nonatomic) unsigned long long maxRetryTimes;
@property (nonatomic) unsigned long long reportFailBaseInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;

- (void)cleanupWithConfig:(id)arg0;
- (id)URLHostProviderConfigHosts:(id)arg0;
- (id)URLHostProviderInjectedHosts:(id)arg0;
- (id)URLHostProviderDefaultHosts:(id)arg0;
- (BOOL)needEncrypt;
- (id)allDebugRealPeformanceDataWithConfig:(id)arg0;
- (void)reportDebugRealPerformanceDataWithConfig:(id)arg0;
- (void)addReporter:(id)arg0 withAppID:(id)arg1;
- (void)updateConfig:(id)arg0 withAppID:(id)arg1;
- (void)removeReportModule:(id)arg0 withAppID:(id)arg1;
- (void)addReportModule:(id)arg0 withAppID:(id)arg1;
- (void)reportPerformanceDataAfterInitializeWithAppID:(id)arg0 block:(id /* block */)arg1;
- (void)updateRecordCount:(long long)arg0 withAppID:(id)arg1;
- (id)URLPathProviderURLPath:(id)arg0;
- (void)setNeedEncrypt:(BOOL)arg0;
- (unsigned long long)reportFailBaseInterval;
- (void)setReportFailBaseInterval:(unsigned long long)arg0;
- (void)setIsUploading:(BOOL)arg0;
- (void)reportOTDataWithReporter:(id)arg0 block:(id /* block */)arg1;
- (void)reportImmediatelyPerformanceCacheDataWithAppID:(id)arg0 block:(id /* block */)arg1;
- (void)triggerAllReporterUpload;
- (void)doubleUploadNetworkRecordArray:(id)arg0 toURLString:(id)arg1;
- (void)handleBackgroundNotification:(id)arg0;
- (id)performanceDataWithDowngradeFilter:(id)arg0;
- (id)_getReporterSafeWithAppID:(id)arg0;
- (id)autoReportTimer;
- (void)setAutoReportTimer:(id)arg0;
- (void)setMaxRetryTimes:(unsigned long long)arg0;
- (id)doubleReporter;
- (double)reportPollingInterval;
- (void)setReportPollingInterval:(double)arg0;
- (void)reportPerformanceDataAsyncWithAppID:(id)arg0 block:(id /* block */)arg1;
- (id)reportorQueue;
- (void)autoReportPerformanceData:(id)arg0;
- (void)resetFlushTimer;
- (id)_getHostAppID;
- (void)_reportPerformanceDataIfAllowedWithAppID:(id)arg0 reporterType:(unsigned long long)arg1 singleReporter:(id)arg2 block:(id /* block */)arg3;
- (void)stopCollectFlushTimer;
- (void)startCollectFlushTimer;
- (id)serverStateChecker;
- (void)_reportPerformanceDataWithBlock:(id /* block */)arg0 reporterType:(unsigned long long)arg1 singleReporter:(id)arg2 appID:(id)arg3;
- (void)_recordPerformanceReportMemoryBefore;
- (id)_bodyDataFromReporter:(id)arg0 andProvider:(id)arg1 addedModules:(id)arg2 reporterType:(unsigned long long)arg3 maybeMoreData:(BOOL *)arg4 reporterMaxCount:(long long *)arg5 eventLog:(id *)arg6;
- (void)_recordPerfomanceReportMemoryAfterWithModules:(id)arg0;
- (void)excuteCloudCommandIfAvailable:(id)arg0 ran:(id)arg1;
- (unsigned long long)checkErrorCodeAndDebugRealWithResponse:(id)arg0 statusCode:(long long)arg1 addedReporters:(id)arg2 addedModules:(id)arg3 hmdreporter:(unsigned long long)arg4 appID:(id)arg5;
- (id)_dataArrayForImmediatelyUploadeWithAddedMoudle:(id)arg0 modules:(id)arg1;
- (id)_dataArrayForNormalReportWithAddedMoudle:(id)arg0 modules:(id)arg1 maybeMoreData:(BOOL *)arg2 reporterMaxCount:(long long)arg3 reporter:(id)arg4;
- (id)_eventDataSequenceNumberRange:(id)arg0 eventCount:(long long *)arg1;
- (long long)_accumulationOfEventDataWithAppID:(id)arg0;
- (id)_metricCountForNormalReportWithAddedMoudle:(id)arg0 modules:(id)arg1;
- (id)_metricTimerForNormalReportWithAddedMoudle:(id)arg0 modules:(id)arg1;
- (void)_reportDebugRealPerformanceDataWithConfig:(id)arg0;
- (BOOL)checkServerAvailable;
- (void)reportDataWithReporter:(id)arg0 block:(id /* block */)arg1;
- (void)reportPerformanceDataAsyncWithSizeLimitedReporter:(id)arg0 block:(id /* block */)arg1;
- (unsigned long long)maxRetryTimes;
- (void)setReportorQueue:(id)arg0;
- (void)setDoubleReporter:(id)arg0;
- (void)setServerStateChecker:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (BOOL)isUploading;
- (BOOL)shouldEncrypt;
- (id)reporters;
- (void)setReporters:(id)arg0;

@end
