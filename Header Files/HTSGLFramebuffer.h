//
//     Generated by private class-dump
//

@class IESMMSampleBufferInfo, NSString, _HTSFramebuffer, NSLock, HTSGLContext;

@interface HTSGLFramebuffer : NSObject {
    BOOL _disableCache;
    BOOL _enableRenderLib;
    BOOL _useRectangle;
    NSString *_lookupHash;
    long long _sourceID;
    NSString *_filterID;
    long long _videoTrackId;
    IESMMSampleBufferInfo *_sampleInfo;
    unsigned long long _framebufferReferenceCount;
    NSLock *_refLock;
    _HTSFramebuffer *_innerFramebuffer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _realFramePts;
}

@property unsigned long long framebufferReferenceCount;
@property (retain, nonatomic) NSLock *refLock;
@property (nonatomic) BOOL enableRenderLib;
@property (retain, nonatomic) _HTSFramebuffer *innerFramebuffer;
@property (nonatomic) BOOL useRectangle;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } size;
@property (readonly, nonatomic) unsigned int textureId;
@property (retain, nonatomic) NSString *lookupHash;
@property (readonly, nonatomic) HTSGLContext *context;
@property (readonly, nonatomic) BOOL disableCache;
@property (nonatomic) long long sourceID;
@property (retain, nonatomic) NSString *filterID;
@property (nonatomic) long long videoTrackId;
@property (readonly, nonatomic) long long sizeByte;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } realFramePts;
@property (retain, nonatomic) IESMMSampleBufferInfo *sampleInfo;

+ (id)hashForSize:(struct CGSize { double x0; double x1; })arg0 onlyTexture:(BOOL)arg1 textureColorType:(unsigned long long)arg2 needsRLContext:(BOOL)arg3 useRectangle:(BOOL)arg4;
+ (int)instanceCount;

- (void)setFilterID:(id)arg0;
- (void)setVideoTrackId:(long long)arg0;
- (long long)videoTrackId;
- (id)sampleInfo;
- (struct CGImage { } *)newCGImageFromFramebufferContents;
- (void)unlockAfterReading;
- (long long)getFramebufferReferenceCount;
- (void)restoreRenderTarget;
- (char *)byteBuffer;
- (unsigned long long)framebufferReferenceCount;
- (void)setLookupHash:(id)arg0;
- (void)clearAllLocks;
- (id)lookupHash;
- (void)activateFramebuffer;
- (id)initWithExternalFramebuffer:(id)arg0;
- (void)clearAllAttachments;
- (id)getInnerFramebuffer;
- (BOOL)enableRenderLib;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 onlyTexture:(BOOL)arg1;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 onlyTexture:(BOOL)arg1 disableCache:(BOOL)arg2;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 onlyTexture:(BOOL)arg1 disableCache:(BOOL)arg2 context:(id)arg3;
- (void)setUseRectangle:(BOOL)arg0;
- (BOOL)useRectangle;
- (void)uploadImageData:(void *)arg0 withFilterType:(unsigned long long)arg1;
- (id)innerFramebuffer;
- (void)activateFramebuffer:(int)arg0 offsetY:(int)arg1 width:(int)arg2 height:(int)arg3;
- (struct CGImage { } *)newCGImageFromFramebufferContentsWithColorSpace:(struct __CFString { } *)arg0;
- (struct CGImage { } *)newCGImageFromFramebufferContentsWithColorSpace:(struct __CFString { } *)arg0 needAlpha:(BOOL)arg1;
- (BOOL)newRawImageDataFromFramebufferContents:(char *)arg0 requiredWidth:(int)arg1 requiredHeight:(int)arg2;
- (BOOL)imageDataResample:(char *)arg0 withDest:(char *)arg1 withDstWidth:(int)arg2 withDstHeight:(int)arg3;
- (void *)rlReMapRenderingInfoTexture:(BOOL)arg0;
- (unsigned int)getFrameBufferId;
- (void *)rlRenderingInfoMTLTexture;
- (void)setTextureFilterType:(unsigned long long)arg0;
- (void)clearTextureWithRed:(float)arg0 green:(float)arg1 blue:(float)arg2 alpha:(float)arg3;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 disableCache:(BOOL)arg1;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 onlyTexture:(BOOL)arg1 disableCache:(BOOL)arg2 useRectangle:(BOOL)arg3 context:(id)arg4;
- (long long)sizeByte;
- (unsigned long long)getTextureColorType;
- (void)setFramebufferReferenceCount:(unsigned long long)arg0;
- (id)refLock;
- (void)setRefLock:(id)arg0;
- (void)setEnableRenderLib:(BOOL)arg0;
- (void)setInnerFramebuffer:(id)arg0;
- (id)initWithPixelBuffer:(struct __CVBuffer { } *)arg0 context:(id)arg1;
- (void)downloadImageData:(void *)arg0;
- (void)uploadImageData:(void *)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })realFramePts;
- (void)setRealFramePts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)deActivateFramebuffer;
- (void *)rlRenderingInfo;
- (void)setSampleInfo:(id)arg0;
- (void *)rlRenderingInfoTexture;
- (long long)sourceID;
- (void)unlock;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0;
- (void).cxx_destruct;
- (struct __CVBuffer { } *)pixelBuffer;
- (id)initWithConfig:(id)arg0;
- (id)debugDescription;
- (void)lock;
- (id)context;
- (void)setSourceID:(long long)arg0;
- (struct CGSize { double x0; double x1; })size;
- (BOOL)disableCache;
- (void)dealloc;
- (void *)device;
- (void)lockForReading;
- (id)filterID;
- (unsigned long long)bytesPerRow;
- (unsigned int)textureId;
- (void)unlock:(BOOL)arg0;

@end
