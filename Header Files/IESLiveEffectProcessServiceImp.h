//
//     Generated by private class-dump
//

@class NSLock, NSMutableDictionary, NSString, IESLiveEffectConflictProcessModel, IESEffectModel, NSObject, NSMutableSet;
@protocol OS_dispatch_queue, IESLiveVideoEffectProcessing, IESLiveAudioEffectProcessing;

@interface IESLiveEffectProcessServiceImp : NSObject <IESLiveEffectProcessService> {
    NSMutableDictionary *_sceneSubScreenDict;
    id<IESLiveVideoEffectProcessing> _effectProcesser;
    id<IESLiveAudioEffectProcessing> _audioEffectProcesser;
    NSMutableDictionary *_videoModelDict;
    IESEffectModel *_audioModel;
    IESLiveEffectConflictProcessModel *_conflictModel;
    NSMutableSet *_enableFakeFaceEffects;
    NSMutableDictionary *_sceneStatus;
    NSMutableDictionary *_statusSubscriber;
    NSLock *_conflictDataLock;
    NSLock *_effectDataLock;
    NSLock *_subScreenLock;
}

@property (nonatomic) long long sequence;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *monitorQueue;
@property (retain, nonatomic) NSMutableDictionary *sceneSubScreenDict;
@property (retain, nonatomic) id<IESLiveVideoEffectProcessing> effectProcesser;
@property (retain, nonatomic) id<IESLiveAudioEffectProcessing> audioEffectProcesser;
@property (retain, nonatomic) NSMutableDictionary *videoModelDict;
@property (retain, nonatomic) IESEffectModel *audioModel;
@property (retain, nonatomic) IESLiveEffectConflictProcessModel *conflictModel;
@property (retain, nonatomic) NSMutableSet *enableFakeFaceEffects;
@property (retain, nonatomic) NSMutableDictionary *sceneStatus;
@property (retain, nonatomic) NSMutableDictionary *statusSubscriber;
@property (retain, nonatomic) NSLock *conflictDataLock;
@property (retain, nonatomic) NSLock *effectDataLock;
@property (retain, nonatomic) NSLock *subScreenLock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)audioModel;
- (void)setAudioModel:(id)arg0;
- (void *)getEffectHandle;
- (BOOL)handleTouchDown:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handleTouchUp:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handlePanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 location:(struct CGPoint { double x0; double x1; })arg1;
- (BOOL)handleLongPressEventWithLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)handleScaleEvent:(double)arg0;
- (BOOL)handleEffectTouchEvent:(struct CGPoint { double x0; double x1; })arg0 pointerId:(unsigned int)arg1 force:(float)arg2 majorRadius:(float)arg3 eventType:(unsigned long long)arg4 pointerCount:(int)arg5;
- (int)setRenderCacheStringValue:(id)arg0 jsonStr:(id)arg1;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2 userInfo:(id)arg3;
- (void)switchFilterWithLeftPath:(id)arg0 rightPath:(id)arg1 progress:(double)arg2;
- (void)applyEffect:(id)arg0 type:(long long)arg1 enableFakeFace:(BOOL)arg2;
- (void)switchFilterWithLeftPath:(id)arg0 rightPath:(id)arg1 progress:(double)arg2 leftIntensity:(float)arg3 rightIntensity:(float)arg4;
- (void)sendMessage:(unsigned long long)arg0 type:(long long)arg1;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 type:(long long)arg2;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2 type:(long long)arg3;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2 userInfo:(id)arg3 type:(long long)arg4;
- (void)requireNewLayoutUpdate:(id)arg0;
- (void)unRegisterVideoFrameRender:(id)arg0;
- (void)applyFilterWithPath:(id)arg0;
- (void)setSceneStatus:(id)arg0;
- (id)sceneStatus;
- (void)processerDidLoad;
- (void)setEnableEffect:(BOOL)arg0 scene:(long long)arg1;
- (void)setMaxStickerMemoryCache:(unsigned long long)arg0 scene:(long long)arg1;
- (void)setEffectRenderCacheTextureWithImage:(id)arg0 algorithmType:(id)arg1 scene:(long long)arg2;
- (void)enableFakeFace:(BOOL)arg0 scene:(long long)arg1;
- (void)enableStickerCloudRender:(BOOL)arg0 scene:(long long)arg1;
- (long long)getCurrentFaceCount;
- (void)setEffectRenderMsgHandler;
- (void)setComposerMode:(int)arg0 orderType:(int)arg1 scene:(long long)arg2;
- (id)getCurrentVideoEffectList;
- (id)getCurrentAudioEffect;
- (id)getCurrentSceneEffectList:(long long)arg0;
- (id)getCurrentSceneAppliedEffectList:(long long)arg0;
- (id)appliedTagsForEffect:(id)arg0;
- (id)intensityForEffect:(id)arg0 tag:(id)arg1;
- (id)sceneEffectModel;
- (BOOL)isEffectApplied:(id)arg0;
- (void)resetEffectCostStatistics:(long long)arg0;
- (id)getEffectCostStatistics;
- (void)applyEffectList:(id)arg0 enableFakeFace:(BOOL)arg1 scene:(long long)arg2;
- (void)updateEffect:(id)arg0 tag:(id)arg1 value:(double)arg2 scene:(long long)arg3;
- (void)removeEffectList:(id)arg0 scene:(long long)arg1;
- (void)removeEffectList:(id)arg0 tags:(id)arg1 scene:(long long)arg2;
- (void)reloadEffectList:(id)arg0 scene:(long long)arg1;
- (void)removeAllEffectWithScene:(long long)arg0;
- (void)applyEffectKey:(id)arg0 image:(id)arg1 scene:(long long)arg2;
- (void)applyAudioEffect:(id)arg0 scene:(long long)arg1;
- (void)removeAudioEffect:(id)arg0 scene:(long long)arg1;
- (void)setEchoAudioEffectEnable:(BOOL)arg0 scene:(long long)arg1;
- (void)pauseEffect:(long long)arg0 scene:(long long)arg1;
- (void)resumeEffect:(long long)arg0 scene:(long long)arg1;
- (void)setEffectMessageBlock:(id /* block */)arg0 scene:(long long)arg1;
- (void)sendMessage:(unsigned long long)arg0 param1:(unsigned long long)arg1 param2:(unsigned long long)arg2 userInfo:(id)arg3 type:(long long)arg4 scene:(long long)arg5;
- (void)createSubSreenRender:(long long)arg0;
- (void)startSubSreenRender:(long long)arg0;
- (void)stopSubScreenRender:(long long)arg0;
- (void)closeSubScreen:(long long)arg0;
- (void)resetSubScreenRenderView:(id)arg0 scene:(long long)arg1;
- (void)setSubScreenEffects:(id)arg0 scene:(long long)arg1 effectConfig:(id)arg2;
- (void)updateSubScreenEffect:(long long)arg0 effect:(id)arg1 tag:(id)arg2 value:(double)arg3;
- (void)switchEffectRenderModel:(id)arg0 jsonConfig:(id)arg1 scene:(long long)arg2;
- (void)switchEffectRenderModel:(id)arg0 numberConfig:(int)arg1 scene:(long long)arg2;
- (void)setRenderFilterEnable:(BOOL)arg0;
- (BOOL)renderFilterIsEnable;
- (void)renderSetMixOutput:(int)arg0 height:(int)arg1;
- (int)registerVideoFrameRender:(id)arg0 preview:(id)arg1;
- (void)subscribeRenderFilterEffectMessage;
- (id)getRenderFilterComposerNode;
- (void)transToLiveStatus;
- (void)subscribeStatusForScene:(long long)arg0 observer:(id)arg1;
- (void)subscribeStatusForScenes:(id)arg0 observer:(id)arg1;
- (BOOL)sceneConflictRepelValue:(long long)arg0 scene:(long long)arg1;
- (id)effectKey:(id)arg0;
- (void)applyFilterWithPath:(id)arg0 intensity:(double)arg1;
- (id)effectProcesser;
- (void)setEffectProcesser:(id)arg0;
- (BOOL)isMonitorEnable;
- (void)monitorAnchorEvent:(id)arg0 value:(id)arg1 forScene:(long long)arg2;
- (void)monitorHMDInfo:(id)arg0 event:(id)arg1 forScene:(long long)arg2;
- (id)resolveEffectModel:(id)arg0 effectKeyBlock:(id /* block */)arg1;
- (void)updateHMDInfo:(id)arg0 forKey:(id)arg1 isApply:(BOOL)arg2;
- (void)configMonitorParams;
- (void)monitorAction:(long long)arg0 event:(id)arg1 value:(id)arg2;
- (void)monitorEffectList:(id)arg0 event:(id)arg1;
- (void)dispatchMonitorActionToQueue:(id /* block */)arg0;
- (void)setupConflictModel;
- (id)conflictModel;
- (void)setConflictModel:(id)arg0;
- (BOOL)isRendFilterScene:(long long)arg0;
- (id)effectDataLock;
- (id)videoModelDict;
- (id)conflictDataLock;
- (id)enableFakeFaceEffects;
- (void)handleConflictResult:(id)arg0 applyEffects:(id)arg1 removeEffects:(id)arg2;
- (id)getEffectResourcePath:(id)arg0;
- (id)getFilePathWithEffectList:(id)arg0 actionType:(id)arg1;
- (id)audioEffectProcesser;
- (id)subScreenLock;
- (id)sceneSubScreenDict;
- (id)statusSubscriber;
- (void)processApplyEffectList:(id)arg0 enableFakeFace:(BOOL)arg1;
- (void)processRemoveEffectList:(id)arg0;
- (void)setSceneSubScreenDict:(id)arg0;
- (void)setAudioEffectProcesser:(id)arg0;
- (void)setVideoModelDict:(id)arg0;
- (void)setEnableFakeFaceEffects:(id)arg0;
- (void)setStatusSubscriber:(id)arg0;
- (void)setConflictDataLock:(id)arg0;
- (void)setEffectDataLock:(id)arg0;
- (void)setSubScreenLock:(id)arg0;
- (id)init;
- (void)setSequence:(long long)arg0;
- (long long)sequence;
- (void)sendMessage:(unsigned long long)arg0;
- (void).cxx_destruct;
- (BOOL)handleTouchEvent:(struct CGPoint { double x0; double x1; })arg0;
- (id)monitorQueue;
- (void)setMonitorQueue:(id)arg0;
- (BOOL)handleRotationEvent:(double)arg0;

@end
