//
//     Generated by private class-dump
//

@class VEFPSCalculator, NSThread, NSString, NSCondition, NSMutableArray, NSObject;
@protocol OS_dispatch_queue, VEFrameRateSignalReceiver, OS_dispatch_semaphore;

@interface VEAsyncDispatchUnit : VEUnitObject <VEProcessSampleDelegate> {
    BOOL _enableGCD;
    NSString *route;
    id<VEFrameRateSignalReceiver> _signalReceiver;
    NSObject<OS_dispatch_queue> *_queue;
    NSThread *_thread;
    NSMutableArray *_sampleDataQueue;
    NSCondition *_condition;
    unsigned long long _maxCacheCount;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    VEFPSCalculator *_fpsCalculator;
}

@property (nonatomic) BOOL enableGCD;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSThread *thread;
@property (retain, nonatomic) NSMutableArray *sampleDataQueue;
@property (retain, nonatomic) NSCondition *condition;
@property (nonatomic) unsigned long long maxCacheCount;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore;
@property (retain, nonatomic) VEFPSCalculator *fpsCalculator;
@property (weak, nonatomic) id<VEFrameRateSignalReceiver> signalReceiver;
@property (retain, nonatomic) NSString *route;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (unsigned long long)maxCacheCount;
- (void)setMaxCacheCount:(unsigned long long)arg0;
- (void)setFpsCalculator:(id)arg0;
- (id)fpsCalculator;
- (id)initWithEnableGCD:(BOOL)arg0;
- (void)setEnableGCD:(BOOL)arg0;
- (BOOL)enableGCD;
- (void)dequeueSampleData;
- (id)signalReceiver;
- (void)clearCacheFrames;
- (void)setSignalReceiver:(id)arg0;
- (BOOL)processSampleData:(id)arg0;
- (id)sampleDataQueue;
- (void)setSampleDataQueue:(id)arg0;
- (id)condition;
- (id)init;
- (id)semaphore;
- (void).cxx_destruct;
- (id)route;
- (void)setSemaphore:(id)arg0;
- (void)setRoute:(id)arg0;
- (id)thread;
- (void)setCondition:(id)arg0;
- (id)queue;
- (void)dealloc;
- (void)setQueue:(id)arg0;
- (void)setThread:(id)arg0;
- (void)stopThread;

@end
