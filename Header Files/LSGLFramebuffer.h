//
//     Generated by private class-dump
//

@class NSString, NSDictionary, LSGLContext, NSNumber, CIContext;

@interface LSGLFramebuffer : NSObject {
    unsigned int framebuffer;
    struct __CVBuffer { } *renderTarget;
    struct __CVBuffer { } *renderTexture;
    unsigned long long readLockCount;
    unsigned long long framebufferReferenceCount;
    BOOL referenceCountingDisabled;
    BOOL useOutPixelBuffer;
    CIContext *_ciContext;
    BOOL _missingFramebuffer;
    BOOL _bindPixBuffer;
    BOOL _isAux;
    BOOL _isSubFrame;
    unsigned int _texture;
    NSString *_lookupHash;
    NSNumber *_lookupHashNumber;
    LSGLContext *_context;
    long long _sourceID;
    NSString *_filterID;
    NSString *_key;
    NSDictionary *_subFramesMap;
    struct CGSize { double width; double height; } _size;
    struct LSGPUTextureOptions { unsigned int minFilter; unsigned int magFilter; unsigned int wrapS; unsigned int wrapT; unsigned int internalFormat; unsigned int format; unsigned int type; unsigned int bind; } _textureOptions;
}

@property (nonatomic) BOOL isSubFrame;
@property (retain, nonatomic) NSDictionary *subFramesMap;
@property (readonly) struct CGSize { double width; double height; } size;
@property (readonly) struct LSGPUTextureOptions { unsigned int minFilter; unsigned int magFilter; unsigned int wrapS; unsigned int wrapT; unsigned int internalFormat; unsigned int format; unsigned int type; unsigned int bind; } textureOptions;
@property (nonatomic) unsigned int texture;
@property (readonly) BOOL missingFramebuffer;
@property (readonly) BOOL bindPixBuffer;
@property (retain, nonatomic) NSString *lookupHash;
@property (retain, nonatomic) NSNumber *lookupHashNumber;
@property (readonly) LSGLContext *context;
@property (nonatomic) long long sourceID;
@property (retain, nonatomic) NSString *filterID;
@property (nonatomic) BOOL isAux;
@property (copy, nonatomic) NSString *key;

- (void)setFilterID:(id)arg0;
- (struct LSGPUTextureOptions { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; })textureOptions;
- (id)subFrameForIndex:(int)arg0;
- (struct CGImage { } *)newCGImageFromFramebufferContents;
- (void)generateTexture;
- (void)generateFramebufferWithPixelbuffer:(BOOL)arg0;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 textureOptions:(struct LSGPUTextureOptions { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; })arg1 onlyTexture:(BOOL)arg2;
- (id)subFramesMap;
- (void)setIsSubFrame:(BOOL)arg0;
- (void)setSubFramesMap:(id)arg0;
- (void)destroyFramebuffer;
- (void)unlockAfterReading;
- (struct __CVBuffer { } *)getCVPixelBufferFromTexture;
- (long long)getFramebufferReferenceCount;
- (void)enableReferenceCounting;
- (void)restoreRenderTarget;
- (char *)byteBuffer;
- (BOOL)missingFramebuffer;
- (BOOL)bindPixBuffer;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 textureOptions:(struct LSGPUTextureOptions { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; })arg1 onlyTexture:(BOOL)arg2 usePixelbuffer:(BOOL)arg3 context:(id)arg4;
- (void)setLookupHashNumber:(id)arg0;
- (void)setLookupHash:(id)arg0;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 textureOptions:(struct LSGPUTextureOptions { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; })arg1 onlyTexture:(BOOL)arg2 context:(id)arg3;
- (void)clearAllLocks;
- (BOOL)isSubFrame;
- (id)lookupHashNumber;
- (id)lookupHash;
- (void)setIsAux:(BOOL)arg0;
- (BOOL)isAux;
- (void)activateFramebuffer;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0 texture:(int)arg1 context:(id)arg2;
- (void)disableReferenceCounting;
- (void)setTexture:(unsigned int)arg0;
- (long long)sourceID;
- (void)unlock;
- (id)key;
- (id)initWithSize:(struct CGSize { double x0; double x1; })arg0;
- (unsigned int)texture;
- (void).cxx_destruct;
- (struct __CVBuffer { } *)pixelBuffer;
- (void)setKey:(id)arg0;
- (void)lock;
- (id)context;
- (void)setSourceID:(long long)arg0;
- (struct CGSize { double x0; double x1; })size;
- (void)dealloc;
- (void)lockForReading;
- (id)filterID;
- (unsigned long long)bytesPerRow;
- (void)setPixelBuffer:(struct __CVBuffer { } *)arg0;
- (void)generateFramebuffer;

@end
