//
//     Generated by private class-dump
//

@class NSMutableDictionary, IESLivePKAutoMatchModel, IESLiveMultiChannelInfo, IESLivePKUser, BattleAutoMatchResult_ResponseData, NSDictionary, IESLivePKStreamRatio, VoteSetting, IESLivePKMatchBellModel, SpecifyGiftConfig, CustomConfig, IESLiveRevenueInteractPreStreamModel, NSString, IESLiveIntercomCommentConfig, HTSLiveIntercomChangeSyncData, IESLiveInteractiveMediaService, BattleSelfData, IESLivePKInviteeListItem, NSArray, NSNumber;

@interface IESLivePKModel : IESLiveDynamicModel {
    BOOL _disableOppositeMic;
    BOOL _isShowAudienceIntercomComment;
    BOOL _isShowAnchorIntercomComment;
    BOOL _isTransforming;
    BOOL _isFromTransform;
    BOOL _isPicoVRStream;
    BOOL _initiativeEnd;
    BOOL _isFeedback;
    BOOL _needShowLastResult;
    BOOL _isLastResultShown;
    BOOL _needShowExplainCard;
    BOOL _hasEcommerceRoom;
    BOOL _removeBusinessJoinChannel;
    BOOL _useMultiChannel;
    BOOL _needShowInteractScore;
    BOOL _isInteractScoreShow;
    BOOL _silenceOppositeAudioVolume;
    BOOL _hasAlreadyCutShortFinish;
    BOOL _ownWithAudience;
    BOOL _oppositeWithAudience;
    BOOL _isGuestConnect;
    BOOL _isCustomPKFromEdit;
    BOOL _isVoteMatchUp;
    BOOL _canShowRematchGuideView;
    BOOL _forbidOthersInvite;
    BOOL _forbidOthersApply;
    BOOL _defaultLargeLayoutTurnon;
    BOOL _isRelationshipExpansion;
    BOOL _isFromAutoMatchInvite;
    BOOL _supportMultiInvite;
    BOOL _forwardStreamBlocked;
    BOOL _isMultiInvite;
    int _interactPlayMode;
    int _authRole;
    int _inviteStatus;
    IESLivePKMatchBellModel *_matchBellModel;
    NSString *_theme;
    NSNumber *_channelID;
    unsigned long long _interactDuration;
    NSMutableDictionary *_oppositeUIDToSignExtra;
    NSNumber *_pkDuration;
    NSNumber *_voteDuration;
    unsigned long long _inviteReplyTrigger;
    NSDictionary *_multiRtcExtraInfo;
    NSDictionary *_liveCoreExtraInfo;
    NSDictionary *_multiLiveCoreExtraInfo;
    IESLiveMultiChannelInfo *_multiChannelInfo;
    NSString *_requestPage;
    double _remainTimeIntervalTimeStamp;
    unsigned long long _mixStreamingSource;
    IESLiveIntercomCommentConfig *_intercomConfig;
    NSArray *_feedbackReasons;
    long long _currentPlayTimes;
    double _preferredEcommerceContainerHeight;
    id /* block */ _ecommerceContainerCompleteBlock;
    IESLivePKUser *_ownUser;
    IESLivePKUser *_oppositeUser;
    long long _ownGuestCount;
    long long _oppositeGuestCount;
    NSString *_inviteRejectTemporaryText;
    HTSLiveIntercomChangeSyncData *_intercomMessageModel;
    BattleSelfData *_pkCustomSettingData;
    NSString *_revenueInteractSource;
    long long _fromStatus;
    long long _peakForbidState;
    VoteSetting *_voteSetting;
    NSString *_kickedUsersUniqueId;
    NSString *_battleAttachedInfo;
    SpecifyGiftConfig *_specifyGiftConfig;
    unsigned long long _pkPanelStyle;
    CustomConfig *_customConfigNew;
    NSString *_connectionType;
    long long _connectionOverReason;
    long long _actionFromSource;
    NSString *_actionFromSourceStr;
    NSString *_inviterActionSourceStr;
    NSMutableDictionary *_pkStartTrackParams;
    long long _inviteListNum;
    unsigned long long _inviterReadyAckSource;
    NSString *_lastRTSMessage;
    NSString *_activityName;
    long long _interactStartTime;
    IESLiveRevenueInteractPreStreamModel *_preStreamModel;
    long long _curMaxInviteNum;
    NSDictionary *_panelTrackParams;
    NSString *_inviterListNum;
    NSString *_inviterRoomStatus;
    NSString *_inviterConnectCount;
    NSString *_ownerUid;
    NSString *_oppositeUid;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _containerFrame;
}

@property (retain, nonatomic) NSString *ownerUid;
@property (retain, nonatomic) NSString *oppositeUid;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } containerFrame;
@property (readonly, nonatomic) BOOL isClientMixStream;
@property (nonatomic) BOOL isMixStreaming;
@property (nonatomic) long long pkEndReason;
@property (retain, nonatomic) IESLivePKAutoMatchModel *autoMatchModel;
@property (retain, nonatomic) BattleAutoMatchResult_ResponseData *autoMatchResult;
@property (retain, nonatomic) IESLivePKMatchBellModel *matchBellModel;
@property (retain, nonatomic) NSString *theme;
@property (retain, nonatomic) NSString *requestID;
@property (retain, nonatomic) NSNumber *channelID;
@property (nonatomic) unsigned long long interactDuration;
@property (retain, nonatomic) NSMutableDictionary *oppositeUIDToSignExtra;
@property (retain, nonatomic) IESLivePKInviteeListItem *inviteeItem;
@property (retain, nonatomic) NSNumber *vendor;
@property (retain, nonatomic) NSNumber *pkDuration;
@property (retain, nonatomic) NSNumber *voteDuration;
@property (retain, nonatomic) NSString *inviteTheme;
@property (nonatomic) unsigned long long inviteReplyTrigger;
@property (retain, nonatomic) NSDictionary *rtcExtraInfo;
@property (retain, nonatomic) NSDictionary *multiRtcExtraInfo;
@property (retain, nonatomic) NSDictionary *liveCoreExtraInfo;
@property (retain, nonatomic) NSDictionary *multiLiveCoreExtraInfo;
@property (retain, nonatomic) IESLiveMultiChannelInfo *multiChannelInfo;
@property (copy, nonatomic) NSString *requestPage;
@property (nonatomic) BOOL disableOppositeMic;
@property (nonatomic) BOOL isShowAudienceIntercomComment;
@property (nonatomic) BOOL isShowAnchorIntercomComment;
@property (nonatomic) BOOL isRematch;
@property (copy, nonatomic) NSString *configExtra;
@property (nonatomic) BOOL enableSendGiftToOthers;
@property (nonatomic) BOOL isHighWay;
@property (nonatomic) double statsQueryTimeStamp;
@property (nonatomic) double remainTimeIntervalTimeStamp;
@property (nonatomic) BOOL isFromNormalLive;
@property (nonatomic) BOOL isMatchBellOn;
@property (nonatomic) BOOL isInTeamTask;
@property (nonatomic) BOOL isTransforming;
@property (nonatomic) BOOL isFromTransform;
@property (nonatomic) unsigned long long mixStreamingSource;
@property (nonatomic) BOOL isPicoVRStream;
@property (nonatomic) BOOL initiativeEnd;
@property (retain, nonatomic) IESLiveIntercomCommentConfig *intercomConfig;
@property (nonatomic) BOOL isFeedback;
@property (retain, nonatomic) NSArray *feedbackReasons;
@property (nonatomic) long long currentPlayTimes;
@property (nonatomic) BOOL needShowLastResult;
@property (nonatomic) BOOL isLastResultShown;
@property (nonatomic) BOOL needShowExplainCard;
@property (nonatomic) BOOL hasEcommerceRoom;
@property (nonatomic) double preferredEcommerceContainerHeight;
@property (copy, nonatomic) id /* block */ ecommerceContainerCompleteBlock;
@property (retain, nonatomic) IESLivePKUser *ownUser;
@property (retain, nonatomic) IESLivePKUser *oppositeUser;
@property (retain, nonatomic) IESLivePKStreamRatio *streamRatio;
@property (retain, nonatomic) IESLiveInteractiveMediaService *mediaService;
@property (nonatomic) BOOL removeBusinessJoinChannel;
@property (nonatomic) BOOL useMultiChannel;
@property (nonatomic) BOOL needShowInteractScore;
@property (nonatomic) BOOL isInteractScoreShow;
@property (nonatomic) BOOL silenceOppositeAudioVolume;
@property (nonatomic) BOOL hasAlreadyCutShortFinish;
@property (nonatomic) long long multiPKInviteCount;
@property (nonatomic) BOOL ownWithAudience;
@property (nonatomic) BOOL oppositeWithAudience;
@property (nonatomic) long long ownGuestCount;
@property (nonatomic) long long oppositeGuestCount;
@property (copy, nonatomic) NSString *inviteRejectTemporaryText;
@property (nonatomic) BOOL isGuestConnect;
@property (retain, nonatomic) HTSLiveIntercomChangeSyncData *intercomMessageModel;
@property (retain, nonatomic) BattleSelfData *pkCustomSettingData;
@property (nonatomic) BOOL isCustomPKFromEdit;
@property (copy, nonatomic) NSString *revenueInteractSource;
@property (nonatomic) long long fromStatus;
@property (nonatomic) long long peakForbidState;
@property (nonatomic) int interactPlayMode;
@property (retain, nonatomic) VoteSetting *voteSetting;
@property (nonatomic) BOOL isVoteMatchUp;
@property (copy, nonatomic) NSString *kickedUsersUniqueId;
@property (copy, nonatomic) NSString *battleAttachedInfo;
@property (retain, nonatomic) SpecifyGiftConfig *specifyGiftConfig;
@property (nonatomic) unsigned long long pkPanelStyle;
@property (retain, nonatomic) CustomConfig *customConfigNew;
@property (nonatomic) BOOL canShowRematchGuideView;
@property (nonatomic) int authRole;
@property (nonatomic) BOOL forbidOthersInvite;
@property (nonatomic) BOOL forbidOthersApply;
@property (nonatomic) BOOL defaultLargeLayoutTurnon;
@property (nonatomic) BOOL isRelationshipExpansion;
@property (copy, nonatomic) NSString *connectionType;
@property (nonatomic) int inviteStatus;
@property (nonatomic) long long connectionOverReason;
@property (nonatomic) long long actionFromSource;
@property (copy, nonatomic) NSString *actionFromSourceStr;
@property (copy, nonatomic) NSString *inviterActionSourceStr;
@property (retain, nonatomic) NSMutableDictionary *pkStartTrackParams;
@property (nonatomic) BOOL isFromAutoMatchInvite;
@property (nonatomic) unsigned long long inviteeListType;
@property (nonatomic) long long inviteListNum;
@property (nonatomic) unsigned long long inviterReadyAckSource;
@property (copy, nonatomic) NSString *lastRTSMessage;
@property (copy, nonatomic) NSString *activityName;
@property (nonatomic) long long interactStartTime;
@property (retain, nonatomic) IESLiveRevenueInteractPreStreamModel *preStreamModel;
@property (nonatomic) BOOL supportMultiInvite;
@property (nonatomic) BOOL forwardStreamBlocked;
@property (nonatomic) long long curMaxInviteNum;
@property (nonatomic) BOOL isMultiInvite;
@property (copy, nonatomic) NSDictionary *panelTrackParams;
@property (copy, nonatomic) NSString *inviterListNum;
@property (copy, nonatomic) NSString *inviterRoomStatus;
@property (copy, nonatomic) NSString *inviterConnectCount;

- (id)initWithDIContext:(id)arg0;
- (id)requestPage;
- (void)setRequestPage:(id)arg0;
- (id)userService;
- (void)setPreStreamModel:(id)arg0;
- (id)preStreamModel;
- (BOOL)isInteractScoreShow;
- (BOOL)isTransforming;
- (unsigned long long)mixStreamingSource;
- (BOOL)isFeedback;
- (void)setIsFeedback:(BOOL)arg0;
- (id)intercomConfig;
- (void)setIntercomConfig:(id)arg0;
- (id)intercomMessageModel;
- (id)inviteRejectTemporaryText;
- (void)setInviteRejectTemporaryText:(id)arg0;
- (void)setIntercomMessageModel:(id)arg0;
- (void)setLiveCoreExtraInfo:(id)arg0;
- (id)liveCoreExtraInfo;
- (void)resolveWithInviteRespnse:(id)arg0;
- (void)resolveFromReplyResponse:(id)arg0;
- (void)resolveWithInviteMessage:(id)arg0 extra:(id)arg1;
- (void)resolveFromReplyMessage:(id)arg0;
- (void)setInitiativeEnd:(BOOL)arg0;
- (BOOL)initiativeEnd;
- (id)voteSetting;
- (id)battleAttachedInfo;
- (id)specifyGiftConfig;
- (id)ownUser;
- (id)multiChannelInfo;
- (BOOL)supportMultiInvite;
- (id)kickedUsersUniqueId;
- (BOOL)useMultiChannel;
- (id)inviterRoomStatus;
- (void)setPkDuration:(id)arg0;
- (id)oppositeUser;
- (void)setInviteListNum:(long long)arg0;
- (void)setBattleAttachedInfo:(id)arg0;
- (id)oppositeUIDToSignExtra;
- (id)transformReasonForTrack;
- (id)inviterListNum;
- (id)inviterActionSourceStr;
- (id)inviterConnectCount;
- (id)actionFromSourceStr;
- (void)setDisableOppositeMic:(BOOL)arg0;
- (BOOL)disableOppositeMic;
- (void)setIsShowAudienceIntercomComment:(BOOL)arg0;
- (void)setIsShowAnchorIntercomComment:(BOOL)arg0;
- (int)authRole;
- (void)resolveClientAttachedInfo:(id)arg0;
- (void)setActionFromSource:(long long)arg0;
- (void)resetActionFromSource;
- (long long)inviteListNum;
- (void)setInviterRoomStatus:(id)arg0;
- (long long)connectionOverReason;
- (void)setRevenueInteractSource:(id)arg0;
- (void)setIsTransforming:(BOOL)arg0;
- (BOOL)silenceOppositeAudioVolume;
- (long long)actionFromSource;
- (void)setMultiChannelInfo:(id)arg0;
- (BOOL)isMultiInvite;
- (void)setIsMultiInvite:(BOOL)arg0;
- (BOOL)isFromTransform;
- (void)setCustomConfigNew:(id)arg0;
- (void)setSpecifyGiftConfig:(id)arg0;
- (void)setConnectionOverReason:(long long)arg0;
- (void)setSilenceOppositeAudioVolume:(BOOL)arg0;
- (BOOL)needShowLastResult;
- (void)setNeedShowLastResult:(BOOL)arg0;
- (void)setPreferredEcommerceContainerHeight:(double)arg0;
- (void)setEcommerceContainerCompleteBlock:(id /* block */)arg0;
- (void)setHasEcommerceRoom:(BOOL)arg0;
- (BOOL)isPicoVRStream;
- (void)setIsPicoVRStream:(BOOL)arg0;
- (BOOL)needShowInteractScore;
- (void)setIsInteractScoreShow:(BOOL)arg0;
- (unsigned long long)interactDuration;
- (void)setInteractDuration:(unsigned long long)arg0;
- (long long)interactStartTime;
- (void)setInteractStartTime:(long long)arg0;
- (void)setNeedShowInteractScore:(BOOL)arg0;
- (id)pkDuration;
- (id)revenueInteractSource;
- (BOOL)isCustomPK;
- (id)customConfigNew;
- (void)setNeedShowExplainCard:(BOOL)arg0;
- (id /* block */)ecommerceContainerCompleteBlock;
- (BOOL)hasEcommerceRoom;
- (BOOL)needShowExplainCard;
- (double)preferredEcommerceContainerHeight;
- (void)setPkCustomSettingData:(id)arg0;
- (void)setUseMultiChannel:(BOOL)arg0;
- (void)setForbidOthersInvite:(BOOL)arg0;
- (void)setForbidOthersApply:(BOOL)arg0;
- (id)pkStartTrackParams;
- (void)setupPKPeakForbidStateWithAnchorPKCheck:(int)arg0 forbiddenAnchorList:(id)arg1;
- (BOOL)forbidOthersInvite;
- (id)pkCustomSettingData;
- (void)setIsCustomPKFromEdit:(BOOL)arg0;
- (void)setPeakForbidState:(long long)arg0;
- (long long)peakForbidState;
- (void)setIsFromTransform:(BOOL)arg0;
- (void)setInviterActionSourceStr:(id)arg0;
- (void)setInviterListNum:(id)arg0;
- (void)setInviterConnectCount:(id)arg0;
- (void)setOppositeUIDToSignExtra:(id)arg0;
- (BOOL)isCustomPKFromEdit;
- (BOOL)forbidOthersApply;
- (BOOL)defaultLargeLayoutTurnon;
- (void)setDefaultLargeLayoutTurnon:(BOOL)arg0;
- (void)setOppositeUser:(id)arg0;
- (void)setActionFromSourceStr:(id)arg0;
- (id)panelTrackParams;
- (void)setPanelTrackParams:(id)arg0;
- (void)setIsVoteMatchUp:(BOOL)arg0;
- (void)resolveWithPrecisionMatchMessage:(id)arg0;
- (void)setMatchBellModel:(id)arg0;
- (id)matchBellModel;
- (void)setInviteReplyTrigger:(unsigned long long)arg0;
- (BOOL)oppositeWithAudience;
- (void)resolveClientAttachedInfo:(id)arg0 isNeedEmptyRequestID:(BOOL)arg1;
- (void)setInviterReadyAckSource:(unsigned long long)arg0;
- (int)interactPlayMode;
- (BOOL)forwardStreamBlocked;
- (BOOL)removeBusinessJoinChannel;
- (long long)curMaxInviteNum;
- (void)setCurMaxInviteNum:(long long)arg0;
- (void)setSupportMultiInvite:(BOOL)arg0;
- (void)addUser:(id)arg0 isHost:(BOOL)arg1 roleType:(int)arg2;
- (void)setHasAlreadyCutShortFinish:(BOOL)arg0;
- (unsigned long long)inviterReadyAckSource;
- (void)setLastRTSMessage:(id)arg0;
- (unsigned long long)inviteReplyTrigger;
- (BOOL)isVoteMatchUp;
- (void)setFeedbackReasons:(id)arg0;
- (BOOL)ownWithAudience;
- (void)setCanShowRematchGuideView:(BOOL)arg0;
- (void)setVoteDuration:(id)arg0;
- (void)setVoteSetting:(id)arg0;
- (void)setAuthRole:(int)arg0;
- (void)resolveWithMultiRtcInfo:(id)arg0 multiLiveCoreInfo:(id)arg1;
- (BOOL)isClientMixStream;
- (void)setForwardStreamBlocked:(BOOL)arg0;
- (id)voteDuration;
- (BOOL)canShowRematchGuideView;
- (id)commonTrackParamsForSuccessAndStart;
- (BOOL)isFromAutoMatchInvite;
- (id)multiLiveCoreExtraInfo;
- (id)multiRtcExtraInfo;
- (id)lastRTSMessage;
- (BOOL)isRelationshipExpansion;
- (void)setRemainTimeIntervalTimeStamp:(double)arg0;
- (void)resolveWithBattleMessage:(id)arg0 isFromNormalRoom:(BOOL)arg1;
- (void)setOwnWithAudience:(BOOL)arg0;
- (void)addUserByUID:(id)arg0 isHost:(BOOL)arg1 roleType:(int)arg2;
- (double)remainTimeIntervalTimeStamp;
- (void)resolveWithListResult:(id)arg0;
- (void)setMixStreamingSource:(unsigned long long)arg0;
- (long long)ownGuestCount;
- (void)setOwnGuestCount:(long long)arg0;
- (long long)oppositeGuestCount;
- (void)setOppositeGuestCount:(long long)arg0;
- (BOOL)isShowAudienceIntercomComment;
- (BOOL)isShowAnchorIntercomComment;
- (BOOL)isLastResultShown;
- (void)setIsLastResultShown:(BOOL)arg0;
- (long long)currentPlayTimes;
- (void)setIsGuestConnect:(BOOL)arg0;
- (void)setKickedUsersUniqueId:(id)arg0;
- (unsigned long long)pkPanelStyle;
- (void)setMultiRtcExtraInfo:(id)arg0;
- (void)setMultiLiveCoreExtraInfo:(id)arg0;
- (void)setOppositeWithAudience:(BOOL)arg0;
- (void)setInteractPlayMode:(int)arg0;
- (void)setRemoveBusinessJoinChannel:(BOOL)arg0;
- (void)p_logUserIDStatus;
- (void)setOppositeUid:(id)arg0;
- (void)resolveWithBattleUserInfo:(id)arg0;
- (void)setCurrentPlayTimes:(long long)arg0;
- (id)oppositeUid;
- (id)feedbackReasons;
- (void)setOwnUser:(id)arg0;
- (BOOL)hasAlreadyCutShortFinish;
- (BOOL)isGuestConnect;
- (void)setPkPanelStyle:(unsigned long long)arg0;
- (void)setIsRelationshipExpansion:(BOOL)arg0;
- (void)setPkStartTrackParams:(id)arg0;
- (void)setIsFromAutoMatchInvite:(BOOL)arg0;
- (id)connectionType;
- (id)defaultDuration;
- (void)setTheme:(id)arg0;
- (id)channelID;
- (void).cxx_destruct;
- (id)theme;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })containerFrame;
- (void)setConnectionType:(id)arg0;
- (void)setChannelID:(id)arg0;
- (id)activityName;
- (int)inviteStatus;
- (void)setContainerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setActivityName:(id)arg0;
- (long long)fromStatus;
- (void)setFromStatus:(long long)arg0;
- (void)setInviteStatus:(int)arg0;
- (id)ownerUid;
- (void)setOwnerUid:(id)arg0;

@end
