//
//     Generated by private class-dump
//

@class NSOperationQueue, NSObject;
@protocol OS_dispatch_queue, SRWebSocketDelegate;

@interface SRDelegateController : NSObject {
    struct SRDelegateAvailableMethods { unsigned char didReceiveMessage : 1; unsigned char didReceiveMessageWithString : 1; unsigned char didReceiveMessageWithData : 1; unsigned char didOpen : 1; unsigned char didFailWithError : 1; unsigned char didCloseWithCode : 1; unsigned char didReceivePing : 1; unsigned char didReceivePong : 1; unsigned char shouldConvertTextFrameToString : 1; } _availableDelegateMethods;
    id<SRWebSocketDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSOperationQueue *_operationQueue;
    NSObject<OS_dispatch_queue> *_accessQueue;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *accessQueue;
@property struct SRDelegateAvailableMethods { unsigned char didReceiveMessage : 1; unsigned char didReceiveMessageWithString : 1; unsigned char didReceiveMessageWithData : 1; unsigned char didOpen : 1; unsigned char didFailWithError : 1; unsigned char didCloseWithCode : 1; unsigned char didReceivePing : 1; unsigned char didReceivePong : 1; unsigned char shouldConvertTextFrameToString : 1; } availableDelegateMethods;
@property (weak, nonatomic) id<SRWebSocketDelegate> delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (retain, nonatomic) NSOperationQueue *operationQueue;

- (void)setAvailableDelegateMethods:(struct SRDelegateAvailableMethods { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; })arg0;
- (struct SRDelegateAvailableMethods { unsigned char x0 : 1; unsigned char x1 : 1; unsigned char x2 : 1; unsigned char x3 : 1; unsigned char x4 : 1; unsigned char x5 : 1; unsigned char x6 : 1; unsigned char x7 : 1; unsigned char x8 : 1; })availableDelegateMethods;
- (void)performDelegateQueueBlock:(id /* block */)arg0;
- (id)init;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (void)setDispatchQueue:(id)arg0;
- (id)operationQueue;
- (id)delegate;
- (id)accessQueue;
- (id)dispatchQueue;
- (void)setDelegate:(id)arg0;
- (void)performDelegateBlock:(id /* block */)arg0;

@end
