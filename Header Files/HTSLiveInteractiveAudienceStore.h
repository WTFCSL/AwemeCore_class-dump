//
//     Generated by private class-dump
//

@class NSDictionary, IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData, IESLiveInterativeTimeOutManager, HTSInteractionStreamAppData, NSString, NSError, IESLiveLinkMicAudienceFastMatchResponse_ResponseData, IESLiveAudienceInteractTopRightItem, NSArray, IESLiveCountTimer, HTSLiveUser, HTSEventContext, IESLiveMicPosTagInfo, RACTwoTuple, IESLiveInteractiveLinkService, NSData, IESLiveAudienceInteractGuestConnectionTracker, RACSubject, HTSInteractStreamCanvas, IESLiveMultiInteractUserService, HTSLiveInteractiveAPI, NSNumber;
@protocol IESLiveNoticeActions, IESLiveInteractUserModel, IESLiveMonitor, IESLiveRoomService, IESLiveAudienceChatRoomProvider, IESLiveAudienceInteractiveRootPanelUserService, IESLiveDynamicActivityProvider, IESLiveInteractionDelegateSettingProtocol;

@interface HTSLiveInteractiveAudienceStore : NSObject <HTSLiveRoomRemoteActions, HTSLiveMessageSubscriber, HTSLiveIntimateChatAudienceActions, IESLiveInteractiveLinkServiceDelegate, IESLiveMultiInteractUserServiceDelegate, HTSLiveAudienceActions, HTSLiveCleanScreenActions, IESLiveAudienceInteractiveAnchorInvitationActions, IESLiveAudienceECommerceActions, IESLiveCommercialComponentsActions, IESLiveInteractiveAdminActions, IESLiveSEIListener, IESLiveAudienceInteractiveRootPanelDataSource, IESLiveAudienceInteractiveSettingsAction, IESLiveFastMatchObserverAction> {
    BOOL _isPlayerReloaded;
    BOOL isInAlternateMode;
    BOOL isInviteOnly;
    BOOL _allowsGifting;
    BOOL _interactiveModeEnabled;
    BOOL _isProcessingApply;
    BOOL _connected;
    BOOL _resumeAudienceMsgReceived;
    BOOL _enableAdminRight;
    BOOL _enableSendGiftToHost;
    BOOL _openGuestGift;
    BOOL _isOnlyAcceptFollowerApply;
    BOOL _isInFetchingSettingRequest;
    BOOL _isFirstFetch;
    BOOL _adminRightIsChanged;
    BOOL _isJoiningChannel;
    BOOL _doPermitProcessAfterApply;
    BOOL _muteOnJoinChannel;
    BOOL _hasAppliedBefore;
    BOOL _isPaidLinkmicJoinChannel;
    BOOL _updatingAudienceSetting;
    BOOL _fetchingAudienceSetting;
    BOOL _isNotFirstFetchAudienceSetting;
    BOOL _isMuted;
    int _distributeSetting;
    NSNumber *_fetchTimeStamp;
    NSNumber *_localStart;
    RACSubject *_someoneLeave;
    NSDictionary *waitingListHeightDic;
    id<IESLiveDynamicActivityProvider> activityProvider;
    id<IESLiveAudienceInteractiveRootPanelUserService> rootPanelUserService;
    NSString *applyTitle;
    NSString *emptyViewNotice;
    NSArray *inviteFriendsList;
    NSString *settingPanelTitle;
    IESLiveAudienceInteractTopRightItem *topRightItem;
    IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *_waitingOffsetResponse;
    long long _linkMicStatus;
    RACTwoTuple *_attributeWaitingPromptsTuple;
    HTSLiveInteractiveAPI *_interactiveAPI;
    id<IESLiveRoomService> _room;
    IESLiveMultiInteractUserService *_userService;
    IESLiveInteractiveLinkService *_linkService;
    NSString *_myLinkMicStrID;
    long long _mode;
    NSNumber *_selfFanTicket;
    NSString *_rtcAppId;
    NSData *_rtcAppSign;
    unsigned long long _currentVendor;
    HTSInteractionStreamAppData *_appData;
    HTSInteractStreamCanvas *_canvasInfo;
    NSNumber *_waitingStartTime;
    RACSubject *_showReceivingPanel;
    RACSubject *_showAudioSmallWindow;
    NSError *_verifyError;
    NSString *_clickSource;
    NSDictionary *_rtcExtraInfo;
    double _interactModeStartTime;
    NSDictionary *_vpassSDKParams;
    NSString *_channel;
    NSString *_toast;
    long long _previousLinkMicStatus;
    long long _commerceRelateCount;
    long long _autoJoinValue;
    NSString *_requestPage;
    NSString *_connectType;
    NSString *_linkMicBtnClickSource;
    HTSEventContext *_eventContext;
    NSNumber *_linkPaidCount;
    NSNumber *_linkLimitTime;
    NSNumber *_paidApplyReasonRequired;
    NSString *_paidApplyDefaultReason;
    NSString *_paidApplyPresetReason;
    NSString *_waitingPrompts;
    id<IESLiveInteractionDelegateSettingProtocol> _distributeSettingData;
    NSString *_joinToken;
    NSString *_anchorLinkmicStrID;
    id<IESLiveMonitor> _monitor;
    id<IESLiveNoticeActions> _noticeActionCreator;
    double _linkmicStart;
    NSString *_invitorSecUserId;
    NSDictionary *_eventExtra;
    id /* block */ _reApplyOrReplyBlock;
    NSNumber *_replyTimestamp;
    IESLiveInterativeTimeOutManager *_timeOutManager;
    IESLiveLinkMicAudienceFastMatchResponse_ResponseData *_linkMatchData;
    unsigned long long _matchAPIRequestCount;
    long long _joinPayCount;
    IESLiveMicPosTagInfo *_currentMicPosTagInfo;
    IESLiveCountTimer *_checkLinkerStatusTmer;
    id<IESLiveAudienceChatRoomProvider> _provider;
    IESLiveAudienceInteractGuestConnectionTracker *_guestConnectionTracker;
}

@property (retain, nonatomic) HTSEventContext *eventContext;
@property (retain, nonatomic) NSNumber *selfFanTicket;
@property (retain, nonatomic) HTSInteractionStreamAppData *appData;
@property (retain, nonatomic) HTSInteractStreamCanvas *canvasInfo;
@property (nonatomic) BOOL interactiveModeEnabled;
@property (retain, nonatomic) NSString *anchorLinkmicStrID;
@property (nonatomic) unsigned long long currentVendor;
@property (retain, nonatomic) NSNumber *waitingStartTime;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (retain, nonatomic) id<IESLiveNoticeActions> noticeActionCreator;
@property (nonatomic) double linkmicStart;
@property (nonatomic) BOOL connected;
@property (nonatomic) BOOL isFirstFetch;
@property (nonatomic) BOOL adminRightIsChanged;
@property (nonatomic) long long commerceRelateCount;
@property (retain, nonatomic) NSError *verifyError;
@property (copy, nonatomic) NSString *requestPage;
@property (copy, nonatomic) NSString *connectType;
@property (copy, nonatomic) NSString *linkMicBtnClickSource;
@property (copy, nonatomic) NSString *invitorSecUserId;
@property (retain, nonatomic) NSDictionary *eventExtra;
@property (copy, nonatomic) id /* block */ reApplyOrReplyBlock;
@property (nonatomic) BOOL enableAdminRight;
@property (nonatomic) BOOL isJoiningChannel;
@property (nonatomic) BOOL isProcessingApply;
@property (nonatomic) BOOL doPermitProcessAfterApply;
@property (retain, nonatomic) NSNumber *replyTimestamp;
@property (copy, nonatomic) NSString *waitingPrompts;
@property (retain, nonatomic) IESLiveInterativeTimeOutManager *timeOutManager;
@property (nonatomic) BOOL muteOnJoinChannel;
@property (retain, nonatomic) NSNumber *linkPaidCount;
@property (retain, nonatomic) NSNumber *linkLimitTime;
@property (retain, nonatomic) NSNumber *paidApplyReasonRequired;
@property (copy, nonatomic) NSString *paidApplyDefaultReason;
@property (copy, nonatomic) NSString *paidApplyPresetReason;
@property (retain, nonatomic) IESLiveLinkMicAudienceFastMatchResponse_ResponseData *linkMatchData;
@property (nonatomic) BOOL hasAppliedBefore;
@property (nonatomic) unsigned long long matchAPIRequestCount;
@property (retain, nonatomic) id<IESLiveInteractionDelegateSettingProtocol> distributeSettingData;
@property (copy, nonatomic) NSString *joinToken;
@property (nonatomic) long long joinPayCount;
@property (nonatomic) BOOL isPaidLinkmicJoinChannel;
@property (nonatomic) BOOL updatingAudienceSetting;
@property (nonatomic) BOOL fetchingAudienceSetting;
@property (nonatomic) BOOL isNotFirstFetchAudienceSetting;
@property (retain, nonatomic) IESLiveMicPosTagInfo *currentMicPosTagInfo;
@property (retain, nonatomic) IESLiveCountTimer *checkLinkerStatusTmer;
@property (weak, nonatomic) id<IESLiveAudienceChatRoomProvider> provider;
@property (nonatomic) BOOL isMuted;
@property (retain, nonatomic) IESLiveAudienceInteractGuestConnectionTracker *guestConnectionTracker;
@property (retain, nonatomic) HTSLiveInteractiveAPI *interactiveAPI;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (readonly, nonatomic) HTSLiveUser *currentUser;
@property (retain, nonatomic) IESLiveMultiInteractUserService *userService;
@property (retain, nonatomic) IESLiveInteractiveLinkService *linkService;
@property (retain, nonatomic) NSString *myLinkMicStrID;
@property (readonly, nonatomic) BOOL allowsGifting;
@property (nonatomic) long long mode;
@property (readonly, nonatomic) id<IESLiveInteractUserModel> activeRoomOwner;
@property (readonly, copy, nonatomic) NSString *rtcAppId;
@property (readonly, copy, nonatomic) NSData *rtcAppSign;
@property (readonly, nonatomic) RACSubject *showReceivingPanel;
@property (readonly, nonatomic) RACSubject *showAudioSmallWindow;
@property (retain, nonatomic) NSNumber *fetchTimeStamp;
@property (retain, nonatomic) NSNumber *localStart;
@property (copy, nonatomic) NSString *clickSource;
@property (retain, nonatomic) NSDictionary *rtcExtraInfo;
@property (nonatomic) double interactModeStartTime;
@property (copy, nonatomic) NSDictionary *vpassSDKParams;
@property (copy, nonatomic) NSString *channel;
@property (copy, nonatomic) NSString *toast;
@property (nonatomic) long long linkMicStatus;
@property (nonatomic) long long previousLinkMicStatus;
@property (readonly, nonatomic) BOOL isInteractionRuning;
@property (readonly, nonatomic) long long autoJoinValue;
@property (nonatomic) BOOL resumeAudienceMsgReceived;
@property (nonatomic) BOOL enableSendGiftToHost;
@property (nonatomic) BOOL openGuestGift;
@property (nonatomic) BOOL isOnlyAcceptFollowerApply;
@property (nonatomic) int distributeSetting;
@property (nonatomic) BOOL isInFetchingSettingRequest;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<IESLiveAudienceInteractiveRootPanelUserService> rootPanelUserService;
@property (retain, nonatomic) RACSubject *someoneLeave;
@property (nonatomic) BOOL isInAlternateMode;
@property (retain, nonatomic) id<IESLiveDynamicActivityProvider> activityProvider;
@property (readonly, nonatomic) BOOL isInviteOnly;
@property (readonly, copy, nonatomic) NSString *settingPanelTitle;
@property (copy, nonatomic) NSString *emptyViewNotice;
@property (copy, nonatomic) NSArray *inviteFriendsList;
@property (readonly, copy, nonatomic) NSString *applyTitle;
@property (readonly, nonatomic) IESLiveAudienceInteractTopRightItem *topRightItem;
@property (copy, nonatomic) NSDictionary *waitingListHeightDic;
@property (retain, nonatomic) IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *waitingOffsetResponse;
@property (retain, nonatomic) RACTwoTuple *attributeWaitingPromptsTuple;

- (void)showToast:(id)arg0;
- (void)didSetAttachingDIContext;
- (id)fetchTimeStamp;
- (void)setFetchTimeStamp:(id)arg0;
- (id)eventExtra;
- (void)setEventExtra:(id)arg0;
- (id)connectType;
- (void)setEventContext:(id)arg0;
- (id)canvasInfo;
- (void)setCanvasInfo:(id)arg0;
- (id)rtcAppId;
- (id)requestPage;
- (void)setRequestPage:(id)arg0;
- (BOOL)enableOptimize;
- (void)didShowCommercialComponentEntrance;
- (void)didHideCommercialComponentEntrance;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (void)didUpdateRoom:(id)arg0 timeStamp:(id)arg1;
- (void)didShowShoppingToolBarItem;
- (void)didHideShoppingToolBarItem;
- (void)switchCleanScreenMode:(long long)arg0;
- (id)userService;
- (void)setUserService:(id)arg0;
- (BOOL)adminModeEnable;
- (void)trackWithEvent:(id)arg0 extra:(id)arg1;
- (id)linkService;
- (void)setLinkService:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0;
- (void)setIsFirstFetch:(BOOL)arg0;
- (id)noticeActionCreator;
- (void)setNoticeActionCreator:(id)arg0;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (void)setCheckLinkerStatusTmer:(id)arg0;
- (id)checkLinkerStatusTmer;
- (id)rtcExtraInfo;
- (id)interactiveAPI;
- (void)setInteractiveAPI:(id)arg0;
- (void)onReceivedEnableAudienceMessage:(id)arg0;
- (void)onReceivedDisableAudienceMessage:(id)arg0;
- (void)onReceivedPermitAudienceMessage:(id)arg0;
- (void)onReceivedKickoutedAudienceMessage:(id)arg0;
- (void)onReceivedInviteAudienceMessage:(id)arg0;
- (void)onReceivedReplyAudienceMessage:(id)arg0;
- (void)onReceivedLinkCloseMessage:(id)arg0;
- (void)onReceivedSystemKickOutMessage:(id)arg0;
- (void)onReceivedActiveSignalMessage:(id)arg0;
- (void)onReceiveLinkApplyExpired:(id)arg0;
- (void)onReceivedPaidLinkmicLowBalanceMessage:(id)arg0;
- (void)onReceivedLinkResumeAudienceMessage:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2 extraParams:(id)arg3;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2 completion:(id /* block */)arg3;
- (void)adminMuteGuest:(id)arg0;
- (void)adminUnMuteGuest:(id)arg0;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 linkType:(id)arg2 requestSource:(id)arg3 completion:(id /* block */)arg4;
- (void)adminPermitUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2;
- (void)applyConnectionInMode:(long long)arg0 applySource:(unsigned long long)arg1 withPosition:(id)arg2 afterFollow:(BOOL)arg3 paidCount:(int)arg4 limitedTime:(int)arg5 reason:(id)arg6 discountInfo:(id)arg7 eventExtra:(id)arg8 extraParams:(id)arg9 andCompletion:(id /* block */)arg10;
- (void)cancelApplication;
- (void)cancelApplicationWithRequestSource:(id)arg0;
- (void)onInteractiveModeStartedWithTimeStamp:(id)arg0;
- (void)onInteractiveModeStartWithRoomEnterTimeStamp:(id)arg0 isAdmin:(BOOL)arg1;
- (void)endInteractWaiting;
- (void)updateDistributionSettingsWithState:(int)arg0;
- (void)checkDistributionSettingWithCompletion:(id /* block */)arg0;
- (void)reApplyOrReplyAfterPermissionCheck;
- (void)registerMessageHandlers;
- (BOOL)isInvitingUser:(id)arg0;
- (id)clickSource;
- (void)setClickSource:(id)arg0;
- (void)setLinkPaidCount:(id)arg0;
- (void)setLinkLimitTime:(id)arg0;
- (id)paidApplyReasonRequired;
- (id)paidApplyDefaultReason;
- (id)paidApplyPresetReason;
- (void)stopInteractiveModeByForce;
- (void)onGuestMute:(BOOL)arg0;
- (void)userActiveChanged:(BOOL)arg0 linkmicId:(id)arg1;
- (void)setRtcExtraInfo:(id)arg0;
- (void)joinChannel:(id)arg0;
- (id)rtcAppSign;
- (BOOL)isInteractionRuning;
- (long long)linkMicStatus;
- (void)setLinkMicStatus:(long long)arg0;
- (id)vpassSDKParams;
- (void)setVpassSDKParams:(id)arg0;
- (unsigned long long)currentVendor;
- (void)setCurrentVendor:(unsigned long long)arg0;
- (id)replyTimestamp;
- (void)setReplyTimestamp:(id)arg0;
- (BOOL)muteOnJoinChannel;
- (void)setMuteOnJoinChannel:(BOOL)arg0;
- (id)timeOutManager;
- (id)getMuteGusetNicknameByUserID:(id)arg0;
- (void)setTimeOutManager:(id)arg0;
- (void)onInteractiveModeStartedWithTimeStamp:(id)arg0 listStatus:(int)arg1;
- (void)setInteractiveModeEnabled:(BOOL)arg0;
- (void)setInteractModeStartTime:(double)arg0;
- (void)onInteractiveModeStoppedByForce:(BOOL)arg0;
- (BOOL)currentSceneIsPK;
- (BOOL)isProcessingApply;
- (BOOL)canJoinChannel;
- (void)setAnchorLinkmicStrID:(id)arg0;
- (id)anchorLinkmicStrID;
- (void)pr_afterReceivePermit;
- (void)setDoPermitProcessAfterApply:(BOOL)arg0;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3;
- (void)setInvitorSecUserId:(id)arg0;
- (void)onInteractiveKickouted;
- (id /* block */)reApplyOrReplyBlock;
- (void)setReApplyOrReplyBlock:(id /* block */)arg0;
- (void)setIsProcessingApply:(BOOL)arg0;
- (void)setVerifyError:(id)arg0;
- (BOOL)doPermitProcessAfterApply;
- (id)waitingStartTime;
- (void)setWaitingStartTime:(id)arg0;
- (BOOL)isJoiningChannel;
- (void)setIsJoiningChannel:(BOOL)arg0;
- (void)setJoinToken:(id)arg0;
- (id)invitorSecUserId;
- (BOOL)interactiveModeEnabled;
- (void)leaveOnLiveEndWithReason:(unsigned long long)arg0;
- (void)setdown;
- (BOOL)adminRightChangeWhenAdminModeEnable;
- (BOOL)enableAdminRight;
- (BOOL)noAdminRight;
- (id)joinToken;
- (long long)determineFinalLinkTypeWithOrigin:(long long)arg0;
- (id)initWithRoom:(id)arg0 diContext:(id)arg1 eventContext:(id)arg2;
- (void)setupCurrentUserInUserService:(id)arg0;
- (void)adminPermit:(id)arg0;
- (id)verifyError;
- (void)setEnableAdminRight:(BOOL)arg0;
- (BOOL)adminRightIsChanged;
- (void)setAdminRightIsChanged:(BOOL)arg0;
- (double)interactModeStartTime;
- (void)setConnectType:(id)arg0;
- (id)inviteFriendsList;
- (id)emptyViewNotice;
- (BOOL)isInAlternateMode;
- (BOOL)isInviteOnly;
- (id)waitingListHeightDic;
- (void)setWaitingListHeightDic:(id)arg0;
- (void)setEmptyViewNotice:(id)arg0;
- (void)setInviteFriendsList:(id)arg0;
- (void)setIsInAlternateMode:(BOOL)arg0;
- (id)applyTitle;
- (BOOL)needGetSetting:(id)arg0;
- (id)linkPaidCount;
- (id)linkLimitTime;
- (unsigned long long)sceneFromRoomType;
- (BOOL)p_enablePaidLinkmicAddPrice;
- (id)someoneLeave;
- (id)roleForLog;
- (id)sceneForLog;
- (void)setResumeAudienceMsgReceived:(BOOL)arg0;
- (void)fetchAudienceInteractiveSettingsWithCompletion:(id /* block */)arg0 isLocalData:(BOOL)arg1;
- (void)pr_inviteEventWithUserID:(id)arg0 sourcePage:(id)arg1;
- (void)setPaidApplyReasonRequired:(id)arg0;
- (void)setPaidApplyDefaultReason:(id)arg0;
- (void)setPaidApplyPresetReason:(id)arg0;
- (void)onGuestDisconnect:(id)arg0;
- (id)rootPanelUserService;
- (void)setRootPanelUserService:(id)arg0;
- (void)setSomeoneLeave:(id)arg0;
- (id)settingPanelTitle;
- (id)topRightItem;
- (void)updateAudienceInteractiveSettingType:(unsigned long long)arg0 on:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)localStart;
- (void)setLocalStart:(id)arg0;
- (BOOL)resumeAudienceMsgReceived;
- (long long)commerceRelateCount;
- (void)setCommerceRelateCount:(long long)arg0;
- (id)waitingOffsetResponse;
- (void)setWaitingOffsetResponse:(id)arg0;
- (id)attributeWaitingPromptsTuple;
- (void)setAttributeWaitingPromptsTuple:(id)arg0;
- (void)loadInteractiveListInStatus:(int)arg0 withType:(unsigned long long)arg1 requestSource:(id)arg2;
- (void)setGuestConnectionTracker:(id)arg0;
- (id)guestConnectionTracker;
- (BOOL)isPaidLinkmicJoinChannel;
- (void)setJoinPayCount:(long long)arg0;
- (void)setIsPaidLinkmicJoinChannel:(BOOL)arg0;
- (long long)joinPayCount;
- (void)setDistributeSettingData:(id)arg0;
- (void)setDistributeSetting:(int)arg0;
- (void)logWithLinkMicMethod:(id)arg0;
- (void)updateRoomInfo;
- (void)p_fetchPlayModeInfoIfNeeded;
- (void)setMyLinkMicStrID:(id)arg0;
- (id)myLinkMicStrID;
- (id)showAudioSmallWindow;
- (id)showReceivingPanel;
- (void)leaveLinkPostAction:(int)arg0 paidCount:(long long)arg1 linkDuration:(long long)arg2;
- (BOOL)updatingAudienceSetting;
- (void)setUpdatingAudienceSetting:(BOOL)arg0;
- (BOOL)fetchingAudienceSetting;
- (void)setFetchingAudienceSetting:(BOOL)arg0;
- (void)setCurrentMicPosTagInfo:(id)arg0;
- (id)currentMicPosTagInfo;
- (void)setHasAppliedBefore:(BOOL)arg0;
- (BOOL)hasAppliedBefore;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3 trackParams:(id)arg4;
- (void)setIsNotFirstFetchAudienceSetting:(BOOL)arg0;
- (void)setOpenGuestGift:(BOOL)arg0;
- (void)setEnableSendGiftToHost:(BOOL)arg0;
- (void)updateLinkMicSettingsWithCompletion:(id /* block */)arg0;
- (id)activeRoomOwner;
- (void)audienceDidConnectedToAnchor;
- (BOOL)allowsGifting;
- (id)selfFanTicket;
- (void)setSelfFanTicket:(id)arg0;
- (long long)previousLinkMicStatus;
- (void)setPreviousLinkMicStatus:(long long)arg0;
- (long long)autoJoinValue;
- (id)linkMicBtnClickSource;
- (void)setLinkMicBtnClickSource:(id)arg0;
- (BOOL)enableSendGiftToHost;
- (BOOL)openGuestGift;
- (BOOL)isOnlyAcceptFollowerApply;
- (void)setIsOnlyAcceptFollowerApply:(BOOL)arg0;
- (id)waitingPrompts;
- (void)setWaitingPrompts:(id)arg0;
- (int)distributeSetting;
- (id)distributeSettingData;
- (BOOL)isInFetchingSettingRequest;
- (void)setIsInFetchingSettingRequest:(BOOL)arg0;
- (double)linkmicStart;
- (void)setLinkmicStart:(double)arg0;
- (id)linkMatchData;
- (void)setLinkMatchData:(id)arg0;
- (unsigned long long)matchAPIRequestCount;
- (void)setMatchAPIRequestCount:(unsigned long long)arg0;
- (BOOL)isNotFirstFetchAudienceSetting;
- (void)setIsMuted:(BOOL)arg0;
- (void)setProvider:(id)arg0;
- (id)channel;
- (id)provider;
- (void)setConnected:(BOOL)arg0;
- (void).cxx_destruct;
- (BOOL)connected;
- (id)monitor;
- (void)setChannel:(id)arg0;
- (long long)mode;
- (void)setMonitor:(id)arg0;
- (void)stopConnection;
- (void)setMode:(long long)arg0;
- (void)setup;
- (id)eventContext;
- (id)currentUser;
- (void)dealloc;
- (BOOL)isMuted;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)messageReceived:(id)arg0;
- (BOOL)isAdmin;
- (void)setAppData:(id)arg0;
- (id)appData;
- (void)setToast:(id)arg0;
- (id)toast;
- (BOOL)isFirstFetch;
- (void)setupService;
- (id)activityProvider;
- (void)setActivityProvider:(id)arg0;
- (void)clean;

@end
