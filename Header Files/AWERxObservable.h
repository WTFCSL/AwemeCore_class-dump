//
//     Generated by private class-dump
//

@class NSObject;
@protocol OS_dispatch_source;

@interface AWERxObservable : NSObject {
    struct vector<void (^)(id, AWERxContext *), std::allocator<void (^)(id, AWERxContext *)>> { id /* block */ *__begin_; id /* block */ *__end_; struct __compressed_pair<void (^__strong *)(id, AWERxContext *), std::allocator<void (^)(id, AWERxContext *)>> { id /* block */ *__value_; } __end_cap_; } m_subscribs;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } m_lock;
    NSObject<OS_dispatch_source> *_timer;
}

@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;

- (id)throttle:(double)arg0;
- (void)send:(id)arg0 withContext:(id)arg1;
- (id)subscribeWithContext:(id /* block */)arg0;
- (void)doOperation:(id /* block */)arg0 afterDelay:(double)arg1;
- (id)timer;
- (id)map:(id /* block */)arg0;
- (id)subscribe:(id /* block */)arg0;
- (void).cxx_destruct;
- (void)setTimer:(id)arg0;
- (void)send:(id)arg0;
- (void)dealloc;
- (id).cxx_construct;
- (id)filter:(id /* block */)arg0;
- (void)bind:(id)arg0;

@end
