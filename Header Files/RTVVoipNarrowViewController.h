//
//     Generated by private class-dump
//

@class UIView, NSString, RTVVoIPPiPContentView, RTVVoipTracker, NSObject, RTVVoipMonitor, RTVNarrowAnchorView, RTVVoipSession;
@protocol RTVRoomSyncController, RTVSettingsManager, RTVVoipAudioCoordinatorProtocol, RTVVoipNarrowPreviewProtocol, RTVVoipSettingManagerInterface, RTVCoordinator, RTVXRCaptureController, RTVRootFeedObserverCenterInterface, RTVVoipSessionStoreInterface, RTVDynamicResolutionManagerInterface, RTVXRInteractionController, RTVXRControllerInjector, RTVVoIPCamDegradeControllerProtocol, RTVVoipConfigureManagerInterface, RTVPIPControllerInterface, RTVXRBusinessContextDelegate, RxInjector, RTVXRStateRecorder, RTVXRContextInterface;

@interface RTVVoipNarrowViewController : UIViewController <RTVVoipNarrowContainerController, RTVVoipNarrowPreivewContainerDelegate, RTVVoipSessionObserver, RTVRootFeedObserver, RTVPiPControllerDelegate> {
    BOOL isActive;
    BOOL _mutedVideoBeforeSwitchToNarrow;
    BOOL _switchFullScreenTapGestureIsEnable;
    id<RTVXRBusinessContextDelegate> delegate;
    RTVVoipSession *_voipSession;
    id<RTVRoomSyncController> _roomSyncController;
    UIView<RTVVoipNarrowPreviewProtocol> *_narrowView;
    id<RxInjector> _injector;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVXRStateRecorder> _xrStateRecorder;
    id<RTVCoordinator> _rtvCoordinator;
    id<RTVPIPControllerInterface> _PiPController;
    id<RTVXRInteractionController> _xrinteractionController;
    id<RTVXRCaptureController> _captureController;
    id<RTVVoipAudioCoordinatorProtocol> _audioSessionCoordinator;
    RTVVoipTracker *_voipTracker;
    id<RTVDynamicResolutionManagerInterface> _dynamicResolutionManager;
    id<RTVVoipSessionStoreInterface> _sessionStore;
    id<RTVXRContextInterface> _xrContext;
    RTVVoipMonitor *_voipMonitor;
    id<RTVVoIPCamDegradeControllerProtocol> _degradeController;
    id<RTVSettingsManager> _settingsManager;
    UIView *_decorateView;
    RTVNarrowAnchorView *_anchorView;
    UIView *_contentView;
    id<RTVRootFeedObserverCenterInterface> _feedObserverCenter;
    id<RTVVoipConfigureManagerInterface> _configureManager;
    NSObject *_deactiveResumeCameraToken;
    RTVVoIPPiPContentView *_PiPContentView;
    id<RTVVoipSettingManagerInterface> _settingManager;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastNarrowViewFrame;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } lastNarrowViewFrame;
@property (weak, nonatomic) id<RTVRoomSyncController> roomSyncController;
@property (readonly, nonatomic) UIView<RTVVoipNarrowPreviewProtocol> *narrowView;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, weak, nonatomic) id<RTVXRStateRecorder> xrStateRecorder;
@property (readonly, nonatomic) id<RTVCoordinator> rtvCoordinator;
@property (readonly, nonatomic) id<RTVPIPControllerInterface> PiPController;
@property (readonly, weak, nonatomic) id<RTVXRInteractionController> xrinteractionController;
@property (readonly, weak, nonatomic) id<RTVXRCaptureController> captureController;
@property (readonly, nonatomic) id<RTVVoipAudioCoordinatorProtocol> audioSessionCoordinator;
@property (nonatomic) BOOL mutedVideoBeforeSwitchToNarrow;
@property (readonly, nonatomic) RTVVoipTracker *voipTracker;
@property (readonly, nonatomic) id<RTVDynamicResolutionManagerInterface> dynamicResolutionManager;
@property (readonly, nonatomic) id<RTVVoipSessionStoreInterface> sessionStore;
@property (readonly, nonatomic) id<RTVXRContextInterface> xrContext;
@property (readonly, nonatomic) RTVVoipMonitor *voipMonitor;
@property (readonly, nonatomic) id<RTVVoIPCamDegradeControllerProtocol> degradeController;
@property (readonly, nonatomic) id<RTVSettingsManager> settingsManager;
@property (nonatomic) BOOL switchFullScreenTapGestureIsEnable;
@property (retain, nonatomic) UIView *decorateView;
@property (retain, nonatomic) RTVNarrowAnchorView *anchorView;
@property (retain, nonatomic) UIView *contentView;
@property (readonly, nonatomic) id<RTVRootFeedObserverCenterInterface> feedObserverCenter;
@property (readonly, nonatomic) id<RTVVoipConfigureManagerInterface> configureManager;
@property (retain, nonatomic) NSObject *deactiveResumeCameraToken;
@property (weak, nonatomic) RTVVoIPPiPContentView *PiPContentView;
@property (readonly, nonatomic) id<RTVVoipSettingManagerInterface> settingManager;
@property (readonly, weak, nonatomic) RTVVoipSession *voipSession;
@property (weak, nonatomic) id<RTVXRBusinessContextDelegate> delegate;
@property (nonatomic) BOOL isActive;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rtv_awakeFromControllerInjector;
- (BOOL)isNewStyle;
- (void)__createComponents;
- (void)__layoutComponents;
- (id)PiPController;
- (void)PiPControllerWillStartPiP:(id)arg0;
- (void)PiPController:(id)arg0 failedToStartPiPWithError:(id)arg1;
- (void)__configComponents;
- (id)voipMonitor;
- (id)controllerInjector;
- (id)rtvCoordinator;
- (id)voipTracker;
- (id)audioSessionCoordinator;
- (id)configureManager;
- (id)sessionStore;
- (id)xrStateRecorder;
- (id)xrinteractionController;
- (void)notifyChangeActive:(BOOL)arg0;
- (void)notifyDidChangeActive:(BOOL)arg0;
- (void)rtvSession:(id)arg0 stateMachineDidChangeTo:(long long)arg1 fromState:(long long)arg2;
- (void)rtvSession:(id)arg0 contextKeyPathChange:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3;
- (void)rtvSession:(id)arg0 participatorsDidChange:(id)arg1 oldParticipators:(id)arg2;
- (void)renderWithBusinessHandler:(id)arg0 context:(id)arg1;
- (void)switchFullScreenWithAnimator:(id)arg0;
- (void)switchNarrowWithAnimator:(id)arg0;
- (id)layoutTransitionDelegate;
- (id)preferredLayoutAttributes;
- (id)narrowWindowLayoutContext;
- (void)containerWillFirstAppear;
- (void)narrowViewDragDidEnd;
- (BOOL)switchFullScreenTapGestureIsEnable;
- (BOOL)useDefaultDragSafeArea;
- (long long)toFullScreenContainerType;
- (void)observerCenterDidEnterFeed:(id)arg0;
- (void)observerCenterDidLeaveFeed:(id)arg0;
- (id)voipSession;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lastNarrowViewFrame;
- (void)setLastNarrowViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)__createContentView;
- (id)dynamicResolutionManager;
- (id)roomSyncController;
- (void)setRoomSyncController:(id)arg0;
- (void)__addChildViewController:(id)arg0;
- (void)__laterDismiss:(double)arg0;
- (id)contentViewForPiPController:(id)arg0;
- (BOOL)isPlayingForPiPController:(id)arg0;
- (double)rateForPiPController:(id)arg0;
- (double)durationForPiPController:(id)arg0;
- (struct CGSize { double x0; double x1; })videoFrameSizeForPiPController:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoPlaceholderFrameForPiPController:(id)arg0;
- (id)captureControllerForPiPController:(id)arg0;
- (void)PiPController:(id)arg0 restoreContentView:(id)arg1;
- (void)PiPControllerWillStopPiP:(id)arg0;
- (void)PiPControllerDidStopPiP:(id)arg0;
- (id)degradeController;
- (void)narrowPreview:(id)arg0 updatePreviewType:(unsigned long long)arg1 targetContentSize:(struct CGSize { double x0; double x1; })arg2 animator:(id)arg3;
- (id)narrowView;
- (long long)__currentAnchorType;
- (void)__refreshAnchorViewWithAnchorType:(long long)arg0;
- (void)__createNarrowView;
- (void)__createDecorateView;
- (BOOL)__enableNewStyle;
- (void)setDecorateView:(id)arg0;
- (id)decorateView;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })__rectTransformFromFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 toFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (struct CGSize { double x0; double x1; })__adjustContentSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setMutedVideoBeforeSwitchToNarrow:(BOOL)arg0;
- (BOOL)__shouldToggleCameraOff;
- (void)setDeactiveResumeCameraToken:(id)arg0;
- (id)xrContext;
- (BOOL)mutedVideoBeforeSwitchToNarrow;
- (id)deactiveResumeCameraToken;
- (void)__registerPiP:(BOOL)arg0;
- (void)setSwitchFullScreenTapGestureIsEnable:(BOOL)arg0;
- (void)__refreshNarrowAnchorViewIfNeeded;
- (id)PiPContentView;
- (void)setPiPContentView:(id)arg0;
- (void)__enableVideoWhenPiP:(BOOL)arg0;
- (id)feedObserverCenter;
- (void)viewDidLayoutSubviews;
- (void).cxx_destruct;
- (void)setIsActive:(BOOL)arg0;
- (id)shadowView;
- (id)contentView;
- (id)injector;
- (id)delegate;
- (id)captureController;
- (BOOL)isActive;
- (id)settingsManager;
- (void)setDelegate:(id)arg0;
- (void)viewDidLoad;
- (void)setContentView:(id)arg0;
- (id)anchorView;
- (void)setAnchorView:(id)arg0;
- (double)preferredCornerRadius;
- (long long)containerType;
- (id)settingManager;

@end
