//
//     Generated by private class-dump
//

@class NSString, AWEUGPendantTimingTaskModel, NSMutableSet, AWEUGPendantActivityController;
@protocol AWEUGTimeMeterTaskProtocol, AWEFeedPendantLinkMonitorProtocol;

@interface AWEUGFeedPendantActivityTaskManager : NSObject <AWEBizTabBarMessage, AWEUserMessage, HTSAccountMessage> {
    BOOL _hasTaskInProcess;
    BOOL _isReportingTaskResult;
    AWEUGPendantActivityController *_activityController;
    AWEUGPendantTimingTaskModel *_timingTaskInfo;
    id<AWEUGTimeMeterTaskProtocol> _task;
    double _currentProgress;
    id<AWEFeedPendantLinkMonitorProtocol> _linkMonitor;
    NSMutableSet *_completedTokenSet;
    NSString *_currentKey;
    long long _duration;
    long long _taskIndex;
}

@property (nonatomic) BOOL isReportingTaskResult;
@property (weak, nonatomic) id<AWEFeedPendantLinkMonitorProtocol> linkMonitor;
@property (retain, nonatomic) NSMutableSet *completedTokenSet;
@property (copy, nonatomic) NSString *currentKey;
@property (nonatomic) long long duration;
@property (nonatomic) long long taskIndex;
@property (weak, nonatomic) AWEUGPendantActivityController *activityController;
@property (retain, nonatomic) AWEUGPendantTimingTaskModel *timingTaskInfo;
@property (retain, nonatomic) id<AWEUGTimeMeterTaskProtocol> task;
@property (nonatomic) BOOL hasTaskInProcess;
@property (nonatomic) double currentProgress;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedManager;

- (void)didFinishLogout;
- (long long)taskIndex;
- (void)setTaskIndex:(long long)arg0;
- (void)tabBarController:(id)arg0 didSelectItemType:(long long)arg1 previousItemType:(long long)arg2;
- (void)tryToReportCompletedTask;
- (void)setCompletedTokenSet:(id)arg0;
- (BOOL)hasTaskInProcess;
- (void)trackFeedPendanTimingTaskManagerLogWithMessage:(id)arg0;
- (id)completedTokenSet;
- (void)setHasTaskInProcess:(BOOL)arg0;
- (id)getEvadeRule;
- (id)timingTaskInfo;
- (id)getCompletedTaskTokenKey;
- (void)reportTaskCompletedWithToken:(id)arg0 needRetry:(BOOL)arg1;
- (void)startTaskWithIndex:(long long)arg0 timeKey:(id)arg1;
- (id)linkMonitor;
- (BOOL)isReportingTaskResult;
- (void)setIsReportingTaskResult:(BOOL)arg0;
- (void)monitorTaskReportStatus:(long long)arg0 params:(id)arg1;
- (void)recordCompletedTaskWithToken:(id)arg0;
- (void)showFirstTimingTaskPauseReasonBubbleIfNeeded;
- (void)setTimingTaskInfo:(id)arg0;
- (void)handleTimingTask;
- (void)showFirstTimingTaskStartBubbleIfNeeded;
- (void)monitorTaskResumedFromCacheWithDuration:(long long)arg0;
- (void)monitorTaskComplete;
- (void)setLinkMonitor:(id)arg0;
- (id)currentKey;
- (id)init;
- (void).cxx_destruct;
- (long long)duration;
- (void)setTask:(id)arg0;
- (id)task;
- (void)setDuration:(long long)arg0;
- (double)currentProgress;
- (void)setCurrentProgress:(double)arg0;
- (id)activityController;
- (void)setActivityController:(id)arg0;
- (void)startTask:(id)arg0;
- (void)setCurrentKey:(id)arg0;

@end
