//
//     Generated by private class-dump
//

@class NSArray, NSMutableArray, NSHashTable;
@protocol IESLiveEffectPlatformConfig, IESLiveLanguageService, IESLiveEffectPlatformService, IESLivePerfSampler;

@interface IESLiveFilterManager : NSObject {
    BOOL _downloadStarted;
    NSArray *_localFilterArray;
    NSMutableArray *_filterList;
    NSMutableArray *_remoteFilterArray;
    id<IESLiveLanguageService> _languageService;
    id<IESLiveEffectPlatformConfig> _config;
    id<IESLiveEffectPlatformService> _effectPlatformService;
    id<IESLivePerfSampler> _perfSampler;
    NSHashTable *_observers;
}

@property (copy, nonatomic) NSArray *localFilterArray;
@property (retain, nonatomic) NSMutableArray *filterList;
@property (retain, nonatomic) NSMutableArray *remoteFilterArray;
@property (retain, nonatomic) id<IESLiveLanguageService> languageService;
@property (retain, nonatomic) id<IESLiveEffectPlatformConfig> config;
@property (retain, nonatomic) id<IESLiveEffectPlatformService> effectPlatformService;
@property (retain, nonatomic) id<IESLivePerfSampler> perfSampler;
@property (retain, nonatomic) NSHashTable *observers;
@property BOOL downloadStarted;

+ (id)filterList;
+ (id)getFilterWithIndex:(unsigned long long)arg0;
+ (long long)getSliderValueWithFilter:(id)arg0;
+ (id)getFilterPanelName;
+ (double)calculateIntensityOfFilter:(id)arg0 withValue:(long long)arg1;
+ (void)updateFilterTimeStamp:(id)arg0;
+ (BOOL)hasNewFilter;
+ (unsigned long long)getFilterCount;
+ (void)storeIntensity:(long long)arg0 ForFilter:(id)arg1;
+ (void)registerAsDataObserver:(id)arg0;
+ (void)fetchFilterList;
+ (BOOL)isStoreKeyUpdated;
+ (id)storeKeyForFilter:(id)arg0 useNewKey:(BOOL)arg1;
+ (double)getIntensityOfFilter:(id)arg0;
+ (id)sharedInstance;

- (id)filterList;
- (void)setFilterList:(id)arg0;
- (id)perfSampler;
- (void)setPerfSampler:(id)arg0;
- (id)languageService;
- (void)setLanguageService:(id)arg0;
- (id)filterPanel;
- (id)effectPlatformService;
- (void)setEffectPlatformService:(id)arg0;
- (void)updateFilterTimeStamp:(id)arg0;
- (void)storeIntensity:(long long)arg0 ForFilter:(id)arg1;
- (void)registerAsDataObserver:(id)arg0;
- (void)fetchFilterList;
- (double)intensityValueWith:(long long)arg0 forFilter:(id)arg1;
- (long long)intensityForFilter:(id)arg0;
- (id)storeKeyForFilter:(id)arg0 useNewKey:(BOOL)arg1;
- (BOOL)isEnableFilterStoreKeyUpdate;
- (id)localFilterArray;
- (void)setLocalFilterArray:(id)arg0;
- (void)notifyAllObserversOnFilterListChanged;
- (id)_convertEffectModel:(id)arg0;
- (id)remoteFilterArray;
- (BOOL)downloadStarted;
- (id)getABGroupEffects:(id)arg0 error:(id)arg1;
- (void)cacheRemoteFiltersWithFilterList:(id)arg0;
- (void)downloadFilters:(id)arg0;
- (void)setDownloadStarted:(BOOL)arg0;
- (void)notifyAllObserversOnFilterDownloaded:(id)arg0;
- (void)updateRelatedIndex:(unsigned long long)arg0 forFilePath:(id)arg1 withModel:(id)arg2;
- (id)getRelatedFilterWithRemoteIndex:(unsigned long long)arg0 withModel:(id)arg1;
- (void)setRemoteFilterArray:(id)arg0;
- (id)init;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (id)observers;
- (void)setup;
- (void)setObservers:(id)arg0;

@end
