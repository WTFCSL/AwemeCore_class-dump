//
//     Generated by private class-dump
//

@class HTSEventContext, HTSLiveUserAPI, NSString, NSArray, UIImage, NSOperationQueue, NSTimer, NSDictionary, NSMutableArray, IESLiveScreenRecordApi, NSNumber;
@protocol IESLiveRoomService, IESLiveScreenRecordReactions;

@interface IESLiveScreenRecordStore : NSObject <HTSLiveMessageSubscriber, IESLiveAnchorScreenRecordService> {
    BOOL hadShowPublicPanel;
    BOOL isRecording;
    BOOL _enableShareFansGroup;
    BOOL _enableAutoRecordShareFansGroup;
    BOOL _isBackFromPublishPage;
    BOOL _receiveFromApi;
    BOOL _isDownloading;
    BOOL _hadStartRecord;
    BOOL _hasPrepareTSUrl;
    unsigned long long _backRecordStatus;
    double _curProgress;
    NSString *_playUrl;
    NSString *_localVideoPath;
    id<IESLiveRoomService> _roomModel;
    id<IESLiveScreenRecordReactions> _reactions;
    NSString *_backRecordRequestPage;
    HTSEventContext *_trackContext;
    IESLiveScreenRecordApi *_api;
    HTSLiveUserAPI *_fansGroupAPI;
    NSArray *_tsUrls;
    NSMutableArray *_localTsUrls;
    UIImage *_coverImage;
    NSNumber *_roomID;
    NSString *_executionID;
    NSNumber *_endTime;
    NSNumber *_waitSeconds;
    NSNumber *_timeOutSeconds;
    double _fakeProgress;
    NSString *_downloadDirectories;
    NSOperationQueue *_downloadQueue;
    NSTimer *_timer;
    NSTimer *_downloadTimer;
    double _startDownloadTime;
    NSDictionary *_errorDictionary;
    NSDictionary *_errorDictionaryForDA;
    NSString *_backTrackFileName;
}

@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveScreenRecordApi *api;
@property (retain, nonatomic) HTSLiveUserAPI *fansGroupAPI;
@property (nonatomic) unsigned long long backRecordStatus;
@property (retain, nonatomic) NSString *playUrl;
@property (nonatomic) double curProgress;
@property (retain, nonatomic) NSArray *tsUrls;
@property (retain, nonatomic) NSMutableArray *localTsUrls;
@property (retain, nonatomic) UIImage *coverImage;
@property (retain, nonatomic) NSNumber *roomID;
@property (retain, nonatomic) NSString *executionID;
@property (retain, nonatomic) NSNumber *endTime;
@property (retain, nonatomic) NSNumber *waitSeconds;
@property (retain, nonatomic) NSNumber *timeOutSeconds;
@property (nonatomic) double fakeProgress;
@property (retain, nonatomic) NSString *downloadDirectories;
@property (retain, nonatomic) NSOperationQueue *downloadQueue;
@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) NSTimer *downloadTimer;
@property (nonatomic) double startDownloadTime;
@property (nonatomic) BOOL receiveFromApi;
@property (nonatomic) BOOL isDownloading;
@property (retain, nonatomic) NSDictionary *errorDictionary;
@property (retain, nonatomic) NSDictionary *errorDictionaryForDA;
@property (nonatomic) BOOL hadStartRecord;
@property (nonatomic) BOOL hasPrepareTSUrl;
@property (retain, nonatomic) NSString *backTrackFileName;
@property (readonly, nonatomic) NSString *localVideoPath;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (nonatomic) BOOL enableShareFansGroup;
@property (nonatomic) BOOL enableAutoRecordShareFansGroup;
@property (weak, nonatomic) id<IESLiveScreenRecordReactions> reactions;
@property (retain, nonatomic) NSString *backRecordRequestPage;
@property (nonatomic) BOOL isBackFromPublishPage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL hadShowPublicPanel;
@property (readonly, nonatomic) BOOL isRecording;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (void)setPlayUrl:(id)arg0;
- (id)roomModel;
- (void)setCoverImage:(id)arg0;
- (double)startDownloadTime;
- (void)setStartDownloadTime:(double)arg0;
- (void)removeTimer;
- (id)playUrl;
- (void)setRoomModel:(id)arg0;
- (void)taskDone;
- (double)fakeProgress;
- (void)setFakeProgress:(double)arg0;
- (void)dispatchFakeMessage:(id)arg0;
- (BOOL)fansGroupGuideDisabled;
- (BOOL)hadShowPublicPanel;
- (void)setHadShowPublicPanel:(BOOL)arg0;
- (id)localTsUrls;
- (void)setLocalTsUrls:(id)arg0;
- (unsigned long long)backRecordStatus;
- (void)setBackRecordStatus:(unsigned long long)arg0;
- (id)localVideoPath;
- (id)initWithContext:(id)arg0 componetContext:(id)arg1;
- (void)cancelTaskByReason:(unsigned long long)arg0;
- (BOOL)enableShareFansGroup;
- (void)fetchAllSortedFansGroup:(id)arg0 roomId:(id)arg1 complection:(id /* block */)arg2;
- (void)setBackRecordRequestPage:(id)arg0;
- (void)retryBackRecord:(id)arg0;
- (void)setIsBackFromPublishPage:(BOOL)arg0;
- (BOOL)isBackFromPublishPage;
- (void)requestForStartRecord:(id)arg0 isRetry:(BOOL)arg1;
- (id)backRecordRequestPage;
- (BOOL)enableAutoRecordShareFansGroup;
- (void)trackBackRecordCancel:(BOOL)arg0;
- (void)setupSignal;
- (void)resetAllParams;
- (void)setReceiveFromApi:(BOOL)arg0;
- (void)setHasPrepareTSUrl:(BOOL)arg0;
- (void)resetPartParams;
- (void)setCurProgress:(double)arg0;
- (void)clearFile:(BOOL)arg0;
- (void)setHadStartRecord:(BOOL)arg0;
- (void)waitForRequest;
- (double)curProgress;
- (void)requestForDelay;
- (void)taskTimeOut:(unsigned long long)arg0;
- (void)setTimeOutSeconds:(id)arg0;
- (void)setTsUrls:(id)arg0;
- (void)startTimerForMsg;
- (id)tsUrls;
- (void)downloadVieoWithList:(id)arg0 fromExtra:(BOOL)arg1;
- (id)timeOutSeconds;
- (void)waitForMsg;
- (void)handleFansGroupGuideMessage:(id)arg0;
- (void)trackBackRecordFail:(unsigned long long)arg0;
- (BOOL)enableOptForBackRecord;
- (void)addDownloadM3U8Task;
- (id)downloadDirectories;
- (void)addConverVideoTask:(id)arg0;
- (id)backTrackFileName;
- (void)trackBackRecordSuccess;
- (BOOL)receiveFromApi;
- (id)fansGroupAPI;
- (BOOL)hadStartRecord;
- (BOOL)hasPrepareTSUrl;
- (id)errorDictionaryForDA;
- (void)trackBackRecordCancel;
- (void)setEnableShareFansGroup:(BOOL)arg0;
- (void)setEnableAutoRecordShareFansGroup:(BOOL)arg0;
- (void)setFansGroupAPI:(id)arg0;
- (void)setDownloadDirectories:(id)arg0;
- (void)setErrorDictionary:(id)arg0;
- (void)setErrorDictionaryForDA:(id)arg0;
- (void)setBackTrackFileName:(id)arg0;
- (id)timer;
- (BOOL)isRecording;
- (BOOL)isDownloading;
- (void).cxx_destruct;
- (BOOL)isAnchor;
- (id)waitSeconds;
- (void)setDownloadQueue:(id)arg0;
- (id)endTime;
- (void)setTimer:(id)arg0;
- (void)setIsDownloading:(BOOL)arg0;
- (id)downloadQueue;
- (void)setWaitSeconds:(id)arg0;
- (void)setEndTime:(id)arg0;
- (void)setDownloadTimer:(id)arg0;
- (id)downloadTimer;
- (id)videoPath;
- (void)messageReceived:(id)arg0;
- (id)roomID;
- (void)setRoomID:(id)arg0;
- (id)reactions;
- (id)executionID;
- (void)setExecutionID:(id)arg0;
- (id)coverImage;
- (id)captureImage;
- (id)api;
- (void)setReactions:(id)arg0;
- (void)setApi:(id)arg0;
- (id)errorDictionary;

@end
