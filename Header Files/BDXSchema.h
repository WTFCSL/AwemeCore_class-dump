//
//     Generated by private class-dump
//

@class NSString;

@interface BDXSchema : NSObject <BDXSchemaProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (unsigned long long)serviceScope;
+ (id)serviceBizID;
+ (void)addInterceptor:(id)arg0;
+ (id)extractURLDetail:(id)arg0 withPrefix:(id)arg1;
+ (void)removeInterceptor:(id)arg0;
+ (id)resolverWithSchema:(id)arg0 contextInfo:(id)arg1;
+ (id)resolverWithSchema:(id)arg0 contextInfo:(id)arg1 paramClass:(Class)arg2;
+ (id)prefetchUrlWithSchema:(id)arg0;
+ (BOOL)isLynxContainerWith:(id)arg0;
+ (void)triggerForestPreload:(id)arg0 accessKey:(id)arg1 monitorId:(id)arg2 preloadMainDocDefault:(BOOL)arg3;
+ (id)interceptorList;
+ (void)triggerNewPrefetchIfNeeded:(id)arg0 contextInfo:(id)arg1;
+ (void)triggerPrefetchIfNeeded:(id)arg0 contextInfo:(id)arg1;
+ (void)triggerPreLoadIfNeeded:(id)arg0 contextInfo:(id)arg1;
+ (BOOL)isMatchRules:(id)arg0 with:(id)arg1;
+ (id)resourceUrlStringWithSchemaParam:(id)arg0;
+ (void)triggerForestPreloadIfNeeded:(id)arg0 context:(id)arg1;
+ (BOOL)__hasViewCachedWithSchema:(id)arg0 context:(id)arg1;
+ (BOOL)canPrefetchInRouter:(id)arg0 contextInfo:(id)arg1;
+ (void)registerPrefetchInitDataIfNeeded:(id)arg0 prefetchSchema:(id)arg1 contextInfo:(id)arg2;
+ (void)prefetchMonitor:(id)arg0 apis:(id)arg1 contextInfo:(id)arg2 state:(BOOL)arg3;
+ (id)canUseBDXFromSetting:(id)arg0 params:(id)arg1;
+ (void)triggerPrefetch:(id)arg0 enableNewPrefetch:(BOOL)arg1;
+ (unsigned long long)serviceType;

@end
