//
//     Generated by private class-dump
//

@class NSMutableDictionary, LSGLPictureOutput, LSGLContext, NSData, NSString, LSGLPictureMixer;

@interface IESLiveLinkVideoMixer : NSObject <IESLiveLinkRTCInteractVideoSinkDelegate, LSGLPictureOutputDelegate> {
    unsigned long long _mixerType;
    NSData *_extendedData;
    LSGLContext *_context;
    NSMutableDictionary *_inputNodeMap;
    LSGLPictureMixer *_gl_mixer;
    LSGLPictureOutput *_gl_output;
    struct CGSize { double width; double height; } _canvasSize;
}

@property (retain, nonatomic) LSGLContext *context;
@property (retain, nonatomic) NSMutableDictionary *inputNodeMap;
@property (retain, nonatomic) LSGLPictureMixer *gl_mixer;
@property (retain, nonatomic) LSGLPictureOutput *gl_output;
@property (nonatomic) unsigned long long mixerType;
@property (retain, nonatomic) NSData *extendedData;
@property (nonatomic) struct CGSize { double width; double height; } canvasSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)renderPixelBuffer:(struct __CVBuffer { } *)arg0 rotation:(long long)arg1 extendedData:(id)arg2 withCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg3 layerId:(id)arg4 needRender:(BOOL)arg5;
- (BOOL)isLayerInfoExist:(int)arg0;
- (void)updateLayerInfo:(struct { int x0; int x1; int x2; })arg0 rect:(struct LiveLinkLayerRect { double x0; double x1; double x2; double x3; })arg1 animated:(BOOL)arg2;
- (void)addLayerInfo:(struct { int x0; int x1; int x2; })arg0 rect:(struct LiveLinkLayerRect { double x0; double x1; double x2; double x3; })arg1 isMasterLayer:(BOOL)arg2;
- (void)createMixerPipeLine;
- (void)setInputNodeMap:(id)arg0;
- (id)inputNodeMap;
- (unsigned long long)rotationModeByConfig:(long long)arg0;
- (id)gl_mixer;
- (id)gl_output;
- (void)setGl_mixer:(id)arg0;
- (void)setGl_output:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setExtendedData:(id)arg0;
- (id)context;
- (id)extendedData;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })canvasSize;
- (void)setOutputDelegate:(id)arg0;
- (unsigned long long)mixerType;
- (void)setMixerType:(unsigned long long)arg0;

@end
