//
//     Generated by private class-dump
//

@class NSString, NSDictionary;

@interface HMDOOMCrashInfo : NSObject {
    BOOL _isSlardarMallocInuse;
    BOOL _isMemoryDumpInterrupt;
    BOOL _isCPUException;
    BOOL _isAppEnterBackground;
    int _appContinuousQuitTimes;
    unsigned long long _memoryPressure;
    double _memoryPressureTimestamp;
    double _enterForegoundTime;
    double _enterBackgoundTime;
    double _latestTime;
    NSString *_internalSessionID;
    double _appStartTime;
    NSString *_appVersion;
    NSString *_buildVersion;
    NSString *_sysVersion;
    double _updateTime;
    NSString *_lastScene;
    NSDictionary *_operationTrace;
    double _freeDisk;
    long long _freeDiskBlockSize;
    NSString *_sessionID;
    unsigned long long _exception_main_address;
    NSString *_loginfo;
    unsigned long long _slardarMallocUsageSize;
    NSString *_detailInfo;
    NSString *_thermalState;
    double _inAppTime;
    double _inLastSceneTime;
    double _restartInterval;
    NSString *_binaryInfo;
    struct { double updateTime; unsigned long long appMemory; unsigned long long usedMemory; unsigned long long totalMemory; unsigned long long availableMemory; unsigned long long appMemoryPeak; unsigned long long totalVirtualMemory; unsigned long long usedVirtualMemory; } _memoryInfo;
}

@property (nonatomic) unsigned long long memoryPressure;
@property (nonatomic) double memoryPressureTimestamp;
@property (nonatomic) double enterForegoundTime;
@property (nonatomic) double enterBackgoundTime;
@property (nonatomic) double latestTime;
@property (copy, nonatomic) NSString *internalSessionID;
@property (nonatomic) double appStartTime;
@property (copy, nonatomic) NSString *appVersion;
@property (copy, nonatomic) NSString *buildVersion;
@property (copy, nonatomic) NSString *sysVersion;
@property (nonatomic) struct { double updateTime; unsigned long long appMemory; unsigned long long usedMemory; unsigned long long totalMemory; unsigned long long availableMemory; unsigned long long appMemoryPeak; unsigned long long totalVirtualMemory; unsigned long long usedVirtualMemory; } memoryInfo;
@property (nonatomic) double updateTime;
@property (copy, nonatomic) NSString *lastScene;
@property (copy, nonatomic) NSDictionary *operationTrace;
@property (nonatomic) double freeDisk;
@property (nonatomic) long long freeDiskBlockSize;
@property (copy, nonatomic) NSString *sessionID;
@property (nonatomic) unsigned long long exception_main_address;
@property (copy, nonatomic) NSString *loginfo;
@property (nonatomic) BOOL isSlardarMallocInuse;
@property (nonatomic) unsigned long long slardarMallocUsageSize;
@property (nonatomic) BOOL isMemoryDumpInterrupt;
@property (copy, nonatomic) NSString *detailInfo;
@property (nonatomic) int appContinuousQuitTimes;
@property (copy, nonatomic) NSString *thermalState;
@property (nonatomic) BOOL isCPUException;
@property (nonatomic) double inAppTime;
@property (nonatomic) double inLastSceneTime;
@property (nonatomic) double restartInterval;
@property (copy, nonatomic) NSString *binaryInfo;
@property (nonatomic) BOOL isAppEnterBackground;

- (id)binaryInfo;
- (void)setBinaryInfo:(id)arg0;
- (void)setLastScene:(id)arg0;
- (void)setInAppTime:(double)arg0;
- (double)inAppTime;
- (id)operationTrace;
- (void)setOperationTrace:(id)arg0;
- (long long)freeDiskBlockSize;
- (void)setFreeDiskBlockSize:(long long)arg0;
- (void)setDetailInfo:(id)arg0;
- (int)appContinuousQuitTimes;
- (unsigned long long)memoryPressure;
- (BOOL)isCPUException;
- (id)detailInfo;
- (double)inLastSceneTime;
- (double)restartInterval;
- (BOOL)isAppEnterBackground;
- (void)setIsAppEnterBackground:(BOOL)arg0;
- (void)setMemoryPressure:(unsigned long long)arg0;
- (void)setMemoryPressureTimestamp:(double)arg0;
- (void)setEnterForegoundTime:(double)arg0;
- (void)setEnterBackgoundTime:(double)arg0;
- (void)setLatestTime:(double)arg0;
- (void)setInternalSessionID:(id)arg0;
- (void)setAppStartTime:(double)arg0;
- (void)setSysVersion:(id)arg0;
- (void)setIsCPUException:(BOOL)arg0;
- (void)setMemoryInfo:(struct { double x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; })arg0;
- (void)setException_main_address:(unsigned long long)arg0;
- (void)setIsSlardarMallocInuse:(BOOL)arg0;
- (void)setSlardarMallocUsageSize:(unsigned long long)arg0;
- (id)internalSessionID;
- (double)latestTime;
- (void)setAppContinuousQuitTimes:(int)arg0;
- (id)initWithAppState:(id)arg0 extraDict:(id)arg1;
- (void)setIsMemoryDumpInterrupt:(BOOL)arg0;
- (id)sysVersion;
- (double)memoryPressureTimestamp;
- (double)enterForegoundTime;
- (double)enterBackgoundTime;
- (double)appStartTime;
- (unsigned long long)exception_main_address;
- (BOOL)isSlardarMallocInuse;
- (unsigned long long)slardarMallocUsageSize;
- (void)setInLastSceneTime:(double)arg0;
- (void)setRestartInterval:(double)arg0;
- (double)freeDisk;
- (void)setFreeDisk:(double)arg0;
- (id)loginfo;
- (void)setLoginfo:(id)arg0;
- (BOOL)isMemoryDumpInterrupt;
- (struct { double x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; })memoryInfo;
- (void)setBuildVersion:(id)arg0;
- (id)buildVersion;
- (void)setAppVersion:(id)arg0;
- (void).cxx_destruct;
- (void)setSessionID:(id)arg0;
- (id)sessionID;
- (double)updateTime;
- (id)appVersion;
- (id)lastScene;
- (id)thermalState;
- (void)setUpdateTime:(double)arg0;
- (void)setThermalState:(id)arg0;

@end
