//
//     Generated by private class-dump
//

@class UIView, NSString, IESECLynxCardTimingModel, NSMutableDictionary, NSDictionary, LynxExtraTiming, IESECLynxCardModel, IESECLynxCardPerfMonitor, HybridLynxView;
@protocol HybridResourceProtocol, IESECLynxCardDelegate, LynxImageFetcher;

@interface IESECLynxCard : UIView <HybridKitViewLifecycleProtocol, LynxTimingListener> {
    BOOL _jsRTReady;
    BOOL _tmpLoadSuccess;
    BOOL _lynxViewFromPreloader;
    BOOL _pageAppeared;
    BOOL _isUpdating;
    id<IESECLynxCardDelegate> _delegate;
    IESECLynxCardModel *_model;
    IESECLynxCardTimingModel *_timingModel;
    id<HybridResourceProtocol> _templateResource;
    HybridLynxView *_lynxView;
    NSMutableDictionary *_firstLoadEvents;
    id<LynxImageFetcher> _ecImageFetcher;
    LynxExtraTiming *_lynxExtraTiming;
    UIView *_loadingView;
    long long _updateCount;
    NSDictionary *_hybridMonitorContext;
    NSString *_hmBid;
    IESECLynxCardPerfMonitor *_perfMonitor;
}

@property (retain, nonatomic) HybridLynxView *lynxView;
@property (retain, nonatomic) IESECLynxCardModel *model;
@property (nonatomic) BOOL jsRTReady;
@property (nonatomic) BOOL tmpLoadSuccess;
@property (retain, nonatomic) NSMutableDictionary *firstLoadEvents;
@property (nonatomic) BOOL lynxViewFromPreloader;
@property (retain, nonatomic) id<LynxImageFetcher> ecImageFetcher;
@property (retain, nonatomic) IESECLynxCardTimingModel *timingModel;
@property (retain, nonatomic) id<HybridResourceProtocol> templateResource;
@property (retain, nonatomic) LynxExtraTiming *lynxExtraTiming;
@property (retain, nonatomic) UIView *loadingView;
@property long long updateCount;
@property (nonatomic) BOOL pageAppeared;
@property BOOL isUpdating;
@property (copy, nonatomic) NSDictionary *hybridMonitorContext;
@property (copy, nonatomic) NSString *hmBid;
@property (retain, nonatomic) IESECLynxCardPerfMonitor *perfMonitor;
@property (weak, nonatomic) id<IESECLynxCardDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)sendEvent:(id)arg0 params:(id)arg1;
- (id)findViewWithName:(id)arg0;
- (id)lynxView;
- (struct CGSize { double x0; double x1; })triggerLayout;
- (id)uiWithIdSelector:(id)arg0;
- (id)hybridMonitorContext;
- (void)registerBridge:(id)arg0;
- (id)autoPlayTimer;
- (void)setAutoPlayTimer:(id)arg0;
- (void)viewWillStartLoading:(id)arg0;
- (void)view:(id)arg0 didChangeIntrinsicContentSize:(struct CGSize { double x0; double x1; })arg1;
- (void)viewDidStartLoading:(id)arg0;
- (void)view:(id)arg0 didStartFetchResourceWithURL:(id)arg1;
- (void)view:(id)arg0 didFetchedResource:(id)arg1 error:(id)arg2;
- (void)viewDidFirstScreen:(id)arg0;
- (void)view:(id)arg0 didFinishLoadWithURL:(id)arg1;
- (void)viewDidUpdate:(id)arg0;
- (void)view:(id)arg0 didRecieveError:(id)arg1;
- (void)view:(id)arg0 didReceivePerformance:(id)arg1;
- (void)viewDidPageUpdate:(id)arg0;
- (void)viewDidConstructJSRuntime:(id)arg0;
- (id)uiWithName:(id)arg0;
- (void)lynxView:(id)arg0 onSetup:(id)arg1;
- (void)lynxView:(id)arg0 onUpdate:(id)arg1 timing:(id)arg2;
- (void)setLynxView:(id)arg0;
- (void)updateGlobalProps:(id)arg0;
- (void)setPerfMonitor:(id)arg0;
- (void)setupLynxView;
- (void)registerBridges;
- (void)showLoadingViewIfNeed;
- (id)perfMonitor;
- (id)timingModel;
- (void)setTimingModel:(id)arg0;
- (void)setHybridMonitorContext:(id)arg0;
- (void)view:(id)arg0 didLoadFailedWithURL:(id)arg1 error:(id)arg2;
- (void)resetLynxData:(id)arg0 needMerge:(BOOL)arg1;
- (void)viewDidAppear:(id)arg0 sourceType:(unsigned long long)arg1;
- (void)viewDidDisappear:(id)arg0 sourceType:(unsigned long long)arg1;
- (void)updateLynxViewport;
- (void)setHmBid:(id)arg0;
- (void)resetLynxHeightMode:(long long)arg0;
- (void)resetLynxWidthMode:(long long)arg0;
- (id)templateResource;
- (BOOL)pageDidAppeared;
- (id)hmBid;
- (void)endAutoPlayTimer;
- (id)findViewsFromRootView:(id)arg0 filter:(id /* block */)arg1;
- (void)setPlayCompleteBlock:(id /* block */)arg0;
- (void)playWithAutoPlayDuration:(double)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)playCompleteJSBRegisterd;
- (void)setPlayCompleteJSBRegisterd;
- (void)beginAutoPlayTimerWithDuration:(double)arg0;
- (void)playCompleteBlockWithPlayNext:(BOOL)arg0;
- (void)onThemeChanged:(id)arg0;
- (void)layoutLynxVeiwIfNeed:(BOOL)arg0;
- (void)updateOrResetWithData:(id)arg0;
- (void)setGreyStyleWithSaturation:(double)arg0;
- (void)injectPropsExtra:(id)arg0;
- (void)injectBstViewModel:(id)arg0;
- (void)setTmpLoadSuccess:(BOOL)arg0;
- (void)setJsRTReady:(BOOL)arg0;
- (BOOL)tmpLoadSuccess;
- (BOOL)pageAppeared;
- (void)dismissLoadingViewIfNeed:(BOOL)arg0;
- (void)sendPageVisibleChangedForMutiThread;
- (BOOL)isPageChanged:(id)arg0 sourceType:(unsigned long long)arg1;
- (void)setPageAppeared:(BOOL)arg0;
- (BOOL)canSendEventsToLynx;
- (BOOL)jsRTReady;
- (void)sendPageVisibilityEvent:(id)arg0 showOrHide:(BOOL)arg1 source:(unsigned long long)arg2;
- (void)_sendEvent:(id)arg0 params:(id)arg1;
- (id)firstLoadEvents;
- (id)fakeEncodedMessage:(id)arg0;
- (BOOL)lynxViewFromPreloader;
- (void)registerXBridgeClasses:(id)arg0;
- (void)registerXBridgeInstances:(id)arg0;
- (BOOL)isLynxViewFromPreloader;
- (void)setTemplateResource:(id)arg0;
- (void)setFirstLoadEvents:(id)arg0;
- (void)setLynxViewFromPreloader:(BOOL)arg0;
- (id)ecImageFetcher;
- (void)setEcImageFetcher:(id)arg0;
- (id)lynxExtraTiming;
- (void)setLynxExtraTiming:(id)arg0;
- (BOOL)isUpdating;
- (void)setModel:(id)arg0;
- (void).cxx_destruct;
- (id)model;
- (void)load;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)delegate;
- (void)prepareForReuse;
- (void)setIsUpdating:(BOOL)arg0;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)pause;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (long long)updateCount;
- (void)setUpdateCount:(long long)arg0;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (void)updateWithModel:(id)arg0;
- (void)updateSize:(struct CGSize { double x0; double x1; })arg0;

@end
