//
//     Generated by private class-dump
//

@class IESLiveAlphaVideoPlayerConfiguration, HTSEventContext, IESLiveAlphaVideoPlayerButtonView, NSDictionary, NSString, HTSLiveEffectPlayerStringPiece, IESLiveVideoGiftController;
@protocol IESLiveAlphaVideoPlayerActionDelegate, IESLiveRoomServiceAdapter, IESLiveRoomRealStreamingServiceAdapter, IESLiveAlphaVideoPlayerCallbackDelegate;

@interface IESLiveAlphaVideoPlayer : NSObject <IESLiveVideoGiftControllerDelegate, IESLiveAlphaVideoPlayerDelegate> {
    BOOL _hasMannualOpenAEC;
    BOOL _liveAlphaVideoPlayerEnableAuxStreamAudioFile;
    BOOL _giftSoundVolumeDynamicAdjust;
    BOOL _liveAudioGiftDisableAec;
    BOOL _bpeaAudioCertEnable;
    id<IESLiveAlphaVideoPlayerCallbackDelegate> _playerCallbackDelegate;
    id<IESLiveAlphaVideoPlayerActionDelegate> _playerActionDelegate;
    IESLiveAlphaVideoPlayerConfiguration *_configuration;
    id<IESLiveRoomServiceAdapter> _room;
    HTSEventContext *_trackContext;
    IESLiveVideoGiftController *_giftController;
    HTSLiveEffectPlayerStringPiece *_stringPiece;
    IESLiveAlphaVideoPlayerButtonView *_buttonView;
    id<IESLiveRoomRealStreamingServiceAdapter> _realStreamingService;
    NSDictionary *_soundGiftVolumeConfigs;
    double _liveAudioGiftAECDelayTime;
    long long _liveAudioGiftAECRetryTime;
    NSString *_bpeaAudioCertToken;
}

@property (retain, nonatomic) id<IESLiveRoomServiceAdapter> room;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveVideoGiftController *giftController;
@property (retain, nonatomic) HTSLiveEffectPlayerStringPiece *stringPiece;
@property (retain, nonatomic) IESLiveAlphaVideoPlayerConfiguration *configuration;
@property (retain, nonatomic) IESLiveAlphaVideoPlayerButtonView *buttonView;
@property (retain, nonatomic) id<IESLiveRoomRealStreamingServiceAdapter> realStreamingService;
@property (nonatomic) BOOL hasMannualOpenAEC;
@property (nonatomic) BOOL liveAlphaVideoPlayerEnableAuxStreamAudioFile;
@property (copy, nonatomic) NSDictionary *soundGiftVolumeConfigs;
@property (nonatomic) BOOL giftSoundVolumeDynamicAdjust;
@property (nonatomic) BOOL liveAudioGiftDisableAec;
@property (nonatomic) double liveAudioGiftAECDelayTime;
@property (nonatomic) long long liveAudioGiftAECRetryTime;
@property (nonatomic) BOOL bpeaAudioCertEnable;
@property (copy, nonatomic) NSString *bpeaAudioCertToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<IESLiveAlphaVideoPlayerCallbackDelegate> playerCallbackDelegate;
@property (weak, nonatomic) id<IESLiveAlphaVideoPlayerActionDelegate> playerActionDelegate;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (void)didFinishPlayingWithError:(id)arg0;
- (void)frameCallBack:(double)arg0;
- (void)videoGiftController:(id)arg0 willPlayFrame:(id)arg1;
- (void)videoGiftController:(id)arg0 sceneError:(id)arg1 scene:(unsigned long long)arg2;
- (void)successParseConfigResourceModel:(id)arg0;
- (BOOL)videoControllerShouldDelayPlayIfAudioResouces:(id)arg0;
- (void)videoGiftController:(id)arg0 didSetMetalViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (float)audioPlayVolume;
- (id)videoGiftController:(id)arg0 externalAudioPlayer:(id)arg1 resource:(id)arg2 error:(id *)arg3;
- (void)didSetAttachingDIContext;
- (BOOL)bpeaAudioCertEnable;
- (id)bpeaAudioCertToken;
- (void)setBpeaAudioCertEnable:(BOOL)arg0;
- (void)setBpeaAudioCertToken:(id)arg0;
- (void)setGiftController:(id)arg0;
- (id)giftController;
- (id)initWithRoom:(id)arg0 trackContext:(id)arg1;
- (void)startPlayWithConfiguration:(id)arg0;
- (id)realStreamingService;
- (void)asyncPlayWithCheckAECState:(long long)arg0;
- (BOOL)isHeadsetPluggedIn;
- (void)setRealStreamingService:(id)arg0;
- (void)setPlayerCallbackDelegate:(id)arg0;
- (BOOL)enableVibrate;
- (void)setEnableVibrate:(BOOL)arg0;
- (void)setGiftSoundVolumeDynamicAdjust:(BOOL)arg0;
- (void)setEnableSound:(BOOL)arg0;
- (void)setLiveAlphaVideoPlayerEnableAuxStreamAudioFile:(BOOL)arg0;
- (void)setLiveAudioGiftDisableAec:(BOOL)arg0;
- (void)setLiveAudioGiftAECDelayTime:(double)arg0;
- (void)setLiveAudioGiftAECRetryTime:(long long)arg0;
- (BOOL)enableSound;
- (BOOL)liveAlphaVideoPlayerEnableAuxStreamAudioFile;
- (void)adjustPlayerViewLevelWithConfiguration:(id)arg0;
- (void)showStringPiece:(id)arg0 videoRatio:(double)arg1 needCircle:(BOOL)arg2;
- (id)playerCallbackDelegate;
- (void)stopPlayingWithError:(id)arg0;
- (void)didClickVibrateButton;
- (void)loadButtonView:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 withAction:(SEL)arg2;
- (BOOL)vibrateButtonDidShow;
- (void)setVibrateButtonDidShow:(BOOL)arg0;
- (void)updateVibrateButton:(id)arg0 completion:(id /* block */)arg1;
- (id)playerActionDelegate;
- (void)didClickSoundButton;
- (BOOL)soundButtonDidShow;
- (void)setSoundButtonDidShow:(BOOL)arg0;
- (void)updateSoundButton:(id)arg0 completion:(id /* block */)arg1;
- (void)didClickVibrateAndSoundButton;
- (void)updateVibrateAndSoundButton:(id)arg0 completion:(id /* block */)arg1;
- (void)destroyButtonView;
- (BOOL)hasMannualOpenAEC;
- (void)closeEchoCancellation;
- (void)showVibrateAndSoundButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)showSoundButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)showVibrateButton:(id)arg0 metalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)execActionSafely:(id /* block */)arg0;
- (BOOL)shouldDelayPlayIfAudioResouces:(id)arg0;
- (BOOL)liveAudioGiftDisableAec;
- (void)openEchoCancellation;
- (double)liveAudioGiftAECDelayTime;
- (long long)liveAudioGiftAECRetryTime;
- (id)stringPiece;
- (BOOL)giftSoundVolumeDynamicAdjust;
- (float)_getAudioPlayVolumeFromPlayerStreamSound;
- (id)soundGiftVolumeConfigs;
- (void)setSoundGiftVolumeConfigs:(id)arg0;
- (void)setHasMannualOpenAEC:(BOOL)arg0;
- (void)setStringPiece:(id)arg0;
- (void)removeStringPiece;
- (void)monitorWithConfiguration:(id)arg0 error:(id)arg1;
- (void)setPlayerActionDelegate:(id)arg0;
- (id)buttonView;
- (void).cxx_destruct;
- (void)stopPlaying;
- (id)configuration;
- (BOOL)isPlaying;
- (void)setButtonView:(id)arg0;
- (void)setConfiguration:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (void)stopEngine;

@end
