//
//     Generated by private class-dump
//

@class HTSEventContext, NSString, NSMutableDictionary, IESLiveComponentContext, NSObject, NSLock;
@protocol IESLiveRoomService, OS_dispatch_queue;

@interface IESLiveOpenPlatformAuthManager : NSObject <IESLiveOpenPlatformAuthManagerInterface> {
    id<IESLiveRoomService> _room;
    IESLiveComponentContext *_componentContext;
    HTSEventContext *_eventContext;
    NSString *_currentAppId;
    NSString *_currentUid;
    NSMutableDictionary *_authDict;
    NSObject<OS_dispatch_queue> *_operationQueue;
    NSLock *_authLock;
}

@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (copy, nonatomic) NSString *currentAppId;
@property (copy, nonatomic) NSString *currentUid;
@property (retain, nonatomic) NSMutableDictionary *authDict;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (retain, nonatomic) NSLock *authLock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)componentContext;
- (void)setComponentContext:(id)arg0;
- (void)didSetAttachingDIContext;
- (void)setEventContext:(id)arg0;
- (id)currentAppId;
- (void)setCurrentAppId:(id)arg0;
- (id)authDict;
- (void)setAuthDict:(id)arg0;
- (id)currentUid;
- (void)setCurrentUid:(id)arg0;
- (void)addLoginObserver;
- (void)loadAuthInfoWithAppId:(id)arg0;
- (void)setScopeAuth:(long long)arg0 scopeName:(id)arg1 appId:(id)arg2 completion:(id /* block */)arg3;
- (long long)getScopeAuthScopeName:(id)arg0 appId:(id)arg1;
- (id)getAllAppIdScopeAuthWithAppId:(id)arg0;
- (id)queryAllAppIdScopeAuthWithAppId:(id)arg0;
- (id)scopeTrackNameWithScopeName:(id)arg0;
- (id)initWithRoom:(id)arg0 componentContext:(id)arg1 eventContext:(id)arg2;
- (void)loadAuthInfoWithUid:(id)arg0;
- (id)authLock;
- (void)loadAuthInfoIfNeed;
- (void)setAuthLock:(id)arg0;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (id)operationQueue;
- (id)eventContext;
- (id)room;
- (void)setRoom:(id)arg0;

@end
