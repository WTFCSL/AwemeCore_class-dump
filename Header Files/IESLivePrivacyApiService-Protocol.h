//
//     Generated by private class-dump
//

@protocol IESLivePrivacyApiService <NSObject>

- (BOOL)openURL:(id)arg0 withCert:(id)arg1 error:(id *)arg2;
- (void)openURL:(id)arg0 withCert:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)requestRecordPermission:(id /* block */)arg0 audioSession:(id)arg1 privacyCert:(id)arg2;
- (void)requestAccessCameraWithPrivacyCert:(id)arg0 completionHandler:(id /* block */)arg1;
- (int)startAudioOutputUnitWithAudioUnit:(struct OpaqueAudioComponentInstance { } *)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (int)stopAudioOutputUnitWithAudioUnit:(struct OpaqueAudioComponentInstance { } *)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)startRunningWithCaptureSession:(id)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)stopRunningWithCaptureSession:(id)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)getPasteboardContentWithCert:(id)arg0 completion:(id /* block */)arg1;
- (void)requestAccessMicrophoneWithPrivacyCert:(id)arg0 completionHandler:(id /* block */)arg1;
- (long long)authorizationStatusForEntityType:(unsigned long long)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)requestAccessToEntityType:(unsigned long long)arg0 eventStore:(id)arg1 privacyCert:(id)arg2 completion:(id /* block */)arg3;
- (id)calendarsForEntityType:(unsigned long long)arg0 eventStore:(id)arg1 privacyCert:(id)arg2 error:(id *)arg3;
- (id)predicateForEventsWithStartDate:(id)arg0 endDate:(id)arg1 calendars:(id)arg2 eventStore:(id)arg3 privacyCert:(id)arg4 error:(id *)arg5;
- (id)eventsMatchingPredicate:(id)arg0 eventStore:(id)arg1 privacyCert:(id)arg2 error:(id *)arg3;
- (BOOL)saveEvent:(id)arg0 span:(long long)arg1 eventStore:(id)arg2 privacyCert:(id)arg3 error:(id *)arg4;
- (BOOL)removeEvent:(id)arg0 span:(long long)arg1 eventStore:(id)arg2 privacyCert:(id)arg3 error:(id *)arg4;
- (void)requestAccessMicrophoneWithPrivacyHybridCert:(id)arg0 context:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setString:(id)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)setItems:(id)arg0 options:(id)arg1 privacyCert:(id)arg2 error:(id *)arg3;
- (void)setItems:(id)arg0 privacyCert:(id)arg1 error:(id *)arg2;
- (void)getPasteboardContentWithCert:(id)arg0 isNeedConsumeRepeatedly:(BOOL)arg1 completion:(id /* block */)arg2;
- (id)createSKStoreWithCert:(id)arg0 error:(id *)arg1;
- (void)requestAccessCameraWithPrivacyHybridCert:(id)arg0 context:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)IESLivePrivacyCert:(id)arg0;

@optional

- (BOOL)openURL:(id)arg0 withHybridCert:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (void)openURL:(id)arg0 withHybridCert:(id)arg1 context:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)setString:(id)arg0 privacyHybridCert:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (void)getPasteboardContentWithHybridCert:(id)arg0 context:(id)arg1 completion:(id /* block */)arg2;
- (void)requestAccessToEntityType:(unsigned long long)arg0 eventStore:(id)arg1 privacyHybridCert:(id)arg2 context:(id)arg3 completion:(id /* block */)arg4;
- (long long)authorizationStatusForEntityType:(unsigned long long)arg0 privacyHybridCert:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)calendarsForEntityType:(unsigned long long)arg0 eventStore:(id)arg1 privacyHybridCert:(id)arg2 context:(id)arg3 error:(id *)arg4;
- (id)eventsMatchingPredicate:(id)arg0 eventStore:(id)arg1 privacyHybridCert:(id)arg2 context:(id)arg3 error:(id *)arg4;
- (id)predicateForEventsWithStartDate:(id)arg0 endDate:(id)arg1 calendars:(id)arg2 eventStore:(id)arg3 privacyHybridCert:(id)arg4 context:(id)arg5 error:(id *)arg6;
- (BOOL)saveEvent:(id)arg0 span:(long long)arg1 eventStore:(id)arg2 privacyHybridCert:(id)arg3 context:(id)arg4 error:(id *)arg5;
- (BOOL)removeEvent:(id)arg0 span:(long long)arg1 eventStore:(id)arg2 privacyHybridCert:(id)arg3 context:(id)arg4 error:(id *)arg5;
- (void)requestUserNotificationsAuthorizationWithOptions:(unsigned long long)arg0 privacyHybridCert:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)checkPhotoLibraryPermissionWithCert:(id)arg0 context:(id)arg1 options:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)requestPhotoAlbumAuthorizationWithCert:(id)arg0 context:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fetchAssetsWithLocalIdentifiers:(id)arg0 options:(id)arg1 cert:(id)arg2 context:(id)arg3 error:(id *)arg4;
- (int)requestImageForAsset:(id)arg0 targetSize:(struct CGSize { double x0; double x1; })arg1 contentMode:(long long)arg2 options:(id)arg3 resultHandler:(id /* block */)arg4 cert:(id)arg5 error:(id *)arg6;
- (int)requestAVAssetForVideo:(id)arg0 options:(id)arg1 resultHandler:(id /* block */)arg2 cert:(id)arg3 error:(id *)arg4;

@end
