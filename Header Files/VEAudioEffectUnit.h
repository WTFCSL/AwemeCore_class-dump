//
//     Generated by private class-dump
//

@class VEAudioConfig, IESMMAudioPitch, IESMMAudioPitchSpeed, IESMMAudioDetection, IESMMAudioSamiFilter, IESMMAudioBalance, IESMMAudioDenoise, IESMMAudioDSP, IESMMAudioFade, IESMMAudioSamiProcessorFilter, IESMMAudioLimiter, IESMMAudioScratching, IESMMAudioPitchV2;

@interface VEAudioEffectUnit : IESMMObject {
    VEAudioConfig *_audioConfig;
    double _audioKeyFrameVolume;
    IESMMAudioLimiter *_limiterFilter;
    IESMMAudioPitch *_pitchFilter;
    IESMMAudioPitchV2 *_pitchFilterV2;
    IESMMAudioFade *_fadeFilter;
    IESMMAudioPitchSpeed *_speedFilter;
    IESMMAudioScratching *_audioScratchFilter;
    IESMMAudioDenoise *_denoiseFilter;
    IESMMAudioBalance *_balanceFilter;
    IESMMAudioDetection *_detectionFilter;
    IESMMAudioDSP *_dspFilter;
    IESMMAudioSamiFilter *_samiDenoiseFilter;
    IESMMAudioSamiProcessorFilter *_samiPitchFilter;
    long long _channels;
    double _sampleRate;
}

@property (retain, nonatomic) IESMMAudioLimiter *limiterFilter;
@property (retain, nonatomic) IESMMAudioPitch *pitchFilter;
@property (retain, nonatomic) IESMMAudioPitchV2 *pitchFilterV2;
@property (retain, nonatomic) IESMMAudioFade *fadeFilter;
@property (retain, nonatomic) IESMMAudioPitchSpeed *speedFilter;
@property (retain, nonatomic) IESMMAudioScratching *audioScratchFilter;
@property (retain, nonatomic) IESMMAudioDenoise *denoiseFilter;
@property (retain, nonatomic) IESMMAudioBalance *balanceFilter;
@property (retain, nonatomic) IESMMAudioDetection *detectionFilter;
@property (retain, nonatomic) IESMMAudioDSP *dspFilter;
@property (retain, nonatomic) IESMMAudioSamiFilter *samiDenoiseFilter;
@property (retain, nonatomic) IESMMAudioSamiProcessorFilter *samiPitchFilter;
@property (nonatomic) long long channels;
@property (nonatomic) double sampleRate;
@property (retain, nonatomic) VEAudioConfig *audioConfig;
@property (nonatomic) double audioKeyFrameVolume;

- (id)audioConfig;
- (void)setAudioConfig:(id)arg0;
- (void)setAudioKeyFrameVolume:(double)arg0;
- (id)limiterFilter;
- (id)pitchFilter;
- (id)speedFilter;
- (id)pitchFilterV2;
- (id)audioScratchFilter;
- (id)denoiseFilter;
- (id)balanceFilter;
- (id)dspFilter;
- (int)processSamiFtgru:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (int)processSpeed:(float **)arg0 samples:(unsigned long long)arg1 maxSamples:(unsigned long long)arg2 filter:(id)arg3;
- (int)processCurveSpeed:(float **)arg0 samples:(unsigned long long)arg1 maxSamples:(unsigned long long)arg2 filter:(id)arg3 curveRatio:(double)arg4;
- (int)processPitch:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (int)processPitchV2:(float **)arg0 samples:(int)arg1 filter:(id)arg2 atTime:(double)arg3;
- (int)processSamiPitch:(float **)arg0 samples:(int)arg1 filter:(id)arg2 atTime:(double)arg3;
- (int)processDetection:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (int)processBalance:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (void)processVolume:(float **)arg0 samples:(int)arg1 filter:(id)arg2 frameTime:(double)arg3;
- (void)processFade:(float **)arg0 samples:(int)arg1 filter:(id)arg2 frameTime:(double)arg3;
- (int)processDenoise:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (int)processDSP:(float **)arg0 samples:(int)arg1 filter:(id)arg2;
- (void)setAudioScratchFilter:(id)arg0;
- (void)setSpeedFilter:(id)arg0;
- (id)samiPitchFilter;
- (void)setSamiPitchFilter:(id)arg0;
- (void)setLimiterFilter:(id)arg0;
- (double)getCurrentVolumnAtPts:(double)arg0 withVolumeConfig:(id)arg1;
- (void)setDenoiseFilter:(id)arg0;
- (id)samiDenoiseFilter;
- (void)setSamiDenoiseFilter:(id)arg0;
- (void)setBalanceFilter:(id)arg0;
- (id)detectionFilter;
- (void)setDetectionFilter:(id)arg0;
- (void)setDspFilter:(id)arg0;
- (unsigned int)processIntervalInput:(float **)arg0 inputSamples:(unsigned int)arg1 bufferMaxSamples:(unsigned int)arg2 frameTime:(double)arg3 curveRatio:(double)arg4;
- (double)audioKeyFrameVolume;
- (void)setPitchFilter:(id)arg0;
- (void)setPitchFilterV2:(id)arg0;
- (id)fadeFilter;
- (void)setFadeFilter:(id)arg0;
- (double)getCurrentVolumnAtPts:(double)arg0;
- (long long)channels;
- (void)setChannels:(long long)arg0;
- (void).cxx_destruct;
- (double)sampleRate;
- (id)initWithConfig:(id)arg0;
- (void)reset;
- (void)seekToTime:(double)arg0;
- (void)setSampleRate:(double)arg0;

@end
