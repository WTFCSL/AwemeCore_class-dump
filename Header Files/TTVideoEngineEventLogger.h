//
//     Generated by private class-dump
//

@class NSTimer, NSString, NSArray, TTVideoEngineContentDataReporter, NSMutableDictionary, NSMutableArray, TTVideoEngineEvent, TTVideoEngineNetworkPortraitData, TTVideoEngineEventBase;
@protocol TTVideoEngineEventOneOutSyncProtocol, TTVideoEngineEventOneAVRenderCheckProtocol, TTVideoEngineEventLoggerDelegate, TTVideoEngineEventOneOperaProtocol, TTVideoEngineEventOneErrorProtocol, TTVideoEngineEventOneEventProtocol, TTVideoEngineEventNetworkSpeedPredictorSampleProtocol;

@interface TTVideoEngineEventLogger : NSObject <TTVideoEnginePerformancePoint, TTVideoEngineEventLoggerProtocol> {
    BOOL _performancePointSwitch;
    BOOL _isLocal;
    BOOL _isLooping;
    BOOL _leaveWithoutPlay;
    BOOL _mEnableBufferingMilliSeconds;
    BOOL _mAVOutSyncing;
    BOOL _mIsEngineReuse;
    BOOL _mUrlMatchCondition;
    int _mNetLevelIntervalMs;
    int _mNetLevelMaxCount;
    int _mNetMinDataSize;
    int _enableOneplayMerge;
    id<TTVideoEngineEventLoggerDelegate> _delegate;
    NSString *_vid;
    NSArray *_vu;
    long long _loopCount;
    long long _loopway;
    double _accumulatedStalledTime;
    long long _seekCount;
    TTVideoEngineEvent *_event;
    TTVideoEngineEventBase *_eventBase;
    TTVideoEngineNetworkPortraitData *_PortraitData;
    id<TTVideoEngineEventOneEventProtocol> _eventOneEvent;
    id<TTVideoEngineEventOneErrorProtocol> _eventOneError;
    id<TTVideoEngineEventOneOperaProtocol> _eventOneOpera;
    id<TTVideoEngineEventOneOutSyncProtocol> _eventOneOutsync;
    id<TTVideoEngineEventOneAVRenderCheckProtocol> _eventOneAVRenderCheck;
    id<TTVideoEngineEventNetworkSpeedPredictorSampleProtocol> _eventPredictorSample;
    long long _exitTime;
    NSMutableArray *_retryFetchErrorInfo;
    NSMutableArray *_firstDNSErrorInfo;
    NSMutableArray *_errorInfo;
    NSArray *_urlArray;
    NSMutableArray *_mGearInfoList;
    long long _stallStartTs;
    long long _pauseStartTs;
    long long _seekStartTs;
    NSString *_apiString;
    long long _apiver;
    NSString *_auth;
    NSMutableArray *_cpuUsages;
    NSMutableArray *_memUsages;
    NSString *_logInfo;
    long long _dnsMode;
    long long _mAccumVPS;
    long long _mAccumVDS;
    long long _mEngineLoopVDS;
    NSString *_source_type;
    long long _mEnableLoadControl;
    long long _mEnableNetworkTimeout;
    long long _mNetworkTimeout;
    long long _mBufferTimeout;
    long long _mEnableBufferingDirectly;
    long long _mBufferEndMilliSeconds;
    long long _mBufferEndSeconds;
    long long _mEnableVolumeBalance;
    long long _mVolumeBalanceType;
    long long _mEnableAutoRange;
    long long _mImageScaleType;
    long long _mEnableAbr;
    long long _mEnableHttps;
    long long _mEnableHijackRetry;
    long long _mEnableFallbackApiMDLRetry;
    long long _mEnableSkipFindStream;
    long long _mEnableAsyncPrepare;
    long long _mEnableLazySeek;
    long long _mEnableFormaterKeepAlive;
    long long _mDisableShortSeek;
    long long _mPrefNearSample;
    long long _mEnableReuseSocket;
    long long _mWidth;
    long long _mHeight;
    NSMutableDictionary *_mPlayparam;
    NSString *_mInitialURL;
    long long _mEnableMdl;
    long long _mVideoPreloadSize;
    long long _mDashVideoPreloadSize;
    long long _mDashAudioPreloadSize;
    long long _leaveBlockT;
    long long _loggerState;
    long long _logVersion;
    NSMutableDictionary *_metricsInfo;
    unsigned long long _mLastRebufT;
    unsigned long long _mLastSeekT;
    long long _errorRetryBeginTime;
    long long _errorRetryCurPos;
    long long _errorRetryErrorCode;
    long long _errorRetryStrategy;
    long long _mEnableOutletDropLimit;
    NSMutableDictionary *_mFeatures;
    NSString *_mMessage;
    NSMutableArray *_mMDLRetryInfo;
    NSString *_mFromEnginePool;
    long long _mEnableMetalViewDoubleBuffer;
    NSString *_headerInfo;
    long long _mCurDashAudioInfoId;
    TTVideoEngineContentDataReporter *_mContentReporter;
    NSTimer *_timer;
    NSString *_mVarsToParse;
    double _mLastTargetBitrate;
}

@property (retain, nonatomic) TTVideoEngineEvent *event;
@property (retain, nonatomic) TTVideoEngineEventBase *eventBase;
@property (retain, nonatomic) TTVideoEngineNetworkPortraitData *PortraitData;
@property (retain, nonatomic) id<TTVideoEngineEventOneEventProtocol> eventOneEvent;
@property (retain, nonatomic) id<TTVideoEngineEventOneErrorProtocol> eventOneError;
@property (retain, nonatomic) id<TTVideoEngineEventOneOperaProtocol> eventOneOpera;
@property (retain, nonatomic) id<TTVideoEngineEventOneOutSyncProtocol> eventOneOutsync;
@property (retain, nonatomic) id<TTVideoEngineEventOneAVRenderCheckProtocol> eventOneAVRenderCheck;
@property (retain, nonatomic) id<TTVideoEngineEventNetworkSpeedPredictorSampleProtocol> eventPredictorSample;
@property (nonatomic) BOOL leaveWithoutPlay;
@property (nonatomic) long long exitTime;
@property (retain, nonatomic) NSMutableArray *retryFetchErrorInfo;
@property (retain, nonatomic) NSMutableArray *firstDNSErrorInfo;
@property (retain, nonatomic) NSMutableArray *errorInfo;
@property (copy, nonatomic) NSArray *urlArray;
@property (retain, nonatomic) NSMutableArray *mGearInfoList;
@property (nonatomic) long long stallStartTs;
@property (nonatomic) long long pauseStartTs;
@property (nonatomic) long long seekStartTs;
@property (copy, nonatomic) NSString *apiString;
@property (nonatomic) long long apiver;
@property (copy, nonatomic) NSString *auth;
@property (retain, nonatomic) NSMutableArray *cpuUsages;
@property (retain, nonatomic) NSMutableArray *memUsages;
@property (copy, nonatomic) NSString *logInfo;
@property (nonatomic) long long dnsMode;
@property (nonatomic) long long mAccumVPS;
@property (nonatomic) long long mAccumVDS;
@property (nonatomic) long long mEngineLoopVDS;
@property (copy, nonatomic) NSString *source_type;
@property (nonatomic) long long mEnableLoadControl;
@property (nonatomic) long long mEnableNetworkTimeout;
@property (nonatomic) long long mNetworkTimeout;
@property (nonatomic) long long mBufferTimeout;
@property (nonatomic) long long mEnableBufferingDirectly;
@property (nonatomic) BOOL mEnableBufferingMilliSeconds;
@property (nonatomic) long long mBufferEndMilliSeconds;
@property (nonatomic) long long mBufferEndSeconds;
@property (nonatomic) long long mEnableVolumeBalance;
@property (nonatomic) long long mVolumeBalanceType;
@property (nonatomic) long long mEnableAutoRange;
@property (nonatomic) long long mImageScaleType;
@property (nonatomic) long long mEnableAbr;
@property (nonatomic) long long mEnableHttps;
@property (nonatomic) long long mEnableHijackRetry;
@property (nonatomic) long long mEnableFallbackApiMDLRetry;
@property (nonatomic) long long mEnableSkipFindStream;
@property (nonatomic) long long mEnableAsyncPrepare;
@property (nonatomic) long long mEnableLazySeek;
@property (nonatomic) long long mEnableFormaterKeepAlive;
@property (nonatomic) long long mDisableShortSeek;
@property (nonatomic) long long mPrefNearSample;
@property (nonatomic) long long mEnableReuseSocket;
@property (nonatomic) long long mWidth;
@property (nonatomic) long long mHeight;
@property (retain, nonatomic) NSMutableDictionary *mPlayparam;
@property (copy, nonatomic) NSString *mInitialURL;
@property (nonatomic) long long mEnableMdl;
@property (nonatomic) long long mVideoPreloadSize;
@property (nonatomic) long long mDashVideoPreloadSize;
@property (nonatomic) long long mDashAudioPreloadSize;
@property (nonatomic) long long leaveBlockT;
@property (nonatomic) long long loggerState;
@property (nonatomic) long long logVersion;
@property (retain, nonatomic) NSMutableDictionary *metricsInfo;
@property (nonatomic) BOOL mAVOutSyncing;
@property (nonatomic) unsigned long long mLastRebufT;
@property (nonatomic) unsigned long long mLastSeekT;
@property (nonatomic) long long errorRetryBeginTime;
@property (nonatomic) long long errorRetryCurPos;
@property (nonatomic) long long errorRetryErrorCode;
@property (nonatomic) long long errorRetryStrategy;
@property (nonatomic) long long mEnableOutletDropLimit;
@property (nonatomic) BOOL mIsEngineReuse;
@property (retain, nonatomic) NSMutableDictionary *mFeatures;
@property (copy, nonatomic) NSString *mMessage;
@property (retain, nonatomic) NSMutableArray *mMDLRetryInfo;
@property (copy, nonatomic) NSString *mFromEnginePool;
@property (nonatomic) long long mEnableMetalViewDoubleBuffer;
@property (copy, nonatomic) NSString *headerInfo;
@property (nonatomic) long long mCurDashAudioInfoId;
@property (nonatomic) BOOL mUrlMatchCondition;
@property (retain, nonatomic) TTVideoEngineContentDataReporter *mContentReporter;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) int mNetLevelIntervalMs;
@property (nonatomic) int mNetLevelMaxCount;
@property (nonatomic) int mNetMinDataSize;
@property (copy, nonatomic) NSString *mVarsToParse;
@property (nonatomic) double mLastTargetBitrate;
@property (nonatomic) int enableOneplayMerge;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<TTVideoEngineEventLoggerDelegate> delegate;
@property (nonatomic) BOOL performancePointSwitch;
@property (nonatomic) BOOL isLocal;
@property (copy, nonatomic) NSString *vid;
@property (copy, nonatomic) NSArray *vu;
@property (nonatomic) long long loopCount;
@property (nonatomic) BOOL isLooping;
@property (nonatomic) long long loopway;
@property (nonatomic) double accumulatedStalledTime;
@property (nonatomic) long long seekCount;

+ (void)setIntValueWithKey:(long long)arg0 value:(long long)arg1;
+ (void)setFloatValueWith:(long long)arg0 value:(float)arg1;
+ (id)classMethodInvocate:(id)arg0 method:(SEL)arg1;
+ (void)addFeatureGlobal:(id)arg0 value:(id)arg1;

- (id)vid;
- (void)setVid:(id)arg0;
- (void)stallEnd;
- (id)headerInfo;
- (void)setEnableNNSR:(BOOL)arg0;
- (id)firstFrameTimestamp;
- (id)logInfo;
- (void)setLogInfo:(id)arg0;
- (void)closeVideo;
- (void)setNetClient:(id)arg0;
- (void)setEncryptKey:(id)arg0;
- (void)setHeaderInfo:(id)arg0;
- (void)setTraceId:(id)arg0;
- (void)setUrlArray:(id)arg0;
- (id)urlArray;
- (void)setSubtag:(id)arg0;
- (void)setIntOption:(long long)arg0 value:(long long)arg1;
- (void)setMFeatures:(id)arg0;
- (id)mFeatures;
- (void)updateSingleNetworkSpeed:(id)arg0 audioInfo:(id)arg1 realInterval:(int)arg2;
- (void)noVARenderStart:(long long)arg0 noRenderType:(int)arg1;
- (void)moviePreStall:(long long)arg0;
- (long long)getMovieStalledReason;
- (void)moviePlayRetryWithError:(id)arg0 strategy:(long long)arg1 apiver:(unsigned long long)arg2;
- (id)source_type;
- (id)eventBase;
- (void)setEventBase:(id)arg0;
- (unsigned long long)mLastRebufT;
- (void)setMLastRebufT:(unsigned long long)arg0;
- (unsigned long long)mLastSeekT;
- (void)setMLastSeekT:(unsigned long long)arg0;
- (void)setVideoModelVersion:(long long)arg0;
- (void)setDynamicType:(id)arg0;
- (void)setMaskUrl:(id)arg0;
- (void)setSource_type:(id)arg0;
- (void)setCurrentQualityDesc:(id)arg0;
- (void)sendEvent;
- (void)initEvents;
- (void)outputRouteChanged:(id)arg0;
- (void)recordCurrentHeadsetInfo;
- (void)recordHeadsetInfoWithConnected:(long long)arg0 bluetooth:(long long)arg1;
- (id)metricsInfo;
- (void)setInt64Option:(long long)arg0 value:(long long)arg1;
- (void)setMIsEngineReuse:(BOOL)arg0;
- (id)PortraitData;
- (void)recordExitReason:(long long)arg0 isStart:(BOOL)arg1;
- (id)eventPredictorSample;
- (void)networkListener;
- (id)retryFetchErrorInfo;
- (id)firstDNSErrorInfo;
- (void)setLeaveWithoutPlay:(BOOL)arg0;
- (void)_movieStallEnd:(id)arg0;
- (void)_endSeek:(id)arg0 isSeekInCache:(long long)arg1;
- (void)_avOutsyncEnd:(long long)arg0 endType:(id)arg1;
- (void)setSeekStartTs:(long long)arg0;
- (long long)seekStartTs;
- (id)eventOneEvent;
- (void)setStallStartTs:(long long)arg0;
- (long long)stallStartTs;
- (double)accumulatedStalledTime;
- (void)setAccumulatedStalledTime:(double)arg0;
- (void)setLoopway:(long long)arg0;
- (id)errorInfo;
- (void)_logFirstError:(id)arg0;
- (void)accumulateSize;
- (BOOL)leaveWithoutPlay;
- (void)_noVARenderEnd:(long long)arg0 noRenderType:(int)arg1 endType:(id)arg2;
- (void)_recordExitTime;
- (void)setMLastTargetBitrate:(double)arg0;
- (double)mLastTargetBitrate;
- (int)mNetLevelIntervalMs;
- (void)playbackFinish:(long long)arg0;
- (void)setEventOneError:(id)arg0;
- (void)setEventOneEvent:(id)arg0;
- (void)setEventOneOpera:(id)arg0;
- (void)setEventOneOutsync:(id)arg0;
- (void)setEventOneAVRenderCheck:(id)arg0;
- (void)setEventPredictorSample:(id)arg0;
- (void)setCustomStr:(id)arg0;
- (long long)pauseStartTs;
- (void)setPauseStartTs:(long long)arg0;
- (id)eventOneOutsync;
- (BOOL)performancePointSwitch;
- (id)mGearInfoList;
- (id)eventOneOpera;
- (void)setMEnableMetalViewDoubleBuffer:(long long)arg0;
- (void)setMNetLevelIntervalMs:(int)arg0;
- (void)setMNetLevelMaxCount:(int)arg0;
- (void)setMNetMinDataSize:(int)arg0;
- (void)setMFromEnginePool:(id)arg0;
- (void)setMVarsToParse:(id)arg0;
- (void)setVu:(id)arg0;
- (long long)seekCount;
- (long long)apiver;
- (void)setApiver:(long long)arg0;
- (void)setDnsMode:(long long)arg0;
- (void)setMMessage:(id)arg0;
- (id)mMDLRetryInfo;
- (void)setMMDLRetryInfo:(id)arg0;
- (void)parseUrlLogID;
- (void)updateFeatures;
- (id)mFromEnginePool;
- (void)contentReporterStartTaskIfNeeded;
- (void)setFirstPlayFlag:(long long)arg0;
- (id)getEventBase;
- (void)setURLArray:(id)arg0;
- (void)setSourceType:(long long)arg0 vid:(id)arg1;
- (void)setDNSMode:(long long)arg0;
- (void)initPlay:(id)arg0;
- (void)prepareBeforePlay;
- (void)beginToPlayVideo:(id)arg0;
- (void)needRetryToFetchVideoURL:(id)arg0 apiVersion:(long long)arg1;
- (void)firstDNSFailed:(id)arg0;
- (void)fetchedVideoURL:(id)arg0 error:(id)arg1 apiVersion:(long long)arg2;
- (void)validateVideoMetaDataError:(id)arg0;
- (void)showedOneFrame;
- (void)beginToParseDNS;
- (void)setDNSParseTime:(long long)arg0;
- (void)setCurrentDefinition:(id)arg0 lastDefinition:(id)arg1;
- (void)switchToDefinition:(id)arg0 fromDefinition:(id)arg1 curPos:(long long)arg2;
- (void)switchResolutionEnd:(BOOL)arg0;
- (void)seekToTime:(double)arg0 afterSeekTime:(double)arg1 cachedDuration:(double)arg2 switchingResolution:(BOOL)arg3;
- (void)seekCompleted;
- (void)renderSeekComplete:(BOOL)arg0;
- (void)movieStalledAfterFirstScreen:(unsigned long long)arg0 curPos:(long long)arg1;
- (void)movieBufferDidReachEnd;
- (void)moviePlayRetryStartWithError:(id)arg0 strategy:(long long)arg1 curPos:(long long)arg2;
- (void)moviePlayRetryEnd;
- (void)movieFinishError:(id)arg0 currentPlaybackTime:(double)arg1 apiver:(unsigned long long)arg2;
- (void)videoStatusException:(long long)arg0;
- (void)setInitalURL:(id)arg0;
- (void)useHardware:(BOOL)arg0;
- (void)loopAgain;
- (void)watchFinish;
- (void)setInitialHost:(id)arg0;
- (void)setInitialQuality:(id)arg0;
- (void)setInitialQualityType:(long long)arg0;
- (void)setInitialResolution:(id)arg0;
- (void)setPrepareStartTime:(long long)arg0;
- (void)setPrepareEndTime:(long long)arg0;
- (void)setVideoPreloadSize:(long long)arg0;
- (void)logCurPos:(long long)arg0;
- (void)playerPause;
- (void)userPause:(long long)arg0;
- (void)userPlay:(long long)arg0;
- (void)userSetPlaybackSpeed:(double)arg0 curPos:(long long)arg1;
- (void)userSetRadioMode:(BOOL)arg0 curPos:(long long)arg1;
- (void)playerViewBoundsChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)beginLoadDataWhenBufferEmpty;
- (void)endLoadDataWhenBufferEmpty;
- (void)updateCustomPlayerParms:(id)arg0;
- (void)setPlayerSourceType:(long long)arg0;
- (void)setVideoOutFPS:(double)arg0;
- (void)setVideoDecoderFPS:(long long)arg0;
- (void)setAudioDropCnt:(int)arg0;
- (void)setReuseSocket:(long long)arg0;
- (void)setDisableAccurateStart:(long long)arg0;
- (void)logWatchDuration:(long long)arg0;
- (void)engineState:(unsigned long long)arg0;
- (void)videoChangeSizeWidth:(long long)arg0 height:(long long)arg1;
- (void)proxyUrl:(id)arg0;
- (void)setDrmTokenUrl:(id)arg0;
- (void)setPlayAPIVersion:(unsigned long long)arg0 auth:(id)arg1;
- (void)finishReason:(long long)arg0;
- (void)logCodecNameId:(long long)arg0 video:(long long)arg1;
- (void)logFormatType:(long long)arg0;
- (void)updateMediaDuration:(double)arg0;
- (void)logBitrate:(long long)arg0;
- (void)logAudioBitrate:(long long)arg0;
- (void)logCodecName:(id)arg0 video:(id)arg1;
- (void)setSettingLogType:(long long)arg0 value:(int)arg1;
- (void)setEnableBash:(long long)arg0;
- (void)setMbRefactor:(BOOL)arg0;
- (void)setCustomInfo:(long long)arg0 value:(id)arg1;
- (id)getTraceId;
- (void)setEnableBoe:(long long)arg0;
- (void)logPlayerInfo:(id)arg0;
- (void)setCheckHijack:(long long)arg0;
- (void)setHijackCode:(long long)arg0;
- (void)setAbrInfo:(id)arg0;
- (void)setPreloadGearInfo:(id)arg0;
- (void)setMetricsInfo:(id)arg0;
- (void)setSrInfo:(id)arg0;
- (void)recordFirstFrameMetrics:(id)arg0;
- (void)setAVSyncStartEnable:(long long)arg0;
- (void)setFloatOption:(long long)arg0 value:(double)arg1;
- (void)setStringOption:(long long)arg0 value:(id)arg1;
- (void)setSubtitleRequestFinishTime:(double)arg0;
- (void)setSubtitleLangsCount:(long long)arg0;
- (void)setSubtitleEnableOptLoad:(BOOL)arg0;
- (void)addSubtitleSwitchTime;
- (void)setSubtitleError:(id)arg0;
- (void)setSubtitleEnable:(BOOL)arg0;
- (void)setSubtitleThreadEnable:(BOOL)arg0;
- (void)setSubtitleRequestUrl:(id)arg0;
- (void)setMaskOpenTimeStamp:(long long)arg0;
- (void)setMaskOpenedTimeStamp:(long long)arg0;
- (void)setMaskErrorCode:(long long)arg0;
- (void)setMaskThreadEnable:(BOOL)arg0;
- (void)setMaskEnable:(BOOL)arg0;
- (void)setMaskEnableMdl:(long long)arg0;
- (void)setMaskFileHash:(id)arg0;
- (void)setMaskFileSize:(long long)arg0;
- (void)recordBrightnessInfo;
- (void)backgroundStartPlay;
- (void)noVARenderEnd:(long long)arg0 noRenderType:(int)arg1;
- (void)addFeature:(id)arg0 value:(id)arg1;
- (void)onAVInterlaced:(long long)arg0;
- (void)mdlRetryResult:(long long)arg0 fileHash:(id)arg1 error:(id)arg2;
- (void)crosstalkHappen:(long long)arg0 infoList:(id)arg1;
- (void)setPlayHeaders:(id)arg0;
- (void)onVideoInfoIdChanged:(long long)arg0;
- (void)showedFirstAVSyncFrame;
- (void)initContentReporterIfNeeded:(id)arg0;
- (void)loggerVideoProcessorEffectParam:(id)arg0;
- (void)setDashAudioCacheSize:(long long)arg0;
- (void)setDashVideoCacheSize:(long long)arg0;
- (void)enableOnePlayMerge:(int)arg0;
- (void)setPerformancePointSwitch:(BOOL)arg0;
- (id)vu;
- (long long)loopway;
- (void)setSeekCount:(long long)arg0;
- (void)setPortraitData:(id)arg0;
- (id)eventOneError;
- (id)eventOneAVRenderCheck;
- (void)setRetryFetchErrorInfo:(id)arg0;
- (void)setFirstDNSErrorInfo:(id)arg0;
- (void)setErrorInfo:(id)arg0;
- (void)setMGearInfoList:(id)arg0;
- (id)cpuUsages;
- (void)setCpuUsages:(id)arg0;
- (id)memUsages;
- (void)setMemUsages:(id)arg0;
- (long long)dnsMode;
- (long long)mAccumVPS;
- (void)setMAccumVPS:(long long)arg0;
- (long long)mAccumVDS;
- (void)setMAccumVDS:(long long)arg0;
- (long long)mEngineLoopVDS;
- (void)setMEngineLoopVDS:(long long)arg0;
- (long long)mEnableLoadControl;
- (void)setMEnableLoadControl:(long long)arg0;
- (long long)mEnableNetworkTimeout;
- (void)setMEnableNetworkTimeout:(long long)arg0;
- (long long)mNetworkTimeout;
- (void)setMNetworkTimeout:(long long)arg0;
- (long long)mBufferTimeout;
- (void)setMBufferTimeout:(long long)arg0;
- (long long)mEnableBufferingDirectly;
- (void)setMEnableBufferingDirectly:(long long)arg0;
- (BOOL)mEnableBufferingMilliSeconds;
- (void)setMEnableBufferingMilliSeconds:(BOOL)arg0;
- (long long)mBufferEndMilliSeconds;
- (void)setMBufferEndMilliSeconds:(long long)arg0;
- (long long)mBufferEndSeconds;
- (void)setMBufferEndSeconds:(long long)arg0;
- (long long)mEnableVolumeBalance;
- (void)setMEnableVolumeBalance:(long long)arg0;
- (long long)mVolumeBalanceType;
- (void)setMVolumeBalanceType:(long long)arg0;
- (long long)mEnableAutoRange;
- (void)setMEnableAutoRange:(long long)arg0;
- (long long)mImageScaleType;
- (void)setMImageScaleType:(long long)arg0;
- (long long)mEnableAbr;
- (void)setMEnableAbr:(long long)arg0;
- (long long)mEnableHttps;
- (void)setMEnableHttps:(long long)arg0;
- (long long)mEnableHijackRetry;
- (void)setMEnableHijackRetry:(long long)arg0;
- (long long)mEnableFallbackApiMDLRetry;
- (void)setMEnableFallbackApiMDLRetry:(long long)arg0;
- (long long)mEnableSkipFindStream;
- (void)setMEnableSkipFindStream:(long long)arg0;
- (long long)mEnableAsyncPrepare;
- (void)setMEnableAsyncPrepare:(long long)arg0;
- (long long)mEnableLazySeek;
- (void)setMEnableLazySeek:(long long)arg0;
- (long long)mEnableFormaterKeepAlive;
- (void)setMEnableFormaterKeepAlive:(long long)arg0;
- (long long)mDisableShortSeek;
- (void)setMDisableShortSeek:(long long)arg0;
- (long long)mPrefNearSample;
- (void)setMPrefNearSample:(long long)arg0;
- (long long)mEnableReuseSocket;
- (void)setMEnableReuseSocket:(long long)arg0;
- (void)setMWidth:(long long)arg0;
- (void)setMHeight:(long long)arg0;
- (id)mPlayparam;
- (void)setMPlayparam:(id)arg0;
- (id)mInitialURL;
- (void)setMInitialURL:(id)arg0;
- (long long)mEnableMdl;
- (void)setMEnableMdl:(long long)arg0;
- (long long)mVideoPreloadSize;
- (void)setMVideoPreloadSize:(long long)arg0;
- (long long)mDashVideoPreloadSize;
- (void)setMDashVideoPreloadSize:(long long)arg0;
- (long long)mDashAudioPreloadSize;
- (void)setMDashAudioPreloadSize:(long long)arg0;
- (long long)leaveBlockT;
- (void)setLeaveBlockT:(long long)arg0;
- (long long)loggerState;
- (void)setLoggerState:(long long)arg0;
- (BOOL)mAVOutSyncing;
- (void)setMAVOutSyncing:(BOOL)arg0;
- (long long)errorRetryBeginTime;
- (void)setErrorRetryBeginTime:(long long)arg0;
- (long long)errorRetryCurPos;
- (void)setErrorRetryCurPos:(long long)arg0;
- (long long)errorRetryErrorCode;
- (void)setErrorRetryErrorCode:(long long)arg0;
- (long long)errorRetryStrategy;
- (void)setErrorRetryStrategy:(long long)arg0;
- (long long)mEnableOutletDropLimit;
- (void)setMEnableOutletDropLimit:(long long)arg0;
- (BOOL)mIsEngineReuse;
- (long long)mEnableMetalViewDoubleBuffer;
- (long long)mCurDashAudioInfoId;
- (void)setMCurDashAudioInfoId:(long long)arg0;
- (BOOL)mUrlMatchCondition;
- (void)setMUrlMatchCondition:(BOOL)arg0;
- (id)mContentReporter;
- (void)setMContentReporter:(id)arg0;
- (int)mNetLevelMaxCount;
- (int)mNetMinDataSize;
- (id)mVarsToParse;
- (int)enableOneplayMerge;
- (void)setEnableOneplayMerge:(int)arg0;
- (void)avOutsyncStart:(long long)arg0;
- (void)avOutsyncEnd:(long long)arg0;
- (void)setDrmType:(long long)arg0;
- (void)addMemUsagesPoint:(double)arg0;
- (void)addCpuUsagesPoint:(double)arg0;
- (void)setApiString:(id)arg0;
- (id)apiString;
- (void)playerPlay;
- (void)setLoopWay:(long long)arg0;
- (void)setIsLocal:(BOOL)arg0;
- (void)logMessage:(id)arg0;
- (id)timer;
- (void)applicationWillResignActive:(id)arg0;
- (void)setEvent:(id)arg0;
- (id)event;
- (void)flushEvent;
- (BOOL)isLocal;
- (id)init;
- (id)getMetrics:(id)arg0;
- (void)setStartTime:(long long)arg0;
- (void).cxx_destruct;
- (void)setLogVersion:(long long)arg0;
- (void)setTag:(id)arg0;
- (void)applicationDidBecomeActive:(id)arg0;
- (id)delegate;
- (void)setTimer:(id)arg0;
- (void)clear;
- (BOOL)isLooping;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setLooping:(BOOL)arg0;
- (void)reset;
- (void)setRenderType:(id)arg0;
- (long long)logVersion;
- (long long)loopCount;
- (void)setIsLooping:(BOOL)arg0;
- (id)getEvent;
- (long long)exitTime;
- (void)setExitTime:(long long)arg0;
- (void)setIp:(id)arg0;
- (id)auth;
- (void)setAuth:(id)arg0;
- (void)setCurrentURL:(id)arg0;
- (id)mMessage;
- (long long)mWidth;
- (long long)mHeight;
- (void)userCancelled;
- (void)setLoopCount:(long long)arg0;

@end
