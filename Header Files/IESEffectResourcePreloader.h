//
//     Generated by private class-dump
//

@class NSString, IESEffectResourcePreloadDataManager, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue, EffectPlatformRequestDelegate;

@interface IESEffectResourcePreloader : NSObject {
    id<EffectPlatformRequestDelegate> _requestDelegate;
    id /* block */ _requestParametersBlock;
    id /* block */ _isResourceFileExistBlock;
    NSString *_requestDomain;
    IESEffectResourcePreloadDataManager *_dataManager;
    NSMutableDictionary *_downloadTaskMap;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    double _lastPreloadTime;
    NSMutableDictionary *_triggerPauseMap;
    double _coolDownloadTime;
}

@property (copy, nonatomic) NSString *requestDomain;
@property (retain, nonatomic) IESEffectResourcePreloadDataManager *dataManager;
@property (retain, nonatomic) NSMutableDictionary *downloadTaskMap;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic) double lastPreloadTime;
@property (retain, nonatomic) NSMutableDictionary *triggerPauseMap;
@property double coolDownloadTime;
@property (retain, nonatomic) id<EffectPlatformRequestDelegate> requestDelegate;
@property (copy, nonatomic) id /* block */ requestParametersBlock;
@property (copy, nonatomic) id /* block */ isResourceFileExistBlock;

- (void)setRequestDelegate:(id)arg0;
- (id)requestDelegate;
- (id)downloadTaskMap;
- (void)setDownloadTaskMap:(id)arg0;
- (id)initWithLeavePath:(id)arg0 requestDomain:(id)arg1;
- (void)setIsResourceFileExistBlock:(id /* block */)arg0;
- (id)resourcePathWithName:(id)arg0 resourceURI:(id)arg1;
- (void)downloadPreloadResourceIfNeed:(id)arg0 downloadProgress:(id /* block */)arg1 downloadCompletion:(id /* block */)arg2 resultBlock:(id /* block */)arg3;
- (id)resourceRecordWithName:(id)arg0;
- (void)fetchPreloadResourceWithBusinessID:(long long)arg0 businessKey:(id)arg1 extraParameters:(id)arg2;
- (void)setRequestParametersBlock:(id /* block */)arg0;
- (void)pausePreloadResourceIfNeedWithBusinessID:(long long)arg0 businessKey:(id)arg1;
- (unsigned long long)getTotalPreloadResourceSize;
- (void)removeAllExistPreloadResources;
- (id)triggerPauseMap;
- (double)lastPreloadTime;
- (double)coolDownloadTime;
- (void)setLastPreloadTime:(double)arg0;
- (void)_fetchPreloadResourceWithBusinessID:(long long)arg0 businessKey:(id)arg1 extraParameters:(id)arg2;
- (id)requestDomain;
- (id /* block */)requestParametersBlock;
- (id)serverErrorWithJson:(id)arg0;
- (void)setCoolDownloadTime:(double)arg0;
- (void)downloadPreloadResourceList:(id)arg0 withBusinessKey:(id)arg1 businessID:(long long)arg2 beginPreloadTime:(double)arg3 downloadParameters:(id)arg4 requestID:(id)arg5;
- (id /* block */)isResourceFileExistBlock;
- (void)downloadPreloadResource:(id)arg0 withBusinessKey:(id)arg1 businessID:(long long)arg2 parameters:(id)arg3 progress:(id /* block */)arg4 completion:(id /* block */)arg5;
- (void)setRequestDomain:(id)arg0;
- (void)setTriggerPauseMap:(id)arg0;
- (id)dataManager;
- (void).cxx_destruct;
- (void)setDispatchQueue:(id)arg0;
- (void)setDataManager:(id)arg0;
- (id)dispatchQueue;

@end
