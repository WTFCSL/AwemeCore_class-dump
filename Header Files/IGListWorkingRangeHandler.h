//
//     Generated by private class-dump
//

@interface IGListWorkingRangeHandler : NSObject {
    struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::allocator<_IGListWorkingRangeHandlerIndexPath>> { struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::allocator<_IGListWorkingRangeHandlerIndexPath>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *>, std::allocator<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> { struct __hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::equal_to<_IGListWorkingRangeHandlerIndexPath>> { float __value_; } __p3_; } __table_; } _visibleSectionIndices;
    struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> { struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *>, std::allocator<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> { struct __hash_node_base<std::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> { float __value_; } __p3_; } __table_; } _workingRangeSectionControllers;
    long long _workingRangeSize;
}

@property (readonly, nonatomic) long long workingRangeSize;

- (long long)workingRangeSize;
- (void)willDisplayItemAtIndexPath:(id)arg0 forListAdapter:(id)arg1;
- (void)didEndDisplayingItemAtIndexPath:(id)arg0 forListAdapter:(id)arg1;
- (id)initWithWorkingRangeSize:(long long)arg0;
- (void)_updateWorkingRangesWithListAdapter:(id)arg0;
- (void).cxx_destruct;
- (id).cxx_construct;

@end
