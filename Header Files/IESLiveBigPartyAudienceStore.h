//
//     Generated by private class-dump
//

@class IESLiveAudienceLinkmicAudiencePreApplyManager, IESLiveInteractionLayout, IESLiveInteractFeedbackAPI, IESLiveCountTimer, HTSLiveInteractiveAPI, NSDictionary, IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData, IESLiveRoomThemeData, NSString, IESLiveComponentContext, IESLiveInteractComponentLoader, HTSEventContext, IESLiveAudienceInteractPermissionChecker, IESLiveInteractFeedbackViewModel, IESLiveInteractiveMediaService, NSNumber, HTSLiveImage, RACTwoTuple;
@protocol IESLiveInteractionLayoutRouter, IESLiveRoomService, IESLiveInteractionLinkerService, IESLiveBigPartyAudienceStoreReaction, IESLiveAudienceInteractiveRootPanelUserService, IESLiveDynamicActivityProvider, IESLiveInteractionDelegateSettingProtocol, IESLiveInteractionSettingsRouter;

@interface IESLiveBigPartyAudienceStore : NSObject <IESLiveBigPartyAudienceAction, IESLiveMultiInteractUserServiceDelegate, HTSLiveRoomRemoteActions, HTSLiveAudienceActions, IESLiveAudienceInteractiveAnchorInvitationActions, IESLiveAudienceMoreToolsTempStateAreaActions, IESLiveAudienceNativeAppActions, IESLiveLinkmicMonitorDataSource, IESLiveInteractComponentContext, IESLiveInteractSmallWindowActions, IESLiveInteractionLinkerServiceAction, IESLiveSocialInteractAction, IESLiveFastMatchObserverAction, IESLiveInteractionStageFactory, IESLiveAudienceInteractiveInviteInterestedListPanelDataSource, IESLiveBigPartyTransferRouterDelegate> {
    BOOL _isInvited;
    BOOL _enableAudienceLinkmic;
    BOOL _needToOpenCamera;
    BOOL _supportOpenAvatar;
    BOOL _needToOpenAvatar;
    BOOL _useBackupStreamWhenJoinRTC;
    BOOL _hitCameraFrenquencyControl;
    BOOL _isTask;
    BOOL _shouldIgnoreLinkMicInvitation;
    BOOL _shouldIgnoreCameraRemoteControl;
    BOOL _showInvitePanel;
    BOOL _willEnterDoubleC;
    BOOL _shouldBanVideoForAutoApply;
    BOOL _hasProcessDidUpdateRoom;
    BOOL _isPreparingWaitingOffset;
    BOOL _joinChannelAfterFollow;
    BOOL _isPaid;
    BOOL _hasAppliedBefore;
    BOOL _applyByMatch;
    BOOL _isUserInProfile;
    BOOL _selectedFeedback;
    BOOL _isProcessingApply;
    BOOL _doPermitProcessAfterApply;
    BOOL _isPaidLinkmicJoinChannel;
    BOOL _isUsingFirstSingApply;
    BOOL _isNextDurationFromSmallWin;
    int _applyType;
    id<IESLiveAudienceInteractiveRootPanelUserService> _rootPanelUserService;
    id<IESLiveDynamicActivityProvider> _activityProvider;
    IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *_waitingOffsetResponse;
    long long linkMicStatus;
    RACTwoTuple *_attributeWaitingPromptsTuple;
    id<IESLiveRoomService> _roomModel;
    HTSEventContext *_trackContext;
    IESLiveComponentContext *_componentContext;
    IESLiveInteractiveMediaService *_mediaServiceTransFerToPK;
    long long _linkmicStatus;
    double _interactModeStartTime;
    NSNumber *_currentClickGuestID;
    IESLiveInteractFeedbackViewModel *_feedbackViewModel;
    NSString *_toastString;
    NSString *_breakPage;
    NSString *_tempActivityRequestPage;
    NSString *_waitingPrompts;
    IESLiveInteractionLayout *_serverLayout;
    unsigned long long _previousScene;
    id<IESLiveInteractionDelegateSettingProtocol> _distributeSettingData;
    long long _joinPayCount;
    NSDictionary *_eventExtra;
    IESLiveRoomThemeData *_roomThemeData;
    NSString *_activetyName;
    NSDictionary *_relevantShortVideoInfo;
    NSNumber *_cellIndex;
    HTSLiveImage *_invitePanelIconImage;
    NSNumber *_inviteUserID;
    id<IESLiveBigPartyAudienceStoreReaction> _storeReaction;
    IESLiveAudienceLinkmicAudiencePreApplyManager *_preApplyManager;
    IESLiveAudienceInteractPermissionChecker *_permissionChecker;
    HTSLiveInteractiveAPI *_linkmicAPI;
    IESLiveInteractFeedbackAPI *_feedbackAPI;
    IESLiveInteractComponentLoader *_componentLoader;
    long long _maxGuestNum;
    IESLiveCountTimer *_checkLinkerStatusTmer;
    id<IESLiveInteractionSettingsRouter> _interactionSettings;
    id<IESLiveInteractionLinkerService> _linker;
    id<IESLiveInteractionLayoutRouter> _layoutRouter;
    HTSEventContext *_eventContext;
}

@property (retain, nonatomic) IESLiveAudienceInteractPermissionChecker *permissionChecker;
@property (retain, nonatomic) HTSLiveInteractiveAPI *linkmicAPI;
@property (retain, nonatomic) IESLiveInteractFeedbackAPI *feedbackAPI;
@property (retain, nonatomic) IESLiveInteractComponentLoader *componentLoader;
@property (nonatomic) BOOL isPreparingWaitingOffset;
@property (nonatomic) long long maxGuestNum;
@property (retain, nonatomic) IESLiveInteractFeedbackViewModel *feedbackViewModel;
@property (nonatomic) double interactModeStartTime;
@property (nonatomic) BOOL supportOpenAvatar;
@property (nonatomic) BOOL joinChannelAfterFollow;
@property (nonatomic) BOOL isPaid;
@property (nonatomic) BOOL hasAppliedBefore;
@property (nonatomic) BOOL applyByMatch;
@property (nonatomic) BOOL isUserInProfile;
@property (nonatomic) BOOL selectedFeedback;
@property (copy, nonatomic) NSString *waitingPrompts;
@property (nonatomic) BOOL isProcessingApply;
@property (nonatomic) BOOL doPermitProcessAfterApply;
@property (retain, nonatomic) id<IESLiveInteractionDelegateSettingProtocol> distributeSettingData;
@property (nonatomic) BOOL isPaidLinkmicJoinChannel;
@property (nonatomic) int applyType;
@property (nonatomic) BOOL useBackupStreamWhenJoinRTC;
@property (retain, nonatomic) IESLiveCountTimer *checkLinkerStatusTmer;
@property (nonatomic) BOOL isUsingFirstSingApply;
@property (nonatomic) BOOL isNextDurationFromSmallWin;
@property (weak, nonatomic) id<IESLiveInteractionSettingsRouter> interactionSettings;
@property (weak, nonatomic) id<IESLiveInteractionLinkerService> linker;
@property (weak, nonatomic) id<IESLiveInteractionLayoutRouter> layoutRouter;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (retain, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (retain, nonatomic) IESLiveInteractiveMediaService *mediaServiceTransFerToPK;
@property (nonatomic) long long linkmicStatus;
@property (readonly, nonatomic) BOOL isInvited;
@property (retain, nonatomic) NSNumber *currentClickGuestID;
@property (readonly, nonatomic) BOOL enableAudienceLinkmic;
@property (readonly, nonatomic) BOOL isCurrentDynamicLayout;
@property (copy, nonatomic) NSString *toastString;
@property (copy, nonatomic) NSString *breakPage;
@property (copy, nonatomic) NSString *tempActivityRequestPage;
@property (nonatomic) long long linkType;
@property (nonatomic) BOOL needToOpenCamera;
@property (nonatomic) BOOL needToOpenAvatar;
@property (readonly, nonatomic) IESLiveInteractionLayout *serverLayout;
@property (readonly, nonatomic) BOOL hitCameraFrenquencyControl;
@property (readonly, nonatomic) unsigned long long previousScene;
@property (readonly, nonatomic) unsigned long long currentScene;
@property (readonly, nonatomic) unsigned long long serverScene;
@property (readonly, nonatomic) int uilayout;
@property (readonly, copy, nonatomic) NSString *playType;
@property (readonly, nonatomic) long long joinPayCount;
@property (copy, nonatomic) NSDictionary *eventExtra;
@property (retain, nonatomic) IESLiveRoomThemeData *roomThemeData;
@property (nonatomic) BOOL isTask;
@property (retain, nonatomic) NSString *activetyName;
@property (copy, nonatomic) NSDictionary *relevantShortVideoInfo;
@property (copy, nonatomic) NSNumber *cellIndex;
@property (nonatomic) BOOL shouldIgnoreLinkMicInvitation;
@property (nonatomic) BOOL shouldIgnoreCameraRemoteControl;
@property (nonatomic) BOOL showInvitePanel;
@property (retain, nonatomic) HTSLiveImage *invitePanelIconImage;
@property (retain, nonatomic) NSNumber *inviteUserID;
@property (nonatomic) BOOL willEnterDoubleC;
@property (nonatomic) BOOL shouldBanVideoForAutoApply;
@property (readonly, nonatomic) IESLiveInteractionLayout *currentLayout;
@property (readonly, nonatomic) IESLiveInteractionLayout *currentServerLayout;
@property (weak, nonatomic) id<IESLiveBigPartyAudienceStoreReaction> storeReaction;
@property (retain, nonatomic) IESLiveAudienceLinkmicAudiencePreApplyManager *preApplyManager;
@property (nonatomic) BOOL hasProcessDidUpdateRoom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IESLiveLinkMicAudienceGetUserWaitingOffsetResponse_ResponseData *waitingOffsetResponse;
@property (nonatomic) long long linkMicStatus;
@property (retain, nonatomic) RACTwoTuple *attributeWaitingPromptsTuple;
@property (retain, nonatomic) id<IESLiveAudienceInteractiveRootPanelUserService> rootPanelUserService;
@property (retain, nonatomic) id<IESLiveDynamicActivityProvider> activityProvider;

- (id)trackContext;
- (void)setTrackContext:(id)arg0;
- (id)componentContext;
- (id)roomModel;
- (void)setComponentContext:(id)arg0;
- (void)didSetAttachingDIContext;
- (id)playType;
- (id)eventExtra;
- (void)setEventExtra:(id)arg0;
- (void)setEventContext:(id)arg0;
- (unsigned long long)previousScene;
- (id)toastString;
- (void)setToastString:(id)arg0;
- (void)componentWillAppear;
- (void)setRoomModel:(id)arg0;
- (id)componentLoader;
- (void)setComponentLoader:(id)arg0;
- (void)componentUnmount;
- (BOOL)isInvited;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (void)liveWillSuspend;
- (void)didUpdateRoom:(id)arg0 timeStamp:(id)arg1;
- (long long)maxGuestNum;
- (void)setMaxGuestNum:(long long)arg0;
- (BOOL)isInAnonymousPaidLinkmicWithUserID:(id)arg0;
- (void)p_clean;
- (BOOL)shouldIgnoreCameraRemoteControl;
- (void)stopConnectionWithRequestSource:(id)arg0;
- (id)feedbackViewModel;
- (void)setFeedbackViewModel:(id)arg0;
- (void)applyWithParams:(id)arg0;
- (void)componentOrientationTransitionBegin:(long long)arg0;
- (void)currentLayoutDidChangedFrom:(id)arg0 to:(id)arg1;
- (void)currentLayoutUIWillUpdateFrom:(id)arg0 to:(id)arg1;
- (void)currentLayoutUIDidUpdateFrom:(id)arg0 to:(id)arg1;
- (void)setLinker:(id)arg0;
- (id)linker;
- (void)setCheckLinkerStatusTmer:(id)arg0;
- (id)checkLinkerStatusTmer;
- (id)monitorExtraParams;
- (BOOL)askForLeave;
- (id)permissionChecker;
- (void)setPermissionChecker:(id)arg0;
- (int)uilayout;
- (BOOL)showInvitePanel;
- (id)inviteUserID;
- (void)setInviteUserID:(id)arg0;
- (void)willAppearLogic;
- (void)muteOtherRoom:(id)arg0;
- (void)unMuteOtherRoom:(id)arg0;
- (void)cancelApplicationWithSource:(id)arg0;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1;
- (void)stopConnectionWithRequestSource:(id)arg0 extra:(id)arg1 completion:(id /* block */)arg2;
- (void)userProfileWillAppear;
- (void)prepareForWaitingOffset;
- (void)changeToWaitingStatusWithLinkmicID:(id)arg0;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2;
- (void)adminInviteWithUserID:(id)arg0 secUserID:(id)arg1 sourcePage:(id)arg2 extraParams:(id)arg3;
- (void)adminPermitUser:(id)arg0 extraInfo:(id)arg1;
- (void)adminKickOutUserID:(id)arg0 secUserID:(id)arg1 requestSource:(id)arg2 completion:(id /* block */)arg3;
- (void)adminMuteGuest:(id)arg0;
- (void)adminUnMuteGuest:(id)arg0;
- (void)adminControlGuestCameraWithUserID:(id)arg0 cameraOpen:(BOOL)arg1;
- (id)relevantShortVideoInfo;
- (BOOL)isInvitingUser:(id)arg0;
- (void)setShouldIgnoreLinkMicInvitation:(BOOL)arg0;
- (void)setShouldIgnoreCameraRemoteControl:(BOOL)arg0;
- (id)previousLayout;
- (BOOL)isTask;
- (void)setFeedbackAPI:(id)arg0;
- (id)feedbackAPI;
- (BOOL)enableAudienceLinkmic;
- (long long)linkMicStatus;
- (void)setLinkMicStatus:(long long)arg0;
- (id)getMuteGusetNicknameByUserID:(id)arg0;
- (void)setPreApplyManager:(id)arg0;
- (void)setInteractModeStartTime:(double)arg0;
- (id)preApplyManager;
- (BOOL)isProcessingApply;
- (void)pr_afterReceivePermit;
- (void)setDoPermitProcessAfterApply:(BOOL)arg0;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3;
- (void)setIsProcessingApply:(BOOL)arg0;
- (BOOL)doPermitProcessAfterApply;
- (BOOL)noAdminRight;
- (long long)determineFinalLinkTypeWithOrigin:(long long)arg0;
- (id)breakPage;
- (void)setBreakPage:(id)arg0;
- (double)interactModeStartTime;
- (id)linkmicAPI;
- (id)applyTitle;
- (void)setLinkmicAPI:(id)arg0;
- (BOOL)needGetSetting:(id)arg0;
- (BOOL)selfIsEnlarge;
- (long long)linkmicStatus;
- (void)setLinkmicStatus:(long long)arg0;
- (BOOL)p_enablePaidLinkmicAddPrice;
- (id)roleForLog;
- (id)rootPanelUserService;
- (void)setRootPanelUserService:(id)arg0;
- (id)initWithRoom:(id)arg0 eventContext:(id)arg1;
- (id)waitingOffsetResponse;
- (void)setWaitingOffsetResponse:(id)arg0;
- (id)attributeWaitingPromptsTuple;
- (void)setAttributeWaitingPromptsTuple:(id)arg0;
- (BOOL)isPaidLinkmicJoinChannel;
- (void)setIsPaidLinkmicJoinChannel:(BOOL)arg0;
- (long long)joinPayCount;
- (void)setDistributeSettingData:(id)arg0;
- (void)p_fetchPlayModeInfoIfNeeded;
- (void)setHasAppliedBefore:(BOOL)arg0;
- (BOOL)hasAppliedBefore;
- (void)replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3 trackParams:(id)arg4;
- (id)waitingPrompts;
- (void)setWaitingPrompts:(id)arg0;
- (id)distributeSettingData;
- (BOOL)supportOpenAvatar;
- (void)interactionLinkerService:(id)arg0 userDidLeaveUserList:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onSelfLinkTypeChanged:(int)arg1;
- (void)interactionLinkerService:(id)arg0 didCreateStartContext:(id)arg1 startType:(long long)arg2;
- (void)interactionLinkerService:(id)arg0 didCloseWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 didJoinChannelWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 joinChannelError:(id)arg1;
- (void)interactionLinkerService:(id)arg0 didDisconnectWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 didCancelWaitingWithContext:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedInvite:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedReply:(id)arg1 isAgreed:(BOOL)arg2;
- (void)interactionLinkerService:(id)arg0 onReceivedPermit:(id)arg1 isAgreed:(BOOL)arg2;
- (void)interactionLinkerService:(id)arg0 onReceivedSwitchScene:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedUILayoutChanged:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedEnlargeGuestReply:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedEnlargeGuestInvite:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedAudienceConFirmUnsilenceMessage:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceiveAudienceCameraOpenReply:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedAnchorPreInviteMessage:(id)arg1;
- (void)interactionLinkerService:(id)arg0 onReceivedPaidLinkmicLowBalanceMessage:(id)arg1;
- (id)activetyName;
- (void)setIsTask:(BOOL)arg0;
- (void)setActivetyName:(id)arg0;
- (id)invitePanelIconImage;
- (BOOL)willEnterDoubleC;
- (void)enlargeGuestReply:(int)arg0 guestID:(id)arg1 actionType:(id)arg2 isDoubleC:(BOOL)arg3;
- (void)uploadFeedbackWithCategoryName:(id)arg0 content:(id)arg1;
- (id)mediaServiceTransFerToPK;
- (void)setMediaServiceTransFerToPK:(id)arg0;
- (id)layoutRouter;
- (void)setCurrentClickGuestID:(id)arg0;
- (BOOL)isCurrentDynamicLayout;
- (void)setupComponentLoader;
- (void)setupContextInjection;
- (void)setInvitePanelIconImage:(id)arg0;
- (void)setWillEnterDoubleC:(BOOL)arg0;
- (void)setShowInvitePanel:(BOOL)arg0;
- (id)currentLargeUserType;
- (void)track:(id)arg0 extra:(id)arg1;
- (void)pr_stopConnectionEventWith:(id)arg0;
- (void)trackMuteGuest:(BOOL)arg0 muteGuestID:(id)arg1;
- (id)stageWithLayout:(id)arg0;
- (void)didStartPK;
- (void)willStartPKAudienceLinkmicWhileBigParty;
- (void)didStartPKAudienceLinkmicFromPK;
- (void)didEndPKAudienceLinkmicToPK;
- (void)bigPartyWillResumeWhilePKAudienceLinkmicWithModel:(id)arg0;
- (long long)currentUserPosition;
- (id)currentClickGuestID;
- (BOOL)hitCameraFrenquencyControl;
- (void)setStoreReaction:(id)arg0;
- (id)currentServerLayout;
- (BOOL)needToOpenCamera;
- (BOOL)hasProcessDidUpdateRoom;
- (unsigned long long)getInteractSceneFromInitRoomModel;
- (void)followAnchorFromPopup:(id /* block */)arg0 trackParams:(id)arg1;
- (unsigned long long)serverScene;
- (void)setShouldBanVideoForAutoApply:(BOOL)arg0;
- (BOOL)shouldBanVideoForAutoApply;
- (void)setTempActivityRequestPage:(id)arg0;
- (id)tempActivityRequestPage;
- (void)setNeedToOpenCamera:(BOOL)arg0;
- (BOOL)isNextDurationFromSmallWin;
- (void)setIsNextDurationFromSmallWin:(BOOL)arg0;
- (void)setLayoutRouter:(id)arg0;
- (void)changeToWaitingStatusIfNeededWithWaitingList:(id)arg0;
- (void)setSupportOpenAvatar:(BOOL)arg0;
- (id)storeReaction;
- (void)setJoinChannelAfterFollow:(BOOL)arg0;
- (BOOL)selectedFeedback;
- (void)p_onAnchorModeClosed;
- (BOOL)shouldIgnoreLinkMicInvitation;
- (void)prefetchFeedbackListModelIfNeeded;
- (void)internalApplyWhileTeamFightWithParams:(id)arg0;
- (void)internalApplyWithParams:(id)arg0;
- (void)reallyApplyWithParams:(id)arg0;
- (void)setApplyParamBeforeApplyWithisTask:(BOOL)arg0 eventTracker:(id)arg1 SourcePage:(id)arg2;
- (BOOL)isFromDistribution;
- (void)setApplyParamAfterApplySuccessWithSourcePage:(id)arg0 cilckSoure:(id)arg1 isPaid:(BOOL)arg2 linkmicPaidCount:(long long)arg3 discountAmount:(id)arg4 context:(id)arg5;
- (void)processWaitingUserAfterApply:(id)arg0 reason:(id)arg1;
- (BOOL)applyByMatch;
- (void)setApplyParamAfterApply;
- (void)p_replyWithType:(unsigned long long)arg0 linkType:(long long)arg1 inviteSource:(unsigned long long)arg2 replyToUserSecID:(id)arg3 trackParams:(id)arg4;
- (void)setSelectedFeedback:(BOOL)arg0;
- (void)setIsUserInProfile:(BOOL)arg0;
- (void)setApplyByMatch:(BOOL)arg0;
- (BOOL)isPreparingWaitingOffset;
- (void)showApplyDetailPanelWithWaitingResponse:(id)arg0;
- (void)setIsPreparingWaitingOffset:(BOOL)arg0;
- (void)p_trackEnlargeGuestReply:(id)arg0 isDoubleC:(BOOL)arg1;
- (void)setUseBackupStreamWhenJoinRTC:(BOOL)arg0;
- (BOOL)joinChannelAfterFollow;
- (void)preReplyIfNeed;
- (void)setHasProcessDidUpdateRoom:(BOOL)arg0;
- (BOOL)isUserInProfile;
- (void)stopConnectionOnLiveEndWithReason:(unsigned long long)arg0;
- (BOOL)isHeadphonesPluggedIn;
- (unsigned long long)correntCurrentScene:(unsigned long long)arg0;
- (BOOL)needToOpenAvatar;
- (void)setNeedToOpenAvatar:(BOOL)arg0;
- (id)serverLayout;
- (BOOL)useBackupStreamWhenJoinRTC;
- (id)roomThemeData;
- (void)setRoomThemeData:(id)arg0;
- (void)setRelevantShortVideoInfo:(id)arg0;
- (BOOL)isUsingFirstSingApply;
- (void)setIsUsingFirstSingApply:(BOOL)arg0;
- (void)setLinkType:(long long)arg0;
- (long long)linkType;
- (id)currentLayout;
- (BOOL)isPaid;
- (void).cxx_destruct;
- (void)stopConnection;
- (unsigned long long)currentScene;
- (void)setup;
- (id)eventContext;
- (BOOL)isAdmin;
- (void)setIsPaid:(BOOL)arg0;
- (id)interactionSettings;
- (void)track:(id)arg0;
- (int)applyType;
- (void)setApplyType:(int)arg0;
- (void)setInteractionSettings:(id)arg0;
- (id)cellIndex;
- (void)setCellIndex:(id)arg0;
- (id)activityProvider;
- (void)setActivityProvider:(id)arg0;

@end
