//
//     Generated by private class-dump
//

@class NSString, VEBitsRTTransUtil, HTSGLFramebuffer, NSMutableArray, IESMMEngineConfig;

@interface IESVideoEngineEffectFilter : HTSGLFilter <IESVideoEngineEffectProtocol> {
    BOOL _needHighResolution;
    BOOL _isBrushisDrawing;
    BOOL _needPin;
    BOOL _useAmazing;
    BOOL _needCachePinBuffer;
    BOOL _isStickerHasRender;
    BOOL _isInitedSuccess;
    BOOL _enable10bitRT;
    float _resizeScale;
    int _stickerEffectColorSpace;
    NSMutableArray *_infoStickers;
    id /* block */ _imageBlock;
    id /* block */ _stickerAddBlock;
    id /* block */ _stickerSizeNeedChangeBlock;
    double _frameTimestamp;
    void *_engineHandle;
    long long _curStickerID;
    IESMMEngineConfig *_config;
    HTSGLFramebuffer *_pinFrameBuffer;
    VEBitsRTTransUtil *_bitsRTTransUtil;
    struct CGSize { double width; double height; } _curFrameSize;
}

@property (nonatomic) double frameTimestamp;
@property (nonatomic) BOOL isBrushisDrawing;
@property (nonatomic) void *engineHandle;
@property (nonatomic) struct CGSize { double width; double height; } curFrameSize;
@property (nonatomic) long long curStickerID;
@property (nonatomic) BOOL needPin;
@property (nonatomic) BOOL useAmazing;
@property (retain, nonatomic) IESMMEngineConfig *config;
@property (nonatomic) BOOL needCachePinBuffer;
@property (retain, nonatomic) HTSGLFramebuffer *pinFrameBuffer;
@property (nonatomic) float resizeScale;
@property (nonatomic) BOOL isStickerHasRender;
@property (nonatomic) BOOL isInitedSuccess;
@property (nonatomic) int stickerEffectColorSpace;
@property (retain, nonatomic) VEBitsRTTransUtil *bitsRTTransUtil;
@property (nonatomic) BOOL enable10bitRT;
@property (retain, nonatomic) NSMutableArray *infoStickers;
@property (nonatomic) BOOL needHighResolution;
@property (copy, nonatomic) id /* block */ imageBlock;
@property (copy, nonatomic) id /* block */ stickerAddBlock;
@property (copy, nonatomic) id /* block */ stickerSizeNeedChangeBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)getInfoStickerTemplateParams:(id)arg0;
+ (id)convertTextToTextTemplate:(id)arg0;
+ (void)load;

- (void)setFrameTimestamp:(double)arg0;
- (BOOL)handleTouchDown:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handleTouchUp:(struct CGPoint { double x0; double x1; })arg0 withType:(unsigned long long)arg1;
- (BOOL)handlePanEventWithTranslation:(struct CGPoint { double x0; double x1; })arg0 location:(struct CGPoint { double x0; double x1; })arg1;
- (BOOL)handleLongPressEventWithLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)handleScaleEvent:(double)arg0;
- (BOOL)toggleGestureRecognition:(BOOL)arg0 type:(int)arg1;
- (id)initWithConfig:(id)arg0 context:(id)arg1;
- (BOOL)useAmazing;
- (void)renderToTextureWithVertices:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)setInputFramebuffer:(id)arg0 atIndex:(long long)arg1;
- (long long)nextAvailableTextureIndex;
- (void)setUseAmazing:(BOOL)arg0;
- (int)setStickerPreviewMode:(long long)arg0 previewMode:(int)arg1;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSize:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getstickerEditBoundBox:(long long)arg0;
- (double)getStickerRotation:(long long)arg0;
- (struct CGPoint { double x0; double x1; })getStickerPosition:(long long)arg0;
- (BOOL)getStickerVisible:(long long)arg0;
- (void)cancelPin:(long long)arg0;
- (long long)getStickerPinStatus:(long long)arg0;
- (id)getTemplateStickerTextParams:(long long)arg0;
- (BOOL)isAnimationSticker:(long long)arg0;
- (void)startChangeStickerDuration:(long long)arg0;
- (void)stopChangeStickerDuration:(long long)arg0;
- (void)setInfoStickerRestoreMode:(long long)arg0;
- (void)updateSticker:(long long)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (long long)addBrushSticker:(id)arg0 params:(id)arg1;
- (void)setSticker:(long long)arg0 startTime:(double)arg1 duration:(double)arg2;
- (void)removeInfoSticker:(long long)arg0;
- (long long)addInfoSticker:(id)arg0 withEffectInfo:(id)arg1 userInfo:(id)arg2;
- (void)setStickerAngle:(long long)arg0 angle:(double)arg1;
- (void)setStickerScale:(long long)arg0 scale:(double)arg1;
- (void)setSticker:(long long)arg0 flipX:(BOOL)arg1 flipY:(BOOL)arg2;
- (void)setSticker:(long long)arg0 alpha:(double)arg1;
- (long long)addTextStickerWithUserInfo:(id)arg0;
- (int)setTextStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (long long)addSubtitleSticker;
- (void)setSrtInfo:(long long)arg0 srt:(id)arg1;
- (void)setSrtFont:(long long)arg0 fontPath:(id)arg1;
- (void)setSrtColor:(long long)arg0 red:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)setSrtAudioInfo:(long long)arg0 seqIn:(double)arg1 trimIn:(double)arg2 duration:(double)arg3 audioCycle:(BOOL)arg4;
- (unsigned long long)addTemplateWithResourcePath:(id)arg0 dependResourceParams:(id)arg1;
- (int)setTemplateStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (int)setStickerAnim:(long long)arg0 animType:(int)arg1 animPath:(id)arg2 duration:(double)arg3;
- (void)setImageBlock:(id /* block */)arg0;
- (id)infoStickers;
- (BOOL)brushStart;
- (BOOL)brushEnd;
- (void)removeLastBrush;
- (void)setBrushColorWithRed:(double)arg0 green:(double)arg1 blue:(double)arg2 alpah:(double)arg3;
- (void)setBrushCanvasAlpha:(double)arg0;
- (void)setBrushSize:(double)arg0;
- (long long)currentBrushNumber;
- (void)newFrameReadyAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 atIndex:(long long)arg1 exceptionBlock:(id /* block */)arg2;
- (void)refreshEffectColorSpace:(id)arg0;
- (id /* block */)imageBlock;
- (long long)addRichTextStickerWithJson:(id)arg0 userInfo:(id)arg1;
- (long long)addEmojiSticker:(id)arg0;
- (BOOL)setStickerAnim:(long long)arg0 type:(int)arg1 key:(id)arg2 val:(id)arg3;
- (id)getStickerById:(long long)arg0;
- (void)setSticker:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2;
- (void)setStickerRelativeScale:(long long)arg0 scale:(double)arg1;
- (void)recoveryPinResult:(long long)arg0;
- (void)recoveryPinResult:(long long)arg0 withPinData:(id)arg1;
- (void)updateStickerID:(long long)arg0 toNewStickerID:(long long)arg1;
- (void)setInfoStickers:(id)arg0;
- (void)updateInfoStickerKeyFrameInfo;
- (id)getInfoStickerKeyFrameInfo:(unsigned long long)arg0 stickerID:(unsigned long long)arg1;
- (void)setStickerAddBlock:(id /* block */)arg0;
- (long long)addTextSticker;
- (int)setPinSelectedArea:(long long)arg0 areaParams:(id)arg1;
- (id /* block */)stickerAddBlock;
- (int)p_processFrameForAlgorithmWithFrameBuffers:(id)arg0 timeStamp:(double)arg1;
- (BOOL)updateTouchInfoForRecognition:(struct _VETouchInfo { unsigned int x0; struct CGPoint { double x0; double x1; } x1; float x2; float x3; int x4; long long x5; })arg0;
- (BOOL)isTouchGestureRecognitionEnabled:(int)arg0;
- (void)innerInit;
- (id)pinFrameBuffer;
- (void)setPinFrameBuffer:(id)arg0;
- (void)releaseEngine;
- (void *)engineHandle;
- (void)setEngineHandle:(void *)arg0;
- (long long)curStickerID;
- (void)setCurStickerID:(long long)arg0;
- (BOOL)checkInitSuccessed;
- (void)updateStickerLayers;
- (void)setNeedCachePinBuffer:(BOOL)arg0;
- (void)setNeedPin:(BOOL)arg0;
- (float)resizeScale;
- (void)updateInfoStickerKeyFrameInfoWithStickerId:(long long)arg0;
- (BOOL)isBrushisDrawing;
- (void)setIsStickerHasRender:(BOOL)arg0;
- (void)setResizeScale:(float)arg0;
- (void)setStickerVisible:(id)arg0 visible:(BOOL)arg1;
- (BOOL)isStickerHasRender;
- (struct CGSize { double x0; double x1; })curFrameSize;
- (id /* block */)stickerSizeNeedChangeBlock;
- (void)setCurFrameSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)needCachePinBuffer;
- (BOOL)needPin;
- (void)setIsBrushisDrawing:(BOOL)arg0;
- (void)setSticker:(long long)arg0 pauseAnimation:(BOOL)arg1;
- (void)setStickerAbove:(long long)arg0;
- (void)getSticker:(long long)arg0 props:(id)arg1;
- (struct CGSize { double x0; double x1; })getStickerCanvasSize;
- (void)setStickerSizeNeedChangeBlock:(id /* block */)arg0;
- (long long)addStickerbyUIImage:(id)arg0;
- (void)setSrtManipulate:(long long)arg0 state:(BOOL)arg1;
- (void)setSrtInitialPos:(long long)arg0 posX:(double)arg1 posY:(double)arg2;
- (void)getSrtOffset:(long long)arg0 offsetX:(float *)arg1 offsetY:(float *)arg2;
- (void)preparePin:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (int)startPin:(long long)arg0 pinTime:(float)arg1 startTime:(float)arg2 duration:(float)arg3;
- (void)stopPin:(long long)arg0;
- (void)savePinResult:(long long)arg0 realVideoSize:(struct CGSize { double x0; double x1; })arg1;
- (id)getPinResult:(long long)arg0 realVideoSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setPinTime:(long long)arg0 pinTime:(double)arg1;
- (long long)stickerCount;
- (BOOL)needHighResolution;
- (void)setNeedHighResolution:(BOOL)arg0;
- (void)setSticker:(long long)arg0 animId:(int)arg1 inTime:(double)arg2 stillTime:(double)arg3 outTime:(double)arg4;
- (void)getSticker:(long long)arg0 flipX:(BOOL *)arg1 flipY:(BOOL *)arg2;
- (BOOL)isInitedSuccess;
- (void)setIsInitedSuccess:(BOOL)arg0;
- (int)stickerEffectColorSpace;
- (void)setStickerEffectColorSpace:(int)arg0;
- (id)bitsRTTransUtil;
- (void)setBitsRTTransUtil:(id)arg0;
- (BOOL)enable10bitRT;
- (void)setEnable10bitRT:(BOOL)arg0;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (BOOL)handleTouchEvent:(struct CGPoint { double x0; double x1; })arg0;
- (void)dealloc;
- (double)frameTimestamp;
- (BOOL)handleRotationEvent:(double)arg0;

@end
