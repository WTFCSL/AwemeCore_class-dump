//
//     Generated by private class-dump
//

@class NSArray, HMDPerformanceReportRequest, NSString, HMInstance;

@interface HMDStartDetector : HeimdallrModule <HMDPerformanceReporterDataSource> {
    BOOL _hasStartLaunch;
    HMDPerformanceReportRequest *_reportingRequest;
    HMInstance *_instance;
}

@property (retain, nonatomic) HMDPerformanceReportRequest *reportingRequest;
@property (nonatomic) BOOL hasStartLaunch;
@property (retain, nonatomic) HMInstance *instance;
@property (readonly, nonatomic) NSArray *records;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)markWillFinishingLaunchDate;
+ (void)markMainDate;
+ (id)share;

- (void)updateConfig:(id)arg0;
- (BOOL)needSyncStart;
- (BOOL)performanceDataSource;
- (void)cleanupWithConfig:(id)arg0;
- (void)prepareForDefaultStart;
- (void)setupWithHeimdallr:(id)arg0;
- (double)didFnishConcurrentRendering;
- (BOOL)hasStartLaunch;
- (void)setHasStartLaunch:(BOOL)arg0;
- (void)startLaunchDetection;
- (id)fetchUploadRecordsWithLimit:(long long)arg0;
- (id)getDataWithRecords:(id)arg0 isDebugReal:(BOOL)arg1;
- (void)setReportingRequest:(id)arg0;
- (id)reportingRequest;
- (void)dropAllDataForServerState;
- (unsigned long long)reporterPriority;
- (id)performanceDataWithCountLimit:(long long)arg0;
- (id)debugRealPerformanceDataWithConfig:(id)arg0;
- (void)cleanupPerformanceDataWithConfig:(id)arg0;
- (void)performanceDataDidReportSuccess:(BOOL)arg0;
- (id)records;
- (void).cxx_destruct;
- (void)stop;
- (id)instance;
- (void)start;
- (void)setInstance:(id)arg0;
- (Class)storeClass;

@end
