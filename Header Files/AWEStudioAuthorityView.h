//
//     Generated by private class-dump
//

@class UIStackView, NSString, NSDictionary, UILabel, UIButton;

@interface AWEStudioAuthorityView : UIView <AWEStudioAuthorityViewProtocol> {
    NSString *tabName;
    id /* block */ didClickedMikeAuthorityBtn;
    id /* block */ didClickedCameraAuthorityBtn;
    NSDictionary *_referExtra;
    UILabel *_upLabel;
    UILabel *_downLabel;
    UIButton *_cameraAuthorityBtn;
    UIButton *_mikeAuthorityBtn;
    UIStackView *_authStackView;
    unsigned long long _requiredPermission;
}

@property (retain, nonatomic) UIStackView *authStackView;
@property (nonatomic) unsigned long long requiredPermission;
@property (retain, nonatomic) UILabel *upLabel;
@property (retain, nonatomic) UILabel *downLabel;
@property (retain, nonatomic) UIButton *cameraAuthorityBtn;
@property (retain, nonatomic) UIButton *mikeAuthorityBtn;
@property (copy, nonatomic) id /* block */ didClickedCameraAuthorityBtn;
@property (copy, nonatomic) id /* block */ didClickedMikeAuthorityBtn;
@property (copy, nonatomic) NSString *tabName;
@property (copy, nonatomic) NSDictionary *referExtra;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)getInstanceForRecordControllerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 withUserGrantedBlock:(id /* block */)arg1;

- (void)setUpLabel:(id)arg0;
- (id)upLabel;
- (void)setDownLabel:(id)arg0;
- (id)downLabel;
- (id)referExtra;
- (void)setCameraAuthoritySelected:(BOOL)arg0;
- (void)setDidClickedCameraAuthorityBtn:(id /* block */)arg0;
- (void)setMikeAuthoritySelected:(BOOL)arg0;
- (void)setDidClickedMikeAuthorityBtn:(id /* block */)arg0;
- (id)cameraAuthorityBtn;
- (id /* block */)didClickedCameraAuthorityBtn;
- (void)setCameraAuthorityBtn:(id)arg0;
- (void)setReferExtra:(id)arg0;
- (void)configAccessibilityElements;
- (void)updateWithRequiredPermission:(unsigned long long)arg0;
- (void)updateCameraWidthConstraintsWhenRestricted;
- (id)mikeAuthorityBtn;
- (void)updateMikeWidthConstraintsWhenRestricted;
- (void)trackPermissionToastShow:(id)arg0 landingType:(id)arg1;
- (void)trackPermissionToastResult:(id)arg0 result:(id)arg1;
- (void)trackPermissionToastClick:(id)arg0 landingType:(id)arg1 clickType:(id)arg2 clickPosition:(id)arg3;
- (id)authStackView;
- (void)didClickedCameraAuthorityBtn:(id)arg0;
- (void)didClickedMikeAuthorityBtn:(id)arg0;
- (id /* block */)didClickedMikeAuthorityBtn;
- (void)setMikeAuthorityBtn:(id)arg0;
- (void)setAuthStackView:(id)arg0;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setRequiredPermission:(unsigned long long)arg0;
- (unsigned long long)requiredPermission;
- (void)setTabName:(id)arg0;
- (id)tabName;

@end
