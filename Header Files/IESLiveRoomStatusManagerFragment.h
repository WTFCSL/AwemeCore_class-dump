//
//     Generated by private class-dump
//

@class IESLiveAnchorCameraPermissionManager, IESLiveCountTimer, IESLiveEnterRoomSequenceQueue, NSTimer, IESLiveRecordStateApi, NSString;
@protocol IESLiveAnchorRoomStatusChangeEvents, HTSLiveStreamEngineProvider, IESLiveRecoder;

@interface IESLiveRoomStatusManagerFragment : IESLiveRoomComponent <IESLiveAnchorRoomStatusChangeService, IESLiveAnchorEngineStateChangeService, IESLiveAnchorVCLifeCycleNotificationService> {
    id<IESLiveAnchorRoomStatusChangeEvents> _dispatcher;
    IESLiveEnterRoomSequenceQueue *_sequenceQueue;
    id<HTSLiveStreamEngineProvider> _engineProvider;
    IESLiveRecordStateApi *_stateApi;
    IESLiveCountTimer *_countTimer;
    double _appResignActiveTime;
    id<IESLiveRecoder> _recorder;
    NSTimer *_pauseTimeoutTimer;
    NSTimer *_pauseRecordTimer;
    double _lastPauseTime;
    IESLiveAnchorCameraPermissionManager *_cameraPermissionManager;
    unsigned long long _pauseType;
    long long _resumeType;
}

@property (retain, nonatomic) id<IESLiveAnchorRoomStatusChangeEvents> dispatcher;
@property (retain, nonatomic) IESLiveEnterRoomSequenceQueue *sequenceQueue;
@property (weak, nonatomic) id<HTSLiveStreamEngineProvider> engineProvider;
@property (retain, nonatomic) IESLiveRecordStateApi *stateApi;
@property (retain, nonatomic) IESLiveCountTimer *countTimer;
@property (nonatomic) double appResignActiveTime;
@property (retain, nonatomic) id<IESLiveRecoder> recorder;
@property (retain, nonatomic) NSTimer *pauseTimeoutTimer;
@property (retain, nonatomic) NSTimer *pauseRecordTimer;
@property (nonatomic) double lastPauseTime;
@property (retain, nonatomic) IESLiveAnchorCameraPermissionManager *cameraPermissionManager;
@property (nonatomic) unsigned long long pauseType;
@property (nonatomic) long long resumeType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)componentShouldActive:(id)arg0;

- (BOOL)isFakeAudioCaptureRunning;
- (void)onAppDidEnterBackground;
- (void)setLastPauseTime:(double)arg0;
- (double)lastPauseTime;
- (void)setCountTimer:(id)arg0;
- (id)countTimer;
- (void)onAppBecomeActive;
- (void)onAppWillResignActive;
- (void)componentDidAppear;
- (void)componentDidDisappear;
- (unsigned long long)pauseType;
- (void)setPauseType:(unsigned long long)arg0;
- (id)sequenceQueue;
- (void)setSequenceQueue:(id)arg0;
- (void)componentBindService;
- (void)componentCreate;
- (void)componentMount;
- (void)componentUnmount;
- (void)startLive;
- (void)liveDidAppear;
- (void)liveDidDisappear;
- (void)mountDidFinishForLevel:(long long)arg0;
- (id)cameraPermissionManager;
- (void)setCameraPermissionManager:(id)arg0;
- (long long)resumeType;
- (void)setResumeType:(long long)arg0;
- (void)trackAppWillResignActive;
- (void)pauseLiveOnManuallyWithCompletion:(id /* block */)arg0;
- (void)resumeLiveOnManuallyWithCompletion:(id /* block */)arg0;
- (void)stopLiveByForce:(BOOL)arg0 reason:(long long)arg1 trace:(id)arg2 completion:(id /* block */)arg3;
- (void)stopLiveOnlyClientWithCompletion:(id /* block */)arg0;
- (void)handleStreamEnginPrepareState;
- (void)handleStreamEngineStartState;
- (void)handleStreamEngineStopState;
- (void)setStateApi:(id)arg0;
- (BOOL)liveTypeNeedVideoCapture;
- (void)cancelStateReport;
- (void)invalidPasueTimeoutTimer;
- (void)invalidPauseRecordTimer;
- (id)engineProvider;
- (void)resumeLiveOnComponentDidAppear;
- (void)resumeLiveWithCheckHandler:(id /* block */)arg0;
- (void)pauseLiveOnComponentDidDisappear;
- (void)updateRemoteRoomStatus:(long long)arg0 reason:(long long)arg1 source:(unsigned long long)arg2 trace:(id)arg3;
- (void)resumeLiveWithPlayingStatusManually;
- (void)scheduleStateReportWithImmediatelyFireTimer:(BOOL)arg0 trace:(id)arg1;
- (void)setupPauseTimeoutTimer;
- (id)stateApi;
- (void)closeRoomByDoubleCheckStatus:(long long)arg0 reason:(long long)arg1 source:(unsigned long long)arg2 trace:(id)arg3;
- (void)trackAppBecomeActiveWithLiveOn:(BOOL)arg0;
- (void)setPauseRecordTimer:(id)arg0;
- (void)reportPlayingStatusWithTrace:(id)arg0;
- (void)setPauseTimeoutTimer:(id)arg0;
- (id)pauseTimeoutTimer;
- (id)pauseRecordTimer;
- (void)setAppResignActiveTime:(double)arg0;
- (double)appResignActiveTime;
- (void)setEngineProvider:(id)arg0;
- (id)dispatcher;
- (void)setDispatcher:(id)arg0;
- (void).cxx_destruct;
- (id)recorder;
- (void)setRecorder:(id)arg0;
- (void)checkSecurity;

@end
