//
//     Generated by private class-dump
//

@class NSString, NSArray, NSDictionary, NSMutableDictionary, ECOMTIMMessageChecker, NSObject;
@protocol ECOMTIMOMessagesDataSourceDelegate, OS_dispatch_semaphore, OS_dispatch_queue, ECOMTIMMessageStoreProtocol;

@interface ECOMTIMOMessagesInConversationDataSource : NSObject <ECOMTIMMessageStoreChangesObserver> {
    BOOL _hasOlderMessages;
    BOOL _hasNewerMessages;
    BOOL _autoInsertNewMessages;
    BOOL _loadOlderDoNotNeedNetwork;
    NSArray *_currentMessagesFiltered;
    NSString *_conversationID;
    id<ECOMTIMOMessagesDataSourceDelegate> _delegate;
    NSString *_lastHasReadMessageIdentifier;
    NSArray *_currentMessagesAll;
    NSDictionary *_currentMessagesDict;
    NSMutableDictionary *_updatedModels;
    id<ECOMTIMMessageStoreProtocol> _db;
    id /* block */ _shouldIncludeMessageFilter;
    unsigned long long _messageCountPerPage;
    ECOMTIMMessageChecker *_checker;
    long long _currentMaxIndexV2;
    NSObject<OS_dispatch_semaphore> *_lock;
    NSObject<OS_dispatch_queue> *_processQueue;
}

@property (retain, nonatomic) NSString *conversationID;
@property (retain, nonatomic) NSArray *currentMessagesAll;
@property (retain, nonatomic) NSArray *currentMessagesFiltered;
@property (retain, nonatomic) NSDictionary *currentMessagesDict;
@property (retain, nonatomic) NSMutableDictionary *updatedModels;
@property (retain, nonatomic) id<ECOMTIMMessageStoreProtocol> db;
@property (nonatomic) BOOL hasOlderMessages;
@property (nonatomic) BOOL hasNewerMessages;
@property (retain, nonatomic) NSString *lastHasReadMessageIdentifier;
@property (nonatomic) BOOL autoInsertNewMessages;
@property (nonatomic) BOOL loadOlderDoNotNeedNetwork;
@property (copy, nonatomic) id /* block */ shouldIncludeMessageFilter;
@property (nonatomic) unsigned long long messageCountPerPage;
@property (retain, nonatomic) ECOMTIMMessageChecker *checker;
@property (nonatomic) long long currentMaxIndexV2;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *lock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *processQueue;
@property (weak, nonatomic) id<ECOMTIMOMessagesDataSourceDelegate> delegate;
@property (readonly, copy, nonatomic) NSArray *currentMessageBriefs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setChecker:(id)arg0;
- (void)setProcessQueue:(id)arg0;
- (void)loadOlderMessagesWithCompletionBlock:(id /* block */)arg0;
- (BOOL)hasOlderMessages;
- (unsigned long long)messageCountPerPage;
- (void)setMessageCountPerPage:(unsigned long long)arg0;
- (id)initWithInitialLocationLatestMessageForConversationID:(id)arg0 options:(id)arg1;
- (id)currentMessageBriefs;
- (id)currentMessagesFiltered;
- (id)initWithConversationID:(id)arg0 fromTopMessage:(id)arg1 options:(id)arg2 delegate:(id)arg3;
- (id)initWithInitialLocationFirstUnreadMessageToLatestMessageForConversationID:(id)arg0 offset:(unsigned long long)arg1 messageID:(id)arg2 options:(id)arg3 delegate:(id)arg4;
- (void)onConversationCheckMessageEnd:(id)arg0 messageIdentifiers:(id)arg1;
- (long long)getCurrentTimeInterval;
- (void)onMessagesCreated:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2;
- (void)onMessagesUpdated:(id)arg0 belongingConversationMap:(id)arg1;
- (void)onMessagesDeleted:(id)arg0 belongingConversationMap:(id)arg1;
- (void)onConversationsDeleted:(id)arg0;
- (void)onConversationCleared:(id)arg0;
- (id /* block */)shouldIncludeMessageFilter;
- (void)setShouldIncludeMessageFilter:(id /* block */)arg0;
- (id)initWithInitialLocationFirstUnreadMessageForConversationID:(id)arg0 offset:(unsigned long long)arg1 options:(id)arg2;
- (id)initWithInitialLocationFirstUnreadMessageForConversationID:(id)arg0 offset:(unsigned long long)arg1 options:(id)arg2 delegate:(id)arg3;
- (id)initWithInitialLocationFirstUnreadMessageForConversationId:(id)arg0 unreadMentioned:(BOOL)arg1 offset:(unsigned long long)arg2 options:(id)arg3 delegate:(id)arg4;
- (id)initWithInitialLocationLatestMessageForConversationID:(id)arg0 options:(id)arg1 delegate:(id)arg2;
- (void)setUpdatedModels:(id)arg0;
- (void)setLoadOlderDoNotNeedNetwork:(BOOL)arg0;
- (void)setCurrentMessagesAll:(id)arg0;
- (id)filteredMessagesOfMessages:(id)arg0 reason:(long long)arg1;
- (void)setCurrentMessagesFiltered:(id)arg0;
- (void)setHasNewerMessages:(BOOL)arg0;
- (void)setAutoInsertNewMessages:(BOOL)arg0;
- (BOOL)loadOlderDoNotNeedNetwork;
- (void)setHasOlderMessages:(BOOL)arg0;
- (void)setLastHasReadMessageIdentifier:(id)arg0;
- (void)calcAndLogWrongOrder;
- (id)currentMessagesDict;
- (id)currentMessagesAll;
- (id)extractMessagesLogInfoWithMessagesArray:(id)arg0;
- (void)applyNewResult:(id)arg0 reason:(long long)arg1;
- (long long)currentMaxIndexV2;
- (void)setCurrentMaxIndexV2:(long long)arg0;
- (void)deleteWithIdentifiers:(id)arg0 reason:(long long)arg1;
- (id)updatedModels;
- (BOOL)hasNewerMessages;
- (void)setCurrentMessagesDict:(id)arg0;
- (id)initWithInitialLocationFirstUnreadMessageForConversationID:(id)arg0 offset:(unsigned long long)arg1;
- (id)initWithInitialLocationFirstUnreadMentionedMessageForConversationId:(id)arg0 offset:(unsigned long long)arg1 options:(id)arg2 delegate:(id)arg3;
- (id)initWithInitialLocationForConversationID:(id)arg0 messageID:(id)arg1 offset:(unsigned long long)arg2 options:(id)arg3 delegate:(id)arg4;
- (id)initWithInitialLocationLatestMessageForConversationID:(id)arg0;
- (id)initWithInitialLocationLatestMessageForConversationID:(id)arg0 fromTopMessage:(id)arg1 options:(id)arg2;
- (id)initWithInitialLocationFirstUnreadMessageToLatestMessageForConversationID:(id)arg0 offset:(unsigned long long)arg1 options:(id)arg2;
- (id)itemForMessageId:(id)arg0;
- (void)filterOutMessagesWithIdentifiers:(id)arg0;
- (id)lastHasReadMessageIdentifier;
- (BOOL)autoInsertNewMessages;
- (id)itemAtIndex:(unsigned long long)arg0;
- (unsigned long long)numberOfItems;
- (void)setDb:(id)arg0;
- (id)init;
- (id)db;
- (void).cxx_destruct;
- (id)conversationID;
- (id)delegate;
- (id)lock;
- (void)setDelegate:(id)arg0;
- (void)setLock:(id)arg0;
- (void)setConversationID:(id)arg0;
- (id)checker;
- (void)commonSetup;
- (id)processQueue;

@end
