//
//     Generated by private class-dump
//

@class IESVideoInfoProvider, AWEPublishBaseTask, AWEVideoPublishViewModel, AWEVETranscodeControl, IESMMTransProcessData, NSDictionary, AWEResourceUploadParametersResponseModel, NSString, IESMMTranscodeRes, AWECompileRequest;
@protocol AWEPublishTaskBusinessProtocol, ACCSequenceEditServiceProtocol, ACCVideoConfigProtocol, AWEPublishEditServiceManagerProtocol, ACCEditServiceProtocol;

@interface AWEPublishMergeStage : AWEPublishBaseMergeStage <IESAVAssetAsynchronousLoaderDelegate> {
    BOOL _mergeForPublish;
    BOOL _parallelEdit;
    BOOL _useSequenceEditService;
    BOOL _isNotFromEditPageOfEditService;
    BOOL _canceling;
    BOOL _hasSendMessage;
    BOOL _enforceReencode;
    BOOL _enforceReenmux;
    BOOL _isTriggerInEdit;
    IESMMTranscodeRes *_transcodeResult;
    long long _stageScene;
    id<AWEPublishEditServiceManagerProtocol> _editServiceManager;
    id<ACCEditServiceProtocol> _editService;
    id<ACCSequenceEditServiceProtocol> _sequenceEditService;
    AWEVideoPublishViewModel *_publishViewModel;
    AWEVideoPublishViewModel *_mergePublishViewModel;
    AWEVideoPublishViewModel *_originPublishViewModel;
    AWEPublishBaseTask<AWEPublishTaskBusinessProtocol> *_videoTask;
    IESVideoInfoProvider *_srcInfoProvider;
    IESVideoInfoProvider *_dstInfoProvider;
    NSDictionary *_sourceVideoInfoDict;
    double _minDuration;
    long long _backgroundCount;
    long long _retryCount;
    id /* block */ _restartBlock;
    AWECompileRequest *_request;
    id<ACCVideoConfigProtocol> _videoConfig;
    IESMMTransProcessData *_transConfig;
    AWEResourceUploadParametersResponseModel *_uploadParamsCache;
    long long _taskType;
    unsigned long long _flowType;
    NSDictionary *_resultInfo;
    double _videoAssetDuration;
    AWEVETranscodeControl *_transcodeControl;
    struct CGSize { double width; double height; } _originCanvasSize;
    struct CGSize { double width; double height; } _originVideoSize;
    struct CGSize { double width; double height; } _originTargetVideoSize;
    struct CGSize { double width; double height; } _mergeCanvasSize;
    struct CGSize { double width; double height; } _videoAssetSize;
}

@property (retain, nonatomic) id<ACCEditServiceProtocol> editService;
@property (retain, nonatomic) id<ACCSequenceEditServiceProtocol> sequenceEditService;
@property (retain, nonatomic) AWEVideoPublishViewModel *publishViewModel;
@property (retain, nonatomic) AWEVideoPublishViewModel *mergePublishViewModel;
@property (retain, nonatomic) AWEVideoPublishViewModel *originPublishViewModel;
@property (weak, nonatomic) AWEPublishBaseTask<AWEPublishTaskBusinessProtocol> *videoTask;
@property (retain, nonatomic) IESVideoInfoProvider *srcInfoProvider;
@property (retain, nonatomic) IESVideoInfoProvider *dstInfoProvider;
@property (copy, nonatomic) NSDictionary *sourceVideoInfoDict;
@property (nonatomic) double minDuration;
@property (nonatomic) long long backgroundCount;
@property (nonatomic) BOOL canceling;
@property (nonatomic) long long retryCount;
@property (nonatomic) BOOL hasSendMessage;
@property (nonatomic) BOOL enforceReencode;
@property (nonatomic) BOOL enforceReenmux;
@property (copy, nonatomic) id /* block */ restartBlock;
@property (retain, nonatomic) AWECompileRequest *request;
@property (retain, nonatomic) id<ACCVideoConfigProtocol> videoConfig;
@property (retain, nonatomic) IESMMTransProcessData *transConfig;
@property (nonatomic) BOOL isTriggerInEdit;
@property (retain, nonatomic) AWEResourceUploadParametersResponseModel *uploadParamsCache;
@property (nonatomic) long long taskType;
@property (nonatomic) unsigned long long flowType;
@property (retain, nonatomic) NSDictionary *resultInfo;
@property (nonatomic) struct CGSize { double width; double height; } originCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } originVideoSize;
@property (nonatomic) struct CGSize { double width; double height; } originTargetVideoSize;
@property (nonatomic) struct CGSize { double width; double height; } mergeCanvasSize;
@property (nonatomic) struct CGSize { double width; double height; } videoAssetSize;
@property (nonatomic) double videoAssetDuration;
@property (retain, nonatomic) AWEVETranscodeControl *transcodeControl;
@property (nonatomic) BOOL mergeForPublish;
@property (nonatomic) BOOL parallelEdit;
@property (nonatomic) BOOL useSequenceEditService;
@property (nonatomic) BOOL isNotFromEditPageOfEditService;
@property (readonly, nonatomic) IESMMTranscodeRes *transcodeResult;
@property (nonatomic) long long stageScene;
@property (retain, nonatomic) id<AWEPublishEditServiceManagerProtocol> editServiceManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isCreationToolInfini:(id)arg0;

- (id)videoConfig;
- (void)setVideoConfig:(id)arg0;
- (id)publishViewModel;
- (void)appDidBecomeActiveNotification;
- (id)automaticallyLoadedAssetKeysAtIndex:(unsigned long long)arg0;
- (void)setTransConfig:(id)arg0;
- (id)transConfig;
- (id)editService;
- (id)uploadParamsCache;
- (void)setEditService:(id)arg0;
- (void)setPublishViewModel:(id)arg0;
- (void)appWillResignActiveNotification;
- (void)setMinDuration:(double)arg0;
- (void)setUploadParamsCache:(id)arg0;
- (id)sequenceEditService;
- (void)setSequenceEditService:(id)arg0;
- (id)editServiceManager;
- (void)setEditServiceManager:(id)arg0;
- (BOOL)enableIsolateEditAndPublishEditorWithPublishModel:(id)arg0;
- (struct CGSize { double x0; double x1; })originCanvasSize;
- (void)setOriginCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (id)initWithModel:(id)arg0 editService:(id)arg1;
- (void)setIsTriggerInEdit:(BOOL)arg0;
- (void)setParallelEdit:(BOOL)arg0;
- (void)setUseSequenceEditService:(BOOL)arg0;
- (id)transcodeResult;
- (void)setBackgroundCount:(long long)arg0;
- (long long)backgroundCount;
- (BOOL)isTriggerInEdit;
- (void)p_run;
- (void)setupWithFlowModelIfNeeded;
- (void)updateFlowModelIfNeeded;
- (struct CGSize { double x0; double x1; })videoAssetSize;
- (double)videoAssetDuration;
- (void)setVideoAssetSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setVideoAssetDuration:(double)arg0;
- (BOOL)mergeForPublish;
- (void)setMergeForPublish:(BOOL)arg0;
- (void)cancelForAcceptRemoteVid;
- (id)initWithModel:(id)arg0 editService:(id)arg1 videoTask:(id)arg2;
- (void)setVideoTask:(id)arg0;
- (void)setOriginPublishViewModel:(id)arg0;
- (id)videoTask;
- (void)setEnforceReencode:(BOOL)arg0;
- (void)setEnforceReenmux:(BOOL)arg0;
- (void)cancelRestartEditing;
- (void)releaseMergePublishViewModelIfNeeded;
- (void)enqueueEditServiceIfNeeded;
- (BOOL)enableExtraMetaInfoBugfixRollback;
- (void)updatePublishModelIfNeeded;
- (void)checkCompileSessionAndRun;
- (void)prepareEditServiceWithCompletion:(id /* block */)arg0;
- (BOOL)isNotFromEditPageOfEditService;
- (BOOL)canUseSequenceEditService;
- (id)originPublishViewModel;
- (void)setMergePublishViewModel:(id)arg0;
- (long long)stageScene;
- (void)setOriginVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setOriginTargetVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)enforceReenmux;
- (BOOL)enforceReencode;
- (void)p_transCode:(id)arg0 transParam:(id)arg1 config:(id)arg2 videoProcess:(id)arg3;
- (void)renderVideoInfoIfNeededWithVideoData:(id)arg0 completion:(id /* block */)arg1;
- (void)p_saveDraftWithCompletion:(id /* block */)arg0;
- (id)transcodeControl;
- (void)addProgressObserver;
- (void)setMergeCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)playerDidFinishVideoProcessingWithResult:(id)arg0;
- (BOOL)parallelEdit;
- (id)srcInfoProvider;
- (void)setSourceVideoInfoDict:(id)arg0;
- (void)setDstInfoProvider:(id)arg0;
- (id)dstInfoProvider;
- (void)p_playerDidFinishVideoProcessingWithResult:(id)arg0 timeInterval:(double)arg1 asset:(id)arg2 videoInfos:(id)arg3;
- (id)mergePublishViewModel;
- (id)sourceVideoInfoDict;
- (void)p_reportMergeErrorWithCode:(long long)arg0;
- (void)p_callbackWithStatus:(long long)arg0 userInfo:(id)arg1;
- (void)resetCanvasSizeIfNeededWithCompletion:(id /* block */)arg0;
- (void)restartEditing;
- (void)trackError:(id)arg0 action:(id)arg1 fileSize:(long long)arg2 encodeDuration:(double)arg3 transcodeParam:(id)arg4;
- (BOOL)needSaveToAlbumForIM;
- (void)setHasSendMessage:(BOOL)arg0;
- (BOOL)hasSendMessage;
- (BOOL)canHandleNotification;
- (void)setRestartBlock:(id /* block */)arg0;
- (id /* block */)restartBlock;
- (BOOL)useSequenceEditService;
- (struct CGSize { double x0; double x1; })originVideoSize;
- (struct CGSize { double x0; double x1; })originTargetVideoSize;
- (struct CGSize { double x0; double x1; })mergeCanvasSize;
- (void)setIsNotFromEditPageOfEditService:(BOOL)arg0;
- (void)setStageScene:(long long)arg0;
- (void)setSrcInfoProvider:(id)arg0;
- (void)setTranscodeControl:(id)arg0;
- (void)run;
- (long long)taskType;
- (void)addNotificationObservers;
- (void).cxx_destruct;
- (void)setRetryCount:(long long)arg0;
- (long long)retryCount;
- (void)setRequest:(id)arg0;
- (id)resultInfo;
- (unsigned long long)flowType;
- (id)request;
- (void)cancel;
- (BOOL)canceling;
- (void)setCanceling:(BOOL)arg0;
- (void)setResultInfo:(id)arg0;
- (void)dealloc;
- (void)setTaskType:(long long)arg0;
- (void)setFlowType:(unsigned long long)arg0;
- (double)minDuration;

@end
