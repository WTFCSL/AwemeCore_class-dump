//
//     Generated by private class-dump
//

@class AWEAdLiveLandingNavigationBar, NSDictionary, NSString, UIView;
@protocol AWELiveFloatOnTopManagerProtocol;

@interface AWEAdLiveLandingWebViewController : AWEAdWebViewController <AWEPageSheetPresentationPhaseTransitionDelegate, AWEPageSheetPresentationObserving, UIScrollViewDelegate, AWEPageSheetTransitionDelegate, AWEPageSheetScrollControlDelegate, AWELiveFloatOnTopInitialFrame, AWELiveCommercialFloatViewTag> {
    NSString *_gameDetailUrl;
    BOOL _isFullScreen;
    BOOL _statusBarDimmed;
    BOOL _lockVerticalContentOffset;
    AWEAdLiveLandingNavigationBar *_navigationBar;
    id<AWELiveFloatOnTopManagerProtocol> _floatingLiveView;
    UIView *_statusBarWhiteBackGround;
    NSDictionary *_gameTrackerInfo;
    struct CGPoint { double x; double y; } _scrollViewBeginDragOffset;
}

@property (retain, nonatomic) AWEAdLiveLandingNavigationBar *navigationBar;
@property (retain, nonatomic) id<AWELiveFloatOnTopManagerProtocol> floatingLiveView;
@property (retain, nonatomic) UIView *statusBarWhiteBackGround;
@property (nonatomic) BOOL statusBarDimmed;
@property (nonatomic) BOOL lockVerticalContentOffset;
@property (nonatomic) struct CGPoint { double x; double y; } scrollViewBeginDragOffset;
@property (copy, nonatomic) NSDictionary *gameTrackerInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)aweui_emptyPageConfigForState:(unsigned long long)arg0;
- (id)aweui_emptyPageBelowView;
- (long long)initialPhaseForPageSheetPresentation:(id)arg0;
- (void)pageSheetPresentationWillBegin:(id)arg0;
- (void)pageSheetPresentationDidEnd:(id)arg0 completed:(BOOL)arg1;
- (void)pageSheetDismissalDidEnd:(id)arg0 completed:(BOOL)arg1;
- (BOOL)isHorizonAppearing;
- (unsigned long long)phaseTransitionStyleForPageSheetPresentation:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pageSheetPresentation:(id)arg0 frameOfPresentedViewForPhase:(long long)arg1;
- (void)pageSheetPresentation:(id)arg0 willTransitionToPhase:(long long)arg1;
- (void)pageSheetPresentation:(id)arg0 animationDuringTransitionToPhase:(long long)arg1;
- (void)pageSheetPresentation:(id)arg0 didTransitionToPhase:(long long)arg1;
- (BOOL)canScrollToFullScreen;
- (id)animationControllerForPresentedController;
- (id)animationControllerForDismissedController;
- (BOOL)lockVerticalContentOffset;
- (void)setLockVerticalContentOffset:(BOOL)arg0;
- (void)updateLandingPageContent:(id)arg0;
- (void)foldButtonAction:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })liveFloatOnTopInitialFrameForMediaSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isCommercialFloatView;
- (void)animateInTopBanner;
- (void)animateOutTopBanner;
- (void)updateTopBannerPositionWithOffset:(double)arg0;
- (void)makeAwemeIfNeeded;
- (void)registGameHandler;
- (void)gameDetailButtonAction:(id)arg0;
- (void)trackGameDetailButtonWithClick:(BOOL)arg0;
- (void)updateConstraintsInHorizon;
- (id)pageSheetPresentationController;
- (id)floatingLiveView;
- (void)animateFloatingLiveView:(BOOL)arg0;
- (id)gameTrackerInfo;
- (void)setStatusBarDimmed:(BOOL)arg0;
- (void)animateFoldButtonWithPhase:(long long)arg0;
- (void)updateContentInsetsWithPresentationController:(id)arg0 phase:(long long)arg1;
- (void)setFloatingLiveView:(id)arg0;
- (void)setStatusBarWhiteBackGround:(id)arg0;
- (id)statusBarWhiteBackGround;
- (void)setScrollViewBeginDragOffset:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })scrollViewBeginDragOffset;
- (BOOL)statusBarDimmed;
- (void)setGameTrackerInfo:(id)arg0;
- (void).cxx_destruct;
- (id)initWithNibName:(id)arg0 bundle:(id)arg1;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)scrollViewDidScroll:(id)arg0;
- (id)navigationBar;
- (void)setNavigationBar:(id)arg0;
- (void)viewWillAppear:(BOOL)arg0;
- (void)scrollViewWillBeginDragging:(id)arg0;
- (void)viewDidLoad;
- (void)webView:(id)arg0 didFailLoadWithError:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg0;

@end
