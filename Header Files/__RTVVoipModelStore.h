//
//     Generated by private class-dump
//

@class NSString, RxScheduler, RTVVoipModel, RTVVoipWebService, RTVVoipMonitor, __RTVVoIPPatchTask;
@protocol RTVXRSettingsInterface, RxInjector, RTVEventObserver;

@interface __RTVVoipModelStore : NSObject <RTVVoipModelStoreInterface> {
    struct RecursiveMutex { int _type; union { struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _plain; struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _recursive; } ; } _lock;
    RTVVoipModel *_voip;
    id<RTVEventObserver> _observer;
    id<RxInjector> _injector;
    RTVVoipMonitor *_voipMonitor;
    RTVVoipWebService *_webService;
    id<RTVXRSettingsInterface> _xrSettings;
    RxScheduler *_scheduler;
    __RTVVoIPPatchTask *_lastPatchTask;
}

@property (retain, nonatomic) RTVVoipModel *voip;
@property (retain, nonatomic) id<RTVEventObserver> observer;
@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, nonatomic) RTVVoipMonitor *voipMonitor;
@property (readonly, nonatomic) RTVVoipWebService *webService;
@property (readonly, nonatomic) id<RTVXRSettingsInterface> xrSettings;
@property (readonly, nonatomic) RxScheduler *scheduler;
@property (retain, nonatomic) __RTVVoIPPatchTask *lastPatchTask;
@property (readonly, nonatomic) RTVVoipModel *currentVoip;
@property (readonly, nonatomic) long long voipType;
@property (readonly, nonatomic) long long callType;
@property (readonly, copy, nonatomic) NSString *fromUserIMID;
@property (readonly, nonatomic) long long statusCode;
@property (readonly, nonatomic) long long sessionStatus;
@property (readonly, copy, nonatomic) NSString *callID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (unsigned long long)enterFrom;
- (void)rxAwakeFromPropertyInjection;
- (id)voipMonitor;
- (long long)voipType;
- (id)xrSettings;
- (id)fromUserIMID;
- (id)selfIMID;
- (BOOL)updateWithCallInfo:(id)arg0;
- (void)updateWithVoip:(id)arg0;
- (void)clearVoip;
- (BOOL)isCallingOrRinging;
- (BOOL)isRinging;
- (BOOL)isOnTheCall;
- (BOOL)isHangup;
- (BOOL)isSelfCameraOff;
- (id)currentParticipantor;
- (id)getSessionTimeText;
- (BOOL)isActiveVoIP:(id)arg0;
- (id)mergeWithVoip:(id)arg0 mergeStrategy:(long long)arg1;
- (id)updateStatusCode:(long long)arg0 sessionStatus:(long long)arg1 needPatch:(BOOL)arg2;
- (id)updateVoip:(id)arg0 statusCode:(long long)arg1 sessionStatus:(long long)arg2 needPatch:(BOOL)arg3;
- (id)patchVoip:(id)arg0;
- (id)currentVoip;
- (void)__clearLastPatchTask;
- (BOOL)__isEnableUpdateModel:(id)arg0 statusCode:(long long)arg1 sessionStatus:(long long)arg2;
- (id)__updateLastPatchTask:(id)arg0;
- (id)__patchTask:(id)arg0;
- (void)setLastPatchTask:(id)arg0;
- (id)lastPatchTask;
- (id)__lastPatchTask;
- (id)__lastPatchTaskResume;
- (long long)statusCode;
- (id)observer;
- (void).cxx_destruct;
- (id)scheduler;
- (id)injector;
- (void)setObserver:(id)arg0;
- (BOOL)isActive;
- (void)dealloc;
- (long long)sessionStatus;
- (id).cxx_construct;
- (BOOL)isVideo;
- (id)callID;
- (long long)callType;
- (id)webService;
- (BOOL)isAudio;
- (BOOL)hasAccepted;
- (BOOL)isCaller;
- (id)voip;
- (void)setVoip:(id)arg0;

@end
