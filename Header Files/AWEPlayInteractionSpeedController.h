//
//     Generated by private class-dump
//

@class NSString, NSTimer, UIView, UILongPressGestureRecognizer;
@protocol AFDFastSpeedViewProtocol;

@interface AWEPlayInteractionSpeedController : AWEPlayInteractionBaseController <AWEPlayInteractionPlayerLifeCycleProtocol, UIGestureRecognizerDelegate> {
    BOOL _ifSlideHorizontally;
    BOOL _disableFastSpeed;
    BOOL _longPressTimeExceeded;
    BOOL _isInMockPureMode;
    BOOL _shouldUpdateSpeedAfterFastSpeedEnd;
    BOOL _isAppearing;
    BOOL _alreadyTriggerSpeed;
    UILongPressGestureRecognizer *_longPressFastSpeedGesture;
    UIView<AFDFastSpeedViewProtocol> *_longPressFastSpeedView;
    double _speedBeforeLongPress;
    NSString *_enterMethodBeforeLongPress;
    NSTimer *_timer;
    unsigned long long _enterMockViewMethod;
    unsigned long long _speedVerticalType;
    double _fastSpeedStartTimestamp;
    double _firstTriggerSpeedTimestamp;
    double _firstTriggerProgressTimestamp;
    struct CGPoint { double x; double y; } _tappedPointWhenLongPressStart;
    struct CGPoint { double x; double y; } _tappedPointWhenLongPressEnd;
    struct CGPoint { double x; double y; } _tappedPoint;
}

@property (nonatomic) BOOL ifSlideHorizontally;
@property (retain, nonatomic) UILongPressGestureRecognizer *longPressFastSpeedGesture;
@property (retain, nonatomic) UIView<AFDFastSpeedViewProtocol> *longPressFastSpeedView;
@property (nonatomic) double speedBeforeLongPress;
@property (copy, nonatomic) NSString *enterMethodBeforeLongPress;
@property (nonatomic) struct CGPoint { double x; double y; } tappedPointWhenLongPressStart;
@property (nonatomic) struct CGPoint { double x; double y; } tappedPointWhenLongPressEnd;
@property (nonatomic) BOOL disableFastSpeed;
@property (nonatomic) struct CGPoint { double x; double y; } tappedPoint;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) BOOL longPressTimeExceeded;
@property (nonatomic) BOOL isInMockPureMode;
@property (nonatomic) unsigned long long enterMockViewMethod;
@property (nonatomic) BOOL shouldUpdateSpeedAfterFastSpeedEnd;
@property (nonatomic) BOOL isAppearing;
@property (nonatomic) unsigned long long speedVerticalType;
@property (nonatomic) BOOL alreadyTriggerSpeed;
@property (nonatomic) double fastSpeedStartTimestamp;
@property (nonatomic) double firstTriggerSpeedTimestamp;
@property (nonatomic) double firstTriggerProgressTimestamp;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)aAWEPadModuleAdapterClass;

- (id)playVideoViewController;
- (void)onPlayerPlay:(id)arg0 ifPlay:(BOOL)arg1;
- (id)aAWEPadModuleAdapter;
- (BOOL)isSlidingVertically;
- (void)setContainerHidden:(BOOL)arg0;
- (void)rotated:(id)arg0;
- (double)longPressFastSpeedValue;
- (id)contentTypeWithModel:(id)arg0;
- (id)longPressFastSpeedGesture;
- (id)longPressFastSpeedView;
- (void)handleLongPressFastSpeedStart:(struct CGPoint { double x0; double x1; })arg0;
- (void)handleLongPressFastSpeedEnd:(struct CGPoint { double x0; double x1; })arg0;
- (void)setSpeedBeforeLongPress:(double)arg0;
- (void)setTappedPointWhenLongPressStart:(struct CGPoint { double x0; double x1; })arg0;
- (void)trackSpeedModePlayTimeWithLongPressStart:(BOOL)arg0;
- (double)speedBeforeLongPress;
- (void)setTappedPointWhenLongPressEnd:(struct CGPoint { double x0; double x1; })arg0;
- (void)trackLongPressChangeSpeedMode:(double)arg0 model:(id)arg1;
- (void)setEnterMethodBeforeLongPress:(id)arg0;
- (id)enterMethodBeforeLongPress;
- (struct CGPoint { double x0; double x1; })tappedPointWhenLongPressStart;
- (struct CGPoint { double x0; double x1; })tappedPointWhenLongPressEnd;
- (void)handleLongPressFastSpeed:(id)arg0;
- (void)setLongPressFastSpeedView:(id)arg0;
- (void)setLongPressFastSpeedGesture:(id)arg0;
- (void)changeSpeed:(double)arg0;
- (void)handleFeedRefreshCompletion:(id)arg0;
- (void)invalidTimer;
- (void)longPressSpeedControlDidChangeSpeed:(id)arg0;
- (BOOL)isVideoUnavailable;
- (void)handleHorizontalSlideNotification:(id)arg0;
- (void)handleLandScapeSpeedChangeNotification:(id)arg0;
- (void)setDisableFastSpeed:(BOOL)arg0;
- (void)setIsInMockPureMode:(BOOL)arg0;
- (void)setEnterMockViewMethod:(unsigned long long)arg0;
- (void)removeFastSpeed:(double)arg0;
- (struct CGPoint { double x0; double x1; })tappedPoint;
- (void)setUpEvent;
- (Class)fastSpeedHelper;
- (BOOL)longPressTimeExceeded;
- (void)addMockPureModePageWithMethod:(unsigned long long)arg0;
- (void)removeMockView:(BOOL)arg0;
- (BOOL)isInMixInnerPage;
- (void)setIfSlideHorizontally:(BOOL)arg0;
- (void)cancleFastForwardAnimationIfNeeded;
- (BOOL)shouldLongPressEnableFastSpeed;
- (BOOL)ifSlideHorizontally;
- (BOOL)isInWatchLaterInnerPage;
- (void)setTappedPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)handleEnterPureMode:(id)arg0;
- (void)handleFastSpeed:(id)arg0;
- (BOOL)disableFastSpeed;
- (BOOL)isInMockPureMode;
- (unsigned long long)enterMockViewMethod;
- (void)removeMockViewAndEnterPureMode:(unsigned long long)arg0;
- (void)updateSpeedBeforePushPureMode:(unsigned long long)arg0;
- (void)pushIntoPureModeByMethod:(unsigned long long)arg0;
- (void)setShouldUpdateSpeedAfterFastSpeedEnd:(BOOL)arg0;
- (void)setLongPressTimeExceeded:(BOOL)arg0;
- (BOOL)isBasicConditionReadyForSpeedOptimize;
- (void)setFastSpeedStartTimestamp:(double)arg0;
- (double)fastSpeedStartTimestamp;
- (void)triggerShowGuideViewIfNeeded;
- (void)handleLongPressFastSpeedOptimizeChanged:(struct CGPoint { double x0; double x1; })arg0 gesture:(id)arg1;
- (void)setFirstTriggerSpeedTimestamp:(double)arg0;
- (void)setFirstTriggerProgressTimestamp:(double)arg0;
- (void)setSpeedVerticalType:(unsigned long long)arg0;
- (void)setAlreadyTriggerSpeed:(BOOL)arg0;
- (void)setupTimerIfNeeded;
- (BOOL)shouldUpdateSpeedAfterFastSpeedEnd;
- (unsigned long long)speedVerticalType;
- (void)handleTriggerSpeedIssues;
- (BOOL)alreadyTriggerSpeed;
- (double)firstTriggerProgressTimestamp;
- (BOOL)enableSceneReadyForSpeedOptimize;
- (BOOL)isModelReadyForSpeedOptimize;
- (double)firstTriggerSpeedTimestamp;
- (id)timer;
- (void).cxx_destruct;
- (void)setIsAppearing:(BOOL)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (void)setData:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (BOOL)isAppearing;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setTimer:(id)arg0;
- (void)viewDidAppear;
- (void)dealloc;
- (void)reset;
- (void)viewDidLoad;
- (void)viewWillAppear;
- (void)willDisplay;
- (void)viewWillDisappear;

@end
