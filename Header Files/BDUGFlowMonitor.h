//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface BDUGFlowMonitor : NSObject <NSCoding> {
    BOOL _isColdLaunchFromShortCut;
    NSMutableDictionary *_sessionsMap;
    NSMutableDictionary *_sessionStash;
    NSObject<OS_dispatch_queue> *_workQueue;
    double _startTime;
}

@property (nonatomic) BOOL isColdLaunchFromShortCut;
@property (retain, nonatomic) NSMutableDictionary *sessionsMap;
@property (retain, nonatomic) NSMutableDictionary *sessionStash;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (nonatomic) double startTime;

+ (void)reportUserNormalAction;
+ (void)reportMonitorResultWithStayTime:(long long)arg0;
+ (id)sessionForURL:(id)arg0 needCreate:(BOOL)arg1 fuzzy:(BOOL)arg2;
+ (void)stashSession:(id)arg0 forScene:(id)arg1;
+ (id)unStashSession:(id)arg0;
+ (void)aliasSession:(id)arg0 aliasURLString:(id)arg1;
+ (BOOL)needCache;
+ (void)_reportOfflineSessionsIfNeeded:(id)arg0;
+ (id)createSessionForURL:(id)arg0;
+ (id)getSessionForURL:(id)arg0;
+ (id)getFuzzySessionForURL:(id)arg0;
+ (void)reportOfflineSessionsIfNeeded;
+ (void)saveToDiskIfNeeded:(id)arg0;
+ (void)clean:(id)arg0;
+ (id)sharedInstance;
+ (BOOL)enabled;
+ (double)timeout;

- (id)sessionsMap;
- (id)sessionForURL:(id)arg0 needCreate:(BOOL)arg1 fuzzy:(BOOL)arg2;
- (void)stashSession:(id)arg0 forScene:(id)arg1;
- (id)unStashSession:(id)arg0;
- (void)aliasSession:(id)arg0 aliasURLString:(id)arg1;
- (id)sessionStash;
- (id)sessionIDForURL:(id)arg0;
- (void)startTimerForSession:(id)arg0;
- (void)timeoutForSession:(id)arg0;
- (void)setSessionsMap:(id)arg0;
- (BOOL)isColdLaunchFromShortCut;
- (void)setIsColdLaunchFromShortCut:(BOOL)arg0;
- (void)setSessionStash:(id)arg0;
- (void)recordMonitorResultWhenAppStart:(id)arg0;
- (id)init;
- (void)setWorkQueue:(id)arg0;
- (void)setStartTime:(double)arg0;
- (id)workQueue;
- (void).cxx_destruct;
- (double)startTime;
- (id)initWithCoder:(id)arg0;
- (void)encodeWithCoder:(id)arg0;
- (void)appWillResignActive;

@end
