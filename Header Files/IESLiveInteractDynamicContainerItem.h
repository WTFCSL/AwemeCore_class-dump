//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, NSDictionary, UIView;
@protocol IESLiveInteractComponentRoomContext, IESLiveInteractComponentContext, IESLiveInteractDynamicContainerContext, IESLiveInteractDynamicContainerViewHolder;

@interface IESLiveInteractDynamicContainerItem : NSObject <IESLiveInteractDynamicContainerHandler> {
    NSString *_url;
    NSString *_schema;
    NSString *_bizID;
    NSString *_source;
    NSDictionary *_sourceParams;
    NSDictionary *_state;
    UIView *_superView;
    id<IESLiveInteractComponentContext> _context;
    id<IESLiveInteractComponentRoomContext> _roomContext;
    id<IESLiveInteractDynamicContainerContext> _containerContext;
    id<IESLiveInteractDynamicContainerViewHolder> _viewHolder;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_injectedViews;
    NSMutableDictionary *_injectedEvents;
}

@property (retain, nonatomic) NSMutableDictionary *cache;
@property (retain, nonatomic) NSMutableDictionary *injectedViews;
@property (retain, nonatomic) NSMutableDictionary *injectedEvents;
@property (copy, nonatomic) NSString *url;
@property (copy, nonatomic) NSString *schema;
@property (copy, nonatomic) NSString *bizID;
@property (copy, nonatomic) NSString *source;
@property (copy, nonatomic) NSDictionary *sourceParams;
@property (copy, nonatomic) NSDictionary *state;
@property (weak, nonatomic) UIView *superView;
@property (weak, nonatomic) id<IESLiveInteractComponentContext> context;
@property (weak, nonatomic) id<IESLiveInteractComponentRoomContext> roomContext;
@property (weak, nonatomic) id<IESLiveInteractDynamicContainerContext> containerContext;
@property (retain, nonatomic) id<IESLiveInteractDynamicContainerViewHolder> viewHolder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)viewHolder;
- (void)setViewHolder:(id)arg0;
- (void)didSetAttachingDIContext;
- (id)superView;
- (void)setSuperView:(id)arg0;
- (void)removeContainer;
- (void)setBizID:(id)arg0;
- (id)sourceParams;
- (void)setRoomContext:(id)arg0;
- (void)setSourceParams:(id)arg0;
- (id)readCacheDataForKey:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })parseFrame:(id)arg0;
- (BOOL)asyncHandleUpdateJSBParams:(id)arg0 type:(id)arg1 container:(id)arg2 completion:(id /* block */)arg3;
- (void)loadConrainer;
- (void)setInjectedViews:(id)arg0;
- (void)setInjectedEvents:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })invisibleContainerFrame;
- (id)injectedViews;
- (void)handleLayerElementJSBParams:(id)arg0;
- (void)writeCacheData:(id)arg0 forKey:(id)arg1;
- (void)handleAnimation:(id)arg0 extra:(id)arg1;
- (void)handleUpdateTrackerParams:(id)arg0;
- (void)insertLayerElement:(id)arg0 extra:(id)arg1;
- (void)removeLayerElement:(id)arg0 extra:(id)arg1;
- (id)containerViewForLayer:(id)arg0;
- (void)showWebpAnimation:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 inView:(id)arg2;
- (id)injectedEvents;
- (void)setSchema:(id)arg0;
- (void)setCache:(id)arg0;
- (id)cache;
- (id)source;
- (void).cxx_destruct;
- (id)state;
- (void)setContext:(id)arg0;
- (void)setState:(id)arg0;
- (void)setUrl:(id)arg0;
- (id)context;
- (void)setSource:(id)arg0;
- (void)dealloc;
- (id)schema;
- (id)url;
- (id)containerContext;
- (void)setContainerContext:(id)arg0;
- (id)bizID;
- (id)roomContext;

@end
