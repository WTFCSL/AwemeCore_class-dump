//
//     Generated by private class-dump
//

@class NSString, IESAVAssetReverse;
@protocol DVENLEInterfaceProtocol, DVECoreDraftServiceProtocol, DVELoadingViewProtocol, DVEComponentViewManagerProtocol, DVECoreAudioProtocol, IESServiceProvider, DVEEditingContextProtocol, DVEPlayerServiceProtocol, DVECoreActionServiceProtocol;

@interface DVEVideoEditor : NSObject <DVECoreVideoProtocol> {
    id<IESServiceProvider> _serviceProvider;
    IESAVAssetReverse *_reverseSession;
    id<DVECoreDraftServiceProtocol> _draftService;
    id<DVECoreActionServiceProtocol> _actionService;
    id<DVENLEInterfaceProtocol> _nle;
    id<DVEComponentViewManagerProtocol> _bottomComponentManager;
    id<DVELoadingViewProtocol> _loadingView;
    id<DVEEditingContextProtocol> _mediaContext;
    id<DVEPlayerServiceProtocol> _playerService;
    id<DVECoreAudioProtocol> _audioEditor;
}

@property (class, readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } kDefaultPhotoResourceDuration;

@property (retain, nonatomic) IESAVAssetReverse *reverseSession;
@property (weak, nonatomic) id<DVECoreDraftServiceProtocol> draftService;
@property (weak, nonatomic) id<DVECoreActionServiceProtocol> actionService;
@property (weak, nonatomic) id<DVENLEInterfaceProtocol> nle;
@property (weak, nonatomic) id<DVEComponentViewManagerProtocol> bottomComponentManager;
@property (weak, nonatomic) id<DVELoadingViewProtocol> loadingView;
@property (weak, nonatomic) id<DVEEditingContextProtocol> mediaContext;
@property (weak, nonatomic) id<DVEPlayerServiceProtocol> playerService;
@property (weak, nonatomic) id<DVECoreAudioProtocol> audioEditor;
@property (weak, nonatomic) id<IESServiceProvider> serviceProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (struct { long long x0; int x1; unsigned int x2; long long x3; })kDefaultPhotoResourceDuration;

- (id)actionService;
- (id)audioEditor;
- (void)setAudioEditor:(id)arg0;
- (id)videoSplitForSlot:(id)arg0 isMain:(BOOL)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)deleteVideoClip:(id)arg0 isMain:(BOOL)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)changeVideoSpeed:(double)arg0 slot:(id)arg1 isMain:(BOOL)arg2 shouldKeepTone:(BOOL)arg3 autoCommit:(BOOL)arg4 completion:(id /* block */)arg5;
- (void)changeVideoRotate:(id)arg0 autoCommit:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)changeVideoRotation:(id)arg0 rotation:(id)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)changeVideoVolume:(double)arg0 slot:(id)arg1 isMain:(BOOL)arg2 autoCommit:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)handleVideoReverse:(id)arg0 isMain:(BOOL)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)muteMainTrackVolume:(BOOL)arg0 autoCommit:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)moveMainVideoSlot:(id)arg0 fromIndex:(long long)arg1 toIndex:(long long)arg2 autoCommit:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)trimVideo:(id)arg0 startTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)trimVideo:(id)arg0 duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)moveAttachSlot:(id)arg0 insertSection:(long long)arg1 targetStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2 autoCommit:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)moveAttachSlot:(id)arg0 insertSection:(long long)arg1 targetTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg2 isNewInsert:(BOOL)arg3 autoCommit:(BOOL)arg4 completion:(id /* block */)arg5;
- (id)mediaContext;
- (id)playerService;
- (void)setPlayerService:(id)arg0;
- (void)setMediaContext:(id)arg0;
- (void)setActionService:(id)arg0;
- (id)nle;
- (void)setNle:(id)arg0;
- (id)draftService;
- (void)setDraftService:(id)arg0;
- (id)splitVideoSlot:(id)arg0 splitTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)p_deleteSlotOnMainTrack:(id)arg0;
- (void)p_updateRotationScale:(id)arg0;
- (void)changeSlot:(id)arg0 volume:(double)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)updateVideo:(id)arg0 speed:(double)arg1 shouldKeepTone:(BOOL)arg2 autoCommit:(BOOL)arg3 completion:(id /* block */)arg4;
- (void)reverseSlot:(id)arg0 withAsset:(id)arg1 forMainTrack:(BOOL)arg2 isReallyReverse:(BOOL)arg3 autoCommit:(BOOL)arg4 completion:(id /* block */)arg5;
- (id)bottomComponentManager;
- (id)reverseSession;
- (void)reverseAsset:(id)arg0 processBlock:(id /* block */)arg1 complete:(id /* block */)arg2;
- (void)setReverseSession:(id)arg0;
- (void)updateVideo:(id)arg0 curveSpeedPoint:(id)arg1 autoCommit:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)changeAudioVolumeForSlot:(id)arg0 volume:(double)arg1;
- (void)changeMainTrackSlot:(id)arg0 volume:(double)arg1;
- (void)setBottomComponentManager:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void).cxx_destruct;
- (void)setServiceProvider:(id)arg0;
- (id)serviceProvider;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;

@end
