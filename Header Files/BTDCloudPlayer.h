//
//     Generated by private class-dump
//

@class XPlaySink, NSString, TTAirPlayMotionManager, BTDLoadTimeoutMonitor, ByteRTCRemoteStreamKey, TTAirPlayMessageSender, TTAirPlayAudioPuller, ByteRTCVideo, ByteRTCRoom;
@protocol BTDCloudPlayerDelegate, BTDCloudPlayerAudioFrameDelegate, BTDCloudPlayerVideoSinkDelegate, ByteRTCStream;

@interface BTDCloudPlayer : NSObject <ByteRTCVideoDelegate, ByteRTCRoomDelegate, BTDLoadTimeoutObserver, ByteRTCVideoSinkDelegate, BTDAudioPullerDelegate> {
    BOOL _showDebugInfo;
    BOOL _isMicrophoneRecording;
    BOOL _useRTCMulti;
    BOOL _callbackPixelBuffer;
    BOOL _callbackAudioFrame;
    BOOL _muteAudioPlayback;
    NSString *_userId;
    NSString *_podId;
    NSString *_podUserId;
    NSString *_deviceId;
    NSString *_gameId;
    NSString *_roomId;
    long long _expireTime;
    long long _engineState;
    id<BTDCloudPlayerDelegate> _delegate;
    id<BTDCloudPlayerVideoSinkDelegate> _videoSinkDelegate;
    id<BTDCloudPlayerAudioFrameDelegate> _audioFrameDelegate;
    id<ByteRTCStream> _stream;
    long long _currentVideoIndex;
    unsigned long long _renderMode;
    ByteRTCVideo *_RTCVideo;
    ByteRTCRoom *_RTCRoom;
    NSString *_token;
    TTAirPlayMotionManager *_motionManager;
    ByteRTCRemoteStreamKey *_streamKey;
    BTDLoadTimeoutMonitor *_timeoutMonitor;
    XPlaySink *_xplaySink;
    TTAirPlayMessageSender *_messageSender;
    TTAirPlayAudioPuller *_audioPuller;
}

@property (retain, nonatomic) ByteRTCVideo *RTCVideo;
@property (retain, nonatomic) ByteRTCRoom *RTCRoom;
@property (copy, nonatomic) NSString *userId;
@property (copy, nonatomic) NSString *podId;
@property (copy, nonatomic) NSString *podUserId;
@property (copy, nonatomic) NSString *deviceId;
@property (copy, nonatomic) NSString *gameId;
@property (copy, nonatomic) NSString *token;
@property (copy, nonatomic) NSString *roomId;
@property (nonatomic) long long expireTime;
@property (retain, nonatomic) TTAirPlayMotionManager *motionManager;
@property long long engineState;
@property (retain, nonatomic) id<ByteRTCStream> stream;
@property (retain, nonatomic) ByteRTCRemoteStreamKey *streamKey;
@property (nonatomic) long long currentVideoIndex;
@property (retain, nonatomic) BTDLoadTimeoutMonitor *timeoutMonitor;
@property (nonatomic) BOOL isMicrophoneRecording;
@property (nonatomic) BOOL useRTCMulti;
@property (nonatomic) BOOL callbackPixelBuffer;
@property (nonatomic) BOOL callbackAudioFrame;
@property (nonatomic) BOOL muteAudioPlayback;
@property (retain, nonatomic) XPlaySink *xplaySink;
@property (retain, nonatomic) TTAirPlayMessageSender *messageSender;
@property (retain, nonatomic) TTAirPlayAudioPuller *audioPuller;
@property (weak, nonatomic) id<BTDCloudPlayerDelegate> delegate;
@property (weak, nonatomic) id<BTDCloudPlayerVideoSinkDelegate> videoSinkDelegate;
@property (weak, nonatomic) id<BTDCloudPlayerAudioFrameDelegate> audioFrameDelegate;
@property (nonatomic) unsigned long long renderMode;
@property (nonatomic) BOOL showDebugInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)rtcEngine:(id)arg0 onError:(long long)arg1;
- (void)rtcEngine:(id)arg0 onRemoteVideoSizeChanged:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstRemoteVideoFrameDecoded:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onSEIMessageReceived:(id)arg1 andMessage:(id)arg2;
- (void)rtcEngine:(id)arg0 onNetworkDetectionResult:(unsigned long long)arg1 quality:(unsigned long long)arg2 rtt:(int)arg3 lostRate:(double)arg4 bitrate:(int)arg5 jitter:(int)arg6;
- (void)rtcEngine:(id)arg0 onNetworkDetectionStopped:(unsigned long long)arg1;
- (void)rtcEngine:(id)arg0 onRemoteVideoStateChanged:(id)arg1 withVideoState:(long long)arg2 withVideoStateReason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onRoomStateChanged:(id)arg1 withUid:(id)arg2 state:(long long)arg3 extraInfo:(id)arg4;
- (void)rtcRoom:(id)arg0 onLeaveRoom:(id)arg1;
- (void)rtcRoom:(id)arg0 onUserJoined:(id)arg1 elapsed:(long long)arg2;
- (void)rtcRoom:(id)arg0 onUserLeave:(id)arg1 reason:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onStreamAdd:(id)arg1;
- (void)rtcRoom:(id)arg0 onStreamRemove:(id)arg1 stream:(id)arg2 reason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onUserPublishStream:(id)arg1 type:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onUserMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserBinaryMessageReceived:(id)arg1 message:(id)arg2;
- (id)roomId;
- (void)setRoomId:(id)arg0;
- (void)renderPixelBuffer:(struct __CVBuffer { } *)arg0 rotation:(long long)arg1 contentType:(long long)arg2 extendedData:(id)arg3;
- (void)setAudioMute:(BOOL)arg0;
- (long long)startNetworkDetection;
- (void)setShowDebugInfo:(BOOL)arg0;
- (void)setEngineState:(long long)arg0;
- (void)setUseRTCMulti:(BOOL)arg0;
- (void)setCallbackPixelBuffer:(BOOL)arg0;
- (void)setCallbackAudioFrame:(BOOL)arg0;
- (void)initRTCEngine:(id)arg0;
- (id)RTCRoom;
- (id)timeoutMonitor;
- (id)xplaySink;
- (void)setXplaySink:(id)arg0;
- (void)setTimeoutMonitor:(id)arg0;
- (id)audioPuller;
- (void)destroyRTCEngine;
- (void)subscirbeStream:(id)arg0 videoIndex:(long long)arg1;
- (id)RTCVideo;
- (BOOL)callbackPixelBuffer;
- (void)setupRTCInternalRenderView:(id)arg0;
- (void)setupRTCExternalRenderView:(id)arg0 processorType:(id)arg1;
- (void)setIsMicrophoneRecording:(BOOL)arg0;
- (BOOL)useRTCMulti;
- (void)setRTCVideo:(id)arg0;
- (void)setRTCRoom:(id)arg0;
- (BOOL)isMicrophoneRecording;
- (id)audioFrameDelegate;
- (id)videoSinkDelegate;
- (BOOL)callbackAudioFrame;
- (void)setAudioPuller:(id)arg0;
- (long long)getXPlayRTCRemoteVideoState:(long long)arg0;
- (long long)getXPlayRTCRemoteVideoStateChangeReason:(long long)arg0;
- (BOOL)handleRTCRotation;
- (void)onAudioFramePulled:(id)arg0;
- (void)switchStreamVideoIndex:(long long)arg0;
- (long long)currentVideoIndex;
- (void)setCurrentVideoIndex:(long long)arg0;
- (BOOL)showDebugInfo;
- (void)setPodId:(id)arg0;
- (void)setPodUserId:(id)arg0;
- (id)podId;
- (id)podUserId;
- (BOOL)muteAudioPlayback;
- (id)gameId;
- (void)setGameId:(id)arg0;
- (void)setMuteAudioPlayback:(BOOL)arg0;
- (void)setVideoSinkDelegate:(id)arg0;
- (void)setAudioFrameDelegate:(id)arg0;
- (void)stopVideoStreamAndQuitRoomFrom:(id)arg0;
- (void)stopNetworkDetection;
- (void)startLocalAudioCapture;
- (void)stopLocalAudioCapture;
- (void)timeoutDidOccur;
- (void)setSlardarTrackEventCallBack:(id /* block */)arg0;
- (void)registCloudPlayer:(id)arg0 deviceId:(id)arg1 gameId:(id)arg2;
- (void)sendMessage:(id)arg0 callback:(id /* block */)arg1;
- (void)handleAudioCapture:(id)arg0;
- (void)forceOffline:(id)arg0;
- (void)forceOfflineBinary:(id)arg0;
- (void)controlLocalAudioCapture:(id)arg0;
- (void)setETTrackEventCallBack:(id /* block */)arg0;
- (void)setupRenderView:(id)arg0;
- (void)setStream:(id)arg0;
- (id)stream;
- (id)init;
- (void)_applicationWillTerminate;
- (void)resume;
- (id)messageSender;
- (void).cxx_destruct;
- (id)deviceId;
- (void)setMessageSender:(id)arg0;
- (unsigned long long)renderMode;
- (void)stop;
- (void)setToken:(id)arg0;
- (id)userId;
- (id)token;
- (id)delegate;
- (void)setRenderMode:(unsigned long long)arg0;
- (void)setDeviceId:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)setUserId:(id)arg0;
- (long long)expireTime;
- (void)setExpireTime:(long long)arg0;
- (void)_applicationWillResignActive;
- (void)_applicationDidBecomeActive;
- (id)motionManager;
- (id)prepare:(id)arg0;
- (id)streamKey;
- (void)setStreamKey:(id)arg0;
- (void)setMotionManager:(id)arg0;
- (long long)engineState;

@end
