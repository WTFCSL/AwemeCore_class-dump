//
//     Generated by private class-dump
//

@class UIWindow, UISwipeGestureRecognizer, NSString, NSObject, NSMutableArray;
@protocol OS_dispatch_queue, HMDUIFrozenGestureDetectProtocol;

@interface HMDUIFrozenGestureRecognizerMonitor : NSObject <UIGestureRecognizerDelegate> {
    BOOL _isUnresponsive;
    BOOL _isRecording;
    id<HMDUIFrozenGestureDetectProtocol> _delegate;
    UIWindow *_targetWindow;
    NSMutableArray *_gestures;
    NSObject<OS_dispatch_queue> *_storeQueue;
    NSObject<OS_dispatch_queue> *_consumeQueue;
    UISwipeGestureRecognizer *_up;
    UISwipeGestureRecognizer *_down;
    UISwipeGestureRecognizer *_left;
    UISwipeGestureRecognizer *_right;
}

@property (retain, nonatomic) UIWindow *targetWindow;
@property (retain, nonatomic) NSMutableArray *gestures;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *storeQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *consumeQueue;
@property (retain, nonatomic) UISwipeGestureRecognizer *up;
@property (retain, nonatomic) UISwipeGestureRecognizer *down;
@property (retain, nonatomic) UISwipeGestureRecognizer *left;
@property (retain, nonatomic) UISwipeGestureRecognizer *right;
@property (nonatomic) BOOL isUnresponsive;
@property (nonatomic) BOOL isRecording;
@property (weak, nonatomic) id<HMDUIFrozenGestureDetectProtocol> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)shared;

- (void)stopRecord;
- (void)startRecord;
- (void)consumeStoreGestureRecordWithBlock:(id /* block */)arg0;
- (void)handSwipeUP:(id)arg0;
- (void)handSwipeDown:(id)arg0;
- (void)handSwipeLeft:(id)arg0;
- (void)handSwipeRight:(id)arg0;
- (void)removeUIFrozenGestureRecognizers;
- (void)asyncStoreGestureRecord:(id)arg0;
- (void)uploadGestureUnresponsiveExceptionWithViewHierarchy:(id)arg0;
- (void)addUIFrozenGestureRecognizersForWindow:(id)arg0;
- (void)addUIFrozenGestureRecognizersForKeyWindow;
- (id)snapShotOfView:(id)arg0;
- (void)setIsUnresponsive:(BOOL)arg0;
- (id)consumeQueue;
- (void)setConsumeQueue:(id)arg0;
- (id)left;
- (id)right;
- (id)init;
- (BOOL)isRecording;
- (void).cxx_destruct;
- (BOOL)gestureRecognizer:(id)arg0 shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (void)setIsRecording:(BOOL)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (id)gestures;
- (id)up;
- (BOOL)isUnresponsive;
- (id)delegate;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setUp:(id)arg0;
- (void)setStoreQueue:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)setGestures:(id)arg0;
- (id)storeQueue;
- (id)targetWindow;
- (void)setLeft:(id)arg0;
- (id)down;
- (void)setRight:(id)arg0;
- (void)resetRecord;
- (void)setDown:(id)arg0;
- (void)setTargetWindow:(id)arg0;

@end
