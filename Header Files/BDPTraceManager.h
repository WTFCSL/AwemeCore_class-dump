//
//     Generated by private class-dump
//

@class BDPTraceInfo, NSObject;
@protocol OS_dispatch_queue;

@interface BDPTraceManager : NSObject {
    BOOL _isTracing;
    NSObject<OS_dispatch_queue> *_taskQueue;
    BDPTraceInfo *_traceInfo;
}

@property BOOL isTracing;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;
@property (retain, nonatomic) BDPTraceInfo *traceInfo;

+ (id)sharedInstance;

- (void)executeBlkInTaskQueue:(id /* block */)arg0;
- (id)traceInfo;
- (void)setTraceInfo:(id)arg0;
- (BOOL)isTracing;
- (void)addPointWithName:(id)arg0 uniqueID:(id)arg1 extra:(id)arg2 date:(id)arg3;
- (void)addPointWithName:(id)arg0 uniqueID:(id)arg1 extra:(id)arg2;
- (void)startTraceWithUniqueID:(id)arg0;
- (void)addPoint:(id)arg0 uniqueID:(id)arg1;
- (void)addPoints:(id)arg0 uniqueID:(id)arg1;
- (void)stopTraceWithUniqueID:(id)arg0;
- (void)buildTraceManager;
- (void)setIsTracing:(BOOL)arg0;
- (id)getTraceUploadURL;
- (id)commonTimelineParamsWithUniqueId:(id)arg0 uniqueString:(id)arg1 points:(id)arg2;
- (void)uploadTraceDataWithCallback:(id /* block */)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (id)taskQueue;

@end
