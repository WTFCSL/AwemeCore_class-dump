//
//     Generated by private class-dump
//

@class HTSScreenRecorder, NSURL, IESLiveAdminScreenRecordApi, NSDictionary, IESLiveScreenRecordPublishView, IESLiveRoomMQEventReportApi, UIView, IESLiveScreenRecordAnchorGuideKey, NSString, HTSLiveNotifyMessage, IESLiveAdminRecordMessageQueue, NSTimer, IESLiveScreenRecordToolActionService, IESLiveRecordEntranceGuard, IESLiveScreenRecordStore, IESLiveScreenRecordTracker, UIImage;
@protocol IESLiveAudienceRoomAwareness, IESLiveScreenRecordActions, IESLiveScreenRecordViewProvider, IESLivePublishMediaService, IESLiveBubbleGuide, IESLiveControlModule, IESLiveUserService, IESLiveLoadingFactory;

@interface IESLiveScreenRecordFragment : IESLiveRoomComponent <IESLiveScreenRecordViewDelegate, IESLiveScreenRecorderProvider, HTSLiveAnchorActions, IESLiveLongPressActions, IESLiveSocialInteractAction, HTSLiveMessageSubscriber, HTSLiveAudienceActions, IESLiveScreenRecordReactions, HTSLiveHideComponentAction, IESLiveRecordeEntranceGuardDelegate, IESLiveAnchorRoomStatusChangeEvents> {
    BOOL _isInSharing;
    BOOL _isRecordInClearMode;
    BOOL _isComponentInHiding;
    BOOL _isRecordedVideoPublishing;
    BOOL _isAutoRecordMode;
    BOOL _hasShowAutoRecordAuthAlert;
    BOOL _hadReportRecordGet;
    BOOL _hasShowGuide;
    BOOL _isAppInBackground;
    BOOL _diSettingEnable;
    UIView<IESLiveScreenRecordViewProvider> *_recordToolView;
    HTSScreenRecorder *_screenRecorder;
    IESLiveScreenRecordToolActionService *_actionService;
    id<IESLiveScreenRecordActions> _actionCreator;
    id<IESLivePublishMediaService> _publishMediaService;
    id<IESLiveLoadingFactory> _loadingFactory;
    id<IESLiveAudienceRoomAwareness> _audienceAwareness;
    id<IESLiveControlModule> _longPressProvider;
    UIView<IESLiveBubbleGuide> *_publishRecordProgressTipView;
    double _recordStartTime;
    double _recordEndTime;
    IESLiveScreenRecordAnchorGuideKey *_guideKeys;
    NSString *_latestPublishProgressTip;
    IESLiveScreenRecordStore *_store;
    IESLiveAdminRecordMessageQueue *_adminRecordMessageQueue;
    IESLiveAdminScreenRecordApi *_adminScreenRecordApi;
    NSDictionary *_extraDict;
    long long _pushToType;
    NSTimer *_autoRecorderTimer;
    NSDictionary *_sourceParams;
    NSURL *_currentVideoUrl;
    UIImage *_currentVideoCover;
    IESLiveRoomMQEventReportApi *_eventReportApi;
    IESLiveRecordEntranceGuard *_entranceGuard;
    IESLiveScreenRecordPublishView *_publishView;
    double _preTrackTime;
    HTSLiveNotifyMessage *_guideMsg;
    IESLiveScreenRecordTracker *_tracker;
    id<IESLiveUserService> _userService;
}

@property (nonatomic) BOOL isInSharing;
@property (retain, nonatomic) UIView<IESLiveScreenRecordViewProvider> *recordToolView;
@property (retain, nonatomic) HTSScreenRecorder *screenRecorder;
@property (retain, nonatomic) IESLiveScreenRecordToolActionService *actionService;
@property (retain, nonatomic) id<IESLiveScreenRecordActions> actionCreator;
@property (retain, nonatomic) id<IESLivePublishMediaService> publishMediaService;
@property (retain, nonatomic) id<IESLiveLoadingFactory> loadingFactory;
@property (retain, nonatomic) id<IESLiveAudienceRoomAwareness> audienceAwareness;
@property (retain, nonatomic) id<IESLiveControlModule> longPressProvider;
@property (retain, nonatomic) UIView<IESLiveBubbleGuide> *publishRecordProgressTipView;
@property (nonatomic) BOOL isRecordInClearMode;
@property (nonatomic) BOOL isComponentInHiding;
@property (nonatomic) double recordStartTime;
@property (nonatomic) double recordEndTime;
@property (retain, nonatomic) IESLiveScreenRecordAnchorGuideKey *guideKeys;
@property (nonatomic) BOOL isRecordedVideoPublishing;
@property (copy, nonatomic) NSString *latestPublishProgressTip;
@property (retain, nonatomic) IESLiveScreenRecordStore *store;
@property (retain, nonatomic) IESLiveAdminRecordMessageQueue *adminRecordMessageQueue;
@property (retain, nonatomic) IESLiveAdminScreenRecordApi *adminScreenRecordApi;
@property (copy, nonatomic) NSDictionary *extraDict;
@property (nonatomic) long long pushToType;
@property (retain, nonatomic) NSTimer *autoRecorderTimer;
@property (nonatomic) BOOL isAutoRecordMode;
@property (nonatomic) BOOL hasShowAutoRecordAuthAlert;
@property (copy, nonatomic) NSDictionary *sourceParams;
@property (retain, nonatomic) NSURL *currentVideoUrl;
@property (retain, nonatomic) UIImage *currentVideoCover;
@property (nonatomic) BOOL hadReportRecordGet;
@property (retain, nonatomic) IESLiveRoomMQEventReportApi *eventReportApi;
@property (retain, nonatomic) IESLiveRecordEntranceGuard *entranceGuard;
@property (retain, nonatomic) IESLiveScreenRecordPublishView *publishView;
@property (nonatomic) BOOL hasShowGuide;
@property (nonatomic) double preTrackTime;
@property (retain, nonatomic) HTSLiveNotifyMessage *guideMsg;
@property (nonatomic) BOOL isAppInBackground;
@property (retain, nonatomic) IESLiveScreenRecordTracker *tracker;
@property (retain, nonatomic) id<IESLiveUserService> userService;
@property (nonatomic) BOOL diSettingEnable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)componentShouldActive:(id)arg0;

- (void)showToast:(id)arg0;
- (void)appWillTerminate;
- (void)openScreenShotInLiveRoomWithParams:(id)arg0;
- (void)setExtraDict:(id)arg0;
- (id)extraDict;
- (double)recordStartTime;
- (void)setRecordStartTime:(double)arg0;
- (double)recordEndTime;
- (void)setRecordEndTime:(double)arg0;
- (void)setPublishView:(id)arg0;
- (id)publishView;
- (id)actionService;
- (void)setActionService:(id)arg0;
- (void)componentDidAppear;
- (void)componentWillAppear;
- (void)trackPanelShow;
- (void)pauseLive;
- (void)stopLive;
- (BOOL)enableRecord;
- (long long)pushToType;
- (void)setPushToType:(long long)arg0;
- (BOOL)hasShowGuide;
- (void)componentBindService;
- (void)componentCreate;
- (void)componentMount;
- (void)componentUnmount;
- (void)startLive;
- (void)remoteRoomDataReady:(id)arg0;
- (void)componentOrientationChanged:(long long)arg0;
- (void)liveWillEndWithReason:(unsigned long long)arg0;
- (void)startAnchorLiveWithRoom:(id)arg0;
- (void)stopAnchorLive;
- (void)pauseAnchorLiveWithType:(unsigned long long)arg0;
- (void)prepareForLongPressMenuPopupWithItem:(id)arg0;
- (void)recordItemActionFromLongPress;
- (id)userService;
- (void)setUserService:(id)arg0;
- (id)latestPublishProgressTip;
- (void)setLatestPublishProgressTip:(id)arg0;
- (BOOL)shouldCombineRecordEntry:(BOOL)arg0;
- (BOOL)isInRecordMode;
- (BOOL)isInAutoRecordMode;
- (BOOL)isCleanMode;
- (void)setDidClearStatus:(BOOL)arg0;
- (BOOL)shouldShowAnchorLongPressGuide;
- (void)reloadCombinedEntryByCheckSwitch;
- (void)startBackRecordWithRequestPage:(id)arg0;
- (BOOL)enableAudienceBackRecord;
- (void)notifyMessageDisplay:(id)arg0;
- (id)sourceParams;
- (void)hideComponent;
- (double)maxLimit;
- (double)minLimit;
- (void)setSourceParams:(id)arg0;
- (void)showComponent;
- (void)hideAllComponent;
- (void)showAllComponent;
- (id)actionCreator;
- (void)setActionCreator:(id)arg0;
- (void)setDiSettingEnable:(BOOL)arg0;
- (BOOL)diSettingEnable;
- (void)interactionModeEndedWithLayout:(id)arg0;
- (void)didLeaveChannelWithLayout:(id)arg0;
- (id)adminScreenRecordApi;
- (void)setAdminScreenRecordApi:(id)arg0;
- (BOOL)isBackRecording;
- (id)publishMediaService;
- (void)setPublishMediaService:(id)arg0;
- (void)reportSaveDraftSuccessfulEvent;
- (id)eventReportApi;
- (void)setEventReportApi:(id)arg0;
- (id)longPressProvider;
- (void)setLongPressProvider:(id)arg0;
- (void)disableBackGestureIfNeeded;
- (BOOL)needToDealWithInteractiveScene:(unsigned long long)arg0;
- (id)audienceAwareness;
- (void)setAudienceAwareness:(id)arg0;
- (void)registerAnchorGuideLiveTimeObserver;
- (void)reportRecordGet;
- (BOOL)shouldCombinedEntryShowRedDot;
- (id)getGuideKeys;
- (void)recordItemActionFrom:(id)arg0;
- (void)setupEntranceGuard;
- (id)entranceGuard;
- (void)trackRecorShow;
- (void)showPublishRecordProgressTip;
- (void)trackBackRecordShow;
- (void)trackCombineEntryDidShow;
- (void)backRecordAction;
- (void)combineRecordEntryDidClick;
- (void)doAudienceBackRecordItemTapAction;
- (void)doLandscapeBackRecordItemTapAction;
- (void)showAutoRecordAuthAlert;
- (id)p_getTaskID;
- (void)setGuideKeys:(id)arg0;
- (void)appDidEnterBackgroundWithNoti;
- (BOOL)hasShowAutoRecordAuthAlert;
- (void)setHasShowAutoRecordAuthAlert:(BOOL)arg0;
- (id)autoRecordAuthKey;
- (void)showRecordTypeChooseView;
- (void)trackCombinedEntryDidClick;
- (double)preTrackTime;
- (void)setPreTrackTime:(double)arg0;
- (void)registerGuideKeys;
- (void)trackCombineEntryDidShowInLandScape;
- (id)publishRecordProgressTipView;
- (void)setHasShowGuide:(BOOL)arg0;
- (void)showBackRecordPublishPanel;
- (void)setIsComponentInHiding:(BOOL)arg0;
- (id)recordToolView;
- (void)setIsAppInBackground:(BOOL)arg0;
- (BOOL)isRecordedVideoPublishing;
- (BOOL)isComponentInHiding;
- (void)setPublishRecordProgressTipView:(id)arg0;
- (BOOL)isDouyinAdmin;
- (void)setCurrentVideoUrl:(id)arg0;
- (void)setCurrentVideoCover:(id)arg0;
- (BOOL)isNationalTask;
- (id)is_anchorForTracker;
- (void)saveDraftCompletionWithView:(id)arg0 success:(BOOL)arg1 newPath:(id)arg2 error:(id)arg3;
- (void)setIsRecordedVideoPublishing:(BOOL)arg0;
- (void)trackSaveRecord;
- (void)tr_fansGroupRecordVideoShared;
- (void)shareToFansGroup:(id)arg0 url:(id)arg1 videoText:(id)arg2;
- (id)popupPublishView:(id)arg0;
- (void)handleRecordVideoCompletion:(id)arg0 duration:(float)arg1 coverImage:(id)arg2;
- (void)showPublicPanel:(id)arg0 cover:(id)arg1;
- (void)showToolAndActionButtons;
- (void)disableLandscapeTopBarItems:(BOOL)arg0;
- (BOOL)isRecordInClearMode;
- (void)setIsRecordInClearMode:(BOOL)arg0;
- (BOOL)isAutoRecordMode;
- (BOOL)autoStartRecordDiabled;
- (id)autoRecorderTimer;
- (void)setIsAutoRecordMode:(BOOL)arg0;
- (void)setAutoRecorderTimer:(id)arg0;
- (void)trackBackRecordAction:(BOOL)arg0;
- (id)guideKeys;
- (void)setGuideMsg:(id)arg0;
- (BOOL)shouldShowLongPressMsg;
- (void)addGuideMessage;
- (void)willAppearLogic;
- (void)showAudienceAdminScreenRecorderRemind;
- (void)autoScreenShotInLiveRoomWithMinTime:(double)arg0 maxTime:(double)arg1 clearMode:(BOOL)arg2 extra:(id)arg3 message:(id)arg4;
- (void)showAnchorAdminScreenRecorderPreviewWithMessage:(id)arg0 playUrl:(id)arg1 intervalTime:(long long)arg2 enableShareButton:(BOOL)arg3 autoRecordMode:(BOOL)arg4;
- (void)handlePauseAction;
- (id)adminRecordMessageQueue;
- (void)showAnchorAdminScreenRecorderPreview;
- (void)previewTrack:(id)arg0;
- (void)tr_fansGroupAutoRecordVideoTextEdit;
- (void)tr_fansGroupAutoRecordVideoShared;
- (id)guideMsg;
- (void)p_trackGuideMsgShow;
- (void)hideToolAndActionButtons;
- (void)setRecordToolView:(id)arg0;
- (void)showAnchorLongPressGuide;
- (BOOL)hadReportRecordGet;
- (void)setHadReportRecordGet:(BOOL)arg0;
- (void)didStartRecord:(BOOL)arg0;
- (void)didStopRecord:(BOOL)arg0 isTimeOver:(BOOL)arg1 recordTime:(long long)arg2;
- (void)didFailedStopRecord;
- (void)didCanceledRecordIsRecording:(BOOL)arg0;
- (void)didClickClearButton:(BOOL)arg0;
- (void)trackExpandScreenRecordWidget;
- (void)autoStartRecordMinTime:(double)arg0 maxTime:(double)arg1 clearMode:(BOOL)arg2 message:(id)arg3;
- (void)doPublishAndShareVideo:(id)arg0 cover:(id)arg1 duration:(double)arg2;
- (id)getStore;
- (BOOL)currentScreenRecordState;
- (unsigned long long)currentBackRecordStatus;
- (id)loadingFactory;
- (void)trackBackRecordClick;
- (BOOL)isInSharing;
- (void)setIsInSharing:(BOOL)arg0;
- (void)setLoadingFactory:(id)arg0;
- (void)setAdminRecordMessageQueue:(id)arg0;
- (id)currentVideoUrl;
- (id)currentVideoCover;
- (void)setEntranceGuard:(id)arg0;
- (BOOL)isAppInBackground;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (BOOL)isRecording;
- (void).cxx_destruct;
- (id)store;
- (BOOL)isAnchor;
- (void)stop;
- (void)setStore:(id)arg0;
- (void)registerNotifications;
- (void)dealloc;
- (void)messageReceived:(id)arg0;
- (BOOL)isAdmin;
- (void)appDidBecomeActive;
- (id)screenRecorder;
- (void)setScreenRecorder:(id)arg0;
- (void)appWillResignActive;

@end
