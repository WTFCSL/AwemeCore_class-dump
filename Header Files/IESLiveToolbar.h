//
//     Generated by private class-dump
//

@class IESLiveToolbarTracker, IESLivePanelCollectionView, NSArray, NSString, NSMutableDictionary, IESLiveJsonConfigStrategy, IESLiveToolbarSlotConfig, IESLiveToolbarDataStrategy, IESLivePanelConfiguration;
@protocol HTSLiveToolbarActions;

@interface IESLiveToolbar : UIView <CAAnimationDelegate, HTSLiveToolbar> {
    BOOL _shouldReloadAfterChange;
    BOOL _isLandScapeTopbar;
    BOOL _needReload;
    BOOL _isAnchorNewStyle;
    BOOL _isAudienceNewStyle;
    NSArray *_items;
    id /* block */ _filterBlock;
    IESLiveToolbarTracker *_tracker;
    IESLivePanelCollectionView *_collectionView;
    id<HTSLiveToolbarActions> _toolbarActionCreator;
    NSMutableDictionary *_redDotCountDict;
    IESLiveToolbarSlotConfig *_configuration;
    NSMutableDictionary *_itemCache;
    IESLivePanelConfiguration *_collectionConfiguration;
    IESLiveToolbarDataStrategy *_dataStrategy;
    IESLiveJsonConfigStrategy *_jsonStrategy;
    NSMutableDictionary *_reloadTrace;
    NSMutableDictionary *_filteredReloadTrace;
    NSMutableDictionary *_reloadErrorTrace;
    NSMutableDictionary *_filteredReloadErrorTrace;
    NSMutableDictionary *_removeTrace;
}

@property (copy, nonatomic) NSArray *items;
@property (retain, nonatomic) IESLivePanelCollectionView *collectionView;
@property (retain, nonatomic) id<HTSLiveToolbarActions> toolbarActionCreator;
@property (nonatomic) BOOL needReload;
@property (retain, nonatomic) NSMutableDictionary *redDotCountDict;
@property (retain, nonatomic) IESLiveToolbarSlotConfig *configuration;
@property (nonatomic) BOOL isAnchorNewStyle;
@property (nonatomic) BOOL isAudienceNewStyle;
@property (retain, nonatomic) NSMutableDictionary *itemCache;
@property (retain, nonatomic) IESLivePanelConfiguration *collectionConfiguration;
@property (retain, nonatomic) IESLiveToolbarDataStrategy *dataStrategy;
@property (retain, nonatomic) IESLiveJsonConfigStrategy *jsonStrategy;
@property (retain, nonatomic) NSMutableDictionary *reloadTrace;
@property (retain, nonatomic) NSMutableDictionary *filteredReloadTrace;
@property (retain, nonatomic) NSMutableDictionary *reloadErrorTrace;
@property (retain, nonatomic) NSMutableDictionary *filteredReloadErrorTrace;
@property (retain, nonatomic) NSMutableDictionary *removeTrace;
@property (nonatomic) BOOL shouldReloadAfterChange;
@property (copy, nonatomic) id /* block */ filterBlock;
@property (retain, nonatomic) IESLiveToolbarTracker *tracker;
@property (nonatomic) BOOL isLandScapeTopbar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setNeedReload:(BOOL)arg0;
- (BOOL)needReload;
- (BOOL)containItem:(id)arg0;
- (void)removeItemWith:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameOfItemInRoom:(id)arg0;
- (id)viewOfItem:(id)arg0;
- (id)imageViewOfItemIdentifier:(id)arg0;
- (id)itemWith:(id)arg0;
- (long long)redDotCountForItem:(id)arg0;
- (void)setRedDotCount:(long long)arg0 forItem:(id)arg1;
- (void)insertItem:(id)arg0 asExtendedFor:(id)arg1;
- (void)setItemCache:(id)arg0;
- (unsigned long long)indexForSlot:(id)arg0;
- (id)dataStrategy;
- (void)setDataStrategy:(id)arg0;
- (id)findItem:(id)arg0;
- (void)monitorToolbarTrace;
- (void)showForLanscape;
- (void)hideForLanscape;
- (void)setShouldReloadAfterChange:(BOOL)arg0;
- (id)initWithToolbarData:(id)arg0 configuration:(id)arg1;
- (id)initWithConfigFile:(id)arg0 configuration:(id)arg1;
- (id)initWithToolbarData:(id)arg0;
- (void)setIsLandScapeTopbar:(BOOL)arg0;
- (void)updateToolbarNewStyle:(BOOL)arg0 isAnchor:(BOOL)arg1;
- (id)currentItemIdentifiers;
- (unsigned long long)maxSlotCount;
- (void)setMaxSlotCount:(unsigned long long)arg0;
- (void)setIsAnchorNewStyle:(BOOL)arg0;
- (void)showItemWith:(id)arg0 highLightItems:(id)arg1;
- (BOOL)containItem:(id)arg0 asExtendedFor:(id)arg1;
- (void)setIsAudienceNewStyle:(BOOL)arg0;
- (id)toolbarActionCreator;
- (void)setToolbarActionCreator:(id)arg0;
- (void)doCollapseWithCompletion:(id /* block */)arg0;
- (BOOL)containComponentWithoutExpand:(int)arg0;
- (BOOL)containItemWithoutExpand:(id)arg0;
- (void)showCustomWebpImage:(id)arg0;
- (void)logEvent:(id)arg0 fileName:(const char *)arg1 functionName:(const char *)arg2 line:(int)arg3 extra:(id)arg4;
- (id)removeLowPrioritySlotIfNeed:(id)arg0 insertItem:(id)arg1;
- (unsigned long long)isContainsItem:(id)arg0 items:(id)arg1;
- (BOOL)isAnchorNewStyle;
- (BOOL)isAudienceNewStyle;
- (id)reloadTrace;
- (id)traceDataDescription:(id)arg0;
- (id)filteredReloadTrace;
- (id)reloadErrorTrace;
- (id)filteredReloadErrorTrace;
- (id)removeTrace;
- (id)jsonStrategy;
- (BOOL)isLandScapeTopbar;
- (BOOL)shouldReloadAfterChange;
- (id)p_reloadItemsAfterFilter;
- (void)clearExtendItemCache:(id)arg0;
- (void)p_clearCacheFor:(id)arg0;
- (id)removeItem:(id)arg0 fromItems:(id)arg1;
- (void)setupItemsHighLightStatus:(id)arg0 items:(id)arg1;
- (id)redDotCountDict;
- (struct CGSize { double x0; double x1; })toolBarItemSize;
- (void)showOrHide:(BOOL)arg0;
- (void)insertItem:(id)arg0 withPositionStr:(id)arg1;
- (void)hideExpandedToolbarIfExist;
- (id)currentItemComponentType;
- (void)startTransaction:(id /* block */)arg0;
- (void)setSelectItemIndex:(unsigned long long)arg0;
- (void)setRedDotCountDict:(id)arg0;
- (void)setJsonStrategy:(id)arg0;
- (void)setReloadTrace:(id)arg0;
- (void)setFilteredReloadTrace:(id)arg0;
- (void)setReloadErrorTrace:(id)arg0;
- (void)setFilteredReloadErrorTrace:(id)arg0;
- (void)setRemoveTrace:(id)arg0;
- (void)removeItem:(int)arg0;
- (void)reload;
- (BOOL)isFull;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void)setItems:(id)arg0;
- (void).cxx_destruct;
- (void)reloadIfNeeded;
- (id)collectionView;
- (id)items;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)show;
- (void)setCollectionView:(id)arg0;
- (id /* block */)filterBlock;
- (id)configuration;
- (void)hide;
- (struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })arg0;
- (id)collectionConfiguration;
- (void)insertItem:(id)arg0;
- (void)orientationChanged:(long long)arg0;
- (void)setConfiguration:(id)arg0;
- (id)initWithConfigFile:(id)arg0;
- (void)setFilterBlock:(id /* block */)arg0;
- (void)doCollapse;
- (void)setCollectionConfiguration:(id)arg0;
- (id)itemCache;

@end
