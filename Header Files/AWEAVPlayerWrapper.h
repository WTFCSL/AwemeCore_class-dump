//
//     Generated by private class-dump
//

@class NSError, NSTimer, NSArray, AVURLAsset, NSURL, NSString, NSRecursiveLock, NSObject;
@protocol AWEAudioMusicModelProtocol, AWEAVPlayerWrapper, AWEAVPlayerWrapperDelegate;

@interface AWEAVPlayerWrapper : NSObject <AWEAVPlayerWrapperTTVideoEngineDelegate, AWEAVPlayerWrapper> {
    id<AWEAudioMusicModelProtocol> _playingMusic;
    id<AWEAudioMusicModelProtocol> _retainedPlayingMusic;
    AVURLAsset *_loadingAsset;
    NSRecursiveLock *_lock;
    BOOL _isPlaying;
    BOOL _needCookie;
    BOOL _canBackgroundPlay;
    BOOL _monitorPlayedFlag;
    BOOL _hasUpdatedDuration;
    BOOL _AWEAVPlayerWrapperDisableKVO;
    unsigned long long _playStatus;
    long long _repeatCount;
    double _currentPlayTime;
    id<AWEAVPlayerWrapperDelegate> _delegate;
    id /* block */ _stopPlayingToAuditionDuration;
    NSObject<AWEAVPlayerWrapper> *_player;
    NSArray *_playList;
    long long _currentIndex;
    double _monitorTimeFlag;
    NSTimer *_playTimer;
    double _auditionDuration;
    double _duration;
}

@property (readonly, nonatomic) id<AWEAudioMusicModelProtocol> playingMusic;
@property (readonly, nonatomic) id<AWEAudioMusicModelProtocol> retainedPlayingMusic;
@property (retain, nonatomic) NSObject<AWEAVPlayerWrapper> *player;
@property (retain, nonatomic) NSArray *playList;
@property (nonatomic) long long currentIndex;
@property (retain, nonatomic) id<AWEAudioMusicModelProtocol> playingMusic;
@property (retain, nonatomic) id<AWEAudioMusicModelProtocol> retainedPlayingMusic;
@property (weak, nonatomic) AVURLAsset *loadingAsset;
@property (nonatomic) double monitorTimeFlag;
@property (nonatomic) BOOL monitorPlayedFlag;
@property (retain, nonatomic) NSTimer *playTimer;
@property BOOL hasUpdatedDuration;
@property double auditionDuration;
@property double duration;
@property (nonatomic) BOOL AWEAVPlayerWrapperDisableKVO;
@property (weak, nonatomic) id<AWEAVPlayerWrapperDelegate> delegate;
@property (readonly, nonatomic) NSURL *playingURL;
@property (nonatomic) long long repeatCount;
@property (readonly, nonatomic) BOOL isPlaying;
@property (copy, nonatomic) id /* block */ stopPlayingToAuditionDuration;
@property (nonatomic) BOOL canBackgroundPlay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned long long playStatus;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) double currentPlayTime;
@property (nonatomic) BOOL needCookie;

+ (void)setPlayerType:(unsigned long long)arg0;
+ (Class)playerClass;

- (double)currentPlayTime;
- (void)replaceCurrentItemWithURL:(id)arg0;
- (void)removeTimeObserver;
- (id)initWithURLList:(id)arg0;
- (void)setCanBackgroundPlay:(BOOL)arg0;
- (double)auditionDuration;
- (BOOL)canBackgroundPlay;
- (unsigned long long)playStatus;
- (void)setPlayStatus:(unsigned long long)arg0;
- (id)initWithMusic:(id)arg0 needCookie:(BOOL)arg1;
- (void)setNeedCookie:(BOOL)arg0;
- (void)replaceCurrentItemWithMusic:(id)arg0;
- (BOOL)isExpiredCachedFileWithFilePath:(id)arg0;
- (void)removeCachedPath:(id)arg0;
- (id)retainedPlayingMusic;
- (BOOL)setUpPlaybackOfAsset:(id)arg0 withKeys:(id)arg1;
- (id)audioListWithMusic:(id)arg0 cachedPath:(id)arg1;
- (void)replaceCurrentPlayListWith:(id)arg0;
- (void)setPlayingMusic:(id)arg0;
- (void)setPlayingMusic:(id)arg0;
- (id)playingURL;
- (id)initWithMusic:(id)arg0;
- (id)playingMusic;
- (void)replaceCurrentPlayListWithURLList:(id)arg0;
- (void)replaceCurrentItemWith:(id)arg0;
- (BOOL)AWEAVPlayerWrapperDisableKVO;
- (void)setAWEAVPlayerWrapperDisableKVO:(BOOL)arg0;
- (void)enableAsyncOptimize;
- (void)p_deactivatePlayerTimer;
- (void)handleAppWillResignActiveNotification:(id)arg0;
- (void)clearCurrentPlayer;
- (BOOL)needCookie;
- (void)setPlayList:(id)arg0;
- (BOOL)advanceNextItem;
- (void)p_activatePlayerTimer;
- (void)setHasUpdatedDuration:(BOOL)arg0;
- (void)pauseWithFadeOutDuration:(double)arg0 completion:(id /* block */)arg1;
- (id)playList;
- (BOOL)advanceNextItem:(BOOL)arg0;
- (id /* block */)stopPlayingToAuditionDuration;
- (void)setAudioClipRangeWithStartTime:(double)arg0 endTime:(double)arg1 loopWay:(long long)arg2;
- (void)stopToAuditionDuration;
- (void)playerStatusChange:(id)arg0;
- (BOOL)playNextItem;
- (void)playStatusDidChangedTo:(unsigned long long)arg0 with:(id)arg1;
- (id)initWithAudioList:(id)arg0;
- (void)setStopPlayingToAuditionDuration:(id /* block */)arg0;
- (void)setRetainedPlayingMusic:(id)arg0;
- (double)monitorTimeFlag;
- (void)setMonitorTimeFlag:(double)arg0;
- (BOOL)monitorPlayedFlag;
- (void)setMonitorPlayedFlag:(BOOL)arg0;
- (BOOL)hasUpdatedDuration;
- (void)setAuditionDuration:(double)arg0;
- (long long)repeatCount;
- (void)setPlayTimer:(id)arg0;
- (id)init;
- (void)setRepeatCount:(long long)arg0;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (long long)currentIndex;
- (double)volume;
- (id)initWithURL:(id)arg0;
- (void)setCurrentIndex:(long long)arg0;
- (void)setPlayer:(id)arg0;
- (double)duration;
- (id)initWithConfig:(id)arg0;
- (id)delegate;
- (BOOL)isPlaying;
- (void)setVolume:(double)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (id)playTimer;
- (void)seekToTime:(double)arg0;
- (id)url;
- (id)error;
- (id)player;
- (void)setDuration:(double)arg0;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)loadingAsset;
- (void)setLoadingAsset:(id)arg0;
- (id)initWithAudioFile:(id)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
