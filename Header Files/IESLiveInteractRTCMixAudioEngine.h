//
//     Generated by private class-dump
//

@class NSString, ByteRTCVideo;

@interface IESLiveInteractRTCMixAudioEngine : NSObject <ByteRTCMediaPlayerEventHandler> {
    struct unique_ptr<avframework::FFmpegAudioResampler, std::default_delete<avframework::FFmpegAudioResampler>> { struct __compressed_pair<avframework::FFmpegAudioResampler *, std::default_delete<avframework::FFmpegAudioResampler>> { struct FFmpegAudioResampler *__value_; } __ptr_; } _audioResampler;
    BOOL _audioMixingEnabled;
    BOOL _shouldPushEmptyData;
    ByteRTCVideo *_rtcEngine;
}

@property (retain, nonatomic) ByteRTCVideo *rtcEngine;
@property (nonatomic) BOOL shouldPushEmptyData;
@property (nonatomic) BOOL audioMixingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)onMediaPlayerStateChanged:(int)arg0 state:(long long)arg1 error:(long long)arg2;
- (void)onMediaPlayerPlayingProgress:(int)arg0 progress:(long long)arg1;
- (id)rtcEngine;
- (void)setRtcEngine:(id)arg0;
- (BOOL)__initialAudioStreamProcessor:(long long)arg0 chaneNum:(long long)arg1;
- (id)initWithRTCEngine:(id)arg0;
- (BOOL)audioMixingEnabled;
- (void)enableAudioMixing:(long long)arg0;
- (void)disableAudioMixing:(long long)arg0;
- (void)setAudioMixingVolume:(long long)arg0 volume:(int)arg1;
- (void)pushAudioMixingStreamData:(float **)arg0 samples:(long long)arg1 sampleRate:(long long)arg2 channels:(long long)arg3 mixID:(long long)arg4;
- (void)setAudioMixingEnabled:(BOOL)arg0;
- (void)pushEmptyDataIfNeededWithSampleRate:(long long)arg0 channels:(long long)arg1 mixID:(long long)arg2;
- (BOOL)shouldPushEmptyData;
- (void)setShouldPushEmptyData:(BOOL)arg0;
- (void).cxx_destruct;
- (id).cxx_construct;

@end
