//
//     Generated by private class-dump
//

@interface HTSGLResizeRotateFilter : HTSGLFilter {
    BOOL _onlyRotated;
    BOOL _resourceRotationMode;
    unsigned long long _outputRotation;
    struct CGSize { double width; double height; } _targetSize;
    struct CGSize { double width; double height; } _inputSize;
}

@property (nonatomic) struct CGSize { double width; double height; } targetSize;
@property (nonatomic) struct CGSize { double width; double height; } inputSize;
@property (nonatomic) struct CGSize { double x0; double x1; } renderSize;
@property (nonatomic) unsigned long long outputRotation;
@property (nonatomic) BOOL onlyRotated;
@property (nonatomic) BOOL resourceRotationMode;

- (void)renderToTextureWithVertices:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)forceProcessingAtSize:(struct CGSize { double x0; double x1; })arg0;
- (void)forceProcessingAtSizeRespectingAspectRatio:(struct CGSize { double x0; double x1; })arg0;
- (void)setInputSize:(struct CGSize { double x0; double x1; })arg0 atIndex:(long long)arg1;
- (void)setOutputRotation:(unsigned long long)arg0;
- (unsigned long long)outputRotation;
- (BOOL)onlyRotated;
- (BOOL)resourceRotationMode;
- (void)setOnlyRotated:(BOOL)arg0;
- (void)setResourceRotationMode:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })targetSize;
- (id)initWithContext:(id)arg0;
- (struct CGSize { double x0; double x1; })renderSize;
- (struct CGSize { double x0; double x1; })inputSize;
- (void)setTargetSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setInputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setRenderSize:(struct CGSize { double x0; double x1; })arg0;

@end
