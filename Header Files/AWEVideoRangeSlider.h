//
//     Generated by private class-dump
//

@class NSTimer, UIView, NSString, ACCTextReaderToastView, UIImageView, CAShapeLayer, AWESliderLeft, AWESliderRight, UILabel, UIImpactFeedbackGenerator;
@protocol AWEVideoRangeSliderDelegate;

@interface AWEVideoRangeSlider : UIView <UIGestureRecognizerDelegate> {
    BOOL _cursorCanOverrunMaxGap;
    BOOL _showSideHandlerInfo;
    BOOL _fixedBodyWidthMode;
    BOOL _isAdapitionOptimize;
    BOOL _hasFeedback;
    BOOL _hasSelectMask;
    BOOL _thumbHandlerMoveTogetherWithGesture;
    BOOL _holdLeftToDragOn;
    BOOL _holdRightToDragOn;
    BOOL _dragRightControlInsideRange;
    BOOL _rightThumbFlyToRight;
    BOOL _leftThumbFlyToLeft;
    BOOL _animationInFlight;
    BOOL _rightHandleInPan;
    BOOL _leftHandleInPan;
    BOOL _isInSnappingRange;
    id<AWEVideoRangeSliderDelegate> _delegate;
    double _leftPosition;
    double _rightPosition;
    double _cursorPosition;
    double _bodyWidth;
    double _audioDuration;
    UILabel *_bubleText;
    UILabel *_draggingBubleText;
    AWESliderLeft *_leftThumb;
    AWESliderRight *_rightThumb;
    double _maxGap;
    double _minGap;
    unsigned long long _enterFromType;
    long long _rangeChangeCount;
    UIView *_topBorder;
    UIView *_bottomBorder;
    UIImageView *_cursor;
    UIView *_bgView;
    ACCTextReaderToastView *_textReaderHintView;
    UILabel *_leftHandlerBottomLabel;
    UILabel *_rightHandlerBottomLabel;
    double _lockWidth;
    UIImpactFeedbackGenerator *_feedBackGenertor;
    CAShapeLayer *_cursorLayer;
    NSTimer *_holdDragOnSliderTimer;
    double _rightPositionDuringGestureChanging;
}

@property (retain, nonatomic) UIView *topBorder;
@property (retain, nonatomic) UIView *bottomBorder;
@property (retain, nonatomic) UIImageView *cursor;
@property (retain, nonatomic) UIView *bgView;
@property (retain, nonatomic) ACCTextReaderToastView *textReaderHintView;
@property (nonatomic) BOOL hasFeedback;
@property (nonatomic) BOOL hasSelectMask;
@property (retain, nonatomic) UILabel *leftHandlerBottomLabel;
@property (retain, nonatomic) UILabel *rightHandlerBottomLabel;
@property (nonatomic) double lockWidth;
@property (nonatomic) BOOL thumbHandlerMoveTogetherWithGesture;
@property (retain, nonatomic) UIImpactFeedbackGenerator *feedBackGenertor;
@property (nonatomic) BOOL holdLeftToDragOn;
@property (nonatomic) BOOL holdRightToDragOn;
@property (nonatomic) BOOL dragRightControlInsideRange;
@property (nonatomic) BOOL rightThumbFlyToRight;
@property (nonatomic) BOOL leftThumbFlyToLeft;
@property (nonatomic) BOOL animationInFlight;
@property (nonatomic) BOOL rightHandleInPan;
@property (nonatomic) BOOL leftHandleInPan;
@property (retain, nonatomic) CAShapeLayer *cursorLayer;
@property (retain, nonatomic) NSTimer *holdDragOnSliderTimer;
@property (nonatomic) double rightPositionDuringGestureChanging;
@property (nonatomic) BOOL isInSnappingRange;
@property (weak, nonatomic) id<AWEVideoRangeSliderDelegate> delegate;
@property (nonatomic) double leftPosition;
@property (nonatomic) double rightPosition;
@property (nonatomic) double cursorPosition;
@property (nonatomic) double bodyWidth;
@property (nonatomic) double audioDuration;
@property (retain, nonatomic) UILabel *bubleText;
@property (retain, nonatomic) UILabel *draggingBubleText;
@property (retain, nonatomic) AWESliderLeft *leftThumb;
@property (retain, nonatomic) AWESliderRight *rightThumb;
@property (nonatomic) double maxGap;
@property (nonatomic) double minGap;
@property (nonatomic) BOOL cursorCanOverrunMaxGap;
@property (nonatomic) unsigned long long enterFromType;
@property (nonatomic) BOOL showSideHandlerInfo;
@property (nonatomic) BOOL fixedBodyWidthMode;
@property (nonatomic) BOOL isAdapitionOptimize;
@property (readonly, nonatomic) BOOL isActive;
@property (nonatomic) long long rangeChangeCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)handleLeftPan:(id)arg0;
- (unsigned long long)enterFromType;
- (id)leftThumb;
- (id)rightThumb;
- (void)setEnterFromType:(unsigned long long)arg0;
- (void)updateTimeLabelFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 forIPhoneXS:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 slideWidth:(double)arg1 cursorWidth:(double)arg2 height:(double)arg3 hasSelectMask:(BOOL)arg4;
- (void)setIsAdapitionOptimize:(BOOL)arg0;
- (void)showVideoIndicator;
- (double)leftPosition;
- (double)rightPosition;
- (void)setMinGap:(double)arg0;
- (void)setMaxGap:(double)arg0;
- (double)maxGap;
- (id)bubleText;
- (void)updateSliderWithHeight:(double)arg0 cursorHeight:(double)arg1;
- (double)getActualLeftPosition;
- (double)getActualRightPosition;
- (void)updateActualLeftPosition:(double)arg0;
- (void)updateActualRightPosition:(double)arg0;
- (void)updateVideoIndicatorByPosition:(double)arg0;
- (void)setFixedBodyWidthMode:(BOOL)arg0;
- (double)minGap;
- (double)convertActualPositionWithTime:(double)arg0;
- (id)draggingBubleText;
- (void)lockSliderWidth;
- (void)setLeftPosition:(double)arg0;
- (void)setRightPosition:(double)arg0;
- (void)showSliderAreaShow:(BOOL)arg0 animated:(BOOL)arg1;
- (void)setBubleText:(id)arg0;
- (void)setCursorCanOverrunMaxGap:(BOOL)arg0;
- (void)setShowSideHandlerInfo:(BOOL)arg0;
- (void)setRangeChangeCount:(long long)arg0;
- (long long)rangeChangeCount;
- (void)p_vibrate;
- (id)feedBackGenertor;
- (void)setFeedBackGenertor:(id)arg0;
- (void)setLeftThumb:(id)arg0;
- (void)setRightThumb:(id)arg0;
- (id)textReaderHintView;
- (id)rightHandlerBottomLabel;
- (void)handleRightPan:(id)arg0;
- (void)setCursorWidth:(double)arg0 height:(double)arg1;
- (void)handleCursorPan:(id)arg0;
- (BOOL)animationInFlight;
- (BOOL)fixedBodyWidthMode;
- (BOOL)holdLeftToDragOn;
- (BOOL)leftThumbFlyToLeft;
- (BOOL)holdRightToDragOn;
- (BOOL)rightThumbFlyToRight;
- (id)holdDragOnSliderTimer;
- (void)p_invalidSliderTimer;
- (BOOL)thumbHandlerMoveTogetherWithGesture;
- (void)handleSlidePan:(id)arg0 forThumbType:(unsigned long long)arg1;
- (BOOL)rightHandleInPan;
- (void)setLeftHandleInPan:(BOOL)arg0;
- (void)gestureDidBeginByType:(unsigned long long)arg0;
- (void)setHoldLeftToDragOn:(BOOL)arg0;
- (void)expandRightThumbToRight;
- (void)setTimeLabelWithFeedbackCheck:(BOOL)arg0 checkMax:(BOOL)arg1;
- (void)setHoldDragOnSliderTimer:(id)arg0;
- (double)validActualLeftPositionForPosition:(double)arg0;
- (void)p_toggleToastHidden:(BOOL)arg0;
- (BOOL)isInSnappingRange;
- (void)setIsInSnappingRange:(BOOL)arg0;
- (void)setTimeLabelWithFeedbackCheck:(BOOL)arg0;
- (BOOL)showSideHandlerInfo;
- (id)leftHandlerBottomLabel;
- (void)videoRangeChangedByThumbType:(unsigned long long)arg0;
- (void)restoreRightThumbBackToNormal;
- (void)gestureDidEndByType:(unsigned long long)arg0;
- (BOOL)leftHandleInPan;
- (void)setRightHandleInPan:(BOOL)arg0;
- (void)setRightPositionDuringGestureChanging:(double)arg0;
- (double)rightPositionDuringGestureChanging;
- (void)setHoldRightToDragOn:(BOOL)arg0;
- (void)expandLeftThumbToLeft;
- (double)validActualRightPositionForPosition:(double)arg0;
- (void)restoreLeftThumbBackToNormal;
- (double)lockWidth;
- (BOOL)cursorCanOverrunMaxGap;
- (id)timeAdjustedStr;
- (id)trimDurationStr;
- (id)rangeSliderTextFormatForDelta:(double)arg0;
- (id)formattedStrForDelta:(double)arg0;
- (id)timeToStr:(double)arg0;
- (void)setThumbHandlerMoveTogetherWithGesture:(BOOL)arg0;
- (void)setLockWidth:(double)arg0;
- (void)setAnimationInFlight:(BOOL)arg0;
- (void)setRightThumbFlyToRight:(BOOL)arg0;
- (void)setLeftThumbFlyToLeft:(BOOL)arg0;
- (BOOL)isAdapitionOptimize;
- (void)bubleTextAnimationWithDragging:(BOOL)arg0 thumbType:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 slideWidth:(double)arg1;
- (id)trimIntervalStr;
- (void)hiddenVideoIndicator;
- (void)setDraggingBubleText:(id)arg0;
- (void)setTextReaderHintView:(id)arg0;
- (BOOL)hasSelectMask;
- (void)setHasSelectMask:(BOOL)arg0;
- (void)setLeftHandlerBottomLabel:(id)arg0;
- (void)setRightHandlerBottomLabel:(id)arg0;
- (BOOL)dragRightControlInsideRange;
- (void)setDragRightControlInsideRange:(BOOL)arg0;
- (void)unlock;
- (id)cursor;
- (void).cxx_destruct;
- (void)setCursorPosition:(double)arg0;
- (id)delegate;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (BOOL)isActive;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (double)delta;
- (void)setCursor:(id)arg0;
- (double)cursorPosition;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (id)bgView;
- (void)setBgView:(id)arg0;
- (BOOL)hasFeedback;
- (double)bodyWidth;
- (void)setBodyWidth:(double)arg0;
- (double)audioDuration;
- (void)setAudioDuration:(double)arg0;
- (void)updateTimeLabel;
- (id)topBorder;
- (id)bottomBorder;
- (void)setTopBorder:(id)arg0;
- (void)setBottomBorder:(id)arg0;
- (void)setHasFeedback:(BOOL)arg0;
- (id)cursorLayer;
- (void)setCursorLayer:(id)arg0;

@end
