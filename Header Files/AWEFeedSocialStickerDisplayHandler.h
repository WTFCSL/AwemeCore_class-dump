//
//     Generated by private class-dump
//

@class ACCStickerContainerView, NSString, AWEAwemeModel, UIView, NSObject, AWEInteractionStickerModel;
@protocol ACCStickerContentProtocol, AWEFeedAlbumStickerDisplayManagerProtocol;

@interface AWEFeedSocialStickerDisplayHandler : AWEFeedBasicStickerDisplayHandler <AWEFeedStickerAlbumDisplayHandler> {
    BOOL _isInPureModePage;
    BOOL _hasFetched;
    NSObject<AWEFeedAlbumStickerDisplayManagerProtocol> *managerDelegate;
    long long index;
    UIView<ACCStickerContentProtocol> *_contentView;
}

@property (weak, nonatomic) UIView<ACCStickerContentProtocol> *contentView;
@property (nonatomic) BOOL isInPureModePage;
@property (nonatomic) BOOL hasFetched;
@property (weak, nonatomic) NSObject<AWEFeedAlbumStickerDisplayManagerProtocol> *managerDelegate;
@property (nonatomic) long long index;
@property (retain, nonatomic) AWEInteractionStickerModel *sticker;
@property (weak, nonatomic) ACCStickerContainerView *stickerContainer;
@property (retain, nonatomic) AWEAwemeModel *model;
@property (copy, nonatomic) NSString *enterFrom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)canDisplaySticker:(id)arg0;

- (BOOL)isInPureModePage;
- (void)setHasFetched:(BOOL)arg0;
- (void)stickerWillAppear;
- (BOOL)isFromSearch;
- (void)displaySticker:(BOOL)arg0;
- (BOOL)canResponseEvent;
- (void)setIsInPureModePage:(BOOL)arg0;
- (void)bubbleJumpClicked;
- (void)trackForSocialStickerClicked;
- (void)showSocialTextList;
- (void)doCommonTrackWithExtraTrackInfo:(id)arg0 event:(id)arg1;
- (void)trackForHotSpotTagWithTopic:(id)arg0 actionType:(id)arg1;
- (id)socialJumpURLStringWithSocialModel:(id)arg0;
- (void)doSocialJumpTrackWithSocialModel:(id)arg0 from:(id)arg1 withJumpUrl:(id)arg2;
- (void)doCommonSocialJumpTrackWithModel;
- (void)setIndex:(long long)arg0;
- (void).cxx_destruct;
- (id)contentView;
- (long long)index;
- (void)setContentView:(id)arg0;
- (void)handleTapAtPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)willDisplay;
- (void)setManagerDelegate:(id)arg0;
- (id)managerDelegate;
- (BOOL)hasFetched;

@end
