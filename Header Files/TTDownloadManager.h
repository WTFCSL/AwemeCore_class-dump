//
//     Generated by private class-dump
//

@class NSLock, NSString, TTDownloadTncConfigManager, TTDownloadStorageCenter, NSMutableDictionary, NSObject, NSFileManager, DownloadGlobalParameters;
@protocol OS_dispatch_source;

@interface TTDownloadManager : NSObject {
    BOOL _isDelayBGTaskEnable;
    BOOL _isCheckCacheExpirationTime;
    BOOL _isHadLoadConfigFromStorage;
    BOOL _isAppBackground;
    BOOL _isForceCacheLifeTimeMaxEnable;
    BOOL _isDelayDeleting;
    BOOL _isTryRestoreTaskWhenRestart;
    BOOL _isClearAllCache;
    BOOL _isClearNoExpireTimeCache;
    char _loadDataFromDBRetryTimes;
    BOOL _isCleaningOldCache;
    BOOL _isCheckCacheDirCompleted;
    int _littleFileCleanCacheCycleTime;
    TTDownloadStorageCenter *_downloadStorageCenter;
    NSString *_deviceID;
    NSString *_cachePath;
    NSString *_appSupportPath;
    id /* block */ _bgCompletedHandler;
    id /* block */ _onCompletionHandler;
    id /* block */ _eventBlock;
    NSString *_urgentModeTempRootDir;
    NSString *_downloaderTopDir;
    NSString *_littleFileDownloaderTopDir;
    NSString *_littleFileResumeTopDir;
    double _cacheLifeTimeMax;
    NSString *_autoRestoreFlagsFile;
    double _backgroundRemainTime;
    double _startBackgroundTaskCountdownTime;
    NSString *_dbFilePath;
    DownloadGlobalParameters *_downloadGlobalParameter;
    NSMutableDictionary *_downloadTaskConfigDic;
    NSMutableDictionary *_downloadingTaskDic;
    NSMutableDictionary *_bgIdentifierDic;
    NSMutableDictionary *_checkCancelTaskDic;
    NSLock *_checkCancelTaskDicLock;
    NSLock *_bgIdentifierDicLock;
    NSLock *_downloadTaskConfigDicLock;
    NSLock *_downloadingTaskDicLock;
    NSLock *_loadConfigFromStorageLock;
    NSFileManager *_fileManager;
    long long _previousNetStatus;
    TTDownloadTncConfigManager *_tncConfigManager;
    id /* block */ _onGlobalMetricsBlock;
    unsigned long long _backgroundTempTask;
    NSObject<OS_dispatch_source> *_backgroundDownloadStartTimer;
    NSMutableDictionary *_backgroundBlockDic;
    NSLock *_storageCenterLock;
}

@property (retain) DownloadGlobalParameters *downloadGlobalParameter;
@property (retain) NSMutableDictionary *downloadTaskConfigDic;
@property (retain) NSMutableDictionary *downloadingTaskDic;
@property (retain) NSMutableDictionary *bgIdentifierDic;
@property (retain) NSMutableDictionary *checkCancelTaskDic;
@property (retain) NSLock *checkCancelTaskDicLock;
@property (retain) NSLock *bgIdentifierDicLock;
@property (retain) NSLock *downloadTaskConfigDicLock;
@property (retain) NSLock *downloadingTaskDicLock;
@property (retain) NSLock *loadConfigFromStorageLock;
@property (retain, nonatomic) TTDownloadStorageCenter *downloadStorageCenter;
@property (retain, nonatomic) NSFileManager *fileManager;
@property long long previousNetStatus;
@property BOOL isTryRestoreTaskWhenRestart;
@property (retain, nonatomic) TTDownloadTncConfigManager *tncConfigManager;
@property BOOL isClearAllCache;
@property BOOL isClearNoExpireTimeCache;
@property BOOL isAppBackground;
@property (nonatomic) char loadDataFromDBRetryTimes;
@property (copy) id /* block */ onGlobalMetricsBlock;
@property (copy) NSString *downloaderTopDir;
@property (copy) NSString *littleFileDownloaderTopDir;
@property (copy) NSString *littleFileResumeTopDir;
@property (retain) NSString *autoRestoreFlagsFile;
@property unsigned long long backgroundTempTask;
@property (retain) NSObject<OS_dispatch_source> *backgroundDownloadStartTimer;
@property double backgroundRemainTime;
@property (retain) NSMutableDictionary *backgroundBlockDic;
@property BOOL isCleaningOldCache;
@property BOOL isCheckCacheDirCompleted;
@property (retain) NSString *dbFilePath;
@property (retain) NSLock *storageCenterLock;
@property BOOL isHadLoadConfigFromStorage;
@property (copy) NSString *deviceID;
@property (copy, nonatomic) NSString *cachePath;
@property (copy, nonatomic) NSString *appSupportPath;
@property (copy) id /* block */ bgCompletedHandler;
@property (copy) id /* block */ onCompletionHandler;
@property (copy, nonatomic) id /* block */ eventBlock;
@property (copy) NSString *urgentModeTempRootDir;
@property BOOL isForceCacheLifeTimeMaxEnable;
@property double cacheLifeTimeMax;
@property double startBackgroundTaskCountdownTime;
@property (nonatomic) BOOL isDelayBGTaskEnable;
@property (nonatomic) BOOL isCheckCacheExpirationTime;
@property (nonatomic) int littleFileCleanCacheCycleTime;
@property BOOL isDelayDeleting;

+ (BOOL)isAutoRestoreTask:(id)arg0;
+ (BOOL)isShouldClearCache:(id)arg0 type:(long long)arg1 clearCacheKey:(id)arg2;
+ (void)load;
+ (id)shareInstance;

- (void)clearAllCache:(id)arg0;
- (void)setCacheLifeTimeMax:(double)arg0;
- (void)deleteDownloadWithURL:(id)arg0 resultBlock:(id /* block */)arg1;
- (void)applicationEnterBackground;
- (void)endBackgroundUpdateTask;
- (void)setBackgroundTempTask:(unsigned long long)arg0;
- (unsigned long long)backgroundTempTask;
- (BOOL)insertOrUpdateClearCacheRule:(id)arg0 error:(id *)arg1;
- (BOOL)deleteClearCacheRule:(id)arg0 error:(id *)arg1;
- (BOOL)clearAllCache:(long long)arg0 clearCacheKey:(id)arg1 error:(id *)arg2;
- (id)getAllRuleFromDB:(id *)arg0;
- (void)setOnCompletionHandler:(id /* block */)arg0;
- (void)setWifiOnlyWithUrlKey:(id)arg0 isWifiOnly:(BOOL)arg1;
- (void)setStartBackgroundTaskCountdownTime:(double)arg0;
- (double)startBackgroundTaskCountdownTime;
- (id)storageCenterLock;
- (id)backgroundDownloadStartTimer;
- (void)setBackgroundDownloadStartTimer:(id)arg0;
- (id)getTncConfig;
- (void)setDownloadTaskConfigDic:(id)arg0;
- (void)setDownloadingTaskDic:(id)arg0;
- (void)setBgIdentifierDic:(id)arg0;
- (void)setCheckCancelTaskDic:(id)arg0;
- (void)setBackgroundBlockDic:(id)arg0;
- (void)setIsHadLoadConfigFromStorage:(BOOL)arg0;
- (void)setDownloadTaskConfigDicLock:(id)arg0;
- (void)setDownloadingTaskDicLock:(id)arg0;
- (void)setLoadConfigFromStorageLock:(id)arg0;
- (void)setBgIdentifierDicLock:(id)arg0;
- (void)setCheckCancelTaskDicLock:(id)arg0;
- (void)setUrgentModeTempRootDir:(id)arg0;
- (void)setDownloadStorageCenter:(id)arg0;
- (void)setDownloadGlobalParameter:(id)arg0;
- (void)setPreviousNetStatus:(long long)arg0;
- (void)setIsTryRestoreTaskWhenRestart:(BOOL)arg0;
- (void)setTncConfigManager:(id)arg0;
- (void)setLoadDataFromDBRetryTimes:(char)arg0;
- (void)setDownloaderTopDir:(id)arg0;
- (id)downloaderTopDir;
- (void)setLittleFileResumeTopDir:(id)arg0;
- (void)setLittleFileDownloaderTopDir:(id)arg0;
- (void)setAutoRestoreFlagsFile:(id)arg0;
- (void)setIsCheckCacheExpirationTime:(BOOL)arg0;
- (void)setDbFilePath:(id)arg0;
- (void)setStorageCenterLock:(id)arg0;
- (void)setIsDelayDeleting:(BOOL)arg0;
- (void)appReachabilityChanged:(id)arg0;
- (id)backgroundBlockDic;
- (BOOL)tryCreateDownloaderTopDir;
- (void)setIsAppBackground:(BOOL)arg0;
- (BOOL)isDelayBGTaskEnable;
- (void)setBackgroundRemainTime:(double)arg0;
- (void)runAllBackgroundBlock;
- (void)stopBGTaskStartTimer;
- (void)clearAllBackgroundBlock;
- (id)tncConfigManager;
- (BOOL)isForceCacheLifeTimeMaxEnable;
- (BOOL)checkInvalidValue:(id)arg0;
- (id)downloadGlobalParameter;
- (int)startDownloadCommon:(id)arg0 fileName:(id)arg1 md5Value:(id)arg2 urlLists:(id)arg3 isResume:(BOOL)arg4 isUseKey:(BOOL)arg5 progressCallBack:(id /* block */)arg6 resultNotificationCallBack:(id /* block */)arg7 userParameters:(id)arg8;
- (void)runQueryDownloadInfo:(id)arg0 status:(long long)arg1;
- (id)findDownloadingTaskInDicLock:(id)arg0;
- (BOOL)deleteCheckCancelTaskDicLock:(id)arg0;
- (void)runDeleteDownloadFile:(id)arg0;
- (id)loadConfigFromStorageLock;
- (id)downloadStorageCenter;
- (void)clearAllMemCache;
- (void)createDownloaderTopDirWithRetry;
- (id)downloadTaskConfigDicLock;
- (id)downloadTaskConfigDic;
- (id /* block */)onCompletionHandler;
- (BOOL)loadConfigFromStorage:(id)arg0;
- (id)findTaskConfigInDicLock:(id)arg0;
- (BOOL)updateParametersTable:(id)arg0 error:(id *)arg1;
- (BOOL)addCheckCancelTaskDicLock:(id)arg0;
- (id)getPcdnUrlsList:(id)arg0;
- (void)asyncStatusReport:(id)arg0 secondUrl:(id)arg1 status:(long long)arg2 resultBlock:(id /* block */)arg3 taskConfig:(id)arg4;
- (BOOL)getIsWifiOnlyEnable:(id)arg0;
- (BOOL)isHadLoadConfigFromStorage;
- (BOOL)addDownloadingTaskToDicLock:(id)arg0;
- (BOOL)findCheckCancelTaskDicLock:(id)arg0;
- (BOOL)deleteDownloadingTaskInDicLock:(id)arg0;
- (BOOL)addTaskConfigToDicLock:(id)arg0;
- (id)urgentModeTempRootDir;
- (BOOL)isClearAllCache;
- (void)checkDownloadTaskConfigDic:(id)arg0 errorArray:(id)arg1 cacheTotalSize:(long long *)arg2;
- (void)calculateDownloadSize:(id)arg0 taskConfig:(id)arg1;
- (void)cleanDBAndRebuild;
- (void)reportGlobalMetrics:(BOOL)arg0 cacheTotalSize:(long long)arg1;
- (id /* block */)onGlobalMetricsBlock;
- (long long)getAllCacheCount:(BOOL)arg0;
- (BOOL)deleteTaskConfigInDicLock:(id)arg0;
- (id)checkCancelTaskDicLock;
- (id)checkCancelTaskDic;
- (id)bgIdentifierDicLock;
- (id)bgIdentifierDic;
- (id)downloadingTaskDicLock;
- (id)downloadingTaskDic;
- (BOOL)updateDownloadTaskConfig:(id)arg0 status:(long long)arg1 error:(id *)arg2;
- (BOOL)deleteSubSliceInfo:(id)arg0 error:(id *)arg1;
- (void)appFinishLaunching;
- (id)autoRestoreFlagsFile;
- (void)restoreTask:(id)arg0 secondUrl:(id)arg1 resultNotification:(id /* block */)arg2 param:(id)arg3 progress:(id /* block */)arg4;
- (long long)previousNetStatus;
- (void)tryRestoreTask;
- (BOOL)isTryRestoreTaskWhenRestart;
- (void)restartAppTryRestroreTask;
- (char)getClearDelayTime;
- (void)startCleanOldCache:(double)arg0;
- (BOOL)isCleaningOldCache;
- (void)setIsCleaningOldCache:(BOOL)arg0;
- (void)postRestoreResultNotification:(id)arg0;
- (BOOL)isCheckCacheDirCompleted;
- (id)littleFileDownloaderTopDir;
- (int)littleFileCleanCacheCycleTime;
- (id)littleFileResumeTopDir;
- (BOOL)isDelayDeleting;
- (void)setIsCheckCacheDirCompleted:(BOOL)arg0;
- (void)tryCheckAndRebuildLittleFileTopDir;
- (id /* block */)bgCompletedHandler;
- (void)setBgCompletedHandler:(id /* block */)arg0;
- (BOOL)updateExtendConfigSync:(id)arg0 error:(id *)arg1;
- (void)setIsClearAllCache:(BOOL)arg0;
- (void)setIsClearNoExpireTimeCache:(BOOL)arg0;
- (BOOL)doClearCache:(long long)arg0 clearCacheKey:(id)arg1;
- (BOOL)isClearNoExpireTimeCache;
- (void)setOnGlobalMetricsBlock:(id /* block */)arg0;
- (void)setIsDelayBGTaskEnable:(BOOL)arg0;
- (BOOL)isCheckCacheExpirationTime;
- (void)addBackgroundBlock:(id)arg0 bgBlock:(id /* block */)arg1;
- (void)deleteBackgroundBlock:(id)arg0;
- (BOOL)getIsForceCacheLifeTimeMaxEnable;
- (BOOL)setGlobalDownloadParameters:(id)arg0;
- (id)getGlobalDownloadParameters;
- (int)startDownloadWithURL:(id)arg0 isUseKey:(BOOL)arg1 fileName:(id)arg2 md5Value:(id)arg3 urlLists:(id)arg4 progress:(id /* block */)arg5 status:(id /* block */)arg6 userParameters:(id)arg7;
- (int)resumeDownloadWithURL:(id)arg0 isUseKey:(BOOL)arg1 urlLists:(id)arg2 progress:(id /* block */)arg3 status:(id /* block */)arg4 userParameters:(id)arg5;
- (void)queryDownloadInfoWithURL:(id)arg0 downloadInfoBlock:(id /* block */)arg1 status:(long long)arg2;
- (BOOL)setThrottleNetSpeedWithURL:(id)arg0 bytesPerSecond:(long long)arg1;
- (void)cancelDownloadWithURL:(id)arg0 block:(id /* block */)arg1;
- (void)detectDownloaderTopDirAndDBFile;
- (BOOL)addDownloadTaskConfig:(id)arg0 error:(id *)arg1;
- (BOOL)removeDownloadTaskConfig:(id)arg0 error:(id *)arg1;
- (BOOL)findBgIdentifierDicLock:(id)arg0;
- (BOOL)addBgIdentifierDicLock:(id)arg0 value:(id)arg1;
- (BOOL)deleteBgIdentifierWithValueLock:(id)arg0;
- (BOOL)deleteBgIdentifierDicLock:(id)arg0;
- (void)clearBgIdentifierDicLock;
- (BOOL)updateDownloadingTaskInDicLock:(id)arg0;
- (unsigned long long)getDownloadingTaskDicCount;
- (BOOL)updateTaskConfigInDicLock:(id)arg0;
- (BOOL)addTrackModelToDB:(id)arg0;
- (BOOL)getTrackModelFromDBForTask:(id)arg0;
- (void)tryCreateLittleFileTopDir;
- (BOOL)updateSliceConfig:(id)arg0 taskConfig:(id)arg1 error:(id *)arg2;
- (void)runBgCompletedHandler;
- (void)stopClearNoExpireCache;
- (long long)getAllNoExpireTimeCacheCount;
- (void)setGlobalMetricsBlock:(id /* block */)arg0;
- (void)setAppSupportPath:(id)arg0;
- (BOOL)isAppBackground;
- (void)setIsForceCacheLifeTimeMaxEnable:(BOOL)arg0;
- (double)backgroundRemainTime;
- (void)setLittleFileCleanCacheCycleTime:(int)arg0;
- (char)loadDataFromDBRetryTimes;
- (BOOL)deleteDownloadFile:(id)arg0 isDeleteDB:(BOOL)arg1 isDeleteMergeFile:(BOOL)arg2 isDeleteSliceFile:(BOOL)arg3;
- (BOOL)insertOrUpdateSubSliceInfo:(id)arg0 error:(id *)arg1;
- (double)cacheLifeTimeMax;
- (id)fileManager;
- (id)init;
- (void)setDeviceID:(id)arg0;
- (void).cxx_destruct;
- (id)deviceID;
- (void)setEventBlock:(id /* block */)arg0;
- (void)setFileManager:(id)arg0;
- (id)dbFilePath;
- (id)cachePath;
- (id /* block */)eventBlock;
- (void)dealloc;
- (BOOL)deleteFile:(id)arg0;
- (void)applicationDidBecomeActive;
- (void)setCachePath:(id)arg0;
- (id)appSupportPath;

@end
