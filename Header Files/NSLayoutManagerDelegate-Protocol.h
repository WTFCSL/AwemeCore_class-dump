//
//     Generated by private class-dump
//

@protocol NSLayoutManagerDelegate <NSObject>

@optional

- (long long)layoutManager:(id)arg0 shouldUseAction:(long long)arg1 forControlCharacterAtIndex:(unsigned long long)arg2;
- (unsigned long long)layoutManager:(id)arg0 shouldGenerateGlyphs:(const unsigned short *)arg1 properties:(const long long *)arg2 characterIndexes:(const unsigned long long *)arg3 font:(id)arg4 forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg5;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })layoutManager:(id)arg0 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg1 forTextContainer:(id)arg2 proposedLineFragment:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 glyphPosition:(struct CGPoint { double x0; double x1; })arg4 characterIndex:(unsigned long long)arg5;
- (void)layoutManager:(id)arg0 didCompleteLayoutForTextContainer:(id)arg1 atEnd:(BOOL)arg2;
- (BOOL)layoutManager:(id)arg0 shouldSetLineFragmentRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)arg1 lineFragmentUsedRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)arg2 baselineOffset:(inout double *)arg3 inTextContainer:(id)arg4 forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg5;
- (double)layoutManager:(id)arg0 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (double)layoutManager:(id)arg0 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (double)layoutManager:(id)arg0 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (BOOL)layoutManager:(id)arg0 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg1;
- (BOOL)layoutManager:(id)arg0 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg1;
- (void)layoutManagerDidInvalidateLayout:(id)arg0;
- (void)layoutManager:(id)arg0 textContainer:(id)arg1 didChangeGeometryFromSize:(struct CGSize { double x0; double x1; })arg2;

@end
