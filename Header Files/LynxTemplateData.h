//
//     Generated by private class-dump
//

@class NSString, NSArray, NSMutableArray;

@interface LynxTemplateData : NSObject {
    struct shared_ptr<lynx::lepus::Value> { struct Value *__ptr_; struct __shared_weak_count *__cntrl_; } value_;
    NSString *_processerName;
    BOOL _readOnly;
    struct Value { union { struct Dictionary *val_table_; struct StringImpl *val_str_; struct LEPUSObject *val_jsobject_; struct ByteArray *val_bytearray_; struct RefCountedThreadSafeStorage *val_ref_counted_; struct CArray *val_carray_; struct CDate *val_date_; struct RegExp *val_regexp_; struct Closure *val_closure_; double val_double_; int val_int32_t_; unsigned int val_uint32_t_; unsigned long long val_uint64_t_; long long val_int64_t_; BOOL val_bool_; void *val_ptr_; BOOL val_nan_; } ; struct ContextCell *cell_; union { int type_; int tag_; } ; struct GCPersistent *p_val_; } value_for_js_;
    NSMutableArray *_updateActions;
}

@property (readonly) NSString *processorName;
@property (readonly) NSArray *updateActions;

- (id)deepClone;
- (void)updateObject:(id)arg0 forKey:(id)arg1;
- (void)updateInteger:(long long)arg0 forKey:(id)arg1;
- (void)updateWithTemplateData:(id)arg0;
- (void)updateWithJson:(id)arg0;
- (void)markState:(id)arg0;
- (void)updateWithLepusValue:(struct Value { union { struct Dictionary *x0; struct StringImpl *x1; struct LEPUSObject *x2; struct ByteArray *x3; struct RefCountedThreadSafeStorage *x4; struct CArray *x5; struct CDate *x6; struct RegExp *x7; struct Closure *x8; double x9; int x10; unsigned int x11; unsigned long long x12; long long x13; BOOL x14; void *x15; BOOL x16; } x0; struct ContextCell *x1; union { int x0; int x1; } x2; struct GCPersistent *x3; } *)arg0;
- (BOOL)checkIsLegalData;
- (void)setObject:(id)arg0 withKey:(id)arg1;
- (void)updateBool:(BOOL)arg0 forKey:(id)arg1;
- (void)updateDouble:(double)arg0 forKey:(id)arg1;
- (struct Value { union { struct Dictionary *x0; struct StringImpl *x1; struct LEPUSObject *x2; struct ByteArray *x3; struct RefCountedThreadSafeStorage *x4; struct CArray *x5; struct CDate *x6; struct RegExp *x7; struct Closure *x8; double x9; int x10; unsigned int x11; unsigned long long x12; long long x13; BOOL x14; void *x15; BOOL x16; } x0; struct ContextCell *x1; union { int x0; int x1; } x2; struct GCPersistent *x3; })getDataForJSThread;
- (BOOL)isReadOnly;
- (id)init;
- (void)updateWithDictionary:(id)arg0;
- (void).cxx_destruct;
- (void)markReadOnly;
- (id)initWithDictionary:(id)arg0;
- (id)dictionary;
- (id).cxx_construct;
- (id)updateActions;
- (id)processorName;
- (id)initWithJson:(id)arg0;

@end
