//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSSet, NSMutableSet, NSDictionary, NSMutableArray;

@interface IESLiveEffectConflictProcessModel : NSObject <NSCopying> {
    NSMutableDictionary *_sceneAppliedEffects;
    NSMutableSet *_realAppliedScene;
    NSMutableArray *_sceneApplySequence;
    NSSet *_moduleResumeRules;
    NSSet *_moduleConflictRules;
    NSSet *_effectConflictRules;
    NSDictionary *_sceneToModuleDict;
    NSMutableDictionary *_intensityDict;
    NSMutableDictionary *_tagsDict;
    NSDictionary *_updatedStatus;
}

@property (retain, nonatomic) NSMutableDictionary *sceneAppliedEffects;
@property (retain, nonatomic) NSMutableSet *realAppliedScene;
@property (retain, nonatomic) NSMutableArray *sceneApplySequence;
@property (retain, nonatomic) NSSet *moduleResumeRules;
@property (retain, nonatomic) NSSet *moduleConflictRules;
@property (retain, nonatomic) NSSet *effectConflictRules;
@property (retain, nonatomic) NSDictionary *sceneToModuleDict;
@property (retain, nonatomic) NSMutableDictionary *intensityDict;
@property (retain, nonatomic) NSMutableDictionary *tagsDict;
@property (retain, nonatomic) NSDictionary *updatedStatus;

+ (id)keyForEffect:(id)arg0 tag:(id)arg1;
+ (id)stringForStatus:(long long)arg0;

- (void)transToLiveStatus;
- (id)sceneAppliedEffects;
- (id)realAppliedScene;
- (id)sceneApplySequence;
- (id)moduleForScene:(long long)arg0;
- (id)tagsDict;
- (id)intensityDict;
- (BOOL)checkSceneConflictCurScene:(long long)arg0 conflictScene:(long long)arg1;
- (BOOL)shouldResumeAfterConflict:(long long)arg0 resumeScene:(long long)arg1;
- (id)effectsAppendSuffix:(id)arg0 isApply:(BOOL)arg1;
- (void)removeSceneInfo:(long long)arg0;
- (BOOL)checkSceneConflictByRealAppliedEffects:(long long)arg0;
- (id)ruleDictToRuleSet:(id)arg0;
- (void)setModuleResumeRules:(id)arg0;
- (void)setModuleConflictRules:(id)arg0;
- (void)setEffectConflictRules:(id)arg0;
- (void)setSceneAppliedEffects:(id)arg0;
- (void)setRealAppliedScene:(id)arg0;
- (void)setSceneApplySequence:(id)arg0;
- (id)moduleResumeRules;
- (id)moduleConflictRules;
- (id)effectConflictRules;
- (id)sceneToModuleDict;
- (void)setSceneToModuleDict:(id)arg0;
- (void)setIntensityDict:(id)arg0;
- (void)setTagsDict:(id)arg0;
- (id)keyForModule:(id)arg0 conflictModule:(id)arg1;
- (BOOL)sceneIsApplied:(long long)arg0;
- (long long)repelValueForScene:(long long)arg0;
- (void)updateEffect:(id)arg0 tag:(id)arg1 value:(double)arg2;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)setUpdatedStatus:(id)arg0;
- (id)updatedStatus;

@end
