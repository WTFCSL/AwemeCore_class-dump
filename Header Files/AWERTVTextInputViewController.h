//
//     Generated by private class-dump
//

@class NSString, UIView, AWEGrowingTextView, UIButton;
@protocol AWEIMLittleEmoticonMatcher, RTVColorAdaptorInterface, RTVXRControllerInjector, RTVVoipResourceFetcherInterface, RTVTextInputControllerDelegate, AWEIMEmoticonContainerViewProtocol;

@interface AWERTVTextInputViewController : UIViewController <AWEGrowingTextViewDelegate, AWEIMEmoticonKeyBoardDelegate, RTVTextInputController> {
    id<RTVTextInputControllerDelegate> delegate;
    AWEGrowingTextView *_textView;
    long long _currentInputType;
    long long _oldInputType;
    id<RTVXRControllerInjector> _controllerInjector;
    id<RTVColorAdaptorInterface> _colorAdaptor;
    id<RTVVoipResourceFetcherInterface> _resourceFetcher;
    id<AWEIMLittleEmoticonMatcher> _emoticonDataManager;
    UIView *_inputBar;
    UIView *_keyboardContainerView;
    UIView<AWEIMEmoticonContainerViewProtocol> *_emoticonView;
    UIButton *_emoticonBtn;
    UIButton *_sendBtn;
    struct UIEdgeInsets { double top; double left; double bottom; double right; } contentInsets;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _keyboardBounds;
}

@property (retain, nonatomic) AWEGrowingTextView *textView;
@property (nonatomic) long long currentInputType;
@property (nonatomic) long long oldInputType;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (readonly, nonatomic) id<RTVColorAdaptorInterface> colorAdaptor;
@property (readonly, nonatomic) id<RTVVoipResourceFetcherInterface> resourceFetcher;
@property (readonly, nonatomic) id<AWEIMLittleEmoticonMatcher> emoticonDataManager;
@property (retain, nonatomic) UIView *inputBar;
@property (retain, nonatomic) UIView *keyboardContainerView;
@property (retain, nonatomic) UIView<AWEIMEmoticonContainerViewProtocol> *emoticonView;
@property (retain, nonatomic) UIButton *emoticonBtn;
@property (retain, nonatomic) UIButton *sendBtn;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } keyboardBounds;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<RTVTextInputControllerDelegate> delegate;
@property (nonatomic) struct UIEdgeInsets { double top; double left; double bottom; double right; } contentInsets;

- (void)growingTextViewDidChange:(id)arg0;
- (void)growingTextView:(id)arg0 willChangeHeight:(float)arg1;
- (BOOL)growingTextView:(id)arg0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 replacementText:(id)arg2;
- (void)rtv_awakeFromControllerInjector;
- (void)__addObservers;
- (id)resourceFetcher;
- (void)__layoutComponents;
- (void)setEmoticonView:(id)arg0;
- (id)emoticonView;
- (void)emoticonView:(id)arg0 didSelectEmoticon:(id)arg1 theme:(id)arg2 themeView:(id)arg3;
- (void)emoticonViewDidSelectDelete:(id)arg0;
- (void)emoticonViewDidSendText:(id)arg0;
- (void)handleKeyboardShowNoti:(id)arg0;
- (void)handleKeyboardHideNoti:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })keyboardBounds;
- (void)setKeyboardBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)__configComponents;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inputVCFoldedFrame;
- (void)setInputBar:(id)arg0;
- (id)inputBar;
- (id)controllerInjector;
- (id)emoticonDataManager;
- (double)defaultInputHeight;
- (void)__removeObservers;
- (void)__createComponnets;
- (id)colorAdaptor;
- (id)keyboardContainerView;
- (void)emoticonBtnClicked:(id)arg0;
- (id)emoticonBtn;
- (void)sendBtnClicked:(id)arg0;
- (id)sendBtn;
- (double)emoticonContentViewHeight;
- (void)setCurrentInputType:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inputVCFoldedFrame:(double)arg0;
- (void)setOldInputType:(long long)arg0;
- (void)resetButtonsSelected;
- (void)refreshInputVCFrame:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })inputVCUnfoldFrame:(double)arg0;
- (void)updateRightButtonsBottom;
- (BOOL)__checkTextViewTextMessageLength;
- (void)sendTextViewTextMessage;
- (void)__layoutSubviews;
- (void)didUpdateInputVCFrame;
- (BOOL)__successRefreshTextViewUI;
- (long long)oldInputType;
- (void)setKeyboardContainerView:(id)arg0;
- (void)setEmoticonBtn:(id)arg0;
- (void)setSendBtn:(id)arg0;
- (id)textView;
- (long long)currentInputType;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (void)showKeyboard;
- (void)hideKeyboard;
- (id)delegate;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })contentInsets;
- (void)setTextView:(id)arg0;
- (void)setContentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg0;
- (void)viewWillAppear:(BOOL)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (id)inputText;

@end
