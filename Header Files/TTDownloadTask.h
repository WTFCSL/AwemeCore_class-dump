//
//     Generated by private class-dump
//

@class NSURL, DownloadGlobalParameters, NSObject, TTDownloadTaskConfig, TTDownloadLogLite, TTDownloadTrackModel, NSMutableArray, DownloadResultNotification, NSString, TTSpeedMonitor, NSArray, TTDownloadDynamicThrottle, TTDownloadTaskExtendConfig, NSLock, DownloadProgressInfo;
@protocol OS_dispatch_source, TTDownloadTaskProtocol, OS_dispatch_semaphore;

@interface TTDownloadTask : NSObject {
    BOOL _isAppAtBackground;
    char _backgroundDownloadedCounter;
    char _backgroundFailedCounter;
    BOOL _isRestartTask;
    BOOL _isMobileSwitchToWifiCancel;
    BOOL _isWifiOnlyCancel;
    BOOL _isCancelTask;
    BOOL _isSkipGetContentLength;
    BOOL _isBackgroundMerging;
    BOOL _isStopWhileLoop;
    BOOL _isServerSupportAcceptRange;
    BOOL _isRetryCanRestore;
    BOOL _isSkipSSLErrorInternal;
    BOOL _isResume;
    BOOL _isUseKey;
    char _getLengthRetryMax;
    BOOL _isStartDownloadingFlag;
    BOOL _isDelete;
    char _sliceDownloadEndCount;
    BOOL _isAppBeActiveSemWait;
    BOOL _isTrackerEnable;
    BOOL _isReportTrackerEnable;
    BOOL _isServerSupportRangeDefault;
    BOOL _isDynamicThrottleEnable;
    BOOL _isCacheInvalid;
    BOOL _isContentLengthInvalid;
    BOOL _isFileSizeOverflow;
    BOOL _isCheckRangeFailed;
    BOOL _isRcvHeaderCallback;
    BOOL _isCheckCacheFromNet;
    BOOL _isMergingSlicesAtForeground;
    BOOL _isNoNetCancel;
    BOOL _tracker_opt_enable;
    int _realSliceCount;
    int _sliceCountHasDownloaded;
    int _sliceCancelCount;
    int _sliceDownloadFailedCount;
    int _pcdnTaskCount;
    int _cdnTaskCount;
    NSString *_urlKey;
    NSURL *_url;
    NSString *_secondUrl;
    long long _firstSliceNeedDownloadLength;
    DownloadGlobalParameters *_userParameters;
    TTDownloadTaskConfig *_taskConfig;
    TTDownloadTrackModel *_trackModel;
    NSString *_downloadTaskFullPath;
    NSString *_downloadTaskSliceFullPath;
    NSObject<OS_dispatch_semaphore> *_backgroundTaskCancelSem;
    long long _needDownloadLengthTotal;
    long long _contentTotalLength;
    id /* block */ _progressBlock;
    id /* block */ _resultBlock;
    id /* block */ _onHeaderCallback;
    TTDownloadTaskExtendConfig *_originExtendConfig;
    NSObject<OS_dispatch_semaphore> *_sem;
    TTDownloadLogLite *_dllog;
    long long _netErrorCode;
    id /* block */ _onPcdnStart;
    id /* block */ _onPcdnEnd;
    id /* block */ _onCdnStart;
    id /* block */ _onCdnEnd;
    NSObject<OS_dispatch_source> *_timer;
    NSArray *_urlLists;
    NSString *_fileName;
    long long _throttleNetSpeed;
    DownloadResultNotification *_resultNotification;
    DownloadProgressInfo *_progressInfo;
    NSString *_cacheFullPath;
    NSString *_cacheBackupDir;
    NSMutableArray *_downloadSliceTaskArray;
    NSMutableArray *_downloadSliceBgTaskArray;
    NSMutableArray *_httpResponseArray;
    NSObject<OS_dispatch_semaphore> *_getContentLengthSem;
    NSString *_fileMd5Value;
    long long _lastHadDownloadedLength;
    id<TTDownloadTaskProtocol> _requestTask;
    long long _currentNetType;
    TTDownloadDynamicThrottle *_dynamicThrottle;
    NSString *_etag;
    NSString *_lastModifiedTime;
    NSString *_maxAgeTime;
    NSString *_originEtag;
    NSString *_originMaxAge;
    id /* block */ _TTMd5Callback;
    unsigned long long _backgroundTempTask;
    double _pcdnTotalTime;
    double _pcdnStartTime;
    double _cdnTotalTime;
    double _cdnStartTime;
    NSLock *_pcdnLock;
    TTSpeedMonitor *_speedMonitor;
    long long _originOffset;
    double _startDownloadTime;
}

@property (retain, nonatomic) NSObject<OS_dispatch_source> *timer;
@property (copy, nonatomic) NSArray *urlLists;
@property (copy, nonatomic) NSString *fileName;
@property (nonatomic) BOOL isResume;
@property (nonatomic) BOOL isUseKey;
@property (nonatomic) char getLengthRetryMax;
@property (nonatomic) BOOL isStartDownloadingFlag;
@property (nonatomic) long long throttleNetSpeed;
@property (retain, nonatomic) DownloadResultNotification *resultNotification;
@property (retain, nonatomic) DownloadProgressInfo *progressInfo;
@property (copy, nonatomic) NSString *cacheFullPath;
@property (copy, nonatomic) NSString *cacheBackupDir;
@property int sliceCountHasDownloaded;
@property int sliceCancelCount;
@property int sliceDownloadFailedCount;
@property (retain) NSMutableArray *downloadSliceTaskArray;
@property (retain) NSMutableArray *downloadSliceBgTaskArray;
@property (retain) NSMutableArray *httpResponseArray;
@property BOOL isDelete;
@property (retain) NSObject<OS_dispatch_semaphore> *getContentLengthSem;
@property (copy) NSString *fileMd5Value;
@property (nonatomic) long long lastHadDownloadedLength;
@property (nonatomic) char sliceDownloadEndCount;
@property (retain) id<TTDownloadTaskProtocol> requestTask;
@property BOOL isAppBeActiveSemWait;
@property long long currentNetType;
@property BOOL isTrackerEnable;
@property BOOL isReportTrackerEnable;
@property BOOL isServerSupportRangeDefault;
@property (retain) TTDownloadDynamicThrottle *dynamicThrottle;
@property BOOL isDynamicThrottleEnable;
@property (copy) NSString *etag;
@property (copy) NSString *lastModifiedTime;
@property (copy) NSString *maxAgeTime;
@property BOOL isCacheInvalid;
@property BOOL isContentLengthInvalid;
@property BOOL isFileSizeOverflow;
@property BOOL isCheckRangeFailed;
@property BOOL isRcvHeaderCallback;
@property BOOL isCheckCacheFromNet;
@property (copy) NSString *originEtag;
@property (copy) NSString *originMaxAge;
@property BOOL isMergingSlicesAtForeground;
@property BOOL isNoNetCancel;
@property (copy, nonatomic) id /* block */ TTMd5Callback;
@property BOOL isSkipSSLErrorInternal;
@property unsigned long long backgroundTempTask;
@property (nonatomic) int pcdnTaskCount;
@property (nonatomic) int cdnTaskCount;
@property (nonatomic) double pcdnTotalTime;
@property (nonatomic) double pcdnStartTime;
@property (nonatomic) double cdnTotalTime;
@property (nonatomic) double cdnStartTime;
@property (retain) NSLock *pcdnLock;
@property (retain, nonatomic) TTSpeedMonitor *speedMonitor;
@property (nonatomic) BOOL tracker_opt_enable;
@property (nonatomic) long long originOffset;
@property (nonatomic) double startDownloadTime;
@property (copy) NSString *urlKey;
@property (retain) NSURL *url;
@property (copy) NSString *secondUrl;
@property (nonatomic) long long firstSliceNeedDownloadLength;
@property (retain) DownloadGlobalParameters *userParameters;
@property (retain) TTDownloadTaskConfig *taskConfig;
@property (retain) TTDownloadTrackModel *trackModel;
@property (copy) NSString *downloadTaskFullPath;
@property (copy) NSString *downloadTaskSliceFullPath;
@property BOOL isAppAtBackground;
@property (retain) NSObject<OS_dispatch_semaphore> *backgroundTaskCancelSem;
@property char backgroundDownloadedCounter;
@property char backgroundFailedCounter;
@property BOOL isRestartTask;
@property BOOL isMobileSwitchToWifiCancel;
@property BOOL isWifiOnlyCancel;
@property BOOL isCancelTask;
@property BOOL isSkipGetContentLength;
@property BOOL isBackgroundMerging;
@property BOOL isStopWhileLoop;
@property BOOL isServerSupportAcceptRange;
@property (nonatomic) long long needDownloadLengthTotal;
@property long long contentTotalLength;
@property (nonatomic) int realSliceCount;
@property (copy) id /* block */ progressBlock;
@property (copy) id /* block */ resultBlock;
@property (copy, nonatomic) id /* block */ onHeaderCallback;
@property (retain) TTDownloadTaskExtendConfig *originExtendConfig;
@property (retain) NSObject<OS_dispatch_semaphore> *sem;
@property (retain) TTDownloadLogLite *dllog;
@property BOOL isRetryCanRestore;
@property long long netErrorCode;
@property (copy) id /* block */ onPcdnStart;
@property (copy) id /* block */ onPcdnEnd;
@property (copy) id /* block */ onCdnStart;
@property (copy) id /* block */ onCdnEnd;

+ (double)getDownloadCacheLifeTimeMax:(id)arg0 downloadUrl:(id)arg1;
+ (id)getUrgentModeHeaders:(id)arg0 cacheHeaders:(id)arg1 downloadUrl:(id)arg2;

- (id)taskConfig;
- (void)endBackgroundUpdateTask;
- (void)setBackgroundTempTask:(unsigned long long)arg0;
- (unsigned long long)backgroundTempTask;
- (void)setThrottleNetSpeed:(long long)arg0;
- (void)setIsSkipGetContentLength:(BOOL)arg0;
- (void)setIsServerSupportRangeDefault:(BOOL)arg0;
- (void)setTTMd5Callback:(id /* block */)arg0;
- (BOOL)isServerSupportRangeDefault;
- (BOOL)isIgnoreMaxAgeCheck;
- (id /* block */)TTMd5Callback;
- (void)appReachabilityChanged:(id)arg0;
- (BOOL)tryRestoreTask;
- (BOOL)isSkipGetContentLength;
- (long long)throttleNetSpeed;
- (double)startDownloadTime;
- (void)setStartDownloadTime:(double)arg0;
- (void)setTrackModel:(id)arg0;
- (id)trackModel;
- (id)httpResponseArray;
- (void)deleteTask:(id /* block */)arg0;
- (void)setHttpResponseArray:(id)arg0;
- (void)setIsWifiOnlyCancel:(BOOL)arg0;
- (id)initWithObjectDownloadTaskConfig:(id)arg0;
- (void)startTask:(id)arg0 urlLists:(id)arg1 fileName:(id)arg2 md5Value:(id)arg3 isResume:(BOOL)arg4 isUseKey:(BOOL)arg5 progressBlock:(id /* block */)arg6 resultBlock:(id /* block */)arg7;
- (void)sliceCountHasDownloadedIncrease;
- (void)backgroundDownloadedCounterIncrease;
- (id)downloadTaskSliceFullPath;
- (BOOL)isServerSupportAcceptRange;
- (BOOL)isRangeDownloadEnable;
- (long long)getStartOffset;
- (int)realSliceCount;
- (void)setRealSliceCount:(int)arg0;
- (void)updateDownloadTaskStatus:(long long)arg0;
- (long long)firstSliceNeedDownloadLength;
- (long long)needDownloadLengthTotal;
- (void)setNeedDownloadLengthTotal:(long long)arg0;
- (long long)contentTotalLength;
- (void)setContentTotalLength:(long long)arg0;
- (id)secondUrl;
- (void)setSecondUrl:(id)arg0;
- (void)setIsResume:(BOOL)arg0;
- (void)setIsUseKey:(BOOL)arg0;
- (void)setIsStartDownloadingFlag:(BOOL)arg0;
- (void)setIsCancelTask:(BOOL)arg0;
- (void)setIsServerSupportAcceptRange:(BOOL)arg0;
- (void)setSliceCancelCount:(int)arg0;
- (void)setSliceCountHasDownloaded:(int)arg0;
- (void)setSliceDownloadFailedCount:(int)arg0;
- (void)setGetLengthRetryMax:(char)arg0;
- (void)setTaskConfig:(id)arg0;
- (void)setDownloadSliceTaskArray:(id)arg0;
- (void)setDownloadSliceBgTaskArray:(id)arg0;
- (void)setLastHadDownloadedLength:(long long)arg0;
- (void)setSliceDownloadEndCount:(char)arg0;
- (id)createSemWithRetry;
- (void)setBackgroundTaskCancelSem:(id)arg0;
- (void)setDllog:(id)arg0;
- (void)setIsRetryCanRestore:(BOOL)arg0;
- (void)setPcdnLock:(id)arg0;
- (void)setTracker_opt_enable:(BOOL)arg0;
- (int)sliceCountHasDownloaded;
- (int)sliceCancelCount;
- (int)sliceDownloadFailedCount;
- (BOOL)isTrackerEnable;
- (char)backgroundDownloadedCounter;
- (void)setBackgroundDownloadedCounter:(char)arg0;
- (char)backgroundFailedCounter;
- (void)setBackgroundFailedCounter:(char)arg0;
- (void)setUrlLists:(id)arg0;
- (id)urlLists;
- (long long)getThrottleNetSpeed;
- (void)setFileMd5Value:(id)arg0;
- (void)setResultNotification:(id)arg0;
- (id)resultNotification;
- (BOOL)getIsSkipSSLError;
- (void)setIsSkipSSLErrorInternal:(BOOL)arg0;
- (void)startTaskImpl;
- (BOOL)tracker_opt_enable;
- (void)refreshTrackModel:(id)arg0;
- (id)createTrackModel;
- (BOOL)isUseKey;
- (id)fileMd5Value;
- (char)getUrlRetryTimes;
- (long long)getContentLengthWaitMaxInterval;
- (char)getSliceMaxRetryTimes;
- (long long)getSliceMaxNumber;
- (double)getRetryTimeoutInterval;
- (double)getRetryTimeoutIntervalIncrement;
- (BOOL)getIsHttps2HttpFallback;
- (BOOL)getIsDownloadWifiOnly;
- (char)getRestoreTimesAutomatic;
- (BOOL)getIsBackgroundDownloadEnable;
- (BOOL)replaceScheme:(id)arg0;
- (BOOL)httpsDegrade;
- (BOOL)getContentLengthWithRetry:(id)arg0;
- (BOOL)isCancelTask;
- (void)setGetContentLengthSem:(id)arg0;
- (void)getContentLength:(id)arg0;
- (id)getContentLengthSem;
- (BOOL)isContentLengthInvalid;
- (BOOL)isFileSizeOverflow;
- (long long)getRangeLength:(long long)arg0 endRange:(long long)arg1;
- (BOOL)isRetryCanRestore;
- (void)setIsFileSizeOverflow:(BOOL)arg0;
- (BOOL)isPreCheckFileLength;
- (void)setIsContentLengthInvalid:(BOOL)arg0;
- (void)setLastModifiedTime:(id)arg0;
- (void)setMaxAgeTime:(id)arg0;
- (BOOL)getIsCheckCacheValid;
- (void)checkCache;
- (id)originExtendConfig;
- (id)maxAgeTime;
- (BOOL)getIsRetainCacheIfCheckFailed;
- (void)setIsCacheInvalid:(BOOL)arg0;
- (void)getHeaderFields:(id)arg0;
- (void)addHttpResponse:(id)arg0;
- (id)dllog;
- (void)setNetErrorCode:(long long)arg0;
- (id)setRangeAndMergeUserHeader;
- (BOOL)getIsCommonParamEnable;
- (short)getTTNetProtectTimeout;
- (short)getTTNetRcvHeaderTimeout;
- (short)getTTNetReadDataTimeout;
- (short)getTTNetRequestTimeout;
- (void)updateSliceConfig;
- (BOOL)isCheckCacheFromNet;
- (id)getMaxAgeTiming:(id)arg0;
- (void)setIsCheckCacheFromNet:(BOOL)arg0;
- (void)setOriginExtendConfig:(id)arg0;
- (void)updateContentLength:(id)arg0;
- (void)updateSupportRange;
- (BOOL)rangeCheck:(BOOL)arg0 contentLength:(long long)arg1 startOffset:(long long)arg2 endOffset:(long long)arg3;
- (void)setIsCheckRangeFailed:(BOOL)arg0;
- (void)setIsRcvHeaderCallback:(BOOL)arg0;
- (void)setFirstSliceNeedDownloadLength:(long long)arg0;
- (BOOL)getIsSliced;
- (long long)getMinDevisionSize;
- (void)countSliceNumberAndSize;
- (void)fillSliceInfo;
- (void)setDownloadTaskFullPath:(id)arg0;
- (id)downloadTaskFullPath;
- (void)setDownloadTaskSliceFullPath:(id)arg0;
- (void)setCacheBackupDir:(id)arg0;
- (id)cacheBackupDir;
- (void)setCacheFullPath:(id)arg0;
- (void)fillSliceThrottleNetSpeed:(int)arg0;
- (id)downloadSliceTaskArray;
- (id)cacheFullPath;
- (void)setIsMergingSlicesAtForeground:(BOOL)arg0;
- (long long)mergeAllSlice;
- (void)processFinishEventIsSaveDB:(BOOL)arg0;
- (void)asyncStatusReport:(long long)arg0;
- (void)processFailEventWithCode:(long long)arg0 failMsg:(id)arg1 isSaveDB:(BOOL)arg2;
- (void)clearTaskConfig;
- (BOOL)isRestartTask;
- (BOOL)isAppAtBackground;
- (BOOL)isMobileSwitchToWifiCancel;
- (void)setIsMobileSwitchToWifiCancel:(BOOL)arg0;
- (BOOL)restartTask;
- (BOOL)isNoNetCancel;
- (BOOL)isWifiOnlyCancel;
- (BOOL)isCheckRangeFailed;
- (void)onDownloadProcessEnd;
- (id)mergePcdnTracker;
- (void)onceRunInTimer;
- (long long)netErrorCode;
- (long long)lastHadDownloadedLength;
- (void)tryUpdateIsCanRetry;
- (void)checkUserPathAndTryToMove:(long long)arg0;
- (BOOL)isDynamicThrottleEnable;
- (void)tryDynamicThrottle;
- (id)dynamicThrottle;
- (void)fetchDownloadProgressInfo;
- (id)speedMonitor;
- (void)resetDownloadTaskConfig;
- (BOOL)fillSliceInfoByRealFileSize:(BOOL)arg0 nserror:(id *)arg1;
- (id)downloadSliceBgTaskArray;
- (BOOL)isMergingSlicesAtForeground;
- (BOOL)checkBackgroundDownloadFinished;
- (void)setIsBackgroundMerging:(BOOL)arg0;
- (void)setIsStopWhileLoop:(BOOL)arg0;
- (id)backgroundTaskCancelSem;
- (void)setRestartImmediately;
- (void)setIsAppAtBackground:(BOOL)arg0;
- (id /* block */)onHeaderCallback;
- (BOOL)isRcvHeaderCallback;
- (BOOL)isSkipSSLErrorInternal;
- (BOOL)isBackgroundMerging;
- (void)delayStartBackground;
- (void)startBackgroundDownload;
- (BOOL)isAppBeActiveSemWait;
- (void)setIsRestartTask:(BOOL)arg0;
- (void)ignoreFgTaskCallback;
- (void)cancelTaskWithNeedTrack:(BOOL)arg0;
- (BOOL)startBackgroundTaskImpl;
- (void)cancelAllBackgroundTask;
- (void)setIsAppBeActiveSemWait:(BOOL)arg0;
- (void)ignoreAllBackgroundTask;
- (BOOL)tryContinueForegroundDownloading;
- (void)setIsNoNetCancel:(BOOL)arg0;
- (long long)currentNetType;
- (BOOL)getIsRestartImmediatelyWhenNetworkChange;
- (void)setCurrentNetType:(long long)arg0;
- (BOOL)getIsUseTracker;
- (void)setIsTrackerEnable:(BOOL)arg0;
- (BOOL)setThrottleNetSpeed2:(long long)arg0;
- (void)setDynamicThrottle:(id)arg0;
- (BOOL)isCacheInvalid;
- (void)urgentModeProgressReport:(id)arg0;
- (void)syncUrgentModeStatusReport:(long long)arg0 fullPath:(id)arg1;
- (void)mergeTncAndUserConfig;
- (id)pcdnLock;
- (int)pcdnTaskCount;
- (void)setPcdnStartTime:(double)arg0;
- (void)setPcdnTaskCount:(int)arg0;
- (double)pcdnStartTime;
- (double)pcdnTotalTime;
- (void)setPcdnTotalTime:(double)arg0;
- (int)cdnTaskCount;
- (void)setCdnStartTime:(double)arg0;
- (void)setCdnTaskCount:(int)arg0;
- (double)cdnStartTime;
- (void)trySwitchCdnType;
- (void)setSpeedMonitor:(id)arg0;
- (void)initTask;
- (BOOL)getIsTTNetUrgentModeEnable;
- (BOOL)callTTNetInterface;
- (void)getFullPath;
- (void)configTrackModel;
- (void)processCreateEventIsSaveDB:(BOOL)arg0;
- (BOOL)isResume;
- (void)applicationEnterBackground_;
- (void)applicationDidBecomeActive_;
- (void)checkDownloadDir;
- (BOOL)getIsUrgentModeEnable;
- (BOOL)getIsClearCacheIfNoMaxAge;
- (long long)checkCacheFromNet;
- (BOOL)getIsSkipGetContentLength;
- (void)deleteDownloadDir;
- (void)processStartEventIsSaveDB:(BOOL)arg0;
- (void)processFirstStartEventIsSaveDB:(BOOL)arg0;
- (BOOL)getIsServerSupportRangeDefault;
- (BOOL)parserHeader:(id)arg0;
- (BOOL)checkCacheInHeaderCallback;
- (void)setOnHeaderCallback:(id /* block */)arg0;
- (BOOL)calculateContentLength;
- (BOOL)createDownloadTaskConfig;
- (BOOL)createDownloadTaskDir;
- (BOOL)createRestoreFlags;
- (void)getDownloadInfo:(long long *)arg0 totalLen:(long long *)arg1;
- (BOOL)createSliceDownloadTask;
- (void)setIsDynamicThrottleEnable:(BOOL)arg0;
- (void)createDynamicThrottle;
- (void)downloadResultReport:(long long)arg0 reportStatusCode:(long long)arg1;
- (BOOL)isStopWhileLoop;
- (BOOL)checkDownloadFinished;
- (id)createNewFgSliceTask:(id)arg0;
- (long long)getRetryInterval:(id)arg0;
- (BOOL)isStartDownloadingFlag;
- (void)checkAndAdjustThrottleSpeed;
- (char)sliceDownloadEndCount;
- (BOOL)isNeedBalanceThrottleSpeed;
- (long long)getSliceTaskDiskStrictEnableSize;
- (long long)mergeSubSliceDiskStrictImpl;
- (long long)mergeSubSliceStableImpl;
- (long long)getMergeDataLength;
- (BOOL)checkLastSubSlice;
- (long long)mergeSubSliceImpl;
- (void)p_sendMergeAllSliceEventWithStartInterval:(double)arg0;
- (long long)md5Check:(id)arg0;
- (void)processCancelEventIsSaveDB:(BOOL)arg0;
- (long long)getRealNetSpeed:(long long)arg0;
- (double)cdnTotalTime;
- (void)sliceCancelCountIncrease;
- (void)sliceDownloadFailedCountIncrease;
- (void)addBackgroundDownloadedBytes:(long long)arg0;
- (void)backgroundFailedCounterIncrease;
- (BOOL)isFreeSpaceEnough:(long long)arg0;
- (BOOL)getIsBackgroundDownloadWifiOnlyDisable;
- (char)getLengthRetryMax;
- (BOOL)isReportTrackerEnable;
- (void)setIsReportTrackerEnable:(BOOL)arg0;
- (id)originMaxAge;
- (void)setOriginMaxAge:(id)arg0;
- (void)setCdnTotalTime:(double)arg0;
- (void)setOnPcdnStart:(id /* block */)arg0;
- (void)setOnPcdnEnd:(id /* block */)arg0;
- (void)setOnCdnStart:(id /* block */)arg0;
- (void)setOnCdnEnd:(id /* block */)arg0;
- (id /* block */)onPcdnEnd;
- (id /* block */)onCdnEnd;
- (id /* block */)onPcdnStart;
- (id /* block */)onCdnStart;
- (void)setUserParameters:(id)arg0;
- (void)setThrottleSpeed:(long long)arg0;
- (id)sem;
- (id)timer;
- (void)setRequestTask:(id)arg0;
- (void)startTimer;
- (void).cxx_destruct;
- (void)setResultBlock:(id /* block */)arg0;
- (id)fileName;
- (id)etag;
- (void)setUrl:(id)arg0;
- (void)setFileName:(id)arg0;
- (void)setBlock:(id /* block */)arg0;
- (void)setProgressBlock:(id /* block */)arg0;
- (void)setTimer:(id)arg0;
- (id)requestTask;
- (id /* block */)progressBlock;
- (void)setSem:(id)arg0;
- (BOOL)isDelete;
- (void)setIsDelete:(BOOL)arg0;
- (void)dealloc;
- (void)setEtag:(id)arg0;
- (id)url;
- (id /* block */)resultBlock;
- (id)userParameters;
- (void)cancelTask;
- (id)progressInfo;
- (void)setProgressInfo:(id)arg0;
- (id)lastModifiedTime;
- (id)urlKey;
- (void)setUrlKey:(id)arg0;
- (long long)originOffset;
- (void)setOriginOffset:(long long)arg0;
- (id)originEtag;
- (void)setOriginEtag:(id)arg0;

@end
