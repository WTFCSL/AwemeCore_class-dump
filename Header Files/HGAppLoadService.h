//
//     Generated by private class-dump
//

@class HGQueue, NSString, NSMutableDictionary, HGInnerLoadTask, NSObject, NSMutableArray, HGPkgFileManager, HGMetaServiceRequester;
@protocol OS_dispatch_queue, HGMetaTaskCancelable;

@interface HGAppLoadService : NSObject <HGSDKTimingMessage, HGReachabilityStateDelegate> {
    BOOL _adpationChecked;
    BOOL _didObserveReachability;
    HGMetaServiceRequester *_requester;
    NSObject<OS_dispatch_queue> *_serialQueue;
    HGPkgFileManager *_appFileManager;
    long long _maxConcurrentTasks;
    HGInnerLoadTask *_foregroundAppTask;
    HGQueue *_waitingTaskQueue;
    NSMutableDictionary *_waitingTaskDict;
    HGQueue *_silenceTaskQueue;
    NSMutableDictionary *_silenceTaskDict;
    NSMutableArray *_executingTasks;
    id<HGMetaTaskCancelable> _batchMetaToken;
    double _lastRequestBatchMeta;
    id _observeBecomeActiveToken;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) HGMetaServiceRequester *requester;
@property (retain, nonatomic) HGInnerLoadTask *foregroundAppTask;
@property (retain, nonatomic) HGQueue *waitingTaskQueue;
@property (retain, nonatomic) NSMutableDictionary *waitingTaskDict;
@property (retain, nonatomic) NSMutableArray *executingTasks;
@property (weak, nonatomic) id<HGMetaTaskCancelable> batchMetaToken;
@property (nonatomic) double lastRequestBatchMeta;
@property (weak, nonatomic) id observeBecomeActiveToken;
@property (readonly, nonatomic) NSString *loadingAppId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (id)shareService;
+ (void)tryReleaseAllPkgCache;
+ (void)registerPreloadSuccessCompletion:(id /* block */)arg0;
+ (void)registerMetaUpdateCallback:(id /* block */)arg0;
+ (void)initialize;

- (void)removeAllMetaAndPkgsWithAppId:(id)arg0;
- (id)trySyncLoadMetaAndPkgWithContext:(id)arg0;
- (id)readerInMemoryWithModel:(id)arg0;
- (BOOL)hasDownloadedUpdatedPkgForAppId:(id)arg0 pagePath:(id)arg1;
- (void)setUpTimerIfNeed;
- (void)adjustPreloadListCacheIfNeed;
- (BOOL)hasDownloadedPkgForModel:(id)arg0 pagePath:(id)arg1;
- (BOOL)hasDownloadedBackUpPkgForModel:(id)arg0 pagePath:(id)arg1;
- (void)preloadAppsWithAppIDs:(id)arg0 getPreloadInfosBlk:(id /* block */)arg1;
- (void)executeBlockSync:(BOOL)arg0 inSelfQueue:(id /* block */)arg1;
- (id)foregroundAppTask;
- (void)setForegroundAppTask:(id)arg0;
- (void)recordAppBecomeReadyWithId:(id)arg0 type:(long long)arg1;
- (BOOL)isAppLoadFromRetryPkgWithModel:(id)arg0;
- (void)releaseAllPkgFilesExceptAppIds:(id)arg0;
- (id)loadingAppId;
- (void)preloadAppsWithInfos:(id)arg0;
- (void)triggerWithTiming:(long long)arg0;
- (void)requestMetaWithContext:(id)arg0 completion:(id /* block */)arg1;
- (id)waitingTaskQueue;
- (void)setWaitingTaskQueue:(id)arg0;
- (void)preloadAppWithInfo:(id)arg0;
- (id)executingTasks;
- (void)setExecutingTasks:(id)arg0;
- (void)releaseAllPkgFiles;
- (id)getUpdateMetaWithID:(id)arg0;
- (id)loadCacheOfReleasedAppWithContext:(id)arg0;
- (id)trySyncLoadCache:(id)arg0 context:(id)arg1;
- (void)loadInnerAppWithContext:(id)arg0 cache:(id)arg1;
- (void)loadLocalCache:(id)arg0 withContext:(id)arg1;
- (void)loadLocalCacheNoNeedDownload:(id)arg0 withContext:(id)arg1;
- (void)loadExpiredAppModelWithContext:(id)arg0 cache:(id)arg1;
- (void)loadMetaAndPkgWithContext:(id)arg0;
- (long long)protectionForLaunchedMeta:(id)arg0 launchFrom:(id)arg1;
- (id)readerForAppModel:(id)arg0 withType:(long long)arg1 cacheModel:(BOOL)arg2 trackInfo:(id)arg3 context:(id)arg4;
- (void)requestAppModelWithContext:(id)arg0 readType:(long long)arg1 completion:(id /* block */)arg2;
- (void)handlePkgDownloadCompletion:(id /* block */)arg0 notPreload:(BOOL)arg1 withModel:(id)arg2 error:(id)arg3;
- (void)checkUpdateWithMeta:(id)arg0 context:(id)arg1 loadCache:(id)arg2 doYourJobBlk:(id /* block */)arg3;
- (void)requestAppModelWithContext:(id)arg0 readType:(long long)arg1 cache:(id)arg2 completion:(id /* block */)arg3;
- (BOOL)isExecutingTaskForAppId:(id)arg0;
- (void)filterAndCacheEnhancedPreloadInfos:(id)arg0;
- (id)waitingTaskDict;
- (id)observeBecomeActiveToken;
- (void)updateRecentUsedAppSilently;
- (void)setObserveBecomeActiveToken:(id)arg0;
- (id)batchMetaToken;
- (double)lastRequestBatchMeta;
- (void)setLastRequestBatchMeta:(double)arg0;
- (void)silentPreloadWithApps:(id)arg0 isAutoRequest:(BOOL)arg1 batchType:(id)arg2 silentOptions:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)getSilentUpdateModelsWithAppIDs:(id)arg0 metas:(id)arg1 silentOptions:(unsigned long long)arg2;
- (void)setBatchMetaToken:(id)arg0;
- (void)updatePreloadModeOfInfo:(id)arg0;
- (void)requestAppModelWithTask:(id)arg0 completion:(id /* block */)arg1;
- (void)setupPreloadEnhanceMarkWithModel:(id)arg0;
- (BOOL)shouldDownloadAppWithModel:(id)arg0 readType:(long long)arg1 context:(id)arg2 error:(id *)arg3;
- (void)handlePkgDownloadCompletion:(id /* block */)arg0 notPreload:(BOOL)arg1 loadTask:(id)arg2 error:(id)arg3;
- (void)removeBeyondLimitApps;
- (void)releaseMemoryCache;
- (void)preparationForColdLaunch;
- (id /* block */)requestBatchMetasWithAppIds:(id)arg0 isAutoRequest:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)releasePkgHanlderMemoryCacheWithAppId:(id)arg0;
- (void)removeAllPkgsExcludeAppIds:(id)arg0 readType:(long long)arg1;
- (void)dnsWarmWithModel:(id)arg0;
- (void)recoverAppIfNeedWithAppId:(id)arg0;
- (void)setWaitingTaskDict:(id)arg0;
- (id)requester;
- (void).cxx_destruct;
- (void)onReachabilityChange:(unsigned long long)arg0;
- (void)setRequester:(id)arg0;

@end
