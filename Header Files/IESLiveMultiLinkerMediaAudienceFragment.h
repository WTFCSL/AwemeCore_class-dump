//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSString, IESLiveLinkmicLinkerAnchorModel, IESLiveLinkmicLinkerAnchorLayoutModel, NSDate, IESLiveLinkmicLinkerAnchor, HTSLiveMediaDoubleInteractionTitleBar;
@protocol IESLiveCompoundSubscription, IESLiveMediaLinkParticipationInfo, IESLiveInteractiveExtendUserService, IESLiveRoomService;

@interface IESLiveMultiLinkerMediaAudienceFragment : IESLiveRoomComponent <IESLiveLinkmicLinkerAnchorDelegate, IESLiveMediaMultiLinkerProvider, IESLiveDataSyncDelegate, IESLiveLinkmicLinkerAnchorDataSource, IESLiveCommunityInteractionSubInterface> {
    BOOL isAnchor;
    BOOL isOptimizedPad;
    BOOL _linkWillEnd;
    BOOL _isPC;
    BOOL _shouldShowFullScreenBtn;
    id<IESLiveRoomService> roomModel;
    IESLiveLinkmicLinkerAnchorModel *mlinkerModel;
    id<IESLiveMediaLinkParticipationInfo> participationInfo;
    long long regionCount;
    id<IESLiveInteractiveExtendUserService> userService;
    NSString *toastString;
    IESLiveLinkmicLinkerAnchorLayoutModel *layoutModel;
    NSMutableDictionary *infoViewsMap;
    IESLiveLinkmicLinkerAnchor *linker;
    HTSLiveMediaDoubleInteractionTitleBar *titleBar;
    IESLiveLinkmicLinkerAnchorLayoutModel *forthDefaultLayoutModel;
    long long status;
    NSString *requestID;
    NSDate *_startTime;
    id<IESLiveCompoundSubscription> _disposable;
    NSString *_focusLinkmicId;
    long long _preCount;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } renderFrame;
}

@property (retain, nonatomic) NSDate *startTime;
@property (retain, nonatomic) id<IESLiveCompoundSubscription> disposable;
@property (retain, nonatomic) NSString *focusLinkmicId;
@property (nonatomic) long long preCount;
@property (nonatomic) BOOL linkWillEnd;
@property (nonatomic) BOOL isPC;
@property (nonatomic) BOOL shouldShowFullScreenBtn;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL isAnchor;
@property (nonatomic) BOOL isOptimizedPad;
@property (nonatomic) long long regionCount;
@property (nonatomic) long long status;
@property (retain, nonatomic) IESLiveLinkmicLinkerAnchorModel *mlinkerModel;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } renderFrame;
@property (retain, nonatomic) id<IESLiveMediaLinkParticipationInfo> participationInfo;
@property (retain, nonatomic) NSString *toastString;
@property (retain, nonatomic) IESLiveLinkmicLinkerAnchorLayoutModel *layoutModel;
@property (retain, nonatomic) IESLiveLinkmicLinkerAnchor *linker;
@property (retain, nonatomic) IESLiveLinkmicLinkerAnchorLayoutModel *forthDefaultLayoutModel;
@property (retain, nonatomic) NSString *requestID;
@property (retain, nonatomic) HTSLiveMediaDoubleInteractionTitleBar *titleBar;
@property (retain, nonatomic) NSMutableDictionary *infoViewsMap;
@property (retain, nonatomic) id<IESLiveInteractiveExtendUserService> userService;

+ (BOOL)componentShouldActive:(id)arg0;

- (id)roomModel;
- (void)setIsAnchor:(BOOL)arg0;
- (id)layoutModel;
- (void)setLayoutModel:(id)arg0;
- (void)setDisposable:(id)arg0;
- (id)disposable;
- (id)toastString;
- (void)setToastString:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderFrame;
- (void)setRoomModel:(id)arg0;
- (double)watchDuration;
- (void)componentBindService;
- (void)componentCreate;
- (void)componentMount;
- (void)componentUnmount;
- (void)componentOrientationChanged:(long long)arg0;
- (id)userService;
- (void)setUserService:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })streamRect;
- (void)subscribedSyncDataWithValue:(id)arg0 version:(long long)arg1;
- (void)subscribedSyncDataUpdatedWithValue:(id)arg0 oldVersion:(long long)arg1 newVersion:(long long)arg2;
- (BOOL)isOptimizedPad;
- (void)setIsOptimizedPad:(BOOL)arg0;
- (void)setRenderFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)infoViewsMap;
- (void)setInfoViewsMap:(id)arg0;
- (id)titleBar;
- (void)setTitleBar:(id)arg0;
- (BOOL)isMultiLinkerProcessing;
- (BOOL)isProcessingWaitingToFinish;
- (long long)currentStreamRegionCount;
- (void)setPreCount:(long long)arg0;
- (long long)preCount;
- (void)setLinker:(id)arg0;
- (id)linker;
- (void)onDidLinkmicUserListUpdatedWithLinker:(id)arg0;
- (void)linkmicLinker:(id)arg0 onActiveChanged:(BOOL)arg1 linkmicID:(id)arg2;
- (void)linkmicLinker:(id)arg0 userStateDidChangedFrom:(long long)arg1 to:(long long)arg2;
- (void)linkmicLinker:(id)arg0 onQuitWithError:(id)arg1;
- (void)linkmicLinker:(id)arg0 onReceivedLinkMicSEIParserResult:(id)arg1;
- (void)onWillLinkmicLayoutWithLinker:(id)arg0;
- (void)onDidUpdateUserPositionWithLinker:(id)arg0;
- (BOOL)isSelfLinkerAdmin;
- (BOOL)isFocusingInRange:(long long)arg0 uid:(id)arg1;
- (id)buildCommonTrackParams;
- (void)setRegionCount:(long long)arg0;
- (id)mlinkerModel;
- (void)setMlinkerModel:(id)arg0;
- (id)participationInfo;
- (void)setParticipationInfo:(id)arg0;
- (id)forthDefaultLayoutModel;
- (void)setForthDefaultLayoutModel:(id)arg0;
- (void)linkmicLinker:(id)arg0 onReceivedLinkLeaveMessage:(id)arg1 user:(id)arg2;
- (void)setupLinker;
- (void)showLayoutCanvas;
- (void)p_trackWatchEvent;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })linkViewContainerRect;
- (BOOL)linkWillEnd;
- (void)setFocusLinkmicId:(id)arg0;
- (id)focusLinkmicId;
- (void)setIsPC:(BOOL)arg0;
- (void)updateLayoutWithType:(long long)arg0 uid:(id)arg1 range:(long long)arg2;
- (void)loadTitleBar:(BOOL)arg0;
- (void)resumePublicScreenLayout;
- (void)enableFullScreenButtonIfNeed;
- (void)disableFullScreenButton;
- (void)setLinkWillEnd:(BOOL)arg0;
- (void)updateUserInfosWithLinker:(id)arg0;
- (void)updateUserPositionsIfNeed;
- (void)updatePublicScreenLayout;
- (void)setShouldShowFullScreenBtn:(BOOL)arg0;
- (BOOL)shouldShowFullScreenBtn;
- (void)updateInfoViewWithLinker:(id)arg0 onLinkmicCanvasElement:(id)arg1 ofUser:(id)arg2;
- (void)onLayoutModelChanged;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })p_currentTitleBarFrame;
- (void)updateTitleBarHiddenShowStatus:(BOOL)arg0;
- (void)setupLayoutCanvas;
- (void)setupTrebleLayoutCanvas;
- (void)setupQuadrupleLayoutCanvas;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })linkViewDoubleContainerRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })linkViewTrebleContainerRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })linkViewQuadrupleContainerRect;
- (BOOL)isPadAndLandscape;
- (BOOL)isPC;
- (void)setRequestID:(id)arg0;
- (void)setStartTime:(id)arg0;
- (id)requestID;
- (void).cxx_destruct;
- (long long)status;
- (BOOL)isAnchor;
- (void)setStatus:(long long)arg0;
- (id)startTime;
- (long long)regionCount;
- (void)addObservers;
- (long long)currentLayoutType;

@end
