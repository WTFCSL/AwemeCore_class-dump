//
//     Generated by private class-dump
//

@class AVAssetWriterInputPixelBufferAdaptor, NSString, AVAssetWriterInput, AVURLAsset, NSObject, NSMutableArray, AVAssetWriter;
@protocol OS_dispatch_queue, KryptonDefaultMediaRecorderDelegate;

@interface KryptonDefaultMediaRecorder : NSObject <KryptonMediaRecorder> {
    id<KryptonDefaultMediaRecorderDelegate> _delegate;
    id /* block */ _recordEndCallback;
    NSString *_mimeType;
    unsigned long long _maxDuration;
    unsigned long long _videoWidth;
    unsigned long long _videoHeight;
    unsigned long long _videoBPS;
    unsigned long long _videoFPS;
    BOOL _useAudio;
    unsigned long long _audioBPS;
    unsigned long long _audioSampleRate;
    unsigned long long _audioChannels;
    AVAssetWriter *_assetWriter;
    AVAssetWriterInput *_videoInput;
    AVAssetWriterInput *_audioInput;
    AVAssetWriterInputPixelBufferAdaptor *_videoBuffer;
    AVURLAsset *_avAsset;
    NSString *_localVideoPath;
    NSString *_localVideoUrl;
    NSMutableArray *_cachedPathArray;
    struct opaqueCMFormatDescription { } *_audioFormat;
    NSObject<OS_dispatch_queue> *_recordQueue;
    double _duration;
    unsigned long long _frameCount;
    unsigned long long _startTime;
    unsigned long long _pausedTime;
    unsigned long long _lastPauseTime;
    unsigned long long _lastFrameCurrentTime;
    unsigned long long _lastFrameTime;
    unsigned long long _totalAudioSamples;
    unsigned long long _audioTimeOffset;
    unsigned long long _lastAudioSampleTime;
    BOOL _running;
    BOOL _paused;
    BOOL _isSessionStarted;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)stopRecord;
- (void)pauseRecord;
- (void)onFrameAvailable:(struct __CVBuffer { } *)arg0;
- (id)generateTempVideoPath:(BOOL)arg0;
- (void)postWritingWithCompletion;
- (void)doStopRecordTask;
- (void)dispatchRecorderTask:(id /* block */)arg0;
- (void)tryToRemoveFile:(id)arg0;
- (void)notifyErrorStop:(id)arg0;
- (BOOL)doStartRecordWithEndCallback:(id /* block */)arg0;
- (id)generateVideoPathInfo:(BOOL)arg0;
- (void)startAudio;
- (unsigned long long)getMicroSecondTime;
- (void)initAudioFormat;
- (void)doAddAudioSampleTask:(struct OpaqueCMBlockBuffer { } *)arg0 samples:(int)arg1 targetTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg2;
- (void)notifyClipErrorEndWithCallback:(id /* block */)arg0 path:(id)arg1 error:(id)arg2;
- (void)postClipWithCallback:(id /* block */)arg0 path:(id)arg1 url:(id)arg2 status:(long long)arg3 durationUs:(unsigned long long)arg4;
- (void)configVideoWithMimeType:(id)arg0 duration:(unsigned long long)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 bps:(unsigned long long)arg4 fps:(unsigned long long)arg5;
- (void)configAudioWithChanels:(unsigned long long)arg0 bps:(unsigned long long)arg1 sampleRate:(unsigned long long)arg2;
- (void)startRecordWithStartCallback:(id /* block */)arg0 endCallback:(id /* block */)arg1;
- (void)resumeRecord;
- (void)onAudioSample:(void *)arg0 length:(int)arg1;
- (void)clipWithTimeRanges:(id)arg0 andEndCallback:(id /* block */)arg1;
- (void)destroy:(BOOL)arg0;
- (void)clipVideoSuccessWithPath:(id)arg0;
- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg0;
- (unsigned long long)lastPresentationTime;

@end
