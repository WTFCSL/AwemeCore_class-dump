//
//     Generated by private class-dump
//

@class NSMutableArray, NSMutableDictionary, NSDictionary, NSIndexPath, NSString, YataContainerItemModel, YataDataItemModel;
@protocol YataNodeInterface;

@interface YataRenderObject : YataAbstractNode <YataRenderNodeInterface> {
    NSString *_key;
    unsigned long long _currentState;
    NSMutableArray *_activeRenderObjects;
    NSMutableArray *_activeRenderNodes;
    NSMutableArray *_inactiveRenderNodes;
    NSMutableArray *_inactiveRenderObjects;
    NSIndexPath *_indexPath;
    YataDataItemModel *_data;
    YataContainerItemModel *_container;
    NSDictionary *_globalFields;
    NSMutableDictionary *_customFields;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
}

@property (retain, nonatomic) YataDataItemModel *data;
@property (retain, nonatomic) YataContainerItemModel *container;
@property (retain, nonatomic) NSDictionary *globalFields;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;
@property (retain, nonatomic) NSMutableDictionary *customFields;
@property (retain, nonatomic) NSMutableArray *inactiveRenderObjects;
@property (retain, nonatomic) NSMutableArray *activeRenderObjects;
@property (retain, nonatomic) NSMutableArray *inactiveRenderNodes;
@property (retain, nonatomic) NSMutableArray *activeRenderNodes;
@property (nonatomic) unsigned long long currentState;
@property (retain, nonatomic) NSIndexPath *indexPath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *key;
@property (nonatomic) long long depth;
@property (weak, nonatomic) id<YataNodeInterface> parent;
@property (retain, nonatomic) NSMutableArray *children;

- (void)setCustomFields:(id)arg0;
- (id)customFields;
- (void)updateSlot:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })nodeFrame;
- (id)combineFields;
- (id)getRenderKey;
- (void)updateCustomFieldsWithKey:(id)arg0 value:(id)arg1;
- (id)getRenderNodeTag;
- (void)adoptChild:(id)arg0;
- (void)dropChild:(id)arg0;
- (BOOL)isDataItemFieldsChanged;
- (id)activeRenderNodes;
- (id)activeRenderObjects;
- (id)inactiveRenderObjects;
- (void)setActiveRenderObjects:(id)arg0;
- (id)globalFields;
- (void)setGlobalFields:(id)arg0;
- (id)findFirstActiveRenderNode;
- (id)findLastActiveRenderNode;
- (void)setInactiveRenderObjects:(id)arg0;
- (id)inactiveRenderNodes;
- (void)setInactiveRenderNodes:(id)arg0;
- (void)setActiveRenderNodes:(id)arg0;
- (id)initWithKey:(id)arg0 container:(id)arg1 data:(id)arg2 globalFields:(id)arg3;
- (id)getRenderParent;
- (unsigned long long)getState;
- (id)container;
- (id)key;
- (void)setCurrentState:(unsigned long long)arg0;
- (id)data;
- (void).cxx_destruct;
- (id)feature;
- (id)fields;
- (unsigned long long)currentState;
- (void)setIndexPath:(id)arg0;
- (void)setContainer:(id)arg0;
- (void)setData:(id)arg0;
- (id)indexPath;
- (void)setKey:(id)arg0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)flushRender;
- (void)updateInfo:(id)arg0;

@end
