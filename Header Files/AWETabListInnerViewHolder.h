//
//     Generated by private class-dump
//

@class UIView, UIScrollView, AWETabListContainerScrollView, NSString, NSMutableDictionary, AWETabListTabContainerScrollView, NSMutableArray, UIPanGestureRecognizer, UIColor;
@protocol AWETabListInnerViewHolderDelegate, AWEListKitSegmentedControlProtocol;

@interface AWETabListInnerViewHolder : NSObject <UIScrollViewDelegate, AWESegmentedControlContextProtocol> {
    BOOL _didCaptureContainerOffset;
    double _capturedContainerOffsetY;
    double _headerShowingHeight;
    BOOL _headerShowingFlag;
    UIPanGestureRecognizer *_observedContainerPanGesture;
    BOOL _enableTabItemScrollViewBounce;
    BOOL _enableTabItemMJRefreshHeader;
    BOOL _enableTabItemMJRefreshFooter;
    double _currentDynamicTabContentViewHeight;
    long long _tabItemsCount;
    BOOL _tabContentUseMaxHeight;
    BOOL _tabItemScrollViewKeepContentOffset;
    BOOL _enableTabChangeAnimation;
    BOOL _enableDynamicTabContentViewHeight;
    BOOL _notifyHeaderAppearanceWhenScrolling;
    BOOL _dragging;
    UIView *_headerView;
    double _headerViewHeight;
    unsigned long long _tabSelectedIndex;
    UIColor *_tabContentBackgroundColor;
    UIView *_view;
    id<AWETabListInnerViewHolderDelegate> _delegate;
    AWETabListContainerScrollView *_containerScrollView;
    UIView<AWEListKitSegmentedControlProtocol> *_segmentedControl;
    AWETabListTabContainerScrollView *_tabContainerView;
    UIScrollView *_tabSelectedScrollView;
    UIView *_tabSelectedContentView;
    NSMutableDictionary *_tabItemContentViewsMap;
    NSMutableDictionary *_tabItemScrollViewsMap;
    NSMutableArray *_preloadTabItemContentViews;
    struct CGSize { double width; double height; } _tabContentSize;
}

@property (weak, nonatomic) UIView *view;
@property (weak, nonatomic) id<AWETabListInnerViewHolderDelegate> delegate;
@property (retain, nonatomic) AWETabListContainerScrollView *containerScrollView;
@property (retain, nonatomic) UIView *headerView;
@property (retain, nonatomic) UIView<AWEListKitSegmentedControlProtocol> *segmentedControl;
@property (retain, nonatomic) AWETabListTabContainerScrollView *tabContainerView;
@property (nonatomic) double headerViewHeight;
@property (nonatomic) unsigned long long tabSelectedIndex;
@property (nonatomic) struct CGSize { double width; double height; } tabContentSize;
@property (weak, nonatomic) UIScrollView *tabSelectedScrollView;
@property (weak, nonatomic) UIView *tabSelectedContentView;
@property (retain, nonatomic) NSMutableDictionary *tabItemContentViewsMap;
@property (retain, nonatomic) NSMutableDictionary *tabItemScrollViewsMap;
@property (retain, nonatomic) NSMutableArray *preloadTabItemContentViews;
@property (nonatomic, getter=isDragging) BOOL dragging;
@property (retain, nonatomic) UIColor *tabContentBackgroundColor;
@property (nonatomic) BOOL tabContentUseMaxHeight;
@property (nonatomic) BOOL tabItemScrollViewKeepContentOffset;
@property (nonatomic) BOOL enableTabChangeAnimation;
@property (nonatomic) BOOL enableDynamicTabContentViewHeight;
@property (nonatomic) BOOL notifyHeaderAppearanceWhenScrolling;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)viewHolderWithView:(id)arg0 delegate:(id)arg1;

- (void)containerScrollViewDidScroll:(id)arg0;
- (void)containerScrollViewDidEndDecelerating:(id)arg0;
- (void)containerScrollViewDidEndScrollingAnimation:(id)arg0;
- (void)containerScrollViewDidEndDragging:(id)arg0 willDecelerate:(BOOL)arg1;
- (double)topSafeArea;
- (void)containerScrollViewWillEndDragging:(id)arg0 withVelocity:(struct CGPoint { double x0; double x1; })arg1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)arg2;
- (void)updateTabItemContentOffset:(struct CGPoint { double x0; double x1; })arg0 keepContainerPosition:(BOOL)arg1;
- (BOOL)tabContentUseMaxHeight;
- (void)setEnableDynamicTabContentViewHeight:(BOOL)arg0;
- (unsigned long long)tabSelectedIndex;
- (void)updateUnselectedTabItemScrollView:(id)arg0 contentOffset:(struct CGPoint { double x0; double x1; })arg1;
- (void)setEnableTabChangeAnimation:(BOOL)arg0;
- (void)segmentedControlDidChangedValue:(long long)arg0;
- (void)segmentedControlDidTapAtIndex:(long long)arg0;
- (BOOL)tabItemScrollViewKeepContentOffset;
- (BOOL)enableTabChangeAnimation;
- (BOOL)enableDynamicTabContentViewHeight;
- (BOOL)notifyHeaderAppearanceWhenScrolling;
- (void)setNotifyHeaderAppearanceWhenScrolling:(BOOL)arg0;
- (void)unobserveContainerPanGesture;
- (void)unobserveAllTabItemScrollViews;
- (id)tabContainerView;
- (void)observeContainerPanGesture;
- (void)updateTabContainerContentSize;
- (id)tabItemContentViewsMap;
- (void)resetTabContents;
- (void)updateTabSelectedIndex:(unsigned long long)arg0 animated:(BOOL)arg1;
- (void)updateContainerContentSize;
- (void)preloadTabItemsIfNeeded;
- (void)updateSelectedIndexAndViewsWithIndex:(long long)arg0;
- (void)updateSegmentedControlSelectedIndex:(long long)arg0 animated:(BOOL)arg1;
- (void)updateTabContainerViewSelectedIndex:(long long)arg0 animated:(BOOL)arg1 isByTap:(BOOL)arg2;
- (void)adjustContainerScrollViewContentOffset:(BOOL)arg0;
- (void)adjustUnselectedTabItemsContentOffset;
- (void)adjustUnselectedTabItemContentOffset:(id)arg0;
- (void)updateContainerContentSizeAndKeepContentOffset;
- (void)adjustAllSubviewsState:(id)arg0;
- (void)updateContainerContentSize:(BOOL)arg0;
- (void)containerDidEndScrolling:(id)arg0;
- (void)resetCapturedContainerOffset;
- (double)currentDynamicTabContentViewHeight:(double)arg0;
- (double)tabItemContentOffsetDiffForMJHeaderWithScrollView:(id)arg0;
- (double)headerShowingHeight;
- (double)tabContentMaxHeight;
- (id)preloadTabItemContentViews;
- (void)setTabSelectedContentView:(id)arg0;
- (id)tabItemScrollViewsMap;
- (void)setTabSelectedScrollView:(id)arg0;
- (void)setTabItemContentViewsMap:(id)arg0;
- (void)setTabItemScrollViewsMap:(id)arg0;
- (void)observeTabItemScrollView:(id)arg0;
- (void)tabItemScrollView:(id)arg0 didSetMJHeader:(id)arg1;
- (double)unselectedTabItemContentOffsetDiff;
- (void)updateUnselectedTabItemContentOffset:(id)arg0 diff:(double)arg1;
- (void)unobserveTabItemScrollView:(id)arg0;
- (void)finalUpdateSelectedItemAtIndex:(long long)arg0 isByTap:(BOOL)arg1;
- (void)updateSegmentedControlUserInteractionEnabled:(BOOL)arg0;
- (void)setTabSelectedIndex:(unsigned long long)arg0;
- (void)adjustContainerScrollViewContentSize;
- (void)setPreloadTabItemContentViews:(id)arg0;
- (void)tabContainerViewDidScrollToSelectedIndex:(long long)arg0;
- (void)updateTabContainerDragging:(BOOL)arg0;
- (void)addHeaderView:(id)arg0;
- (void)reloadWithTabItemsCount:(long long)arg0;
- (void)updateHeaderHeight:(double)arg0 keepContainerPosition:(BOOL)arg1;
- (void)updateSegmentedControlHeight:(double)arg0;
- (void)setTabContentBackgroundColor:(id)arg0;
- (id)tabContentBackgroundColor;
- (void)setTabContentUseMaxHeight:(BOOL)arg0;
- (void)setTabItemScrollViewKeepContentOffset:(BOOL)arg0;
- (void)setTabContainerView:(id)arg0;
- (struct CGSize { double x0; double x1; })tabContentSize;
- (void)setTabContentSize:(struct CGSize { double x0; double x1; })arg0;
- (id)tabSelectedScrollView;
- (id)tabSelectedContentView;
- (id)tabItemContentViewAtIndex:(long long)arg0;
- (id)tabItemScrollViewAtIndex:(long long)arg0;
- (double)bottomSafeArea;
- (void)scrollViewWillBeginDecelerating:(id)arg0;
- (BOOL)scrollViewShouldScrollToTop:(id)arg0;
- (void)setDragging:(BOOL)arg0;
- (void).cxx_destruct;
- (void)scrollViewDidEndDecelerating:(id)arg0;
- (void)setHeaderViewHeight:(double)arg0;
- (void)scrollViewWillEndDragging:(id)arg0 withVelocity:(struct CGPoint { double x0; double x1; })arg1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)arg2;
- (BOOL)isDragging;
- (double)headerViewHeight;
- (void)scrollViewDidScrollToTop:(id)arg0;
- (void)scrollViewDidEndScrollingAnimation:(id)arg0;
- (void)setHeaderView:(id)arg0;
- (void)scrollViewDidScroll:(id)arg0;
- (void)setView:(id)arg0;
- (id)delegate;
- (void)scrollViewDidEndDragging:(id)arg0 willDecelerate:(BOOL)arg1;
- (void)layoutSubviews;
- (id)headerView;
- (void)setDelegate:(id)arg0;
- (void)scrollViewWillBeginDragging:(id)arg0;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (id)view;
- (id)segmentedControl;
- (void)setSegmentedControl:(id)arg0;
- (id)containerScrollView;
- (void)setContainerScrollView:(id)arg0;
- (void)resetLayout;
- (void)setupSubviews;

@end
