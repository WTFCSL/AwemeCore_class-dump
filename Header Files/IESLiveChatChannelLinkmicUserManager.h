//
//     Generated by private class-dump
//

@class NSArray, NSString, RoomChannelInfo, NSMutableSet, IESLiveChatChannelLinkmicAPI, NSMutableArray, IESLiveGCDTimer;
@protocol IESLiveChannelDataSyncService, IESLiveLinkmicUserServiceDataSource, IESLiveLinkmicUserServiceDelegate, IESLiveLinkmicUser, IESLiveRoomService;

@interface IESLiveChatChannelLinkmicUserManager : NSObject <IESLiveLinkmicUserServiceDataSource, IESLiveDataSyncDelegate, IESLiveLinkmicUserServiceInterface> {
    BOOL _shouldReportCheckLinkers;
    id<IESLiveLinkmicUserServiceDelegate> delegate;
    RoomChannelInfo *_channelInfo;
    id<IESLiveRoomService> _room;
    id<IESLiveChannelDataSyncService> _dataSyncService;
    NSMutableArray *_linkedUserListArray;
    NSMutableArray *_waitingUserListArray;
    NSMutableSet *_rtcUserLinkmicIDSet;
    IESLiveChatChannelLinkmicAPI *_api;
    IESLiveGCDTimer *_checkLinkersTimer;
    double _checkLinkersTimeInterval;
}

@property (retain, nonatomic) RoomChannelInfo *channelInfo;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) id<IESLiveChannelDataSyncService> dataSyncService;
@property (retain, nonatomic) NSMutableArray *linkedUserListArray;
@property (retain, nonatomic) NSMutableArray *waitingUserListArray;
@property (retain, nonatomic) NSMutableSet *rtcUserLinkmicIDSet;
@property (retain, nonatomic) IESLiveChatChannelLinkmicAPI *api;
@property (retain, nonatomic) IESLiveGCDTimer *checkLinkersTimer;
@property (nonatomic) double checkLinkersTimeInterval;
@property (nonatomic) BOOL shouldReportCheckLinkers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<IESLiveLinkmicUserServiceDataSource> dataSource;
@property (weak, nonatomic) id<IESLiveLinkmicUserServiceDelegate> delegate;
@property (readonly, nonatomic) NSArray *linkedUserList;
@property (readonly, nonatomic) NSArray *waitingUserList;
@property (readonly, nonatomic) id<IESLiveLinkmicUser> me;

+ (id)wrapLiveUser:(id)arg0;
+ (id)wrapUserArray:(id)arg0;
+ (id)wrapUser:(id)arg0;
+ (id)wrapLinkmicUser:(id)arg0;

- (void)setChannelInfo:(id)arg0;
- (void)subscribedSyncDataWithValue:(id)arg0 version:(long long)arg1 forChannel:(id)arg2;
- (void)subscribedSyncDataUpdatedWithValue:(id)arg0 oldVersion:(long long)arg1 newVersion:(long long)arg2 forChannel:(id)arg3;
- (id)linkedUserList;
- (id)waitingUserList;
- (id)initWithChannelInfo:(id)arg0 diContext:(id)arg1;
- (void)reloadLinkedList;
- (void)insertRTCUser:(id)arg0;
- (void)removeRTCUser:(id)arg0;
- (void)updateUserMute:(id)arg0 mute:(BOOL)arg1;
- (void)updateUserVolume:(id)arg0 volume:(long long)arg1;
- (void)setCheckLinkersTimeInterval:(double)arg0;
- (void)setLinkedUserListArray:(id)arg0;
- (void)setWaitingUserListArray:(id)arg0;
- (void)setRtcUserLinkmicIDSet:(id)arg0;
- (id)dataSyncService;
- (id)linkedUserListArray;
- (id)rtcUserLinkmicIDSet;
- (void)updateUserListWithChannelListlUserArray:(id)arg0;
- (void)startCheckLinkersIfNeeded;
- (id)waitingUserListArray;
- (id)formattedUserList:(id)arg0;
- (void)stopCheckLinkers;
- (void)updateUserListWithLinkmicUserArray:(id)arg0;
- (id)checkLinkersTimer;
- (void)setCheckLinkersTimer:(id)arg0;
- (BOOL)isCurrentCheckLinkersReporter;
- (void)setShouldReportCheckLinkers:(BOOL)arg0;
- (BOOL)shouldReportCheckLinkers;
- (double)checkLinkersTimeInterval;
- (id)userByLinkmicId:(id)arg0;
- (id)userByUserId:(id)arg0;
- (id)userBySecUserId:(id)arg0;
- (id)waitingUserByUserId:(id)arg0;
- (id)waitingUserBySecUserId:(id)arg0;
- (id)createEmptyUserWithLinkmicID:(id)arg0;
- (void)reloadLinkedListWithListChanged:(id)arg0;
- (void)setDataSyncService:(id)arg0;
- (void)removeAll;
- (id)dataSource;
- (id)channelID;
- (void).cxx_destruct;
- (id)me;
- (void)setup;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (id)room;
- (void)setRoom:(id)arg0;
- (id)channelInfo;
- (id)api;
- (void)addUser:(id)arg0;
- (void)clean;
- (void)setApi:(id)arg0;

@end
