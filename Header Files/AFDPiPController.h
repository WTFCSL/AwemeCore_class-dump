//
//     Generated by private class-dump
//

@class UIView, NSString, AFDPiPContext, AFDPiPContainerView, NSMutableDictionary, AFDPiPSampleBufferDisplayView, UIViewController, AVPictureInPictureController;
@protocol AFDPiPControllerDelegate, AFDPiPContextProvider;

@interface AFDPiPController : NSObject <AVPictureInPictureSampleBufferPlaybackDelegate, AVPictureInPictureControllerDelegate> {
    BOOL _active;
    BOOL _isNeedChangeSnapshotViewLevel;
    BOOL _isWaitingForAutomaticInlinePiP;
    BOOL _isSynchronizingPlaybackTime;
    BOOL _isRestoreUserInterfaceStop;
    BOOL _isRestoringWhenBecomeActive;
    BOOL _isStopping;
    BOOL _isSeekingWithPiP;
    BOOL _shouldSeekCompletion;
    BOOL _shouldStartPiPAutomatically;
    id<AFDPiPContextProvider> _contextProvider;
    id<AFDPiPControllerDelegate> _delegate;
    NSMutableDictionary *_activationInfo;
    UIViewController *_pipViewController;
    AVPictureInPictureController *_pipController;
    AFDPiPSampleBufferDisplayView *_sampleBufferDisplayView;
    AFDPiPContainerView *_containerView;
    AFDPiPContext *_restoreContext;
    AFDPiPContext *_context;
    UIView *_snapshotForContentViewDuringStartingPiP;
    NSString *_seekingItemID;
    id /* block */ _seekCompletionHandler;
}

@property (class, readonly, nonatomic) AFDPiPController *activeInstance;

@property (retain, nonatomic) AVPictureInPictureController *pipController;
@property (retain, nonatomic) AFDPiPSampleBufferDisplayView *sampleBufferDisplayView;
@property (retain, nonatomic) AFDPiPContainerView *containerView;
@property (retain, nonatomic) AFDPiPContext *restoreContext;
@property (nonatomic) BOOL isWaitingForAutomaticInlinePiP;
@property (nonatomic) BOOL isSynchronizingPlaybackTime;
@property (nonatomic) BOOL isRestoreUserInterfaceStop;
@property (nonatomic) BOOL isRestoringWhenBecomeActive;
@property (nonatomic) BOOL isStopping;
@property (retain, nonatomic) AFDPiPContext *context;
@property (retain, nonatomic) UIView *snapshotForContentViewDuringStartingPiP;
@property (nonatomic) BOOL isSeekingWithPiP;
@property (retain, nonatomic) NSString *seekingItemID;
@property (nonatomic) BOOL shouldSeekCompletion;
@property (copy, nonatomic) id /* block */ seekCompletionHandler;
@property (nonatomic) BOOL shouldStartPiPAutomatically;
@property (weak, nonatomic) id<AFDPiPContextProvider> contextProvider;
@property (weak, nonatomic) id<AFDPiPControllerDelegate> delegate;
@property (nonatomic, getter=isActive) BOOL active;
@property (retain, nonatomic) NSMutableDictionary *activationInfo;
@property (retain, nonatomic) UIViewController *pipViewController;
@property (nonatomic) BOOL isNeedChangeSnapshotViewLevel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)activeInstance;

- (void)preparePiPWithContainerView:(id)arg0 andVideoHeight:(double)arg1;
- (void)stopWaitingForAutomaticInlinePiP;
- (void)setCanStartPiPAutomatically:(BOOL)arg0;
- (void)ensureAudioSessionCategory;
- (void)restoreContentView;
- (id)restoreContext;
- (void)setShouldStartPiPAutomatically:(BOOL)arg0;
- (void)setShouldSeekCompletion:(BOOL)arg0;
- (void)invalidateRate;
- (void)invalidatePlaybackTime;
- (void)invalidatePlayback;
- (void)setIsSynchronizingPlaybackTime:(BOOL)arg0;
- (id)sampleBufferDisplayView;
- (void)handlePiPEventWithEventName:(id)arg0 info:(id)arg1;
- (void)setRestoreContext:(id)arg0;
- (void)setSampleBufferDisplayView:(id)arg0;
- (void)clearSampleBufferDisplayView;
- (void)setIsWaitingForAutomaticInlinePiP:(BOOL)arg0;
- (void)preparePlayerLayerIfNeededWithLayer:(id)arg0;
- (void)setIsRestoringWhenBecomeActive:(BOOL)arg0;
- (void)stopPiP;
- (void)setActivationInfo:(id)arg0;
- (void)setSnapshotForContentViewDuringStartingPiP:(id)arg0;
- (BOOL)isNeedChangeSnapshotViewLevel;
- (id)snapshotForContentViewDuringStartingPiP;
- (BOOL)isRestoreUserInterfaceStop;
- (void)setIsRestoreUserInterfaceStop:(BOOL)arg0;
- (BOOL)isSeekingWithPiP;
- (BOOL)shouldStartPiPAutomatically;
- (BOOL)isSynchronizingPlaybackTime;
- (id)seekingItemID;
- (BOOL)shouldSeekCompletion;
- (void)setIsSeekingWithPiP:(BOOL)arg0;
- (void)setSeekingItemID:(id)arg0;
- (void)suspendApp;
- (void)updateContentSize:(struct CGSize { double x0; double x1; })arg0;
- (void)startPiP;
- (void)setIsNeedChangeSnapshotViewLevel:(BOOL)arg0;
- (BOOL)isWaitingForAutomaticInlinePiP;
- (BOOL)isRestoringWhenBecomeActive;
- (id)pipController;
- (id)init;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)arg0;
- (void).cxx_destruct;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)arg0;
- (void)handleNotification:(id)arg0;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)arg0;
- (void)pictureInPictureController:(id)arg0 failedToStartPictureInPictureWithError:(id)arg1;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)arg0;
- (void)setContext:(id)arg0;
- (void)pictureInPictureController:(id)arg0 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg1;
- (void)setPipController:(id)arg0;
- (id)activationInfo;
- (void)setContainerView:(id)arg0;
- (void)setRequiresLinearPlayback:(BOOL)arg0;
- (id)delegate;
- (id)containerView;
- (id)context;
- (BOOL)isActive;
- (void)setActive:(BOOL)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id /* block */)seekCompletionHandler;
- (void)updateContext;
- (void)setSeekCompletionHandler:(id /* block */)arg0;
- (void)invalidateContext;
- (void)pictureInPictureController:(id)arg0 setPlaying:(BOOL)arg1;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })pictureInPictureControllerTimeRangeForPlayback:(id)arg0;
- (BOOL)pictureInPictureControllerIsPlaybackPaused:(id)arg0;
- (void)pictureInPictureController:(id)arg0 didTransitionToRenderSize:(struct { int x0; int x1; })arg1;
- (void)pictureInPictureController:(id)arg0 skipByInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 completionHandler:(id /* block */)arg2;
- (id)contextProvider;
- (id)pipViewController;
- (void)setContextProvider:(id)arg0;
- (BOOL)isStopping;
- (void)setPipViewController:(id)arg0;
- (void)setIsStopping:(BOOL)arg0;

@end
