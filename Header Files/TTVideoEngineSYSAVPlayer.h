//
//     Generated by private class-dump
//

@class UIView, NSString, AVURLAsset, NSURL, UIImage, AVPlayerItem, NSDictionary, TTVideoEngineAVPlayerItemAccessLog, NSMutableArray, TTVideoEngineMoviePlayerLayerView, AVPlayer;
@protocol TTVideoPlayerEngineInfoProtocol, TTVideoPlayerStateProtocol, TTAVPlayerSubInfoInterface, AVAssetResourceLoaderDelegate;

@interface TTVideoEngineSYSAVPlayer : NSObject <TTVideoEnginePlayer> {
    AVURLAsset *_curretAsset;
    NSURL *_currentUrl;
    AVPlayerItem *_playerItem;
    NSDictionary *_customeHeader;
    AVPlayer *_avPlayer;
    TTVideoEngineMoviePlayerLayerView *_avView;
    unsigned long long _enhancementType;
    unsigned long long _imageScaleType;
    unsigned long long _imageLayoutType;
    unsigned long long _renderType;
    BOOL _looping;
    long long _smoothDelayedSeconds;
    long long _readyToPlayToken;
    BOOL _isPrerolling;
    double _seekingTime;
    BOOL _isError;
    BOOL _isMuted;
    BOOL _isSeeking;
    BOOL _isShutdown;
    BOOL _isCompleted;
    BOOL _playbackBufferEmpty;
    BOOL _playingBeforeInterruption;
    BOOL _playbackLikelyToKeeyUp;
    BOOL _playbackBufferFull;
    BOOL _isUsingAVPlayerItem;
    NSMutableArray *_registeredNotifications;
    double _playbackRate;
    TTVideoEngineAVPlayerItemAccessLog *_accessLog;
    double _lastPlayTime;
    BOOL _isPauseWhenNotReady;
    BOOL _muted;
    BOOL _asyncInit;
    BOOL _asyncPrepare;
    BOOL _optimizeMemoryUsage;
    BOOL _isPreparedToPlay;
    float _playableBufferLength;
    id<TTVideoPlayerStateProtocol> _delegate;
    UIView *_view;
    double _currentPlaybackTime;
    double _duration;
    double _playableDuration;
    long long _bufferingProgress;
    double _videoWidth;
    double _videoHeight;
    long long _playbackState;
    unsigned long long _loadState;
    long long _scalingMode;
    double _volume;
    id<AVAssetResourceLoaderDelegate> _resourceLoaderDelegate;
    double _startTime;
    long long _openTimeOut;
    long long _rotateType;
    long long _loopWay;
    id<TTVideoPlayerEngineInfoProtocol> _engine;
    long long _enableReportAllBufferUpdate;
}

@property (nonatomic) double duration;
@property (nonatomic) double playableDuration;
@property (nonatomic) BOOL isPreparedToPlay;
@property (retain, nonatomic) UIView *view;
@property (nonatomic) long long bufferingProgress;
@property (nonatomic) float playableBufferLength;
@property (nonatomic) double videoWidth;
@property (nonatomic) double videoHeight;
@property (weak, nonatomic) id<TTVideoPlayerStateProtocol> delegate;
@property (weak, nonatomic) id<TTVideoPlayerEngineInfoProtocol> engine;
@property (weak, nonatomic) id<TTAVPlayerSubInfoInterface> subInfo;
@property (copy, nonatomic) NSURL *contentURL;
@property (nonatomic) int cacheFileMode;
@property (nonatomic) int testSpeedMode;
@property (nonatomic) double currentPlaybackTime;
@property (readonly, nonatomic) long long mediaSize;
@property (readonly, nonatomic) long long playbackState;
@property (readonly, nonatomic) unsigned long long loadState;
@property (nonatomic) long long scalingMode;
@property (nonatomic) long long alignMode;
@property (nonatomic) double alignRatio;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizeCropArea;
@property (nonatomic) BOOL muted;
@property (nonatomic) double playbackSpeed;
@property (readonly, nonatomic) TTVideoEngineAVPlayerItemAccessLog *accessLog;
@property (nonatomic) unsigned long long imageScaleType;
@property (nonatomic) unsigned long long enhancementType;
@property (nonatomic) unsigned long long imageLayoutType;
@property (nonatomic) unsigned long long renderType;
@property (nonatomic) unsigned long long renderEngine;
@property (nonatomic) unsigned long long finalRenderEngine;
@property (nonatomic) long long rotateType;
@property (nonatomic) long long mirrorType;
@property (nonatomic) BOOL optimizeMemoryUsage;
@property (nonatomic) BOOL looping;
@property (nonatomic) long long loopWay;
@property (nonatomic) BOOL asyncInit;
@property (nonatomic) BOOL asyncPrepare;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL ksyByteVC1Decode;
@property (nonatomic) BOOL barrageMaskEnable;
@property (nonatomic) BOOL aiBarrageEnable;
@property (nonatomic) long long openTimeOut;
@property (nonatomic) long long smoothDelayedSeconds;
@property (nonatomic) double startTime;
@property (readonly, copy, nonatomic) NSDictionary *metadata;
@property (weak, nonatomic) id<AVAssetResourceLoaderDelegate> resourceLoaderDelegate;
@property (nonatomic) BOOL isPauseWhenNotReady;
@property (nonatomic) double volume;
@property (readonly, nonatomic) UIImage *attachedPic;
@property (nonatomic) long long enableReportAllBufferUpdate;
@property (nonatomic) BOOL subEnable;
@property (retain, nonatomic) NSString *subTitleUrlInfo;
@property (nonatomic) long long subLanguageId;
@property (nonatomic) BOOL enableRemoveTaskQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (unsigned long long)imageLayoutType;
- (void)setImageLayoutType:(unsigned long long)arg0;
- (void)setFloatValue:(float)arg0 forKey:(int)arg1;
- (void)setHardwareDecode:(BOOL)arg0;
- (double)getFloatValueForKey:(int)arg0;
- (id)getStringValueForKey:(int)arg0;
- (BOOL)hardwareDecode;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (void)closeAsync;
- (int)getIntValueForKey:(int)arg0;
- (long long)rotateType;
- (void)setRotateType:(long long)arg0;
- (unsigned long long)imageScaleType;
- (void)setImageScaleType:(unsigned long long)arg0;
- (unsigned long long)enhancementType;
- (void)setEnhancementType:(unsigned long long)arg0;
- (void)setIgnoreAudioInterruption:(BOOL)arg0;
- (unsigned long long)renderType;
- (void)setLoadControl:(id)arg0;
- (void)setIntValue:(int)arg0 forKey:(int)arg1;
- (void)setIsPreparedToPlay:(BOOL)arg0;
- (void)setBufferingProgress:(long long)arg0;
- (long long)bufferingProgress;
- (void)setRenderEngine:(unsigned long long)arg0;
- (unsigned long long)renderEngine;
- (BOOL)asyncInit;
- (void)setAsyncInit:(BOOL)arg0;
- (long long)openTimeOut;
- (void)setOpenTimeOut:(long long)arg0;
- (id)attachedPic;
- (long long)getInt64Value:(long long)arg0 forKey:(int)arg1;
- (void)setValueVoidPTR:(void *)arg0 forKey:(int)arg1;
- (float)getFloatValueForKeyType:(int)arg0 forType:(int)arg1;
- (id)getStringValueForKeyType:(int)arg0 forType:(int)arg1;
- (int)getIntValueForKeyType:(int)arg0 forType:(int)arg1;
- (void)setDrmCreater:(void /* function */ *)arg0;
- (id)getSubtitleContent:(long long)arg0 Params:(id)arg1;
- (void)resetPlayerVideoProcessor;
- (id)getStreamInfo;
- (int)getIntValue:(int)arg0 forKey:(int)arg1;
- (id)getExtraViewForViewType:(long long)arg0;
- (void)resetWhenGivebackToPool;
- (void)registerAppObservers;
- (void)startToPlay:(id)arg0;
- (id)resourceLoaderDelegate;
- (void)didPrepareToPlayAsset:(id)arg0 withKeys:(id)arg1;
- (BOOL)isPlayBackRateValid;
- (void)playerPlay;
- (BOOL)isControlStatusPlaying;
- (void)unregisterAppObservers;
- (void)removePlayerObservers;
- (void)playerItemPlayFail:(id)arg0;
- (void)playerItemPlayEnd:(id)arg0;
- (void)playbackStateChanged;
- (void)loadStateChanged;
- (void)notifyPlayToEnd;
- (void)setCurrentPlaybackTime:(double)arg0 complete:(id /* block */)arg1 renderComplete:(id /* block */)arg2;
- (void)setCurrentPlaybackTime:(double)arg0 complete:(id /* block */)arg1;
- (void)playerAddItemObservers:(id)arg0;
- (void)addPlayerObservers;
- (id)createErrorWithCode:(long long)arg0 description:(id)arg1 reason:(id)arg2;
- (void)getItemLoadState:(id)arg0;
- (void)prepareAssetFailed:(id)arg0;
- (void)didPlayableDurationUpdate;
- (BOOL)isPrerolling;
- (BOOL)isCustomPlayer;
- (void)switchStreamBitrate:(long long)arg0 ofType:(long long)arg1 completion:(id /* block */)arg2;
- (long long)numberOfBytesPlayed;
- (long long)videoBufferLength;
- (long long)audioBufferLength;
- (void)setPrepareFlag:(BOOL)arg0;
- (void)setTraitObjectValue:(id)arg0 forKey:(long long)arg1;
- (long long)getInt64ValueForKey:(int)arg0;
- (void)setEnableReportAllBufferUpdate:(long long)arg0;
- (void)setUpPlayerViewWrapper:(id)arg0;
- (void)dynamicGaussianBlurResetViewSize:(int)arg0;
- (void)setSubInfo:(id)arg0;
- (unsigned long long)finalRenderEngine;
- (BOOL)optimizeMemoryUsage;
- (void)setOptimizeMemoryUsage:(BOOL)arg0;
- (long long)loopWay;
- (void)setLoopWay:(long long)arg0;
- (BOOL)asyncPrepare;
- (void)setAsyncPrepare:(BOOL)arg0;
- (BOOL)ksyByteVC1Decode;
- (void)setKsyByteVC1Decode:(BOOL)arg0;
- (void)setBarrageMaskEnable:(BOOL)arg0;
- (void)setAiBarrageEnable:(BOOL)arg0;
- (long long)smoothDelayedSeconds;
- (void)setSmoothDelayedSeconds:(long long)arg0;
- (void)setResourceLoaderDelegate:(id)arg0;
- (BOOL)isPauseWhenNotReady;
- (void)setIsPauseWhenNotReady:(BOOL)arg0;
- (long long)enableReportAllBufferUpdate;
- (void)setSubEnable:(BOOL)arg0;
- (void)setSubTitleUrlInfo:(id)arg0;
- (void)setSubLanguageId:(long long)arg0;
- (void)setEnableRemoveTaskQueue:(BOOL)arg0;
- (id)initWithAsync:(BOOL)arg0;
- (BOOL)isAfterIOS10;
- (id)currentCDNHost;
- (float)playableBufferLength;
- (void)setPlayableBufferLength:(float)arg0;
- (long long)playbackState;
- (double)currentPlaybackTime;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (BOOL)muted;
- (unsigned long long)loadState;
- (void)setEffect:(id)arg0;
- (double)volume;
- (void)setVideoHeight:(double)arg0;
- (void)setMuted:(BOOL)arg0;
- (void)shutdown;
- (id)contentURL;
- (void)close;
- (void)stop;
- (id)engine;
- (double)duration;
- (void)setView:(id)arg0;
- (id)getVersion;
- (id)delegate;
- (double)startTime;
- (double)videoHeight;
- (id)metadata;
- (BOOL)isPlaying;
- (void)setVolume:(double)arg0;
- (void)setVideoWidth:(double)arg0;
- (double)videoWidth;
- (float)currentRate;
- (void)setCurrentPlaybackTime:(double)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setLooping:(BOOL)arg0;
- (void)play;
- (void)pause;
- (void)setRenderType:(unsigned long long)arg0;
- (void)setEngine:(id)arg0;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)pause:(BOOL)arg0;
- (id)view;
- (void)applicationWillTerminate;
- (BOOL)isMuted;
- (void)setDuration:(double)arg0;
- (BOOL)looping;
- (void)onError:(id)arg0;
- (double)playbackSpeed;
- (void)setPlaybackSpeed:(double)arg0;
- (void)setContentURL:(id)arg0;
- (void)setCustomHeader:(id)arg0;
- (void)prepareToPlay;
- (void)setAVPlayerItem:(id)arg0;
- (long long)scalingMode;
- (void)setScalingMode:(long long)arg0;
- (id)accessLog;
- (long long)numberOfBytesTransferred;
- (BOOL)isPreparedToPlay;
- (double)playableDuration;
- (void)removePlayerItemObservers:(id)arg0;
- (void)appWillEnterForeground;
- (void)appDidEnterBackground;
- (long long)downloadSpeed;
- (void)appDidBecomeActive;
- (long long)mediaSize;
- (void)resetPlayer;
- (void)appWillResignActive;
- (void)setMaskInfo:(id)arg0;
- (void)setPlayableDuration:(double)arg0;

@end
