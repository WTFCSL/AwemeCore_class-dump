//
//     Generated by private class-dump
//

@class NSString, NSFileHandle;

@interface IESECDiskLRUCache : NSObject {
    NSString *_directory;
    NSString *_cacheVersion;
    NSString *_journalFilePath;
    NSString *_journalBackupFilePath;
    NSFileHandle *_journalFileHandle;
    struct unique_ptr<(anonymous namespace)::Storage, std::default_delete<(anonymous namespace)::Storage>> { struct __compressed_pair<(anonymous namespace)::Storage *, std::default_delete<(anonymous namespace)::Storage>> { struct Storage *__value_; } __ptr_; } _storage_ptr;
    long long _redundantOpCount;
    struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _mutex;
}

@property (readonly, nonatomic) unsigned long long size;
@property (readonly, nonatomic) long long maxSize;

+ (id)cacheWithDirectory:(id)arg0 maxSize:(long long)arg1;

- (void)putData:(id)arg0 forKey:(id)arg1;
- (id)initWithDirectory:(id)arg0 maxSize:(long long)arg1;
- (void)writeJournalFileWithData:(id)arg0 error:(out id *)arg1;
- (BOOL)initializeCache;
- (BOOL)recoverOrCreateJournalLockedForceRecreation:(BOOL)arg0;
- (unsigned long long)readJournal;
- (BOOL)rebuildJournalLocked;
- (void)openJournalFileHandleLocked;
- (BOOL)readJournalLine:(id)arg0;
- (long long)maxSize;
- (BOOL)containsKey:(id)arg0;
- (BOOL)removeDataForKey:(id)arg0;
- (void)enumerateKeysUsingBlock:(id /* block */)arg0;
- (id)dataForKey:(id)arg0;
- (void).cxx_destruct;
- (unsigned long long)size;
- (id).cxx_construct;

@end
