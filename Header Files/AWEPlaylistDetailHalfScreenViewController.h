//
//     Generated by private class-dump
//

@class UILabel, AWEMusicExceptionalView, UITableView, NSObject, UITapGestureRecognizer, NSDictionary, AWEPlaylistMoreActionSheetPresenter, UIButton, UIScrollView, UIView, AWEButton, AWEMusicPlayEventService, NSString, CAGradientLayer, AWEPlaylistAnchorDetailHeaderCell, AWEPlaylistDetailHalfScreenViewModel, AWEBizUIBubble, UIPanGestureRecognizer;
@protocol MusicService;

@interface AWEPlaylistDetailHalfScreenViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIGestureRecognizerDelegate, AWEMusicServiceDelegate, AWEMusicExceptionalViewDelegate, AWEPlaylistAnchorDetailHeaderCellDelegate, AWEPlaylistDetailHalfScreenViewModelDelegate> {
    BOOL _isPanedInListView;
    BOOL _hasUpdatedConstraints;
    BOOL _tabBarOriHidden;
    BOOL _isNotFirstTimeLoad;
    BOOL _createBubbleShowed;
    BOOL _hideLunaDiversion;
    BOOL _hasReportedFirstFetch;
    NSDictionary *_trackParams;
    UIScrollView *_scrollView;
    UITableView *_tableView;
    UIButton *_closeButton;
    UIView *_bottomView;
    UIButton *_collectButton;
    UIButton *_gotoMyPlaylistButton;
    UIButton *_createPlaylistButton;
    UIButton *_gotoLunaButton;
    UILabel *_emptyPlaylistLabel;
    AWEMusicExceptionalView *_exceptionView;
    UIView *_tabBarSnapshot;
    AWEButton *_moreButton;
    AWEPlaylistAnchorDetailHeaderCell *_headerView;
    AWEPlaylistDetailHalfScreenViewModel *_viewModel;
    NSObject<MusicService> *_musicService;
    AWEMusicPlayEventService *_musicEventService;
    AWEPlaylistMoreActionSheetPresenter *_moreActionSheetPresenter;
    NSString *_playlistID;
    NSString *_currentPlayingUniqueId;
    NSString *_secUserID;
    UIView *_maskView;
    UIView *_containerView;
    UIView *_blockerView;
    UILabel *_blockerLabel;
    CAGradientLayer *_blockerGradientLayer;
    UITapGestureRecognizer *_tapGes;
    UIPanGestureRecognizer *_panGes;
    double _containerViewBottomOffsetY;
    double _actionSheetHeight;
    NSDictionary *_settingsDic;
    AWEBizUIBubble *_createBubble;
    long long _maxPlayableCount;
    double _showTime;
    NSString *_processID;
}

@property (retain, nonatomic) UIScrollView *scrollView;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) UIButton *closeButton;
@property (retain, nonatomic) UIView *bottomView;
@property (retain, nonatomic) UIButton *collectButton;
@property (retain, nonatomic) UIButton *gotoMyPlaylistButton;
@property (retain, nonatomic) UIButton *createPlaylistButton;
@property (retain, nonatomic) UIButton *gotoLunaButton;
@property (retain, nonatomic) UILabel *emptyPlaylistLabel;
@property (retain, nonatomic) AWEMusicExceptionalView *exceptionView;
@property (retain, nonatomic) UIView *tabBarSnapshot;
@property (retain, nonatomic) AWEButton *moreButton;
@property (retain, nonatomic) AWEPlaylistAnchorDetailHeaderCell *headerView;
@property (retain, nonatomic) AWEPlaylistDetailHalfScreenViewModel *viewModel;
@property (retain, nonatomic) NSObject<MusicService> *musicService;
@property (retain, nonatomic) AWEMusicPlayEventService *musicEventService;
@property (retain, nonatomic) AWEPlaylistMoreActionSheetPresenter *moreActionSheetPresenter;
@property (copy, nonatomic) NSString *playlistID;
@property (copy, nonatomic) NSString *currentPlayingUniqueId;
@property (copy, nonatomic) NSString *secUserID;
@property (retain, nonatomic) UIView *maskView;
@property (retain, nonatomic) UIView *containerView;
@property (retain, nonatomic) UIView *blockerView;
@property (retain, nonatomic) UILabel *blockerLabel;
@property (retain, nonatomic) CAGradientLayer *blockerGradientLayer;
@property (retain, nonatomic) UITapGestureRecognizer *tapGes;
@property (retain, nonatomic) UIPanGestureRecognizer *panGes;
@property (nonatomic) BOOL isPanedInListView;
@property (nonatomic) BOOL hasUpdatedConstraints;
@property (nonatomic) double containerViewBottomOffsetY;
@property (nonatomic) double actionSheetHeight;
@property (nonatomic) BOOL tabBarOriHidden;
@property (nonatomic) BOOL isNotFirstTimeLoad;
@property (retain, nonatomic) NSDictionary *settingsDic;
@property (retain, nonatomic) AWEBizUIBubble *createBubble;
@property (nonatomic) BOOL createBubbleShowed;
@property (nonatomic) long long maxPlayableCount;
@property (nonatomic) BOOL hideLunaDiversion;
@property (nonatomic) double showTime;
@property (copy, nonatomic) NSString *processID;
@property (nonatomic) BOOL hasReportedFirstFetch;
@property (retain, nonatomic) NSDictionary *trackParams;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)secUserID;
- (void)setSecUserID:(id)arg0;
- (void)musicService:(id)arg0 playStatusChanged:(long long)arg1;
- (id)trackParams;
- (void)setPlaylistID:(id)arg0;
- (id)collectButton;
- (void)setCollectButton:(id)arg0;
- (void)setTrackParams:(id)arg0;
- (double)showTime;
- (void)setShowTime:(double)arg0;
- (id)panGes;
- (void)setPanGes:(id)arg0;
- (void)setSettingsDic:(id)arg0;
- (id)settingsDic;
- (void)p_setupUI;
- (void)p_loadMore;
- (id)tapGes;
- (void)setTapGes:(id)arg0;
- (void)selfPanned:(id)arg0;
- (void)setupBinding;
- (void)selfTapped:(id)arg0;
- (void)transferToOwnerWithUid:(id)arg0 secUid:(id)arg1 enterMethod:(id)arg2 extraTrackParams:(id)arg3;
- (id)musicService;
- (void)setMusicService:(id)arg0;
- (id)p_lunaButtonImage;
- (void)p_updateConstraints;
- (id)tabBarSnapshot;
- (void)setTabBarSnapshot:(id)arg0;
- (id)blockerView;
- (id)blockerLabel;
- (id)blockerGradientLayer;
- (void)setBlockerView:(id)arg0;
- (void)setBlockerGradientLayer:(id)arg0;
- (void)setBlockerLabel:(id)arg0;
- (id)p_publicTrackParams;
- (id)exceptionView;
- (void)p_showExceptionView;
- (void)setExceptionView:(id)arg0;
- (void)setMusicEventService:(id)arg0;
- (void)noNetViewDidTapTryAgain:(id)arg0;
- (id)musicEventService;
- (void)p_createPlaylist;
- (void)setCurrentPlayingUniqueId:(id)arg0;
- (void)p_updateStatus;
- (id)moreActionSheetPresenter;
- (id)p_sections;
- (id)p_sectionKey:(long long)arg0;
- (id)currentPlayingUniqueId;
- (void)playlistInfoOrSongListChanged;
- (void)tapPlaylistInfoWithParam:(id)arg0;
- (void)tapCollectionCompletion:(id /* block */)arg0;
- (void)tapOwnerInfo;
- (void)setMoreActionSheetPresenter:(id)arg0;
- (id)initWithPlaylistID:(id)arg0 secUserID:(id)arg1;
- (void)setContainerViewBottomOffsetY:(double)arg0;
- (double)actionSheetHeight;
- (void)setActionSheetHeight:(double)arg0;
- (void)setIsPanedInListView:(BOOL)arg0;
- (BOOL)isPanedInListView;
- (double)containerViewBottomOffsetY;
- (void)tapCollectionGoLunaCollectWithCompletion:(id /* block */)arg0;
- (void)headerCellHeightUpdateWithFoldStatus:(BOOL)arg0;
- (void)tapCreatePlaylistEntry;
- (BOOL)canShowCreatePlaylistVideoEntry;
- (BOOL)p_canPassRestriction;
- (void)refreshCollectStatus;
- (void)setHideLunaDiversion:(BOOL)arg0;
- (void)p_trackEnterEvent;
- (void)updateGotoLunaButton;
- (void)updateBlockerLabel;
- (void)setTabBarOriHidden:(BOOL)arg0;
- (BOOL)tabBarOriHidden;
- (void)p_reportFirstFetchedPlaylistIfNeeded;
- (BOOL)hasReportedFirstFetch;
- (void)setHasReportedFirstFetch:(BOOL)arg0;
- (BOOL)hideLunaDiversion;
- (void)updateCollectButtonWithModel:(id)arg0;
- (BOOL)isNotFirstTimeLoad;
- (void)setIsNotFirstTimeLoad:(BOOL)arg0;
- (id)p_guideUseLunaInfo;
- (BOOL)p_shouldAddLunaBlocker;
- (void)p_addLunaJumpBlocker;
- (void)p_updateFooterStatusWithHasMore:(BOOL)arg0;
- (BOOL)hasUpdatedConstraints;
- (void)setHasUpdatedConstraints:(BOOL)arg0;
- (void)setMaxPlayableCount:(long long)arg0;
- (double)bottomViewBottomMargin;
- (double)bottomSectionHeight;
- (id)gotoLunaButton;
- (BOOL)createBubbleShowed;
- (void)setCreateBubbleShowed:(BOOL)arg0;
- (id)createPlaylistButton;
- (id)createBubble;
- (void)setCreateBubble:(id)arg0;
- (long long)maxPlayableCount;
- (id)p_diversionTrackParams;
- (void)p_didClickCollectButton:(id)arg0;
- (void)p_gotoPlaylistDetail;
- (void)p_didClickGotoLunaButtonOrBlockerView:(long long)arg0 type:(id)arg1 completion:(id /* block */)arg2;
- (void)p_gotoLunaWithSongId:(id)arg0 source:(long long)arg1 trackParams:(id)arg2 completion:(id /* block */)arg3;
- (void)p_changeCollectStatus;
- (void)p_trackAddPlaylistEvent;
- (void)p_trackCollectEventWithStatus:(BOOL)arg0;
- (void)p_closeActionSheetWithClickArea:(id)arg0;
- (long long)p_getGraySongsCount;
- (id)p_isMusicTargetInfo;
- (double)closeSectionHeight;
- (id)emptyPlaylistLabel;
- (void)didClickBlockerView;
- (void)p_playModel:(id)arg0 indexPath:(id)arg1;
- (void)p_closeButtonClick;
- (void)p_showMore;
- (void)didClickCollectButton:(id)arg0;
- (void)didClickGotoPlaylistDetail:(id)arg0;
- (void)didClickCreatePlaylistButton:(id)arg0;
- (void)didClickGotoLunaButton:(id)arg0;
- (void)p_showCreateBubbleIfNeeded;
- (id)gotoMyPlaylistButton;
- (void)setGotoMyPlaylistButton:(id)arg0;
- (void)setCreatePlaylistButton:(id)arg0;
- (void)setGotoLunaButton:(id)arg0;
- (void)setEmptyPlaylistLabel:(id)arg0;
- (void)setScrollView:(id)arg0;
- (id)tableView:(id)arg0 viewForHeaderInSection:(long long)arg1;
- (long long)numberOfSectionsInTableView:(id)arg0;
- (void)viewDidLayoutSubviews;
- (void)tableView:(id)arg0 didSelectRowAtIndexPath:(id)arg1;
- (double)tableView:(id)arg0 heightForHeaderInSection:(long long)arg1;
- (void)setTableView:(id)arg0;
- (void)viewDidAppear:(BOOL)arg0;
- (long long)tableView:(id)arg0 numberOfRowsInSection:(long long)arg1;
- (void).cxx_destruct;
- (id)moreButton;
- (id)tableView;
- (id)processID;
- (void)setProcessID:(id)arg0;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (id)maskView;
- (void)setContainerView:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)setHeaderView:(id)arg0;
- (void)setMoreButton:(id)arg0;
- (void)setViewModel:(id)arg0;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)containerView;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (id)viewModel;
- (void)viewWillAppear:(BOOL)arg0;
- (id)headerView;
- (void)dealloc;
- (void)viewDidLoad;
- (id)scrollView;
- (void)setMaskView:(id)arg0;
- (double)tableView:(id)arg0 heightForFooterInSection:(long long)arg1;
- (id)tableView:(id)arg0 viewForFooterInSection:(long long)arg1;
- (id)bottomView;
- (void)show:(id /* block */)arg0;
- (BOOL)isCurrentUser;
- (void)setBottomView:(id)arg0;
- (id)closeButton;
- (void)setCloseButton:(id)arg0;
- (id)playlistID;

@end
