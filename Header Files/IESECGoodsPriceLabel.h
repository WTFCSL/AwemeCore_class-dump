//
//     Generated by private class-dump
//

@class UIFont;

@interface IESECGoodsPriceLabel : UILabel {
    BOOL _showGapPriceTag;
    BOOL _showMaxPrice;
    BOOL _showComma;
    BOOL _showSuffix;
    UIFont *_pricePrefixFont;
    UIFont *_priceTagFont;
    UIFont *_priceIntegerFont;
    UIFont *_priceDecimalFont;
    UIFont *_priceSuffixFont;
    UIFont *_thresholdFont;
    long long _numberOfTagSpacing;
    long long _numberOfSuffixSpacing;
}

@property (retain, nonatomic) UIFont *pricePrefixFont;
@property (retain, nonatomic) UIFont *priceTagFont;
@property (retain, nonatomic) UIFont *priceIntegerFont;
@property (retain, nonatomic) UIFont *priceDecimalFont;
@property (retain, nonatomic) UIFont *priceSuffixFont;
@property (retain, nonatomic) UIFont *thresholdFont;
@property (nonatomic) BOOL showGapPriceTag;
@property (nonatomic) BOOL showMaxPrice;
@property (nonatomic) BOOL showComma;
@property (nonatomic) BOOL showSuffix;
@property (nonatomic) long long numberOfTagSpacing;
@property (nonatomic) long long numberOfSuffixSpacing;

+ (id)priceFormat:(id)arg0;
+ (BOOL)canShowMaxPriceWithGoods:(id)arg0;
+ (id)p_makeAttributedStringWithGoodsPrice:(id)arg0 priceIntegerFont:(id)arg1 priceTagFont:(id)arg2 priceDecimalFont:(id)arg3 showComma:(BOOL)arg4 numberOfTagSpacing:(long long)arg5;
+ (id)p_convertFenToYuan:(id)arg0;
+ (id)spacingWithWidth:(long long)arg0;
+ (id)p_addCommaToPriceString:(id)arg0 showComma:(BOOL)arg1;
+ (id)makeAttributesWithMinPrice:(id)arg0 maxPrice:(id)arg1 priceIntegerFont:(id)arg2 priceTagFont:(id)arg3 priceDecimalFont:(id)arg4 priceSuffixFont:(id)arg5 showMaxPrice:(BOOL)arg6 showGapPriceTag:(BOOL)arg7 showComma:(BOOL)arg8 showSuffix:(BOOL)arg9 suffix:(id)arg10 numberOfTagSpacing:(long long)arg11 numberOfSuffixSpacing:(long long)arg12;
+ (id)makeAttributesWithPriceElement:(id)arg0 showMaxPrice:(BOOL)arg1 showSuffix:(BOOL)arg2;
+ (id)updatePrice:(id)arg0 suffix:(id)arg1 suffixFont:(id)arg2;
+ (double)calculateWidthWith:(id)arg0 height:(double)arg1 showMaxPrice:(BOOL)arg2 showSuffix:(BOOL)arg3;

- (id)priceTagFont;
- (id)priceIntegerFont;
- (id)priceDecimalFont;
- (void)updatePriceWithCentPrice:(id)arg0;
- (id)priceSuffixFont;
- (void)setPriceTagFont:(id)arg0;
- (void)setPriceIntegerFont:(id)arg0;
- (void)setPriceDecimalFont:(id)arg0;
- (void)setPriceSuffixFont:(id)arg0;
- (void)updateMinPriceWithGoods:(id)arg0;
- (void)setPricePrefixFont:(id)arg0;
- (void)updateGapPriceWithGoods:(id)arg0 withPrefix:(id)arg1;
- (void)updatePriceWithGoodsMinPrice:(id)arg0 maxPrice:(id)arg1;
- (void)updatePriceWithGoods:(id)arg0;
- (void)updateDiscountPriceWithCentPrice:(id)arg0;
- (BOOL)doesGoodsConformsToPriceProtocol:(id)arg0;
- (void)updatePriceWithStringPrice:(id)arg0;
- (void)updateShowMaxPriceWithGoods:(id)arg0;
- (BOOL)showComma;
- (void)updateGapPriceWithGoods:(id)arg0;
- (BOOL)showSuffix;
- (void)updatePriceSuffix:(id)arg0;
- (void)updatePricePrefix:(id)arg0;
- (id)p_makeAttributedPriceExtraInfo:(id)arg0 isHeader:(BOOL)arg1;
- (void)updatePriceWithGoodsPrice:(id)arg0;
- (id)thresholdFont;
- (long long)numberOfTagSpacing;
- (void)setShowSuffix:(BOOL)arg0;
- (BOOL)showMaxPrice;
- (BOOL)showGapPriceTag;
- (id)pricePrefixFont;
- (void)updateGapPriceWithPrice:(id)arg0 withPrefix:(id)arg1;
- (void)updateGapPriceWithGoods:(id)arg0 withPrefix:(id)arg1 withSuffix:(id)arg2;
- (void)updateDiscountPriceWithCentPrice:(id)arg0 withPrefix:(id)arg1 withSuffix:(id)arg2;
- (void)newUpdateDiscountPriceWithCentPrice:(id)arg0 withPrefix:(id)arg1 withSuffix:(id)arg2;
- (void)updateMarkPriceWithGoods:(id)arg0;
- (void)updateMarkPriceWithGoodsMarketPrice:(id)arg0 withPrefix:(id)arg1;
- (void)configWithPriceElement:(id)arg0;
- (void)setThresholdFont:(id)arg0;
- (void)setShowGapPriceTag:(BOOL)arg0;
- (void)setShowMaxPrice:(BOOL)arg0;
- (void)setShowComma:(BOOL)arg0;
- (void)setNumberOfTagSpacing:(long long)arg0;
- (long long)numberOfSuffixSpacing;
- (void)setNumberOfSuffixSpacing:(long long)arg0;
- (id)init;
- (void).cxx_destruct;

@end
