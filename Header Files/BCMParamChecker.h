//
//     Generated by private class-dump
//

@class NSDictionary, NSArray;

@interface BCMParamChecker : NSObject {
    BOOL _checkEnabled;
    BOOL _configReady;
    BOOL _configChecking;
    id /* block */ _paramCheckHandler;
    NSDictionary *_pageCheckInfo;
    NSDictionary *_unitCheckInfo;
    NSDictionary *_unitCCheckInfo;
    NSArray *_ignoreCheckBtmList;
    NSArray *_ignoreCheckBcmTypeParamsList;
    NSDictionary *_extraRuleInfo;
}

@property (class, readonly) BCMParamChecker *shared;

@property BOOL configReady;
@property BOOL configChecking;
@property (copy, nonatomic) NSDictionary *pageCheckInfo;
@property (copy, nonatomic) NSDictionary *unitCheckInfo;
@property (copy, nonatomic) NSDictionary *unitCCheckInfo;
@property (copy, nonatomic) NSArray *ignoreCheckBtmList;
@property (copy, nonatomic) NSArray *ignoreCheckBcmTypeParamsList;
@property (copy, nonatomic) NSDictionary *extraRuleInfo;
@property BOOL checkEnabled;
@property (copy, nonatomic) id /* block */ paramCheckHandler;

+ (id)shared;

- (id)getEnumBstFormInfo:(id)arg0;
- (id)ignoreCheckBtmList;
- (void)setIgnoreCheckBtmList:(id)arg0;
- (id)ignoreCheckBcmTypeParamsList;
- (void)setIgnoreCheckBcmTypeParamsList:(id)arg0;
- (BOOL)checkEnabled;
- (BOOL)configReady;
- (BOOL)configChecking;
- (void)setConfigChecking:(BOOL)arg0;
- (void)setConfigReady:(BOOL)arg0;
- (void)convertDataFromJsonDict:(id)arg0;
- (void)fetchDataFromNetwork:(id /* block */)arg0;
- (void)convertGeckoToConfigPath:(id)arg0;
- (id)pageCheckInfo;
- (id)unitCheckInfo;
- (BOOL)matchVersionFromVersionList:(id)arg0;
- (void)setPageCheckInfo:(id)arg0;
- (void)setUnitCCheckInfo:(id)arg0;
- (void)setUnitCheckInfo:(id)arg0;
- (void)setExtraRuleInfo:(id)arg0;
- (void)updateParamCheckConfigIfNeed;
- (void)checkModelWithPage:(id)arg0 previoueBcmHolder:(id)arg1 type:(long long)arg2 btm:(id)arg3;
- (void)checkTypePage:(id)arg0 previoueBcmHolder:(id)arg1 btm:(id)arg2;
- (void)checkBstGroupTypeWithPage:(id)arg0 previoueBcmHolder:(id)arg1 btm:(id)arg2;
- (void)checkBstGroupTypeWithParams:(id)arg0 host:(id)arg1 btm:(id)arg2;
- (id)formatBtm:(id)arg0 host:(id)arg1 withCheckType:(long long)arg2;
- (id)simpleCheckBcmParams:(id)arg0 checkType:(long long)arg1 btm:(id)arg2;
- (void)reportWithErrorList:(id)arg0 btm:(id)arg1 errorCode:(id)arg2 extraRule:(id)arg3;
- (void)checkExtraRulesWithBtm:(id)arg0 checkType:(long long)arg1 originParams:(id)arg2;
- (id)formatErrorInfoWithErrorList:(id)arg0 btm:(id)arg1 extraRule:(id)arg2;
- (id)getConfigParamsWithBtm:(id)arg0 checkType:(long long)arg1;
- (void)checkBstGroupTypeWithParams:(id)arg0 host:(id)arg1 btm:(id)arg2 currentPage:(id)arg3;
- (id)unitCCheckInfo;
- (BOOL)checkBtmIsInConfig:(id)arg0 checkType:(long long)arg1;
- (id)checkOriginParams:(id)arg0 withConfigParamsList:(id)arg1;
- (BOOL)checkValueType:(id)arg0 expectValueType:(long long)arg1;
- (id)extraRuleInfo;
- (id /* block */)paramCheckHandler;
- (id)ecomEnumBstFormInfoFrom:(id)arg0;
- (void)bcmParamCheckSourcePage:(id)arg0 jumpingNode:(id)arg1;
- (void)checkBcmParamsAndReportWithBtm:(id)arg0 host:(id)arg1 checkType:(long long)arg2 originParams:(id)arg3;
- (BOOL)checkBcmBiz:(id)arg0 api:(id)arg1 responder:(id)arg2;
- (id)checkBcmKey:(id)arg0 api:(id)arg1 responder:(id)arg2;
- (void)setCheckEnabled:(BOOL)arg0;
- (void)setParamCheckHandler:(id /* block */)arg0;
- (void).cxx_destruct;

@end
