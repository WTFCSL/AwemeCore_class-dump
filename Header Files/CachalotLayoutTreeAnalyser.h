//
//     Generated by private class-dump
//

@class CachalotContext, NSArray, CachalotLayoutModel, CachalotRenderPipeline, NSMutableDictionary, CachalotErrorMonitor, CachalotContainerLayoutDurationMonitor, NSObject;
@protocol OS_dispatch_queue;

@interface CachalotLayoutTreeAnalyser : NSObject {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _syncLock;
    struct _opaque_pthread_mutexattr_t { long long __sig; char __opaque[8]; } _syncLockAttr;
    BOOL _concurrentSizeMeasure;
    BOOL _syncAtMainThread;
    BOOL _fixParentMissing;
    BOOL _needToSync;
    NSArray *_layoutResultCache;
    double _containerWidth;
    double _concurrentSizeMeasureTimeout;
    CachalotContext *_engineContext;
    CachalotRenderPipeline *_pipeline;
    CachalotContainerLayoutDurationMonitor *_layoutMonitor;
    CachalotErrorMonitor *_errorMonitor;
    CachalotLayoutModel *_topLayoutModel;
    NSArray *_layoutResult;
    NSArray *_lastLayoutResult;
    NSMutableDictionary *_layoutNodeMap;
    NSObject<OS_dispatch_queue> *_concurrentMeasureQueue;
    NSObject<OS_dispatch_queue> *_serialMeasureQueue;
    id /* block */ _fetchContainerFrame;
    struct CGSize { double width; double height; } _screenSize;
}

@property (weak, nonatomic) CachalotContext *engineContext;
@property (weak, nonatomic) CachalotRenderPipeline *pipeline;
@property (retain, nonatomic) CachalotContainerLayoutDurationMonitor *layoutMonitor;
@property (retain, nonatomic) CachalotErrorMonitor *errorMonitor;
@property (retain, nonatomic) CachalotLayoutModel *topLayoutModel;
@property (copy, nonatomic) NSArray *layoutResult;
@property (copy, nonatomic) NSArray *lastLayoutResult;
@property (copy, nonatomic) NSArray *layoutResultCache;
@property (nonatomic) BOOL needToSync;
@property (retain, nonatomic) NSMutableDictionary *layoutNodeMap;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *concurrentMeasureQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *serialMeasureQueue;
@property (copy, nonatomic) id /* block */ fetchContainerFrame;
@property (nonatomic) struct CGSize { double width; double height; } screenSize;
@property (nonatomic) double containerWidth;
@property (nonatomic) BOOL concurrentSizeMeasure;
@property (nonatomic) double concurrentSizeMeasureTimeout;
@property (nonatomic) BOOL syncAtMainThread;
@property (nonatomic) BOOL fixParentMissing;

- (void)setFetchContainerFrame:(id /* block */)arg0;
- (BOOL)syncAtMainThread;
- (id)processAndGenerateFinalLayoutModels:(id /* block */)arg0;
- (id)updateTopLayoutModel:(id)arg0 finalLayoutsReadyBlock:(id /* block */)arg1;
- (id)topLayoutModel;
- (void)p_mergeLayoutModel:(id)arg0 withModel:(id)arg1;
- (id)mergeTopLayoutModelWithModel:(id)arg0 finalLayoutsReadyBlock:(id /* block */)arg1;
- (BOOL)fixParentMissing;
- (id)p_measureLayoutModel:(id)arg0 errorCode:(unsigned long long *)arg1;
- (id)lastLayoutResult;
- (id)p_diffLayoutResults:(id)arg0 withResults:(id)arg1;
- (id)layoutResult;
- (void)setLastLayoutResult:(id)arg0;
- (void)setLayoutResult:(id)arg0;
- (void)p_syncLock;
- (void)p_syncUnlock;
- (void)setLayoutResultCache:(id)arg0;
- (id)layoutNodeMap;
- (id)p_childLayoutModelsOfParent:(id)arg0;
- (id)layoutModelOfId:(id)arg0;
- (void)p_removeLayout:(id)arg0;
- (id)processAndGenerateFinalLayoutModels;
- (void)p_findLeafCardForLayoutNode:(id)arg0 leafs:(id *)arg1;
- (unsigned long long)measureLayoutModel:(id)arg0 finalLayoutsReadyBlock:(id /* block */)arg1;
- (id)updateTopLayoutModel:(id)arg0;
- (void)p_syncLayoutsToCache;
- (void)setNeedToSync:(BOOL)arg0;
- (id)errorMonitor;
- (void)preOrderTraverseNode:(id)arg0 withBlock:(id /* block */)arg1 onlyLeafNode:(BOOL)arg2;
- (void)p_preprocessLayoutModelNonRecursion:(id)arg0 containerWidth:(double)arg1 errorCode:(unsigned long long *)arg2;
- (id)p_generateLayoutModelAbsoluteFrame:(id)arg0 containerWidth:(double)arg1;
- (id)allRenderableLayoutsOfParent:(id)arg0;
- (id)p_stuffContextForRenderableLayoutModel:(id)arg0;
- (double)concurrentSizeMeasureTimeout;
- (BOOL)concurrentSizeMeasure;
- (void)p_calculateParentLayoutSizeForTopLayout:(id)arg0;
- (id /* block */)fetchContainerFrame;
- (void)preOrderTraverseNode:(id /* block */)arg0 onlyLeafNode:(BOOL)arg1;
- (void)setConcurrentSizeMeasure:(BOOL)arg0;
- (void)setFetchContainerFrameBlock:(id /* block */)arg0;
- (id)mergeTopLayoutModelWithModel:(id)arg0;
- (void)mergeLayoutModel:(id)arg0 withModel:(id)arg1;
- (id)squashedLayoutModelsOfParentLayoutModel:(id)arg0;
- (void)removeAllForwardingNodeForRoot:(id)arg0;
- (void)replaceModelOfId:(id)arg0 withLayoutModel:(id)arg1;
- (id)deleteLayoutModels:(id)arg0;
- (void)refreshComponentOfId:(id)arg0 updateHeight:(double)arg1;
- (id)refreshLayoutNode:(id)arg0;
- (id)refreshLayoutNodes:(id)arg0;
- (void)forceFlush;
- (void)setEngineContext:(id)arg0;
- (void)stuffContextForLayout:(id)arg0;
- (id)retrieveAllDirtyLayouts:(unsigned long long)arg0;
- (id)layoutResultCache;
- (void)setConcurrentSizeMeasureTimeout:(double)arg0;
- (void)setSyncAtMainThread:(BOOL)arg0;
- (void)setFixParentMissing:(BOOL)arg0;
- (void)setErrorMonitor:(id)arg0;
- (void)setTopLayoutModel:(id)arg0;
- (void)setLayoutNodeMap:(id)arg0;
- (id)concurrentMeasureQueue;
- (void)setConcurrentMeasureQueue:(id)arg0;
- (id)serialMeasureQueue;
- (void)setSerialMeasureQueue:(id)arg0;
- (void)sync;
- (struct CGSize { double x0; double x1; })screenSize;
- (id)pipeline;
- (id)init;
- (void).cxx_destruct;
- (id)flush;
- (void)setLayoutMonitor:(id)arg0;
- (id)layoutMonitor;
- (void)dealloc;
- (void)setScreenSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setPipeline:(id)arg0;
- (BOOL)needToSync;
- (id)engineContext;
- (void)setContainerWidth:(double)arg0;
- (double)containerWidth;

@end
