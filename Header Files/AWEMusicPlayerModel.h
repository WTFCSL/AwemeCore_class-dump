//
//     Generated by private class-dump
//

@class NSString, NSArray, AWEMusicVideoModel, NSDictionary, AWEMusicRiskInfoModel, NSObject, AWEMusicPlayerMeta, NSNumber;

@interface AWEMusicPlayerModel : MTLModel {
    BOOL _canBackgroundPlay;
    BOOL _enableTargetLoudness;
    BOOL _isCopyrightPreview;
    BOOL _isCopyrightAudition;
    BOOL _isRequestingVideoModel;
    BOOL _useVidPlay;
    BOOL _isSeekingOver;
    BOOL _onlyVipPlayable;
    long long _type;
    NSString *_id;
    NSString *_uniqueId;
    NSString *_musicId;
    NSString *_title;
    NSString *_artist;
    NSString *_albumTitle;
    double _playbackDuration;
    NSString *_artworkURLStr;
    NSArray *_playURLStrs;
    NSDictionary *_eventData;
    long long _playActionTimes;
    NSString *_key;
    NSObject *_rawModel;
    AWEMusicPlayerMeta *_meta;
    NSNumber *_targetLoudness;
    double _startTime;
    double _endTime;
    double _chorusStartTime;
    NSString *_playActionType;
    NSString *_playFinishType;
    AWEMusicRiskInfoModel *_riskInfo;
    unsigned long long _musicExtraType;
    NSString *_vid;
    unsigned long long _quality;
    AWEMusicVideoModel *_videoModel;
    long long _videoModelType;
    id /* block */ _videoModelUpdateBlock;
    NSString *_rquestId;
}

@property (copy, nonatomic) NSString *awe_enterMethod;
@property (nonatomic) long long type;
@property (copy, nonatomic) NSString *id;
@property (retain, nonatomic) NSString *uniqueId;
@property (copy, nonatomic) NSString *musicId;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *artist;
@property (copy, nonatomic) NSString *albumTitle;
@property (nonatomic) double playbackDuration;
@property (copy, nonatomic) NSString *artworkURLStr;
@property (copy, nonatomic) NSArray *playURLStrs;
@property (nonatomic) BOOL canBackgroundPlay;
@property (retain, nonatomic) NSDictionary *eventData;
@property (nonatomic) long long playActionTimes;
@property (copy, nonatomic) NSString *key;
@property (retain, nonatomic) NSObject *rawModel;
@property (retain, nonatomic) AWEMusicPlayerMeta *meta;
@property (nonatomic) BOOL enableTargetLoudness;
@property (retain, nonatomic) NSNumber *targetLoudness;
@property (nonatomic) BOOL isCopyrightPreview;
@property (nonatomic) BOOL isCopyrightAudition;
@property (nonatomic) double startTime;
@property (nonatomic) double endTime;
@property (nonatomic) double chorusStartTime;
@property (copy, nonatomic) NSString *playActionType;
@property (copy, nonatomic) NSString *playFinishType;
@property (retain, nonatomic) AWEMusicRiskInfoModel *riskInfo;
@property (nonatomic) unsigned long long musicExtraType;
@property (retain, nonatomic) NSString *vid;
@property (nonatomic) unsigned long long quality;
@property (retain, nonatomic) AWEMusicVideoModel *videoModel;
@property (nonatomic) long long videoModelType;
@property (nonatomic) BOOL isRequestingVideoModel;
@property (nonatomic) BOOL useVidPlay;
@property (copy, nonatomic) id /* block */ videoModelUpdateBlock;
@property (copy, nonatomic) NSString *rquestId;
@property (nonatomic) BOOL isSeekingOver;
@property (nonatomic) BOOL onlyVipPlayable;

- (id)vid;
- (BOOL)onlyVipPlayable;
- (void)setVid:(id)arg0;
- (id)authenticationInfo;
- (id)videoModel;
- (void)setVideoModel:(id)arg0;
- (void)setMusicId:(id)arg0;
- (id)musicId;
- (id)rawModel;
- (void)setRawModel:(id)arg0;
- (void)setCanBackgroundPlay:(BOOL)arg0;
- (void)setArtworkURLStr:(id)arg0;
- (void)setChorusStartTime:(double)arg0;
- (long long)videoModelType;
- (void)setVideoModelType:(long long)arg0;
- (void)setOnlyVipPlayable:(BOOL)arg0;
- (BOOL)canBackgroundPlay;
- (id)targetLoudness;
- (void)setTargetLoudness:(id)arg0;
- (void)setRiskInfo:(id)arg0;
- (unsigned long long)musicExtraType;
- (void)setPlayURLStrs:(id)arg0;
- (void)setPlayActionTimes:(long long)arg0;
- (void)setIsCopyrightPreview:(BOOL)arg0;
- (BOOL)isCopyrightPreview;
- (void)setIsCopyrightAudition:(BOOL)arg0;
- (id)playURLStrs;
- (BOOL)isCopyrightAudition;
- (id)initWithJSBDict:(id)arg0;
- (id)buildNowPlayingInfo;
- (BOOL)isBeyoundCopyrightLimit:(double)arg0;
- (BOOL)isBeforeCopyrightLimit:(double)arg0;
- (BOOL)canAddedToQueue;
- (id)artworkURLStr;
- (long long)playActionTimes;
- (BOOL)enableTargetLoudness;
- (void)setEnableTargetLoudness:(BOOL)arg0;
- (double)chorusStartTime;
- (id)playActionType;
- (void)setPlayActionType:(id)arg0;
- (id)playFinishType;
- (void)setPlayFinishType:(id)arg0;
- (id)riskInfo;
- (void)setMusicExtraType:(unsigned long long)arg0;
- (BOOL)isRequestingVideoModel;
- (void)setIsRequestingVideoModel:(BOOL)arg0;
- (BOOL)useVidPlay;
- (void)setUseVidPlay:(BOOL)arg0;
- (id /* block */)videoModelUpdateBlock;
- (void)setVideoModelUpdateBlock:(id /* block */)arg0;
- (id)rquestId;
- (void)setRquestId:(id)arg0;
- (BOOL)isSeekingOver;
- (void)setIsSeekingOver:(BOOL)arg0;
- (void)setAwe_enterMethod:(id)arg0;
- (id)awe_enterMethod;
- (id)initWithMusicModel:(id)arg0 ignoreAuditionDuration:(BOOL)arg1;
- (id)key;
- (id)artist;
- (void)setQuality:(unsigned long long)arg0;
- (double)playbackDuration;
- (id)uniqueId;
- (void)setMeta:(id)arg0;
- (id)meta;
- (void)setStartTime:(double)arg0;
- (void)setUniqueId:(id)arg0;
- (id)eventData;
- (unsigned long long)quality;
- (void).cxx_destruct;
- (long long)type;
- (id)id;
- (double)endTime;
- (void)setPlaybackDuration:(double)arg0;
- (id)title;
- (void)setKey:(id)arg0;
- (void)setType:(long long)arg0;
- (double)startTime;
- (void)setEndTime:(double)arg0;
- (void)setArtist:(id)arg0;
- (void)setTitle:(id)arg0;
- (void)setId:(id)arg0;
- (BOOL)isVerified;
- (void)setEventData:(id)arg0;
- (id)albumTitle;
- (void)setAlbumTitle:(id)arg0;

@end
