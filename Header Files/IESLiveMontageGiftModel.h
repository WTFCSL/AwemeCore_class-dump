//
//     Generated by private class-dump
//

@class HTSLiveAssetStruct, NSString, IESLiveMontageGiftScreenShot, UIView, NSMutableArray;
@protocol IESLiveMontageGiftReportDelegate, IESLiveHierarchyContainerView;

@interface IESLiveMontageGiftModel : IESLiveDynamicModel {
    BOOL _enableMultiFrame;
    BOOL _needScreenShot;
    long long _overlayType;
    UIView<IESLiveHierarchyContainerView> *_superView;
    long long _giftType;
    id<IESLiveMontageGiftReportDelegate> _reportDelegate;
    struct CGSize { double width; double height; } _renderSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
}

@property (retain, nonatomic) HTSLiveAssetStruct *lokiEffectModel;
@property (nonatomic) double duration;
@property (retain, nonatomic) IESLiveMontageGiftScreenShot *screenShot;
@property (copy, nonatomic) NSString *textureKey;
@property (nonatomic) struct CGSize { double width; double height; } renderSize;
@property (nonatomic) unsigned long long fitMode;
@property (nonatomic) long long renderFPS;
@property (nonatomic) long long overlayType;
@property (retain, nonatomic) UIView<IESLiveHierarchyContainerView> *superView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;
@property (nonatomic) long long giftType;
@property (nonatomic) BOOL enableMultiFrame;
@property (nonatomic) BOOL needScreenShot;
@property (weak, nonatomic) id<IESLiveMontageGiftReportDelegate> reportDelegate;
@property (retain, nonatomic) NSMutableArray *errors;

- (id)superView;
- (void)setSuperView:(id)arg0;
- (void)setGiftType:(long long)arg0;
- (void)setReportDelegate:(id)arg0;
- (id)reportDelegate;
- (id)getLocalPath;
- (BOOL)enableMultiFrame;
- (BOOL)needScreenShot;
- (BOOL)isScreenShotReady;
- (id)montageGiftInfo;
- (id)montageGiftInfoDict;
- (void)setEnableMultiFrame:(BOOL)arg0;
- (void)setNeedScreenShot:(BOOL)arg0;
- (void).cxx_destruct;
- (void)report;
- (struct CGSize { double x0; double x1; })renderSize;
- (long long)overlayType;
- (BOOL)isAvailable;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (long long)giftType;
- (void)setOverlayType:(long long)arg0;

@end
