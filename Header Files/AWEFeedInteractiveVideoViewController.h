//
//     Generated by private class-dump
//

@class AWEAdPlayableInteractiveInfo, UIView, NSTimer, NSString, NSMutableDictionary, CMCFeedPlayableContenxt, AWEPlayableWebViewPreloadManager, CAGradientLayer, AWEAdInteractiveVideoModel, NSObject, UIViewController, AWEAdPlayableInteractiveStatusModel;
@protocol AWEFeedPlayableMaskView, AWEFeedPlayableGCDTimer, AWECommerceAudioPlayer, AWEFeedPlayableContainerProtocol, AWEFeedPlayableLoadingMaskView, AWEFeedPlayableScrollTipView;

@interface AWEFeedInteractiveVideoViewController : AWEFeedCellViewController <AWEFeedPlayableContainerLifeCycleProtocol, UIGestureRecognizerDelegate> {
    BOOL _playFromFirstFrame;
    BOOL _isCurrentVCShow;
    BOOL _isTimerRunning;
    BOOL _hasReset;
    AWEAdInteractiveVideoModel *_currentVideoInfo;
    AWEAdPlayableInteractiveInfo *_interactiveInfo;
    UIViewController<AWEFeedPlayableContainerProtocol> *_viewController;
    UIView<AWEFeedPlayableMaskView> *_maskView;
    UIView<AWEFeedPlayableLoadingMaskView> *_loadingMaskView;
    UIView<AWEFeedPlayableScrollTipView> *_scrollTipView;
    CAGradientLayer *_bottomMaskLayer;
    unsigned long long _showType;
    UIView *_alphaPlayerView;
    CMCFeedPlayableContenxt *_playableContext;
    NSObject<AWEFeedPlayableGCDTimer> *_alphaPlayerTimer;
    long long _alphaPlayerCurrTime;
    NSMutableDictionary *_alphaPlayerTimerEvents;
    NSObject<AWECommerceAudioPlayer> *_audioPlayer;
    double _effectiveDuration;
    id /* block */ _playerStartPlayHandler;
    double _maskShowTimeInterval;
    NSMutableDictionary *_videoList;
    long long _bgShowReason;
    long long _currentShowTimestamp;
    NSTimer *_timer;
    long long _timerCount;
    AWEAdPlayableInteractiveStatusModel *_interactiveStatusModel;
    AWEPlayableWebViewPreloadManager *_preloadManager;
}

@property (retain, nonatomic) AWEAdInteractiveVideoModel *currentVideoInfo;
@property (retain, nonatomic) AWEAdPlayableInteractiveInfo *interactiveInfo;
@property (retain, nonatomic) UIViewController<AWEFeedPlayableContainerProtocol> *viewController;
@property (retain, nonatomic) UIView<AWEFeedPlayableMaskView> *maskView;
@property (retain, nonatomic) UIView<AWEFeedPlayableLoadingMaskView> *loadingMaskView;
@property (retain, nonatomic) UIView<AWEFeedPlayableScrollTipView> *scrollTipView;
@property (retain, nonatomic) CAGradientLayer *bottomMaskLayer;
@property (nonatomic) unsigned long long showType;
@property (weak, nonatomic) UIView *alphaPlayerView;
@property (retain, nonatomic) CMCFeedPlayableContenxt *playableContext;
@property (retain, nonatomic) NSObject<AWEFeedPlayableGCDTimer> *alphaPlayerTimer;
@property (nonatomic) long long alphaPlayerCurrTime;
@property (retain, nonatomic) NSMutableDictionary *alphaPlayerTimerEvents;
@property (retain, nonatomic) NSObject<AWECommerceAudioPlayer> *audioPlayer;
@property (nonatomic) double effectiveDuration;
@property (nonatomic) BOOL playFromFirstFrame;
@property (copy, nonatomic) id /* block */ playerStartPlayHandler;
@property (nonatomic) double maskShowTimeInterval;
@property (nonatomic) BOOL isCurrentVCShow;
@property (retain, nonatomic) NSMutableDictionary *videoList;
@property (nonatomic) long long bgShowReason;
@property (nonatomic) long long currentShowTimestamp;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) long long timerCount;
@property (nonatomic) BOOL isTimerRunning;
@property (retain, nonatomic) AWEAdPlayableInteractiveStatusModel *interactiveStatusModel;
@property (retain, nonatomic) AWEPlayableWebViewPreloadManager *preloadManager;
@property (nonatomic) BOOL hasReset;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setVideoList:(id)arg0;
- (id)videoList;
- (id)preloadManager;
- (id)playableStayDuration;
- (void)appDidEnterBackgroundNotification:(id)arg0;
- (void)setIsTimerRunning:(BOOL)arg0;
- (BOOL)isTimerRunning;
- (void)trackOver;
- (id)currentVideoInfo;
- (void)setCurrentVideoInfo:(id)arg0;
- (void)setTimerCount:(long long)arg0;
- (BOOL)hasReset;
- (void)setHasReset:(BOOL)arg0;
- (void)addLongPressPanelObserver;
- (void)setPlayFromFirstFrame:(BOOL)arg0;
- (void)resetAllViewComponents;
- (id)loadingMaskView;
- (void)setIsCurrentVCShow:(BOOL)arg0;
- (long long)playableEnterFrom;
- (BOOL)playFromFirstFrame;
- (void)trackPlay;
- (void)trackPlableEvent:(id)arg0 extraParams:(id)arg1;
- (id)playableContext;
- (void)trackBreak;
- (void)trackMaskView:(id)arg0 adExtraData:(id)arg1;
- (void)trackFeedPlayableView:(id)arg0 adExtraData:(id)arg1;
- (id)bottomMaskLayer;
- (void)triggerAdActionAfter:(double)arg0 block:(id /* block */)arg1;
- (void)addAlphaPlayerView;
- (id)scrollTipView;
- (void)setAlphaPlayerView:(id)arg0;
- (id)alphaPlayerView;
- (void)setMaskShowTimeInterval:(double)arg0;
- (void)removeAllViewComponents;
- (void)setLoadingMaskView:(id)arg0;
- (void)showPlayablePage;
- (void)postVideoNotificationForAutoPlay;
- (BOOL)isCurrentVCShow;
- (id)publicParams;
- (id)playableInnerVideoParams;
- (id)playableUrl;
- (long long)currentMaterialViewableTime;
- (void)trackLongPressPanelWith:(id)arg0;
- (id)playablePlayDuration;
- (id)conversionPublicParam;
- (double)maskShowTimeInterval;
- (long long)backgroundShowReson;
- (long long)backgroundShowType;
- (id)backgroundStayDuration;
- (id)maskPublicParam;
- (void)replayFromPlayable;
- (void)replayFromLoading;
- (void)willSwipeToLeftOrRight:(id)arg0;
- (void)willChangeToOtherTab:(id)arg0;
- (void)setPreloadManager:(id)arg0;
- (void)playableWillDealloc:(id)arg0;
- (void)playableChooseVideo:(id)arg0 isAuto:(BOOL)arg1 viewController:(id)arg2;
- (void)playableShowMask:(id)arg0 viewController:(id)arg1;
- (void)playableShowLongPressPanel:(id)arg0;
- (void)playableDoubleClickLikeWithPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)playableTrackWithAdExtraParams:(id)arg0 viewController:(id)arg1;
- (BOOL)isContainerParentVCShowing:(id)arg0;
- (void)setBottomMaskLayer:(id)arg0;
- (void)setScrollTipView:(id)arg0;
- (void)setPlayableContext:(id)arg0;
- (void)setEffectiveDuration:(double)arg0;
- (void)startCountdownTimerIfNeeded;
- (id)interactiveInfo;
- (void)saveGlobalParamsForValue:(id)arg0 key:(id)arg1;
- (id)globalKey;
- (void)setInteractiveInfo:(id)arg0;
- (BOOL)isMaskShowing;
- (void)playerWillStartNextLoop;
- (BOOL)shouldRespondSingleClick;
- (void)videoDownloadFinished:(id)arg0;
- (void)resetAlphaPlayer;
- (void)addcommonConversionViewObserver;
- (void)handleInteractiveVideo:(id)arg0;
- (void)setupThirdTrackTimer;
- (void)configAlphaPlayerTimerEvents;
- (void)setPlayerStartPlayHandler:(id /* block */)arg0;
- (id /* block */)playerStartPlayHandler;
- (void)fetchlynxView;
- (void)showBottomMaskView;
- (void)prepareShowComponents;
- (void)prepareForDisplayAlphaPlayer;
- (void)setCurrentShowTimestamp:(long long)arg0;
- (void)playAlphaPlayerAndAudioPlayer;
- (void)playAlphaPlayer;
- (void)setBgShowReason:(long long)arg0;
- (void)showMaskViewWithType:(unsigned long long)arg0 giftGeted:(BOOL)arg1;
- (void)handleLoopVideo;
- (void)handleNormalVideo;
- (void)handleEndVideo;
- (void)handleCurrentShowDuration;
- (id)interactiveStatusModel;
- (double)currentTotalPlayDuration;
- (id)originalInteractiveVideo:(id)arg0;
- (void)sendOnVideoReplayWithType:(long long)arg0 targetVideoId:(id)arg1;
- (void)playNextInteractiveVideo:(id)arg0;
- (BOOL)updateWithNextVideoId:(id)arg0;
- (void)startCountDownTimer;
- (void)setAlphaPlayerTimerEvents:(id)arg0;
- (void)invalidateAlphaPlayerTimer;
- (id)currentAlphaPlayerVideoModel;
- (id)alphaPlayerTimerEvents;
- (void)resumeAlphaPlayerTimer;
- (void)alphaPlayerAction:(id)arg0;
- (void)pauseAlphaPlayerTimer;
- (long long)alphaPlayerCurrTime;
- (void)setAlphaPlayerCurrTime:(long long)arg0;
- (void)setAlphaPlayerTimer:(id)arg0;
- (void)trackPlayValid;
- (long long)videoPlayCount;
- (long long)bgShowReason;
- (void)showScrollTipViewAnimated:(BOOL)arg0;
- (long long)currentShowTimestamp;
- (void)showLongPressPanel;
- (void)handlePreloadTaskWithAweme:(id)arg0;
- (void)preloadAudioResourcesWithModels:(id)arg0;
- (void)appwillResignActiveNotification:(id)arg0;
- (void)pauseAlphaPlayer;
- (void)removecommonConversionViewObserver;
- (id)alphaPlayerTimer;
- (void)setInteractiveStatusModel:(id)arg0;
- (void)prepareForDisplay;
- (id)timer;
- (void)setModel:(id)arg0;
- (void)setViewController:(id)arg0;
- (id)viewController;
- (void).cxx_destruct;
- (id)audioPlayer;
- (void)stopTimer;
- (void)stop;
- (void)cancelTimer;
- (id)maskView;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (double)effectiveDuration;
- (void)setTimer:(id)arg0;
- (void)setAudioPlayer:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)reset;
- (void)viewDidLoad;
- (void)setMaskView:(id)arg0;
- (unsigned long long)showType;
- (void)setShowType:(unsigned long long)arg0;
- (void)setupNotifications;
- (long long)timerCount;

@end
