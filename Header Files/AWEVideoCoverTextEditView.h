//
//     Generated by private class-dump
//

@class AWECoverTextEditingModel, AWEStoryToolBar, AWECoverTextStickerView, NSString, UIView, AWEVideoPublishViewModel, ACCAnimatedButton;

@interface AWEVideoCoverTextEditView : UIView <UIGestureRecognizerDelegate> {
    BOOL _animating;
    id /* block */ _finishBlock;
    double _fontScale;
    AWEVideoPublishViewModel *_publishModel;
    UIView *_maskView;
    ACCAnimatedButton *_finishButton;
    UIView *_clipView;
    AWECoverTextStickerView *_stickerView;
    AWECoverTextEditingModel *_editingModel;
    double _keyboardHeight;
    AWEStoryToolBar *_toolBar;
    struct CGPoint { double x; double y; } _previewCenter;
    struct CGPoint { double x; double y; } _basicCenter;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _previewTransform;
}

@property (nonatomic) double fontScale;
@property (retain, nonatomic) AWEVideoPublishViewModel *publishModel;
@property (retain, nonatomic) UIView *maskView;
@property (retain, nonatomic) ACCAnimatedButton *finishButton;
@property (retain, nonatomic) UIView *clipView;
@property (retain, nonatomic) AWECoverTextStickerView *stickerView;
@property (copy, nonatomic) AWECoverTextEditingModel *editingModel;
@property (nonatomic) BOOL animating;
@property (nonatomic) struct CGPoint { double x; double y; } previewCenter;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } previewTransform;
@property (nonatomic) struct CGPoint { double x; double y; } basicCenter;
@property (nonatomic) double keyboardHeight;
@property (retain, nonatomic) AWEStoryToolBar *toolBar;
@property (copy, nonatomic) id /* block */ finishBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)publishModel;
- (void)setPublishModel:(id)arg0;
- (void)handleKeyboardChangeFrameNoti:(id)arg0;
- (void)setToolBar:(id)arg0;
- (id)toolBar;
- (void)panAction:(id)arg0;
- (id)editingModel;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 publishViewModel:(id)arg1 fontScale:(double)arg2;
- (void)startEditWithModel:(id)arg0 center:(struct CGPoint { double x0; double x1; })arg1 transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg2;
- (void)setEditingModel:(id)arg0;
- (void)didClickedLeftButton:(id)arg0;
- (void)setBasicCenter:(struct CGPoint { double x0; double x1; })arg0;
- (void)setPreviewCenter:(struct CGPoint { double x0; double x1; })arg0;
- (void)setPreviewTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)updateToolBarStyle;
- (struct CGPoint { double x0; double x1; })p_calculateEditCenter;
- (struct CGPoint { double x0; double x1; })previewCenter;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })previewTransform;
- (BOOL)storyTextMode;
- (void)configStoryTextViews;
- (void)didClickedFinish;
- (void)didClickColor:(id)arg0 indexPath:(id)arg1;
- (void)didClickFont:(id)arg0 indexPath:(id)arg1;
- (void)didClickedAlignmentButton:(id)arg0;
- (id)p_getAlignmentButtonAccessibilityLabel:(long long)arg0;
- (struct CGPoint { double x0; double x1; })basicCenter;
- (void)closeSelf:(id)arg0 textModel:(id)arg1 location:(unsigned long long)arg2;
- (void)p_trackChangeStyle:(unsigned long long)arg0;
- (void)p_trackChangeAlignment:(long long)arg0;
- (void)p_trackSelectedColor:(id)arg0;
- (void)p_trackSelectedFont:(id)arg0;
- (double)keyboardHeight;
- (void).cxx_destruct;
- (void)setKeyboardHeight:(double)arg0;
- (void)commonInit;
- (void)setAnimating:(BOOL)arg0;
- (id)maskView;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setClipView:(id)arg0;
- (void)dealloc;
- (id)clipView;
- (void)setMaskView:(id)arg0;
- (BOOL)animating;
- (void)configureViews;
- (id)stickerView;
- (void)setStickerView:(id)arg0;
- (double)fontScale;
- (void)setFontScale:(double)arg0;
- (id /* block */)finishBlock;
- (void)setFinishBlock:(id /* block */)arg0;
- (id)finishButton;
- (void)setFinishButton:(id)arg0;
- (void)tapAction:(id)arg0;
- (void)p_addObservers;

@end
