//
//     Generated by private class-dump
//

@class AWEIMActiveUserAcquirerConfig, NSMutableDictionary, NSTimer, NSString, NSArray, NSObject, AWEIMActiveUserDataTracker;
@protocol AWEIMActiveUserAcquirerDelegate, AWEIMActiveUserAcquirerFetchEventDelegate, OS_dispatch_semaphore;

@interface AWEIMActiveUserAcquirer : NSObject <AWEIMActiveUserAcquirerService> {
    BOOL _isPaused;
    BOOL _timerEnabled;
    NSString *_pageIdentifier;
    unsigned long long _type;
    AWEIMActiveUserDataTracker *_dataTracker;
    id /* block */ _didEnterBackgroundBlock;
    id /* block */ _willEnterForegroundBlock;
    id<AWEIMActiveUserAcquirerDelegate> _delegate;
    id<AWEIMActiveUserAcquirerFetchEventDelegate> _fetchEventdelegate;
    AWEIMActiveUserAcquirerConfig *_config;
    NSTimer *_activeTimer;
    NSMutableDictionary *_userMap;
    NSMutableDictionary *_groupMap;
    NSMutableDictionary *_uniqueFlagKeyMap;
    NSObject<OS_dispatch_semaphore> *_lock;
}

@property (retain, nonatomic) NSTimer *activeTimer;
@property (nonatomic) BOOL isPaused;
@property (retain, nonatomic) NSMutableDictionary *userMap;
@property (retain, nonatomic) NSMutableDictionary *groupMap;
@property (retain, nonatomic) NSMutableDictionary *uniqueFlagKeyMap;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *lock;
@property (nonatomic, getter=isTimerEnabled) BOOL timerEnabled;
@property (copy, nonatomic) NSString *pageIdentifier;
@property (nonatomic) unsigned long long type;
@property (readonly, copy, nonatomic) NSArray *secUidList;
@property (readonly, copy, nonatomic) NSArray *convIdList;
@property (retain, nonatomic) AWEIMActiveUserDataTracker *dataTracker;
@property (copy, nonatomic) id /* block */ didEnterBackgroundBlock;
@property (copy, nonatomic) id /* block */ willEnterForegroundBlock;
@property (weak, nonatomic) id<AWEIMActiveUserAcquirerDelegate> delegate;
@property (weak, nonatomic) id<AWEIMActiveUserAcquirerFetchEventDelegate> fetchEventdelegate;
@property (retain, nonatomic) AWEIMActiveUserAcquirerConfig *config;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)acquirerWithType:(unsigned long long)arg0;

- (void)fetchActiveStatus;
- (id)groupMap;
- (void)setGroupMap:(id)arg0;
- (id /* block */)didEnterBackgroundBlock;
- (void)setDidEnterBackgroundBlock:(id /* block */)arg0;
- (void)p_fetchActiveStatus;
- (void)p_loopFetchActiveStatus;
- (void)p_fetchUserActiveStatusWithSource:(id)arg0;
- (id)userMap;
- (id)fetchEventdelegate;
- (void)p_updateWithActiveUserInfos:(id)arg0 nonFriendActiveUserInfos:(id)arg1 dictionary:(id)arg2;
- (void)triggerCompletionsWithActiveUserInfo:(id)arg0 nonFriendActiveUserInfo:(id)arg1;
- (id)getActiveUserAcquirerValueWithKey:(id)arg0;
- (id)uniqueFlagKeyMap;
- (void)bindUniqueFlag:(id)arg0 key:(id)arg1;
- (void)setActiveUserAcquirerValue:(id)arg0 withChatType:(long long)arg1 key:(id)arg2;
- (void)updateWithActiveUserInfos:(id)arg0 nonFriendInfos:(id)arg1;
- (id)secUidList;
- (id)convIdList;
- (void)updateWtihChatType:(long long)arg0 key:(id)arg1 uid:(id)arg2 uniqueFlag:(id)arg3 cacheInfo:(id)arg4 cacheNonFriendInfo:(id)arg5 completion:(id /* block */)arg6;
- (void)removeCacheWithChatType:(long long)arg0 key:(id)arg1;
- (void)removeCacheCallbackWithUniqueFlag:(id)arg0;
- (id)dataTracker;
- (void)setDataTracker:(id)arg0;
- (id /* block */)willEnterForegroundBlock;
- (void)setWillEnterForegroundBlock:(id /* block */)arg0;
- (void)setFetchEventdelegate:(id)arg0;
- (void)setUserMap:(id)arg0;
- (void)setUniqueFlagKeyMap:(id)arg0;
- (id)init;
- (void)setConfig:(id)arg0;
- (void)resume;
- (void).cxx_destruct;
- (id)config;
- (unsigned long long)type;
- (void)setType:(unsigned long long)arg0;
- (id)delegate;
- (id)lock;
- (void)cleanTimer;
- (BOOL)isPaused;
- (void)start;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)pause;
- (void)setLock:(id)arg0;
- (void)setIsPaused:(BOOL)arg0;
- (id)pageIdentifier;
- (void)setPageIdentifier:(id)arg0;
- (id)activeTimer;
- (void)setActiveTimer:(id)arg0;
- (BOOL)isTimerEnabled;
- (void)setTimerEnabled:(BOOL)arg0;

@end
