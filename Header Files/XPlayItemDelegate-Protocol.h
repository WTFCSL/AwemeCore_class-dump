//
//     Generated by private class-dump
//

@protocol XPlayItemDelegate <NSObject>

@optional

- (void)playItem:(id)arg0 didReceiveMessage:(id)arg1;
- (void)playItem:(id)arg0 playQualityStats:(id)arg1;
- (void)playItem:(id)arg0 playStatusDidUpdated:(unsigned long long)arg1 info:(id)arg2;
- (void)playItem:(id)arg0 playTimeCountDown:(unsigned long long)arg1;
- (void)playItem:(id)arg0 preloadDidSucceed:(id)arg1;
- (void)playItem:(id)arg0 preloadDidFailed:(id)arg1;
- (void)playItem:(id)arg0 videoQualityChangeResult:(unsigned long long)arg1;
- (void)playItemViewWillAppear:(id)arg0;
- (void)playItemViewTouchBegan:(id)arg0;
- (void)playItem:(id)arg0 netStatus:(long long)arg1 needToast:(BOOL)arg2;
- (void)playItem:(id)arg0 netStatus:(long long)arg1 rtt:(long long)arg2 needToast:(BOOL)arg3 needNotification:(BOOL)arg4;
- (void)playItem:(id)arg0 updateUserInfo:(id)arg1 oldUserInfo:(id)arg2;
- (void)playItem:(id)arg0 increaseTimeResult:(id)arg1;
- (void)playItem:(id)arg0 taskFinishedWithCode:(int)arg1 type:(unsigned long long)arg2 time:(long long)arg3;
- (void)playItem:(id)arg0 config:(id)arg1;
- (void)playItem:(id)arg0 onNetworkDetectionWithQuality:(unsigned long long)arg1 rtt:(int)arg2 lostRate:(double)arg3 bitrate:(int)arg4 jitter:(int)arg5 isQualified:(BOOL)arg6;
- (void)playItem:(id)arg0 onNetworkDetectionStopped:(unsigned long long)arg1;
- (void)playItemDidLostConnection:(id)arg0;
- (void)playItem:(id)arg0 remoteVideoRotationChanged:(long long)arg1;
- (void)playItemcanChangeToFHD:(id)arg0;
- (void)playItem:(id)arg0 onCustomMessageReceivedWithCode:(int)arg1 uniqueSeq:(id)arg2 message:(id)arg3;
- (void)playItem:(id)arg0 renderPixelBuffer:(struct __CVBuffer { } *)arg1 rotation:(long long)arg2 contentType:(long long)arg3 extendedData:(id)arg4 pts:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg5;
- (void)playItem:(id)arg0 rtcAudioFrame:(id)arg1;
- (void)playItem:(id)arg0 networkStatusChangedFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;
- (void)playItem:(id)arg0 remoteVideoStateChangeWith:(long long)arg1 withVideoStateReason:(long long)arg2;
- (void)playItem:(id)arg0 canJoinQueue:(id)arg1 callback:(id /* block */)arg2;
- (void)playItem:(id)arg0 didUpdateQueueInfo:(id)arg1;
- (void)playItem:(id)arg0 didDequeue:(id)arg1;
- (void)playItem:(id)arg0 didFinishQueue:(id)arg1;
- (void)playItem:(id)arg0 didExpireQueue:(id)arg1;
- (BOOL)checkIsShowing;
- (void)dealWithArchivedFail:(id)arg0 info:(id)arg1;

@end
