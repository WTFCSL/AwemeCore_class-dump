//
//     Generated by private class-dump
//

@class NSMutableArray, NSArray, NSString, HMInstance, NSObject, NSNumber;
@protocol OS_dispatch_queue;

@interface HMDUITrackerManager : HeimdallrModule <HMDPerformanceReporterDataSource, HMDUITrackerDelegate, HMDUITrackerManagerSceneProtocol> {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutex;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _recentScenesLock;
    BOOL _newVCPushing;
    BOOL _isNeedSaveEventsInBackground;
    NSMutableArray *_events;
    unsigned long long _flushCount;
    double _flushInterval;
    unsigned long long _uploadCount;
    double _uploadInterval;
    NSString *_scene;
    NSString *_lastScene;
    NSNumber *_sceneInPushing;
    double _lastFlushTimestamp;
    double _startTimestamp;
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSMutableArray *_recentScenes;
    long long _hmdCountLimit;
    NSArray *_andConditions;
    HMInstance *_instance;
    struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } _uploadingRange;
}

@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; } uploadingRange;
@property (retain, nonatomic) NSArray *andConditions;
@property (nonatomic) long long hmdCountLimit;
@property (nonatomic) double lastFlushTimestamp;
@property (nonatomic) double startTimestamp;
@property (copy) NSString *scene;
@property (copy) NSString *lastScene;
@property (retain) NSObject<OS_dispatch_queue> *syncQueue;
@property (retain) NSNumber *sceneInPushing;
@property BOOL newVCPushing;
@property (nonatomic) BOOL isNeedSaveEventsInBackground;
@property (retain, nonatomic) NSMutableArray *recentScenes;
@property (nonatomic) struct HMDRecordLocalIDRange { unsigned long long minLocalID; unsigned long long maxLocalID; } uploadingRange;
@property (nonatomic) long long hmdCountLimit;
@property (retain, nonatomic) NSArray *andConditions;
@property (retain, nonatomic) HMInstance *instance;
@property (retain, nonatomic) NSMutableArray *events;
@property (nonatomic) unsigned long long flushCount;
@property (nonatomic) double flushInterval;
@property (nonatomic) unsigned long long uploadCount;
@property (nonatomic) double uploadInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)awe_energy_optimize_hook;
+ (id)sharedManager;

- (void)updateConfig:(id)arg0;
- (BOOL)performanceDataSource;
- (void)cleanupWithConfig:(id)arg0;
- (long long)dbMaxSize;
- (void)setupWithHeimdallr:(id)arg0;
- (void)setLastScene:(id)arg0;
- (id)andConditions;
- (void)setAndConditions:(id)arg0;
- (double)uploadInterval;
- (void)setFlushInterval:(double)arg0;
- (unsigned long long)flushCount;
- (void)setFlushCount:(unsigned long long)arg0;
- (void)setUploadInterval:(double)arg0;
- (void)dropAllDataForServerState;
- (unsigned long long)reporterPriority;
- (id)performanceDataWithCountLimit:(long long)arg0;
- (id)debugRealPerformanceDataWithConfig:(id)arg0;
- (void)cleanupPerformanceDataWithConfig:(id)arg0;
- (void)performanceDataDidReportSuccess:(BOOL)arg0;
- (id)performanceDataWithLimitSize:(unsigned long long)arg0 limitCount:(long long)arg1 currentSize:(unsigned long long *)arg2;
- (void)performanceSizeLimitedDataDidReportSuccess:(BOOL)arg0;
- (id)fetchUploadRecords;
- (void)setUploadingRange:(struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })arg0;
- (struct HMDRecordLocalIDRange { unsigned long long x0; unsigned long long x1; })uploadingRange;
- (id)sceneInPushing;
- (double)lastFlushTimestamp;
- (void)setHmdCountLimit:(long long)arg0;
- (long long)hmdCountLimit;
- (id)sharedOperationTrace;
- (void)setSceneInPushing:(id)arg0;
- (void)setIsNeedSaveEventsInBackground:(BOOL)arg0;
- (BOOL)newVCPushing;
- (void)updateOperationTrace;
- (id)recentScenes;
- (void)hmdTrackWithRecord:(id)arg0;
- (void)setLastFlushTimestamp:(double)arg0;
- (BOOL)isNeedSaveEventsInBackground;
- (void)setNewVCPushing:(BOOL)arg0;
- (id)getUITrackerDataWithRecords:(id)arg0;
- (void)hmdTrackableContext:(id)arg0 eventWithName:(id)arg1 parameters:(id)arg2;
- (void)hmdTrackWithName:(id)arg0 event:(id)arg1 parameters:(id)arg2;
- (void)hmdSwitchToNewVCFrom:(id)arg0 to:(id)arg1;
- (void)didAppearViewController:(id)arg0;
- (void)didLeaveViewController:(id)arg0;
- (id)ui_actionRecordsInAppTimeFrom:(double)arg0 to:(double)arg1 sessionID:(id)arg2 recordClass:(Class)arg3;
- (id)getKeyWindow;
- (void)recordViewHierarchyForWindow:(id)arg0 WithDetail:(BOOL)arg1;
- (void)recordViewHierarchyForKeyWindowWithDetail:(BOOL)arg0;
- (void)uploadViewHierarchyWithTitle:(id)arg0 subTitle:(id)arg1;
- (void)setRecentScenes:(id)arg0;
- (void)awe_energy_optimize_hmdTrackableContext:(id)arg0 eventWithName:(id)arg1 parameters:(id)arg2;
- (void)awe_energy_optimize_hmdTrackWithName:(id)arg0 event:(id)arg1 parameters:(id)arg2;
- (id)syncQueue;
- (double)startTimestamp;
- (id)events;
- (id)init;
- (void)setStartTimestamp:(double)arg0;
- (void)setScene:(id)arg0;
- (void)applicationWillEnterForeground:(id)arg0;
- (void).cxx_destruct;
- (void)stop;
- (id)instance;
- (void)setEvents:(id)arg0;
- (void)applicationDidEnterBackground:(id)arg0;
- (void)setSyncQueue:(id)arg0;
- (id)lastScene;
- (void)start;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (double)flushInterval;
- (void)setInstance:(id)arg0;
- (id)scene;
- (Class)storeClass;
- (void)setUploadCount:(unsigned long long)arg0;
- (unsigned long long)uploadCount;

@end
