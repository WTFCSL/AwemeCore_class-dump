//
//     Generated by private class-dump
//

@class NSString, NSDictionary, BDASplashCreativeLynxViewContainer, BDASplashCreativeEffectView;
@protocol BDASplashComplianceBaseDelegate;

@interface BDASplashCreativeViewContainer : NSObject <BDASplashCreativeViewProtocol> {
    NSDictionary *_config;
    id<BDASplashComplianceBaseDelegate> _delegate;
    BDASplashCreativeEffectView *_effectView;
    BDASplashCreativeLynxViewContainer *_lynxViewContainer;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
}

@property (retain, nonatomic) BDASplashCreativeEffectView *effectView;
@property (retain, nonatomic) BDASplashCreativeLynxViewContainer *lynxViewContainer;
@property (copy, nonatomic) NSDictionary *config;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;
@property (weak, nonatomic) id<BDASplashComplianceBaseDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)createCreativeViewWithConfig:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 delegate:(id)arg2;

- (id)createCreativeViewWithConfig:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 delegate:(id)arg2;
- (id)createLynxView;
- (id)createEffectView;
- (void)setLynxViewContainer:(id)arg0;
- (id)lynxViewContainer;
- (void)setConfig:(id)arg0;
- (id)effectView;
- (void).cxx_destruct;
- (id)config;
- (id)delegate;
- (void)setEffectView:(id)arg0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setDelegate:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;

@end
