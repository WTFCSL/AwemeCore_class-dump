//
//     Generated by private class-dump
//

@class NSURLCredential, NSURL, AFSecurityPolicy, AFNetworkReachabilityManager, AFHTTPRequestSerializer, NSOperationQueue, NSObject, AFHTTPResponseSerializer;
@protocol AFURLResponseSerialization, OS_dispatch_group, OS_dispatch_queue, AFURLRequestSerialization;

@interface AFHTTPRequestOperationManager : NSObject <NSSecureCoding, NSCopying> {
    BOOL _shouldUseCredentialStorage;
    NSURL *_baseURL;
    AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    NSOperationQueue *_operationQueue;
    NSURLCredential *_credential;
    AFSecurityPolicy *_securityPolicy;
    AFNetworkReachabilityManager *_reachabilityManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
}

@property (retain, nonatomic) NSURL *baseURL;
@property (retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer;
@property (retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer;
@property (retain, nonatomic) NSOperationQueue *operationQueue;
@property (nonatomic) BOOL shouldUseCredentialStorage;
@property (retain, nonatomic) NSURLCredential *credential;
@property (retain, nonatomic) AFSecurityPolicy *securityPolicy;
@property (retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup;

+ (BOOL)supportsSecureCoding;
+ (id)manager;

- (void)setResponseSerializer:(id)arg0;
- (id)responseSerializer;
- (void)setRequestSerializer:(id)arg0;
- (id)requestSerializer;
- (id)HTTPRequestOperationWithRequest:(id)arg0 success:(id /* block */)arg1 failure:(id /* block */)arg2;
- (id)HTTPRequestOperationWithHTTPMethod:(id)arg0 URLString:(id)arg1 parameters:(id)arg2 success:(id /* block */)arg3 failure:(id /* block */)arg4;
- (id)GET:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (id)HEAD:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (id)POST:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (id)POST:(id)arg0 parameters:(id)arg1 constructingBodyWithBlock:(id /* block */)arg2 success:(id /* block */)arg3 failure:(id /* block */)arg4;
- (id)PUT:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (id)PATCH:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (id)DELETE:(id)arg0 parameters:(id)arg1 success:(id /* block */)arg2 failure:(id /* block */)arg3;
- (void)setShouldUseCredentialStorage:(BOOL)arg0;
- (BOOL)shouldUseCredentialStorage;
- (void)setCompletionQueue:(id)arg0;
- (id)init;
- (void)setOperationQueue:(id)arg0;
- (void).cxx_destruct;
- (id)completionQueue;
- (id)credential;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)initWithBaseURL:(id)arg0;
- (id)baseURL;
- (id)securityPolicy;
- (void)setBaseURL:(id)arg0;
- (id)operationQueue;
- (void)setSecurityPolicy:(id)arg0;
- (id)initWithCoder:(id)arg0;
- (id)completionGroup;
- (void)setReachabilityManager:(id)arg0;
- (id)description;
- (void)encodeWithCoder:(id)arg0;
- (id)reachabilityManager;
- (void)setCompletionGroup:(id)arg0;
- (void)setCredential:(id)arg0;

@end
