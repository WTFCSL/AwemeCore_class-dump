//
//     Generated by private class-dump
//

@class NSString, HMDFrequenceDetectParam;
@protocol HMDTTMonitorInterceptor;

@interface HMDTTMonitorFrequenceDetectInterceptor : NSObject <HMDTTMonitorInterceptor> {
    struct map<std::string, std::vector<double>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<double>>>> { struct __tree<std::__value_type<std::string, std::vector<double>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<double>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::vector<double>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<double>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<double>>, std::less<std::string>, true>> { unsigned long long __value_; } __pair3_; } __tree_; } statistic;
    struct map<std::string, double, std::less<std::string>, std::allocator<std::pair<const std::string, double>>> { struct __tree<std::__value_type<std::string, double>, std::__map_value_compare<std::string, std::__value_type<std::string, double>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, double>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, double>, std::less<std::string>, true>> { unsigned long long __value_; } __pair3_; } __tree_; } timestamps;
    double stanardCoeff;
    double lastCleanupTime;
    id<HMDTTMonitorInterceptor> _nextInterceptor;
    HMDFrequenceDetectParam *_detectParam;
}

@property (retain, nonatomic) id<HMDTTMonitorInterceptor> nextInterceptor;
@property (retain, nonatomic) HMDFrequenceDetectParam *detectParam;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)globalQueue;

- (id)nextInterceptor;
- (void)setNextInterceptor:(id)arg0;
- (void)setupParams;
- (void)frequenceDetectParamDidChange:(id)arg0;
- (void)setDetectParam:(id)arg0;
- (BOOL)shouldHandleRequest:(id)arg0;
- (id)detectParam;
- (void)reportDetectedResultIfNeeded:(id)arg0;
- (void)cleanStatisticData;
- (void)reportDetectedResult:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)dealloc;
- (void)handleRequest:(id)arg0;
- (id).cxx_construct;

@end
