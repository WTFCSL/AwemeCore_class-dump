//
//     Generated by private class-dump
//

@class UIView, IESLiveLinkmicRoomEnterTracker, IESLiveFeedAudioStageViewExtraModel, HTSLiveRoom, NSString, IESLiveBigPartyPreStreamController, IESLiveBigPartyPreStreamAdapterWrapper, NSNumber, IESLiveFeedAudioView;
@protocol IESLiveRoomService, IESLivePlayerProtocol;

@interface IESLiveLinkmicPreStreamView : UIView <IESLiveSEIListener, IESLiveBigPartyPreStreamDelegate, IESLiveBigPartyPreStreamDataSource, IESLiveInteractionAsyncResourceLoader> {
    BOOL _isPreloading;
    BOOL _userAudioSmallMode;
    BOOL _shouldHidePreview;
    BOOL _isPKGoingOn;
    id<IESLiveRoomService> _room;
    HTSLiveRoom *_roomModel;
    id<IESLivePlayerProtocol> _player;
    IESLiveLinkmicRoomEnterTracker *_roomEnterTracker;
    IESLiveFeedAudioStageViewExtraModel *_extraModel;
    IESLiveFeedAudioView *_audioView;
    NSNumber *_currentRoomID;
    UIView *_bigPartyContainer;
    IESLiveBigPartyPreStreamController *_bigPartyController;
    IESLiveBigPartyPreStreamAdapterWrapper *_bigPartyPreStreamAdapter;
}

@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) HTSLiveRoom *roomModel;
@property (retain, nonatomic) id<IESLivePlayerProtocol> player;
@property (nonatomic) BOOL isPreloading;
@property (retain, nonatomic) IESLiveLinkmicRoomEnterTracker *roomEnterTracker;
@property (retain, nonatomic) IESLiveFeedAudioStageViewExtraModel *extraModel;
@property (retain, nonatomic) IESLiveFeedAudioView *audioView;
@property (retain, nonatomic) NSNumber *currentRoomID;
@property (nonatomic) BOOL userAudioSmallMode;
@property (nonatomic) BOOL shouldHidePreview;
@property (retain, nonatomic) UIView *bigPartyContainer;
@property (retain, nonatomic) IESLiveBigPartyPreStreamController *bigPartyController;
@property (retain, nonatomic) IESLiveBigPartyPreStreamAdapterWrapper *bigPartyPreStreamAdapter;
@property (nonatomic) BOOL isPKGoingOn;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)currentRoomID;
- (id)extraModel;
- (void)setExtraModel:(id)arg0;
- (id)roomModel;
- (void)getFeedInteractListWith:(id)arg0 anchorID:(id)arg1 isAudio:(BOOL)arg2 completion:(id /* block */)arg3;
- (id)anchorID;
- (void)setIsPreloading:(BOOL)arg0;
- (void)initView;
- (BOOL)isAudioLive;
- (void)setRoomModel:(id)arg0;
- (void)setCurrentRoomID:(id)arg0;
- (void)setAudioView:(id)arg0;
- (id)audioView;
- (id)bigPartyController;
- (void)setBigPartyController:(id)arg0;
- (void)getFeedInteractListV2With:(id)arg0 anchorID:(id)arg1 extra:(id)arg2 completion:(id /* block */)arg3;
- (id)roomEnterTracker;
- (void)setRoomEnterTracker:(id)arg0;
- (id)bigPartyPreStreamAdapter;
- (BOOL)isPKGoingOn;
- (void)dealWithLinkMicWithMetaInfo:(id)arg0;
- (void)removeFakeBizeView;
- (void)setIsPKGoingOn:(BOOL)arg0;
- (BOOL)isFromFeedVideo;
- (void)bigPartyDidActivate;
- (void)bigPartyDidDeactivate;
- (void)bigPartyLayoutStyleStart:(id)arg0;
- (void)bigPartyLayoutStyleEnd:(id)arg0;
- (void)layoutPlayerIfNeed;
- (id)playerForBigParty;
- (id)seiReceiverForBigParty;
- (id)containerForBigParty;
- (id)playerContainerForBigParty;
- (struct CGSize { double x0; double x1; })mediaSizeForBigParty;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })containerFrameForBigParty;
- (long long)bigPartyContentModeForEqual;
- (long long)bigPartyContentModeForNonOverlapping;
- (id)playModeListForBigParty;
- (void)setBigPartyPreStreamAdapter:(id)arg0;
- (void)asyncLoadResourceUsingBlock:(id /* block */)arg0;
- (void)setUserAudioSmallMode:(BOOL)arg0;
- (void)setShouldHidePreview:(BOOL)arg0;
- (id)p_feedAudioPreviewViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 userModel:(id)arg1 listModel:(id)arg2 roomModel:(id)arg3 smallModel:(BOOL)arg4;
- (void)removeAudioView;
- (void)showAudioView;
- (BOOL)shouldHidePreview;
- (void)showAudioViewIfNeedWithMetaInfo:(id)arg0;
- (id)bigPartyContainer;
- (BOOL)userAudioSmallMode;
- (void)setBigPartyContainer:(id)arg0;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (void)dealPKSEIWithMetaInfo:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 room:(id)arg1 player:(id)arg2;
- (void).cxx_destruct;
- (void)setPlayer:(id)arg0;
- (id)player;
- (id)room;
- (void)setRoom:(id)arg0;
- (id)roomID;
- (BOOL)isPreloading;
- (void)clean;

@end
