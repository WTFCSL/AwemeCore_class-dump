//
//     Generated by private class-dump
//

@class HMDFluencyDisplayLinkCallbackObj, NSString, NSMutableSet, HMDFluencyDisplayLink, NSMutableArray, NSObject;
@protocol OS_dispatch_queue;

@interface HMDFPSMonitor : HMDMonitor <HMDMonitorCustomSwitch> {
    int refCount;
    double _lastUpdateTime;
    unsigned long long _frameCount;
    double _lastFPS;
    NSObject<OS_dispatch_queue> *_fpsQueue;
    NSMutableArray *_customScenes;
    NSString *_customSceneStr;
    NSMutableSet *_fpsCallbacks;
    NSMutableSet *_fpsCallbackObjs;
    unsigned long long _maximumFramesPerSecond;
    double _targetTimestamp;
    double _lastTimestamp;
    HMDFluencyDisplayLink *_fluencyDisplayLink;
    HMDFluencyDisplayLinkCallbackObj *_callbackObj;
}

@property (nonatomic) double lastUpdateTime;
@property (nonatomic) unsigned long long frameCount;
@property (nonatomic) double lastFPS;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *fpsQueue;
@property (retain, nonatomic) NSMutableArray *customScenes;
@property (copy, nonatomic) NSString *customSceneStr;
@property (retain, nonatomic) NSMutableSet *fpsCallbacks;
@property (retain, nonatomic) NSMutableSet *fpsCallbackObjs;
@property (nonatomic) unsigned long long maximumFramesPerSecond;
@property (nonatomic) double targetTimestamp;
@property (nonatomic) double lastTimestamp;
@property (retain, nonatomic) HMDFluencyDisplayLink *fluencyDisplayLink;
@property (retain, nonatomic) HMDFluencyDisplayLinkCallbackObj *callbackObj;
@property (nonatomic) int refCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedMonitor;

- (void)updateConfig:(id)arg0;
- (void)startWithInterval:(double)arg0;
- (void)addFPSMonitorCallback:(id /* block */)arg0;
- (void)setCustomScenes:(id)arg0;
- (id)customScenes;
- (void)setCustomSceneStr:(id)arg0;
- (id)customSceneStr;
- (unsigned long long)reporterPriority;
- (void)enterCustomScene:(id)arg0;
- (void)leaveCustomScene:(id)arg0;
- (void)setFpsQueue:(id)arg0;
- (void)setFpsCallbacks:(id)arg0;
- (void)setFpsCallbackObjs:(id)arg0;
- (void)setFluencyDisplayLink:(id)arg0;
- (id)fpsQueue;
- (void)registerDisplayLink;
- (void)unRegisterDisplayLink;
- (BOOL)isDisplayLinkStarted;
- (id)fluencyDisplayLink;
- (id)callbackObj;
- (void)setLastFPS:(double)arg0;
- (id)refresh_async;
- (void)callFPSMonitorCallback:(id)arg0;
- (id)fpsCallbacks;
- (id)fpsCallbackObjs;
- (void)p_updateFrameWithTimestamp:(double)arg0 duration:(double)arg1 targetTimestamp:(double)arg2;
- (void)addFPSRecordWithFPSValue:(double)arg0 scene:(id)arg1 isScrolling:(BOOL)arg2 extralValue:(id)arg3;
- (void)enterFluencyCustomSceneWithUniq:(id)arg0;
- (void)leaveFluencyCustomSceneWithUniq:(id)arg0;
- (void)removeFPSMoitorCallback:(id /* block */)arg0;
- (id)addFPSMonitorCallbackObject:(id /* block */)arg0;
- (void)removeFPSMonitorCallbackObject:(id)arg0;
- (void)monitorRunWithSpecialScene;
- (void)monitorStopWithSpecialScene;
- (double)lastFPS;
- (void)setTargetTimestamp:(double)arg0;
- (void)setCallbackObj:(id)arg0;
- (double)lastUpdateTime;
- (id)init;
- (void)resume;
- (int)refCount;
- (void).cxx_destruct;
- (unsigned long long)frameCount;
- (void)stop;
- (double)targetTimestamp;
- (void)suspend;
- (void)setLastTimestamp:(double)arg0;
- (unsigned long long)maximumFramesPerSecond;
- (double)lastTimestamp;
- (void)setLastUpdateTime:(double)arg0;
- (void)setRefCount:(int)arg0;
- (void)dealloc;
- (void)setFrameCount:(unsigned long long)arg0;
- (void)setMaximumFramesPerSecond:(unsigned long long)arg0;
- (Class)storeClass;

@end
