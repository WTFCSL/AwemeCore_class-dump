//
//     Generated by private class-dump
//

@class IESLiveKTVPlayer, NSNumber, NSDictionary, NSMutableArray, NSString, IESLiveKTVFullLinkMonitor, NSTimer, HTSEventContext, NSArray, IESLiveKTVSEIOrderInfo, HTSLiveUser, IESLiveKTVMusicManager, IESLiveKTVLogger, RACDisposable, IESLiveKTVFullLinkMusicMonitor, IESLiveKTVFeedbackApi, IESLiveKTVCommonListenerStore, IESLiveKTVCommonApi, IESLiveKTVDecorateStore, IESLiveKTVMidiStore, IESLiveAudienceInteractPermissionChecker, IESLiveKTVControlStore, IESLiveInteractFeedbackViewModel, IESLiveComponentContext, IESLiveCombineSubject, IESLiveKtvSongStruct, IESLiveKTVPanelHandler;
@protocol IESLiveRoomService;

@interface IESLiveKTVCommonStore : NSObject <IESLiveSocialInteractAction, IESLiveRevenueInteractAction, IESLiveKTVActions, IESLiveKTVHomePanelService, IESLiveLinkmicSettingActions, IESLiveKTVCommonInnerService, IESLiveKTVCommonOuterService, IESLiveSEIListener> {
    BOOL _isStarted;
    BOOL _isMixKTV;
    BOOL _isMultiKTV;
    BOOL _isPlaying;
    BOOL _isSinging;
    BOOL _hasJoinChannel;
    BOOL _isPause;
    BOOL _isIMDowngrade;
    BOOL _isSuspend;
    BOOL _isPKChorus;
    BOOL _muteBeforeStartSinging;
    BOOL _isPlayMode;
    BOOL _isSecondCut;
    BOOL _enableKTVToneChange;
    BOOL _isOrderPanlShow;
    BOOL _showRedDot;
    BOOL _ktvInhouseLogEnable;
    BOOL _isRandomKTVMode;
    BOOL _isSecondShow;
    BOOL _isSearching;
    BOOL _hasReportSingStatus;
    BOOL _manualMuteVideoStream;
    BOOL _isUpdating;
    BOOL _isExtraDownlad;
    BOOL _isShowingFollowGuideView;
    BOOL _needPauseTips;
    BOOL _isPreview;
    BOOL _isScoreMode;
    BOOL _savedScoreMode;
    BOOL _isPlayAllMode;
    BOOL _hasChangeToKTV;
    int _pendingPlayMode;
    unsigned long long _state;
    IESLiveKtvSongStruct *_currentPlayKTVMusic;
    long long _requestMode;
    double _currentPlayTime;
    IESLiveInteractFeedbackViewModel *_musicFeedbackViewModel;
    IESLiveCombineSubject *_ktvSEISubject;
    IESLiveCombineSubject *_ktvMidiFeedbackSEISubject;
    long long _isCPUOptimize;
    IESLiveKTVCommonApi *_ktvApi;
    IESLiveKTVMidiStore *_midiStore;
    IESLiveKTVMusicManager *_musicManager;
    IESLiveKTVCommonListenerStore *_listenerStore;
    IESLiveKTVFullLinkMonitor *_monitor;
    IESLiveKTVFullLinkMusicMonitor *_musicMonitor;
    IESLiveKTVLogger *_logger;
    IESLiveKTVPlayer *_player;
    IESLiveKTVControlStore *_controlStore;
    id<IESLiveRoomService> _room;
    HTSEventContext *_trackContext;
    IESLiveComponentContext *_componentContext;
    NSDictionary *_settingConfig;
    long long _listenUnReadCount;
    long long _applyUnReadCount;
    double _applyUnReadUpdateTime;
    long long _audienceUnReadCount;
    double _listenUnReadUpdateTime;
    long long _multiChorusUnReadCount;
    double _multiChorusUnReadUpdateTime;
    NSMutableArray *_audienceAlreadyReadList;
    long long _lightSelectedTab;
    long long _lightSelectedSecondaryTab;
    NSNumber *_ktvAudioLinkKTVEnabled;
    NSString *_enterFrom;
    NSArray *_requestSongEnteryIDList;
    NSString *_source;
    NSNumber *_inplaceSongId;
    NSString *_waitingPrompts;
    unsigned long long _waitingOffset;
    NSString *_designatedTabName;
    id /* block */ _onClickWaitingPromptsCompletion;
    NSString *_topSongId;
    NSString *_fastStartTabName;
    long long _fastStartFirstLevelIndex;
    NSNumber *_remotePlayingMusicID;
    IESLiveKTVSEIOrderInfo *_remoteOrderInfo;
    NSNumber *_remoteMusicPlayingStatus;
    NSNumber *_finishedMusicID;
    IESLiveKtvSongStruct *_deletingMusic;
    NSTimer *_extraDownladTimer;
    HTSLiveUser *_currentUser;
    RACDisposable *_playTimeoutDisposable;
    NSTimer *_delayPlayTimer;
    double _addMusicTime;
    double _startKTVTime;
    double _lastClickPauseBtnTime;
    unsigned long long _currentKTVScene;
    double _singReportDelay;
    IESLiveKTVPanelHandler *_panelHandler;
    IESLiveAudienceInteractPermissionChecker *_permissionChecker;
    IESLiveKTVDecorateStore *_decorateStore;
    HTSEventContext *_originalTrackContext;
    unsigned long long _savedPlayingType;
    double _originalSwitchTimeInterval;
    NSNumber *_ktvLinkContradictionDisable;
    NSNumber *_anchorID;
    NSString *_oldSource;
    IESLiveKtvSongStruct *_currentSuspendingPlayKTVMusic;
    IESLiveKTVFeedbackApi *_feedbackApi;
}

@property (nonatomic) BOOL isStarted;
@property (nonatomic) unsigned long long state;
@property (nonatomic) BOOL isPlaying;
@property (nonatomic) BOOL isSinging;
@property (retain, nonatomic) IESLiveKtvSongStruct *currentPlayKTVMusic;
@property (retain, nonatomic) NSNumber *remotePlayingMusicID;
@property (retain, nonatomic) IESLiveKTVSEIOrderInfo *remoteOrderInfo;
@property (nonatomic) BOOL hasJoinChannel;
@property (nonatomic) BOOL isMixKTV;
@property (nonatomic) BOOL isMultiKTV;
@property (nonatomic) long long requestMode;
@property (nonatomic) double currentPlayTime;
@property (retain, nonatomic) IESLiveInteractFeedbackViewModel *musicFeedbackViewModel;
@property (retain, nonatomic) NSNumber *remoteMusicPlayingStatus;
@property (retain, nonatomic) IESLiveCombineSubject *ktvSEISubject;
@property (retain, nonatomic) IESLiveCombineSubject *ktvMidiFeedbackSEISubject;
@property (nonatomic) BOOL isPause;
@property (nonatomic) BOOL isIMDowngrade;
@property (nonatomic) long long isCPUOptimize;
@property (nonatomic) BOOL hasReportSingStatus;
@property (retain, nonatomic) NSNumber *finishedMusicID;
@property (nonatomic) BOOL manualMuteVideoStream;
@property (retain, nonatomic) IESLiveKtvSongStruct *deletingMusic;
@property (nonatomic) BOOL isUpdating;
@property (retain, nonatomic) NSTimer *extraDownladTimer;
@property (nonatomic) BOOL isExtraDownlad;
@property (retain, nonatomic) HTSLiveUser *currentUser;
@property (retain, nonatomic) RACDisposable *playTimeoutDisposable;
@property (retain, nonatomic) NSTimer *delayPlayTimer;
@property (nonatomic) double addMusicTime;
@property (nonatomic) BOOL isShowingFollowGuideView;
@property (nonatomic) double startKTVTime;
@property (nonatomic) double lastClickPauseBtnTime;
@property (nonatomic) BOOL needPauseTips;
@property (nonatomic) unsigned long long currentKTVScene;
@property (nonatomic) BOOL isPreview;
@property (nonatomic) double singReportDelay;
@property (retain, nonatomic) IESLiveKTVMidiStore *midiStore;
@property (retain, nonatomic) IESLiveKTVMusicManager *musicManager;
@property (retain, nonatomic) IESLiveKTVFullLinkMonitor *monitor;
@property (retain, nonatomic) IESLiveKTVFullLinkMusicMonitor *musicMonitor;
@property (retain, nonatomic) IESLiveKTVLogger *logger;
@property (retain, nonatomic) IESLiveKTVPlayer *player;
@property (retain, nonatomic) IESLiveKTVControlStore *controlStore;
@property (retain, nonatomic) IESLiveKTVPanelHandler *panelHandler;
@property (retain, nonatomic) IESLiveAudienceInteractPermissionChecker *permissionChecker;
@property (retain, nonatomic) IESLiveKTVDecorateStore *decorateStore;
@property (retain, nonatomic) HTSEventContext *originalTrackContext;
@property (nonatomic) BOOL isSuspend;
@property (copy, nonatomic) NSString *source;
@property (nonatomic) BOOL showRedDot;
@property (retain, nonatomic) IESLiveKTVCommonApi *ktvApi;
@property (nonatomic) BOOL isScoreMode;
@property (nonatomic) BOOL enableKTVToneChange;
@property (nonatomic) BOOL savedScoreMode;
@property (nonatomic) unsigned long long savedPlayingType;
@property (nonatomic) double originalSwitchTimeInterval;
@property (retain, nonatomic) NSNumber *ktvLinkContradictionDisable;
@property (retain, nonatomic) NSNumber *ktvAudioLinkKTVEnabled;
@property (retain, nonatomic) NSNumber *anchorID;
@property (nonatomic) BOOL isRandomKTVMode;
@property (nonatomic) BOOL isPlayAllMode;
@property (nonatomic) BOOL hasChangeToKTV;
@property (copy, nonatomic) NSString *oldSource;
@property (retain, nonatomic) IESLiveKtvSongStruct *currentSuspendingPlayKTVMusic;
@property (retain, nonatomic) IESLiveKTVFeedbackApi *feedbackApi;
@property (nonatomic) int pendingPlayMode;
@property (readonly, nonatomic) IESLiveKTVCommonListenerStore *listenerStore;
@property (readonly, nonatomic) id<IESLiveRoomService> room;
@property (readonly, nonatomic) HTSEventContext *trackContext;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (readonly, nonatomic) NSDictionary *settingConfig;
@property (nonatomic) BOOL isPKChorus;
@property (nonatomic) long long listenUnReadCount;
@property (nonatomic) long long applyUnReadCount;
@property (nonatomic) double applyUnReadUpdateTime;
@property (nonatomic) long long audienceUnReadCount;
@property (nonatomic) double listenUnReadUpdateTime;
@property (nonatomic) long long multiChorusUnReadCount;
@property (nonatomic) double multiChorusUnReadUpdateTime;
@property (retain, nonatomic) NSMutableArray *audienceAlreadyReadList;
@property (nonatomic) BOOL muteBeforeStartSinging;
@property (nonatomic) BOOL isPlayMode;
@property (nonatomic) BOOL isSecondCut;
@property (nonatomic) long long lightSelectedTab;
@property (nonatomic) long long lightSelectedSecondaryTab;
@property (nonatomic) BOOL isOrderPanlShow;
@property (readonly, nonatomic) BOOL shouldAddAudienceSingTab;
@property (readonly, nonatomic) BOOL ktvInhouseLogEnable;
@property (copy, nonatomic) NSString *enterFrom;
@property (copy, nonatomic) NSArray *requestSongEnteryIDList;
@property (nonatomic) BOOL isSecondShow;
@property (copy, nonatomic) NSNumber *inplaceSongId;
@property (nonatomic) BOOL isSearching;
@property (copy, nonatomic) NSString *waitingPrompts;
@property (nonatomic) unsigned long long waitingOffset;
@property (copy, nonatomic) NSString *designatedTabName;
@property (copy, nonatomic) id /* block */ onClickWaitingPromptsCompletion;
@property (copy, nonatomic) NSString *topSongId;
@property (copy, nonatomic) NSString *fastStartTabName;
@property (nonatomic) long long fastStartFirstLevelIndex;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setEnterFrom:(id)arg0;
- (id)trackContext;
- (id)enterFrom;
- (double)currentPlayingTime;
- (double)currentPlayTime;
- (id)componentContext;
- (void)setComponentContext:(id)arg0;
- (BOOL)showRedDot;
- (void)didSetAttachingDIContext;
- (id)anchorID;
- (void)setCurrentPlayTime:(double)arg0;
- (void)setAnchorID:(id)arg0;
- (id)settingConfig;
- (BOOL)isSuspend;
- (void)setIsSuspend:(BOOL)arg0;
- (BOOL)isPause;
- (void)setIsPause:(BOOL)arg0;
- (void)setShowRedDot:(BOOL)arg0;
- (void)startRevenueInteractWithScene:(unsigned long long)arg0;
- (void)endRevenueInteractWithScene:(unsigned long long)arg0;
- (void)didJoinRevenueInteractChannelWithScene:(unsigned long long)arg0;
- (void)didLeaveRevenueInteractChannelWithScene:(unsigned long long)arg0;
- (BOOL)isApplyingToJoinChannel;
- (void)smoothEnterRoomFromPreview;
- (id)musicManager;
- (void)setMusicManager:(id)arg0;
- (void)sendOrderSongMessage:(id)arg0 color:(id)arg1;
- (id)currentSinger;
- (void)showKTVPanelFrom:(id)arg0;
- (void)requestAddSongWithMusicModel:(id)arg0 queryUserId:(id)arg1 fromRequestType:(id)arg2 requestType:(id)arg3;
- (BOOL)isInSoloKTVRoomAndNeedMute;
- (id)currnetSongId;
- (id)currentSongName;
- (void)showKTVPanelFrom:(id)arg0 tabName:(id)arg1;
- (BOOL)isSinging;
- (BOOL)isInKTVMode;
- (BOOL)isKTVPanelShowing;
- (id)currentSingerUserID;
- (id)feedbackExtraParams;
- (BOOL)isSupportedInteractiveKTV;
- (BOOL)showKtvLotteryPipIfNeeded;
- (id)getCurrentMusicModel;
- (id)orderlist;
- (id)onlineUserWrapper:(id)arg0;
- (unsigned long long)currentKTVState;
- (void)showKTVPanelFrom:(id)arg0 forceOrder:(BOOL)arg1;
- (void)hideKTVPanelWithCompletion:(id /* block */)arg0;
- (void)stopCurrentPlayingMusicWithParams:(id)arg0;
- (void)hideMusicListFeedbackViewWithAnimated:(BOOL)arg0;
- (void)showKTVFastCutSongPopupWithMusic:(id)arg0;
- (BOOL)isKTVController;
- (id)orderSongForUser:(id)arg0;
- (void)updateScoreModeWithSwitch:(BOOL)arg0;
- (void)checkAuthorizationPermission:(id /* block */)arg0;
- (void)applyConnectionWithEventExtra:(id)arg0 afterFollow:(BOOL)arg1 applySource:(unsigned long long)arg2 requestPage:(id)arg3;
- (id)childTrackerContext;
- (void)rebuildTrackContextForPlayMode;
- (id)isInSongOrder;
- (void)trackKsongIconClick;
- (id)feedBackMusicProcessInfo;
- (void)updateEarphoneTurnedOnFlag:(BOOL)arg0;
- (id)recentSelfOrderMusicListString;
- (unsigned long long)supportSeiTypes;
- (void)onParseredWithSEIResult:(id)arg0;
- (void)didJoinChannelWithLayout:(id)arg0;
- (void)didLeaveChannelWithLayout:(id)arg0;
- (id)permissionChecker;
- (void)setPermissionChecker:(id)arg0;
- (void)startMixKTV;
- (void)cancelApplication;
- (BOOL)isLinkMicGuestWithUid:(id)arg0;
- (void)muteSelf:(BOOL)arg0;
- (void)setRequestMode:(long long)arg0;
- (void)setTopSongId:(id)arg0;
- (id)topSongId;
- (void)didLeaveChannel;
- (void)didJoinChannel;
- (void)setIsCPUOptimize:(long long)arg0;
- (long long)isCPUOptimize;
- (BOOL)isOnlyAcceptFollowerApply;
- (id)waitingPrompts;
- (void)setWaitingPrompts:(id)arg0;
- (void)showFollowGuideView:(id /* block */)arg0;
- (void)toggleOrigialSingToType:(unsigned long long)arg0;
- (BOOL)isSingingInRemote;
- (id)remotePlayingMusicID;
- (id)remoteOrderInfo;
- (id)midiStore;
- (void)showKTVPanelFrom:(id)arg0 forceOrder:(BOOL)arg1 shouldTrackIconClick:(BOOL)arg2;
- (void)showKTVPanelFrom:(id)arg0 forceOrder:(BOOL)arg1 shouldTrackIconClick:(BOOL)arg2 extra:(id)arg3;
- (void)startDownloadMusic:(id)arg0 completion:(id /* block */)arg1;
- (void)startPlayMusicWithMusicID:(id)arg0;
- (BOOL)isRemotePlaying:(id)arg0 userID:(id)arg1;
- (BOOL)useOldIMOrderList;
- (long long)getTotalOrderCount;
- (id)getSelfOrderList;
- (id)nextMusic;
- (unsigned long long)currentKTVScene;
- (id)currentPlayTimeSignal;
- (id)remoteMusicPlayingStatus;
- (BOOL)hasJoinChannel;
- (BOOL)p_isInMseqRoom;
- (BOOL)isScoreMode;
- (id)listenerStore;
- (void)setRemoteOrderInfo:(id)arg0;
- (id)currentPlayKTVMusic;
- (long long)liveKtvMidiMigrationSetting;
- (void)setMidiStore:(id)arg0;
- (void)setIsScoreMode:(BOOL)arg0;
- (BOOL)isMixKTV;
- (BOOL)isMultiKTV;
- (id)inplaceSongId;
- (id)ktvMusicManager;
- (BOOL)shouldAddAudienceSingTab;
- (id)ktvApi;
- (void)setIsSecondCut:(BOOL)arg0;
- (id)interactiveConnectionTrackParam;
- (long long)lightSelectedTab;
- (BOOL)isOrderPanlShow;
- (long long)multiChorusUnReadCount;
- (long long)applyUnReadCount;
- (long long)listenUnReadCount;
- (double)applyUnReadUpdateTime;
- (double)listenUnReadUpdateTime;
- (double)multiChorusUnReadUpdateTime;
- (void)setListenUnReadUpdateTime:(double)arg0;
- (long long)audienceUnReadCount;
- (BOOL)liveKtvEnableOpenMultiChorus;
- (void)showMusicListFeedbackInHomePanelViewWithSongName:(id)arg0 singerName:(id)arg1;
- (id)fastStartTabName;
- (void)setFastStartTabName:(id)arg0;
- (long long)fastStartFirstLevelIndex;
- (void)setFastStartFirstLevelIndex:(long long)arg0;
- (void)setIsOrderPanlShow:(BOOL)arg0;
- (void)setIsMixKTV:(BOOL)arg0;
- (void)setIsMultiKTV:(BOOL)arg0;
- (unsigned long long)waitingOffset;
- (void)setWaitingOffset:(unsigned long long)arg0;
- (void)setIsSinging:(BOOL)arg0;
- (void)didKTVOrderListChanged;
- (void)didKTVIMOrderListChanged;
- (BOOL)enableKTVToneChange;
- (void)setHasJoinChannel:(BOOL)arg0;
- (id)getRemoteSongStructWithMusicID:(id)arg0;
- (void)setIsPKChorus:(BOOL)arg0;
- (void)chorusStateWithNextMusic:(id)arg0;
- (void)stopPlayMusicWithFinished:(BOOL)arg0 needRemove:(BOOL)arg1;
- (void)anchorStartPingWithExtraBlock:(id /* block */)arg0;
- (id)delayPlayTimer;
- (void)setDelayPlayTimer:(id)arg0;
- (id)musicMonitor;
- (void)combineProtocol;
- (void)setupMusicManager;
- (void)setMusicMonitor:(id)arg0;
- (void)setupMidiStore;
- (void)setupDecorateStore;
- (void)addMuiscModel:(id)arg0 source:(id)arg1 afterFollow:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)anchorDownloadSuccessAddMusic:(id)arg0 completion:(id /* block */)arg1;
- (void)audienceDownloadSuccessAddMusic:(id)arg0 source:(id)arg1 afterFollow:(BOOL)arg2 completion:(id /* block */)arg3;
- (double)addMusicTime;
- (void)setAddMusicTime:(double)arg0;
- (void)toastAddSongPrompt:(id)arg0;
- (id)panelHandler;
- (void)startMultiKTV;
- (void)unbindProtocols;
- (void)setCurrentKTVScene:(unsigned long long)arg0;
- (void)startKTVMode;
- (void)resetAllStatus;
- (BOOL)isPKChorus;
- (id)deletingMusic;
- (void)setDeletingMusic:(id)arg0;
- (void)setIsIMDowngrade:(BOOL)arg0;
- (void)prefetchMusicFeedbackListModelIfNeeded;
- (void)addKTVObserver;
- (void)setKtvApi:(id)arg0;
- (void)setInplaceSongId:(id)arg0;
- (void)setDecorateStore:(id)arg0;
- (id)decorateStore;
- (void)setSavedPlayingType:(unsigned long long)arg0;
- (void)setCurrentPlayKTVMusic:(id)arg0;
- (void)reformTrackContext;
- (void)setRemotePlayingMusicID:(id)arg0;
- (void)setRemoteMusicPlayingStatus:(id)arg0;
- (void)handleSingerStateChanged;
- (BOOL)isShowingFollowGuideView;
- (void)trackClickFansLinkGuide;
- (id)buildTrackFollow;
- (void)trackShowFansLinkGuide;
- (void)setDesignatedTabName:(id)arg0;
- (void)trackKTVSingIconClickWithExtra:(id)arg0;
- (void)postNotificationToWebcastWithMuiscID:(id)arg0 progress:(id)arg1;
- (void)trackClickedKSongSuccessEventWithMusicModel:(id)arg0 queryUserId:(id)arg1 fromRequestType:(id)arg2 requestType:(id)arg3;
- (id)ktvLinkContradictionDisable;
- (long long)lightSelectedSecondaryTab;
- (BOOL)isSelfSongOrdered;
- (BOOL)isExtraDownlad;
- (void)setIsExtraDownlad:(BOOL)arg0;
- (void)setExtraDownladTimer:(id)arg0;
- (void)realStartPlayMusicModel:(id)arg0;
- (void)setManualMuteVideoStream:(BOOL)arg0;
- (void)trackMusicPlayFail:(long long)arg0 music:(id)arg1 extra:(id)arg2;
- (void)setPlayTimeoutDisposable:(id)arg0;
- (id)playTimeoutDisposable;
- (void)reportSongStatusIfNeededWithSongID:(id)arg0 playingTime:(double)arg1;
- (id)finishedMusicID;
- (void)deleteAleadyPlayMusic:(id)arg0 finished:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setFinishedMusicID:(id)arg0;
- (void)stopPlayMusicWithFinished:(BOOL)arg0 needRemove:(BOOL)arg1 extraParams:(id)arg2;
- (void)stopPlayMusicWithFinished:(BOOL)arg0 needRemove:(BOOL)arg1 extraParams:(id)arg2 completion:(id /* block */)arg3;
- (void)trackFinishMusicPlay:(id)arg0 withDuration:(double)arg1 isFinished:(BOOL)arg2 extraParams:(id)arg3;
- (void)setHasReportSingStatus:(BOOL)arg0;
- (BOOL)muteBeforeStartSinging;
- (BOOL)manualMuteVideoStream;
- (void)setMuteBeforeStartSinging:(BOOL)arg0;
- (BOOL)getMemoryScoreMode;
- (void)p_setupMidiViewModel;
- (void)p_startMidiScoreIfNeed;
- (void)p_endMidiScore;
- (void)p_didOderListChanged;
- (BOOL)isOptimizeOrderListShowing;
- (BOOL)isIMDowngrade;
- (void)checkNextState;
- (BOOL)shouldShieldSei:(id)arg0;
- (void)handleAnchorState:(id)arg0;
- (void)handleAudienceState:(id)arg0;
- (void)handleSeiInChorus:(id)arg0;
- (id)ktvSEISubject;
- (id)ktvMidiFeedbackSEISubject;
- (double)singReportDelay;
- (BOOL)hasReportSingStatus;
- (double)lastClickPauseBtnTime;
- (BOOL)needPauseTips;
- (void)setNeedPauseTips:(BOOL)arg0;
- (void)setLastClickPauseBtnTime:(double)arg0;
- (void)removeMusicModel:(id)arg0 completion:(id /* block */)arg1 params:(id)arg2;
- (double)originalSwitchTimeInterval;
- (void)setOriginalSwitchTimeInterval:(double)arg0;
- (id)musicFeedbackViewModel;
- (void)setMusicFeedbackViewModel:(id)arg0;
- (id)initWithRoom:(id)arg0 trackContext:(id)arg1 componentContext:(id)arg2 isPreview:(BOOL)arg3;
- (void)addMuiscModel:(id)arg0 source:(id)arg1 addCompletion:(id /* block */)arg2 limit:(long long)arg3;
- (void)smoothExitRoom;
- (void)exitMultiKTV;
- (void)exitMixKTV;
- (void)fastStartSelectedOrderTabWithFirstLevelTab:(long long)arg0 tabName:(id)arg1 enterFrom:(id)arg2;
- (void)hideKTVControlPanelWithCompletion:(id /* block */)arg0;
- (id)controlStore;
- (void)updateMusicPauseWithCompletion:(id /* block */)arg0;
- (void)toggleShowLyricsType:(BOOL)arg0 needToast:(BOOL)arg1;
- (void)favoriteMusicModel:(id)arg0 completion:(id /* block */)arg1;
- (id)feedbackApi;
- (void)setKtvSEISubject:(id)arg0;
- (void)setKtvMidiFeedbackSEISubject:(id)arg0;
- (void)setControlStore:(id)arg0;
- (void)setListenUnReadCount:(long long)arg0;
- (void)setApplyUnReadCount:(long long)arg0;
- (void)setApplyUnReadUpdateTime:(double)arg0;
- (void)setAudienceUnReadCount:(long long)arg0;
- (void)setMultiChorusUnReadCount:(long long)arg0;
- (void)setMultiChorusUnReadUpdateTime:(double)arg0;
- (id)audienceAlreadyReadList;
- (void)setAudienceAlreadyReadList:(id)arg0;
- (BOOL)isPlayMode;
- (void)setIsPlayMode:(BOOL)arg0;
- (BOOL)isSecondCut;
- (void)setLightSelectedTab:(long long)arg0;
- (void)setLightSelectedSecondaryTab:(long long)arg0;
- (void)setEnableKTVToneChange:(BOOL)arg0;
- (id)ktvAudioLinkKTVEnabled;
- (void)setKtvAudioLinkKTVEnabled:(id)arg0;
- (BOOL)ktvInhouseLogEnable;
- (BOOL)isRandomKTVMode;
- (void)setIsRandomKTVMode:(BOOL)arg0;
- (id)requestSongEnteryIDList;
- (void)setRequestSongEnteryIDList:(id)arg0;
- (BOOL)isSecondShow;
- (void)setIsSecondShow:(BOOL)arg0;
- (id)designatedTabName;
- (id /* block */)onClickWaitingPromptsCompletion;
- (void)setOnClickWaitingPromptsCompletion:(id /* block */)arg0;
- (id)extraDownladTimer;
- (void)setIsShowingFollowGuideView:(BOOL)arg0;
- (double)startKTVTime;
- (void)setStartKTVTime:(double)arg0;
- (void)setSingReportDelay:(double)arg0;
- (void)setPanelHandler:(id)arg0;
- (id)originalTrackContext;
- (void)setOriginalTrackContext:(id)arg0;
- (BOOL)savedScoreMode;
- (void)setSavedScoreMode:(BOOL)arg0;
- (unsigned long long)savedPlayingType;
- (void)setKtvLinkContradictionDisable:(id)arg0;
- (BOOL)isPlayAllMode;
- (void)setIsPlayAllMode:(BOOL)arg0;
- (BOOL)hasChangeToKTV;
- (void)setHasChangeToKTV:(BOOL)arg0;
- (id)oldSource;
- (void)setOldSource:(id)arg0;
- (id)currentSuspendingPlayKTVMusic;
- (void)setCurrentSuspendingPlayKTVMusic:(id)arg0;
- (void)setFeedbackApi:(id)arg0;
- (int)pendingPlayMode;
- (void)setPendingPlayMode:(int)arg0;
- (id)logger;
- (BOOL)isUpdating;
- (long long)requestMode;
- (BOOL)isSearching;
- (id)source;
- (BOOL)isStarted;
- (void).cxx_destruct;
- (id)monitor;
- (unsigned long long)state;
- (void)setState:(unsigned long long)arg0;
- (void)setMonitor:(id)arg0;
- (void)setPlayer:(id)arg0;
- (BOOL)isPreview;
- (id)currentUser;
- (BOOL)isPaused;
- (BOOL)isPlaying;
- (void)setIsUpdating:(BOOL)arg0;
- (void)setCurrentUser:(id)arg0;
- (void)setSource:(id)arg0;
- (void)dealloc;
- (void)setIsPlaying:(BOOL)arg0;
- (id)player;
- (void)setLogger:(id)arg0;
- (void)setIsSearching:(BOOL)arg0;
- (id)room;
- (void)setupPlayer;
- (void)setIsPreview:(BOOL)arg0;
- (void)setIsStarted:(BOOL)arg0;
- (void)receiveMessage:(id)arg0;

@end
