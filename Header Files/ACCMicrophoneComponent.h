//
//     Generated by private class-dump
//

@class ACCMicrophoneViewModel, NSString, AWEReactMicrophoneButton;
@protocol ACCRecordSidebarService, ACCRecorderViewContainer, ACCRecordFlowService, ACCCameraService, ACCRecordSwitchModeService, ACCRecordPropService, ACCRecordAuthService;

@interface ACCMicrophoneComponent : ACCFeatureComponent <ACCRecordConfigAudioHandler, ACCRecordConfigDurationHandler, ACCRecordSwitchModeServiceSubscriber, ACCRecordFlowServiceSubscriber, ACCRecordPropServiceSubscriber, ACCRecordFlowControlServiceSubscriber> {
    BOOL _viewDidAppearOnce;
    BOOL _hasAppearMusicToast;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCCameraService> _cameraService;
    id<ACCRecordFlowService> _flowService;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCRecordPropService> _propService;
    id<ACCRecordAuthService> _authService;
    id<ACCRecordSidebarService> _sidebarService;
    AWEReactMicrophoneButton *_reactMicButton;
    ACCMicrophoneViewModel *_viewModel;
    NSString *_expectedDuetMicrophoneShowTip;
}

@property (retain, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (retain, nonatomic) id<ACCRecordFlowService> flowService;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (weak, nonatomic) id<ACCRecordAuthService> authService;
@property (weak, nonatomic) id<ACCRecordSidebarService> sidebarService;
@property (retain, nonatomic) AWEReactMicrophoneButton *reactMicButton;
@property (retain, nonatomic) ACCMicrophoneViewModel *viewModel;
@property (nonatomic) BOOL viewDidAppearOnce;
@property (nonatomic) BOOL hasAppearMusicToast;
@property (copy, nonatomic) NSString *expectedDuetMicrophoneShowTip;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)componentDidAppear;
- (unsigned long long)preferredLoadPhase;
- (void)loadComponentView;
- (id)serviceBinding;
- (void)bindServices:(id)arg0;
- (id)flowService;
- (id)switchModeService;
- (void)flowServiceDidUpdateDuration:(double)arg0;
- (void)switchModeServiceWillChangeToMode:(id)arg0 oldMode:(id)arg1;
- (void)didSetMaxDuration:(double)arg0;
- (void)setFlowService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (id)authService;
- (void)setAuthService:(id)arg0;
- (BOOL)viewDidAppearOnce;
- (void)setViewDidAppearOnce:(BOOL)arg0;
- (void)flowControlServiceWillStartRecordFlow:(unsigned long long)arg0;
- (id)propService;
- (void)setPropService:(id)arg0;
- (void)propServiceWillApplyProp:(id)arg0 propSource:(long long)arg1;
- (id)sidebarService;
- (void)setSidebarService:(id)arg0;
- (void)didFinishConfigAudioWithSetMusicCompletion:(id /* block */)arg0;
- (void)createMicrophoneBarItem;
- (void)updateMicroBarUIAlpha;
- (void)updateVideoMutedStatusAfterAuth;
- (void)p_setupDuetMicrophoneStatusTipIfNeed;
- (void)p_showDuetMicrophoneTipIfNeed;
- (void)p_showMusicMicrophoneTipIfNeed;
- (id)reactMicButton;
- (BOOL)microphoneBarItemNeedShow;
- (BOOL)haveDeniedMicroPhone;
- (void)setExpectedDuetMicrophoneShowTip:(id)arg0;
- (id)expectedDuetMicrophoneShowTip;
- (void)toggleMicButton;
- (void)setHasAppearMusicToast:(BOOL)arg0;
- (void)updateMicLockState;
- (void)updateMicroItemWithDuration:(double)arg0;
- (void)clickReactMicButton:(id)arg0;
- (void)setReactMicButton:(id)arg0;
- (BOOL)hasAppearMusicToast;
- (void).cxx_destruct;
- (void)setViewModel:(id)arg0;
- (id)viewModel;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;

@end
