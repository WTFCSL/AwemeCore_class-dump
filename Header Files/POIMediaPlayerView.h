//
//     Generated by private class-dump
//

@class UIView, NSString, NSTimer, POIMediaPlayerAlbumProgressContainerView, POIMediaPlayerAlbumCollectionView, POIMediaListPageContext, NSMutableDictionary, POIMediaPlayerModel;
@protocol AWEUILoadingViewProtocol, POIMediaAlbumPlayerDelegate, IESVideoPlayerProtocol, POIMediaPlayerViewDelegate;

@interface POIMediaPlayerView : UIView <IESVideoPlayerDelegate, POIMediaPlayerAlbumProgressContainerViewDelegate, UIGestureRecognizerDelegate, UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, POIMediaAlbumControllerProtocol, POIMediaPlayerViewDelegate, POIMediaPlayerControllerProtocol> {
    BOOL _isDisturbPlay;
    BOOL _isScrolling;
    BOOL _isAlbumReadyForDisplay;
    long long _currentPlayState;
    id<POIMediaPlayerViewDelegate, POIMediaAlbumPlayerDelegate> _delegate;
    long long _playbackAction;
    POIMediaListPageContext *_context;
    NSString *_unique_tag;
    POIMediaPlayerModel *_model;
    NSMutableDictionary *_trackParams;
    UIView<AWEUILoadingViewProtocol> *_loadingView;
    POIMediaPlayerAlbumCollectionView *_collectionView;
    POIMediaPlayerAlbumProgressContainerView *_progressView;
    id<IESVideoPlayerProtocol> _playerWrapper;
    UIView *_playerView;
    long long _currentIndex;
    NSTimer *_scrollTimer;
    NSTimer *_progressTimer;
    double _progressValue;
    struct CGSize { double width; double height; } _preferredPlayerSize;
}

@property (retain, nonatomic) UIView<AWEUILoadingViewProtocol> *loadingView;
@property (nonatomic) long long currentPlayState;
@property (retain, nonatomic) POIMediaPlayerModel *model;
@property (retain, nonatomic) POIMediaPlayerAlbumCollectionView *collectionView;
@property (retain, nonatomic) POIMediaPlayerAlbumProgressContainerView *progressView;
@property (retain, nonatomic) id<IESVideoPlayerProtocol> playerWrapper;
@property (retain, nonatomic) UIView *playerView;
@property (nonatomic) long long currentIndex;
@property (nonatomic) BOOL isScrolling;
@property (retain, nonatomic) NSTimer *scrollTimer;
@property (retain, nonatomic) NSTimer *progressTimer;
@property (nonatomic) double progressValue;
@property (nonatomic) BOOL isAlbumReadyForDisplay;
@property (readonly, nonatomic) unsigned long long mediaType;
@property (weak, nonatomic) id<POIMediaPlayerViewDelegate, POIMediaAlbumPlayerDelegate> delegate;
@property (nonatomic) BOOL mute;
@property (nonatomic) long long playbackAction;
@property (nonatomic) struct CGSize { double width; double height; } preferredPlayerSize;
@property (weak, nonatomic) POIMediaListPageContext *context;
@property (nonatomic) BOOL isDisturbPlay;
@property (copy, nonatomic) NSString *unique_tag;
@property (retain, nonatomic) NSMutableDictionary *trackParams;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)player:(id)arg0 playbackFailedWithError:(id)arg1;
- (void)playerDidReadyForDisplay:(id)arg0;
- (void)player:(id)arg0 didChangePlaybackStateWithAction:(long long)arg1;
- (void)player:(id)arg0 didChangeStallState:(long long)arg1;
- (void)player:(id)arg0 avOutsyncStateDidChangedWithType:(unsigned long long)arg1 extraInfo:(id)arg2;
- (void)playerWillLoopPlaying:(id)arg0;
- (void)player:(id)arg0 playbackFailedForURL:(id)arg1 error:(id)arg2;
- (void)player:(id)arg0 didChangeStallState:(long long)arg1 actionType:(long long)arg2 reason:(unsigned long long)arg3;
- (void)player:(id)arg0 didFinishVideoDataDownloadForURL:(id)arg1;
- (void)player:(id)arg0 noVideoDataToDownloadForURL:(id)arg1;
- (void)player:(id)arg0 didFetchVideoModel:(id)arg1;
- (id)trackParams;
- (void)setTrackParams:(id)arg0;
- (long long)currentPlayState;
- (void)setScrollTimer:(id)arg0;
- (id)scrollTimer;
- (void)setPlaybackAction:(long long)arg0;
- (void)setCurrentPlayState:(long long)arg0;
- (void)addPeriodicTimeObserver;
- (id)createProgressView;
- (void)resetLoadingView;
- (void)setUnique_tag:(id)arg0;
- (id)unique_tag;
- (void)setPlayerWrapper:(id)arg0;
- (void)albumScrollToIndex:(unsigned long long)arg0;
- (void)configWithModel:(id)arg0 preferredSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setPreferredPlayerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setIsDisturbPlay:(BOOL)arg0;
- (void)didTapLeftEnd;
- (void)didTapRightEnd;
- (struct CGSize { double x0; double x1; })preferredPlayerSize;
- (void)addVideoPlayer;
- (void)addMusicPlayer;
- (void)addPagerTimer;
- (void)addProgressTimer;
- (void)updateAlbumProgress;
- (id)createPlayerWrapper:(id)arg0;
- (BOOL)isDisturbPlay;
- (void)albumScrollToIndex:(unsigned long long)arg0 isAuto:(BOOL)arg1;
- (void)scrollToIndex:(long long)arg0 animated:(BOOL)arg1 isAuto:(BOOL)arg2;
- (void)scrollToIndex:(unsigned long long)arg0 isAuto:(BOOL)arg1;
- (BOOL)isAlbumReadyForDisplay;
- (void)setIsAlbumReadyForDisplay:(BOOL)arg0;
- (void)previousCell;
- (void)resetOffset;
- (BOOL)shouldAlbumPlayerHandlePanGesture:(id)arg0;
- (long long)numberOfSectionsInCollectionView:(id)arg0;
- (BOOL)mute;
- (void)setIsScrolling:(BOOL)arg0;
- (void)setModel:(id)arg0;
- (void)resetTimer;
- (long long)collectionView:(id)arg0 numberOfItemsInSection:(long long)arg1;
- (struct CGSize { double x0; double x1; })collectionView:(id)arg0 layout:(id)arg1 sizeForItemAtIndexPath:(id)arg2;
- (void).cxx_destruct;
- (id)collectionView;
- (long long)currentIndex;
- (id)collectionView:(id)arg0 cellForItemAtIndexPath:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg0 withVelocity:(struct CGPoint { double x0; double x1; })arg1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)arg2;
- (void)setContext:(id)arg0;
- (id)model;
- (BOOL)isScrolling;
- (BOOL)stop;
- (unsigned long long)mediaType;
- (void)setProgressValue:(double)arg0;
- (void)setCollectionView:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setCurrentIndex:(long long)arg0;
- (id)delegate;
- (id)progressView;
- (void)setProgressView:(id)arg0;
- (id)context;
- (void)prepareForReuse;
- (id)playerView;
- (double)progressValue;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (BOOL)play;
- (void)setPlayerView:(id)arg0;
- (BOOL)pause;
- (void)setMute:(BOOL)arg0;
- (void)showLoadingView;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (id)playerWrapper;
- (long long)playbackAction;
- (void)willDisplay;
- (id)progressTimer;
- (void)setProgressTimer:(id)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;
- (void)nextCell;

@end
