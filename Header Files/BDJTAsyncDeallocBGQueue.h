//
//     Generated by private class-dump
//

@class __begin_, NSThread, __end_cap_, __end_;

@interface BDJTAsyncDeallocBGQueue : NSObject {
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _mutex_lock;
    struct deque<id, std::allocator<id>> { struct __split_buffer<id *, std::allocator<id *>> { __begin_ ***__first_; __end_ ***x0; __end_cap_ ***x1; struct __compressed_pair<id **, std::allocator<id *>> { id **__value_; } x2; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<id>> { unsigned long long __value_; } __size_; } _queue;
    struct __CFRunLoopTimer { } *_timer;
    float _releaseInterval;
    long long _maxQueueObjCount;
    NSThread *_thread;
}

@property (retain, nonatomic) NSThread *thread;
@property (nonatomic) float releaseInterval;
@property (nonatomic) long long maxQueueObjCount;

+ (id)shared;

- (void)p_queueOperation;
- (void)subThreadRun;
- (BOOL)enterBackgroundReleaseQueue:(id)arg0;
- (float)releaseInterval;
- (void)setReleaseInterval:(float)arg0;
- (long long)maxQueueObjCount;
- (void)setMaxQueueObjCount:(long long)arg0;
- (void)_stop;
- (id)init;
- (void).cxx_destruct;
- (void)stop;
- (id)thread;
- (void)dealloc;
- (id).cxx_construct;
- (void)setThread:(id)arg0;

@end
