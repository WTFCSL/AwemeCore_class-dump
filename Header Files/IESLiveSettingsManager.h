//
//     Generated by private class-dump
//

@class IESLiveSettingsApi, HTSLiveApi, IESLiveSettingsStorageNew;

@interface IESLiveSettingsManager : NSObject {
    BOOL _fetching;
    BOOL _hasFetchedSuccess;
    IESLiveSettingsStorageNew *_settings;
    long long _serviceId;
    long long _methodId;
    IESLiveSettingsApi *_settingsApi;
    HTSLiveApi *_api;
    double _fetchedSuccessTime;
    double _delayFetchedInSeconds;
    long long _delayFetchedSetting;
}

@property (nonatomic) long long serviceId;
@property (nonatomic) long long methodId;
@property (retain, nonatomic) IESLiveSettingsApi *settingsApi;
@property (getter=isFetching) BOOL fetching;
@property (retain, nonatomic) HTSLiveApi *api;
@property (nonatomic) BOOL hasFetchedSuccess;
@property (nonatomic) double fetchedSuccessTime;
@property (nonatomic) double delayFetchedInSeconds;
@property (nonatomic) long long delayFetchedSetting;
@property (readonly, nonatomic) IESLiveSettingsStorageNew *settings;

+ (id)sharedManager;

- (void)setMethodId:(long long)arg0;
- (long long)methodId;
- (void)fetchSettingsIsForcible:(BOOL)arg0 isColdLaunch:(BOOL)arg1;
- (id)p_errorWithCode:(long long)arg0 message:(id)arg1;
- (void)resetFreezedSettingsWithWhiteList:(id)arg0;
- (id)filterValueForKey:(id)arg0;
- (void)configDelayFetchedInSeconds;
- (void)onFrontierReceivingMessage:(id)arg0;
- (BOOL)hasFetchedSuccess;
- (void)p_fetchSettingsIfNeeded:(id)arg0;
- (long long)delayFetchedSetting;
- (BOOL)isValidMessageForSetting:(id)arg0;
- (void)p_trackSettingLite:(id)arg0 error:(id)arg1;
- (void)p_fetchSettingsLiteWithHeaders:(id)arg0 params:(id)arg1 completion:(id /* block */)arg2;
- (id)p_readDolphinInfo;
- (void)logLargeDict:(id)arg0;
- (void)p_writeSettingsInfo:(id)arg0;
- (void)_logInfoWithHasVlidData:(BOOL)arg0 errorCode:(long long)arg1 requestType:(id)arg2 responseDic:(id)arg3;
- (void)setHasFetchedSuccess:(BOOL)arg0;
- (void)setFetchedSuccessTime:(double)arg0;
- (double)fetchedSuccessTime;
- (id)settingsApi;
- (void)setSettingsApi:(id)arg0;
- (double)delayFetchedInSeconds;
- (void)setDelayFetchedInSeconds:(double)arg0;
- (void)setDelayFetchedSetting:(long long)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)settings;
- (void)setServiceId:(long long)arg0;
- (void)dealloc;
- (long long)serviceId;
- (void)setFetching:(BOOL)arg0;
- (BOOL)isFetching;
- (id)api;
- (void)setApi:(id)arg0;

@end
