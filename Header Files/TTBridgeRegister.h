//
//     Generated by private class-dump
//

@class TTBridgeThreadSafeMutableDictionary, NSHashTable;
@protocol TTBridgeInterceptor, TTBridgeRegisterProtocol, TTBridgeDocumentor, TTBridgeEngine;

@interface TTBridgeRegister : NSObject {
    TTBridgeThreadSafeMutableDictionary *_methodDic;
    TTBridgeThreadSafeMutableDictionary *_domain2PrivateMethods;
    id<TTBridgeRegisterProtocol> _delegate;
    id<TTBridgeEngine> _engine;
    id<TTBridgeInterceptor> _interceptor;
    NSHashTable *_interceptors;
    id<TTBridgeDocumentor> _documentor;
}

@property (class, weak, nonatomic) id<TTBridgeDocumentor> documentor;
@property (class, weak, nonatomic) id<TTBridgeInterceptor> interceptor;

@property (weak, nonatomic) id<TTBridgeInterceptor> interceptor;
@property (retain, nonatomic) NSHashTable *interceptors;
@property (weak, nonatomic) id<TTBridgeDocumentor> documentor;
@property (weak, nonatomic) id<TTBridgeRegisterProtocol> delegate;
@property (weak, nonatomic) id<TTBridgeEngine> engine;

+ (void)_doRegisterIfNeeded;
+ (id)sharedRegister;
+ (void)addInterceptor:(id)arg0;
+ (void)removeInterceptor:(id)arg0;
+ (BOOL)bridgeEngine:(id)arg0 shouldHandleGlobalBridgeCommand:(id)arg1;
+ (BOOL)bridgeEngine:(id)arg0 shouldHandleLocalBridgeCommand:(id)arg1;
+ (void)bridgeEngine:(id)arg0 willExecuteBridgeCommand:(id)arg1;
+ (BOOL)bridgeEngine:(id)arg0 shouldCallbackUnregisteredCommand:(id)arg1;
+ (void)bridgeEngine:(id)arg0 willCallbackBridgeCommand:(id)arg1;
+ (BOOL)bridgeEngine:(id)arg0 shouldUseExternalAuthorizeForCommand:(id)arg1;
+ (void)setInterceptor:(id)arg0;
+ (id)interceptor;
+ (id)documentor;
+ (void)setDocumentor:(id)arg0;

- (BOOL)respondsToBridge:(id)arg0;
- (id)methodInfoForBridge:(id)arg0;
- (void)registerBridge:(id /* block */)arg0;
- (void)unregisterBridge:(id)arg0;
- (void)executeCommand:(id)arg0 engine:(id)arg1 completion:(id /* block */)arg2;
- (void)luckycat_executeCommand:(id)arg0 engine:(id)arg1 completion:(id /* block */)arg2;
- (id)interceptors;
- (void)setInterceptors:(id)arg0;
- (void)setInterceptor:(id)arg0;
- (id)interceptor;
- (void)registerMethod:(id)arg0 handler:(id /* block */)arg1 engineType:(long long)arg2 authType:(unsigned long long)arg3 domains:(id)arg4;
- (BOOL)respondsToBridge:(id)arg0 engineType:(long long)arg1;
- (id)privateBridgesOfDomain:(id)arg0;
- (void)registerMethod:(id)arg0 engineType:(long long)arg1 authType:(unsigned long long)arg2 domains:(id)arg3;
- (void)_registerMethod:(id)arg0 handler:(id /* block */)arg1 handlerWithCommand:(id /* block */)arg2 engineType:(long long)arg3 authType:(unsigned long long)arg4 domains:(id)arg5 extraInfo:(id)arg6;
- (id)documentor;
- (void)executeCommand:(id)arg0 engine:(id)arg1 completion:(id /* block */)arg2 preExecuteHander:(id /* block */)arg3;
- (void)setDocumentor:(id)arg0;
- (void)registerMethod:(id)arg0 handlerWithCommand:(id /* block */)arg1 engineType:(long long)arg2 authType:(unsigned long long)arg3 domains:(id)arg4;
- (void)registerDomain:(id)arg0 forPrivateMethods:(id)arg1;
- (BOOL)bridgeHasRegistered:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)engine;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)setEngine:(id)arg0;

@end
