//
//     Generated by private class-dump
//

@protocol IESLivePlayerControllerDelegate <NSObject>

@optional

- (void)player:(id)arg0 loadStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 didReceiveError:(id)arg1;
- (void)player:(id)arg0 playbackStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 mediaSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)player:(id)arg0 didReceiveMetaInfo:(id)arg1 processed:(BOOL)arg2;
- (void)player:(id)arg0 willOpenAudioRenderWithSampleRate:(int)arg1 channels:(int)arg2 duration:(int)arg3;
- (void)player:(id)arg0 willProcessAudioFrameWithRawData:(float **)arg1 samples:(int)arg2 timeStamp:(long long)arg3;
- (void)player:(id)arg0 willOpenAudioProcessInAudioRecord:(int)arg1 channels:(int)arg2 duration:(int)arg3;
- (void)player:(id)arg0 willProcessAudioFrameInAudioRecord:(float **)arg1 samples:(int)arg2 timeStamp:(long long)arg3;
- (void)onRenderVideoFrame:(struct __CVBuffer { } *)arg0 pts:(long long)arg1 width:(long long)arg2 height:(long long)arg3;
- (void)player:(id)arg0 didAutomaticallySwitchFromPreviousResolution:(id)arg1 toCurrentResolution:(id)arg2 userInfo:(id)arg3;
- (void)player:(id)arg0 onSwitchResolution:(id)arg1 error:(id)arg2;
- (void)player:(id)arg0 measureStateTimeInfo:(id)arg1;
- (void)player:(id)arg0 reportURL:(id)arg1 monitorStateInfo:(id)arg2;
- (void)player:(id)arg0 srTypeUpdate:(long long)arg1 hasManualSetSRType:(BOOL)arg2;
- (void)player:(id)arg0 onNetworkQualityChangedBehavior:(long long)arg1 detail:(id)arg2;
- (void)playerFrozen:(id)arg0;
- (void)playerResume:(id)arg0;
- (void)playerDidCleared:(id)arg0;
- (BOOL)isInAvoidVideoRenderingMode;
- (BOOL)needDisableReplayWhenBecomeActive:(id)arg0;
- (BOOL)needDisableReplayWhenBecomeActive:(id)arg0;
- (void)onStreamDryup:(id)arg0;
- (id)bizTransTrackerParams;
- (void)streamAudioBalanceModelNotExist:(id)arg0;
- (void)onLoudness:(float)arg0 soucePeak:(float)arg1 targetLufs:(float)arg2 isEnableExternalAETargetLufs:(BOOL)arg3;
- (void)onPlayerStateReport:(id)arg0;

@end
