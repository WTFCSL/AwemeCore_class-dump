//
//     Generated by private class-dump
//

@class NSArray, NSString, NSData, BDImageDecoderConfig;

@interface BDImageDecoderImageIO : NSObject <BDImageDecoder> {
    struct CGImageSource { } *_imageSource;
    struct __CFString { } *_imageFormat;
    BOOL _hasIncrementalData;
    BOOL _finished;
    NSData *_imageData;
    unsigned long long _frameNum;
    unsigned long long _loopNum;
    NSArray *_durations;
    long long _orientation;
    NSString *_filePath;
    unsigned long long _sizeType;
    BDImageDecoderConfig *_config;
    struct CGSize { double width; double height; } _originSize;
    struct CGSize { double width; double height; } _canvasSize;
}

@property (retain) NSData *imageData;
@property unsigned long long frameNum;
@property unsigned long long loopNum;
@property (copy) NSArray *durations;
@property (nonatomic) long long orientation;
@property (copy, nonatomic) NSString *filePath;
@property (nonatomic) struct CGSize { double width; double height; } originSize;
@property (nonatomic) struct CGSize { double width; double height; } canvasSize;
@property (nonatomic) unsigned long long sizeType;
@property (retain, nonatomic) BDImageDecoderConfig *config;
@property BOOL hasIncrementalData;
@property BOOL finished;
@property (readonly, nonatomic) unsigned long long codeType;
@property (readonly, nonatomic) NSData *data;
@property (readonly, nonatomic) BOOL progressiveDownloading;
@property (readonly, nonatomic) long long imageOrientation;
@property (readonly, nonatomic) unsigned long long imageCount;
@property (readonly, nonatomic) unsigned long long loopCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)canDecode:(id)arg0;
+ (BOOL)supportProgressDecode:(id)arg0;
+ (BOOL)supportStaticProgressDecode:(unsigned long long)arg0;
+ (BOOL)isAnimatedImage:(id)arg0;
+ (id)imageDictionaryProperty:(struct __CFString { } *)arg0;
+ (id)imageLoopCountProperty:(struct __CFString { } *)arg0;
+ (id)imageUnclampedDelayTimeProperty:(struct __CFString { } *)arg0;
+ (id)imageDelayTimeProperty:(struct __CFString { } *)arg0;
+ (void)initialize;

- (struct CGSize { double x0; double x1; })originSize;
- (void)setOriginSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGImage { } *)copyImageAtIndex:(unsigned long long)arg0;
- (id)initWithData:(id)arg0 config:(id)arg1;
- (void)setHasIncrementalData:(BOOL)arg0;
- (BOOL)hasIncrementalData;
- (id)initWithContentOfFile:(id)arg0;
- (BOOL)progressiveDownloading;
- (id)initWithIncrementalData:(id)arg0 config:(id)arg1;
- (void)changeDecoderWithData:(id)arg0 finished:(BOOL)arg1;
- (void)setupWithImageSource:(struct CGImageSource { } *)arg0 config:(id)arg1;
- (void)setFrameNum:(unsigned long long)arg0;
- (void)scanAndCheckFramesValid;
- (void)setLoopNum:(unsigned long long)arg0;
- (unsigned long long)loopNum;
- (void)setFinished:(BOOL)arg0;
- (id)data;
- (void)setConfig:(id)arg0;
- (id)filePath;
- (void).cxx_destruct;
- (long long)imageOrientation;
- (void)setFilePath:(id)arg0;
- (id)config;
- (long long)orientation;
- (void)setImageData:(id)arg0;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setDurations:(id)arg0;
- (void)setOrientation:(long long)arg0;
- (id)durations;
- (unsigned long long)imageCount;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(id)arg0;
- (struct CGSize { double x0; double x1; })canvasSize;
- (BOOL)finished;
- (id)initWithData:(id)arg0;
- (id)imageData;
- (unsigned long long)loopCount;
- (id)initWithImageSource:(struct CGImageSource { } *)arg0;
- (double)frameDelayAtIndex:(unsigned long long)arg0;
- (unsigned long long)codeType;
- (unsigned long long)sizeType;
- (void)setSizeType:(unsigned long long)arg0;
- (unsigned long long)frameNum;

@end
