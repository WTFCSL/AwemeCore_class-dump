//
//     Generated by private class-dump
//

@class BDARVSourceModel, NSString, BDARVPlayerMonitor, BDARVPlayer, BDARVPlayerContext, BDARVPlayerTrackerNew, BDARFirstFrameTime;
@protocol BDARAPlayerModel;

@interface BDARVPlayerManager : NSObject <BDARVPlayerDelegate, BDARVPlayerState, BDARLynxContext> {
    double inspirePlayTime;
    BDARFirstFrameTime *_firstFrameTime;
    BDARVPlayer *_player;
    BDARVSourceModel *_sourceModel;
    unsigned long long _playStatus;
    id<BDARAPlayerModel> _playerModel;
    BDARVPlayerMonitor *_videoMonitor;
    BDARVPlayerTrackerNew *_playTracker;
    unsigned long long _currentResolutionType;
    BDARVPlayerContext *_context;
}

@property (retain, nonatomic) BDARVPlayer *player;
@property (retain, nonatomic) BDARVPlayerMonitor *videoMonitor;
@property (retain, nonatomic) BDARVPlayerTrackerNew *playTracker;
@property (retain, nonatomic) id<BDARAPlayerModel> playerModel;
@property (nonatomic) unsigned long long currentResolutionType;
@property (retain, nonatomic) BDARVPlayerContext *context;
@property (nonatomic) unsigned long long playStatus;
@property (retain, nonatomic) BDARFirstFrameTime *firstFrameTime;
@property (retain, nonatomic) BDARVSourceModel *sourceModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double inspirePlayTime;

- (unsigned long long)playStatus;
- (void)setPlayerModel:(id)arg0;
- (id)playerModel;
- (double)inspirePlayTime;
- (void)setInspirePlayTime:(double)arg0;
- (id)firstFrameTime;
- (id)videoMonitor;
- (void)configPlayerWithPlayerModel:(id)arg0;
- (id)playTracker;
- (void)setOptionForKey:(long long)arg0 value:(id)arg1;
- (void)setCurrentResolutionType:(unsigned long long)arg0;
- (void)configSuperResolution;
- (void)businessOptionsWithPlayerModel:(id)arg0;
- (void)configPlayerTracker:(id)arg0;
- (void)sendReplayTrack:(id)arg0;
- (unsigned long long)currentResolutionType;
- (unsigned long long)playDurationStatus;
- (double)playPercent;
- (BOOL)isPlaybackEnded;
- (void)setPlayStatus:(unsigned long long)arg0;
- (void)player:(id)arg0 didFinishedWithType:(unsigned long long)arg1 error:(id)arg2;
- (void)playerReadyToDisPlay:(id)arg0 params:(id)arg1;
- (void)player:(id)arg0 playbackType:(unsigned long long)arg1;
- (double)totalWatchTime;
- (id)playerStatusInfo;
- (void)setFirstFrameTime:(id)arg0;
- (void)bdarPlay;
- (void)bdarPause;
- (double)bdarTotalWatchTime;
- (double)bdarDuration;
- (void)configPlayerWithAdModel:(id)arg0 updatePlayerModel:(id /* block */)arg1;
- (BOOL)configPlayManagerWithSource:(id)arg0 adModel:(id)arg1 playerConfig:(id)arg2;
- (void)configMonitor;
- (void)setVideoMonitor:(id)arg0;
- (void)setPlayTracker:(id)arg0;
- (double)currentPlaybackTime;
- (id)init;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (void)setPlayer:(id)arg0;
- (double)duration;
- (id)context;
- (void)dealloc;
- (id)player;
- (id)sourceModel;
- (void)setPlaybackSpeed:(double)arg0;
- (void)updateContext:(id /* block */)arg0;
- (unsigned long long)currentResolution;
- (void)setSourceModel:(id)arg0;

@end
