//
//     Generated by private class-dump
//

@class NSObject, WKWebView, NSString, TTBridgeRegister, NSHashTable, NSURL, UIViewController;
@protocol TTBridgeAuthorization;

@interface TTWebViewBridgeEngine : NSObject <TTBridgeEngine> {
    BOOL _schemaInterceptionEnabled;
    NSObject *_sourceObject;
    id<TTBridgeAuthorization> _authorization;
    TTBridgeRegister *_bridgeRegister;
}

@property (class, readonly, nonatomic) NSHashTable *webViewEngines;

@property (retain, nonatomic) TTBridgeRegister *bridgeRegister;
@property (readonly, weak, nonatomic) UIViewController *sourceController;
@property (readonly, nonatomic) NSURL *sourceURL;
@property (readonly, weak, nonatomic) NSObject *sourceObject;
@property (retain, nonatomic) id<TTBridgeAuthorization> authorization;
@property (readonly, weak, nonatomic) WKWebView *wkWebView;
@property (nonatomic) BOOL schemaInterceptionEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)correctTopViewControllerFor:(id)arg0;
+ (id)registerGlobalNovelBridgeNameDic;
+ (void)postEventNotification:(id)arg0 params:(id)arg1;
+ (id)webViewEngines;
+ (void)postEventNotification:(id)arg0 msg:(long long)arg1 params:(id)arg2 resultBlock:(id /* block */)arg3;

- (void)fireEvent:(id)arg0 msg:(long long)arg1 params:(id)arg2 resultBlock:(id /* block */)arg3;
- (id)bridgeRegister;
- (BOOL)respondsToBridge:(id)arg0;
- (void)fireEvent:(id)arg0 params:(id)arg1;
- (void)fireEvent:(id)arg0 params:(id)arg1 resultBlock:(id /* block */)arg2;
- (void)fireEvent:(id)arg0 msg:(long long)arg1 params:(id)arg2;
- (void)callbackBridge:(id)arg0 params:(id)arg1;
- (void)callbackBridge:(id)arg0 params:(id)arg1 resultBlock:(id /* block */)arg2;
- (void)callbackBridge:(id)arg0 msg:(long long)arg1 params:(id)arg2 resultBlock:(id /* block */)arg3;
- (void)installOnWKWebView:(id)arg0;
- (void)uninstallFromWKWebView:(id)arg0;
- (id)wkWebView;
- (void)setBridgeRegister:(id)arg0;
- (BOOL)schemaInterceptionEnabled;
- (void)setSchemaInterceptionEnabled:(BOOL)arg0;
- (id)authorization;
- (id)init;
- (long long)engineType;
- (void).cxx_destruct;
- (id)sourceURL;
- (id)sourceController;
- (id)initWithAuthorization:(id)arg0;
- (void)setAuthorization:(id)arg0;
- (void)dealloc;
- (id)sourceObject;
- (void)evaluateJavaScript:(id)arg0 completionHandler:(id /* block */)arg1;

@end
