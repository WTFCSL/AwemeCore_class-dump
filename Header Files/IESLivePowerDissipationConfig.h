//
//     Generated by private class-dump
//

@class NSDictionary;

@interface IESLivePowerDissipationConfig : NSObject {
    BOOL _enable;
    BOOL _enableBacktrace;
    BOOL _reportSlardar;
    BOOL _reportAlog;
    BOOL _aggreation;
    BOOL _recordPage;
    BOOL _reportUserException;
    BOOL _threadCPUExceedRepeatly;
    BOOL _enableGPU;
    float _sampleInterval;
    float _appCPUThreshold;
    float _sampleThreadCPUMaximum;
    float _gpuThreshold;
    long long _thermalThreshold;
    long long _samplePauseDuration;
    NSDictionary *_threadConfig;
    long long _sampleTimesLimit;
    long long _aggreationCount;
    long long _aggreationFrameCount;
    long long _reportCountLimit;
    long long _gpuSampleTimeLimit;
}

@property (nonatomic) BOOL enable;
@property (nonatomic) float sampleInterval;
@property (nonatomic) long long thermalThreshold;
@property (nonatomic) float appCPUThreshold;
@property (nonatomic) BOOL enableBacktrace;
@property (nonatomic) float sampleThreadCPUMaximum;
@property (nonatomic) long long samplePauseDuration;
@property (nonatomic) BOOL reportSlardar;
@property (nonatomic) BOOL reportAlog;
@property (copy, nonatomic) NSDictionary *threadConfig;
@property (nonatomic) long long sampleTimesLimit;
@property (nonatomic) BOOL aggreation;
@property (nonatomic) long long aggreationCount;
@property (nonatomic) long long aggreationFrameCount;
@property (nonatomic) BOOL recordPage;
@property (nonatomic) BOOL reportUserException;
@property (nonatomic) long long reportCountLimit;
@property (nonatomic) BOOL threadCPUExceedRepeatly;
@property (nonatomic) BOOL enableGPU;
@property (nonatomic) float gpuThreshold;
@property (nonatomic) long long gpuSampleTimeLimit;

+ (id)settingConfig;
+ (id)configFromDictionary:(id)arg0;

- (void)setThreadConfig:(id)arg0;
- (id)threadConfig;
- (BOOL)enableBacktrace;
- (void)setEnableBacktrace:(BOOL)arg0;
- (float)sampleThreadCPUMaximum;
- (BOOL)aggreation;
- (BOOL)reportUserException;
- (long long)aggreationFrameCount;
- (long long)aggreationCount;
- (BOOL)enableGPU;
- (long long)gpuSampleTimeLimit;
- (float)appCPUThreshold;
- (BOOL)threadCPUExceedRepeatly;
- (long long)reportCountLimit;
- (float)gpuThreshold;
- (BOOL)recordPage;
- (BOOL)reportSlardar;
- (BOOL)reportAlog;
- (long long)thermalThreshold;
- (long long)sampleTimesLimit;
- (long long)samplePauseDuration;
- (void)setSampleThreadCPUMaximum:(float)arg0;
- (void)setReportAlog:(BOOL)arg0;
- (void)setRecordPage:(BOOL)arg0;
- (void)setEnableGPU:(BOOL)arg0;
- (void)setGpuThreshold:(float)arg0;
- (void)setGpuSampleTimeLimit:(long long)arg0;
- (void)setThreadCPUExceedRepeatly:(BOOL)arg0;
- (void)setSampleTimesLimit:(long long)arg0;
- (void)setSamplePauseDuration:(long long)arg0;
- (void)setAppCPUThreshold:(float)arg0;
- (void)setAggreation:(BOOL)arg0;
- (void)setAggreationCount:(long long)arg0;
- (void)setAggreationFrameCount:(long long)arg0;
- (void)setReportSlardar:(BOOL)arg0;
- (void)setReportUserException:(BOOL)arg0;
- (void)setReportCountLimit:(long long)arg0;
- (void)setThermalThreshold:(long long)arg0;
- (BOOL)enable;
- (void).cxx_destruct;
- (float)sampleInterval;
- (void)setSampleInterval:(float)arg0;
- (void)setEnable:(BOOL)arg0;

@end
