//
//     Generated by private class-dump
//

@class UIColor, NSArray, NSMutableDictionary, UIBezierPath, UIView, NSObject;
@protocol OS_dispatch_queue;

@interface IESLiveInteractBackGroundCutProvider : NSObject {
    BOOL _enableMergeFrameAndSlotsCut;
    NSArray *_slots;
    UIView *_guestListView;
    UIColor *_startColor;
    UIColor *_endColor;
    UIView *_bgView;
    NSMutableDictionary *_maskMap;
    UIBezierPath *_saveUIBezierPath;
    NSObject<OS_dispatch_queue> *_renderSerialQueue;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _maskFor1v6;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _saveBounds;
}

@property (retain, nonatomic) UIColor *startColor;
@property (retain, nonatomic) UIColor *endColor;
@property (weak, nonatomic) UIView *bgView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } maskFor1v6;
@property (copy, nonatomic) NSArray *slots;
@property (weak, nonatomic) UIView *guestListView;
@property (retain, nonatomic) NSMutableDictionary *maskMap;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } saveBounds;
@property (retain, nonatomic) UIBezierPath *saveUIBezierPath;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *renderSerialQueue;
@property (nonatomic) BOOL enableMergeFrameAndSlotsCut;

- (id)getMaskLayer;
- (void)setMaskWithGuestListView:(id)arg0 slots:(id)arg1 andBgView:(id)arg2;
- (void)setMaskFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 andBgView:(id)arg1;
- (void)setMaskFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 guestListView:(id)arg1 slots:(id)arg2 andBgView:(id)arg3;
- (struct CGPath { } *)getMaskLayerPath;
- (id)guestListView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maskFor1v6;
- (void)asyncRenderImageStaticBg:(id)arg0 completionBlock:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })supperBounds;
- (BOOL)bgContainSlots;
- (id)pathContainSlots:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })aspectFillFrameForImage:(id)arg0;
- (void)setSaveBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })saveBounds;
- (BOOL)enableMergeFrameAndSlotsCut;
- (void)setSaveUIBezierPath:(id)arg0;
- (id)renderSerialQueue;
- (id)saveUIBezierPath;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })asyncAspectFillFrameForImage:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maskFrameWithGuestListView:(id)arg0;
- (id)p_pathWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)deafaultBackGround;
- (id)renderImageStaticBg:(id)arg0;
- (void)setMaskFor1v6:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setGuestListView:(id)arg0;
- (id)maskMap;
- (void)setMaskMap:(id)arg0;
- (void)setRenderSerialQueue:(id)arg0;
- (void)setEnableMergeFrameAndSlotsCut:(BOOL)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)bgView;
- (void)setBgView:(id)arg0;
- (void)setStartColor:(id)arg0;
- (void)setEndColor:(id)arg0;
- (id)startColor;
- (id)endColor;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maskFrame;
- (id)slots;
- (void)setSlots:(id)arg0;

@end
