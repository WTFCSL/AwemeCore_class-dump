//
//     Generated by private class-dump
//

@class NSMutableDictionary, RACSubject, ACCAdvanceEditAssetsHandler, NSObject, DVEVCContext, AVAsset, UIView, AWEAIVideoClipManager, ACCAdvanceEditDataSyncer, NSString, ACCEditViewControllerInputData, AWEVideoPublishViewModel, NSArray, AWEBinding, AWEAssetModel, RACSignal, ACCAdvanceEditTrackManager;
@protocol ACCMusicModelProtocol, DVECoreAudioProtocol, DVECoreVideoProtocol, ACCEditMusicServiceProtocol, ACCEditVideoDataProtocol, ACCProcessViewProtcol, ACCEditServiceProtocol;

@interface ACCAdvanceEditViewModel : ACCEditViewModel <NLEEditorDelegate, ACCAdvanceEditServiceProtocol, ACCAdvanceEditViewModelProtocol> {
    BOOL _isCurrentAssetModelReshooted;
    BOOL _hasReshoot;
    BOOL _isCliping;
    BOOL _backupVideoMuted;
    BOOL _wasAutoRepeatPlay;
    RACSignal *beatEditModeChangedSignal;
    NSObject<ACCEditVideoDataProtocol> *_originalVideoData;
    NSObject<ACCEditVideoDataProtocol> *_editingVideoData;
    AWEAssetModel *_currentAssetModel;
    long long _currentIndex;
    ACCAdvanceEditDataSyncer *_dataSyncer;
    DVEVCContext *_vcContext;
    ACCAdvanceEditTrackManager *_trackManager;
    id<ACCEditServiceProtocol> _editService;
    id<ACCEditMusicServiceProtocol> _musicService;
    RACSubject *_deselectMusicSubject;
    RACSubject *_beatEditModeChangedSubject;
    RACSubject *_refreshVolumeViewSubject;
    RACSubject *_didFinishAdanceEditSubject;
    RACSubject *_didExitAdanceEditSubject;
    long long _backupTotalStickerSavePhotos;
    unsigned long long _backupVideoClipMode;
    AVAsset *_backupBgmAsset;
    id<ACCMusicModelProtocol> _backupBgm;
    id /* block */ _mixPlayerCompleteBlock;
    NSMutableDictionary *_reversedResource;
    NSArray *_recordSourceAsset;
    ACCAdvanceEditAssetsHandler *_assetsViewModel;
    id<DVECoreAudioProtocol> _audioEditor;
    id<DVECoreVideoProtocol> _videoEditor;
    AWEBinding *_didCancelAdvanceEditSignal;
}

@property (retain, nonatomic) UIView<ACCProcessViewProtcol> *progressView;
@property (retain, nonatomic) AWEAIVideoClipManager *aiClipManager;
@property (retain, nonatomic) ACCAdvanceEditDataSyncer *dataSyncer;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *originalVideoData;
@property (retain, nonatomic) NSObject<ACCEditVideoDataProtocol> *editingVideoData;
@property (weak, nonatomic) id<ACCEditServiceProtocol> editService;
@property (weak, nonatomic) id<ACCEditMusicServiceProtocol> musicService;
@property (nonatomic) BOOL isCurrentAssetModelReshooted;
@property (nonatomic) BOOL hasReshoot;
@property (nonatomic) BOOL isCliping;
@property (retain, nonatomic) AWEAssetModel *currentAssetModel;
@property (nonatomic) long long currentIndex;
@property (retain, nonatomic) RACSubject *deselectMusicSubject;
@property (retain, nonatomic) RACSubject *beatEditModeChangedSubject;
@property (retain, nonatomic) RACSubject *refreshVolumeViewSubject;
@property (retain, nonatomic) RACSubject *didFinishAdanceEditSubject;
@property (retain, nonatomic) RACSubject *didExitAdanceEditSubject;
@property (nonatomic) long long backupTotalStickerSavePhotos;
@property (nonatomic) unsigned long long backupVideoClipMode;
@property (retain, nonatomic) AVAsset *backupBgmAsset;
@property (retain, nonatomic) id<ACCMusicModelProtocol> backupBgm;
@property (nonatomic) BOOL backupVideoMuted;
@property (nonatomic) BOOL wasAutoRepeatPlay;
@property (copy, nonatomic) id /* block */ mixPlayerCompleteBlock;
@property (retain, nonatomic) NSMutableDictionary *reversedResource;
@property (copy, nonatomic) NSArray *recordSourceAsset;
@property (retain, nonatomic) ACCAdvanceEditAssetsHandler *assetsViewModel;
@property (weak, nonatomic) id<DVECoreAudioProtocol> audioEditor;
@property (weak, nonatomic) id<DVECoreVideoProtocol> videoEditor;
@property (retain, nonatomic) AWEBinding *didCancelAdvanceEditSignal;
@property (readonly, nonatomic) BOOL shouldShowAdvanceEditorButton;
@property (readonly, nonatomic) BOOL isFromShareToStory;
@property (readonly, copy, nonatomic) NSArray *sourceAssetArray;
@property (readonly, nonatomic) double totalVideoDuration;
@property (readonly, nonatomic) BOOL hasChangedDuration;
@property (weak, nonatomic) DVEVCContext *vcContext;
@property (retain, nonatomic) ACCAdvanceEditTrackManager *trackManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) RACSignal *deselectMusicSignal;
@property (readonly, nonatomic) RACSignal *refreshVolumeViewSignal;
@property (readonly, nonatomic) RACSignal *didFinishAdvanceEditSignal;
@property (readonly, nonatomic) RACSignal *didExitAdvanceEditSignal;
@property (readonly, nonatomic) ACCEditViewControllerInputData *inputData;
@property (readonly, weak, nonatomic) AWEVideoPublishViewModel *repoContainer;
@property (readonly, nonatomic) BOOL isBeatEditMode;
@property (readonly, nonatomic) BOOL shouldModifyAbilityInSlides;
@property (readonly, nonatomic) RACSignal *beatEditModeChangedSignal;

+ (double)videoMinSeconds;
+ (double)videoMaxSeconds;
+ (id)degreeOfRotateType:(unsigned long long)arg0;
+ (id)p_errorWithCode:(long long)arg0 message:(id)arg1;

- (void)updateVideoData:(id)arg0;
- (id)refreshVolumeViewSignal;
- (id)audioEditor;
- (void)setAudioEditor:(id)arg0;
- (void)trackEvent:(id)arg0 eventParam:(id)arg1 needCommonParams:(BOOL)arg2;
- (id)videoEditor;
- (void)setVideoEditor:(id)arg0;
- (id)trackManager;
- (void)setTrackManager:(id)arg0;
- (id)vcContext;
- (void)setVcContext:(id)arg0;
- (id)nle;
- (void)nleEditorDidChange:(id)arg0;
- (void)setMixPlayerCompleteBlock:(id /* block */)arg0;
- (double)totalVideoDuration;
- (id /* block */)mixPlayerCompleteBlock;
- (void)removeBGM;
- (id)musicService;
- (void)setMusicService:(id)arg0;
- (id)editService;
- (void)setEditService:(id)arg0;
- (double)videoMinSeconds;
- (double)videoMaxSeconds;
- (BOOL)isCliping;
- (id)sourceAssetArray;
- (id)unRepeatAssets;
- (void)appendAssetArray:(id)arg0 atIndex:(unsigned long long)arg1;
- (BOOL)shouldShowAdvanceEditorButton;
- (BOOL)isBeatEditMode;
- (BOOL)shouldModifyAbilityInSlides;
- (id)originalVideoData;
- (id)editingVideoData;
- (id)currentAssetModel;
- (id)beatEditModeChangedSignal;
- (BOOL)isRecordVideo;
- (id)findAVAssetInVideoData:(id)arg0 withAssetModel:(id)arg1;
- (void)disableBeatEditMode;
- (void)enableBeatEditMode;
- (void)updateCurrentAssetModelAtIndex:(long long)arg0;
- (void)updateWithReshootPublishModel:(id)arg0;
- (void)dataSync;
- (BOOL)advanceEditIsOn;
- (id)currentMusicTabTitle;
- (void)clearUserEditAudioInfo;
- (id)deselectMusicSignal;
- (id)didFinishAdvanceEditSignal;
- (id)didExitAdvanceEditSignal;
- (id)didCancelAdvanceEditSignal;
- (void)clearAudioExceptBGM:(BOOL)arg0;
- (void)setAiClipManager:(id)arg0;
- (void)cancelAllAdvanceEditing;
- (BOOL)hadChangeEditData;
- (void)sendDeselectMusicSignalIfNeed;
- (void)sendDidExitAdvanceEditSignal;
- (void)saveCurrentStage;
- (BOOL)isFromShareToStory;
- (BOOL)shouldShowAudioTrackView;
- (void)backupVideoData:(id)arg0;
- (void)AdjustMusicLoopIfNeed;
- (BOOL)hasChangedDuration;
- (void)sendDidFinishAdvanceEditSignal;
- (void)saveVideoClipInfoWithCompletion:(id /* block */)arg0;
- (void)resetRedoUndo:(id /* block */)arg0;
- (void)updateFragmentInfoForRecordAssetsIfNeed;
- (void)p_checkAndUpdateSourceAssetArray;
- (id)editingNLEModel;
- (void)p_removeUserEditAudio:(id)arg0;
- (id)aiClipManager;
- (void)p_handleAIVideoClipGenerateFailed:(id)arg0;
- (id)editingNLE;
- (void)p_restoeResourcesFromVideoData:(id)arg0 toVideoData:(id)arg1;
- (void)p_updateBgmWithVideoData:(id)arg0;
- (void)p_updateBGMTrackInfoForNewBeatEditVideoData:(id)arg0 bgmName:(id)arg1;
- (void)updateRotateForAIVideoData:(id)arg0;
- (void)p_transformRotationInfo:(id)arg0;
- (void)updateVideoData:(id)arg0 isBrandNewAiData:(BOOL)arg1 forceUPdateUI:(BOOL)arg2;
- (void)p_recoverReversedFile:(id)arg0;
- (void)p_trimBGMDuration:(id)arg0;
- (void)generateBeatPoints:(id)arg0;
- (void)p_triggerBeatEditModeChangedSignal;
- (void)p_resetAudioAndClipInfoOfClippedVideoWithVideoData:(id)arg0 withBGM:(BOOL)arg1;
- (void)p_resetVideoClipRangeOfMainTrack:(id)arg0;
- (void)p_cancelIntelligentAIClipVideoGeneration;
- (void)copyClipInfoFromVideoData:(id)arg0 toVideoData:(id)arg1 withBGM:(BOOL)arg2;
- (id)assetsViewModel;
- (id)beatEditModeChangedSubject;
- (id)reversedResource;
- (void)p_showAIClipProgressView;
- (void)p_dismissProgressView;
- (void)p_showResultToast;
- (BOOL)hasBeatPointsInfo:(id)arg0;
- (id)dataSyncer;
- (id)refreshVolumeViewSubject;
- (id)didFinishAdanceEditSubject;
- (id)didExitAdanceEditSubject;
- (id)deselectMusicSubject;
- (void)p_updateSourceAssetArrayIfNeed;
- (void)setOriginalVideoData:(id)arg0;
- (void)setEditingVideoData:(id)arg0;
- (void)p_backupPlayer;
- (void)p_restoreBGMNameFromPublishModel:(id)arg0;
- (void)p_backupRepoInfo:(id)arg0;
- (void)p_prepareVideoDataForClip:(id)arg0;
- (void)p_saveBeatPointIfNeed:(id)arg0;
- (void)p_storeUnusedTracksForModel:(id)arg0;
- (void)p_removeConflictData:(id)arg0;
- (void)p_saveFirstEnterSingleType:(id)arg0;
- (BOOL)backupVideoMuted;
- (void)commitAndDone:(id /* block */)arg0;
- (id)assetModelWithAsset:(id)arg0 fragmentInfo:(id)arg1;
- (void)p_restoreBGMInfoOfTrack:(id)arg0 bgmName:(id)arg1 musicId:(id)arg2;
- (void)p_changeSlotRotation:(id)arg0 inVideo:(id)arg1 rotationNum:(id)arg2;
- (void)restorePlayer;
- (unsigned long long)backupVideoClipMode;
- (long long)backupTotalStickerSavePhotos;
- (id)backupBgmAsset;
- (id)backupBgm;
- (void)setWasAutoRepeatPlay:(BOOL)arg0;
- (BOOL)wasAutoRepeatPlay;
- (void)validTimeRange;
- (void)saveOriginVolumeRatio;
- (BOOL)hasReshoot;
- (BOOL)videoDataHaveEdits;
- (void)saveReshootDataWithCompletion:(id /* block */)arg0;
- (double)videoRateForAssetModel:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })scaleTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 scale:(double)arg1;
- (double)p_volumeForSlot:(id)arg0;
- (BOOL)CMTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 isEqualTo:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (BOOL)CMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 isEqualTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (void)trackEventAddMaterialPicture:(long long)arg0 Video:(long long)arg1;
- (void)setRecordSourceAsset:(id)arg0;
- (void)replenishBgmIfNeed;
- (void)trackEventAddVideoClipDuration:(double)arg0;
- (void)setCurrentAssetModel:(id)arg0;
- (void)setHasReshoot:(BOOL)arg0;
- (void)replaceAssetModelsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 withAssetModels:(id)arg1 andVideoData:(id)arg2;
- (void)acc_replaceVideoAssetsWithTransitionInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg0 withAssets:(id)arg1 fromVideoData:(id)arg2;
- (id)restoreSourceAssetArrayFromVideoData:(id)arg0;
- (void)setBackupVideoClipMode:(unsigned long long)arg0;
- (void)setBackupTotalStickerSavePhotos:(long long)arg0;
- (void)setBackupBgmAsset:(id)arg0;
- (void)setBackupBgm:(id)arg0;
- (void)setBackupVideoMuted:(BOOL)arg0;
- (id)recordSourceAsset;
- (void)sendRefreshVolumeViewSignalIfNeed;
- (void)reloadVideoData:(id)arg0 updateType:(long long)arg1;
- (id)bgmAssetInVideo:(id)arg0 withAudio:(id)arg1;
- (BOOL)p_checkBGMExist;
- (void)setDataSyncer:(id)arg0;
- (BOOL)isCurrentAssetModelReshooted;
- (void)setIsCurrentAssetModelReshooted:(BOOL)arg0;
- (void)setIsCliping:(BOOL)arg0;
- (void)setDeselectMusicSubject:(id)arg0;
- (void)setBeatEditModeChangedSubject:(id)arg0;
- (void)setRefreshVolumeViewSubject:(id)arg0;
- (void)setDidFinishAdanceEditSubject:(id)arg0;
- (void)setDidExitAdanceEditSubject:(id)arg0;
- (void)setReversedResource:(id)arg0;
- (void)setAssetsViewModel:(id)arg0;
- (void)setDidCancelAdvanceEditSignal:(id)arg0;
- (void).cxx_destruct;
- (long long)currentIndex;
- (void)setCurrentIndex:(long long)arg0;
- (id)progressView;
- (void)setProgressView:(id)arg0;
- (id)initWithServiceProvider:(id)arg0;
- (void)dealloc;

@end
