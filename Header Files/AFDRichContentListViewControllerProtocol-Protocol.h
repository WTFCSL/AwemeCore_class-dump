//
//     Generated by private class-dump
//

@class UIImageView, UICollectionView, AWEBaseListViewModel;
@protocol AWEAwemeDisplayViewController, AFDRichContentPageContextProtocol, AFDRichContentListViewModelProtocol, AWEAwemeBizPlayVideoProtocol, AWEAwemePlayVideoTrackProtocol;

@protocol AFDRichContentListViewControllerProtocol <NSObject>

@property (nonatomic, readonly) id<AFDRichContentPageContextProtocol> contentPageContext;
@property (nonatomic, readonly) AWEBaseListViewModel<AFDRichContentListViewModelProtocol> *listVM;
@property (nonatomic, readonly) id<AWEAwemeBizPlayVideoProtocol, AWEAwemeDisplayViewController, AWEAwemePlayVideoTrackProtocol> currentVideoController;
@property (nonatomic, readonly) UIImageView *currentImageView;
@property (nonatomic, readonly) BOOL shouldAlbumResponseToPinch;
@property (nonatomic) BOOL pauseBySingleClick;
@property (nonatomic) BOOL isInLandscapeMode;
@property (nonatomic, readonly) UICollectionView *awe_baseCollectionView;

- (id)awe_baseCollectionView;
- (void)pauseWithAnimation;
- (void)playWithAnimation;
- (BOOL)holdStop;
- (void)setPureMode:(BOOL)arg0;
- (void)setProgressControllerDelegate:(id)arg0;
- (void)buildInteractionControllerIfNeeded:(id)arg0;
- (BOOL)edgePan:(id)arg0;
- (BOOL)isPlayingFirstStory;
- (BOOL)isContentLoading;
- (BOOL)shouldHandleSingleClick;
- (void)handleSingleClick;
- (id)currentAwemeModel;
- (void)rotateConfigAfterQuitFromLandscapeFeed:(id)arg0;
- (void)rotateConfigAfterQuitFromLandscapeFeed:(id)arg0;
- (void)setHasCovered:(BOOL)arg0;
- (double)currentLoadDuration;
- (void)setCustomProgressDelegate:(id)arg0;
- (void)configBeforEnterToLandscapeFeed:(BOOL)arg0;
- (void)configBeforEnterToLandscapeFeed:(BOOL)arg0;
- (void)configBeforEnterToLandscapeFeed;
- (void)configAfterQuitFromLandscapeFeed:(id)arg0;
- (void)configAfterQuitFromLandscapeFeed:(id)arg0;
- (struct CGSize { double x0; double x1; })getImageViewSizeWithMaxWHRatio;
- (double)getImageContentTopInset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getTemporaryImageViewRectWithMinWHRatio;
- (void)needUpdateImageContentViewLayoutWithAnthorPostion;
- (void)setCurrentImageZoomWithInfo:(struct AFDAlbumImageZoomInfo { double x0; struct CGPoint { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)setCurrentImageZoomWithInfo:(struct AFDAlbumImageZoomInfo { double x0; struct CGPoint { double x0; double x1; } x1; })arg0 animated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)addTailEntranceGuideView:(id)arg0;
- (void)updateTailEntranceGuideViewConstraints:(double)arg0;
- (void)updatePlayerIfNeeded;
- (BOOL)shouldResponseToTapPoint:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)shouldResponseToTapPoint:(struct CGPoint { double x0; double x1; })arg0;
- (id)indexProgressForVideo;
- (BOOL)pauseBySingleClick;
- (void)setPauseBySingleClick:(BOOL)arg0;
- (id)internalLogExtraDict;
- (id)getPlayModeWithAutoPlayMode;
- (id)repostModel;
- (id)repostFromModel;
- (id)playerExtraTrackInfo;
- (id)currentVideoController;
- (BOOL)shouldAlbumResponseToPinch;
- (id)modernTransitionContext;
- (id)contentPageContext;
- (void)playOrPauseTimer:(BOOL)arg0;
- (id)listVM;
- (BOOL)isInLandscapeMode;
- (void)viewWillDisplay;
- (void)showRichAwemeFullPageWithInsertIds:(id)arg0 highlightID:(id)arg1 logExtra:(id)arg2 currentIndex:(long long)arg3 commentExtraParams:(id)arg4 priorityType:(id)arg5;
- (void)showRichAwemeFullPageWithInsertIds:(id)arg0 highlightID:(id)arg1 logExtra:(id)arg2 currentIndex:(long long)arg3 commentExtraParams:(id)arg4 priorityType:(id)arg5;
- (void)showFullPageFeedWithPriorityType:(id)arg0 currentIndex:(long long)arg1 logExtra:(id)arg2;
- (void)showFullPageFeedWithPriorityType:(id)arg0 currentIndex:(long long)arg1 logExtra:(id)arg2;
- (void)updateInteractionViewFrame;
- (void)setIsInLandscapeMode:(BOOL)arg0;
- (long long)progressBarThumbnailCount;
- (void)showADRichAwemeFullPageWithCurrentIndex:(long long)arg0;
- (void)showADRichAwemeFullPageWithCurrentIndex:(long long)arg0;
- (void)prepareForDisplay;
- (BOOL)stop;
- (id)itemsCount;
- (id)currentImageView;
- (BOOL)isPlaying;
- (id)selectedItemIndex;
- (BOOL)play;
- (BOOL)pause;
- (void)reset;
- (void)handlePinchGesture:(id)arg0;
- (void)willDisplay;
- (BOOL)userScrolled;

@end
