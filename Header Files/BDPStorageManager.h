//
//     Generated by private class-dump
//

@class FMDatabaseQueue, BDPDBStorage;

@interface BDPStorageManager : NSObject {
    BOOL _oldPkgTableExists;
    BOOL _usageTableExist;
    BOOL _inuseTableExist;
    BOOL _updateTableExist;
    BOOL _extensionTableExist;
    BOOL _preloadInfoTableExist;
    BOOL _preloadRecordTableExist;
    FMDatabaseQueue *_oldDBQueue;
    FMDatabaseQueue *_dbQueue;
    BDPDBStorage *_storage;
}

@property (retain) FMDatabaseQueue *oldDBQueue;
@property (retain) FMDatabaseQueue *dbQueue;
@property (retain) BDPDBStorage *storage;
@property BOOL oldPkgTableExists;
@property BOOL usageTableExist;
@property BOOL inuseTableExist;
@property BOOL updateTableExist;
@property BOOL extensionTableExist;
@property BOOL preloadInfoTableExist;
@property BOOL preloadRecordTableExist;

+ (id)appModelFromData:(id)arg0;
+ (id)modelDataFromAppModel:(id)arg0;
+ (id)appModelExtensionFromData:(id)arg0;
+ (id)modelExtensionDataFromAppModel:(id)arg0;
+ (id)sharedManager;
+ (long long)currentTimestamp;
+ (void)clearSharedManager;

- (id)queryPkgReadTypeOfAppId:(id)arg0 versionMark:(id)arg1 name:(id)arg2;
- (void)deleteDebugAppModelOfAppId:(id)arg0;
- (void)setInuseAppModel:(id)arg0 forAppID:(id)arg1;
- (void)setUpdateAppModel:(id)arg0 forAppID:(id)arg1;
- (void)deletePkgInfoOfAppId:(id)arg0 versionMark:(id)arg1;
- (void)deletePkgInfosOfAppId:(id)arg0;
- (BOOL)oldPkgTableExists;
- (id)queryOldPkgNamesWithAppId:(id)arg0;
- (void)deleteOldPkgNameWithAppId:(id)arg0;
- (id)installedAppIds;
- (id)getExtensionAppModelForAppID:(id)arg0;
- (void)setExtensionAppModel:(id)arg0 forAppID:(id)arg1;
- (long long)getLastLaunchTimeForAppID:(id)arg0;
- (id)getUpdateAppModelsForAppIDs:(id)arg0;
- (id)getInuseAppModelsForAppIDs:(id)arg0;
- (void)removeAllMetaAndPkgInfoWithAppId:(id)arg0;
- (double)queryRecentAccessTimeOfAppId:(id)arg0;
- (void)removeAllMetaModelForAppId:(id)arg0;
- (id)queryDebugAppModelOfAppId:(id)arg0;
- (void)updateDebugAppModel:(id)arg0;
- (id)appIdsFromUsageInfoOfTypes:(id)arg0 limit:(unsigned long long)arg1;
- (BOOL)hasInUseAppModelWithId:(id)arg0;
- (id)allInuseAppIDs;
- (void)setBatchInuseAppModels:(id)arg0;
- (BOOL)isExistedOldVersionDB;
- (void)removeOldVersionDB;
- (void)setLastLaunchTime:(long long)arg0 forAppID:(id)arg1 type:(long long)arg2 limit:(unsigned long long)arg3;
- (void)clearAllTable;
- (id)appIdsOfPkgReadType:(unsigned long long)arg0 withCount:(unsigned long long)arg1;
- (void)setOldPkgTableExists:(BOOL)arg0;
- (long long)getUsageAppCount;
- (void)clearUsageInfoTable;
- (id)allInuseAppModel;
- (void)clearInuseInfoTable;
- (id)allUpdateAppModel;
- (void)clearUpdateInfoTable;
- (id)allExtensionAppModel;
- (void)clearExtensionInfoTable;
- (void)clearDebugAppTable;
- (long long)queryCountOfPkgInfoWithAppId:(id)arg0 versionMark:(id)arg1 readType:(unsigned long long)arg2;
- (void)deletePkgInfoOfAppId:(id)arg0 versionMark:(id)arg1 name:(id)arg2;
- (void)clearPkgInfoTable;
- (id)oldDBQueue;
- (void)setOldDBQueue:(id)arg0;
- (id)appIdsOfPkgBeyondLimit:(unsigned long long)arg0 withReadType:(unsigned long long)arg1 appType:(BOOL)arg2;
- (id)appIdsOfPkgBeyondLimit:(unsigned long long)arg0 withExcludedReadTypes:(id)arg1 appType:(BOOL)arg2;
- (void)removeOldAppUsageTableIfNeed;
- (void)deleteRecordInPreloadRecordWithAppID:(id)arg0;
- (id)recordInPreloadRecordWithAppID:(id)arg0;
- (void)replaceIntoPreloadRecord:(id)arg0;
- (id)allRecordInPreloadRecord;
- (void)deleteAllRecordInPreloadRecord;
- (long long)getLatestLaunchTimeOfTypes:(id)arg0;
- (double)queryRecentUseTimeOfAppId:(id)arg0;
- (id)appIdsOfPkgWithAppType:(BOOL)arg0;
- (void)replaceInToPkgInfoWithAppId:(id)arg0 name:(id)arg1 versionMark:(id)arg2 readType:(unsigned long long)arg3 appType:(BOOL)arg4;
- (void)updatePkgInfoAcessTimeWithAppId:(id)arg0 versionMark:(id)arg1 name:(id)arg2 readType:(unsigned long long)arg3 appType:(BOOL)arg4;
- (void)excuteInDatabase:(id /* block */)arg0;
- (BOOL)usageTableExist;
- (void)excuteInTransaction:(id /* block */)arg0;
- (BOOL)inuseTableExist;
- (BOOL)updateTableExist;
- (BOOL)extensionTableExist;
- (BOOL)preloadRecordTableExist;
- (void)closeOldDBQueue;
- (void)setUsageTableExist:(BOOL)arg0;
- (void)setInuseTableExist:(BOOL)arg0;
- (void)setUpdateTableExist:(BOOL)arg0;
- (void)setExtensionTableExist:(BOOL)arg0;
- (void)setPreloadInfoTableExist:(BOOL)arg0;
- (void)setPreloadRecordTableExist:(BOOL)arg0;
- (BOOL)setKVStorageWithObject:(id)arg0 forKey:(id)arg1;
- (id)getKVStorageObjectForKey:(id)arg0;
- (BOOL)removeKVStorageObjectForKey:(id)arg0;
- (BOOL)preloadInfoTableExist;
- (void)setStorage:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)storage;
- (void)dealloc;
- (id)dbQueue;
- (void)setDbQueue:(id)arg0;

@end
