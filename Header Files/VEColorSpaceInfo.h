//
//     Generated by private class-dump
//

@class NSData;

@interface VEColorSpaceInfo : NSObject <NSCopying> {
    BOOL _isFullRange;
    long long _colorPrimaries;
    long long _transferFunction;
    long long _ycbcrMatrix;
    NSData *_masteringDisplayColorVolumeData;
    NSData *_contentLightLevelInfoData;
    NSData *_ambientViewingEnvironmentData;
}

@property (nonatomic) long long colorPrimaries;
@property (nonatomic) long long transferFunction;
@property (nonatomic) long long ycbcrMatrix;
@property (nonatomic) BOOL isFullRange;
@property (retain, nonatomic) NSData *masteringDisplayColorVolumeData;
@property (retain, nonatomic) NSData *contentLightLevelInfoData;
@property (retain, nonatomic) NSData *ambientViewingEnvironmentData;

+ (BOOL)isExtendColorSpaceFromAssets:(id)arg0;
+ (id)determineMainColorInfoForVideoAssets:(id)arg0 colorInfoCacheDict:(id)arg1 photoInfoAssets:(id)arg2;
+ (int)fetchBitsPerComponentFromTracks:(id)arg0;
+ (id)fetchImageColorSpaceSuffix:(struct __CVBuffer { } *)arg0;
+ (int)selectColorSpaceForEffect:(id)arg0;
+ (unsigned int)pixelFormatFromVideoTracks:(id)arg0 transPixelFormat:(unsigned long long)arg1 isEncode:(BOOL)arg2;
+ (unsigned int)pixelFormatFromTransferFunction:(long long)arg0 transPixelFormat:(unsigned long long)arg1 isEncode:(BOOL)arg2;
+ (int)fetchBitsPerComponentFromFormat:(struct opaqueCMFormatDescription { } *)arg0;
+ (BOOL)isExtendColorSpace:(struct opaqueCMFormatDescription { } *)arg0;
+ (BOOL)isSDR2020ColorSpace:(struct opaqueCMFormatDescription { } *)arg0;
+ (void *)formatDescriptionColorPrimaries:(long long)arg0;
+ (void *)formatDescriptionTransferFunction:(long long)arg0;
+ (void)determineColorspaceImage:(id)arg0 asset:(id)arg1 mainColorSpaceInfoCache:(id)arg2 mainColorSpaceInfo:(id)arg3;
+ (BOOL)isHDRColorSpace:(struct opaqueCMFormatDescription { } *)arg0;
+ (BOOL)isHDRPQSpecialColorSpace:(struct opaqueCMFormatDescription { } *)arg0;
+ (BOOL)isHDRPixelBuffer:(struct __CVBuffer { } *)arg0;
+ (BOOL)resetPixelBufferHaveAttachments:(struct __CVBuffer { } *)arg0 targetPixelBuffer:(struct __CVBuffer { } *)arg1;
+ (id)fetchImageColorSpaceSuffixWithColorPrimaries:(long long)arg0 transferFunction:(long long)arg1;
+ (id)fetchImagePathColorSuffix:(id)arg0;
+ (id)determineMainColorInfoForVideoFiles:(id)arg0 colorInfoCacheDict:(id)arg1 photoInfoAssets:(id)arg2;
+ (BOOL)isSDR2020ColorSpaceFromAssets:(id)arg0;
+ (unsigned int)pixelFormatFromVideoTracks:(id)arg0 transPixelFormat:(unsigned long long)arg1;
+ (BOOL)isP3PixelBuffer:(struct __CVBuffer { } *)arg0;

- (void)setYcbcrMatrix:(long long)arg0;
- (void)copyValue:(id)arg0;
- (void)setIsFullRange:(BOOL)arg0;
- (const void *)formatDescriptionColorPrimaries;
- (const void *)formatDescriptionTransferFunction;
- (const void *)formatDescriptionYCbCrMatrix;
- (void)setMasteringDisplayColorVolumeData:(id)arg0;
- (void)setContentLightLevelInfoData:(id)arg0;
- (void)setAmbientViewingEnvironmentData:(id)arg0;
- (id)avColorPrimaries;
- (id)avTransferFunction;
- (id)avYCbCrMatrix;
- (id)ambientViewingEnvironmentData;
- (id)masteringDisplayColorVolumeData;
- (id)contentLightLevelInfoData;
- (id)init;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (long long)colorPrimaries;
- (void)setColorPrimaries:(long long)arg0;
- (long long)transferFunction;
- (void)setTransferFunction:(long long)arg0;
- (long long)ycbcrMatrix;
- (BOOL)isFullRange;

@end
