//
//     Generated by private class-dump
//

@class NSString, HTSGLContext, HTSGLFramebuffer, NSMutableArray;
@protocol HTSGLInput;

@interface HTSFilterInterface : NSObject {
    HTSGLFramebuffer *_outputFramebuffer;
    HTSGLFramebuffer *_secondaryOutputFramebuffer;
    NSMutableArray *_targets;
    NSMutableArray *_targetTextureIndices;
    struct CGSize { double width; double height; } _inputTextureSize;
    struct CGSize { double width; double height; } _cachedMaximumOutputSize;
    struct CGSize { double width; double height; } _forcedMaximumSize;
    BOOL _overrideInputSize;
    BOOL _allTargetsWantMonochromeData;
    BOOL _usingNextFrameForImageCapture;
    BOOL _shouldSmoothlyScaleOutput;
    BOOL _shouldIgnoreUpdatesToThisTarget;
    BOOL _enabled;
    BOOL _mimoMode;
    id<HTSGLInput> _targetToIgnoreForUpdates;
    id /* block */ _frameProcessingCompletionBlock;
    unsigned long long _originVideoRotation;
    HTSGLContext *_context;
    long long _mediaType;
    NSString *_filterID;
    long long _videoTrackId;
    struct CGSize { double width; double height; } _originVideoNaturalSize;
    struct CGSize { double width; double height; } _maxFrameSize;
    struct CGSize { double width; double height; } _secondaryOutputSize;
}

@property (nonatomic) unsigned long long originVideoRotation;
@property (nonatomic) struct CGSize { double width; double height; } originVideoNaturalSize;
@property (nonatomic) struct CGSize { double width; double height; } maxFrameSize;
@property (nonatomic) BOOL mimoMode;
@property (nonatomic) struct CGSize { double width; double height; } secondaryOutputSize;
@property (retain, nonatomic) HTSGLContext *context;
@property (nonatomic) long long mediaType;
@property (nonatomic) BOOL shouldSmoothlyScaleOutput;
@property (nonatomic) BOOL shouldIgnoreUpdatesToThisTarget;
@property (nonatomic) id<HTSGLInput> targetToIgnoreForUpdates;
@property (copy, nonatomic) id /* block */ frameProcessingCompletionBlock;
@property (nonatomic) BOOL enabled;
@property (retain, nonatomic) NSString *filterID;
@property (nonatomic) long long videoTrackId;

- (void)setFilterID:(id)arg0;
- (void)removeAllTargets;
- (id)framebufferForOutput;
- (void)setInputFramebufferForTarget:(id)arg0 atIndex:(long long)arg1;
- (void)addTarget:(id)arg0 atTextureLocation:(long long)arg1;
- (id)imageFromCurrentFramebufferWithOrientation:(long long)arg0;
- (struct CGImage { } *)newCGImageFromCurrentlyProcessedOutput;
- (struct CGImage { } *)newCGImageByFilteringCGImage:(struct CGImage { } *)arg0;
- (void)notifyTargetsAboutNewOutputTexture;
- (void)forceProcessingAtSize:(struct CGSize { double x0; double x1; })arg0;
- (void)forceProcessingAtSizeRespectingAspectRatio:(struct CGSize { double x0; double x1; })arg0;
- (void)useNextFrameForImageCapture;
- (BOOL)providesMonochromeOutput;
- (id)imageFromCurrentFramebuffer;
- (id)imageByFilteringImage:(id)arg0;
- (struct CGImage { } *)newCGImageByFilteringImage:(id)arg0;
- (BOOL)shouldSmoothlyScaleOutput;
- (void)setShouldSmoothlyScaleOutput:(BOOL)arg0;
- (void)setShouldIgnoreUpdatesToThisTarget:(BOOL)arg0;
- (void)setTargetToIgnoreForUpdates:(id)arg0;
- (void)setFrameProcessingCompletionBlock:(id /* block */)arg0;
- (id /* block */)frameProcessingCompletionBlock;
- (id)targetToIgnoreForUpdates;
- (void)removeOutputFramebuffer;
- (BOOL)shouldIgnoreUpdatesToThisTarget;
- (struct CGImage { } *)newCGImageFromCurrentlyProcessedOutput:(struct __CFString { } *)arg0;
- (unsigned long long)originVideoRotation;
- (struct CGSize { double x0; double x1; })originVideoNaturalSize;
- (id)imageFromCurrentFramebufferWithOrientation:(long long)arg0 colorSpaceName:(struct __CFString { } *)arg1;
- (void)setVideoTrackId:(long long)arg0;
- (void)setOriginVideoRotation:(unsigned long long)arg0;
- (void)setMaxFrameSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setOriginVideoNaturalSize:(struct CGSize { double x0; double x1; })arg0;
- (long long)videoTrackId;
- (BOOL)mimoMode;
- (void)setMimoMode:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })secondaryOutputSize;
- (void)setSecondaryOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (id)initWithContext:(id)arg0;
- (void)setMediaType:(long long)arg0;
- (BOOL)enabled;
- (id)targets;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (long long)mediaType;
- (void)addTarget:(id)arg0;
- (id)context;
- (void)setEnabled:(BOOL)arg0;
- (void)dealloc;
- (id)filterID;
- (void)removeTarget:(id)arg0;
- (struct CGSize { double x0; double x1; })maxFrameSize;

@end
