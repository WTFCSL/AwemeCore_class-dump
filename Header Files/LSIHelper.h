//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface LSIHelper : NSObject {
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _lock;
    long long _appStatus;
    NSMutableDictionary *_listenerList;
    NSMutableDictionary *_listenerProxyList;
    NSMutableDictionary *_linkEventListenerList;
    NSMutableDictionary *_linkEventListenerProxyList;
    NSObject<OS_dispatch_queue> *_ihelperQueue;
}

@property (nonatomic) long long appStatus;
@property (retain, nonatomic) NSMutableDictionary *listenerList;
@property (retain, nonatomic) NSMutableDictionary *listenerProxyList;
@property (retain, nonatomic) NSMutableDictionary *linkEventListenerList;
@property (retain, nonatomic) NSMutableDictionary *linkEventListenerProxyList;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *ihelperQueue;

+ (struct __CVBuffer { } *)generateCVPixelBufferWithFmt:(unsigned int)arg0 yBuffer:(void *)arg1 uBuffer:(void *)arg2 vBuffer:(void *)arg3 yStride:(int)arg4 uStride:(int)arg5 vStride:(int)arg6 width:(int)arg7 height:(int)arg8;
+ (void)swizzleForClass:(Class)arg0 oriSEL:(SEL)arg1 fromClass:(Class)arg2 newSEL:(SEL)arg3;
+ (BOOL)shouldDropLiveCoreCameraOutput;
+ (void)registerAppStatusNofity:(id)arg0 withCallback:(id /* block */)arg1;
+ (void)registerLinkEventNofity:(id)arg0 withCallback:(id /* block */)arg1;
+ (BOOL)closeEncode;
+ (BOOL)isBufferListInvalid:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0;
+ (void)swizzleForClass:(Class)arg0 oriSEL:(SEL)arg1 newSEL:(SEL)arg2;
+ (struct __CVBuffer { } *)imageBufferFromImage:(id)arg0;
+ (void)setShouldDropLiveCoreCameraOutput:(id)arg0;
+ (void)setCloseCapture:(id)arg0;
+ (void)setClosePreview:(id)arg0;
+ (void)setCloseEffect:(id)arg0;
+ (BOOL)closeEffect;
+ (void)setCloseEncode:(id)arg0;
+ (void)setClosePushStream:(id)arg0;
+ (void)cleanTestStatus;
+ (struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)createBufferListWith:(unsigned int)arg0 size:(unsigned int)arg1 channel:(unsigned int)arg2;
+ (void)copyBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 src:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg1;
+ (void)destroyBufferList:(struct AudioBufferList **)arg0;
+ (id)setPriorityForUrl:(id)arg0;
+ (BOOL)closePushStream;
+ (id)addQueryForURL:(id)arg0 withName:(id)arg1 value:(id)arg2;
+ (BOOL)closeCapture;
+ (BOOL)closePreview;
+ (id)sharedInstance;

- (void)registerBecomeActiveNotify;
- (void)registerResignActiveNotify;
- (void)registerEnterForegroundNotify;
- (void)registerEnterBackgroundNotify;
- (void)setAppStatus:(long long)arg0;
- (long long)appStatus;
- (void)notifyListenerNewStatus:(long long)arg0;
- (id)listenerList;
- (void)setListenerList:(id)arg0;
- (id)listenerProxyList;
- (void)setListenerProxyList:(id)arg0;
- (id)ihelperQueue;
- (void)setIhelperQueue:(id)arg0;
- (void)registerAppStatusNofity:(id)arg0 withCallback:(id /* block */)arg1;
- (void)registerLinkEventNofity:(id)arg0 withCallback:(id /* block */)arg1;
- (id)linkEventListenerList;
- (id)linkEventListenerProxyList;
- (void)notifyListenerNewEvent:(long long)arg0 value:(id)arg1;
- (void)setLinkEventListenerList:(id)arg0;
- (void)setLinkEventListenerProxyList:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id).cxx_construct;

@end
