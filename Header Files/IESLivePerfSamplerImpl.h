//
//     Generated by private class-dump
//

@class IESLiveDropFpsRecordPool, IESLiveClientDiagnose, IESLivePrefSampleV2, IESLiveANRMonitor, NSDictionary, IESLivePerfMonitor, RACSubject, NSMutableArray, RACDisposable, IESLivePerfSampleContext, HMDNetworkSpeedData, NSString, HMDNetworkSpeedManager, IESLiveBatteryMonitor, RACQueueScheduler;
@protocol IESLiveNetworkQualityInfoService, IESLivePerfMonitorStreamProvider, IESLiveStreamPlayerSpeedMonitorService, IESLiveRecoder, IESLiveTracker, IESLiveSettings, IESLiveMonitor;

@interface IESLivePerfSamplerImpl : NSObject <IESLiveComponentLifeCycleNotifier, IESLiveAnchorStableModeListener, IESLivePerfSampler> {
    BOOL _alogEnabled;
    BOOL _anchorDiagnoseEnable;
    BOOL _audienceDiagnoseEnabe;
    BOOL _guideDiagnoseEnabe;
    BOOL _enable_report_v2;
    BOOL _isEnableAnchorBHVMonitor;
    BOOL _enableNewDropFrameMonitor;
    unsigned int _perIndicator;
    unsigned int _gpuSkipTimes;
    unsigned int _currentSkipTimes;
    RACDisposable *_residentDispose;
    IESLivePerfSampleContext *_context;
    id /* block */ _frameDropCallback;
    HMDNetworkSpeedManager *_speedManager;
    id _speedToken;
    HMDNetworkSpeedData *_speedData;
    double _videoGiftStartTime;
    double _effectGiftStartTime;
    double _lynxGiftStartTime;
    double _samplerBeginTime;
    double _videoGiftDuration;
    double _effectGiftDuration;
    double _lynxGiftDuration;
    double _loadPhaseDuringLoadStartTime;
    double _lastSampleTime;
    double _residentInterval;
    double _monitorDelay;
    double _fpsDuration;
    double _minInterval;
    double _startLiveDropInterval;
    NSDictionary *_recentBasePerfRecord;
    NSDictionary *_recentFPSRecord;
    IESLivePerfMonitor *_perfMonitor;
    IESLiveANRMonitor *_anrMonitor;
    IESLiveBatteryMonitor *_batteryMonitor;
    id<IESLiveMonitor> _monitor;
    id<IESLiveRecoder> _recoder;
    RACQueueScheduler *_sampleScheduler;
    id<IESLivePerfMonitorStreamProvider> _perfMonitorStreamProvider;
    id<IESLiveTracker> _tracker;
    RACQueueScheduler *_startLiveDropScheduler;
    RACDisposable *_startLiveDropDisposable;
    double _beginLiveDropTime;
    long long _preVideoStallCount;
    double _preVideoStallDuration;
    IESLiveDropFpsRecordPool *_intervalDropRecordPool;
    id /* block */ _fpsCallback;
    IESLiveClientDiagnose *_clientDiagnose;
    double _diagnoseInterval;
    RACDisposable *_diagnoseDispose;
    RACDisposable *_anchorDispose;
    IESLivePrefSampleV2 *_prefSampleV2;
    NSMutableArray *_enterRoomSamples;
    RACSubject *_anchorHeatingSubject;
    unsigned long long _preAnchorHeatingLevel;
    double _anchorHeatingTime;
    id<IESLiveSettings> _settings;
    id<IESLiveStreamPlayerSpeedMonitorService> _streamPlayerSpeedMonitorService;
    id<IESLiveNetworkQualityInfoService> _networkQualityInfoService;
}

@property (retain, nonatomic) RACDisposable *residentDispose;
@property (retain, nonatomic) IESLivePerfSampleContext *context;
@property (copy, nonatomic) id /* block */ frameDropCallback;
@property (retain, nonatomic) HMDNetworkSpeedManager *speedManager;
@property (retain, nonatomic) id speedToken;
@property (retain, nonatomic) HMDNetworkSpeedData *speedData;
@property (nonatomic) double videoGiftStartTime;
@property (nonatomic) double effectGiftStartTime;
@property (nonatomic) double lynxGiftStartTime;
@property (nonatomic) double samplerBeginTime;
@property (nonatomic) double videoGiftDuration;
@property (nonatomic) double effectGiftDuration;
@property (nonatomic) double lynxGiftDuration;
@property (nonatomic) double loadPhaseDuringLoadStartTime;
@property double lastSampleTime;
@property (nonatomic) BOOL alogEnabled;
@property (nonatomic) double residentInterval;
@property (nonatomic) double monitorDelay;
@property (nonatomic) double fpsDuration;
@property (nonatomic) double minInterval;
@property (nonatomic) double startLiveDropInterval;
@property (nonatomic) unsigned int perIndicator;
@property (nonatomic) unsigned int gpuSkipTimes;
@property unsigned int currentSkipTimes;
@property (copy) NSDictionary *recentBasePerfRecord;
@property (copy) NSDictionary *recentFPSRecord;
@property (retain, nonatomic) IESLivePerfMonitor *perfMonitor;
@property (retain, nonatomic) IESLiveANRMonitor *anrMonitor;
@property (retain, nonatomic) IESLiveBatteryMonitor *batteryMonitor;
@property (retain, nonatomic) id<IESLiveMonitor> monitor;
@property (retain, nonatomic) id<IESLiveRecoder> recoder;
@property (retain, nonatomic) RACQueueScheduler *sampleScheduler;
@property (weak, nonatomic) id<IESLivePerfMonitorStreamProvider> perfMonitorStreamProvider;
@property (weak, nonatomic) id<IESLiveTracker> tracker;
@property (retain, nonatomic) RACQueueScheduler *startLiveDropScheduler;
@property (retain, nonatomic) RACDisposable *startLiveDropDisposable;
@property (nonatomic) double beginLiveDropTime;
@property (nonatomic) long long preVideoStallCount;
@property (nonatomic) double preVideoStallDuration;
@property (retain, nonatomic) IESLiveDropFpsRecordPool *intervalDropRecordPool;
@property (copy, nonatomic) id /* block */ fpsCallback;
@property (retain, nonatomic) IESLiveClientDiagnose *clientDiagnose;
@property (nonatomic) BOOL anchorDiagnoseEnable;
@property (nonatomic) BOOL audienceDiagnoseEnabe;
@property (nonatomic) BOOL guideDiagnoseEnabe;
@property (nonatomic) double diagnoseInterval;
@property (retain, nonatomic) RACDisposable *diagnoseDispose;
@property (retain, nonatomic) RACDisposable *anchorDispose;
@property (retain, nonatomic) IESLivePrefSampleV2 *prefSampleV2;
@property (nonatomic) BOOL enable_report_v2;
@property (retain) NSMutableArray *enterRoomSamples;
@property (retain, nonatomic) RACSubject *anchorHeatingSubject;
@property (nonatomic) unsigned long long preAnchorHeatingLevel;
@property (nonatomic) double anchorHeatingTime;
@property (retain, nonatomic) id<IESLiveSettings> settings;
@property (retain, nonatomic) id<IESLiveStreamPlayerSpeedMonitorService> streamPlayerSpeedMonitorService;
@property (retain, nonatomic) id<IESLiveNetworkQualityInfoService> networkQualityInfoService;
@property (nonatomic) BOOL isEnableAnchorBHVMonitor;
@property (nonatomic) BOOL enableNewDropFrameMonitor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (id)speedManager;
- (void)setSpeedManager:(id)arg0;
- (id)batteryMonitor;
- (void)setBatteryMonitor:(id)arg0;
- (void)setFpsCallback:(id /* block */)arg0;
- (id /* block */)fpsCallback;
- (void)setPerfMonitor:(id)arg0;
- (void)startShowingVideoGift;
- (void)endShowingVideoGift;
- (void)startShowingEffectGift;
- (void)endShowingEffectGift;
- (void)startShowingLynxGift;
- (void)endShowingLynxGift;
- (id)recentSampleInfo;
- (id)perfWarningSignal;
- (id)anchorHeatingSignal;
- (void)liveAppLogWithType:(unsigned long long)arg0 className:(id)arg1 startTime:(double)arg2 duration:(double)arg3 extra:(id)arg4;
- (void)reportSummaryInfo;
- (void)appendReportSummaryInfo:(id)arg0;
- (void)addMsgInfos:(long long)arg0 msgShowCount:(long long)arg1;
- (void)addMsgRate:(long long)arg0;
- (void)trackPerfEvent:(id)arg0 params:(id)arg1;
- (void)trackAnchorBHVPerformance:(id)arg0;
- (void)reportMonitorFpsAtPrepareForCloseLiveRoom;
- (void)recordEnterRoomPerfSampleWithScene:(id)arg0 extraPara:(id)arg1;
- (void)reportEnterRoomPerfSample;
- (void)openLivePerfSampleWithScene:(unsigned long long)arg0;
- (void)generateCurrentPerfSampleInfo:(id)arg0 completion:(id /* block */)arg1;
- (id)appAvailableMemory;
- (id)getDropRecordInfo;
- (id)clientDiagnose;
- (id)perfMonitor;
- (id /* block */)frameDropCallback;
- (void)setFrameDropCallback:(id /* block */)arg0;
- (void)setMinInterval:(double)arg0;
- (void)setSampleScheduler:(id)arg0;
- (id)sampleScheduler;
- (double)monitorDelay;
- (void)setMonitorDelay:(double)arg0;
- (id)speedData;
- (void)setSpeedData:(id)arg0;
- (id)networkQualityInfoService;
- (void)setNetworkQualityInfoService:(id)arg0;
- (void)onAnchorStableModeCommonStrategyStart;
- (void)onAnchorStableModeCommonStrategyStop;
- (id)recoder;
- (void)setRecoder:(id)arg0;
- (void)openFpsMonitor;
- (void)openDropFpsMonitor;
- (id)anrMonitor;
- (void)setAnrMonitor:(id)arg0;
- (double)videoGiftDuration;
- (double)effectGiftDuration;
- (double)lynxGiftDuration;
- (BOOL)enableNewDropFrameMonitor;
- (id)residentDispose;
- (id)anchorHeatingSubject;
- (id)speedToken;
- (void)reportVideoGiftDuration;
- (void)reportLiveDropFrameInLiveDropInterval;
- (id)prefSampleV2;
- (void)setResidentInterval:(double)arg0;
- (void)setFpsDuration:(double)arg0;
- (void)setAnchorHeatingSubject:(id)arg0;
- (void)setPerIndicator:(unsigned int)arg0;
- (void)setGpuSkipTimes:(unsigned int)arg0;
- (void)setStartLiveDropInterval:(double)arg0;
- (void)setDiagnoseInterval:(double)arg0;
- (void)setStartLiveDropScheduler:(id)arg0;
- (double)residentInterval;
- (BOOL)scheduleSampleAfterDelay:(double)arg0 scene:(unsigned long long)arg1 param:(id)arg2;
- (void)setResidentDispose:(id)arg0;
- (BOOL)diagnoseEnable;
- (double)diagnoseInterval;
- (void)setDiagnoseDispose:(id)arg0;
- (void)setClientDiagnose:(id)arg0;
- (void)setSamplerBeginTime:(double)arg0;
- (double)samplerBeginTime;
- (void)setIsEnableAnchorBHVMonitor:(BOOL)arg0;
- (unsigned int)perIndicator;
- (void)setSpeedToken:(id)arg0;
- (void)setBeginLiveDropTime:(double)arg0;
- (id)startLiveDropScheduler;
- (double)startLiveDropInterval;
- (void)reportStartLiveDropFrameWithDuration:(double)arg0;
- (void)setStartLiveDropDisposable:(id)arg0;
- (void)setPrefSampleV2:(id)arg0;
- (void)setIntervalDropRecordPool:(id)arg0;
- (void)openAnchorHeatingDignose;
- (BOOL)anchorDiagnoseEnable;
- (BOOL)audienceDiagnoseEnabe;
- (BOOL)guideDiagnoseEnabe;
- (unsigned long long)preAnchorHeatingLevel;
- (void)setPreAnchorHeatingLevel:(unsigned long long)arg0;
- (void)setAnchorHeatingTime:(double)arg0;
- (double)anchorHeatingTime;
- (void)setAnchorDispose:(id)arg0;
- (id)intervalDropRecordPool;
- (void)setVideoGiftStartTime:(double)arg0;
- (void)setEffectGiftStartTime:(double)arg0;
- (double)videoGiftStartTime;
- (void)setVideoGiftDuration:(double)arg0;
- (double)effectGiftStartTime;
- (void)setEffectGiftDuration:(double)arg0;
- (void)setLynxGiftStartTime:(double)arg0;
- (double)lynxGiftStartTime;
- (void)setLynxGiftDuration:(double)arg0;
- (id)recentFPSRecord;
- (id)recentBasePerfRecord;
- (id)perfMonitorStreamProvider;
- (id)enterRoomSamples;
- (void)setEnterRoomSamples:(id)arg0;
- (void)samplingCPU:(id)arg0;
- (void)samplingMemory:(id)arg0;
- (id)generateCurrentPerfSampleInfo;
- (id)generatePrefSampleStallInfoWithDropRecordPool:(id)arg0 inTimeInterval:(double)arg1;
- (long long)preVideoStallCount;
- (double)preVideoStallDuration;
- (void)setPreVideoStallCount:(long long)arg0;
- (void)setPreVideoStallDuration:(double)arg0;
- (void)reportPerfWithScene:(unsigned long long)arg0 param:(id)arg1 inTimeInterval:(double)arg2;
- (void)reportPrefSampleInfoWithContext:(id)arg0 fpsInfo:(id)arg1;
- (id)generatePrefSampleInfo;
- (BOOL)enable_report_v2;
- (double)beginLiveDropTime;
- (void)reportFpsPrepareForCloseLiveRoom:(id)arg0 inTimeInterval:(double)arg1;
- (BOOL)isEnableAnchorBHVMonitor;
- (id)p_mapSceneType:(unsigned long long)arg0;
- (id)p_convertStrToTime:(double)arg0;
- (id)streamPlayerSpeedMonitorService;
- (id)addDevicePerformanceInfo:(id)arg0;
- (double)loadPhaseDuringLoadStartTime;
- (void)setLoadPhaseDuringLoadStartTime:(double)arg0;
- (BOOL)alogEnabled;
- (void)setAlogEnabled:(BOOL)arg0;
- (double)fpsDuration;
- (unsigned int)gpuSkipTimes;
- (unsigned int)currentSkipTimes;
- (void)setCurrentSkipTimes:(unsigned int)arg0;
- (void)setRecentBasePerfRecord:(id)arg0;
- (void)setRecentFPSRecord:(id)arg0;
- (void)setPerfMonitorStreamProvider:(id)arg0;
- (id)startLiveDropDisposable;
- (void)setAnchorDiagnoseEnable:(BOOL)arg0;
- (void)setAudienceDiagnoseEnabe:(BOOL)arg0;
- (void)setGuideDiagnoseEnabe:(BOOL)arg0;
- (id)diagnoseDispose;
- (id)anchorDispose;
- (void)setEnable_report_v2:(BOOL)arg0;
- (void)setStreamPlayerSpeedMonitorService:(id)arg0;
- (void)setEnableNewDropFrameMonitor:(BOOL)arg0;
- (id)initWithContext:(id)arg0;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void).cxx_destruct;
- (void)setSettings:(id)arg0;
- (id)monitor;
- (void)setContext:(id)arg0;
- (void)setMonitor:(id)arg0;
- (void)setup;
- (id)settings;
- (id)context;
- (void)dealloc;
- (double)minInterval;
- (void)refresh:(unsigned long long)arg0;
- (double)lastSampleTime;
- (void)setLastSampleTime:(double)arg0;

@end
