//
//     Generated by private class-dump
//

@class NSString, HMDFluencyDisplayLink, NSMutableDictionary, NSOperationQueue, NSMutableSet, NSMutableArray, NSObject, HMDFluencyDisplayLinkCallbackObj;
@protocol OS_dispatch_queue, HMDEvilMethodServiceProtocol;

@interface HMDFrameDropMonitor : HMDMonitor <HMDFrameDropServiceProtocol, HMDMonitorCustomSwitch> {
    BOOL _isStaticStateSample;
    BOOL _isFixedFrameDropStandardDuration;
    BOOL _isFrameDropActive;
    BOOL _lastScrolling;
    BOOL _isStaticEnableUpload;
    BOOL _isRecordStaticState;
    BOOL _enableService;
    int refCount;
    double _lastUpdateTime;
    double _startScrollingTime;
    NSMutableArray *_frameDrops;
    NSMutableArray *_hitchDurArray;
    double _lastTimestamp;
    double _lastTargetTimestamp;
    double _duration;
    double _hitchDuration;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSString *_customScene;
    unsigned long long _refreshRate;
    NSMutableDictionary *_customExtra;
    NSMutableSet *_frameDropCallbacks;
    NSMutableSet *_frameDropcallBackObjs;
    NSOperationQueue *_osNineSerialQueue;
    double _blockDuration;
    long long _blockCount;
    long long _callbackInterval;
    double _staticLastRecordTime;
    id<HMDEvilMethodServiceProtocol> _emService;
    HMDFluencyDisplayLink *_fluencyDisplayLink;
    HMDFluencyDisplayLinkCallbackObj *_callbackObj;
    struct CGPoint { double x; double y; } _touchReleaseVelocity;
    struct CGPoint { double x; double y; } _scrollTargetDistance;
}

@property BOOL isFrameDropActive;
@property (nonatomic) double lastUpdateTime;
@property (nonatomic) double startScrollingTime;
@property (nonatomic) BOOL lastScrolling;
@property (retain, nonatomic) NSMutableArray *frameDrops;
@property (retain, nonatomic) NSMutableArray *hitchDurArray;
@property (nonatomic) double lastTimestamp;
@property (nonatomic) double lastTargetTimestamp;
@property (nonatomic) double duration;
@property (nonatomic) double hitchDuration;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property (nonatomic) struct CGPoint { double x; double y; } touchReleaseVelocity;
@property (nonatomic) struct CGPoint { double x; double y; } scrollTargetDistance;
@property (copy, nonatomic) NSString *customScene;
@property (nonatomic) unsigned long long refreshRate;
@property (retain, nonatomic) NSMutableDictionary *customExtra;
@property (retain, nonatomic) NSMutableSet *frameDropCallbacks;
@property (retain, nonatomic) NSMutableSet *frameDropcallBackObjs;
@property (nonatomic) BOOL isStaticStateSample;
@property (nonatomic) BOOL isStaticEnableUpload;
@property (nonatomic) BOOL isRecordStaticState;
@property (retain, nonatomic) NSOperationQueue *osNineSerialQueue;
@property (nonatomic) double blockDuration;
@property (nonatomic) long long blockCount;
@property (nonatomic) long long callbackInterval;
@property (nonatomic) double staticLastRecordTime;
@property (retain, nonatomic) id<HMDEvilMethodServiceProtocol> emService;
@property (nonatomic) BOOL enableService;
@property (retain, nonatomic) HMDFluencyDisplayLink *fluencyDisplayLink;
@property (retain, nonatomic) HMDFluencyDisplayLinkCallbackObj *callbackObj;
@property (nonatomic) BOOL isFixedFrameDropStandardDuration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) int refCount;

+ (id)sharedMonitor;

- (id)customScene;
- (void)setCustomScene:(id)arg0;
- (double)blockDuration;
- (void)setBlockDuration:(double)arg0;
- (unsigned long long)reporterPriority;
- (void)willLeaveScene:(id)arg0;
- (void)setFluencyDisplayLink:(id)arg0;
- (id)fluencyDisplayLink;
- (id)callbackObj;
- (void)updateFrameDropCustomScene:(id)arg0;
- (void)monitorRunWithSpecialScene;
- (void)monitorStopWithSpecialScene;
- (void)setCallbackObj:(id)arg0;
- (void)setIsFrameDropActive:(BOOL)arg0;
- (void)setFrameDrops:(id)arg0;
- (void)setHitchDurArray:(id)arg0;
- (void)setFrameDropCallbacks:(id)arg0;
- (void)setFrameDropcallBackObjs:(id)arg0;
- (BOOL)isFrameDropActive;
- (void)tryToStopFrameDrop;
- (void)registerFluencyDisplayLink;
- (void)recieveANROverNotification:(id)arg0;
- (void)unRegisterFluencyDisplayLink;
- (void)tryToStartFrameDrop;
- (void)setEmService:(id)arg0;
- (void)setEnableService:(BOOL)arg0;
- (void)setIsStaticEnableUpload:(BOOL)arg0;
- (void)setLastTimestampToZero;
- (void)refreshRateInfo:(unsigned long long)arg0;
- (BOOL)lastScrolling;
- (BOOL)isStaticStateSample;
- (void)setIsRecordStaticState:(BOOL)arg0;
- (double)staticLastRecordTime;
- (void)setStaticLastRecordTime:(double)arg0;
- (id)frameDrops;
- (void)staticSampleRecordWithScene:(id)arg0;
- (void)setStartScrollingTime:(double)arg0;
- (BOOL)isRecordStaticState;
- (void)resetBlockDuration;
- (void)setLastScrolling:(BOOL)arg0;
- (double)startScrollingTime;
- (void)scrollSampleRecordWithSlidingTime:(double)arg0;
- (void)p_didUpdateFramesWithTimeInterval:(double)arg0 frameDuration:(double)arg1 targetTimestamp:(double)arg2;
- (double)lastTargetTimestamp;
- (id)hitchDurArray;
- (id)emService;
- (BOOL)isStaticEnableUpload;
- (BOOL)isFixedFrameDropStandardDuration;
- (void)setLastTargetTimestamp:(double)arg0;
- (void)excuteBlockOnFrameDropSerialQueue:(id /* block */)arg0;
- (long long)getFrameDropLevel:(long long)arg0;
- (id)getFrameInfoFromArray:(id)arg0;
- (struct CGPoint { double x0; double x1; })touchReleaseVelocity;
- (struct CGPoint { double x0; double x1; })scrollTargetDistance;
- (id)getHitchInfoFromArray:(id)arg0;
- (void)callFrameDropCallback:(id)arg0;
- (void)setTouchReleaseVelocity:(struct CGPoint { double x0; double x1; })arg0;
- (void)setScrollTargetDistance:(struct CGPoint { double x0; double x1; })arg0;
- (void)frameDropRecordWithDropInfoArray:(id)arg0 hitchInfoArray:(id)arg1 hitchDuration:(double)arg2 duration:(double)arg3 slidingTime:(double)arg4 scene:(id)arg5 isScroll:(BOOL)arg6;
- (id)frameDropCallbacks;
- (id)frameDropcallBackObjs;
- (void)allowedNormalStateSample:(BOOL)arg0 callbackInterval:(long long)arg1;
- (void)setIsStaticStateSample:(BOOL)arg0;
- (id)osNineSerialQueue;
- (BOOL)enableService;
- (BOOL)enableFrameDropService;
- (id)getCustomFilterTag;
- (void)applicationDidReceiveFrameNotification:(double)arg0 frameDuration:(double)arg1;
- (void)applicationDidReceiveFrameNotification:(double)arg0 frameDuration:(double)arg1 targetTimestamp:(double)arg2;
- (void)updateCurrentTouchReleasedVelocity:(struct CGPoint { double x0; double x1; })arg0 targetContentDistance:(struct CGPoint { double x0; double x1; })arg1;
- (void)addFrameDropMonitorCallback:(id /* block */)arg0;
- (void)removeFrameDropMonitorCallback:(id /* block */)arg0;
- (id)addFrameDropMonitorCallbackObject:(id /* block */)arg0;
- (void)removeFrameDropMonitorCallbackObject:(id)arg0;
- (void)addFrameDropCustomExtra:(id)arg0;
- (void)removeFrameDropCustomExtra:(id)arg0;
- (void)removeFrameDropCustomExtraWithKeys:(id)arg0;
- (void)allowedNormalStateSample:(BOOL)arg0;
- (void)setIsFixedFrameDropStandardDuration:(BOOL)arg0;
- (void)setOsNineSerialQueue:(id)arg0;
- (double)hitchDuration;
- (id)customExtra;
- (void)setBlockCount:(long long)arg0;
- (void)setCustomExtra:(id)arg0;
- (void)setHitchDuration:(double)arg0;
- (unsigned long long)refreshRate;
- (double)lastUpdateTime;
- (id)init;
- (void)resume;
- (int)refCount;
- (void).cxx_destruct;
- (void)setSerialQueue:(id)arg0;
- (id)serialQueue;
- (void)stop;
- (long long)callbackInterval;
- (void)suspend;
- (void)setLastTimestamp:(double)arg0;
- (double)duration;
- (double)lastTimestamp;
- (void)setLastUpdateTime:(double)arg0;
- (void)setRefCount:(int)arg0;
- (void)start;
- (void)dealloc;
- (void)setDuration:(double)arg0;
- (void)setRefreshRate:(unsigned long long)arg0;
- (Class)storeClass;
- (void)setCallbackInterval:(long long)arg0;
- (long long)blockCount;

@end
