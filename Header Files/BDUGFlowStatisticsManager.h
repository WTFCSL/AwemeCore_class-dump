//
//     Generated by private class-dump
//

@class NSTimer, NSString, BDUGFlowStatisticsLogger, BDUGFlowStatisticsUICenter, TTHttpTask, BDUGFlowStatisticsSettings, BDUGFlowCommonParamsModel, TTReachability;

@interface BDUGFlowStatisticsManager : NSObject {
    BOOL _needRetryRequest;
    BOOL _isGetCarrierIdSuccess;
    BDUGFlowStatisticsSettings *_settingsInstance;
    BDUGFlowStatisticsUICenter *_UICenterInstance;
    BDUGFlowStatisticsLogger *_loggerInstance;
    BDUGFlowCommonParamsModel *_commonModel;
    id /* block */ _getCommonBlock;
    id /* block */ _cacheCompletion;
    unsigned long long _queryIdReason;
    unsigned long long _queryInfoReason;
    NSString *_publicIp;
    TTReachability *_reachability;
    NSTimer *_checkFlowTimer;
    TTHttpTask *_task;
}

@property (retain, nonatomic) BDUGFlowStatisticsSettings *settingsInstance;
@property (retain, nonatomic) BDUGFlowStatisticsUICenter *UICenterInstance;
@property (retain, nonatomic) BDUGFlowStatisticsLogger *loggerInstance;
@property (retain, nonatomic) BDUGFlowCommonParamsModel *commonModel;
@property (copy, nonatomic) id /* block */ getCommonBlock;
@property (copy, nonatomic) id /* block */ cacheCompletion;
@property (nonatomic) BOOL needRetryRequest;
@property (nonatomic) BOOL isGetCarrierIdSuccess;
@property (nonatomic) unsigned long long queryIdReason;
@property (nonatomic) unsigned long long queryInfoReason;
@property (copy, nonatomic) NSString *publicIp;
@property (retain, nonatomic) TTReachability *reachability;
@property (retain, nonatomic) NSTimer *checkFlowTimer;
@property (weak, nonatomic) TTHttpTask *task;

+ (id)currentNetStatus;
+ (id)currentCarrierStatus;
+ (unsigned long long)currentFlowCarrierType;
+ (id)carrierStringForCarrierType:(unsigned long long)arg0;
+ (BOOL)cmccFlowCard;
+ (BOOL)unicomFlowCard;
+ (BOOL)telecomFlowCard;
+ (id)currentFlowCarrier;
+ (BOOL)cmccFlowCardByCarrier;
+ (BOOL)isIos12DoubleCardPhone;
+ (BOOL)cmccFlowCardByStatusBar;
+ (id)statusBarCellularString;
+ (BOOL)cmccFlowCardByString:(id)arg0;
+ (BOOL)unicomFlowCardByCarrier;
+ (BOOL)unicomFlowCardByStatusBar;
+ (BOOL)unicomFlowCardByString:(id)arg0;
+ (BOOL)telecomFlowCardByCarrier;
+ (BOOL)telecomFlowCardByStatusBar;
+ (BOOL)telecomFlowCardByString:(id)arg0;
+ (id)getDeviceBrand;
+ (id)carrierNameForCarrierType:(unsigned long long)arg0;
+ (id)getCarrier;
+ (id)sharedInstance;
+ (id)carrierName;
+ (id)carrierMNC;
+ (id)carrierMCC;
+ (id)sdkVersion;

- (id)commonModel;
- (void)setCommonModel:(id)arg0;
- (void)setCommonParams:(id /* block */)arg0;
- (void)appDidEnterBackgroundNotification;
- (void)registerNotification;
- (void)registerNetChangeNotification;
- (void)registerCommonTracker;
- (void)resetCommonParams;
- (id)publicIp;
- (BOOL)isOpenFreeFlow;
- (BOOL)isGetCarrierIdSuccess;
- (id)settingsInstance;
- (BOOL)isExcessFlowWithSize:(double)arg0;
- (void)netStatusChangedNotification:(id)arg0;
- (void)serviceRadioAccessTechnologyDidChange:(id)arg0;
- (void)radioAccessTechnologyDidChange:(id)arg0;
- (void)appWillEnterForegroundNotification;
- (void)requestIdAndFlowInfo;
- (id)loggerInstance;
- (BOOL)startGetIdentifier;
- (void)setNeedRetryRequest:(BOOL)arg0;
- (void)setCacheCompletion:(id /* block */)arg0;
- (void)setQueryInfoReason:(unsigned long long)arg0;
- (void)setLocalAvailableFlow:(double)arg0;
- (void)requestAvailableFlowWithCompletion:(id /* block */)arg0;
- (void)reportTotalUsedFlow;
- (BOOL)getIsOrderFlow;
- (double)getLocalAvailableFlow;
- (double)getSystemFlow;
- (void)reportTotalUsedFlowWithStartTime:(double)arg0 endTime:(double)arg1 costFlows:(double)arg2;
- (id)getMobileNetworkCode;
- (void)setGetCommonBlock:(id /* block */)arg0;
- (id /* block */)getCommonBlock;
- (void)checkAndRetryReportFlow;
- (BOOL)networkWifiConnected;
- (BOOL)networkConnected;
- (void)setIsGetCarrierIdSuccess:(BOOL)arg0;
- (BOOL)canRequestNow;
- (void)setQueryIdReason:(unsigned long long)arg0;
- (void)requestFlowIdWithType:(unsigned long long)arg0 reason:(unsigned long long)arg1;
- (id)getLastFlowCarrierId;
- (void)getCMCCCode;
- (void)getTelecomCode;
- (BOOL)isSupportFreeFlow;
- (BOOL)shouldShowPopup;
- (BOOL)isExcessFlow;
- (BOOL)getShowFreeFlowToast;
- (BOOL)getShowFreeFlowWillUseUpToast;
- (BOOL)getShowFreeFlowUsedUpToast;
- (BOOL)getIsSupport;
- (BOOL)isExcessCriticalValueFlow:(double)arg0 withSize:(double)arg1;
- (long long)getNoPopupDuration;
- (BOOL)popupOriginalLogic;
- (BOOL)getShowPopup;
- (void)registerMonitorFlowChangeWithCompletion:(id /* block */)arg0;
- (id)getExperiments;
- (id)freeFlowEntranceURLWithType:(unsigned long long)arg0;
- (long long)getCurrentUpdateTime;
- (void)resetSystemFlow;
- (void)trimRecursively;
- (void)trimInBackgroundWithCompletion:(id /* block */)arg0;
- (void)checkAndBeginSearchLeftFlow:(double)arg0;
- (void)clearCheckFlowTimer;
- (void)checkLeftFlowTimer;
- (void)setCheckFlowTimer:(id)arg0;
- (id)checkFlowTimer;
- (BOOL)needRetryRequest;
- (void)getUnicomCode;
- (unsigned long long)queryInfoReason;
- (id)getQueryResidualFlowURLString;
- (void)retryRequestAvailableFlowWithCompletion:(id /* block */)arg0;
- (void)setCurrentUpdateTime:(long long)arg0;
- (void)setShowFreeFlowToast:(BOOL)arg0;
- (id)UICenterInstance;
- (void)setPublicIp:(id)arg0;
- (id)urlEncodeStr:(id)arg0;
- (unsigned long long)queryIdReason;
- (void)requestCMCCPcIdWithUrl:(id)arg0;
- (void)retryRequestCarrierIdWithType:(unsigned long long)arg0;
- (void)checkRequestFlowInfo;
- (void)saveLastFlowCarrierIdWithType:(unsigned long long)arg0 carrierId:(id)arg1;
- (void)requestTelecomOpenIdWithUrl:(id)arg0;
- (double)getFlow;
- (id)getOrderFlowUrl;
- (double)getLastCacheTime;
- (double)getLastToastCacheTime;
- (long long)getNoToastDuration;
- (void)checkAndSynchronizeRequest;
- (void)checkAndSetFirstShowToastTime;
- (id /* block */)cacheCompletion;
- (id)getDeviceIdInfo;
- (void)saveDeviceId:(id)arg0;
- (BOOL)checkIsToday:(id)arg0;
- (void)setRequestCarrierIdTimeInterval:(long long)arg0;
- (BOOL)shouldShowPopupToOrderWithStrategy;
- (BOOL)shouldShowPopupToOrder;
- (BOOL)shouldShowFreeFlowToast;
- (BOOL)shouldShowFreeFlowWillUseUpToast;
- (BOOL)shouldShowFreeFlowUsedUpToast;
- (BOOL)isOrderAndUnExcessFlow;
- (BOOL)isOrderButExcessFlow;
- (BOOL)isExcessCriticalValueFlow:(double)arg0;
- (void)setFlowData:(id)arg0;
- (id)experimentGroupArray;
- (id)freeFlowEntranceURL;
- (id)recentUpdateDataTime;
- (void)showedPopup;
- (void)showedFreeFlowToast;
- (void)showedFreeFlowWillUseUpToast;
- (void)showedFreeFlowUsedUpToast;
- (void)setSettingsInstance:(id)arg0;
- (void)setUICenterInstance:(id)arg0;
- (void)setLoggerInstance:(id)arg0;
- (void)setIsOrderFlow:(BOOL)arg0;
- (void)setIsSupport:(BOOL)arg0;
- (void)setShowPopup:(BOOL)arg0;
- (void)setNoPopupDuration:(long long)arg0;
- (void)setNoToastDuration:(long long)arg0;
- (void)setOrderFlowUrl:(id)arg0;
- (long long)noPopupDuration;
- (id)orderFlowUrl;
- (double)flowThreshold;
- (void)startStatisticsFlow;
- (id)init;
- (id)reachability;
- (void).cxx_destruct;
- (void)setReachability:(id)arg0;
- (double)getThreshold;
- (void)setTask:(id)arg0;
- (void)setThreshold:(double)arg0;
- (void)start;
- (void)dealloc;
- (id)task;
- (void)setExperiments:(id)arg0;
- (void)setFlow:(double)arg0;
- (unsigned long long)isNewUser;

@end
