//
//     Generated by private class-dump
//

@class NSString, NSDictionary, NSObject;
@protocol AWELiveStreamPlayer, HunterLiveViewPlayerDelegate, AWELiveRoomFinishedListenerProtocol;

@interface HunterLiveView : UIView <IESLivePlayerControllerDelegate, UIGestureRecognizerDelegate> {
    BOOL _mute;
    BOOL _autoPlay;
    BOOL _enableBGPlay;
    BOOL _needPreload;
    BOOL _autoLifecycle;
    BOOL _livePlay;
    BOOL _isActiveBySingleClick;
    id<HunterLiveViewPlayerDelegate> _delegate;
    long long _scaleMode;
    double _volume;
    double _startTime;
    double _playTime;
    NSString *_streamData;
    NSString *_posterURL;
    double _rate;
    NSString *_fitMode;
    long long _playState;
    id<AWELiveStreamPlayer> _playerController;
    NSDictionary *_logExtra;
    double _startPlayerTime;
    double _startLoadingTime;
    NSObject<AWELiveRoomFinishedListenerProtocol> *_roomFinishListener;
}

@property (nonatomic) BOOL isActiveBySingleClick;
@property (nonatomic) double startPlayerTime;
@property (nonatomic) double startLoadingTime;
@property (retain, nonatomic) NSObject<AWELiveRoomFinishedListenerProtocol> *roomFinishListener;
@property (weak, nonatomic) id<HunterLiveViewPlayerDelegate> delegate;
@property (nonatomic) long long scaleMode;
@property (nonatomic) BOOL mute;
@property (nonatomic) BOOL autoPlay;
@property (nonatomic) double volume;
@property (nonatomic) double startTime;
@property (nonatomic) double playTime;
@property (nonatomic) BOOL enableBGPlay;
@property (copy, nonatomic) NSString *streamData;
@property (copy, nonatomic) NSString *posterURL;
@property (nonatomic) BOOL needPreload;
@property (nonatomic) BOOL autoLifecycle;
@property (nonatomic) double rate;
@property (copy, nonatomic) NSString *fitMode;
@property (nonatomic, getter=isLivePlaying) BOOL livePlay;
@property (readonly, nonatomic) long long playState;
@property (retain, nonatomic) id<AWELiveStreamPlayer> playerController;
@property (copy, nonatomic) NSDictionary *logExtra;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)logExtra;
- (void)setLogExtra:(id)arg0;
- (void)player:(id)arg0 loadStateDidChange:(unsigned long long)arg1;
- (void)player:(id)arg0 didReceiveError:(id)arg1;
- (void)player:(id)arg0 mediaSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)player:(id)arg0 didReceiveMetaInfo:(id)arg1 processed:(BOOL)arg2;
- (void)playerFrozen:(id)arg0;
- (void)playerResume:(id)arg0;
- (id)fitMode;
- (void)setFitMode:(id)arg0;
- (void)reloadWithStreamData:(id)arg0;
- (void)updateLogExtra:(id)arg0;
- (BOOL)needPreload;
- (void)setNeedPreload:(BOOL)arg0;
- (void)setPlayTime:(double)arg0;
- (void)setStreamData:(id)arg0;
- (id)posterURL;
- (void)setPosterURL:(id)arg0;
- (double)adLiveDuration;
- (id)livePlayerView;
- (void)trackLiveSdkDurationV2;
- (struct CGSize { double x0; double x1; })sizeWithSizeString:(id)arg0;
- (BOOL)autoLifecycle;
- (void)setAutoLifecycle:(BOOL)arg0;
- (void)setEnableBGPlay:(BOOL)arg0;
- (BOOL)enableBGPlay;
- (void)updatePlayerCover;
- (void)_stopPlayer;
- (BOOL)isActiveBySingleClick;
- (void)setIsActiveBySingleClick:(BOOL)arg0;
- (double)startPlayerTime;
- (void)setStartPlayerTime:(double)arg0;
- (id)roomFinishListener;
- (void)setRoomFinishListener:(id)arg0;
- (BOOL)shouldEnterFullScreenWithPlayer;
- (void)addRoomFinishListener;
- (void)_startPlayLiveWithSteamData:(id)arg0;
- (void)trackLiveLog;
- (void)didRelease;
- (void)trackLiveDuration;
- (void)trackLiveSdkDuration;
- (void)setStartLoadingTime:(double)arg0;
- (void)trackLivePlay;
- (BOOL)isLivePlaying;
- (void)setLivePlay:(BOOL)arg0;
- (double)startLoadingTime;
- (void)stopAndRelease;
- (void)updateMuteStatus;
- (void)trackLiveSdkPlay;
- (BOOL)mute;
- (id)transitionContext;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (double)volume;
- (id)playerController;
- (double)playTime;
- (void)stop;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setPlayerController:(id)arg0;
- (void)setRate:(double)arg0;
- (id)delegate;
- (double)startTime;
- (double)rate;
- (void)setVolume:(double)arg0;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)play;
- (void)setMute:(BOOL)arg0;
- (id)streamData;
- (BOOL)autoPlay;
- (void)setAutoPlay:(BOOL)arg0;
- (long long)playState;
- (void)setScaleMode:(long long)arg0;
- (long long)scaleMode;
- (void)didStop;
- (id)livePlayer;

@end
