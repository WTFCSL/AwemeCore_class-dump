//
//     Generated by private class-dump
//

@class DIRSNetworking, DIRSStore, NSString, DIRSModuleHive, DIRSEventBatchDispatcher, NSDictionary, DIRSConcurrentCollection, DIRSConfig, NSObject, DIRSIdentity, DIRSBasicFeatureOptions, DIRSLogger;
@protocol IRISTracker, IRISEventListener, OS_dispatch_queue;

@interface DIRSContext : NSObject {
    BOOL is_main;
    BOOL launched;
    DIRSConfig *config;
    NSObject<OS_dispatch_queue> *ctx_queue;
    void *ctx_queue_tag;
    DIRSModuleHive *_modular;
    DIRSLogger *_logger;
    id<IRISTracker> _tracker;
    DIRSEventBatchDispatcher *_dispatcher;
    id<IRISEventListener> _listener;
    DIRSStore *_store;
    DIRSNetworking *_networking;
    DIRSIdentity *_identity;
    DIRSBasicFeatureOptions *_basicFeatureOptions;
    NSDictionary *_registeredModules;
    DIRSConcurrentCollection *_ctxInfo;
}

@property (readonly, nonatomic) DIRSLogger *logger;
@property (retain, nonatomic) DIRSModuleHive *modular;
@property (weak, nonatomic) DIRSLogger *logger;
@property (weak, nonatomic) id<IRISTracker> tracker;
@property (weak, nonatomic) DIRSEventBatchDispatcher *dispatcher;
@property (weak, nonatomic) id<IRISEventListener> listener;
@property (weak, nonatomic) DIRSStore *store;
@property (weak, nonatomic) DIRSNetworking *networking;
@property (weak, nonatomic) DIRSIdentity *identity;
@property (weak, nonatomic) DIRSBasicFeatureOptions *basicFeatureOptions;
@property (retain, nonatomic) NSDictionary *registeredModules;
@property (retain, nonatomic) DIRSConcurrentCollection *ctxInfo;
@property (readonly) DIRSConfig *config;
@property (readonly) NSString *name;

+ (id)ctx_all;
+ (void)ctx_add:(id)arg0;
+ (void)ctx_remove:(id)arg0;
+ (id)ctx_get:(id)arg0;
+ (void)initialize;
+ (id)main;
+ (void)configure:(id)arg0;
+ (id)defaultModules;

- (id)modular;
- (id)basicFeatureOptions;
- (id)registeredModules;
- (void)setModular:(id)arg0;
- (void)initPrimary;
- (void)setBasicFeatureOptions:(id)arg0;
- (void)setCtxInfo:(id)arg0;
- (void)_setupRegisteredModules;
- (void)setRegisteredModules:(id)arg0;
- (id)ctxInfo;
- (id)logger;
- (id)modules;
- (id)dispatcher;
- (id)tracker;
- (void)setDispatcher:(id)arg0;
- (void)setTracker:(id)arg0;
- (void)dispose;
- (id)init;
- (BOOL)resume;
- (void).cxx_destruct;
- (id)listener;
- (void)setIdentity:(id)arg0;
- (void)commonInit;
- (id)config;
- (id)store;
- (void)suspend;
- (void)setListener:(id)arg0;
- (void)setStore:(id)arg0;
- (id)initWithConfig:(id)arg0;
- (id)identity;
- (id)valueForUndefinedKey:(id)arg0;
- (id)contextPath;
- (void)setValue:(id)arg0 forUndefinedKey:(id)arg1;
- (id)networking;
- (void)async:(id /* block */)arg0;
- (id)name;
- (void)setLogger:(id)arg0;
- (id)contextInfo;
- (void)_initQueue;
- (BOOL)isMainContext;
- (void)setNetworking:(id)arg0;

@end
