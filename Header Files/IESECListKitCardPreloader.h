//
//     Generated by private class-dump
//

@class NSString, NSMutableArray, YYMemoryCache;
@protocol IESECListKitCardPreloaderTaskProvider;

@interface IESECListKitCardPreloader : NSObject <IESECListKitCardProvider> {
    BOOL _stoped;
    NSString *_listCardsContextID;
    id<IESECListKitCardPreloaderTaskProvider> _preloadTaskProvider;
    YYMemoryCache *_viewCache;
    NSMutableArray *_taskQueue;
    id /* block */ _completeBlock;
    unsigned long long _totleCount;
    unsigned long long _successCount;
}

@property (retain, nonatomic) YYMemoryCache *viewCache;
@property (retain, nonatomic) NSMutableArray *taskQueue;
@property (copy, nonatomic) id /* block */ completeBlock;
@property (nonatomic) unsigned long long totleCount;
@property (nonatomic) unsigned long long successCount;
@property (nonatomic) BOOL stoped;
@property (copy, nonatomic) NSString *listCardsContextID;
@property (weak, nonatomic) id<IESECListKitCardPreloaderTaskProvider> preloadTaskProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setCompleteBlock:(id /* block */)arg0;
- (id /* block */)completeBlock;
- (void)setViewCache:(id)arg0;
- (id)cardWithSchema:(id)arg0 itemType:(unsigned long long)arg1 engineType:(unsigned long long)arg2;
- (id)listEnvID;
- (void)setPreloadTaskProvider:(id)arg0;
- (void)preloadWithModels:(id)arg0 complete:(id /* block */)arg1;
- (void)setListCardsContextID:(id)arg0;
- (id)cacheKeyWithSchema:(id)arg0;
- (void)setTotleCount:(unsigned long long)arg0;
- (id)preloadTaskProvider;
- (void)startIfNeed;
- (void)setStoped:(BOOL)arg0;
- (unsigned long long)totleCount;
- (id)listCardsContextID;
- (BOOL)stoped;
- (id)getFirst;
- (void)markReusable:(id)arg0 schema:(id)arg1 itemType:(unsigned long long)arg2 engineType:(unsigned long long)arg3;
- (id)cacheKey:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (id)taskQueue;
- (void)stop;
- (void)enqueue:(id)arg0;
- (unsigned long long)successCount;
- (id)viewCache;
- (void)setSuccessCount:(unsigned long long)arg0;

@end
