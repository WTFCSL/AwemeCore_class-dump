//
//     Generated by private class-dump
//

@class NSMutableDictionary, AWECFEradicates, NSMutableSet, AWECFButtercups, NSMutableArray, NSObject;
@protocol OS_dispatch_queue, BDQBDelegate;

@interface AWECFSession : NSObject {
    long long _usingEngine;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _vmLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _initialLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _loadSuccessLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _loadedlazyModulesLock;
    struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } _taskSetLock;
    BOOL _willStartFetchList;
    BOOL _didStartSDK;
    AWECFEradicates *_conf;
    NSObject<OS_dispatch_queue> *_fetchListQueue;
    NSMutableDictionary *_betterInfo;
    NSMutableArray *_loadedlazyModules;
    NSMutableArray *_loadedlazyDylibs;
    NSMutableSet *_taskSet;
    id<BDQBDelegate> _delegate;
    AWECFButtercups *_refreshStrategy;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *fetchListQueue;
@property (nonatomic) BOOL willStartFetchList;
@property (nonatomic) BOOL didStartSDK;
@property (retain, nonatomic) NSMutableDictionary *betterInfo;
@property (retain, nonatomic) NSMutableArray *loadedlazyModules;
@property (retain, nonatomic) NSMutableArray *loadedlazyDylibs;
@property (retain, nonatomic) NSMutableSet *taskSet;
@property (retain, nonatomic) id<BDQBDelegate> delegate;
@property (retain, nonatomic) AWECFEradicates *conf;
@property (retain, nonatomic) AWECFButtercups *refreshStrategy;

+ (void)loadLazyModuleWithName:(id)arg0;
+ (void)fetchQuaterbacks;
+ (void)startWithConfiguration:(id)arg0 delegate:(id)arg1;
+ (void)clearAllLocalQuaterback;
+ (void)bd_sizeForChildContentContainer;
+ (void)fetchServerData;
+ (void)loadZipFileAtPath:(id)arg0;
+ (id)bd_requestData:(id /* block */)arg0;
+ (id)loadedlazyModules;
+ (id)loadedlazydylibs;
+ (BOOL)fetchServerDataIfNeed;
+ (id)statusMap:(id)arg0;
+ (void)_loadModuleAtPath:(id)arg0;
+ (void *)lookupFunctionByName:(id)arg0 inModuleNamed:(id)arg1 moduleVersion:(int)arg2;
+ (void)startTest;
+ (id)sharedMain;
+ (void)loadFileAtPath:(id)arg0;
+ (BOOL)handleOpenURL:(id)arg0;

- (void)setConf:(id)arg0;
- (id)queryVersionFromData:(id)arg0;
- (void)moduleData:(id)arg0 willLoadWithError:(id)arg1;
- (BOOL)bd_systemLayoutFittingSizeDidChangeForChildContentContainer;
- (void)bd_sizeForChildContentContainer;
- (void)bd_viewWillTransitionToSize:(id)arg0 bd_willTransitionToTraitCollection:(id /* block */)arg1;
- (id)bd_requestData:(id /* block */)arg0;
- (void)didFinishFetchQuaterbackList:(id)arg0;
- (void)setWillStartFetchList:(BOOL)arg0;
- (void)lockInitial;
- (void)unlockInitial;
- (void)bd_preferredContentSizeDidChangeForChildContentContainer:(long long)arg0;
- (BOOL)needLoadLocalQuaterbacks;
- (void)loadLocalAllModules;
- (void)setDidStartSDK:(BOOL)arg0;
- (BOOL)isBradyRunning;
- (void)lockVM;
- (void)engineLog:(const char *)arg0;
- (void)engineExceptionHandler:(id)arg0;
- (void)engineLoadModuleError:(id)arg0 moduleName:(id)arg1 moduleVersion:(int)arg2 duration:(long long)arg3;
- (void)unlockVM;
- (void)lockLazyModules;
- (id)loadedlazyDylibs;
- (void)unlockLazyModules;
- (id)loadedlazyModules;
- (void)loadDYCLazyDylibModule:(id)arg0 bd_willTransitionToTraitCollection:(id /* block */)arg1;
- (void)_loadDYCModule:(id)arg0 bd_willTransitionToTraitCollection:(id /* block */)arg1;
- (id)fetchListQueue;
- (id)taskSet;
- (void)lockTaskSet;
- (void)unlockTaskSet;
- (BOOL)didStartSDK;
- (BOOL)willStartFetchList;
- (id)allLoadedQuaterbacks;
- (BOOL)isEngineRunning;
- (BOOL)isJSContextRunning;
- (void)setFetchListQueue:(id)arg0;
- (id)betterInfo;
- (void)setBetterInfo:(id)arg0;
- (void)setLoadedlazyModules:(id)arg0;
- (void)setLoadedlazyDylibs:(id)arg0;
- (void)setTaskSet:(id)arg0;
- (id)refreshStrategy;
- (void)setRefreshStrategy:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)conf;

@end
