//
//     Generated by private class-dump
//

@class UITextView, NSString, IESLiveEmojiTextParser, IESLiveVSMessageBoardInputPanelConfig;
@protocol IESLiveVSMessageBoardInputDegelate;

@interface IESLiveVSMessageBoardInputView : UIView <UITextViewDelegate> {
    id<IESLiveVSMessageBoardInputDegelate> _delegate;
    NSString *_currentText;
    UITextView *_commentTextView;
    IESLiveVSMessageBoardInputPanelConfig *_config;
    UITextView *_commentCopyTextView;
    long long _limitCount;
    UITextView *_placeHolderLabel;
    IESLiveEmojiTextParser *_textParser;
}

@property (retain, nonatomic) IESLiveVSMessageBoardInputPanelConfig *config;
@property (retain, nonatomic) UITextView *commentCopyTextView;
@property (nonatomic) long long limitCount;
@property (retain, nonatomic) UITextView *placeHolderLabel;
@property (retain, nonatomic) IESLiveEmojiTextParser *textParser;
@property (copy, nonatomic) NSString *currentText;
@property (weak, nonatomic) id<IESLiveVSMessageBoardInputDegelate> delegate;
@property (retain, nonatomic) UITextView *commentTextView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setTextParser:(id)arg0;
- (id)textParser;
- (void)disableLocalizations;
- (id)placeHolderLabel;
- (void)setPlaceHolderLabel:(id)arg0;
- (id)commentTextView;
- (void)setCommentTextView:(id)arg0;
- (void)setupTextParser;
- (id)commentEmojiResourceManager;
- (void)activateKeyboardMode:(BOOL)arg0;
- (void)refreshPlaceHolderStr:(id)arg0;
- (void)setupPlaceHoderLabel;
- (void)setCommentCopyTextView:(id)arg0;
- (id)commentCopyTextView;
- (double)getCurrentTextViewLengthWithTexView:(id)arg0 cutTextWhenBeyondLimit:(BOOL)arg1;
- (BOOL)checkTextViewIfReachMaxLengthWithInsertText:(id)arg0 replaceLength:(long long)arg1;
- (void)replaceWithText:(id)arg0 withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })currentCursorRange;
- (void)replaceWithText:(id)arg0;
- (void)insertText:(id)arg0 asGroup:(BOOL)arg1;
- (void)updateBackgroundColorForUseSkin:(BOOL)arg0;
- (void)checkShouldScrollWithWidth:(double)arg0;
- (long long)limitCount;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (id)config;
- (void)setLimitCount:(long long)arg0;
- (id)initWithConfig:(id)arg0;
- (id)delegate;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })arg0;
- (void)setDelegate:(id)arg0;
- (id)currentText;
- (void)setCurrentText:(id)arg0;
- (BOOL)textViewShouldBeginEditing:(id)arg0;
- (void)textViewDidChange:(id)arg0;
- (BOOL)textView:(id)arg0 shouldChangeTextInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg1 replacementText:(id)arg2;
- (void)setupViews;
- (void)backspace;
- (void)setupTextView;

@end
