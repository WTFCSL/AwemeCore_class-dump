//
//     Generated by private class-dump
//

@class NSString, NSArray, AVMutableComposition, NSMutableDictionary, NSOperationQueue, NSMutableArray, AVMutableAudioMix, AVVideoComposition, NSNumber;

@interface AWEAVMutableCompositionBuilder : NSObject <AVVideoCompositionValidationHandling, NSCopying> {
    BOOL _singleVideoMode;
    BOOL _isLongVideoMode;
    BOOL _isFromLv;
    NSNumber *_totalRate;
    NSMutableDictionary *_rateDict;
    NSMutableArray *_actualSegmentTimeArray;
    NSMutableArray *_assetArray;
    NSMutableDictionary *_timeRangeDict;
    NSMutableDictionary *_bookkeepingTimeRangeDict;
    NSMutableDictionary *_initialRangeDict;
    NSMutableDictionary *_rotateTypeDict;
    NSMutableDictionary *_videoRotateTypeDict;
    AVMutableComposition *_mutableComposition;
    AVMutableAudioMix *_audioMix;
    NSArray *_audioCompositionTrackArray;
    AVVideoComposition *_videoComposition;
    unsigned long long _maxAudioTrackCount;
    NSMutableArray *_imageGeneratorArray;
    NSOperationQueue *_queue;
    double _maxDuration;
    NSString *_draftFolder;
    struct CGSize { double width; double height; } _croppingSize;
}

@property (retain, nonatomic) NSMutableArray *assetArray;
@property (retain, nonatomic) NSMutableDictionary *timeRangeDict;
@property (retain, nonatomic) NSMutableDictionary *bookkeepingTimeRangeDict;
@property (retain, nonatomic) NSMutableDictionary *initialRangeDict;
@property (retain, nonatomic) NSMutableDictionary *rotateTypeDict;
@property (retain, nonatomic) NSMutableDictionary *videoRotateTypeDict;
@property (retain, nonatomic) AVMutableComposition *mutableComposition;
@property (retain, nonatomic) AVMutableAudioMix *audioMix;
@property (retain, nonatomic) NSArray *audioCompositionTrackArray;
@property (retain, nonatomic) AVVideoComposition *videoComposition;
@property (retain, nonatomic) NSMutableArray *actualSegmentTimeArray;
@property (nonatomic) unsigned long long maxAudioTrackCount;
@property (retain, nonatomic) NSMutableArray *imageGeneratorArray;
@property (retain, nonatomic) NSOperationQueue *queue;
@property (nonatomic) double maxDuration;
@property (nonatomic) struct CGSize { double width; double height; } croppingSize;
@property (nonatomic) BOOL singleVideoMode;
@property (nonatomic) BOOL isLongVideoMode;
@property (nonatomic) BOOL isFromLv;
@property (copy, nonatomic) NSString *draftFolder;
@property (retain, nonatomic) NSNumber *totalRate;
@property (retain, nonatomic) NSMutableDictionary *rateDict;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)draftFolder;
- (void)setDraftFolder:(id)arg0;
- (id)totalRate;
- (void)setTotalRate:(id)arg0;
- (void)trackError:(id)arg0 key:(id)arg1 extraInfo:(id)arg2;
- (void)addAsset:(id)arg0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (id)getExportSessionWithSuggestedSize:(struct CGSize { double x0; double x1; })arg0 suggestedAudioRate:(long long)arg1;
- (struct CGSize { double x0; double x1; })validTargetSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isFromLv;
- (BOOL)singleVideoMode;
- (void)setCroppingSize:(struct CGSize { double x0; double x1; })arg0;
- (id)getExportSessionWithRange:(id)arg0;
- (id)assetArray;
- (void)setAssetArray:(id)arg0;
- (id)timeRangeDict;
- (void)setTimeRangeDict:(id)arg0;
- (id)bookkeepingTimeRangeDict;
- (void)setBookkeepingTimeRangeDict:(id)arg0;
- (id)rotateTypeDict;
- (void)setRotateTypeDict:(id)arg0;
- (id)videoRotateTypeDict;
- (void)setVideoRotateTypeDict:(id)arg0;
- (id)rateDict;
- (void)setRateDict:(id)arg0;
- (unsigned long long)maxAudioTrackCount;
- (void)setMaxAudioTrackCount:(unsigned long long)arg0;
- (id)actualSegmentTimeArray;
- (void)setActualSegmentTimeArray:(id)arg0;
- (void)setSingleVideoMode:(BOOL)arg0;
- (BOOL)isLongVideoMode;
- (void)setIsLongVideoMode:(BOOL)arg0;
- (void)setInitialRangeDict:(id)arg0;
- (void)setImageGeneratorArray:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })validCMTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })validClippedCMTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1;
- (void)addAsset:(id)arg0 timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1 adjust:(BOOL)arg2;
- (void)setClipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1 adjust:(BOOL)arg2;
- (id)initialRangeDict;
- (id)getPlayerItemWithCompensateOriginalAssetTimeRange:(BOOL)arg0;
- (id)getPlayerItemWithCompensateOriginalAssetTimeRange:(BOOL)arg0 useBookkeeping:(BOOL)arg1;
- (id)p_buildWithMultipleAudioTrack:(BOOL)arg0 range:(id)arg1 choosedtotalTimeRange:(id)arg2 isForPlayDisplay:(BOOL)arg3 compensateOriginalAssetRange:(BOOL)arg4 useBookkeeping:(BOOL)arg5;
- (id)p_buildWithMultipleAudioTrack:(BOOL)arg0 range:(id)arg1 choosedtotalTimeRange:(id)arg2 suggestedSize:(struct CGSize { double x0; double x1; })arg3 isForException:(BOOL)arg4 isForPlayDisplay:(BOOL)arg5 compensateOriginalAssetRange:(BOOL)arg6 useBookkeeping:(BOOL)arg7;
- (void)configSession:(id)arg0;
- (id)p_buildWithMultipleAudioTrack:(BOOL)arg0 range:(id)arg1 choosedtotalTimeRange:(id)arg2 isForPlayDisplay:(BOOL)arg3;
- (id)p_buildWithMultipleAudioTrack:(BOOL)arg0 range:(id)arg1 choosedtotalTimeRange:(id)arg2 isForException:(BOOL)arg3 isForPlayDisplay:(BOOL)arg4 compensateOriginalAssetRange:(BOOL)arg5 useBookkeeping:(BOOL)arg6;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })coveredIndexRangeWithStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 endTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (struct CGSize { double x0; double x1; })checkReturnSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setAudioCompositionTrackArray:(id)arg0;
- (void)setMutableComposition:(id)arg0;
- (struct CGSize { double x0; double x1; })targetSizeWithIsForPlayDisplay:(BOOL)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })entireTimeRangeForAsset:(id)arg0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })scaledDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 scale:(double)arg1;
- (id)audioCompositionTrackArray;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transformForAsset:(id)arg0 targetSize:(struct CGSize { double x0; double x1; })arg1;
- (id)initWithMaxDuration:(double)arg0 isSingleVideoMode:(BOOL)arg1 isLongVideoMode:(BOOL)arg2 croppingSize:(struct CGSize { double x0; double x1; })arg3 draftFolder:(id)arg4;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })scaleDurationForAsset:(id)arg0;
- (void)moveAssetFrom:(unsigned long long)arg0 to:(unsigned long long)arg1;
- (void)setClipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1;
- (void)setBookkeepingClipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1;
- (void)setInitialClipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 forAsset:(id)arg1;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })clipTimeRangeForAsset:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })bookkeepingClipTimeRangeForAsset:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })initialClipTimeRangeForAsset:(id)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })clipTimeRangeWithIndex:(unsigned long long)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })bookkeepingClipTimeRangeWithIndex:(unsigned long long)arg0;
- (void)setRotateType:(unsigned long long)arg0 forAsset:(id)arg1;
- (void)setVideoRotateType:(unsigned long long)arg0 forAsset:(id)arg1;
- (unsigned long long)getRotateTypeForAsset:(id)arg0;
- (void)setRate:(double)arg0 forAsset:(id)arg1;
- (double)rateWithAsset:(id)arg0;
- (id)getPlayerItem;
- (id)getPlayerItemWithBookkeepingRange;
- (id)getExportSessionWithRange:(id)arg0 isForException:(BOOL)arg1;
- (id)getExportSessionWithTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (id)getPassthroughExportSession;
- (void)cancelGetImages;
- (id)imageGeneratorArray;
- (struct CGSize { double x0; double x1; })croppingSize;
- (void)setIsFromLv:(BOOL)arg0;
- (id)metaData;
- (id)init;
- (void).cxx_destruct;
- (void)setAudioMix:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (id)queue;
- (void)setQueue:(id)arg0;
- (id)audioMix;
- (id)videoComposition;
- (void)setVideoComposition:(id)arg0;
- (id)mutableComposition;
- (BOOL)videoComposition:(id)arg0 shouldContinueValidatingAfterFindingInvalidValueForKey:(id)arg1;
- (BOOL)videoComposition:(id)arg0 shouldContinueValidatingAfterFindingEmptyTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (BOOL)videoComposition:(id)arg0 shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:(id)arg1;
- (BOOL)videoComposition:(id)arg0 shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:(id)arg1 layerInstruction:(id)arg2 asset:(id)arg3;
- (double)maxDuration;
- (void)removeAsset:(id)arg0;
- (void)setMaxDuration:(double)arg0;
- (id)orientationFromTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;

@end
