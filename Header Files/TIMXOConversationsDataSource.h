//
//     Generated by private class-dump
//

@class NSTimer, NSString, NSArray, TIMXOConversationFilterControl, NSMutableDictionary, TIMXOConversationsUnreadCountCalculator, NSMutableArray, TIMXProcessDuratiorMonitorModel, TIMXSDKInstance, NSCache;
@protocol TIMXMessageStoreProtocol, TIMXOConversationsDataSourceDelegate;

@interface TIMXOConversationsDataSource : NSObject <TIMXMessageStoreChangesObserver, TIMXOConversationsUnreadCountCalculatorDelegate> {
    BOOL _includeEmptyConversation;
    BOOL _hasMore;
    BOOL _needsRefresh;
    BOOL _refreshing;
    BOOL _containNoboxType;
    BOOL _canUseOneSqlToInquireUnreadCount;
    BOOL _shouldDemoteUnreadCount;
    long long _dataSourceFilterType;
    unsigned long long _totalUnreadNumberForUnmutedConversations;
    unsigned long long _totalUnreadNumberForMutedConversations;
    unsigned long long _totalUnreadNumberForMentionConversations;
    unsigned long long _totalCanDisplayUnreadNumberForMuteConversations;
    unsigned long long _totalAnotherUnreadNumberForConversations;
    unsigned long long _unreadCountV2;
    unsigned long long _unreadMentionedCountV2;
    id /* block */ _filterBlock;
    id<TIMXOConversationsDataSourceDelegate> _delegate;
    TIMXOConversationFilterControl *_filterControl;
    NSTimer *_refreshTimer;
    NSString *_refreshingToken;
    TIMXSDKInstance *_r;
    NSArray *_arrInboxType;
    long long _userIdWhenInit;
    id /* block */ _rawFilterBlock;
    long long _loadFirstLimit;
    long long _loadMoreLimit;
    NSArray *_currentConversations;
    NSMutableDictionary *_unreadCountInDBDict;
    NSMutableArray *_unreadMentionInDBArray;
    id<TIMXMessageStoreProtocol> _db;
    NSCache *_filterResultCache;
    long long _boxType;
    TIMXOConversationsUnreadCountCalculator *_unreadCountCalculator;
    TIMXProcessDuratiorMonitorModel *_totalUnreadCountMonitor;
    long long _boxTypeMask;
    long long _shouldNotContainedBoxTypeMask;
    long long _unreadNeglectMask;
    double _demoteUnreadCountTimestamp;
}

@property (nonatomic) BOOL needsRefresh;
@property (nonatomic) BOOL refreshing;
@property (retain) NSTimer *refreshTimer;
@property (copy) NSString *refreshingToken;
@property (retain, nonatomic) TIMXOConversationFilterControl *filterControl;
@property (retain, nonatomic) NSArray *arrInboxType;
@property (nonatomic) unsigned long long totalUnreadNumberForUnmutedConversations;
@property (nonatomic) unsigned long long totalUnreadNumberForMutedConversations;
@property (nonatomic) unsigned long long totalUnreadNumberForMentionConversations;
@property (nonatomic) unsigned long long totalAnotherUnreadNumberForConversations;
@property (nonatomic) unsigned long long totalCanDisplayUnreadNumberForMuteConversations;
@property (nonatomic) unsigned long long unreadCountV2;
@property (nonatomic) unsigned long long unreadMentionedCountV2;
@property (nonatomic) BOOL hasMore;
@property (readonly, nonatomic) long long userIdWhenInit;
@property (copy, nonatomic) id /* block */ filterBlock;
@property (copy, nonatomic) id /* block */ rawFilterBlock;
@property (nonatomic) BOOL includeEmptyConversation;
@property (nonatomic) long long loadFirstLimit;
@property (nonatomic) long long loadMoreLimit;
@property (copy, nonatomic) NSArray *currentConversations;
@property (retain, nonatomic) NSMutableDictionary *unreadCountInDBDict;
@property (retain, nonatomic) NSMutableArray *unreadMentionInDBArray;
@property (retain, nonatomic) id<TIMXMessageStoreProtocol> db;
@property (retain, nonatomic) NSCache *filterResultCache;
@property (nonatomic) long long boxType;
@property (retain, nonatomic) TIMXOConversationsUnreadCountCalculator *unreadCountCalculator;
@property (retain, nonatomic) TIMXProcessDuratiorMonitorModel *totalUnreadCountMonitor;
@property (nonatomic) long long boxTypeMask;
@property (nonatomic) long long shouldNotContainedBoxTypeMask;
@property (nonatomic) long long unreadNeglectMask;
@property (nonatomic) BOOL containNoboxType;
@property (nonatomic) BOOL canUseOneSqlToInquireUnreadCount;
@property (nonatomic) BOOL shouldDemoteUnreadCount;
@property (nonatomic) double demoteUnreadCountTimestamp;
@property (nonatomic) long long dataSourceFilterType;
@property (weak, nonatomic) id<TIMXOConversationsDataSourceDelegate> delegate;
@property (readonly, copy, nonatomic) NSArray *currentConversationIdentifiers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)compareConversation:(id)arg0 with:(id)arg1;

- (void)loadSessions;
- (unsigned long long)totalUnreadNumberForUnmutedConversations;
- (unsigned long long)totalUnreadNumberForMutedConversations;
- (id)currentConversationIdentifiers;
- (void)setArrInboxType:(id)arg0;
- (void)setBoxType:(long long)arg0;
- (void)setTotalUnreadNumberForMutedConversations:(unsigned long long)arg0;
- (void)setTotalUnreadNumberForUnmutedConversations:(unsigned long long)arg0;
- (BOOL)includeEmptyConversation;
- (void)setIncludeEmptyConversation:(BOOL)arg0;
- (void)onConversationsCreated:(id)arg0;
- (void)onConversationsUpdated:(id)arg0;
- (void)onConversationsDeleted:(id)arg0;
- (void)onConversationCleared:(id)arg0;
- (long long)boxType;
- (void)setUnreadCountInDBDict:(id)arg0;
- (void)setUnreadMentionInDBArray:(id)arg0;
- (void)setFilterResultCache:(id)arg0;
- (void)setRawFilterBlock:(id /* block */)arg0;
- (void)setRefreshingToken:(id)arg0;
- (void)_refreshWithToken:(id)arg0;
- (id)refreshingToken;
- (id)arrInboxType;
- (BOOL)shouldDealWithBoxConversation:(id)arg0;
- (id /* block */)rawFilterBlock;
- (BOOL)shouldFilterConversation:(id)arg0;
- (long long)customUnreadCountForConversation:(id)arg0;
- (long long)anotherUnreadCountForConversation:(id)arg0;
- (void)setTotalUnreadNumberForMentionConversations:(unsigned long long)arg0;
- (void)setTotalAnotherUnreadNumberForConversations:(unsigned long long)arg0;
- (id)unreadCountInDBDict;
- (id)unreadMentionInDBArray;
- (void)saveConversationsUnreads:(id)arg0;
- (void)saveConversationsUnreadMentions:(id)arg0;
- (void)printLoadedConvListLogInfoWithConvList:(id)arg0;
- (void)dealWithUpdate:(id)arg0 updateType:(long long)arg1;
- (id)filterResultCache;
- (id)filteredConversations:(id)arg0;
- (void)loadRemainingSessions;
- (void)invalidConversationFilterResult:(id)arg0;
- (id)sortedIdentifiersWithAdditionalItems:(id)arg0;
- (unsigned long long)totalUnreadNumberForMentionConversations;
- (unsigned long long)totalAnotherUnreadNumberForConversations;
- (id)filterControl;
- (void)setFilterControl:(id)arg0;
- (unsigned long long)totalCanDisplayUnreadNumberForMuteConversations;
- (long long)boxTypeMask;
- (void)setBoxTypeMask:(long long)arg0;
- (long long)unreadNeglectMask;
- (void)setUnreadNeglectMask:(long long)arg0;
- (long long)shouldNotContainedBoxTypeMask;
- (void)setShouldNotContainedBoxTypeMask:(long long)arg0;
- (void)setLoadMoreLimit:(long long)arg0;
- (void)setDataSourceFilterType:(long long)arg0;
- (BOOL)canUseOneSqlToInquireUnreadCount;
- (void)invalidConversationFilterResult:(id)arg0 refresh:(BOOL)arg1;
- (void)refreshDataSourceConversations:(id)arg0;
- (unsigned long long)unreadCountV2;
- (void)setCanUseOneSqlToInquireUnreadCount:(BOOL)arg0;
- (void)setContainNoboxType:(BOOL)arg0;
- (void)setShouldDemoteUnreadCount:(BOOL)arg0;
- (void)setDemoteUnreadCountTimestamp:(double)arg0;
- (double)demoteUnreadCountTimestamp;
- (void)onMessagesCreated:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2 context:(id)arg3;
- (void)onMessagesUpdated:(id)arg0 belongingConversationMap:(id)arg1 updateReasonMap:(id)arg2;
- (void)onMessagesDeleted:(id)arg0 belongingConversationMap:(id)arg1 reason:(id)arg2 context:(id)arg3;
- (BOOL)containNoboxType;
- (BOOL)shouldDemoteUnreadCount;
- (long long)dataSourceFilterType;
- (unsigned long long)unreadMentionedCountV2;
- (BOOL)isBehaviorSameAsGeneralBoxType:(long long)arg0;
- (long long)loadMoreLimit;
- (void)setLoadFirstLimit:(long long)arg0;
- (long long)userIdWhenInit;
- (void)setUnreadCountCalculator:(id)arg0;
- (BOOL)failAssertIfDouyinTarget;
- (long long)loadFirstLimit;
- (void)p_updateCurrentConversations:(id)arg0 notifyWithUpdate:(id)arg1 updateReason:(long long)arg2;
- (BOOL)shouldFilterConversation:(id)arg0 useCache:(BOOL)arg1;
- (void)removeDBUnreadsConversationIdentifiers:(id)arg0;
- (void)setTotalCanDisplayUnreadNumberForMuteConversations:(unsigned long long)arg0;
- (void)p_async_on_unreadCount_queue:(id /* block */)arg0;
- (id)unreadCountCalculator;
- (void)removeFilterCacheResultWithIdentifilers:(id)arg0;
- (BOOL)shouldFilterConversation:(id)arg0 useCache:(BOOL)arg1 filterReason:(id *)arg2;
- (id)p_filteredConversations_DouYinIMP:(id)arg0;
- (id)p_filteredConversations_DefaultIMP:(id)arg0;
- (BOOL)p_shouldDealWithBoxConversation_DouYinIMP:(id)arg0;
- (BOOL)p_shouldDealWithBoxConversation_DefaultIMP:(id)arg0;
- (BOOL)canUseBoxMaskTypeToFilterWithBoxType:(long long)arg0;
- (BOOL)p_shouldDealWithConversationForUnreadFeedSkylightBoxType:(id)arg0;
- (void)setUnreadCountV2:(unsigned long long)arg0;
- (void)setUnreadMentionedCountV2:(unsigned long long)arg0;
- (id)totalUnreadCountMonitor;
- (BOOL)unreadCountCalculator:(id)arg0 shouldTakeIntoUnreadCountCalculation:(id)arg1;
- (void)unreadCountCalculator:(id)arg0 unreadCountChanged:(int)arg1 shouldAddToImTotalUnreadCount:(BOOL)arg2;
- (void)unreadCountCalculator:(id)arg0 mentionedCountChanged:(int)arg1;
- (void)unreadCountCalculator:(id)arg0 totalUnreadCountFirstCaculatedWithTotalUnreadCount:(int)arg1;
- (void)checkDatabaseValidWithCurrentConversationCount:(long long)arg0;
- (id)p_cachedConversationForConversationID:(id)arg0;
- (void)setTotalUnreadCountMonitor:(id)arg0;
- (id)itemAtIndex:(unsigned long long)arg0;
- (unsigned long long)numberOfItems;
- (void)setDb:(id)arg0;
- (id)initWithContext:(id)arg0;
- (void)refresh;
- (id)db;
- (void).cxx_destruct;
- (id /* block */)filterBlock;
- (id)delegate;
- (void)setHasMore:(BOOL)arg0;
- (BOOL)hasMore;
- (void)setDelegate:(id)arg0;
- (BOOL)needsRefresh;
- (BOOL)refreshing;
- (void)setRefreshing:(BOOL)arg0;
- (id)currentConversations;
- (void)setCurrentConversations:(id)arg0;
- (void)setFilterBlock:(id /* block */)arg0;
- (void)setNeedsRefresh:(BOOL)arg0;
- (id)refreshTimer;
- (void)setRefreshTimer:(id)arg0;

@end
