//
//     Generated by private class-dump
//

@class BDPMapKitMapPointAnnotation, UIImageView, BDPMapKitMapLabelView, NSString, BDPMapKitMapCalloutView;
@protocol BDPMapKitAnnotationViewCallbackProtocol;

@interface BDPMapKitMapImplAnnotationView : MKAnnotationView <BDPMapKitMapCalloutViewDelegate, BDPMapKitMapLabelViewDelegate> {
    BOOL _markerSelected;
    UIImageView *_imageView;
    BDPMapKitMapPointAnnotation *_mapPointAnnotation;
    id<BDPMapKitAnnotationViewCallbackProtocol> _delegate;
    UIImageView *_defaultMarkerShadowImageView;
    BDPMapKitMapCalloutView *_calloutView;
    BDPMapKitMapLabelView *_labelView;
    struct CGPoint { double x; double y; } _calloutAnchorOffset;
    struct CGPoint { double x; double y; } _labelAnchorOffset;
    struct CGPoint { double x; double y; } _markerRotateOffset;
}

@property (retain, nonatomic) BDPMapKitMapPointAnnotation *mapPointAnnotation;
@property (weak, nonatomic) id<BDPMapKitAnnotationViewCallbackProtocol> delegate;
@property (nonatomic) BOOL markerSelected;
@property (weak, nonatomic) UIImageView *defaultMarkerShadowImageView;
@property (weak, nonatomic) BDPMapKitMapCalloutView *calloutView;
@property (weak, nonatomic) BDPMapKitMapLabelView *labelView;
@property (weak, nonatomic) UIImageView *imageView;
@property (nonatomic) struct CGPoint { double x; double y; } calloutAnchorOffset;
@property (nonatomic) struct CGPoint { double x; double y; } labelAnchorOffset;
@property (nonatomic) struct CGPoint { double x; double y; } markerRotateOffset;
@property (readonly, nonatomic) double realMarkerWidth;
@property (readonly, nonatomic) double realMarkerHeight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)layerClass;

- (void)tapGestureAction:(id)arg0;
- (void)mapImplCalloutViewDidClicked:(id)arg0;
- (void)adjustMarkerIsSelected:(id)arg0;
- (void)setMapPointAnnotation:(id)arg0;
- (id)mapPointAnnotation;
- (id)calloutView;
- (void)setCalloutView:(id)arg0;
- (BOOL)markerSelected;
- (void)setCalloutAnchorOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)setMarkerRotateOffset:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)p_isAlwaysShowCallout;
- (void)setLabelAnchorOffset:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })markerRotateOffset;
- (id)defaultMarkerShadowImageView;
- (void)setDefaultMarkerShadowImageView:(id)arg0;
- (struct CGPoint { double x0; double x1; })calloutAnchorOffset;
- (struct CGPoint { double x0; double x1; })labelAnchorOffset;
- (void)setMarkerSelected:(BOOL)arg0;
- (void)p_resetProperty;
- (void)mapImplLabelViewDidClicked:(id)arg0;
- (id)initWithMapPointAnnotation:(id)arg0 reuseIdentifier:(id)arg1 delegate:(id)arg2;
- (void)updateStyleWithMapPointAnnotation:(id)arg0 image:(id)arg1 isDefault:(BOOL)arg2;
- (double)realMarkerWidth;
- (double)realMarkerHeight;
- (void).cxx_destruct;
- (id)imageView;
- (void)setImageView:(id)arg0;
- (id)delegate;
- (void)prepareForReuse;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (id)labelView;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (void)rotateByRadians:(double)arg0;
- (void)setLabelView:(id)arg0;

@end
