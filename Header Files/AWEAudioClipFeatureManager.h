//
//     Generated by private class-dump
//

@class ACCMusicTrimViewSnapShootModel, AVPlayer, NSDictionary, NSString, UIViewController;
@protocol ACCMusicCutPanelViewProtocol, ACCMusicModelProtocol;

@interface AWEAudioClipFeatureManager : NSObject <ACCMusicCutPanelViewDelegate> {
    BOOL _showingAudioClipView;
    BOOL _usedForMusicSearch;
    BOOL _isImageAlbumMode;
    BOOL _canRepeatCountChange;
    BOOL _isMusicRangeEdited;
    BOOL _initialUseSuggestStatus;
    BOOL _initialMusicLoopStatus;
    BOOL _initialUseOriginMusicStatus;
    id /* block */ _audioClipDoneBlock;
    id /* block */ _audioClipCancelBlock;
    id /* block */ _audioRangeChangeBlock;
    NSDictionary *_audioClipCommonTrackDic;
    NSDictionary *_audioClipInfoTrackDic;
    id<ACCMusicModelProtocol> _music;
    UIViewController *_controller;
    AVPlayer *_internalPlayer;
    double _totalDuration;
    double _videoMaxDuration;
    unsigned long long _repeatPlayCount;
    double _totalPlayTime;
    ACCMusicTrimViewSnapShootModel *_initialImageMusicTrimStatusModel;
    long long _initialRepeatCount;
    id<ACCMusicCutPanelViewProtocol> _musicCutPanelView;
    double _cutMusicPanelShowTime;
    struct _HTSAudioRange { double location; double length; } _previousClipRange;
}

@property (weak, nonatomic) UIViewController *controller;
@property (retain, nonatomic) AVPlayer *internalPlayer;
@property (nonatomic) double totalDuration;
@property (nonatomic) double videoMaxDuration;
@property (nonatomic) unsigned long long repeatPlayCount;
@property (nonatomic) double totalPlayTime;
@property (nonatomic) BOOL canRepeatCountChange;
@property (nonatomic) BOOL isMusicRangeEdited;
@property (nonatomic) struct _HTSAudioRange { double location; double length; } previousClipRange;
@property (nonatomic) BOOL initialUseSuggestStatus;
@property (nonatomic) BOOL initialMusicLoopStatus;
@property (nonatomic) BOOL initialUseOriginMusicStatus;
@property (retain, nonatomic) ACCMusicTrimViewSnapShootModel *initialImageMusicTrimStatusModel;
@property (nonatomic) long long initialRepeatCount;
@property (retain, nonatomic) id<ACCMusicCutPanelViewProtocol> musicCutPanelView;
@property (nonatomic) double cutMusicPanelShowTime;
@property (copy, nonatomic) id /* block */ audioClipDoneBlock;
@property (copy, nonatomic) id /* block */ audioClipCancelBlock;
@property (copy, nonatomic) id /* block */ audioRangeChangeBlock;
@property (copy, nonatomic) NSDictionary *audioClipCommonTrackDic;
@property (copy, nonatomic) NSDictionary *audioClipInfoTrackDic;
@property (nonatomic, getter=isShowingAudioClipView) BOOL showingAudioClipView;
@property (retain, nonatomic) id<ACCMusicModelProtocol> music;
@property (nonatomic) BOOL usedForMusicSearch;
@property (nonatomic) BOOL isImageAlbumMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (double)totalPlayTime;
- (void)didClickConfirmButton;
- (void)setTotalPlayTime:(double)arg0;
- (void)didClickCancelButton;
- (void)resetPanelView;
- (double)videoMaxDuration;
- (BOOL)isImageAlbumMode;
- (void)setIsImageAlbumMode:(BOOL)arg0;
- (void)setAudioClipCommonTrackDic:(id)arg0;
- (void)setAudioClipInfoTrackDic:(id)arg0;
- (void)addAudioCLipViewForViewController:(id)arg0;
- (void)configPlayerWithMusic:(id)arg0;
- (void)showMusicCutPanelViewWithConfigModel:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)shouldShowMusicLoopComponent;
- (void)setAudioClipDoneBlock:(id /* block */)arg0;
- (id)internalPlayer;
- (void)setInternalPlayer:(id)arg0;
- (void)didClickSuggestSwitch;
- (void)didClickLoopSwitch;
- (void)didClickUseOriginMusicSwitch;
- (BOOL)isMusicLoopOpen;
- (void)userDidFinishScrollAudioWaveView;
- (BOOL)isForbidLoopForLongVideo;
- (BOOL)initialMusicLoopStatus;
- (BOOL)initialUseOriginMusicStatus;
- (id)initialImageMusicTrimStatusModel;
- (long long)initialRepeatCount;
- (void)setAudioClipCancelBlock:(id /* block */)arg0;
- (void)setAudioRangeChangeBlock:(id /* block */)arg0;
- (BOOL)isShowingAudioClipView;
- (void)updateAudioClipViewWithTime:(double)arg0;
- (void)userDidFinishPanAudioHandler;
- (void)setUsedForMusicSearch:(BOOL)arg0;
- (BOOL)usedForMusicSearch;
- (void)p_resetMusicLoopParameter;
- (void)setShowingAudioClipView:(BOOL)arg0;
- (id)musicCutPanelView;
- (void)setVideoMaxDuration:(double)arg0;
- (void)setInitialUseSuggestStatus:(BOOL)arg0;
- (void)setInitialMusicLoopStatus:(BOOL)arg0;
- (void)setInitialUseOriginMusicStatus:(BOOL)arg0;
- (void)setInitialImageMusicTrimStatusModel:(id)arg0;
- (void)setInitialRepeatCount:(long long)arg0;
- (BOOL)shouldShowUseOriginMusicSwitch;
- (void)setMusicCutPanelView:(id)arg0;
- (void)setPreviousClipRange:(struct _HTSAudioRange { double x0; double x1; })arg0;
- (BOOL)shouldShowMusicSuggestViewWithCutDuration:(double)arg0 totalDuration:(double)arg1;
- (BOOL)initialUseSuggestStatus;
- (void)setCutMusicPanelShowTime:(double)arg0;
- (id /* block */)audioRangeChangeBlock;
- (void)p_replayBarFromRangeLocation;
- (void)p_updateAudioWaveViewAndPlayerProgress:(double)arg0;
- (void)setRepeatPlayCount:(unsigned long long)arg0;
- (void)setCanRepeatCountChange:(BOOL)arg0;
- (id)cutMusicPanelSuperView;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })getBarStartLocation;
- (BOOL)canRepeatCountChange;
- (unsigned long long)repeatPlayCount;
- (BOOL)isCurrentTimeReachEndOfClipedFragment;
- (double)cutMusicPanelShowTime;
- (id)audioClipCommonTrackDic;
- (BOOL)isMusicRangeEdited;
- (id)audioClipInfoTrackDic;
- (void)p_clearState;
- (struct _HTSAudioRange { double x0; double x1; })previousClipRange;
- (void)trackAfterClickCancelButton;
- (id /* block */)audioClipCancelBlock;
- (void)trackAfterClickConfirmButton;
- (id /* block */)audioClipDoneBlock;
- (void)setIsMusicRangeEdited:(BOOL)arg0;
- (void)trackAfterClickMusicLoopSwitch:(BOOL)arg0;
- (void)trackAfterClickUseOriginMusicSwitch:(BOOL)arg0;
- (id)music;
- (void)setController:(id)arg0;
- (void)applicationWillResignActive:(id)arg0;
- (double)totalDuration;
- (id)init;
- (void).cxx_destruct;
- (void)setMusic:(id)arg0;
- (id)controller;
- (void)applicationDidBecomeActive:(id)arg0;
- (void)dealloc;
- (void)setTotalDuration:(double)arg0;

@end
