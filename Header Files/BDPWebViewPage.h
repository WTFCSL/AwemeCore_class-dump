//
//     Generated by private class-dump
//

@class NSMutableDictionary, BDPTimingEvent, NSDictionary, NSMutableArray, BDPPageCore, UIView, BDPWebViewPagePerformanceMonitor, NSString, BDPPromise, BDPSkeletonLoader, NSTimer, BDPWebViewPageFramePrefetcher, BDPUniqueID, BDPPageConfig, UIScrollView, BDPSTLQueue;
@protocol BDPPageDelegate;

@interface BDPWebViewPage : BDPBridgeWebView <BDPWebViewImplInterface, WKNavigationDelegate, BDPNetworkResponseDiagnoseProtocol, BDPPageProtocol> {
    BOOL _terminated;
    BOOL _isHasWebView;
    BOOL _didLoadFrameScript;
    BOOL _isReusedPage;
    BOOL _pageFramePreloading;
    BOOL _preloadingFramePagesWithReader;
    BOOL _preloadBeforeLaunch;
    BOOL _remoteDebugScriptLoaded;
    BOOL _needRecoverWhenTerminated;
    BOOL _postReadyEvent;
    BOOL _pageIsActive;
    BOOL _enableScrollObserver;
    BOOL _hasScrollEqualTimestamp;
    BOOL _hasScrollLargeTimestamp;
    BOOL _hasReportedTimestamp;
    int _terminatedCount;
    int _reuseCount;
    int _routeCount;
    NSString *nextPagePath;
    NSString *nextRouteType;
    id<BDPPageDelegate> _pageDelegate;
    id /* block */ _publishCallBack;
    NSString *_appPreloadIdentifier;
    NSString *lastErrorMessage;
    BDPPageCore *_pageCore;
    BDPPromise *_htmlPromise;
    NSString *_caller;
    long long _lastRequestTime;
    unsigned long long _interceptorType;
    BDPSTLQueue *_subscribePendingQueue;
    BDPPromise *_industrySDKPromise;
    BDPPromise *_dependencyPluginPageFramePromise;
    BDPPromise *_pageFramePromise;
    BDPPromise *_extraPageFramePromise;
    BDPPromise *_pathFramePromise;
    BDPPromise *_extensionFramePromise;
    NSMutableDictionary *_loadedPageFrames;
    NSMutableArray *_unloadPageFrames;
    BDPTimingEvent *_loadTimingEvent;
    BDPWebViewPagePerformanceMonitor *_perfMonitor;
    id _collectPointsNotifToken;
    NSString *_pageFrameBasePath;
    BDPWebViewPageFramePrefetcher *_pageFramePrefetcher;
    NSString *_renderType;
    NSMutableArray *_pendingDevtoolsInstructions;
    unsigned long long _pageFramePreloadMode;
    NSString *_routeType;
    BDPSkeletonLoader *_skeletonLoader;
    NSDictionary *_outerDestoryParam;
    unsigned long long _status;
    unsigned long long _spStatus;
    NSString *_industrySDKVersion;
    long long _industryLoadStage;
    NSDictionary *_onReadyEnvironmentVariables;
    NSDictionary *_tmpOnAppRouteParams;
    NSTimer *_collectionTimer;
    NSString *_scrollViewToken;
    double _scrollEqualTimestamp;
    double _scrollLargeTimestamp;
    double _childScrollTimestamp;
}

@property (nonatomic) long long bdp_scrollOffsetGap;
@property (nonatomic) BOOL bdp_enableNavBarStyleAutoChange;
@property (readonly, nonatomic) long long bdp_curWebScrollStatus;
@property (readonly, nonatomic) double bdp_scrollGapPercentage;
@property (copy, nonatomic) id /* block */ bdp_updateCallBack;
@property (retain, nonatomic) UIView *bdp_topBackgroundView;
@property (retain, nonatomic) UIView *bdp_bottomBackgroundView;
@property (nonatomic) long long bdp_videoAdPlayTime;
@property (nonatomic) BOOL bdp_videoComponentUsed;
@property (nonatomic) BOOL bdp_isChatPage;
@property (nonatomic) BOOL bdp_isAdUsed;
@property (nonatomic) BOOL bdp_imageUploadUsed;
@property (nonatomic) long long bdp_videoAdPlayCount;
@property (nonatomic) long long bdp_videoAdPlayFinishCount;
@property (nonatomic) unsigned long long interceptorType;
@property (retain, nonatomic) BDPSTLQueue *subscribePendingQueue;
@property (retain, nonatomic) BDPPageCore *pageCore;
@property (retain, nonatomic) BDPPromise *htmlPromise;
@property (retain, nonatomic) BDPPromise *industrySDKPromise;
@property (retain, nonatomic) BDPPromise *dependencyPluginPageFramePromise;
@property (retain, nonatomic) BDPPromise *pageFramePromise;
@property (retain, nonatomic) BDPPromise *extraPageFramePromise;
@property (retain, nonatomic) BDPPromise *pathFramePromise;
@property (retain, nonatomic) BDPPromise *extensionFramePromise;
@property (retain, nonatomic) NSMutableDictionary *loadedPageFrames;
@property (retain, nonatomic) NSMutableArray *unloadPageFrames;
@property (retain, nonatomic) BDPTimingEvent *loadTimingEvent;
@property (retain, nonatomic) BDPWebViewPagePerformanceMonitor *perfMonitor;
@property (weak, nonatomic) id collectPointsNotifToken;
@property (copy, nonatomic) NSString *pageFrameBasePath;
@property (nonatomic) long long lastRequestTime;
@property (nonatomic) int terminatedCount;
@property (nonatomic) int reuseCount;
@property (retain, nonatomic) BDPWebViewPageFramePrefetcher *pageFramePrefetcher;
@property (nonatomic, getter=isPageFramePreloading) BOOL pageFramePreloading;
@property (nonatomic, getter=isPreloadingFramePagesWithReader) BOOL preloadingFramePagesWithReader;
@property (nonatomic) BOOL preloadBeforeLaunch;
@property (nonatomic) BOOL remoteDebugScriptLoaded;
@property (copy, nonatomic) NSString *renderType;
@property (retain, nonatomic) NSMutableArray *pendingDevtoolsInstructions;
@property (nonatomic) unsigned long long pageFramePreloadMode;
@property (copy, nonatomic) NSString *routeType;
@property (retain, nonatomic) BDPSkeletonLoader *skeletonLoader;
@property (nonatomic) BOOL needRecoverWhenTerminated;
@property (retain, nonatomic) NSDictionary *outerDestoryParam;
@property (nonatomic) unsigned long long status;
@property (nonatomic) unsigned long long spStatus;
@property (copy, nonatomic) NSString *industrySDKVersion;
@property (nonatomic) long long industryLoadStage;
@property (copy, nonatomic) NSDictionary *onReadyEnvironmentVariables;
@property (nonatomic) BOOL postReadyEvent;
@property (nonatomic) int routeCount;
@property (nonatomic) BOOL pageIsActive;
@property (copy, nonatomic) NSDictionary *tmpOnAppRouteParams;
@property (retain, nonatomic) NSTimer *collectionTimer;
@property (nonatomic) BOOL enableScrollObserver;
@property (copy, nonatomic) NSString *scrollViewToken;
@property (nonatomic) BOOL hasScrollEqualTimestamp;
@property (nonatomic) double scrollEqualTimestamp;
@property (nonatomic) BOOL hasScrollLargeTimestamp;
@property (nonatomic) double scrollLargeTimestamp;
@property (nonatomic) double childScrollTimestamp;
@property (nonatomic) BOOL hasReportedTimestamp;
@property (copy, nonatomic) NSString *caller;
@property (nonatomic, getter=isTerminated) BOOL terminated;
@property (nonatomic) BOOL isHasWebView;
@property (nonatomic) BOOL isSubscribeReady;
@property (readonly, nonatomic) BOOL didLoadFrameScript;
@property (nonatomic) BOOL isReusedPage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) BDPUniqueID *uniqueID;
@property (nonatomic) long long appPageID;
@property (nonatomic) BOOL isAppPageReady;
@property (nonatomic) BOOL isPreloadPage;
@property (nonatomic) BOOL isPreloadFrame;
@property (readonly, nonatomic) BOOL isDomReady;
@property (retain, nonatomic) BDPPageConfig *pageConfig;
@property (copy, nonatomic) id /* block */ publishCallBack;
@property (weak, nonatomic) id<BDPPageDelegate> pageDelegate;
@property (copy, nonatomic) NSString *path;
@property (copy, nonatomic) NSString *originPath;
@property (copy, nonatomic) NSString *nextRouteType;
@property (copy, nonatomic) NSString *nextPagePath;
@property (readonly, copy, nonatomic) NSString *trackerRenderType;
@property (copy, nonatomic) NSString *queryString;
@property (copy, nonatomic) NSString *openType;
@property (copy, nonatomic) NSString *appPreloadIdentifier;
@property (copy, nonatomic) NSString *lastErrorMessage;
@property (readonly, nonatomic) UIScrollView *rootScrollView;
@property (readonly, nonatomic) UIView *topBackgroundView;
@property (readonly, nonatomic) UIView *bottomBackgroundView;
@property (nonatomic) long long scrollOffsetGap;
@property (nonatomic) BOOL enableNavBarStyleAutoChange;
@property (readonly, nonatomic) long long curWebScrollStatus;
@property (readonly, nonatomic) double scrollGapPercentage;
@property (copy, nonatomic) id /* block */ updateCallBack;

+ (void)bootstrapLaunch;
+ (BOOL)canPreload;
+ (id)createPageWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
+ (BOOL)canPreloadFrame;

- (id)renderType;
- (id)openType;
- (void)setOpenType:(id)arg0;
- (id)bottomBackgroundView;
- (long long)lastRequestTime;
- (void)setLastRequestTime:(long long)arg0;
- (void)setupGlobalConfig;
- (void)setPublishCallBack:(id /* block */)arg0;
- (void)evaluateScript:(id)arg0 completion:(id /* block */)arg1;
- (void)setIsSubscribeReady:(BOOL)arg0;
- (id)loadTimingEvent;
- (void)setLoadTimingEvent:(id)arg0;
- (void)webView:(id)arg0 invoke:(id)arg1 completion:(id /* block */)arg2;
- (void)callbackInvoke:(long long)arg0 data:(id)arg1;
- (id /* block */)publishCallBack;
- (void)webView:(id)arg0 publish:(id)arg1 completion:(id /* block */)arg2;
- (void)webView:(id)arg0 loadScripts:(id)arg1 completion:(id /* block */)arg2;
- (void)webView:(id)arg0 onDocumentReady:(id)arg1 completion:(id /* block */)arg2;
- (int)terminatedCount;
- (void)setTerminatedCount:(int)arg0;
- (void)setSubscribePendingQueue:(id)arg0;
- (BOOL)isSubscribeReady;
- (id)subscribePendingQueue;
- (void)executeAllPendingSubscribe;
- (void)subscribeHandler:(id)arg0 data:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)isUsing;
- (void)setPerfMonitor:(id)arg0;
- (void)pageWillAppear;
- (id)windowConfig;
- (id)perfMonitor;
- (void)setupPlugins;
- (long long)appPageID;
- (id)getOnAppRouteParams:(id)arg0;
- (void)setupUserAgent;
- (void)setupDebugLabelIfNeeded;
- (void)addSubscribeHandlerToPendingQueue:(id)arg0 data:(id)arg1 completion:(id /* block */)arg2;
- (void)subscribeDirectly:(id)arg0 data:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)isFPPage;
- (void)reportPreloadUsageWithIsStartPage:(BOOL)arg0;
- (void)onDestoryParam:(id)arg0;
- (void)removePageObserver;
- (id)rootScrollView;
- (BOOL)enableNavBarAutoChangeIfNeed;
- (void)setUpdateCallBack:(id /* block */)arg0;
- (void)pageDidDisAppear;
- (BOOL)navBarItemColorShouldReverse;
- (double)scrollGapPercentage;
- (BOOL)isHasWebView;
- (void)setupPageObserver;
- (id)trackerRenderType;
- (void)readyToLoadFiles;
- (void)registerPullToRefresh;
- (void)enablePullToRefresh;
- (void)onAppRouteWithParams:(id)arg0;
- (void)onLineUpWithParams:(id)arg0;
- (id)nextPagePath;
- (void)setNextPagePath:(id)arg0;
- (id)nextRouteType;
- (void)setNextRouteType:(id)arg0;
- (BOOL)isDomReady;
- (long long)pageSkeletonState;
- (void)preparePageAfterReused;
- (void)setIsPreloadPage:(BOOL)arg0;
- (void)setupAppPageWithUniqueID:(id)arg0;
- (BOOL)isAppPageReady;
- (void)preloadFrameWithReader:(id)arg0 startPath:(id)arg1 completion:(id /* block */)arg2;
- (void)setFPPage:(BOOL)arg0;
- (void)logWebviewRequestResponse:(id)arg0 withError:(id)arg1;
- (void)setAppPageID:(long long)arg0;
- (void)setIsAppPageReady:(BOOL)arg0;
- (BOOL)isPreloadPage;
- (void)setIsHasWebView:(BOOL)arg0;
- (BOOL)isPreloadFrame;
- (void)setIsPreloadFrame:(BOOL)arg0;
- (id)appPreloadIdentifier;
- (void)setAppPreloadIdentifier:(id)arg0;
- (void)setLastErrorMessage:(id)arg0;
- (void)evaluateDevtoolsInstruction:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)hideLoadingWhenSkeletonDismiss;
- (void)clearScroll;
- (void)clearPullRefresh;
- (void)clearNaviBarAdaptor;
- (long long)scrollOffsetGap;
- (void)setScrollOffsetGap:(long long)arg0;
- (BOOL)enableNavBarStyleAutoChange;
- (void)setEnableNavBarStyleAutoChange:(BOOL)arg0;
- (long long)curWebScrollStatus;
- (id /* block */)updateCallBack;
- (void)willRecycle;
- (void)willReuse;
- (BOOL)canRecycle;
- (int)routeCount;
- (void)setRouteCount:(int)arg0;
- (long long)bdp_videoAdPlayCount;
- (long long)bdp_videoAdPlayFinishCount;
- (void)gatherDiagnoseInfo:(id)arg0 triggerType:(id)arg1;
- (void)reportResponseJsonString:(id)arg0 appID:(id)arg1 urlStr:(id)arg2 dataLength:(long long)arg3 pagePath:(id)arg4;
- (void)setOuterDestoryParam:(id)arg0;
- (id)outerDestoryParam;
- (unsigned long long)interceptorType;
- (void)setBdp_videoComponentUsed:(BOOL)arg0;
- (void)setBdp_isChatPage:(BOOL)arg0;
- (void)setBdp_isAdUsed:(BOOL)arg0;
- (void)setBdp_imageUploadUsed:(BOOL)arg0;
- (id)onReadyEnvironmentVariables;
- (void)setOnReadyEnvironmentVariables:(id)arg0;
- (long long)bdp_videoAdPlayTime;
- (BOOL)bdp_isAdUsed;
- (BOOL)bdp_videoComponentUsed;
- (BOOL)bdp_imageUploadUsed;
- (BOOL)bdp_isChatPage;
- (id)pageCore;
- (BOOL)showSkeletonWithLoading;
- (id)p_diagnosePointsWithName:(id)arg0 diagnoseType:(id)arg1 params:(id)arg2;
- (long long)bdp_scrollOffsetGap;
- (BOOL)bdp_enableNavBarStyleAutoChange;
- (long long)bdp_curWebScrollStatus;
- (double)bdp_scrollGapPercentage;
- (id /* block */)bdp_updateCallBack;
- (void)setBdp_scrollOffsetGap:(long long)arg0;
- (void)setBdp_enableNavBarStyleAutoChange:(BOOL)arg0;
- (void)setBdp_updateCallBack:(id /* block */)arg0;
- (BOOL)bdp_enableNavBarAutoChangeIfNeed;
- (BOOL)bdp_navBarItemColorShouldReverse;
- (void)bdp_clearNaviBarAdaptor;
- (void)bdp_enablePullToRefresh;
- (void)bdp_registerPullToRefresh;
- (void)bdp_clearPullRefresh;
- (void)setBdp_topBackgroundView:(id)arg0;
- (void)setBdp_bottomBackgroundView:(id)arg0;
- (id)bdp_bottomBackgroundView;
- (id)bdp_topBackgroundView;
- (id)bdp_pageObserver;
- (void)bdp_removePageObserver;
- (void)bdp_setupPageObserver;
- (void)bdp_clearScroll;
- (void)setBdp_videoAdPlayTime:(long long)arg0;
- (void)setBdp_videoAdPlayCount:(long long)arg0;
- (void)setBdp_videoAdPlayFinishCount:(long long)arg0;
- (void)resetUserFeatureStatus;
- (void)setInterceptorType:(unsigned long long)arg0;
- (id)pageFrameBasePath;
- (void)eventPageLoadResult:(id)arg0 errorMsg:(id)arg1;
- (id)collectPointsNotifToken;
- (id)statusParamDic;
- (id)htmlPromise;
- (id)dependencyPluginPageFramePromise;
- (id)pageFramePromise;
- (id)extraPageFramePromise;
- (id)pathFramePromise;
- (unsigned long long)spStatus;
- (void)tryLoadPageContent;
- (void)loadRemoteDebugScriptIfNeeded;
- (void)loadPageFrameHTML;
- (void)reportTimelineWithParam:(id)arg0;
- (void)recordPerformance:(id)arg0;
- (void)loadScriptAsync:(id)arg0 completion:(id /* block */)arg1;
- (void)handleAppPage:(id)arg0 reportDOMReadyWithParams:(id)arg1;
- (void)handleAppPage:(id)arg0 reportContentfulPaintWithParams:(id)arg1;
- (void)setHtmlPromise:(id)arg0;
- (id)pageFramePathWithFlag:(BOOL)arg0;
- (void)tryLoadIndustrySDK;
- (void)tryPostIndustrySDKReadyEvent;
- (id)industrySDKPromise;
- (id)industrySDKVersion;
- (BOOL)industrySDKPreloadEnable;
- (void)setIndustrySDKPromise:(id)arg0;
- (BOOL)needLoadInstrySDK;
- (void)setSpStatus:(unsigned long long)arg0;
- (void)setIndustrySDKVersion:(id)arg0;
- (void)setIndustryLoadStage:(long long)arg0;
- (BOOL)postReadyEvent;
- (void)setPostReadyEvent:(BOOL)arg0;
- (void)tryLoadSkeleton;
- (void)loadDependencyPluginPageFrameIfNeeded;
- (void)loadPageFrameIfNeed;
- (void)loadSubPkgExtraPageFrameIfNeeded;
- (void)loadPathFrameIfNeeded;
- (void)setDependencyPluginPageFramePromise:(id)arg0;
- (id)loadedPageFrames;
- (void)setPageFramePrefetcher:(id)arg0;
- (void)setUnloadPageFrames:(id)arg0;
- (void)tryMonitorWebviewTimelineEvent;
- (void)preloadPageFramesIfNeeded;
- (void)setPageFramePromise:(id)arg0;
- (void)handlePageFrameDidEvaluateWithError:(id)arg0;
- (id)pageFramePrefetcher;
- (unsigned long long)pageFramePreloadMode;
- (id)unloadPageFrames;
- (void)evalPreloadPageFramesIfNeededWithCompletion:(id /* block */)arg0;
- (BOOL)isPageFramePreloading;
- (void)setPageFramePreloading:(BOOL)arg0;
- (void)postLoadError:(id)arg0;
- (void)setLoadedPageFrames:(id)arg0;
- (BOOL)isPreloadingFramePagesWithReader;
- (void)setPreloadingFramePagesWithReader:(BOOL)arg0;
- (void)preloadPageFramesWithReader:(id)arg0 startPath:(id)arg1 completion:(id /* block */)arg2;
- (void)reportLoadTimePageFrameWithLocalPkgIfNeeded:(BOOL)arg0;
- (void)setExtraPageFramePromise:(id)arg0;
- (void)setPathFramePromise:(id)arg0;
- (id)extensionFramePromise;
- (void)pageLoadResultTimelineWith:(id)arg0;
- (long long)industryLoadStage;
- (void)reportLineUpEventWithUniqueID:(id)arg0;
- (void)eventPageLoadStart;
- (void)setCollectPointsNotifToken:(id)arg0;
- (void)preloadWithCPRulesIfNeededAsync;
- (void)uploadPageInfoIfNeed;
- (BOOL)remoteDebugScriptLoaded;
- (void)setRemoteDebugScriptLoaded:(BOOL)arg0;
- (void)flushPendingDevtoolsInstructions;
- (id)pendingDevtoolsInstructions;
- (void)setPendingDevtoolsInstructions:(id)arg0;
- (BOOL)isReusedPage;
- (void)setNeedRecoverWhenTerminated:(BOOL)arg0;
- (void)setExtensionFramePromise:(id)arg0;
- (void)_webView:(id)arg0 loadScripts:(id)arg1 completion:(id /* block */)arg2;
- (BOOL)preloadBeforeLaunch;
- (void)setTmpOnAppRouteParams:(id)arg0;
- (id)tmpOnAppRouteParams;
- (void)setPageCore:(id)arg0;
- (void)setPageFramePreloadMode:(unsigned long long)arg0;
- (void)setPageFrameBasePath:(id)arg0;
- (void)setPreloadBeforeLaunch:(BOOL)arg0;
- (id)skeletonLoader;
- (void)setSkeletonLoader:(id)arg0;
- (BOOL)checkPageActive;
- (BOOL)pageIsActive;
- (BOOL)needRecoverWhenTerminated;
- (void)handleAppPage:(id)arg0 reportPaintObserverResult:(id)arg1 timestamp:(double)arg2;
- (BOOL)didLoadFrameScript;
- (void)setIsReusedPage:(BOOL)arg0;
- (int)reuseCount;
- (void)setReuseCount:(int)arg0;
- (void)setPageIsActive:(BOOL)arg0;
- (id)collectionTimer;
- (void)setCollectionTimer:(id)arg0;
- (BOOL)enableScrollObserver;
- (void)setEnableScrollObserver:(BOOL)arg0;
- (id)scrollViewToken;
- (void)setScrollViewToken:(id)arg0;
- (BOOL)hasScrollEqualTimestamp;
- (void)setHasScrollEqualTimestamp:(BOOL)arg0;
- (double)scrollEqualTimestamp;
- (void)setScrollEqualTimestamp:(double)arg0;
- (BOOL)hasScrollLargeTimestamp;
- (void)setHasScrollLargeTimestamp:(BOOL)arg0;
- (double)scrollLargeTimestamp;
- (void)setScrollLargeTimestamp:(double)arg0;
- (double)childScrollTimestamp;
- (void)setChildScrollTimestamp:(double)arg0;
- (BOOL)hasReportedTimestamp;
- (void)setHasReportedTimestamp:(BOOL)arg0;
- (id)routeID;
- (id)reload;
- (void)setPath:(id)arg0;
- (void)resetStatus;
- (id)caller;
- (id)routeType;
- (void).cxx_destruct;
- (id)uniqueID;
- (unsigned long long)status;
- (void)setQueryString:(id)arg0;
- (id)queryString;
- (void)setUniqueID:(id)arg0;
- (id)path;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)lastErrorMessage;
- (id)originPath;
- (id)reuseIdentifier;
- (void)setStatus:(unsigned long long)arg0;
- (void)setCaller:(id)arg0;
- (id)parentController;
- (void)dealloc;
- (void)setRenderType:(id)arg0;
- (void)setTerminated:(BOOL)arg0;
- (void)setRouteType:(id)arg0;
- (void)webViewWebContentProcessDidTerminate:(id)arg0;
- (void)setOriginPath:(id)arg0;
- (void)setRouteID:(id)arg0;
- (id)topBackgroundView;
- (id)pageConfig;
- (void)setPageConfig:(id)arg0;
- (BOOL)isTerminated;
- (void)setupContent;
- (id)pageDelegate;
- (void)setPageDelegate:(id)arg0;

@end
