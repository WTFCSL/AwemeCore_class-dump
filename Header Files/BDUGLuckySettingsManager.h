//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSRecursiveLock;

@interface BDUGLuckySettingsManager : NSObject {
    NSMutableDictionary *_settingsDic;
    NSMutableDictionary *_observerDic;
    NSMutableDictionary *_timerMap;
    NSRecursiveLock *_settingsLock;
    NSRecursiveLock *_observerLock;
    NSRecursiveLock *_timerLock;
    double _resignActiveTime;
}

@property (retain, nonatomic) NSMutableDictionary *settingsDic;
@property (retain, nonatomic) NSMutableDictionary *observerDic;
@property (retain, nonatomic) NSMutableDictionary *timerMap;
@property (retain, nonatomic) NSRecursiveLock *settingsLock;
@property (retain, nonatomic) NSRecursiveLock *observerLock;
@property (retain, nonatomic) NSRecursiveLock *timerLock;
@property (nonatomic) double resignActiveTime;

+ (id)sharedInstance;

- (void)setSettingsDic:(id)arg0;
- (id)settingsDic;
- (void)__setupNotification;
- (double)__currentServerTime;
- (id)settingsInfoWithSettingsType:(unsigned long long)arg0;
- (id)timerMap;
- (void)__recoverCacheSettingsInfo;
- (id)observerDic;
- (long long)__fetchValidintervalWithInterval:(long long)arg0;
- (void)__refreshPollingWithObserverInfo:(id)arg0;
- (id)timerLock;
- (id)__settingsKeyWithSettingsType:(unsigned long long)arg0;
- (void)updateSettingsLastUpdateTimeWithSettingsType:(unsigned long long)arg0;
- (void)__applicationWillBecomeActive;
- (void)__applicationWillResignActive;
- (void)recoverCacheSettingsInfoWithSettingsType:(unsigned long long)arg0;
- (void)__timeFired:(id)arg0;
- (double)resignActiveTime;
- (void)setResignActiveTime:(double)arg0;
- (void)startObserveSettingsWithSettingsType:(unsigned long long)arg0 pollingInterval:(long long)arg1 observer:(id)arg2;
- (void)stopObserverSettingsWithSettingsType:(unsigned long long)arg0;
- (void)updateSettings:(id)arg0 forSettingsType:(unsigned long long)arg1;
- (void)clearSettingsInDiskForSettingsType:(unsigned long long)arg0;
- (void)setObserverDic:(id)arg0;
- (void)setTimerMap:(id)arg0;
- (void)setTimerLock:(id)arg0;
- (id)init;
- (id)observerLock;
- (void).cxx_destruct;
- (void)setObserverLock:(id)arg0;
- (void)setSettingsLock:(id)arg0;
- (void)dealloc;
- (id)settingsLock;

@end
