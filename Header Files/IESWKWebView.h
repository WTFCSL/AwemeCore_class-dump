//
//     Generated by private class-dump
//

@class UIScrollView, NSString, NSTimer, IESPiper, NSURLRequest, IESWebViewHotsoonHandler;
@protocol IESWebViewCommonDelegate, WKUIDelegate, WKNavigationDelegate;

@interface IESWKWebView : WKWebView <WKUIDelegate, WKNavigationDelegate, IESWebViewProtocol> {
    BOOL _scalePageToFit;
    BOOL _relaunchWhenProcessTerminate;
    id<IESWebViewCommonDelegate> _delegate;
    IESPiper *_bridge;
    NSURLRequest *_request;
    id<WKNavigationDelegate> _navigationDelegateProxy;
    id<WKUIDelegate> _UIDelegateProxy;
    IESWebViewHotsoonHandler *_hsHandler;
    NSTimer *_timer;
}

@property (retain, nonatomic) NSString *awe_rawDataMD5;
@property (readonly, nonatomic) NSString *awe_reactID;
@property (nonatomic) BOOL bdarEnableInterceptPV;
@property (copy, nonatomic) id /* block */ messageFromeWebCompletion;
@property (nonatomic) BOOL fromCache;
@property (weak, nonatomic) id<WKNavigationDelegate> navigationDelegateProxy;
@property (weak, nonatomic) id<WKUIDelegate> UIDelegateProxy;
@property (retain, nonatomic) IESWebViewHotsoonHandler *hsHandler;
@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) NSURLRequest *request;
@property (weak, nonatomic) id<IESWebViewCommonDelegate> delegate;
@property (retain, nonatomic) IESPiper *bridge;
@property (copy, nonatomic) id /* block */ consoleLogHandler;
@property (nonatomic) BOOL scalePageToFit;
@property (nonatomic) BOOL relaunchWhenProcessTerminate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic, getter=isLoading) BOOL loading;
@property (readonly, copy, nonatomic) NSString *containerID;

+ (id)configurationWithSettings:(id)arg0;
+ (id)precreatorWithSettings:(id)arg0 bridgeClass:(Class)arg1;
+ (void)setUpBridgeBlock:(id /* block */)arg0;
+ (id)instanceWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 piperClass:(Class)arg1;
+ (id)precreatorWithSettings:(id)arg0 piperClass:(Class)arg1;
+ (id)instanceWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 bridgeClass:(Class)arg1;
+ (void)initialize;
+ (id)sharedProcessPool;

- (id)awe_rawDataMD5;
- (void)setAwe_rawDataMD5:(id)arg0;
- (id)awe_reactID;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 piperClass:(Class)arg1 settings:(id)arg2;
- (BOOL)scalePageToFit;
- (void)setScalePageToFit:(BOOL)arg0;
- (BOOL)bdarEnableInterceptPV;
- (void)setBdarEnableInterceptPV:(BOOL)arg0;
- (void)setMessageFromeWebCompletion:(id /* block */)arg0;
- (id /* block */)messageFromeWebCompletion;
- (BOOL)fromCache;
- (void)setFromCache:(BOOL)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1 piperClass:(Class)arg2 disableLoadBrigePlugin:(BOOL)arg3;
- (id /* block */)consoleLogHandler;
- (void)setConsoleLogHandler:(id /* block */)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 bridgeClass:(Class)arg1 settings:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1 bridgeClass:(Class)arg2;
- (id)navigationDelegateProxy;
- (void)setNavigationDelegateProxy:(id)arg0;
- (void)setRelaunchWhenProcessTerminate:(BOOL)arg0;
- (void)keyboardDisplacementFix;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 piperClass:(Class)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1 piperClass:(Class)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 bridgeClass:(Class)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 configuration:(id)arg1 bridgeClass:(Class)arg2 disableLoadBrigePlugin:(BOOL)arg3;
- (void)addAudiosControlScripts;
- (void)setHsHandler:(id)arg0;
- (id)hsHandler;
- (void)addPageScaleControlScripts;
- (void)removePageScaleControlScriptsIfNeeded;
- (id)UIDelegateProxy;
- (BOOL)relaunchWhenProcessTerminate;
- (void)resumePlayAudios;
- (void)stopAudios;
- (void)setUIDelegateProxy:(id)arg0;
- (void)webView:(id)arg0 didFailProvisionalNavigation:(id)arg1 withError:(id)arg2;
- (id)timer;
- (void)setNavigationDelegate:(id)arg0;
- (void)webView:(id)arg0 runJavaScriptAlertPanelWithMessage:(id)arg1 initiatedByFrame:(id)arg2 completionHandler:(id /* block */)arg3;
- (void).cxx_destruct;
- (void)webView:(id)arg0 decidePolicyForNavigationAction:(id)arg1 decisionHandler:(id /* block */)arg2;
- (void)forwardInvocation:(id)arg0;
- (void)webView:(id)arg0 didFinishNavigation:(id)arg1;
- (id)containerID;
- (BOOL)respondsToSelector:(SEL)arg0;
- (void)setRequest:(id)arg0;
- (void)webView:(id)arg0 didFailNavigation:(id)arg1 withError:(id)arg2;
- (id)request;
- (id)webView:(id)arg0 createWebViewWithConfiguration:(id)arg1 forNavigationAction:(id)arg2 windowFeatures:(id)arg3;
- (id)methodSignatureForSelector:(SEL)arg0;
- (id)delegate;
- (void)setTimer:(id)arg0;
- (void)webView:(id)arg0 didCommitNavigation:(id)arg1;
- (void)keyboardWillHide;
- (void)keyboardWillShow;
- (void)webView:(id)arg0 runJavaScriptConfirmPanelWithMessage:(id)arg1 initiatedByFrame:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)forwardingTargetForSelector:(SEL)arg0;
- (void)setDelegate:(id)arg0;
- (id)bridge;
- (void)webView:(id)arg0 didStartProvisionalNavigation:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg0;
- (void)setUIDelegate:(id)arg0;
- (void)setBridge:(id)arg0;

@end
