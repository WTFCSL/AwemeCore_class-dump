//
//     Generated by private class-dump
//

@class IESLivePlayerMiddlewarePropertyContainer, NSString, IESLivePlayerAttachment, UIView, NSURL, NSError, NSDictionary, NSArray, IESLiveNewPlayerTVLTracker, IESLivePlayerSEIMetaInfo;
@protocol IESLivePlayerControllerConfigProtocol, IESLivePlayerControllerDelegate, IESLivePlayerProtocol;

@interface IESLivePlayerWrapper : NSProxy <IESLivePlayerProtocol> {
    id<IESLivePlayerProtocol> _targetPlayer;
}

@property (retain, nonatomic) id<IESLivePlayerProtocol> targetPlayer;
@property (readonly, nonatomic) IESLivePlayerMiddlewarePropertyContainer *middlewareProperties;
@property (weak, nonatomic) id<IESLivePlayerControllerDelegate> delegate;
@property (readonly, nonatomic) IESLivePlayerAttachment *playerAttachment;
@property (nonatomic) long long renderType;
@property (nonatomic) BOOL muted;
@property (nonatomic) float volume;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL openSEI;
@property (nonatomic) BOOL stopPlayerOnApplicationBackground;
@property (nonatomic) long long scaleType;
@property (copy, nonatomic) id /* block */ nodeOptimizer;
@property (copy, nonatomic) id /* block */ strategyInfo;
@property (copy, nonatomic) id /* block */ eyesProtectLutImageBlock;
@property (readonly, nonatomic) IESLivePlayerSEIMetaInfo *binarySEIInfo;
@property (readonly, nonatomic) NSDictionary *receiveMetaInfo;
@property (readonly, nonatomic) NSDictionary *receiveStreamMetaInfo;
@property (readonly, nonatomic) NSDictionary *receiveImmidiatelyMetaInfo;
@property (readonly, nonatomic) UIView *view;
@property (readonly, nonatomic) UIView *playerView;
@property (readonly, nonatomic) NSURL *contentURL;
@property (readonly, nonatomic) NSString *sdkParams;
@property (readonly, copy, nonatomic) NSString *currentStreamData;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } streamSize;
@property (readonly, copy, nonatomic) NSString *streamIDStr;
@property (nonatomic) BOOL isNeedCropVice;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } cropSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoCropAreaSize;
@property (readonly, nonatomic) BOOL playStarted;
@property (readonly, nonatomic) BOOL playPaused;
@property (readonly, nonatomic) BOOL rendered;
@property (readonly, nonatomic) unsigned long long loadState;
@property (readonly, nonatomic) unsigned long long playbackState;
@property (readonly, nonatomic) long long alignMode;
@property (readonly, nonatomic) NSError *error;
@property (nonatomic) BOOL isInteractRunning;
@property (readonly, nonatomic) BOOL supportsTimeShift;
@property (readonly, nonatomic) double timeShiftLowerBoundInSeconds;
@property (nonatomic) double iesLiveInvalidTimeShiftLowerBound;
@property (readonly, nonatomic) NSString *resolutionType;
@property (readonly, nonatomic) long long renderingFPS;
@property (nonatomic) BOOL enableSupportPictureInPictureMode;
@property (readonly, nonatomic) BOOL enableForbidVideoProcess;
@property (nonatomic) BOOL enableAudioRecording;
@property (nonatomic) BOOL enableVideoRecording;
@property (readonly, copy, nonatomic) NSString *videoCodecType;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic) BOOL prepareForReuse;
@property (nonatomic) BOOL shouldUseVideoFrameInViceView;
@property (readonly, nonatomic) NSArray *currentVicePlayerViews;
@property (readonly, nonatomic) UIView *decorationView;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (nonatomic) BOOL enableReplacePauseToStopInRtm;
@property (nonatomic) BOOL enablePresetPlayerSize;
@property (nonatomic) BOOL enableBackgroundPlay;
@property (readonly, nonatomic) BOOL enableVideoProcess;
@property (nonatomic) BOOL shouldOptLargeStreamSuperReso;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } renderViewFrame;
@property (readonly, nonatomic) BOOL didROIBMFSROpened;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoRoiRegion;
@property (readonly, nonatomic) NSDictionary *reportParam;
@property (readonly, nonatomic) NSDictionary *debugInfo;
@property (readonly, nonatomic) NSDictionary *streamRenderAudioVolume;
@property (copy, nonatomic) id /* block */ appInfoFetchBlock;
@property (copy, nonatomic) id /* block */ reportStateBlock;
@property (copy, nonatomic) id /* block */ trackBlock;
@property (copy, nonatomic) id /* block */ assertBlock;
@property (copy, nonatomic) id /* block */ imageDownLoad;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, copy, nonatomic) NSString *sdkKey;
@property (readonly, nonatomic) BOOL smoothSwitching;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<IESLivePlayerControllerConfigProtocol> config;
@property (retain, nonatomic) IESLiveNewPlayerTVLTracker *tvlTracker;
@property (readonly, nonatomic) BOOL isVRMode;
@property (copy, nonatomic) id /* block */ headPoseUpdateBlock;
@property (readonly, nonatomic) BOOL effectConfigured;
@property (nonatomic) BOOL effectEnable;

- (id)targetPlayer;
- (void)setTargetPlayer:(id)arg0;
- (void)handleNilTarget:(id)arg0;
- (void)handleNoSelector:(id)arg0;
- (id)disconnectLink;
- (BOOL)isProxy;
- (void).cxx_destruct;
- (void)forwardInvocation:(id)arg0;
- (id)initWithPlayer:(id)arg0;
- (BOOL)respondsToSelector:(SEL)arg0;
- (id)methodSignatureForSelector:(SEL)arg0;

@end
