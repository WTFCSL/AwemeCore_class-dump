//
//     Generated by private class-dump
//

@class UIView, NSString, NSURL, BDXMultiDelegate, BDXContext, BDXSchemaParam, NSDictionary, NSMutableArray, BDXMonitor;
@protocol BDXContainerLifecycleProtocol, BDXLoadingViewProtocol, BDXKitViewProtocol, BDXLoadErrorViewProtocol, BDXPoolContainerDelegate;

@interface BDXView : UIView <BDXPopupContentProtocol, BDXKitViewLifecycleProtocol, BDXPoolContainerProtocol, BDXMutiInvacationDelegate, BDXViewContainerProtocol> {
    BOOL hybridInBackground;
    BOOL hybridAppeared;
    BOOL didMount;
    BOOL _hasHandleFallback;
    BOOL _isLoadFailed;
    BOOL _isFallbacking;
    BOOL _isLoading;
    BOOL _isFinishUpdate;
    BOOL _hasLoadFirstScreen;
    BOOL _resIsFromMemory;
    BOOL _hasTrackedTimeline;
    BOOL _idleState;
    BOOL _didWebContentProcessTerminate;
    float _resSize;
    long long _bdxContentMode;
    BDXContext *_context;
    id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
    id<BDXPoolContainerDelegate> poolContainerDelegate;
    NSString *sessionID;
    NSString *engineType;
    NSURL *_url;
    UIView<BDXKitViewProtocol> *_kitView;
    BDXSchemaParam *_config;
    BDXMonitor *_lifeCycleTracker;
    double _initTimeStamp;
    double _addToSuperViewTimeStamp;
    UIView<BDXLoadErrorViewProtocol> *_loadFailedView;
    UIView<BDXLoadingViewProtocol> *_loadingView;
    NSString *_fallbackReason;
    long long _viewAppearedTimes;
    NSMutableArray *_subscribeList;
    BDXMultiDelegate *_lifecycleMultiDelegate;
    NSDictionary *_enginePerfDict;
    NSString *_resourceFrom;
    id /* block */ _preservedataCompletion;
    double _appearTime;
    double _disappearTime;
    double _stayDuration;
    NSDictionary *_bdxLifeCycleMetric;
    struct CGSize { double width; double height; } _contentSize;
}

@property (readonly, copy, nonatomic) NSString *containerID;
@property (readonly, nonatomic) NSURL *originURL;
@property (nonatomic) long long bdxContentMode;
@property (readonly, nonatomic) long long viewType;
@property (weak, nonatomic) id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
@property (retain, nonatomic) id config;
@property (readonly, nonatomic) UIView<BDXKitViewProtocol> *kitView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSURL *url;
@property (nonatomic) struct CGSize { double width; double height; } contentSize;
@property (retain, nonatomic) UIView<BDXKitViewProtocol> *kitView;
@property (retain, nonatomic) BDXSchemaParam *config;
@property (nonatomic) BOOL hasHandleFallback;
@property (retain, nonatomic) BDXMonitor *lifeCycleTracker;
@property (nonatomic) double initTimeStamp;
@property (nonatomic) double addToSuperViewTimeStamp;
@property (retain, nonatomic) UIView<BDXLoadErrorViewProtocol> *loadFailedView;
@property (retain, nonatomic) UIView<BDXLoadingViewProtocol> *loadingView;
@property (nonatomic) BOOL isLoadFailed;
@property (nonatomic) BOOL isFallbacking;
@property (copy, nonatomic) NSString *fallbackReason;
@property (nonatomic) long long viewAppearedTimes;
@property (retain, nonatomic) NSMutableArray *subscribeList;
@property (retain, nonatomic) BDXMultiDelegate *lifecycleMultiDelegate;
@property (nonatomic) BOOL isLoading;
@property (nonatomic) BOOL isFinishUpdate;
@property (nonatomic) BOOL hasLoadFirstScreen;
@property (copy, nonatomic) NSDictionary *enginePerfDict;
@property (copy, nonatomic) NSString *resourceFrom;
@property (nonatomic) BOOL resIsFromMemory;
@property (nonatomic) float resSize;
@property (copy, nonatomic) id /* block */ preservedataCompletion;
@property (nonatomic) double appearTime;
@property (nonatomic) double disappearTime;
@property (nonatomic) double stayDuration;
@property (nonatomic) BOOL hasTrackedTimeline;
@property (nonatomic) BOOL idleState;
@property (copy, nonatomic) NSDictionary *bdxLifeCycleMetric;
@property (nonatomic) BOOL didWebContentProcessTerminate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<BDXPoolContainerDelegate> poolContainerDelegate;
@property (nonatomic) long long bdxContentMode;
@property (readonly, nonatomic) long long viewType;
@property (retain, nonatomic) BDXContext *context;
@property (nonatomic) BOOL hybridInBackground;
@property (nonatomic) BOOL hybridAppeared;
@property (weak, nonatomic) id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
@property (nonatomic) BOOL didMount;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, nonatomic) NSURL *originURL;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } preferredLayoutSize;
@property (readonly, copy, nonatomic) NSString *containerID;
@property (readonly, copy, nonatomic) NSString *engineType;

+ (void)setupCachedViewLock;
+ (void)createCachedView:(id)arg0 context:(id)arg1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
+ (id)fetchCachedView:(id)arg0 context:(id)arg1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
+ (id)mutableDictionaryFromGlobalProps:(id)arg0;
+ (id)globalProps:(id)arg0 fromDictionary:(id)arg1;
+ (id)p_BDX_registerInfo_BDXViewLynxAdaptorBDXViewAdaptor;
+ (id)BDX_registerInfo_BDXViewLynxAdaptorBDXViewAdaptor;

- (void)lynxViewDidProcessRender:(id)arg0;
- (void)setBdxpool_status:(unsigned long long)arg0;
- (long long)bdxContentMode;
- (void)loadWithParam:(id)arg0 context:(id)arg1;
- (void)addLifeCycleDelegate:(id)arg0;
- (void)addLoadFailedView:(id)arg0;
- (void)addLoadingView:(id)arg0;
- (void)removeLoadingView;
- (BOOL)shouldShowLoadFailedViewWithError:(id)arg0;
- (void)onReuse:(id)arg0;
- (void)onRecycle:(id)arg0;
- (void)observePreserveDataWithCompletion:(id /* block */)arg0;
- (BOOL)hybridInBackground;
- (void)setHybridInBackground:(BOOL)arg0;
- (BOOL)hybridAppeared;
- (void)setHybridAppeared:(BOOL)arg0;
- (id)containerLifecycleDelegate;
- (BOOL)didMount;
- (void)setDidMount:(BOOL)arg0;
- (void)handleViewDidAppear;
- (void)handleBecomeActive;
- (void)handleResignActive;
- (void)registerXBridgeMethod:(id)arg0;
- (id)viewControllerOfContainer;
- (void)registerUI:(Class)arg0 withName:(id)arg1;
- (void)updateData:(id)arg0 processorName:(id)arg1;
- (void)resetData:(id)arg0;
- (void)removeKitView;
- (void)resetKitView;
- (void)ssrHydrateWithURL:(id)arg0 templateData:(id)arg1 initData:(id)arg2;
- (void)handleViewDidAppearOnlyPage;
- (void)handleViewDidDisappearOnlyPage;
- (void)viewOnBlockBackGesture;
- (struct CGSize { double x0; double x1; })preferredLayoutSize;
- (id)kitView;
- (void)sendEvent:(id)arg0 params:(id)arg1;
- (void)loadWithURL:(id)arg0 context:(id)arg1;
- (void)setBdxContentMode:(long long)arg0;
- (void)setContainerLifecycleDelegate:(id)arg0;
- (id)findViewWithName:(id)arg0;
- (double)stayDuration;
- (id)rawView;
- (void)setKitView:(id)arg0;
- (void)viewOnShow:(id)arg0 sourceParam:(id)arg1;
- (void)viewOnHide:(id)arg0 sourceParam:(id)arg1;
- (BOOL)view:(id)arg0 shouldStartLoadWithRequest:(id)arg1 navigationType:(id)arg2;
- (void)viewWillStartLoading:(id)arg0;
- (void)view:(id)arg0 didChangeIntrinsicContentSize:(struct CGSize { double x0; double x1; })arg1;
- (void)viewOnTasmFinishByNative:(id)arg0;
- (void)viewDidStartLoading:(id)arg0;
- (void)view:(id)arg0 didStartLoadingSuccesssWithURL:(id)arg1;
- (void)view:(id)arg0 didStartLoadingFailedWithURL:(id)arg1;
- (void)view:(id)arg0 didStartFetchResourceWithURL:(id)arg1;
- (void)view:(id)arg0 didFetchedResource:(id)arg1 error:(id)arg2;
- (void)viewDidFirstScreen:(id)arg0;
- (void)view:(id)arg0 didFinishLoadWithURL:(id)arg1;
- (void)view:(id)arg0 didLoadFailedWithUrl:(id)arg1 error:(id)arg2;
- (void)viewDidUpdate:(id)arg0;
- (void)view:(id)arg0 didRecieveError:(id)arg1;
- (void)view:(id)arg0 didReceivePerformance:(id)arg1;
- (void)view:(id)arg0 didReceivePerformanceFirstLoad:(id)arg1;
- (void)viewDidPageUpdate:(id)arg0;
- (void)viewDidConstructJSRuntime:(id)arg0;
- (void)view:(id)arg0 updateTitle:(id)arg1;
- (void)view:(id)arg0 didStartAnimationWithDuration:(double)arg1 startFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 finalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3;
- (void)view:(id)arg0 didEndAnimationWithDuration:(double)arg1 startFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 finalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3;
- (void)view:(id)arg0 onSetUp:(id)arg1;
- (void)view:(id)arg0 onUpdate:(id)arg1;
- (void)setLoadFailedView:(id)arg0;
- (id)loadFailedView;
- (void)__addNotification;
- (void)handleKeyboardDidHideNotification:(id)arg0;
- (id)resourceFrom;
- (void)setResourceFrom:(id)arg0;
- (void)onReceiveMemoryWarning:(id)arg0;
- (void)viewWillCreated:(id)arg0;
- (void)viewDidCreated:(id)arg0;
- (id)kitBridge;
- (void)setInitTimeStamp:(double)arg0;
- (void)setupKitView:(id)arg0;
- (void)attachKitView:(id)arg0;
- (double)initTimeStamp;
- (void)setStayDuration:(double)arg0;
- (void)handleKeyboardWillShowNotification:(id)arg0;
- (void)handleKeyboardDidShowNotification:(id)arg0;
- (void)handleKeyboardWillHideNotification:(id)arg0;
- (void)__unregisterSubscriber;
- (id)subscribeList;
- (void)setSubscribeList:(id)arg0;
- (void)setIsLoadFailed:(BOOL)arg0;
- (BOOL)isLoadFailed;
- (double)appearTime;
- (void)setAppearTime:(double)arg0;
- (void)setDisappearTime:(double)arg0;
- (double)disappearTime;
- (void)__subscribeEvent;
- (void)setPoolContainerDelegate:(id)arg0;
- (double)getDurationForStartTime:(id)arg0 endTime:(id)arg1;
- (void)handleKeyBoardWillChangeNotification:(id)arg0;
- (void)handleKeyBoardDidChangeNotification:(id)arg0;
- (id)__convertKeyBoardFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (long long)viewAppearedTimes;
- (void)setViewAppearedTimes:(long long)arg0;
- (void)onTakeScreenShot:(id)arg0;
- (void)__onPageReady:(id)arg0;
- (void)setIdleState:(BOOL)arg0;
- (id)__buildLoadingView;
- (id)poolContainerDelegate;
- (void)didFetchFromPool:(id)arg0;
- (void)didRecycleIntoPool:(id)arg0;
- (void)updateLifeCycleMonitor:(id)arg0;
- (void)updateTracertMonitor:(id)arg0;
- (id)lifeCycleTracker;
- (id)__lifeCycleTrackerWithContext:(id)arg0;
- (void)createTracertMonitorIfNeededWithContext:(id)arg0;
- (id)getOriginalURL;
- (BOOL)isLoadingOrLoadFailed;
- (id)lifecycleMultiDelegate;
- (void)__batchEvents;
- (void)__trackBDXViewTimeLineIfNeeded;
- (void)setAddToSuperViewTimeStamp:(double)arg0;
- (BOOL)hasLoadFirstScreen;
- (void)__trackeUserFirstScreenWithDuration:(id)arg0;
- (void)__onBanReuse:(id)arg0;
- (void)onBecomeKeyWindow:(id)arg0;
- (void)__notifyKeyBoardEvent:(unsigned long long)arg0 notification:(id)arg1;
- (void)__trackEvent:(id)arg0 metric:(id)arg1 category:(id)arg2 commonParams:(id)arg3;
- (void)__trackExitEvent;
- (BOOL)isFallbacking;
- (id)__generateParamWithContext:(id)arg0 url:(id)arg1;
- (void)loadWithParam:(id)arg0 context:(id)arg1 shouleMergeContext:(BOOL)arg2;
- (void)__resetParam:(id)arg0 context:(id)arg1;
- (void)internalLoadFromSource:(long long)arg0;
- (BOOL)__isLynxSchema:(id)arg0;
- (void)__stopLoadingIfNeeded;
- (void)hideWebProgressViewIfNeeded:(BOOL)arg0;
- (void)setPreservedataCompletion:(id /* block */)arg0;
- (void)setResSize:(float)arg0;
- (void)setResIsFromMemory:(BOOL)arg0;
- (double)addToSuperViewTimeStamp;
- (void)setHasLoadFirstScreen:(BOOL)arg0;
- (id)enginePerfDict;
- (void)invokePerformanceDelegate:(id)arg0;
- (id /* block */)preservedataCompletion;
- (void)setDidWebContentProcessTerminate:(BOOL)arg0;
- (void)setEnginePerfDict:(id)arg0;
- (id)convertBulletLynxPerfDict:(id)arg0;
- (id)convertBulletWebPerfectDict:(id)arg0;
- (void)setIsFinishUpdate:(BOOL)arg0;
- (BOOL)hasHandleFallback;
- (void)setIsFallbacking:(BOOL)arg0;
- (void)setHasHandleFallback:(BOOL)arg0;
- (id)calculateBulletLifeCycleMetrics;
- (BOOL)isFinishUpdate;
- (BOOL)didWebContentProcessTerminate;
- (void)__updateMonitorXpoolStatus;
- (void)__trackEvent:(id)arg0 metric:(id)arg1 category:(id)arg2;
- (BOOL)hasTrackedTimeline;
- (void)setHasTrackedTimeline:(BOOL)arg0;
- (BOOL)resIsFromMemory;
- (float)resSize;
- (void)setBdxLifeCycleMetric:(id)arg0;
- (id)bdxLifeCycleMetric;
- (id)__eventNameWithKeyBoardEventType:(unsigned long long)arg0;
- (void)onRecievememoryWarning:(id)arg0;
- (void)setLifeCycleTracker:(id)arg0;
- (void)setLifecycleMultiDelegate:(id)arg0;
- (void)reload;
- (BOOL)isLoading;
- (void)removeFromSuperview;
- (struct CGSize { double x0; double x1; })contentSize;
- (void)setConfig:(id)arg0;
- (id)engineType;
- (void).cxx_destruct;
- (id)sessionID;
- (id)containerID;
- (void)setContext:(id)arg0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)setContentSize:(struct CGSize { double x0; double x1; })arg0;
- (id)config;
- (void)setUrl:(id)arg0;
- (void)didMoveToSuperview;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)context;
- (long long)viewType;
- (void)layoutSubviews;
- (void)dealloc;
- (void)setIsLoading:(BOOL)arg0;
- (id)url;
- (id)originURL;
- (id)fallbackReason;
- (void)setFallbackReason:(id)arg0;
- (void)reloadData:(id)arg0;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (void)reloadWithContext:(id)arg0;
- (void)handleViewDidDisappear;
- (BOOL)idleState;

@end
