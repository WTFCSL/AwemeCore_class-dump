//
//     Generated by private class-dump
//

@class NSMutableDictionary, IESLiveLinkRTCInteractTranscodeAVParams, ByteRTCAudioDeviceManager, NSDate, ByteRTCRoom, IESLiveLinkRTCInteractLogReporter, LiveStreamMultiTimerManager, IESLiveLinkRTCInteractQosInfo, ByteRTCLiveTranscoding, NSString, LSSafeMutableArray, NSMutableSet, IESLiveLinkRTCInteractConfiguration, IESLiveLinkRTCInteractSession, IESLiveLinkLiveRtc, ByteRTCAudioMixingManager, NSLock, IESLiveLinkRTCInteractVideosDurationStatistics;
@protocol IESLiveLinkRTCInteractVideoSinkDelegate, IESLiveLinkRTCInteractClientDelegate;

@interface IESLiveLinkRTCInteractClient : NSObject <ByteRTCVideoDelegate, ByteRTCRoomDelegate, ByteRTCAudioDeviceEventHandler, IESLiveLinkRTCLogReportDelegate, ByteRTCVideoSinkDelegate, ByteRTCVideoDelegateEx, ByteRTCRoomDelegateEx> {
    struct atomic<int> { struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { _Atomic int __a_value; } __a_; } _mRemoteUserCount;
    BOOL _preJoinChannel;
    BOOL _prePushStream;
    BOOL _enableSingleView;
    BOOL _shouldEnableLogReport;
    BOOL _onlyRenderOnViewReady;
    BOOL _isNeedStartVolumeBySelf;
    BOOL _displayDirect;
    BOOL _remoteSessionNeedRender;
    BOOL _mixBitRateIsFromExtInfo;
    BOOL _mSwitchedPlayMode;
    BOOL _syncCacheIsRunning;
    int _reportTimeInterval;
    NSString *_lastAppData;
    IESLiveLinkRTCInteractTranscodeAVParams *_rtcTranscodeAVParams;
    id /* block */ _inputRtcFrameCallback;
    id /* block */ _requestChannelKeyBlock;
    id /* block */ _clientVideoFrameCallback;
    id /* block */ _clientAudioFrameCallback;
    id /* block */ _renderFilterBlock;
    IESLiveLinkRTCInteractSession *_localSmallWindowSession;
    id /* block */ _logBlock;
    id /* block */ _debugLogBlock;
    id<IESLiveLinkRTCInteractClientDelegate> _delegate;
    IESLiveLinkLiveRtc *_liveRtc;
    NSLock *_roomLock;
    ByteRTCRoom *_rtcRoom;
    id /* block */ _internAudioVolumeReportBlock;
    IESLiveLinkRTCInteractConfiguration *_config;
    NSMutableDictionary *_remoteUsersMap;
    LSSafeMutableArray *_internSessions;
    IESLiveLinkRTCInteractSession *_localSession;
    IESLiveLinkRTCInteractSession *_hostSession;
    long long _currentState;
    IESLiveLinkRTCInteractQosInfo *_qosInfo;
    LiveStreamMultiTimerManager *_timerManager;
    long long _timeTickCnt;
    IESLiveLinkRTCInteractVideosDurationStatistics *_videosDurationStatistics;
    unsigned long long _rtcReportId;
    NSString *_lastRtcConfigDescription;
    NSDate *_lastPushVideoData;
    long long _mRtcJoinChannelTimeCost;
    NSString *_trascodingURL;
    ByteRTCLiveTranscoding *_transcodingSetting;
    ByteRTCAudioDeviceManager *_audioDeviceManager;
    ByteRTCAudioMixingManager *_audioMixingManager;
    IESLiveLinkRTCInteractLogReporter *_logReporter;
    long long _originStreamWidth;
    long long _originStreamHeight;
    long long _pushStreamWidth;
    long long _pushStreamHeight;
    id<IESLiveLinkRTCInteractVideoSinkDelegate> _videoSinkDelegate;
    NSMutableDictionary *_firstRenderInfoMap;
    NSLock *_firstRenderInfoMapLock;
    NSMutableSet *_syncCacheUser;
    NSLock *_syncCacheLock;
}

@property (weak, nonatomic) id<IESLiveLinkRTCInteractClientDelegate> delegate;
@property (retain, nonatomic) IESLiveLinkLiveRtc *liveRtc;
@property (retain, nonatomic) NSLock *roomLock;
@property (retain, nonatomic) ByteRTCRoom *rtcRoom;
@property (copy, nonatomic) id /* block */ internAudioVolumeReportBlock;
@property (retain, nonatomic) IESLiveLinkRTCInteractConfiguration *config;
@property (retain, nonatomic) NSMutableDictionary *remoteUsersMap;
@property (retain, nonatomic) LSSafeMutableArray *internSessions;
@property (retain, nonatomic) IESLiveLinkRTCInteractSession *localSession;
@property (weak, nonatomic) IESLiveLinkRTCInteractSession *hostSession;
@property long long currentState;
@property (retain, nonatomic) IESLiveLinkRTCInteractSession *localSmallWindowSession;
@property (nonatomic) BOOL isNeedStartVolumeBySelf;
@property (retain, nonatomic) IESLiveLinkRTCInteractQosInfo *qosInfo;
@property (retain) LiveStreamMultiTimerManager *timerManager;
@property long long timeTickCnt;
@property (retain, nonatomic) IESLiveLinkRTCInteractVideosDurationStatistics *videosDurationStatistics;
@property unsigned long long rtcReportId;
@property (retain, nonatomic) NSString *lastRtcConfigDescription;
@property (nonatomic) BOOL displayDirect;
@property (nonatomic) BOOL remoteSessionNeedRender;
@property (nonatomic) BOOL mixBitRateIsFromExtInfo;
@property (retain, nonatomic) NSDate *lastPushVideoData;
@property (nonatomic) long long mRtcJoinChannelTimeCost;
@property (nonatomic) BOOL mSwitchedPlayMode;
@property (retain, nonatomic) NSString *trascodingURL;
@property (retain, nonatomic) ByteRTCLiveTranscoding *transcodingSetting;
@property (retain, nonatomic) ByteRTCAudioDeviceManager *audioDeviceManager;
@property (retain, nonatomic) ByteRTCAudioMixingManager *audioMixingManager;
@property (retain, nonatomic) IESLiveLinkRTCInteractLogReporter *logReporter;
@property (nonatomic) long long originStreamWidth;
@property (nonatomic) long long originStreamHeight;
@property (nonatomic) long long pushStreamWidth;
@property (nonatomic) long long pushStreamHeight;
@property (weak, nonatomic) id<IESLiveLinkRTCInteractVideoSinkDelegate> videoSinkDelegate;
@property (retain, nonatomic) NSMutableDictionary *firstRenderInfoMap;
@property (retain, nonatomic) NSLock *firstRenderInfoMapLock;
@property (retain, nonatomic) NSMutableSet *syncCacheUser;
@property (retain, nonatomic) NSLock *syncCacheLock;
@property (nonatomic) BOOL syncCacheIsRunning;
@property (nonatomic) BOOL preJoinChannel;
@property (nonatomic) BOOL prePushStream;
@property (readonly, nonatomic) NSString *lastAppData;
@property (weak, nonatomic) IESLiveLinkRTCInteractTranscodeAVParams *rtcTranscodeAVParams;
@property (nonatomic) BOOL enableSingleView;
@property (copy, nonatomic) id /* block */ inputRtcFrameCallback;
@property (copy, nonatomic) id /* block */ requestChannelKeyBlock;
@property (copy, nonatomic) id /* block */ clientVideoFrameCallback;
@property (copy, nonatomic) id /* block */ clientAudioFrameCallback;
@property (copy, nonatomic) id /* block */ renderFilterBlock;
@property (nonatomic) BOOL shouldEnableLogReport;
@property (nonatomic) int reportTimeInterval;
@property (nonatomic) BOOL onlyRenderOnViewReady;
@property (copy, nonatomic) id /* block */ logBlock;
@property (copy, nonatomic) id /* block */ debugLogBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)getSdkVersion;
+ (void)releaseLiveRtc:(id)arg0;
+ (id)getSdkDeviceID;
+ (id)getLiveRTCParams:(id)arg0 rtcExtInfo:(id)arg1;
+ (id)p_getAndSaveDeviceIDFromUserDefaults;

- (void)rtcEngine:(id)arg0 onWarning:(long long)arg1;
- (void)rtcEngine:(id)arg0 onError:(long long)arg1;
- (void)rtcEngine:(id)arg0 onFirstLocalVideoFrameCaptured:(long long)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onRemoteVideoSizeChanged:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstRemoteVideoFrameDecoded:(id)arg1 withFrameInfo:(id)arg2;
- (void)onTokenWillExpire:(id)arg0;
- (void)rtcEngine:(id)arg0 onFirstLocalAudioFrame:(long long)arg1;
- (void)rtcEngine:(id)arg0 onFirstRemoteAudioFrame:(id)arg1;
- (void)rtcEngine:(id)arg0 onSEIMessageReceived:(id)arg1 andMessage:(id)arg2;
- (void)rtcEngine:(id)arg0 onSEIStreamUpdate:(id)arg1 eventType:(long long)arg2;
- (void)rtcEngine:(id)arg0 onRemoteAudioPropertiesReport:(id)arg1 totalRemoteVolume:(long long)arg2;
- (void)rtcEngine:(id)arg0 onLocalAudioPropertiesReport:(id)arg1;
- (void)rtcEngine:(id)arg0 onUserMessageReceivedOutsideRoom:(id)arg1 message:(id)arg2;
- (void)rtcEngine:(id)arg0 onRemoteVideoStateChanged:(id)arg1 withVideoState:(long long)arg2 withVideoStateReason:(long long)arg3;
- (void)rtcEngine:(id)arg0 onAudioDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)rtcEngine:(id)arg0 onVideoDeviceStateChanged:(id)arg1 device_type:(long long)arg2 device_state:(long long)arg3 device_error:(long long)arg4;
- (void)rtcEngine:(id)arg0 onPlayPublicStreamResult:(id)arg1 errorCode:(long long)arg2;
- (void)rtcEngine:(id)arg0 onPublicStreamSEIMessageReceived:(id)arg1 andMessage:(id)arg2 andSourceType:(long long)arg3;
- (void)rtcEngine:(id)arg0 onFirstPublicStreamVideoFrameDecoded:(id)arg1 withFrameInfo:(id)arg2;
- (void)rtcEngine:(id)arg0 onFirstPublicStreamAudioFrame:(id)arg1;
- (void)rtcEngine:(id)arg0 log:(id)arg1;
- (void)rtcRoom:(id)arg0 onRoomStateChanged:(id)arg1 withUid:(id)arg2 state:(long long)arg3 extraInfo:(id)arg4;
- (void)rtcRoom:(id)arg0 onStreamStateChanged:(id)arg1 withUid:(id)arg2 state:(long long)arg3 extraInfo:(id)arg4;
- (void)rtcRoom:(id)arg0 onLeaveRoom:(id)arg1;
- (void)rtcRoom:(id)arg0 onRoomWarning:(long long)arg1;
- (void)rtcRoom:(id)arg0 onRoomError:(long long)arg1;
- (void)rtcRoom:(id)arg0 onAVSyncStateChange:(long long)arg1;
- (void)rtcRoom:(id)arg0 onRoomStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onLocalStreamStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onRemoteStreamStats:(id)arg1;
- (void)rtcRoom:(id)arg0 onUserJoined:(id)arg1 elapsed:(long long)arg2;
- (void)rtcRoom:(id)arg0 onUserLeave:(id)arg1 reason:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onStreamAdd:(id)arg1;
- (void)rtcRoom:(id)arg0 onStreamRemove:(id)arg1 stream:(id)arg2 reason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onUserPublishStream:(id)arg1 type:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onUserUnpublishStream:(id)arg1 type:(unsigned long long)arg2 reason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onUserPublishScreen:(id)arg1 type:(unsigned long long)arg2;
- (void)rtcRoom:(id)arg0 onUserUnpublishScreen:(id)arg1 type:(unsigned long long)arg2 reason:(long long)arg3;
- (void)rtcRoom:(id)arg0 onStreamSubscribed:(long long)arg1 userId:(id)arg2 subscribeConfig:(id)arg3;
- (void)rtcRoom:(id)arg0 onStreamPublishSuccess:(id)arg1 isScreen:(BOOL)arg2;
- (void)rtcRoom:(id)arg0 onRoomMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onRoomBinaryMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserBinaryMessageReceived:(id)arg1 message:(id)arg2;
- (void)rtcRoom:(id)arg0 onUserMessageSendResult:(long long)arg1 error:(long long)arg2;
- (void)rtcRoom:(id)arg0 onRoomMessageSendResult:(long long)arg1 error:(long long)arg2;
- (void)rtcRoom:(id)arg0 onVideoStreamBanned:(id)arg1 isBanned:(BOOL)arg2;
- (void)rtcRoom:(id)arg0 onAudioStreamBanned:(id)arg1 isBanned:(BOOL)arg2;
- (void)rtcRoom:(id)arg0 onForwardStreamStateChanged:(id)arg1;
- (void)rtcRoom:(id)arg0 onForwardStreamEvent:(id)arg1;
- (void)rtcRoom:(id)arg0 onNetworkQuality:(id)arg1 remoteQualities:(id)arg2;
- (void)rtcRoom:(id)arg0 onSubtitleStateChanged:(long long)arg1 errorCode:(long long)arg2 errorMessage:(id)arg3;
- (void)rtcRoom:(id)arg0 onSubtitleMessageReceived:(id)arg1;
- (void)rtcRoom:(id)arg0 onUserPublishStream:(id)arg1 isScreen:(BOOL)arg2 mediaStreamType:(unsigned long long)arg3;
- (void)rtcRoom:(id)arg0 onUserUnpublishStream:(id)arg1 mediaStreamType:(unsigned long long)arg2 reason:(long long)arg3;
- (void)rtcEngine:(id)arg0 onUserStartAudioCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStopAudioCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStartVideoCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onUserStopVideoCapture:(id)arg1 uid:(id)arg2;
- (void)rtcEngine:(id)arg0 onConnectionStateChanged:(long long)arg1;
- (void)rtcEngine:(id)arg0 onLocalStreamStats:(long long)arg1 stats:(id)arg2;
- (void)rtcEngine:(id)arg0 onRemoteStreamStats:(id)arg1 stats:(id)arg2;
- (id)audioMixingManager;
- (void)setAudioMixingManager:(id)arg0;
- (id)audioDeviceManager;
- (void)setAudioDeviceManager:(id)arg0;
- (int)enableAudio;
- (int)enableVideo;
- (void)renderPixelBuffer:(struct __CVBuffer { } *)arg0 rotation:(long long)arg1 contentType:(long long)arg2 extendedData:(id)arg3;
- (int)getRenderElapse;
- (id /* block */)debugLogBlock;
- (void)setDebugLogBlock:(id /* block */)arg0;
- (void)leaveChannel;
- (int)adjustPlaybackSignalVolume:(long long)arg0;
- (int)adjustRecordingSignalVolume:(long long)arg0;
- (int)disableAudio;
- (void)appBecomeActive;
- (void)appBecomeInActive;
- (void)setOnlyRenderOnViewReady:(BOOL)arg0;
- (BOOL)onlyRenderOnViewReady;
- (void)setAudioScenario:(long long)arg0;
- (id)videoSinkDelegate;
- (void)setVideoSinkDelegate:(id)arg0;
- (BOOL)isJoined;
- (id)currentLog;
- (void)setRtcRoom:(id)arg0;
- (id)rtcRoom;
- (BOOL)supportPublish;
- (int)reportTimeInterval;
- (void)setReportTimeInterval:(int)arg0;
- (void)setRuntimeParameters:(id)arg0;
- (int)setEnableSpeakerphone:(BOOL)arg0;
- (int)sendRoomMessage:(id)arg0;
- (int)muteLocalVideoStream:(BOOL)arg0;
- (int)muteRemoteVideoStream:(id)arg0 mute:(BOOL)arg1;
- (int)muteAllRemoteVideoStreams:(BOOL)arg0;
- (int)startSubtitle;
- (int)stopSubtitle;
- (id)fullSession;
- (id)localSmallWindowSession;
- (int)reportAudioVolumeIndicationWithDuration:(long long)arg0 callback:(id /* block */)arg1;
- (int)muteLocalAudioStream:(BOOL)arg0 reason:(id)arg1;
- (int)muteAllRemoteAudioStreams:(BOOL)arg0 reason:(id)arg1;
- (void)setRemoteSessionNeedRender:(BOOL)arg0;
- (int)setDefaultMuteAllRemoteVideoStreams:(BOOL)arg0;
- (int)setRemoteVideoSuperResolution:(id)arg0 withMode:(long long)arg1;
- (void)setRemoteVideoDisplayDirect:(BOOL)arg0;
- (void)switchToPlayMode:(long long)arg0;
- (int)enableLocalVideo:(BOOL)arg0;
- (void)updateRtcExtInfo:(id)arg0;
- (void)updateAudioScene:(id)arg0;
- (void)setEarMonitorVolume:(long long)arg0;
- (int)sendUserMessageOutsideRoom:(id)arg0 message:(id)arg1;
- (int)startForwardStreamToRooms:(id)arg0;
- (int)updateForwardStreamToRooms:(id)arg0;
- (int)stopForwardStreamToRooms;
- (int)pauseForwardStreamToAllRooms;
- (int)resumeForwardStreamToAllRooms;
- (int)removeRemotePositionWithLinkMicId:(id)arg0;
- (int)removeAllRemotePosition;
- (void)setRemoteAudioPlaybackVolume:(id)arg0 volume:(int)arg1;
- (int)startPlayPublicStream:(id)arg0;
- (int)stopPlayPublicStream:(id)arg0;
- (int)setPublicStreamVideoCanvas:(id)arg0 withCanvas:(id)arg1;
- (int)setPublicStreamAudioPlaybackVolume:(id)arg0 volume:(long long)arg1;
- (void)reportAudioKeyApiCallWithEventKey:(id)arg0 params:(id)arg1 reason:(id)arg2;
- (BOOL)joinChannel;
- (int)muteRemoteAudioStream:(id)arg0 mute:(BOOL)arg1 reason:(id)arg2;
- (int)updateSelfPositionInfo:(id)arg0;
- (int)updateRemoteLinkMicId:(id)arg0 postionInfo:(id)arg1;
- (void)interactClientWillLeaveChannel:(id)arg0;
- (id)rtcEngineKit;
- (void)setLiveRtc:(id)arg0;
- (void)setRtcTranscodeAVParams:(id)arg0;
- (id)rtcTranscodeAVParams;
- (id)liveRtc;
- (long long)getMixType:(id)arg0;
- (void)setEnableSingleView:(BOOL)arg0;
- (id /* block */)inputRtcFrameCallback;
- (void)setInputRtcFrameCallback:(id /* block */)arg0;
- (void)setShouldEnableLogReport:(BOOL)arg0;
- (void)setClientVideoFrameCallback:(id /* block */)arg0;
- (void)setClientAudioFrameCallback:(id /* block */)arg0;
- (void)setRenderFilterBlock:(id /* block */)arg0;
- (BOOL)setupWith:(id)arg0 withClientPushSuccess:(BOOL)arg1 delegate:(id)arg2;
- (struct IESLiveLinkRTCVideoMixStreamInfo { struct IESLiveLinkRTCVideoProfile { long long x0; long long x1; long long x2; long long x3; } x0; })getRtcMixStreamInfo;
- (struct IESLiveLinkRTCVideoProfile { long long x0; long long x1; long long x2; long long x3; })getRtcVideoResolution;
- (void)setPreJoinChannel:(BOOL)arg0;
- (void)setPrePushStream:(BOOL)arg0;
- (void)resetRtcEngine;
- (BOOL)pullAudioFrame:(void *)arg0 size:(int)arg1 uid:(id)arg2;
- (id)lastAppData;
- (void)setSyncCacheIsRunning:(BOOL)arg0;
- (id)fetchSessionOfUID:(id)arg0;
- (id)getSyncCacheLock;
- (void)setSyncCacheSet:(id)arg0;
- (id)hostSession;
- (id)localSession;
- (int)enableAudioVolumeIndication:(long long)arg0 smooth:(long long)arg1;
- (int)enableLocalAudio:(BOOL)arg0;
- (int)disableVideo;
- (BOOL)setRtcVideoFrameRate:(int)arg0;
- (int)setDefaultMuteAllRemoteAudioStreams:(BOOL)arg0;
- (BOOL)isSendDualStream;
- (void)setRemoteVideoStream:(id)arg0 withStreamType:(long long)arg1;
- (long long)countRemoteUser;
- (int)setLocalVideoDenoiseMode:(long long)arg0 withMode:(long long)arg1;
- (void)enableAudioSpatialRender:(BOOL)arg0;
- (void)setVideoSourceType:(long long)arg0 withStreamIndex:(long long)arg1;
- (int)sendSEIMessage:(id)arg0 andRepeatCount:(int)arg1 withStreamIndex:(long long)arg2;
- (id)getBusinessId;
- (BOOL)prePushStream;
- (BOOL)preJoinChannel;
- (void)processAudio:(void *)arg0 size:(unsigned int)arg1 timestamp:(double)arg2;
- (void)processVideo:(struct __CVBuffer { } *)arg0 timeInfo:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1 extData:(id)arg2;
- (long long)sendUserMessage:(id)arg0 message:(id)arg1;
- (long long)sendUserBinaryMessage:(id)arg0 message:(id)arg1;
- (int)sendRoomBinaryMessage:(id)arg0;
- (struct IESLiveLinkRTCVideoProfile { long long x0; long long x1; long long x2; long long x3; })getPerformanceProfile:(long long)arg0;
- (BOOL)setRtcVideoSize:(struct CGSize { double x0; double x1; })arg0 fps:(long long)arg1 frameKbps:(long long)arg2;
- (int)startPushPublicStream:(id)arg0 withLayout:(id)arg1;
- (int)stopPushPublicStream:(id)arg0;
- (int)setPublicStreamVideoSink:(id)arg0 withSink:(id)arg1 withPixelFormat:(long long)arg2;
- (id /* block */)renderFilterBlock;
- (void)addLocalSmallWindowSession;
- (void)removeLocalSmallWindowSession;
- (void)_stopStatisticsTimer;
- (BOOL)rtcEngineInitWithConfig:(id)arg0 delegate:(id)arg1;
- (void)setOriginStreamWidth:(long long)arg0;
- (void)setOriginStreamHeight:(long long)arg0;
- (BOOL)needUpdateConfig:(id)arg0;
- (void)configRTCEngineBeforeCreate;
- (BOOL)createRTCEngine;
- (void)setupLogReporter;
- (id)byteRtcEngine;
- (id)remoteUsersMap;
- (void)setRemoteUsersMap:(id)arg0;
- (void)addLocalSessionWithMode:(long long)arg0;
- (void)layoutSessionViews:(BOOL)arg0;
- (void)_startStatisticsTimer;
- (id /* block */)clientAudioFrameCallback;
- (id)getInteractMixType;
- (id)logReporter;
- (id)QoSInfo;
- (id)videosDurationStatistics;
- (long long)pushStreamWidth;
- (long long)pushStreamHeight;
- (void)setPushStreamWidth:(long long)arg0;
- (void)setPushStreamHeight:(long long)arg0;
- (BOOL)remoteSessionNeedRender;
- (void)setInternAudioVolumeReportBlock:(id /* block */)arg0;
- (void)setIsNeedStartVolumeBySelf:(BOOL)arg0;
- (void)setHostSession:(id)arg0;
- (int)p_muteAllRemoteAudioStreams:(BOOL)arg0 source:(id)arg1 reason:(id)arg2;
- (long long)originStreamWidth;
- (long long)originStreamHeight;
- (void)setDisplayDirect:(BOOL)arg0;
- (void)setLogReporter:(id)arg0;
- (id)newSessionOfUid:(id)arg0;
- (void)bindRenderer:(id)arg0;
- (void)setLocalSession:(id)arg0;
- (void)setLocalSmallWindowSession:(id)arg0;
- (id)transferLinkPositionInfo:(id)arg0;
- (id)qosInfo;
- (BOOL)shouldEnableLogReport;
- (void)updateStat;
- (id)internSessions;
- (id /* block */)internAudioVolumeReportBlock;
- (BOOL)needUpdateRemoteFirstAudioOrVideo:(int)arg0 uid:(id)arg1;
- (id)VideosDurationStatistics;
- (id)sessionOfStrUid:(id)arg0;
- (BOOL)isNeedStartVolumeBySelf;
- (void)setMRtcJoinChannelTimeCost:(long long)arg0;
- (long long)mRtcJoinChannelTimeCost;
- (id)firstRenderInfoMapLock;
- (id)firstRenderInfoMap;
- (BOOL)displayDirect;
- (BOOL)enableSingleView;
- (id)syncCacheUser;
- (id /* block */)clientVideoFrameCallback;
- (void)deleteSessionWithUID:(id)arg0;
- (void)updateLocalStreamStats:(id)arg0;
- (void)updateRemoteStreamStats:(id)arg0;
- (void)updateUserPublishStream:(id)arg0 type:(unsigned long long)arg1;
- (void)updateUserUnpublishStream:(id)arg0 type:(unsigned long long)arg1 reason:(long long)arg2;
- (void)reportInteractStatusLog:(id)arg0;
- (int)renewChannelKey:(id)arg0;
- (id)getSyncCacheSet;
- (void)rtcEngine:(id)arg0 onPushPublicStreamResult:(id)arg1 publiscStreamId:(id)arg2 errorCode:(long long)arg3;
- (id /* block */)requestChannelKeyBlock;
- (void)setRequestChannelKeyBlock:(id /* block */)arg0;
- (id)roomLock;
- (void)setRoomLock:(id)arg0;
- (void)setInternSessions:(id)arg0;
- (void)setQosInfo:(id)arg0;
- (long long)timeTickCnt;
- (void)setTimeTickCnt:(long long)arg0;
- (void)setVideosDurationStatistics:(id)arg0;
- (unsigned long long)rtcReportId;
- (void)setRtcReportId:(unsigned long long)arg0;
- (id)lastRtcConfigDescription;
- (void)setLastRtcConfigDescription:(id)arg0;
- (BOOL)mixBitRateIsFromExtInfo;
- (void)setMixBitRateIsFromExtInfo:(BOOL)arg0;
- (id)lastPushVideoData;
- (void)setLastPushVideoData:(id)arg0;
- (BOOL)mSwitchedPlayMode;
- (void)setMSwitchedPlayMode:(BOOL)arg0;
- (id)trascodingURL;
- (void)setTrascodingURL:(id)arg0;
- (id)transcodingSetting;
- (void)setTranscodingSetting:(id)arg0;
- (void)setFirstRenderInfoMap:(id)arg0;
- (void)setFirstRenderInfoMapLock:(id)arg0;
- (void)setSyncCacheUser:(id)arg0;
- (id)syncCacheLock;
- (void)setSyncCacheLock:(id)arg0;
- (BOOL)syncCacheIsRunning;
- (void)setCurrentState:(long long)arg0;
- (id)init;
- (id)sessions;
- (void)debugLog:(id)arg0;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (void)setTimerManager:(id)arg0;
- (long long)currentState;
- (id)config;
- (id)timerManager;
- (id)delegate;
- (void)setClientConfig:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (int)setBusinessId:(id)arg0;
- (BOOL)isHost;
- (int)login;
- (void)setPlaybackVolume:(long long)arg0;
- (void)removeAllSessions;
- (id /* block */)logBlock;
- (void)setLogBlock:(id /* block */)arg0;

@end
