//
//     Generated by private class-dump
//

@class NSError, NSString, NSFileHandle, HGTTPkgModel, NSMutableDictionary, NSDictionary, HGSTLQueue, NSMutableSet, NSObject, NSMapTable, HGPkgFileBasicModel;
@protocol OS_dispatch_queue, HGFileHandleLifecycleDelegate, OS_dispatch_semaphore;

@interface HGInternalFileHandle : NSObject <HGRAPackDelegate, HGFileHandleFullProtocol> {
    BOOL _isReaderReady;
    BOOL _isCommonFileDecompressed;
    BOOL _isXzFileDecompressed;
    BOOL _isResFileDownloaded;
    float _downloadProgress;
    HGPkgFileBasicModel *_model;
    long long _loadStatus;
    id<HGFileHandleLifecycleDelegate> _delegate;
    NSString *_appFolderPath;
    NSDictionary *_fileIndexMap;
    long long _createLoadStatus;
    NSObject<OS_dispatch_queue> *_readerProcessQueue;
    NSMutableSet *_fileTaskSet;
    HGSTLQueue *_fileInfoQueue;
    NSMapTable *_fileTaskMap;
    unsigned long long _originalFileOffset;
    unsigned long long _downloadOffset;
    NSString *_resTempPath;
    NSFileHandle *_fileHandle;
    NSError *_downloadError;
    NSObject<OS_dispatch_queue> *_resProcessQueue;
    HGSTLQueue *_downloadCompletionQueue;
    NSMutableDictionary *_downloadProgressBlkDic;
    HGTTPkgModel *_ttModel;
    NSObject<OS_dispatch_semaphore> *_statusSemaphore;
}

@property (nonatomic) long long loadStatus;
@property (nonatomic) long long createLoadStatus;
@property (retain, nonatomic) HGPkgFileBasicModel *model;
@property (weak, nonatomic) id<HGFileHandleLifecycleDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)loadStatusForModel:(id)arg0;
+ (id)handleWithBasicModel:(id)arg0 delegate:(id)arg1 error:(id *)arg2;

- (id)basic;
- (void)appContainerWillBeClosed;
- (void)cancelAllReadDataCompletionBlks;
- (void)readDataWithFilePath:(id)arg0 syncIfDownloaded:(BOOL)arg1 dispatchQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleDownloadTaskResult:(id)arg0 result:(id)arg1;
- (void)_executeDownloadProgressBlock:(long long)arg0 withTotalBytes:(long long)arg1;
- (long long)httpRangeOffset;
- (void)ttpkgDownloadTaskWillBegin:(id)arg0;
- (void)pkgDownloadTask:(id)arg0 receivedData:(id)arg1 totalBytes:(long long)arg2 httpStatus:(unsigned long long)arg3 error:(id)arg4;
- (void)pkgDownloadTask:(id)arg0 didFinishWithResult:(id)arg1;
- (void)pkgDownloadTask:(id)arg0 didCancelWithResult:(id)arg1;
- (void)setCreateLoadStatus:(long long)arg0;
- (long long)createLoadStatus;
- (void)startDownloadTask:(unsigned long long)arg0;
- (void)checkExistedFileInPkg:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)getFileSizeInPkg:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)getContentsOfDirAtPath:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)readDataWithFilePath:(id)arg0 dispatchQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)readDataURLWithFilePath:(id)arg0 dispatchQueue:(id)arg1 completion:(id /* block */)arg2;
- (id)readDataWithFilePath:(id)arg0 error:(id *)arg1;
- (id)urlOfDataWithFilePath:(id)arg0 error:(id *)arg1;
- (BOOL)fileExistsInPkgAtPath:(id)arg0;
- (long long)fileSizeInPkgAtPath:(id)arg0;
- (id)contentsOfPkgDirAtPath:(id)arg0;
- (void)addLoadProgressBlk:(id /* block */)arg0;
- (void)removeAllLoadProgressBlks;
- (void)addCompletionByPagePath:(id)arg0 blk:(id /* block */)arg1;
- (void)addPkgHeaderDidParseBlk:(id /* block */)arg0;
- (BOOL)usedCacheMeta;
- (void)stopDownloadTask;
- (void)setModel:(id)arg0;
- (void).cxx_destruct;
- (long long)loadStatus;
- (id)model;
- (void)setLoadStatus:(long long)arg0;
- (id)delegate;
- (void)setDelegate:(id)arg0;

@end
