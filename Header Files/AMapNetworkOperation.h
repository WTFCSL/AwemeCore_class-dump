//
//     Generated by private class-dump
//

@class NSURLSessionTask, NSHTTPURLResponse, NSDate, NSObject, NSSet, NSURLRequest, NSString, NSRecursiveLock, AMapDNSResolver, NSData, NSOutputStream, NSError, NSURLSessionTaskMetrics;
@protocol OS_dispatch_queue, AMapRequestReformerProtocol;

@interface AMapNetworkOperation : NSOperation <AMapNetworkSessionDelegate> {
    BOOL _finished;
    BOOL _executing;
    BOOL _isIpV6Url;
    BOOL _isDownLevel;
    NSOutputStream *_outputStream;
    NSURLRequest *_request;
    NSHTTPURLResponse *_response;
    NSError *_error;
    NSData *_responseData;
    id _userData;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSRecursiveLock *_lock;
    NSSet *_runLoopModes;
    id /* block */ _downloadProgress;
    id /* block */ _completionHandler;
    id /* block */ _backgroundTaskCleanup;
    NSURLSessionTask *_sessionTask;
    long long _expectedSize;
    long long _totalBytesRead;
    NSDate *_startDate;
    NSDate *_endDate;
    id<AMapRequestReformerProtocol> _requestReformer;
    AMapDNSResolver *_dnsResolver;
    NSURLSessionTaskMetrics *_metrics;
}

@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSSet *runLoopModes;
@property (copy, nonatomic) id /* block */ downloadProgress;
@property (copy, nonatomic) id /* block */ completionHandler;
@property (copy, nonatomic) id /* block */ backgroundTaskCleanup;
@property (retain, nonatomic) NSURLSessionTask *sessionTask;
@property (nonatomic) long long expectedSize;
@property (nonatomic) long long totalBytesRead;
@property (retain, nonatomic) NSDate *startDate;
@property (retain, nonatomic) NSDate *endDate;
@property (nonatomic, getter=isExecuting) BOOL executing;
@property (nonatomic, getter=isFinished) BOOL finished;
@property (retain, nonatomic) id<AMapRequestReformerProtocol> requestReformer;
@property (nonatomic) BOOL isIpV6Url;
@property (nonatomic) BOOL isDownLevel;
@property (retain, nonatomic) AMapDNSResolver *dnsResolver;
@property (retain, nonatomic) NSURLSessionTaskMetrics *metrics;
@property (readonly, nonatomic) NSURLRequest *request;
@property (readonly, nonatomic) NSHTTPURLResponse *response;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) NSData *responseData;
@property (retain, nonatomic) id userData;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)networkRequestThreadEntryPoint:(id)arg0;
+ (id)networkRequestThread;

- (void)setShouldExecuteAsBackgroundTaskWithExpirationHandler:(id /* block */)arg0;
- (void)setExpectedSize:(long long)arg0;
- (unsigned long long)degradeType;
- (void)sessionTask:(id)arg0 didReceiveResponse:(id)arg1;
- (void)sessionTask:(id)arg0 didReceiveData:(id)arg1;
- (void)sessionTask:(id)arg0 didFinishCollectingMetrics:(id)arg1;
- (void)deallocOperation;
- (id)initWithReformer:(id)arg0;
- (void)setCompletionHandlerBlock:(id /* block */)arg0;
- (void)setRequestReformer:(id)arg0;
- (void)setIsIpV6Url:(BOOL)arg0;
- (void)setIsDownLevel:(BOOL)arg0;
- (void)invokeCompletionBlock;
- (id)requestReformer;
- (BOOL)canDegrage;
- (BOOL)isDownLevel;
- (id /* block */)backgroundTaskCleanup;
- (void)setBackgroundTaskCleanup:(id /* block */)arg0;
- (void)logNetEvent;
- (BOOL)isIpV6Url;
- (BOOL)currentRequestSupportAPM;
- (void)logNetPerformanceModel:(id)arg0;
- (id)dnsResolver;
- (void)setDnsResolver:(id)arg0;
- (id /* block */)downloadProgress;
- (void)setFinished:(BOOL)arg0;
- (BOOL)isFinished;
- (void)setCompletionQueue:(id)arg0;
- (BOOL)isAsynchronous;
- (void)done;
- (id)initWithRequest:(id)arg0;
- (id)init;
- (BOOL)isConcurrent;
- (id)responseData;
- (id)metrics;
- (void)setMetrics:(id)arg0;
- (void).cxx_destruct;
- (BOOL)isExecuting;
- (id)completionQueue;
- (id)userData;
- (void)startConnection;
- (void)setCompletionHandler:(id /* block */)arg0;
- (id)response;
- (void)setEndDate:(id)arg0;
- (void)setOutputStream:(id)arg0;
- (id)request;
- (void)setDownloadProgress:(id /* block */)arg0;
- (void)setUserData:(id)arg0;
- (id)outputStream;
- (id)startDate;
- (id)lock;
- (void)cancel;
- (void)setStartDate:(id)arg0;
- (id /* block */)completionHandler;
- (id)endDate;
- (void)start;
- (void)dealloc;
- (void)reset;
- (void)setExecuting:(BOOL)arg0;
- (void)setLock:(id)arg0;
- (id)error;
- (void)setRunLoopModes:(id)arg0;
- (id)runLoopModes;
- (void)setTotalBytesRead:(long long)arg0;
- (void)sessionTask:(id)arg0 didCompleteWithError:(id)arg1;
- (id)sessionTask;
- (void)setSessionTask:(id)arg0;
- (void)cancelConnection;
- (long long)expectedSize;
- (void)setDownloadProgressBlock:(id /* block */)arg0;
- (long long)totalBytesRead;

@end
