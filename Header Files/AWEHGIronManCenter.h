//
//     Generated by private class-dump
//

@class UIViewController, NSString, NSMutableSet, HGUniqueID;
@protocol AWEHGIronManContainerTransitionDelegate;

@interface AWEHGIronManCenter : NSObject <AWEUserMessage, HGApplicationLifeCycleMessage, AWEOpenURLMessage, HGContainerAnimatedTransitioning, AWESettingsPushMessage> {
    NSMutableSet *_gameModelSet;
    long long _ironManPublishStatus;
    id<AWEHGIronManContainerTransitionDelegate> _ironManTransitionDelegate;
    HGUniqueID *_uniqueID;
    UIViewController *_rvVC;
}

@property (retain, nonatomic) HGUniqueID *uniqueID;
@property (retain, nonatomic) UIViewController *rvVC;
@property (retain, nonatomic) NSMutableSet *gameModelSet;
@property (nonatomic) long long ironManPublishStatus;
@property (weak, nonatomic) id<AWEHGIronManContainerTransitionDelegate> ironManTransitionDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)trackIronMan:(id)arg0 event:(id)arg1 scene:(id)arg2 refer:(id)arg3 carrier:(id)arg4 groupId:(id)arg5 authorId:(id)arg6 extraInfo:(id)arg7;
+ (void)excuteAfterLaunch;
+ (id)currentLibVersion;
+ (void)registerJSSDKVersion;
+ (void)trackIronMan:(id)arg0 event:(id)arg1 scene:(id)arg2 refer:(id)arg3 carrier:(id)arg4 groupId:(id)arg5 authorId:(id)arg6;
+ (void)trackIronManWithSchema:(id)arg0 event:(id)arg1 refer:(id)arg2 tagID:(id)arg3;
+ (id)getPlatformChannel:(long long)arg0;
+ (id)sceneQueryStringWithShareType:(long long)arg0;
+ (void)visitAppWithAppSchema:(id)arg0;
+ (id)ironManShareSchemeFromURL:(id)arg0;
+ (long long)ironManTypeForURLString:(id)arg0;
+ (id)platformChannelWithShareType:(id)arg0;
+ (void)preloadTimorWithURL:(id)arg0 priority:(long long)arg1;
+ (id)containerControllerWithURL:(id)arg0;
+ (void)notifyTransitionWithDestinationController:(id)arg0 transitionState:(long long)arg1;
+ (id)ironManTitle;
+ (id)sceneAndBdpLogQueryStringWithPlatformType:(id)arg0 withSchema:(id)arg1;
+ (BOOL)isIronManOrSpiderManPresenting;
+ (void)exchangeHGMethod;
+ (void)copyFromStandardDefaults;
+ (id)paramOfSpecialWithType:(long long)arg0;
+ (void)ironManTrackerWithSchema:(id)arg0;
+ (void)ironManKibanaMonitorWithSchema:(id)arg0;
+ (id)timorSchemaUrlWithComposeAdParams:(id)arg0;
+ (id)getViewControllersStack;
+ (id)ironManURLParamsWithSchema:(id)arg0;
+ (void)topViewControllerForController:(id)arg0 viewControllerStack:(id)arg1;
+ (void)setUniqueIDForIronManShare:(id)arg0;
+ (id)getUniqueIDForIronManSharel;
+ (id)sharedInstance;

- (void)didFinishLogout;
- (long long)ironManPublishStatus;
- (void)setIronManPublishStatus:(long long)arg0;
- (void)setIronManTransitionDelegate:(id)arg0 toTransitionContainer:(id)arg1;
- (void)timorContainerDidUpdateInteractivePercentPoregress:(double)arg0;
- (void)timorContainerDidBeginInteractive;
- (void)timorContainerDidFinishInteractive;
- (void)timorContainerDidCancelInteractive;
- (BOOL)timorContainerShouldRequireFailureOfGestureRecognizer:(id)arg0;
- (BOOL)isSupportLandscape;
- (void)didOpenURL:(id)arg0 sourceApplication:(id)arg1 annotation:(id)arg2;
- (void)performActionForShortcutItem:(id)arg0;
- (void)handleRomotePush;
- (void)handleLocalPush;
- (void)tryToCloseLandsapeSpiderMan;
- (void)bdpSetDelegate:(id)arg0;
- (void)onReceiveByteSyncData:(id)arg0;
- (void)onIronManExit:(id)arg0;
- (void)languageDidChange:(id)arg0;
- (void)onCollectionChange;
- (id)rvVC;
- (void)setRvVC:(id)arg0;
- (void)closeRV;
- (void)openRV:(id)arg0;
- (id)rebuildSchemaByPOIWithSchema:(id)arg0;
- (void)openAppWithSchema:(id)arg0;
- (BOOL)openSpecialHightTimorWithSchema:(id)arg0 startHeightRate:(float)arg1 useDimming:(BOOL)arg2 timorLightScreen:(BOOL)arg3;
- (BOOL)openTimorWithSchema:(id)arg0 presentType:(int)arg1;
- (void)closeTimorVC;
- (void)setIronManTransitionDelegate:(id)arg0;
- (id)ironManTransitionDelegate;
- (BOOL)isLynxGame:(id)arg0;
- (BOOL)actionSchemaWithInfo:(id)arg0;
- (id)designatedRouteNavigationController;
- (id)gameModelSet;
- (void)setGameModelSet:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (id)uniqueID;
- (void)setUniqueID:(id)arg0;
- (void)continueUserActivity:(id)arg0;
- (void)setup;
- (void)dealloc;
- (void)addObserver;

@end
