//
//     Generated by private class-dump
//

@class NSString, NSArray, LVTemplateProcessor, ACCRecommendTemplateInfo, LVTemplateDataManager, NSError, NSDictionary;

@interface AWESelectTemplateInternalProcessOperation : NSOperation <LVTemplateProcessorDelegate> {
    BOOL _executing;
    BOOL _finished;
    BOOL _cancelled;
    id /* block */ _templateCompletion;
    double _startTime;
    ACCRecommendTemplateInfo *_templateInfo;
    NSArray *_assetsArray;
    LVTemplateProcessor *_processor;
    LVTemplateDataManager *_result;
    NSError *_error;
    NSDictionary *_importedAssetsDic;
}

@property (nonatomic) double startTime;
@property (retain, nonatomic) ACCRecommendTemplateInfo *templateInfo;
@property (copy, nonatomic) NSArray *assetsArray;
@property (retain, nonatomic) LVTemplateProcessor *processor;
@property (retain, nonatomic) LVTemplateDataManager *result;
@property (retain, nonatomic) NSError *error;
@property (copy, nonatomic) NSDictionary *importedAssetsDic;
@property (copy, nonatomic) id /* block */ templateCompletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)templateProcessor:(id)arg0 didCompleteWithDataManager:(id)arg1;
- (void)templateProcessor:(id)arg0 didFailWithErrorCode:(unsigned long long)arg1 withSubCode:(id)arg2;
- (void)templateProcessor:(id)arg0 didChangeProgress:(double)arg1;
- (void)templateProcessor:(id)arg0 didPrepareResource:(id)arg1;
- (id)templateInfo;
- (id)initWithTemplateModel:(id)arg0 assetsArray:(id)arg1;
- (void)setTemplateCompletion:(id /* block */)arg0;
- (void)setAssetsArray:(id)arg0;
- (void)setErrorForCancel;
- (id)assetsArray;
- (void)templateDownloadCallbackWithFilePath:(id)arg0 error:(id)arg1 templateModel:(id)arg2;
- (void)genFragmentInfoAndReplace;
- (id)importedAssetsDic;
- (id /* block */)templateCompletion;
- (void)setImportedAssetsDic:(id)arg0;
- (void)setFinished:(BOOL)arg0;
- (BOOL)isFinished;
- (BOOL)isAsynchronous;
- (void)done;
- (BOOL)isConcurrent;
- (void)setResult:(id)arg0;
- (void)setStartTime:(double)arg0;
- (void).cxx_destruct;
- (BOOL)isExecuting;
- (id)result;
- (double)startTime;
- (void)cancel;
- (void)setError:(id)arg0;
- (void)start;
- (BOOL)isCancelled;
- (void)setTemplateInfo:(id)arg0;
- (void)setExecuting:(BOOL)arg0;
- (id)error;
- (id)processor;
- (void)setProcessor:(id)arg0;
- (id)templateModel;

@end
