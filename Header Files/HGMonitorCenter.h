//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSTimer, NSDictionary, NSString;

@interface HGMonitorCenter : NSObject <HGApplicationLifeCycleMessage, HGWarmBootMessage, HGBusinessMonitorMessage, HGRuntimeLifeCycleMessage> {
    BOOL _enableMonitorReport;
    NSDictionary *_monitorList;
    NSMutableDictionary *_monitors;
    NSTimer *_collectTimer;
    double _collectInterval;
    double _reportInterval;
    double _reportFirstFireDelay;
}

@property (retain, nonatomic) NSMutableDictionary *monitors;
@property (retain, nonatomic) NSTimer *collectTimer;
@property (nonatomic) double collectInterval;
@property (nonatomic) double reportInterval;
@property (nonatomic) double reportFirstFireDelay;
@property (nonatomic) BOOL enableMonitorReport;
@property (copy, nonatomic) NSDictionary *monitorList;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (id)getMonitorCategory:(id)arg0;
+ (id)getMonitorMetric:(id)arg0 monitorData:(id)arg1;
+ (void)storeGameMonitorData:(id)arg0;
+ (id)sharedInstance;

- (void)setReportInterval:(double)arg0;
- (double)reportInterval;
- (void)applicationFirstFrameDidShow:(id)arg0 baseVC:(id)arg1;
- (void)runningDispatchQueue:(id)arg0 didStopWithUniqueID:(id)arg1;
- (void)unregisterMemoryWarningTimerWithUniqueID:(id)arg0;
- (void)registerBusinessMonitor:(id)arg0 forUniqueID:(id)arg1;
- (void)registerMemoryWarningTimerWithUniqueID:(id)arg0 warningBlock:(id /* block */)arg1 killBlock:(id /* block */)arg2;
- (void)cleanWarmCacheWithUniqueID:(id)arg0;
- (BOOL)enableMonitorReport;
- (void)collectMonitorData;
- (void)addMonitor:(id)arg0 forUniqueID:(id)arg1;
- (void)removeMonitrorForUniqueID:(id)arg0;
- (id)monitorList;
- (void)customCollectInterval:(double)arg0 reportIntervals:(double)arg1 reportFirstFireDelay:(double)arg2;
- (void)resetAllIntervalToDefault;
- (void)setEnableMonitorReport:(BOOL)arg0;
- (void)setMonitorList:(id)arg0;
- (id)collectTimer;
- (void)setCollectTimer:(id)arg0;
- (double)collectInterval;
- (void)setCollectInterval:(double)arg0;
- (double)reportFirstFireDelay;
- (void)setReportFirstFireDelay:(double)arg0;
- (void).cxx_destruct;
- (void)setMonitors:(id)arg0;
- (id)_init;
- (id)monitors;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)_resetTimer;
- (void)startMonitor;
- (void)stopMonitor;

@end
