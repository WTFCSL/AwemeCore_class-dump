//
//     Generated by private class-dump
//

@class NSString, NSDictionary;
@protocol Optional;

@interface TTDownloadTrackModel : JSONModel {
    BOOL _httpsDegradeEnable;
    BOOL _hasHttpsDegrade;
    BOOL _isWifiOnly;
    BOOL _isBgDownloadEnable;
    BOOL _isBackgroundDownloadFinish;
    BOOL _isRestore;
    BOOL _isLittleFile;
    BOOL _isSkipGCL;
    char _urlsCount;
    float _downloadSpeed;
    NSString *_downloadId;
    NSString *_fileStorageDir;
    NSString<Optional> *_md5Value;
    double _md5Time;
    NSString<Optional> *_url;
    NSString<Optional> *_secondUrl;
    NSString<Optional> *_name;
    double _downloadTime;
    long long _totalBytes;
    long long _curBytes;
    long long _sliceCount;
    long long _urlRetryCount;
    long long _curUrlRetryTime;
    double _urlRetryInterval;
    double _gclTime;
    long long _retryCount;
    long long _curRetryTime;
    double _sliceMergeTime;
    long long _restoreCount;
    long long _curRestoreTime;
    double _retryInterval;
    double _retryIntervalIncrement;
    long long _throttleNetSpeed;
    long long _failStatus;
    NSString<Optional> *_failMsg;
    double _bgDownloadTime;
    long long _curBgDownloadBytes;
    long long _trackStatus;
    long long _realDownloadLength;
    long long _downloadedLenInit;
    NSString *_pcdnLog;
    double _cacheLifeTimeMax;
    NSDictionary<Optional> *_extraParams;
    double _curStartTime;
    long long _curFgDownloadBytes;
    double _curBgStartTime;
}

@property double curStartTime;
@property long long curFgDownloadBytes;
@property double curBgStartTime;
@property (copy) NSString *downloadId;
@property (copy) NSString *fileStorageDir;
@property (copy) NSString<Optional> *md5Value;
@property double md5Time;
@property (copy) NSString<Optional> *url;
@property (copy) NSString<Optional> *secondUrl;
@property (copy) NSString<Optional> *name;
@property double downloadTime;
@property long long totalBytes;
@property long long curBytes;
@property long long sliceCount;
@property long long urlRetryCount;
@property long long curUrlRetryTime;
@property double urlRetryInterval;
@property double gclTime;
@property long long retryCount;
@property long long curRetryTime;
@property double sliceMergeTime;
@property long long restoreCount;
@property long long curRestoreTime;
@property double retryInterval;
@property double retryIntervalIncrement;
@property BOOL httpsDegradeEnable;
@property BOOL hasHttpsDegrade;
@property long long throttleNetSpeed;
@property long long failStatus;
@property (copy) NSString<Optional> *failMsg;
@property BOOL isWifiOnly;
@property BOOL isBgDownloadEnable;
@property BOOL isBackgroundDownloadFinish;
@property double bgDownloadTime;
@property long long curBgDownloadBytes;
@property float downloadSpeed;
@property long long trackStatus;
@property long long realDownloadLength;
@property long long downloadedLenInit;
@property BOOL isRestore;
@property (copy) NSString *pcdnLog;
@property BOOL isLittleFile;
@property double cacheLifeTimeMax;
@property BOOL isSkipGCL;
@property char urlsCount;
@property (copy) NSDictionary<Optional> *extraParams;

+ (id)keyMapper;
+ (BOOL)propertyIsOptional:(id)arg0;
+ (id)generateDownloadIdWithUrl:(id)arg0 fileName:(id)arg1;

- (void)setCacheLifeTimeMax:(double)arg0;
- (void)setThrottleNetSpeed:(long long)arg0;
- (long long)throttleNetSpeed;
- (double)cacheLifeTimeMax;
- (id)extraParams;
- (void)setExtraParams:(id)arg0;
- (void)setTrackStatus:(long long)arg0;
- (long long)trackStatus;
- (void)setDownloadTime:(double)arg0;
- (void)setCurBytes:(long long)arg0;
- (id)fileStorageDir;
- (void)setFileStorageDir:(id)arg0;
- (id)secondUrl;
- (void)setSecondUrl:(id)arg0;
- (void)setMd5Value:(id)arg0;
- (void)setDownloadId:(id)arg0;
- (void)addBgDownloadBytes:(long long)arg0;
- (void)setCurRetryTime:(long long)arg0;
- (void)setCurRestoreTime:(long long)arg0;
- (void)setCurUrlRetryTime:(long long)arg0;
- (void)setGclTime:(double)arg0;
- (void)setMd5Time:(double)arg0;
- (void)setSliceMergeTime:(double)arg0;
- (void)setIsBgDownloadEnable:(BOOL)arg0;
- (void)setBgDownloadTime:(double)arg0;
- (void)setCurBgDownloadBytes:(long long)arg0;
- (void)setUrlRetryCount:(long long)arg0;
- (void)setUrlRetryInterval:(double)arg0;
- (void)setSliceCount:(long long)arg0;
- (void)setRetryIntervalIncrement:(double)arg0;
- (void)setHttpsDegradeEnable:(BOOL)arg0;
- (void)setIsWifiOnly:(BOOL)arg0;
- (void)setRestoreCount:(long long)arg0;
- (void)setHasHttpsDegrade:(BOOL)arg0;
- (void)addCurUrlRetryTime:(long long)arg0;
- (void)setPcdnLog:(id)arg0;
- (void)setDownloadedLenInit:(long long)arg0;
- (void)setIsSkipGCL:(BOOL)arg0;
- (void)setUrlsCount:(char)arg0;
- (void)calculateInternal;
- (void)setIsBackgroundDownloadFinish:(BOOL)arg0;
- (void)recordFgDownloadBytes;
- (void)setBgDownloadStartTime;
- (double)addBgDownloadTimeWithReSet;
- (void)addCurRestoreTime:(long long)arg0;
- (long long)downloadedLenInit;
- (long long)realDownloadLength;
- (void)setRealDownloadLength:(long long)arg0;
- (void)setIsLittleFile:(BOOL)arg0;
- (void)setCurStartTime:(double)arg0;
- (double)curStartTime;
- (void)setCurBgStartTime:(double)arg0;
- (double)curBgStartTime;
- (void)setCurFgDownloadBytes:(long long)arg0;
- (long long)curFgDownloadBytes;
- (double)addDownloadTime;
- (void)addCurRetryTime:(long long)arg0;
- (double)addDownloadTimeWithReSet;
- (BOOL)isBgDownloadEnable;
- (void)calBgDownloadBytes;
- (void)setFailStatus:(long long)arg0;
- (void)setFailMsg:(id)arg0;
- (long long)failStatus;
- (id)failMsg;
- (id)downloadId;
- (BOOL)isWifiOnly;
- (long long)sliceCount;
- (long long)curRetryTime;
- (long long)curBytes;
- (id)md5Value;
- (double)md5Time;
- (double)downloadTime;
- (long long)urlRetryCount;
- (long long)curUrlRetryTime;
- (double)urlRetryInterval;
- (double)gclTime;
- (double)retryIntervalIncrement;
- (double)sliceMergeTime;
- (BOOL)isBackgroundDownloadFinish;
- (double)bgDownloadTime;
- (long long)curBgDownloadBytes;
- (BOOL)httpsDegradeEnable;
- (BOOL)hasHttpsDegrade;
- (long long)restoreCount;
- (long long)curRestoreTime;
- (id)pcdnLog;
- (BOOL)isLittleFile;
- (BOOL)isSkipGCL;
- (long long)totalBytes;
- (id)init;
- (void).cxx_destruct;
- (void)setRetryCount:(long long)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (long long)retryCount;
- (void)setUrl:(id)arg0;
- (void)setName:(id)arg0;
- (void)dealloc;
- (id)url;
- (void)setDownloadStartTime:(double)arg0;
- (id)name;
- (char)urlsCount;
- (BOOL)isRestore;
- (void)setIsRestore:(BOOL)arg0;
- (void)setTotalBytes:(long long)arg0;
- (float)downloadSpeed;
- (void)setDownloadSpeed:(float)arg0;
- (double)retryInterval;
- (void)setRetryInterval:(double)arg0;

@end
