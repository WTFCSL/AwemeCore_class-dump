//
//     Generated by private class-dump
//

@class NSString, NSObject;
@protocol SpeechEngineDelegate, OS_dispatch_semaphore;

@interface SpeechEngine : NSObject {
    struct Engine { struct EngineImpl *x0; } *engine;
    struct Options { struct OptionsImpl *x0; } *options;
    struct SpeechEngineListener { void /* function */ **x0; id x1; } *listener;
    BOOL _inited;
    BOOL _aecEnable;
    BOOL _needResetAudioSession;
    BOOL _needRestartAudioSession;
    BOOL _needResumeOthersInterruptedPlayback;
    BOOL _needRegisterBackgroundNotification;
    BOOL _needRegisterInterruptionNotification;
    BOOL _recSetCategoryAlready;
    BOOL _playSetCategoryAlready;
    int _ttsWorkMode;
    NSString *_engineName;
    NSString *_ttsScenarioType;
    NSString *_recorderType;
    NSObject<OS_dispatch_semaphore> *_waitAudioPermission;
    NSString *_recCategory;
    unsigned long long _recOptions;
    NSString *_playCategory;
    unsigned long long _playOptions;
    id<SpeechEngineDelegate> _speechEngineDelegate;
}

@property (nonatomic) BOOL inited;
@property (retain, nonatomic) NSString *engineName;
@property (retain, nonatomic) NSString *ttsScenarioType;
@property (retain, nonatomic) NSString *recorderType;
@property (nonatomic) int ttsWorkMode;
@property (nonatomic) BOOL aecEnable;
@property (nonatomic) BOOL needResetAudioSession;
@property (nonatomic) BOOL needRestartAudioSession;
@property (nonatomic) BOOL needResumeOthersInterruptedPlayback;
@property (nonatomic) BOOL needRegisterBackgroundNotification;
@property (nonatomic) BOOL needRegisterInterruptionNotification;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *waitAudioPermission;
@property (nonatomic) BOOL recSetCategoryAlready;
@property (retain, nonatomic) NSString *recCategory;
@property (nonatomic) unsigned long long recOptions;
@property (nonatomic) BOOL playSetCategoryAlready;
@property (retain, nonatomic) NSString *playCategory;
@property (nonatomic) unsigned long long playOptions;
@property (weak, nonatomic) id<SpeechEngineDelegate> speechEngineDelegate;

+ (void)createSpeechEngineMonitorWithHostAppID:(id)arg0 deviceID:(id)arg1;
+ (id)getSpeechEngineMonitor;

- (void)addNotification;
- (void)setEngineName:(id)arg0;
- (BOOL)aecEnable;
- (void)setAecEnable:(BOOL)arg0;
- (BOOL)needRecorder;
- (BOOL)needRegisterBackgroundNotification;
- (BOOL)needRegisterInterruptionNotification;
- (void)audioInterruptionHandler:(id)arg0;
- (BOOL)needResetAudioSession;
- (BOOL)recSetCategoryAlready;
- (id)recCategory;
- (unsigned long long)recOptions;
- (BOOL)playSetCategoryAlready;
- (id)playCategory;
- (BOOL)needResumeOthersInterruptedPlayback;
- (BOOL)needRestartAudioSession;
- (void)setRecSetCategoryAlready:(BOOL)arg0;
- (void)setRecCategory:(id)arg0;
- (void)setRecOptions:(unsigned long long)arg0;
- (id)waitAudioPermission;
- (void)configRecEnvironment:(id)arg0;
- (id)speechEngineDelegate;
- (void)recoverAudioSession;
- (void)onMessageWithType:(int)arg0 andData:(id)arg1;
- (void)setNeedResetAudioSession:(BOOL)arg0;
- (void)setNeedRestartAudioSession:(BOOL)arg0;
- (void)setNeedResumeOthersInterruptedPlayback:(BOOL)arg0;
- (void)setNeedRegisterBackgroundNotification:(BOOL)arg0;
- (void)setNeedRegisterInterruptionNotification:(BOOL)arg0;
- (void)setTtsWorkMode:(int)arg0;
- (void)setTtsScenarioType:(id)arg0;
- (void)setWaitAudioPermission:(id)arg0;
- (int)ttsWorkMode;
- (int)sendDirective:(int)arg0 data:(id)arg1;
- (BOOL)needRecorder:(int)arg0;
- (BOOL)checkRecEnvironment;
- (BOOL)needPlayer:(int)arg0;
- (BOOL)checkPlayEnvironment;
- (int)sendDirective:(int)arg0 data:(id)arg1 privacyCert:(id)arg2;
- (BOOL)checkRecEnvironmentWithPrivacyCert:(id)arg0;
- (int)ProcessAudio:(short *)arg0 length:(int)arg1 isFinal:(BOOL)arg2;
- (int)FetchResult:(int)arg0 result:(id *)arg1;
- (void)setRemoteView:(id)arg0;
- (BOOL)createEngineWithDelegate:(id)arg0;
- (void)setBoolParam:(BOOL)arg0 forKey:(id)arg1;
- (void)setIntParam:(long long)arg0 forKey:(id)arg1;
- (void)setStringParam:(id)arg0 forKey:(id)arg1;
- (BOOL)isEngineSupported:(id)arg0;
- (int)initEngine;
- (int)sendDirective:(int)arg0;
- (int)sendDirective:(int)arg0 privacyCert:(id)arg1;
- (int)feedAudio:(short *)arg0 length:(int)arg1;
- (int)ResetEngine;
- (int)FetchResult:(id *)arg0;
- (id)ttsScenarioType;
- (void)setPlaySetCategoryAlready:(BOOL)arg0;
- (void)setPlayCategory:(id)arg0;
- (void)setSpeechEngineDelegate:(id)arg0;
- (BOOL)inited;
- (unsigned long long)playOptions;
- (void)appDidEnterBackground:(id)arg0;
- (void).cxx_destruct;
- (id)getVersion;
- (void)destroyEngine;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setInited:(BOOL)arg0;
- (void)setPlayOptions:(unsigned long long)arg0;
- (id)recorderType;
- (void)setRecorderType:(id)arg0;
- (id)engineName;

@end
