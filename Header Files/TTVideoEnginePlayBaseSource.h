//
//     Generated by private class-dump
//

@class NSDictionary, TTVideoEngineInfoModel, NSString;
@protocol TTVideoEngineNetClient;

@interface TTVideoEnginePlayBaseSource : NSObject <TTVideoEnginePlaySource> {
    BOOL _cacheVideoModelEnable;
    BOOL _useFallbackApi;
    BOOL _useEphemeralSession;
    NSDictionary *_resolutionMap;
    id<TTVideoEngineNetClient> _netClient;
    TTVideoEngineInfoModel *_fetchData;
}

@property (retain, nonatomic) id<TTVideoEngineNetClient> netClient;
@property (nonatomic) BOOL cacheVideoModelEnable;
@property (nonatomic) BOOL useFallbackApi;
@property (nonatomic) BOOL useEphemeralSession;
@property (retain, nonatomic) TTVideoEngineInfoModel *fetchData;
@property (copy, nonatomic) NSDictionary *resolutionMap;
@property (readonly, copy, nonatomic) NSString *currentUrl;
@property (readonly, nonatomic) BOOL supportSSL;
@property (readonly, nonatomic) BOOL supportDash;
@property (readonly, nonatomic) BOOL supportMP4;
@property (readonly, nonatomic) BOOL supportHLS;
@property (readonly, nonatomic) BOOL supportHLSSeamlessSwitch;
@property (nonatomic) BOOL supportBash;
@property (readonly, nonatomic) BOOL isMbRefactor;
@property (readonly, nonatomic) BOOL isSingleUrl;
@property (readonly, nonatomic) BOOL isMainUrl;
@property (readonly, nonatomic) BOOL isLivePlayback;
@property (readonly, nonatomic) BOOL isLocalFile;
@property (readonly, nonatomic) BOOL enableAdaptive;
@property (readonly, nonatomic) BOOL canFetch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (long long)getValueInt:(long long)arg0;
- (id)currentUrl;
- (void)setNetClient:(id)arg0;
- (id)getValueStr:(int)arg0;
- (double)getValueFloat:(int)arg0;
- (id)barrageMaskUrl;
- (id)aiBarrageUrl;
- (id)spade_a;
- (long long)videoModelVersion;
- (id)getVideoList;
- (unsigned long long)autoResolution;
- (id)resolutionMap;
- (id)refString;
- (id)decodingMode;
- (BOOL)enableAdaptive;
- (BOOL)hasEmbeddedSubtitle;
- (id)subtitleInfos;
- (BOOL)isMbRefactor;
- (void)setResolutionMap:(id)arg0;
- (void)setCacheVideoModelEnable:(BOOL)arg0;
- (void)setUseFallbackApi:(BOOL)arg0;
- (long long)getDefaultAudioInfo;
- (BOOL)isLocalFile;
- (BOOL)preloadDataIsExpire;
- (id)urlForResolution:(unsigned long long)arg0;
- (id)allUrlsForResolution:(unsigned long long *)arg0;
- (BOOL)supportDash;
- (id)videoMemString;
- (BOOL)supportHLS;
- (id)getDynamicType;
- (BOOL)supportMP4;
- (BOOL)useFallbackApi;
- (id)netClient;
- (BOOL)cacheVideoModelEnable;
- (BOOL)useEphemeralSession;
- (void)setUseEphemeralSession:(BOOL)arg0;
- (id)supportResolutions;
- (id)supportQualityDesc;
- (BOOL)isMainUrl;
- (id)usingUrlInfo;
- (id)urlInfoForResolution:(unsigned long long)arg0 mediaType:(id)arg1;
- (id)urlInfoForResolution:(unsigned long long)arg0 mediaType:(id)arg1 params:(id)arg2;
- (id)proxyUrlExtraInfo;
- (BOOL)skipToNext;
- (id)mediaFileKey;
- (long long)videoSizeOfType:(unsigned long long)arg0;
- (BOOL)supportSSL;
- (BOOL)isSingleUrl;
- (long long)retryStrategyForRetryCount:(long long)arg0;
- (id)preloadItem;
- (BOOL)supportHLSSeamlessSwitch;
- (BOOL)supportBash;
- (long long)bitrateForDashSourceOfType:(unsigned long long)arg0;
- (id)checkInfo:(unsigned long long)arg0;
- (long long)currentUrlIndex;
- (void)setParamMap:(id)arg0;
- (id)mediaFileHashOfType:(unsigned long long)arg0;
- (void)fetchUrlWithApiString:(id /* block */)arg0 auth:(id /* block */)arg1 params:(id /* block */)arg2 apiVersion:(id /* block */)arg3 result:(id /* block */)arg4;
- (BOOL)isLivePlayback;
- (BOOL)validate;
- (id)init;
- (void).cxx_destruct;
- (id)fetchData;
- (BOOL)hasVideo;
- (id)videoId;
- (id)decryptionKey;
- (BOOL)isEqual:(id)arg0;
- (id)deepCopy;
- (BOOL)canFetch;
- (void)setFetchData:(id)arg0;
- (unsigned long long)currentResolution;
- (void)cancelFetch;

@end
