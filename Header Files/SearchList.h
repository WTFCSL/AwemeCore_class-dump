//
//     Generated by private class-dump
//

@class SearchListLayoutImp, NSString, NSArray, LynxListAppearEventEmitter, NSDictionary, UICollectionViewLayout, NSMutableArray, SearchListDataSource;
@protocol SearchDynamicElementStatusDelegate;

@interface SearchList : LynxUIListLoader <LynxUIListInspector, SearchDynamicElementProtocol, UICollectionViewDelegate, SearchListLayoutDelegate> {
    BOOL _noRecursiveLayout;
    BOOL _forceReloadData;
    BOOL _enableReuseFix;
    BOOL _fixedContentOffset;
    BOOL _enableUpdateAnimation;
    BOOL _shouldUpdateDataSource;
    BOOL _isNodiffMode;
    id<SearchDynamicElementStatusDelegate> _statusDelegate;
    LynxListAppearEventEmitter *_appearEventCourier;
    UICollectionViewLayout *_layout;
    long long _reusedTimes;
    SearchListLayoutImp *_layoutImp;
    SearchListDataSource *_dataSource;
    id /* block */ _prepareToUpdateCellBlock;
    NSDictionary *_curComponents;
    NSDictionary *_diffResultFromTasm;
    NSDictionary *_listNoDiffInfo;
}

@property (retain, nonatomic) NSArray *filteredComponentsList;
@property (retain, nonatomic) NSMutableArray *headerIndexPathList;
@property (retain, nonatomic) NSMutableArray *footerIndexPathList;
@property (retain, nonatomic) NSMutableArray *headerItemKeyList;
@property (retain, nonatomic) NSMutableArray *footerItemKeyList;
@property (retain, nonatomic) LynxListAppearEventEmitter *appearEventCourier;
@property (nonatomic) BOOL noRecursiveLayout;
@property (nonatomic) BOOL forceReloadData;
@property (retain, nonatomic) UICollectionViewLayout *layout;
@property (nonatomic) BOOL enableReuseFix;
@property (nonatomic) long long reusedTimes;
@property (retain, nonatomic) SearchListLayoutImp *layoutImp;
@property (nonatomic) BOOL fixedContentOffset;
@property (retain, nonatomic) SearchListDataSource *dataSource;
@property (copy, nonatomic) id /* block */ prepareToUpdateCellBlock;
@property (nonatomic) BOOL enableUpdateAnimation;
@property (nonatomic) BOOL shouldUpdateDataSource;
@property (retain, nonatomic) NSDictionary *curComponents;
@property (retain, nonatomic) NSDictionary *diffResultFromTasm;
@property (retain, nonatomic) NSDictionary *listNoDiffInfo;
@property (nonatomic) BOOL isNodiffMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SearchDynamicElementStatusDelegate> statusDelegate;

+ (id)__lynx_prop_config__360;
+ (id)__lynx_prop_config__431;

- (void)propsDidUpdate;
- (void)setSign:(long long)arg0;
- (void)layoutDidFinished;
- (BOOL)notifyParent;
- (void)onNodeReady;
- (BOOL)isScrollContainer;
- (void)updateFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 withPadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg1 border:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg2 margin:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })arg3 withLayoutAnimation:(BOOL)arg4;
- (void)updateDataSource;
- (void)didStartShowing;
- (void)didEndShowing;
- (id)getLynxElementType;
- (void)viewWillDisAppear;
- (void)setAppearEventCourier:(id)arg0;
- (BOOL)forceReloadData;
- (void)sendLayoutCompleteEvent;
- (BOOL)enableUpdateAnimation;
- (void)performBatchUpdates:(id /* block */)arg0 completion:(id /* block */)arg1 animated:(BOOL)arg2;
- (id)appearEventCourier;
- (void)onComponentLayoutUpdated:(id)arg0;
- (void)setEnableUpdateAnimation:(BOOL)arg0;
- (void)setFixedContentOffset:(BOOL)arg0;
- (void)setNoRecursiveLayout:(BOOL)arg0;
- (void)setForceReloadData:(BOOL)arg0;
- (void)setDiffResultFromTasm:(id)arg0;
- (void)setCurComponents:(id)arg0;
- (void)setListNoDiffInfo:(id)arg0;
- (void)setUpdateAnimation:(id)arg0 requestReset:(BOOL)arg1;
- (void)setCurComponents:(id)arg0 requestReset:(BOOL)arg1;
- (void)updateListActionInfo:(id)arg0 requestReset:(BOOL)arg1;
- (BOOL)noRecursiveLayout;
- (void)setShouldUpdateDataSource:(BOOL)arg0;
- (id)listNoDiffInfo;
- (id)diffResultFromTasm;
- (id)curComponents;
- (void)setInitialScrollIndexIfNeeded;
- (BOOL)shouldUpdateDataSource;
- (BOOL)fixedContentOffset;
- (double)getCellOffsetByIndex:(int)arg0;
- (id)filteredComponentsList;
- (id)headerIndexPathList;
- (id)footerIndexPathList;
- (id)headerItemKeyList;
- (id)footerItemKeyList;
- (void)setIsNodiffMode:(BOOL)arg0;
- (void)setHeaderIndexPathList:(id)arg0;
- (void)setFooterIndexPathList:(id)arg0;
- (void)setHeaderItemKeyList:(id)arg0;
- (void)setFooterItemKeyList:(id)arg0;
- (id)p_getDiffResultBetweenBefore:(id)arg0 after:(id)arg1;
- (void)setFilteredComponentsList:(id)arg0;
- (id)p_mergeDiffResultWithPrivateDiffResult:(id)arg0 andLynxDiffResult:(id)arg1 ignoreIndexList:(id)arg2;
- (id)noDiffNodeList;
- (void)setNoDiffNodeList:(id)arg0;
- (id)p_getDiffResultForNodiffBetweenBefore:(id)arg0 after:(id)arg1;
- (id)searchdynamic_buildNewListPlatformInfo:(id)arg0;
- (id)searchdynamic_buildNewUpdateListInfo:(id)arg0;
- (void)invalidateLayoutAtIndexPath:(id)arg0 newFrames:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)miscellaneousComponentAsyncUpdated:(id)arg0;
- (BOOL)enableReuseFix;
- (long long)reusedTimes;
- (void)setReusedTimes:(long long)arg0;
- (void)sendBatchUpdatesComplete:(BOOL)arg0;
- (void)setEnableReuseFix:(BOOL)arg0;
- (id)layoutImp;
- (void)setLayoutImp:(id)arg0;
- (id /* block */)prepareToUpdateCellBlock;
- (void)setPrepareToUpdateCellBlock:(id /* block */)arg0;
- (BOOL)isNodiffMode;
- (void)collectionView:(id)arg0 didEndDisplayingCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (void)setDataSource:(id)arg0;
- (id)init;
- (id)dataSource;
- (void)setLayout:(id)arg0;
- (void)collectionView:(id)arg0 willDisplayCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (void)setContentOffset:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })contentOffset;
- (void).cxx_destruct;
- (id)initWithLayout:(id)arg0;
- (void)viewDidAppear;
- (id)statusDelegate;
- (void)prepareForReuse;
- (void)setStatusDelegate:(id)arg0;
- (id)layout;
- (void)dealloc;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (id)createView;
- (void)frameDidChange;

@end
