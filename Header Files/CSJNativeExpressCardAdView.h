//
//     Generated by private class-dump
//

@class NSMutableSet, NSString, CSJAdSlot, CSJViewTracker, CSJNativeExpressAdManager, NSMutableArray, UICollectionView, CSJNativeExpressAdConverter, UILabel, CSJNativeAdsManager;
@protocol CSJNativeExpressAdViewDelegate;

@interface CSJNativeExpressCardAdView : CSJNativeExpressAdView <UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, CSJNativeExpressAdViewDelegate, CSJNativeExpressAdConverterDelegate, CSJNativeExpressAdViewDismissDelegate, CSJNativeAdsManagerDelegate> {
    BOOL _isLoading;
    BOOL _supportCustomAction;
    BOOL _autoRefresh;
    BOOL _needRefresh;
    id<CSJNativeExpressAdViewDelegate> _delegate;
    CSJNativeExpressAdManager *_expressAdManager;
    UICollectionView *_cardCollectionView;
    NSMutableArray *_cardViews;
    CSJAdSlot *_adSlot;
    CSJNativeAdsManager *_nativeAdManager;
    CSJNativeExpressAdConverter *_nativeExpressAdConverter;
    UILabel *_tipsView;
    CSJViewTracker *_viewTracker;
    double _showTime;
    NSMutableSet *_showAdSet;
    NSMutableArray *_prefetchData;
    struct CGSize { double width; double height; } _cardSize;
    struct CGPoint { double x; double y; } _lastContentOffset;
}

@property (retain, nonatomic) UICollectionView *cardCollectionView;
@property (retain, nonatomic) NSMutableArray *cardViews;
@property (retain, nonatomic) CSJAdSlot *adSlot;
@property (retain, nonatomic) CSJNativeAdsManager *nativeAdManager;
@property (retain, nonatomic) CSJNativeExpressAdConverter *nativeExpressAdConverter;
@property (nonatomic) BOOL isLoading;
@property (nonatomic) struct CGSize { double width; double height; } cardSize;
@property (nonatomic) struct CGPoint { double x; double y; } lastContentOffset;
@property (retain, nonatomic) UILabel *tipsView;
@property (retain, nonatomic) CSJViewTracker *viewTracker;
@property (nonatomic) double showTime;
@property (retain, nonatomic) NSMutableSet *showAdSet;
@property (nonatomic) BOOL supportCustomAction;
@property (retain, nonatomic) NSMutableArray *prefetchData;
@property (nonatomic) BOOL autoRefresh;
@property (nonatomic) BOOL needRefresh;
@property (weak, nonatomic) id<CSJNativeExpressAdViewDelegate> delegate;
@property (weak, nonatomic) CSJNativeExpressAdManager *expressAdManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setNeedRefresh:(BOOL)arg0;
- (id)nativeAd;
- (void)setAdSlot:(id)arg0;
- (id)nativeExpressAdConverter;
- (double)showTime;
- (void)setShowTime:(double)arg0;
- (void)win:(id)arg0;
- (void)loss:(id)arg0 lossReason:(id)arg1 winBidder:(id)arg2;
- (id)expressAdViewDelegateInNativeExpressAdConverter:(id)arg0;
- (id)expressAdViewDismissDelegateInNativeExpressAdConverter:(id)arg0;
- (void)nativeExpressAdConverter:(id)arg0 nativeExpressAdViewArray:(id)arg1;
- (void)nativeExpressAdSuccessToLoad:(id)arg0 views:(id)arg1;
- (void)nativeExpressAdFailToLoad:(id)arg0 error:(id)arg1;
- (void)nativeExpressAdViewRenderSuccess:(id)arg0;
- (void)nativeExpressAdViewRenderFail:(id)arg0 error:(id)arg1;
- (void)nativeExpressAdViewWillShow:(id)arg0;
- (void)nativeExpressAdViewDidClick:(id)arg0;
- (void)nativeExpressAdView:(id)arg0 stateDidChanged:(long long)arg1;
- (void)nativeExpressAdViewPlayerDidPlayFinish:(id)arg0 error:(id)arg1;
- (void)nativeExpressAdView:(id)arg0 dislikeWithReason:(id)arg1;
- (void)nativeExpressAdViewWillPresentScreen:(id)arg0;
- (void)nativeExpressAdViewDidCloseOtherController:(id)arg0 interactionType:(long long)arg1;
- (void)nativeExpressAdViewDidRemoved:(id)arg0;
- (void)setNativeExpressAdConverter:(id)arg0;
- (void)handleSuccessLoadWithNativeAds:(id)arg0;
- (void)handleHalfCardStyle:(id)arg0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 expressAds:(id)arg1 slot:(id)arg2;
- (void)setExpressAdManager:(id)arg0;
- (void)nativeAdsManagerSuccessToLoad:(id)arg0 nativeAds:(id)arg1;
- (void)nativeAdsManager:(id)arg0 didFailWithError:(id)arg1;
- (void)setViewTracker:(id)arg0;
- (id)viewTracker;
- (void)viewShow;
- (void)viewHide;
- (id)cardViews;
- (id)getMaterialAtIndex:(long long)arg0;
- (void)setCardCollectionView:(id)arg0;
- (id)cardCollectionView;
- (BOOL)supportCustomAction;
- (void)pageScroll;
- (void)setAutoRefresh:(BOOL)arg0;
- (void)setSupportCustomAction:(BOOL)arg0;
- (void)setNativeAdManager:(id)arg0;
- (id)nativeAdManager;
- (id)showAdSet;
- (BOOL)autoRefresh;
- (id)getAdsAtIndex:(long long)arg0;
- (long long)currentPositon;
- (id)expressAdManager;
- (void)setCardViews:(id)arg0;
- (void)setShowAdSet:(id)arg0;
- (id)tipsView;
- (void)setTipsView:(id)arg0;
- (id)adSlot;
- (void)setRootViewController:(id)arg0;
- (long long)numberOfSectionsInCollectionView:(id)arg0;
- (void)scrollViewWillBeginDecelerating:(id)arg0;
- (BOOL)isLoading;
- (void)refresh;
- (id)prefetchData;
- (void)collectionView:(id)arg0 willDisplayCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg0 numberOfItemsInSection:(long long)arg1;
- (struct CGSize { double x0; double x1; })collectionView:(id)arg0 layout:(id)arg1 sizeForItemAtIndexPath:(id)arg2;
- (void).cxx_destruct;
- (id)collectionView:(id)arg0 cellForItemAtIndexPath:(id)arg1;
- (id)collectionView:(id)arg0 viewForSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg0;
- (BOOL)needRefresh;
- (void)scrollViewDidScroll:(id)arg0;
- (id)delegate;
- (void)scrollViewDidEndDragging:(id)arg0 willDecelerate:(BOOL)arg1;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg0;
- (void)scrollViewWillBeginDragging:(id)arg0;
- (void)dealloc;
- (void)setIsLoading:(BOOL)arg0;
- (void)render;
- (struct CGPoint { double x0; double x1; })lastContentOffset;
- (void)setLastContentOffset:(struct CGPoint { double x0; double x1; })arg0;
- (void)loadData;
- (void)setPrice:(id)arg0;
- (void)setUpSubviews;
- (struct CGSize { double x0; double x1; })cardSize;
- (void)setCardSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setPrefetchData:(id)arg0;

@end
