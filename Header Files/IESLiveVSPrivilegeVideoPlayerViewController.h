//
//     Generated by private class-dump
//

@class UIView, NSString, NSArray, PuzzleHybridContainer, IESLiveVideoPlayerController, HTSEventForwardingView, UIButton, IESLiveVSPrivilegeVideoPlayerControl, NSDictionary, HTSLiveAmazingBackgroundView, UILabel;

@interface IESLiveVSPrivilegeVideoPlayerViewController : UIViewController <IESLiveVideoPlayerControllerDelegate> {
    BOOL _needForbidRecord;
    BOOL _isAlbumType;
    BOOL _needStartFromHistory;
    BOOL _isAnimating;
    BOOL _playerControlShow;
    NSString *_privilegeDescriptionInfo;
    NSArray *_videoModels;
    unsigned long long _currentIndex;
    id /* block */ _playingIndexWhenDismissBlock;
    NSString *_albumHybridViewURLString;
    NSDictionary *_trackParamters;
    UIView *_containerView;
    UIButton *_backButton;
    UILabel *_titleLabel;
    UIButton *_backButtonForLandscape;
    UILabel *_titleLabelForLandscape;
    HTSLiveAmazingBackgroundView *_topGradientView;
    HTSLiveAmazingBackgroundView *_bottomGradientView;
    HTSEventForwardingView *_playerControlContainerView;
    IESLiveVSPrivilegeVideoPlayerControl *_playerControl;
    IESLiveVideoPlayerController *_playerController;
    PuzzleHybridContainer *_hybridView;
    id /* block */ _orientationChangedCompletion;
    id /* block */ _autoHideBlock;
    double _lastStartPlayTimeInterval;
}

@property (retain, nonatomic) UIView *containerView;
@property (retain, nonatomic) UIButton *backButton;
@property (retain, nonatomic) UILabel *titleLabel;
@property (retain, nonatomic) UIButton *backButtonForLandscape;
@property (retain, nonatomic) UILabel *titleLabelForLandscape;
@property (retain, nonatomic) HTSLiveAmazingBackgroundView *topGradientView;
@property (retain, nonatomic) HTSLiveAmazingBackgroundView *bottomGradientView;
@property (retain, nonatomic) HTSEventForwardingView *playerControlContainerView;
@property (retain, nonatomic) IESLiveVSPrivilegeVideoPlayerControl *playerControl;
@property (retain, nonatomic) IESLiveVideoPlayerController *playerController;
@property (retain, nonatomic) PuzzleHybridContainer *hybridView;
@property (copy, nonatomic) id /* block */ orientationChangedCompletion;
@property (copy, nonatomic) id /* block */ autoHideBlock;
@property (nonatomic) BOOL isAnimating;
@property (nonatomic) BOOL playerControlShow;
@property (nonatomic) double lastStartPlayTimeInterval;
@property (copy, nonatomic) NSString *privilegeDescriptionInfo;
@property (nonatomic) BOOL needForbidRecord;
@property (nonatomic) BOOL isAlbumType;
@property (readonly, copy, nonatomic) NSArray *videoModels;
@property (nonatomic) unsigned long long currentIndex;
@property (nonatomic) BOOL needStartFromHistory;
@property (copy, nonatomic) id /* block */ playingIndexWhenDismissBlock;
@property (copy, nonatomic) NSString *albumHybridViewURLString;
@property (copy, nonatomic) NSDictionary *trackParamters;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)commonParameters;
- (id)hybridView;
- (void)trackVideoPlayStart;
- (void)screenCapturedDidChange:(id)arg0;
- (void)setHybridView:(id)arg0;
- (id)currentPlayingVideoID;
- (void)videoReadyToDisPlayOfPlayerController:(id)arg0;
- (void)playerController:(id)arg0 updateCurrent:(double)arg1 duration:(double)arg2;
- (void)playerController:(id)arg0 playerDidFinishError:(id)arg1;
- (void)tapContainerView;
- (void)backClick;
- (void)setPrivilegeDescriptionInfo:(id)arg0;
- (void)setNeedStartFromHistory:(BOOL)arg0;
- (void)setNeedForbidRecord:(BOOL)arg0;
- (void)setIsAlbumType:(BOOL)arg0;
- (void)setTrackParamters:(id)arg0;
- (void)setAlbumHybridViewURLString:(id)arg0;
- (void)setPlayingIndexWhenDismissBlock:(id /* block */)arg0;
- (void)updateVideoDataSource:(id)arg0 toPlayAtIndex:(unsigned long long)arg1;
- (void)showAlertForScreenRecordingIfNeeded;
- (BOOL)isAlbumType;
- (void)setupForAlbum;
- (void)setupForVideo;
- (id)albumHybridViewURLString;
- (void)setPlayerControlContainerView:(id)arg0;
- (id)playerControlContainerView;
- (void)setPlayerControl:(id)arg0;
- (id)playerControl;
- (void)trackSlideSeekBar;
- (long long)watchedDurationAndNeedUpdateStartTime:(BOOL)arg0;
- (void)trackVideoWatchedTimeInterval:(double)arg0;
- (void)trackClickChangeOrientationButton;
- (void)changeOrientationCompletion:(id /* block */)arg0;
- (void)trackClickPauseButton;
- (BOOL)playIfEnable;
- (id)videoModels;
- (void)layoutPlayerIfNeededForOrientation:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (id /* block */)playingIndexWhenDismissBlock;
- (void)setLastStartPlayTimeInterval:(double)arg0;
- (void)setOrientationChangedCompletion:(id /* block */)arg0;
- (void)updateUIForInterfaceOrientationIsPortrait:(BOOL)arg0;
- (id /* block */)orientationChangedCompletion;
- (BOOL)needStartFromHistory;
- (void)playAtIndex:(unsigned long long)arg0 startTime:(id)arg1;
- (BOOL)needForbidRecord;
- (id)titleLabelForLandscape;
- (id)backButtonForLandscape;
- (BOOL)isPortraitStreamForPlayerController:(id)arg0;
- (id)privilegeDescriptionInfo;
- (void)cancelAutoHideIfNeeded;
- (void)setPlayerControlShow:(BOOL)arg0;
- (void)autoHide;
- (void)showPlayerControl:(BOOL)arg0 animated:(BOOL)arg1;
- (void)setAutoHideBlock:(id /* block */)arg0;
- (id /* block */)autoHideBlock;
- (void)trackClickBackButton;
- (BOOL)playerControlShow;
- (id)trackParamters;
- (double)lastStartPlayTimeInterval;
- (void)setBackButtonForLandscape:(id)arg0;
- (void)setTitleLabelForLandscape:(id)arg0;
- (void)becomeActive;
- (BOOL)isAnimating;
- (void).cxx_destruct;
- (unsigned long long)currentIndex;
- (id)playerController;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })arg0 withTransitionCoordinator:(id)arg1;
- (id)titleLabel;
- (void)setContainerView:(id)arg0;
- (void)setCurrentIndex:(unsigned long long)arg0;
- (void)setPlayerController:(id)arg0;
- (void)viewDidDisappear:(BOOL)arg0;
- (void)enterBackground;
- (id)containerView;
- (long long)currentInterfaceOrientation;
- (void)reset;
- (void)viewDidLoad;
- (void)setTitleLabel:(id)arg0;
- (id)backButton;
- (void)setBackButton:(id)arg0;
- (void)setIsAnimating:(BOOL)arg0;
- (BOOL)isScreenRecording;
- (id)bottomGradientView;
- (void)setBottomGradientView:(id)arg0;
- (id)topGradientView;
- (void)setTopGradientView:(id)arg0;

@end
