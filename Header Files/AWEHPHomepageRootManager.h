//
//     Generated by private class-dump
//

@class AWEHPChannelNetworkManager, NSArray, AWEHPTopTabConfigModel, NSString, AWEHPBottomTabConfigModel, AWEHPTabViewModelManager, AWEXTabConfigNewManager;
@protocol AWEHPDefaultTabFactoryProtocol;

@interface AWEHPHomepageRootManager : NSObject <AWEHPRootChanennlManagerDelegate> {
    BOOL _enableLeftSideAirplane;
    BOOL _isServerTab;
    BOOL _hasEdited;
    NSArray *_bottomTabItems;
    NSString *_rightFirstEntrance;
    AWEHPBottomTabConfigModel *_bottomTab;
    AWEHPTopTabConfigModel *_topTab;
    NSArray *_bottomTabIDList;
    AWEHPTabViewModelManager *_viewModelManager;
    AWEHPChannelNetworkManager *_dataManager;
    id<AWEHPDefaultTabFactoryProtocol> _defaultManager;
}

@property (nonatomic) BOOL isServerTab;
@property (retain, nonatomic) AWEHPBottomTabConfigModel *bottomTab;
@property (retain, nonatomic) AWEHPTopTabConfigModel *topTab;
@property (copy, nonatomic) NSArray *bottomTabIDList;
@property (copy, nonatomic) NSArray *bottomTabItems;
@property (copy, nonatomic) NSString *rightFirstEntrance;
@property (nonatomic) BOOL hasEdited;
@property (retain, nonatomic) AWEHPTabViewModelManager *viewModelManager;
@property (retain, nonatomic) AWEHPChannelNetworkManager *dataManager;
@property (retain, nonatomic) id<AWEHPDefaultTabFactoryProtocol> defaultManager;
@property (readonly, copy, nonatomic) NSArray *currentTabIDList;
@property (readonly, copy, nonatomic) NSArray *bottomTabs;
@property (readonly, nonatomic) AWEXTabConfigNewManager *xTabConfigManager;
@property (nonatomic) BOOL enableLeftSideAirplane;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;

- (id)rightFirstEntrance;
- (void)addNotifications;
- (void)removeNotification;
- (void)handleConnectionChanged:(id)arg0;
- (void)handleFinishLogin;
- (void)handleFinishLogout;
- (void)handleFinishSwitchAccount;
- (id)currentTabIDList;
- (id)channelSortConfigList;
- (long long)channelDataCanLongPressEdit;
- (id)bottomTabs;
- (BOOL)enableLeftSideAirplane;
- (BOOL)channelDataIsSyncing;
- (BOOL)channelDataCanEdit;
- (void)channelSaveEditTabs;
- (BOOL)getBottomTab:(id *)arg0 topTab:(id *)arg1;
- (id)bottomTabItems;
- (id)viewModelManager;
- (id)bottomTab;
- (id)getAllSortConfigItemsWith:(id)arg0;
- (id)xTabConfigManager;
- (void)reloadTabsWithReloadType:(id)arg0 isServerTab:(BOOL)arg1 bottomTab:(id)arg2 topTab:(id)arg3 needReloadBottomTab:(BOOL)arg4;
- (void)p_requestWithType:(unsigned long long)arg0 editModel:(id)arg1;
- (id)p_generateBottomTabListWithBottomTabModel:(id)arg0;
- (id)p_generateTopTabListWithTopTab:(id)arg0;
- (BOOL)checkXtabWithBottomTabList:(id)arg0 xTabChannelInfo:(id)arg1;
- (long long)checkBottomTabForDataChanged:(id)arg0 topTab:(id)arg1;
- (void)p_reportServerTabWithTraceInfo:(id)arg0 isHotSwitch:(BOOL)arg1;
- (id)bottomTabIDList;
- (long long)isHotReloadEnabledWithRequestType:(unsigned long long)arg0 bottomTab:(id)arg1;
- (long long)checkBottomTabForHotReload:(id)arg0 topTab:(id)arg1;
- (void)trackHotSwitchWithStatus:(long long)arg0 requestType:(unsigned long long)arg1;
- (id)getEditStruct;
- (void)callAccountChangeTabsReloadWithReloadType:(unsigned long long)arg0;
- (BOOL)isChannelInTopTabWithTopTabModel:(id)arg0 targetChannelID:(id)arg1;
- (id)topTab;
- (long long)allowHotReloadWhenSplash;
- (void)updateRenderDataWithRequestType:(unsigned long long)arg0;
- (void)setBottomTabItems:(id)arg0;
- (void)setRightFirstEntrance:(id)arg0;
- (void)setEnableLeftSideAirplane:(BOOL)arg0;
- (BOOL)isServerTab;
- (void)setIsServerTab:(BOOL)arg0;
- (void)setBottomTab:(id)arg0;
- (void)setTopTab:(id)arg0;
- (void)setBottomTabIDList:(id)arg0;
- (void)setViewModelManager:(id)arg0;
- (void)setDefaultManager:(id)arg0;
- (id)dataManager;
- (id)init;
- (void).cxx_destruct;
- (void)setup;
- (void)setDataManager:(id)arg0;
- (id)debugDescription;
- (void)appWillEnterForeground:(id)arg0;
- (void)dealloc;
- (id)defaultManager;
- (void)setHasEdited:(BOOL)arg0;
- (BOOL)hasEdited;

@end
