//
//     Generated by private class-dump
//

@class NSMutableDictionary, TVLController, TVLFallbackInfo, NSDictionary, TVLPlayerItem, NSMutableArray, UIView, NSString, NSTimer, VeLivePlayerConfiguration, NSArray, TVLRetryer, NSLock, NSError;
@protocol TVLLoudnessObserver, TVLAppInfoFetcher, TVLAudioInfoObserver, VeLivePlayerObserver, TVLDelegate;

@interface TVLManager : NSObject <LSSAppInfoDelegate, TVLPlayerControllerDelegate> {
    NSLock *_itemLock;
    NSLock *_degradeLock;
    struct TVLAudioWrapper { void /* function */ *x0; void /* function */ *x1; void /* function */ *x2; void /* function */ *x3; void *x4; void *x5; } *_audioWrapper;
    struct TVLVideoWrapper { void /* function */ *x0; void /* function */ *x1; void *x2; } *_videoWrapper;
    BOOL _enableIgnoreAudioInterruption;
    int _roomStatusForAudioBalance;
    id<VeLivePlayerObserver> _observer;
    VeLivePlayerConfiguration *_configuration;
    NSMutableDictionary *_userSetOptionOrSettings;
    NSTimer *_statisticsTimer;
    int _audioDataChannels;
    int _audioDataSampleRate;
    long long _maxMainToBackCount;
    long long _currentMainToBackCount;
    long long _videoFormatBufferType;
    long long _videoFormatPixelFormat;
    BOOL _enableAudioFrameObserver;
    BOOL _enablePopVideoAsync;
    BOOL _enableVideoFrameObserver;
    NSTimer *_pcdnTaskTimer;
    BOOL _replacePauseWithStop;
    BOOL _preCreatedPlayer;
    BOOL _callPlay;
    BOOL _allowsAudioRendering;
    BOOL _allowsVideoRendering;
    BOOL _enableReplacePauseToStopInRtm;
    BOOL _supportPictureInPictureMode;
    BOOL _allowsResolutionDegrade;
    BOOL _shouldForbidResolutionDegrade;
    BOOL _allowsByteVC1Degrade;
    BOOL _allowsVideoAutoCrop;
    BOOL _shouldReportAudioFrame;
    BOOL _shouldReportVideoFrame;
    BOOL _shouldReportAudioFrameToAudioRecord;
    BOOL _shouldUseVideoFrameInViceView;
    BOOL _shouldPlayerCloseWithoutStop;
    BOOL _shouldDegradeResolutionWhenStallRetryWithLLASH;
    BOOL _shouldUseMaxRetryTimeInError;
    BOOL _stallCounterEnable;
    BOOL _mCallPreload;
    BOOL _mIsPreloading;
    BOOL _mPreloadSuccess;
    BOOL _mPreloadFailed;
    BOOL _resetWhenPreloadError;
    BOOL _firstVideoFrameDidRender;
    BOOL _firstAudioFrameDidRender;
    BOOL _shouldBackupOriginInDecodeError;
    BOOL _enableCloseAsync;
    BOOL _enableStartUpResolutionDegrade;
    BOOL _allowsReleaseVideoWrapperInCallback;
    BOOL _enableRetryFireImmediately;
    BOOL _didUseHDR10Render;
    BOOL _srWorkCondition;
    BOOL _shouldForbidHDR10Render;
    BOOL _enableIgnoreVideoRenderWhenAudioStream;
    BOOL _enableUseRealAutoResolution;
    BOOL _bmfSREnable;
    BOOL _userOpenBMFSr;
    int _enableReportAlgoSei;
    int _startUpResolutionDegradeTimeThreshMs;
    int _startUpResolutionDegradeShortEdge;
    int _audioProcessSampleRate;
    int _audioProcessChannels;
    int _audioProcessDuration;
    float _ntpTimeDiffByUserSet;
    int _currentSrStreamWidth;
    int _currentSrStreamHeight;
    id<TVLDelegate> _delegate;
    long long _playerLoadState;
    unsigned long long _state;
    id /* block */ _strategyInfoRequest;
    NSError *_error;
    long long _playbackState;
    id<TVLAppInfoFetcher> _appInfoFetcher;
    NSString *_bizSessionId;
    id<TVLLoudnessObserver> _loudnessObserver;
    id<TVLAudioInfoObserver> _audioVolumeObserver;
    TVLController *_controller;
    NSMutableDictionary *_monitoringUserInfo;
    long long _stallCount;
    long long _delay;
    TVLRetryer *_retryer;
    long long _resolutionDegradeConditionStallCount;
    unsigned long long _audioRenderDeviceType;
    id /* block */ _playerDidReceivePacketCallback;
    id /* block */ _playerDidReceivePacketWithPacketInfoCallback;
    id /* block */ _playerWillRenderFrameCallback;
    id /* block */ _playerDidReceiveBinarySeiCallback;
    id /* block */ _playerAbrDecisionInfoCallback;
    id /* block */ _playerLiveStrategyParamsCallback;
    id /* block */ _playerSeiImmediatlyCallback;
    long long _previousAudioPacketDTS;
    long long _previousRenderingAudioFrameDTS;
    long long _currentVideoBitrate;
    long long _retryMaximumTimesInError;
    double _retryTimeIntervalInError;
    long long _stallCounterIntervalInMillSeconds;
    long long _rtsRetryTimes;
    long long _rtsRetryMaxCount;
    NSError *_rtsError;
    long long _specifiedSceneByLOB;
    NSString *_preloadingStream;
    NSDictionary *_NEQInfo;
    NSMutableArray *_fallbackInfoList;
    NSString *_currentSmoothResolution;
    NSString *_manualSwitchResolution;
    NSTimer *_smoothlySwitchTimer;
    long long _firstFrameRenderTimestamp;
    long long _smoothSwitchReason;
    long long _targetSmoothBitrate;
    NSString *_neptuneName;
    NSLock *_effectLock;
    long long _bmfKernalRunningType;
    long long _bmfKernalOriginalType;
    long long _bmfFlexSrType;
    long long _externalBmfKernalType;
    long long _externalBmfSrType;
    NSMutableDictionary *_videoFilterEnableMap;
    long long _bmfSROpenErrorCode;
}

@property (class, copy, nonatomic) id /* block */ logCallback;

@property (readonly, weak, nonatomic) id<VeLivePlayerObserver> observer;
@property (readonly, nonatomic) UIView *playerView;
@property (nonatomic) float volume;
@property (readonly, nonatomic) BOOL isPlaying;
@property (readonly, nonatomic) long long currentBufferInMilliSeconds;
@property (readonly, nonatomic) long long maxCacheDurationInSeconds;
@property (readonly, nonatomic) BOOL isBufferingQueueFull;
@property (nonatomic) BOOL shouldReportTimeSeries;
@property (nonatomic) BOOL shouldReportAudioFrame;
@property (nonatomic) BOOL enableAudioProcessorInPlaying;
@property (nonatomic) BOOL shouldUseVideoFrameInViceView;
@property (copy, nonatomic) NSString *commonTag;
@property (nonatomic) BOOL enableAudioRecording;
@property (readonly, nonatomic) double renderingFPS;
@property (readonly, copy, nonatomic) NSDictionary *debugInfoItems;
@property (readonly, copy, nonatomic) NSDictionary *formattedDebugInfoItems;
@property (readonly, copy, nonatomic) NSString *formattedDebugInfo;
@property (readonly, copy, nonatomic) NSDictionary *liveInfoItems;
@property (nonatomic) BOOL shouldTryAllResolvedIPAddresses;
@property (nonatomic) BOOL allowsResolutionDegrade;
@property (nonatomic) BOOL shouldForbidResolutionDegrade;
@property (nonatomic) long long resolutionDegradeConditionStallCount;
@property (nonatomic) BOOL allowsByteVC1Degrade;
@property (nonatomic) BOOL enableStartUpResolutionDegrade;
@property (nonatomic) int startUpResolutionDegradeTimeThreshMs;
@property (nonatomic) int startUpResolutionDegradeShortEdge;
@property (nonatomic) int enableReportAlgoSei;
@property (retain, nonatomic) NSDictionary *ipMappingTable;
@property (nonatomic) BOOL shouldIgnoreSettings;
@property (nonatomic) BOOL allowsVideoAutoCrop;
@property (readonly, copy, nonatomic) id /* block */ playerDidReceivePacketCallback;
@property (readonly, copy, nonatomic) id /* block */ playerDidReceivePacketWithPacketInfoCallback;
@property (readonly, copy, nonatomic) id /* block */ playerWillRenderFrameCallback;
@property (copy, nonatomic) id /* block */ playerDidReceiveBinarySeiCallback;
@property (copy, nonatomic) id /* block */ playerAbrDecisionInfoCallback;
@property (copy, nonatomic) id /* block */ playerLiveStrategyParamsCallback;
@property (copy, nonatomic) id /* block */ playerSeiImmediatlyCallback;
@property (retain, nonatomic) NSMutableArray *fallbackInfoList;
@property (readonly, nonatomic) TVLFallbackInfo *latestFallbackInfo;
@property (nonatomic) long long previousAudioPacketDTS;
@property (readonly, nonatomic) TVLController *controller;
@property (readonly, nonatomic) BOOL firstVideoFrameDidRender;
@property (readonly, nonatomic) BOOL firstAudioFrameDidRender;
@property (readonly, copy, nonatomic) NSDictionary *NEQInfo;
@property (nonatomic) BOOL shouldBackupOriginInDecodeError;
@property (nonatomic) long long stallCounterIntervalInMillSeconds;
@property (nonatomic) BOOL stallCounterEnable;
@property (nonatomic) BOOL shouldPlayerCloseWithoutStop;
@property (nonatomic) BOOL shouldDegradeResolutionWhenStallRetryWithLLASH;
@property (nonatomic) BOOL shouldReportVideoFrame;
@property (nonatomic) int udpProbeResult;
@property (nonatomic) BOOL shouldUseMaxRetryTimeInError;
@property (nonatomic) long long retryMaximumTimesInError;
@property (nonatomic) double retryTimeIntervalInError;
@property (nonatomic) BOOL enableCloseAsync;
@property (retain, nonatomic) NSTimer *smoothlySwitchTimer;
@property (nonatomic) BOOL allowsUsePlayerPool;
@property (nonatomic) BOOL allowsReleaseVideoWrapperInCallback;
@property (nonatomic) long long firstFrameRenderTimestamp;
@property (nonatomic) BOOL didUseHDR10Render;
@property (nonatomic) long long smoothSwitchReason;
@property (nonatomic) BOOL enableRetryFireImmediately;
@property (nonatomic) long long currentVideoBitrate;
@property (copy, nonatomic) NSString *neptuneName;
@property (readonly, nonatomic) long long downloadSpeedInKbps;
@property (readonly, nonatomic) long long downloadSpeedBasedFLVTagInKbps;
@property (readonly, nonatomic) long long estimatedBandwidthInKbps;
@property (readonly, nonatomic) long long estimatedBandwidthStandardDeviation;
@property (readonly, nonatomic) long long bandwidthEstimationSamplesStandardDeviation;
@property (readonly, nonatomic) long long bandwidthEstimationSamplesAverage;
@property (nonatomic) BOOL srWorkCondition;
@property (nonatomic) BOOL isSupportMetal;
@property (nonatomic) BOOL shouldForbidHDR10Render;
@property (nonatomic) float ntpTimeDiffByUserSet;
@property (nonatomic) long long rtsRetryMaxCount;
@property (nonatomic) BOOL resetWhenPreloadError;
@property (nonatomic) BOOL isPreloadFailed;
@property (nonatomic) long long specifiedSceneByLOB;
@property (readonly, nonatomic) BOOL isRtsChoosenByLOB;
@property (copy, nonatomic) NSMutableDictionary *userSetOptionOrSettings;
@property (nonatomic) int audioDataChannels;
@property (nonatomic) int audioDataSampleRate;
@property (copy, nonatomic) VeLivePlayerConfiguration *configuration;
@property (nonatomic) long long maxMainToBackCount;
@property (nonatomic) long long currentMainToBackCount;
@property (copy, nonatomic) NSTimer *statisticsTimer;
@property (nonatomic) long long videoFormatBufferType;
@property (nonatomic) long long videoFormatPixelFormat;
@property (nonatomic) BOOL enableAudioFrameObserver;
@property (nonatomic) BOOL enablePopVideoAsync;
@property (nonatomic) BOOL enableVideoFrameObserver;
@property (nonatomic) BOOL enableIgnoreVideoRenderWhenAudioStream;
@property (nonatomic) BOOL enableUseRealAutoResolution;
@property (nonatomic) BOOL bmfSREnable;
@property (nonatomic) long long bmfKernalRunningType;
@property (nonatomic) long long bmfKernalOriginalType;
@property (nonatomic) long long bmfFlexSrType;
@property (nonatomic) long long externalBmfKernalType;
@property (nonatomic) long long externalBmfSrType;
@property (nonatomic) int currentSrStreamWidth;
@property (nonatomic) int currentSrStreamHeight;
@property (copy, nonatomic) NSMutableDictionary *videoFilterEnableMap;
@property (retain, nonatomic) NSLock *effectLock;
@property (nonatomic) BOOL userOpenBMFSr;
@property (nonatomic) long long bmfSROpenErrorCode;
@property (readonly, nonatomic) BOOL shouldReplaceABRSwitchReportingWithLLASHSwitch;
@property (nonatomic) BOOL shouldForbidVideoProcess;
@property (nonatomic) BOOL enableVideoProcess;
@property (nonatomic) void *effectHandle;
@property (nonatomic) BOOL enableEffectFilter;
@property (nonatomic, getter=isHeadTrackingEnabled) BOOL headTrackingEnabled;
@property (nonatomic, getter=isVRModeEnabled) BOOL VRModeEnabled;
@property (nonatomic) long long scopicType;
@property (nonatomic) float zoom;
@property (copy, nonatomic) id /* block */ headPoseUpdateBlock;
@property (nonatomic) float spaceOrientationPitch;
@property (nonatomic) BOOL shouldUseDefaultScaleModeForVR;
@property (nonatomic) double longerSideFOVInRadians;
@property (nonatomic) double gyroSensitivity;
@property (nonatomic) long long requiredInterfaceOrientation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *currentVicePlayerViews;
@property (nonatomic) unsigned long long state;
@property (nonatomic) long long playbackState;
@property (retain, nonatomic) TVLPlayerItem *currentItem;
@property (retain, nonatomic) TVLController *controller;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSMutableDictionary *monitoringUserInfo;
@property (nonatomic) long long playerLoadState;
@property (nonatomic) long long stallCount;
@property (nonatomic) BOOL allowsResolutionDegrade;
@property (nonatomic) BOOL shouldForbidResolutionDegrade;
@property (nonatomic) BOOL allowsByteVC1Degrade;
@property (nonatomic) BOOL allowsVideoAutoCrop;
@property (nonatomic) BOOL shouldReportAudioFrame;
@property (nonatomic) BOOL shouldReportVideoFrame;
@property (nonatomic) BOOL shouldReportAudioFrameToAudioRecord;
@property (nonatomic) BOOL shouldUseVideoFrameInViceView;
@property (nonatomic) long long delay;
@property (retain, nonatomic) TVLRetryer *retryer;
@property (nonatomic) long long resolutionDegradeConditionStallCount;
@property (nonatomic) unsigned long long audioRenderDeviceType;
@property (copy, nonatomic) id /* block */ playerDidReceivePacketCallback;
@property (copy, nonatomic) id /* block */ playerDidReceivePacketWithPacketInfoCallback;
@property (copy, nonatomic) id /* block */ playerWillRenderFrameCallback;
@property (copy, nonatomic) id /* block */ playerDidReceiveBinarySeiCallback;
@property (copy, nonatomic) id /* block */ playerAbrDecisionInfoCallback;
@property (copy, nonatomic) id /* block */ playerLiveStrategyParamsCallback;
@property (copy, nonatomic) id /* block */ playerSeiImmediatlyCallback;
@property (nonatomic) long long previousAudioPacketDTS;
@property (nonatomic) long long previousRenderingAudioFrameDTS;
@property (nonatomic) long long currentVideoBitrate;
@property (nonatomic) BOOL shouldPlayerCloseWithoutStop;
@property (nonatomic) BOOL shouldDegradeResolutionWhenStallRetryWithLLASH;
@property (nonatomic) BOOL shouldUseMaxRetryTimeInError;
@property (nonatomic) long long retryMaximumTimesInError;
@property (nonatomic) double retryTimeIntervalInError;
@property (nonatomic) long long stallCounterIntervalInMillSeconds;
@property (nonatomic) BOOL stallCounterEnable;
@property (nonatomic) long long rtsRetryTimes;
@property (nonatomic) long long rtsRetryMaxCount;
@property (retain, nonatomic) NSError *rtsError;
@property (nonatomic) long long specifiedSceneByLOB;
@property (nonatomic) BOOL mCallPreload;
@property (nonatomic) BOOL mIsPreloading;
@property (nonatomic) BOOL mPreloadSuccess;
@property (nonatomic) BOOL mPreloadFailed;
@property (nonatomic) BOOL resetWhenPreloadError;
@property (copy, nonatomic) NSString *preloadingStream;
@property (nonatomic) BOOL firstVideoFrameDidRender;
@property (nonatomic) BOOL firstAudioFrameDidRender;
@property (copy, nonatomic) NSDictionary *NEQInfo;
@property (nonatomic) BOOL shouldBackupOriginInDecodeError;
@property (nonatomic) BOOL enableCloseAsync;
@property (retain, nonatomic) NSMutableArray *fallbackInfoList;
@property (retain, nonatomic) NSString *currentSmoothResolution;
@property (retain) NSString *manualSwitchResolution;
@property (retain, nonatomic) NSTimer *smoothlySwitchTimer;
@property (nonatomic) long long firstFrameRenderTimestamp;
@property (nonatomic) BOOL enableStartUpResolutionDegrade;
@property (nonatomic) int enableReportAlgoSei;
@property (nonatomic) int startUpResolutionDegradeTimeThreshMs;
@property (nonatomic) int startUpResolutionDegradeShortEdge;
@property (nonatomic) long long smoothSwitchReason;
@property (nonatomic) long long targetSmoothBitrate;
@property (copy, nonatomic) NSString *neptuneName;
@property (nonatomic) int audioProcessSampleRate;
@property (nonatomic) int audioProcessChannels;
@property (nonatomic) int audioProcessDuration;
@property (nonatomic) BOOL allowsReleaseVideoWrapperInCallback;
@property (nonatomic) BOOL enableRetryFireImmediately;
@property (nonatomic) BOOL didUseHDR10Render;
@property (nonatomic) BOOL srWorkCondition;
@property (nonatomic) BOOL shouldForbidHDR10Render;
@property (nonatomic) float ntpTimeDiffByUserSet;
@property (nonatomic) BOOL enableIgnoreVideoRenderWhenAudioStream;
@property (nonatomic) BOOL enableUseRealAutoResolution;
@property (nonatomic) BOOL bmfSREnable;
@property (retain, nonatomic) NSLock *effectLock;
@property (nonatomic) long long bmfKernalRunningType;
@property (nonatomic) long long bmfKernalOriginalType;
@property (nonatomic) long long bmfFlexSrType;
@property (nonatomic) long long externalBmfKernalType;
@property (nonatomic) long long externalBmfSrType;
@property (nonatomic) int currentSrStreamWidth;
@property (nonatomic) int currentSrStreamHeight;
@property (copy, nonatomic) NSMutableDictionary *videoFilterEnableMap;
@property (nonatomic) BOOL userOpenBMFSr;
@property (nonatomic) long long bmfSROpenErrorCode;
@property (weak, nonatomic) id<TVLDelegate> delegate;
@property (readonly, nonatomic) UIView *playerView;
@property (nonatomic) long long playerViewRenderType;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoCropAreaFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic) long long playerViewAlignMode;
@property (readonly, nonatomic) BOOL isPlaying;
@property (nonatomic) BOOL shouldUseLiveDNS;
@property (nonatomic, getter=isPreferredToHTTPDNS) BOOL preferredToHTTPDNS;
@property (nonatomic, getter=isHardwareDecode) BOOL hardwareDecode;
@property (nonatomic) BOOL allowsAudioRendering;
@property (nonatomic) BOOL allowsVideoRendering;
@property (copy, nonatomic) id /* block */ optimumNodeInfoRequest;
@property (copy, nonatomic) id /* block */ strategyInfoRequest;
@property (nonatomic, getter=isClockSynchronizationEnabled) BOOL clockSynchronizationEnabled;
@property (nonatomic, getter=isAppNTPEnabled) BOOL appNTPEnabled;
@property (nonatomic) float ntpTimeDiffByApp;
@property (nonatomic) long long playerViewScaleMode;
@property (nonatomic) float volume;
@property (readonly, nonatomic) BOOL didVideoProcessingOpened;
@property (nonatomic) BOOL enableIgnoreAudioInterruption;
@property (weak, nonatomic) id<TVLAppInfoFetcher> appInfoFetcher;
@property (nonatomic) BOOL enableReplacePauseToStopInRtm;
@property (copy, nonatomic) NSString *bizSessionId;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (readonly, nonatomic) BOOL videoFrameDidRender;
@property (weak, nonatomic) id<TVLLoudnessObserver> loudnessObserver;
@property (weak, nonatomic) id<TVLAudioInfoObserver> audioVolumeObserver;
@property (readonly, nonatomic, getter=isPlaybackInterrupted) BOOL playbackInterrupted;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)setLogLevel:(unsigned long long)arg0;
+ (void)setLogConfig:(id)arg0;
+ (id)getVersion;
+ (void)hookPlay;
+ (void)hookPlayURL;
+ (void)hookStop;
+ (void)hookSwitchPreferences;
+ (void)hookReceiveError;
+ (void)hookRetryWithCurrentPreferences;
+ (void)hookSEIDidUpdate;
+ (void)hookFrameWillRender;
+ (void)hookPacketDidReceive;
+ (void)hookVideoBitrateChange;
+ (void)hookUpdateActualResolutionType;
+ (void)hookSetCurrentVideoBitrate;
+ (void)hookDegradeResolutionWhenStallRetryWithLLASH;
+ (void)load;
+ (id)sortedResolutionsInDegradeOrderWithResolutions:(id)arg0;
+ (id)executeCommand:(long long)arg0 command:(long long)arg1 hashCode:(long long)arg2 info:(id)arg3;
+ (id)recommendedrResolutionDegradeSequence;
+ (id)recommendedResolutionDegradeSequence;
+ (void)sharedPrefetchAudioUnit;
+ (void)load;
+ (id /* block */)logCallback;
+ (void)setLogCallback:(id /* block */)arg0;
+ (void)startOpenGLESActivity;
+ (void)stopOpenGLESActivity;
+ (void)setGloablValue:(id)arg0 forKey:(int)arg1;

- (void)processVideoFrame:(id)arg0;
- (void)setRenderRotation:(long long)arg0;
- (void)setPlayUrl:(id)arg0;
- (void)configConfiguration;
- (void)_setProperty:(id)arg0 value:(id)arg1;
- (void)processAudioFrame:(id)arg0;
- (id)convertBoolNumber:(id)arg0;
- (BOOL)setOptions:(id)arg0 value:(id)arg1;
- (BOOL)setSettings:(id)arg0 value:(id)arg1;
- (void)setRenderFillMode:(long long)arg0;
- (void)setUrlHostIP:(id)arg0;
- (void)setPlayStreamData:(id)arg0;
- (int)isSupportResolutionSwitch:(long long)arg0;
- (void)switchResolution:(long long)arg0;
- (void)setRenderMirror:(long long)arg0;
- (void)enableVideoFrameObserver:(BOOL)arg0 pixelFormat:(long long)arg1 bufferType:(long long)arg2;
- (void)enableAudioFrameObserver:(BOOL)arg0 enableRendering:(BOOL)arg1;
- (void)setEnableSuperResolution:(BOOL)arg0;
- (id)init;
- (void)setConfig:(id)arg0;
- (void)destroy;
- (int)snapshot;
- (void)setProperty:(id)arg0 value:(id)arg1;
- (void)tvl_hook_degradeResolutionWhenStallRetryWithLLASH;
- (void)tvl_hook_setCurrentVideoBitrate:(long long)arg0;
- (void)tvl_hook_HASSwitchResolutionFrom:(id)arg0 to:(id)arg1 error:(id)arg2;
- (void)tvl_hook_videoDidSwitchFromPreviousBitrate:(long long)arg0 toCurrentBitrate:(long long)arg1;
- (void)tvl_hook_playerWillRenderFrameWithStreamType:(long long)arg0 DTS:(long long)arg1 PTS:(long long)arg2 frameData:(id)arg3;
- (void)tvl_hook_playerDidReceivePacketWithStreamType:(long long)arg0 DTS:(long long)arg1 PTS:(long long)arg2 packetInfo:(id)arg3;
- (void)tvl_hook_SEIDidUpdateFrom:(id)arg0 to:(id)arg1;
- (void)tvl_hook_internalRetryWithCurrentPreferences;
- (void)tvl_hook_recieveError:(id)arg0;
- (void)tvl_hook_switchCurrentItemPreferencesFrom:(id)arg0 to:(id)arg1 userInfo:(id)arg2;
- (void)tvl_hook_play:(id)arg0;
- (void)resetSmoothlySwitch;
- (void)configPlayerWithUsers;
- (void)tvl_hook_play;
- (void)resetManagerCacheWhenPlay;
- (void)tvl_play_common;
- (void)tvl_hook_stop:(id)arg0 skip:(BOOL)arg1;
- (void)setAudioVolumeObserver:(id)arg0;
- (void)setAudioSessionCategory:(id)arg0;
- (void)prepare:(id)arg0;
- (void)releaseAudioWrapper;
- (void)releaseVideoWrapper;
- (void)setShouldReportAudioFrame:(BOOL)arg0;
- (void)setShouldReportVideoFrame:(BOOL)arg0;
- (void)setShouldUseVideoFrameInViceView:(BOOL)arg0;
- (void)enableAudioWrapper:(BOOL)arg0;
- (void)setEnableAudioProcessorInPlaying:(BOOL)arg0;
- (void)setEnableAudioRecording:(BOOL)arg0;
- (void)setCommonTag:(id)arg0;
- (id)commonTag;
- (void)setProjectKey:(id)arg0;
- (void)setPreviewFlag:(BOOL)arg0;
- (long long)currentBufferInMilliSeconds;
- (long long)maxCacheDurationInSeconds;
- (BOOL)isBufferingQueueFull;
- (void)setShouldReportTimeSeries:(BOOL)arg0;
- (BOOL)shouldReportTimeSeries;
- (id)debugInfoItems;
- (id)formattedDebugInfoItems;
- (id)formattedDebugInfo;
- (id)liveInfoItems;
- (BOOL)shouldTryAllResolvedIPAddresses;
- (void)setShouldTryAllResolvedIPAddresses:(BOOL)arg0;
- (id)ipMappingTable;
- (void)setIpMappingTable:(id)arg0;
- (long long)udpProbeResult;
- (void)setShouldIgnoreSettings:(BOOL)arg0;
- (void)setAllowsReceivePacketCallback:(BOOL)arg0;
- (void)setAllowsRenderFrameCallback:(BOOL)arg0;
- (void)setFrameDroppingDTSMaxDiff:(long long)arg0;
- (void)setUdpProbeResult:(long long)arg0;
- (id)liveIOPlayInfo;
- (BOOL)ByteVC1HardwareDecodeEnabled;
- (BOOL)H264HardwareDecodeEnabled;
- (void)configMaxCacheDurationWithValue:(long long)arg0;
- (void)setLiveIOPlayInfo:(id)arg0;
- (BOOL)checkTslTimeShift;
- (void)useSuggestedFormatOrProtocolTypeIfPossible;
- (BOOL)hardwareDecodeEnabledWithSettings;
- (void)configNetworkAdaptiveWithSDKParameters:(id)arg0;
- (void)configResolutionDegrade:(id)arg0;
- (void)configBmpContent:(id)arg0;
- (void)configDirectlyKey:(id)arg0;
- (void)configDirectlyKeyJson:(id)arg0;
- (void)configSamiCoreNewLiveBalance:(id)arg0;
- (void)getCellularIndexForNetworkSwitching;
- (void)checkLiveIOParams;
- (void)addLSScfgForParams:(id)arg0;
- (BOOL)shouldIgnoreSettings;
- (BOOL)shouldReportTimeSeriesWithSettings;
- (void)configBufferAdaptiveWithSettings;
- (void)configFastOpenWithSettings;
- (void)configMaxCacheDurationWithSettings;
- (void)configUdpSettings;
- (void)configSDkParamsFromLSS;
- (void)configPlayerWithSDKParameters;
- (void)forceUpdateParamsWithLSSParams;
- (BOOL)allowsReceivePacketCallback;
- (BOOL)allowsRenderFrameCallback;
- (long long)frameDroppingDTSMaxDiff;
- (void)configPlaySessionSettings;
- (void)setAllowsUsePlayerPool:(BOOL)arg0;
- (BOOL)allowsUsePlayerPool;
- (id)getLiveIOParamsIfNeeded;
- (void)configPlayerWithSettings;
- (void)setSettings:(id)arg0;
- (id)settings;
- (void)hooking_updateExternalRenderVideoFrame:(struct __CVBuffer { } *)arg0;
- (void)hooking_deallocExternalRender;
- (id)hooking_getConfigAndStrategyByIntKey:(long long)arg0 defaultValue:(id)arg1 sdkInfo:(id)arg2;
- (void)hooking_enableVideoFilterByType:(long long)arg0 enable:(BOOL)arg1;
- (BOOL)hooking_detectRTCUsability;
- (void)hooking_configRTCEngineWithUserInfo:(id)arg0;
- (void)hooking_deallocRTCEngine;
- (void)hooking_configVRWithUserInfo:(id)arg0;
- (void)hooking_deallocVROutlet;
- (void)hooking_startRenderVROutlet;
- (void)hooking_readyToPlayVROutlet;
- (void)setupVideoProcessingByUser:(BOOL)arg0;
- (void)hooking_setupBMPFilter:(id)arg0 bmpContent:(id)arg1;
- (id)hooking_getConfigAndStrategyByKey:(id)arg0 defaultValue:(id)arg1 sdkInfo:(id)arg2;
- (id)hooking_getConfigAndStrategyBundle:(long long)arg0 sdkInfo:(id)arg1;
- (void)hooking_releaseEffect;
- (void)hooking_runStratgyInStartup;
- (void)hooking_stopStrategyList;
- (void)hooking_stopVQScoreTask;
- (void)hooking_setEventInfoLSS:(id)arg0;
- (void)hooking_runStratgyInPlaying;
- (void)hooking_handleCAECategory:(long long)arg0;
- (void)hooking_handleAlgorithmSEI:(const char *)arg0 size:(int)arg1;
- (id)hooking_strategyInfoRequest:(id)arg0 userInfo:(id)arg1;
- (void)hooking_setupVideoProcessingWithUserInfo:(id)arg0;
- (void)hooking_runVQScoreTask:(id)arg0;
- (void)hooking_setupFilter;
- (id)hooking_nodeInfoWithHost:(id)arg0;
- (void)hooking_preconnectWithLSS:(id)arg0;
- (void)hooking_setAppInfoBySessionId;
- (void)hooking_configStrategyListInfo;
- (void)hooking_removeAppInfoBySessionId;
- (void)updateLLASHTargetBitrate:(long long)arg0 shouldCache:(BOOL)arg1;
- (void)handleDummySessionDidStopNotification:(id)arg0;
- (void)handleDummyLiveMessageNotification:(id)arg0;
- (void)handleDummyPlayerNotification:(id)arg0;
- (void)configABRWithUserInfo:(id)arg0;
- (BOOL)shouldReplaceABRSwitchReportingWithLLASHSwitch;
- (BOOL)isABREnabled;
- (void)setEffectParams:(id)arg0;
- (void)setupBefComposer;
- (void)setupBefComposerParams:(id)arg0;
- (void)setupVideoProcessingWithUserInfo:(id)arg0;
- (void)setupFilter;
- (void)setupBMPFilter:(id)arg0 bmpContent:(id)arg1;
- (void)enableVideoFilterByType:(long long)arg0 enable:(BOOL)arg1;
- (void)runVQScoreTask:(id)arg0;
- (void)stopVQScoreTask;
- (void)setupVideoSuperResolution:(id)arg0;
- (void)setupVideoSDR2HDR:(id)arg0;
- (void)setupVideoSharpWithUserInfo:(id)arg0;
- (void)setupBmfVQScoreWithUserInfo:(id)arg0;
- (float)maxProcessFrameRate;
- (id)parseStrategyConfig:(id)arg0 longerSide:(long long)arg1 shorterSide:(long long)arg2;
- (void)updateBmfFlexSr;
- (void)setMaxProcessFrameRate:(float)arg0;
- (id)imageFilter;
- (void)setImageFilter:(id)arg0;
- (int)imageFilterLength;
- (void)setImageFilterLength:(int)arg0;
- (void)setCurrentImageFilterName:(id)arg0;
- (void)setCurrentHdrImageFilterName:(id)arg0;
- (void)setupFilter:(id)arg0 hdrImageName:(id)arg1;
- (id)currentImageFilterName;
- (id)currentHdrImageFilterName;
- (void)setRoiBMFEffect;
- (float)filterStrength;
- (void)enableFilter:(BOOL)arg0 filterIndex:(int)arg1;
- (void)adjustFilterStrength:(float)arg0 filterIndex:(int)arg1;
- (void)setFilterStrength:(float)arg0;
- (BOOL)shouldForbidVideoProcess;
- (BOOL)enableVideoProcess;
- (id)roiInfo;
- (BOOL)enableRoiBMF;
- (void)setEnableRoiBMF:(BOOL)arg0;
- (void)setRoiInfo:(id)arg0;
- (id)vqscoreTaskTimer;
- (void)setVqscoreIntervalArray:(id)arg0;
- (id)vqscoreIntervalArray;
- (void)setVqscoreTaskTimer:(id)arg0;
- (void)installModule_VideoProcessing;
- (void)setupProcessorCommonCondition;
- (void)addFliter:(struct CGImage { } *)arg0 imageName:(id)arg1;
- (void)enableFilter:(BOOL)arg0 fliterIndex:(int)arg1;
- (void)adjustFilterStrength:(float)arg0 fliterIndex:(int)arg1;
- (void)setShouldForbidVideoProcess:(BOOL)arg0;
- (void)setEnableVideoProcess:(BOOL)arg0;
- (void)setRoiBMFSR:(BOOL)arg0 xInRate:(float)arg1 yInRate:(float)arg2 wInRate:(float)arg3 hInRate:(float)arg4 yColor:(int)arg5 uColor:(int)arg6 vColor:(int)arg7;
- (long long)setBMFSrType:(long long)arg0;
- (void)enableVideoFilter:(long long)arg0 enable:(BOOL)arg1;
- (void)addFilter:(id)arg0;
- (void)removeAllEffects;
- (BOOL)filterStatus;
- (void)setFilterStatus:(BOOL)arg0;
- (int)setupWithConfig:(id)arg0;
- (void *)effectHandle;
- (void)setEffectHandle:(void *)arg0;
- (void)releaseEffectInternal;
- (BOOL)enableEffectFilter;
- (void)setEnableEffectFilter:(BOOL)arg0;
- (id)getComposerNodes;
- (void)removeComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)installModule_VideoEffect;
- (void)setEnableVideoEffect:(BOOL)arg0;
- (void)setComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)appendComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)sendEffectMessage:(long long)arg0 param1:(long long)arg1 param2:(long long)arg2 param3:(id)arg3;
- (void)setRenderCacheStringValue:(id)arg0 withKey:(id)arg1;
- (id)getEffectTrackData:(long long)arg0;
- (void)releaseEffect;
- (void)setVRModeEnabled:(BOOL)arg0;
- (void)configVRWithUserInfo:(id)arg0;
- (void)startRenderVROutlet;
- (void)recenter;
- (void)updateConfigurationWithParams:(id)arg0;
- (void)rotateWithPitch:(double)arg0 andYaw:(double)arg1 andRoll:(double)arg2;
- (void)setScopicType:(long long)arg0;
- (void)setHeadTrackingEnabled:(BOOL)arg0;
- (void)handleHeadPoseDidUpdateNotification:(id)arg0;
- (long long)scopicType;
- (void)deallocVROutlet;
- (void)readyToPlayVROutlet;
- (void)hooking_setPlayerViewScaleMode:(long long)arg0;
- (long long)VREffectType;
- (void)setRequiredScaleMode:(long long)arg0;
- (BOOL)shouldUseDefaultScaleModeForVR;
- (BOOL)isVRModeEnabled;
- (BOOL)shouldUsePanoramaFilter;
- (void)setIsVREffectInitialized:(BOOL)arg0;
- (long long)requiredScaleMode;
- (void)setVREffectInitOptEnabled:(BOOL)arg0;
- (void)initEffectVR;
- (void)updateVROutletWithCurrentConfiguration;
- (float)spaceOrientationPitch;
- (id)backStickerImage;
- (double)coverAreaDegrees;
- (double)longerSideFOVInRadians;
- (double)gyroSensitivity;
- (BOOL)VREffectInitOptEnabled;
- (BOOL)isVREffectInitialized;
- (void)updateSpaceOrientation;
- (id /* block */)headPoseUpdateBlock;
- (void)setBackStickerImage:(id)arg0;
- (void)setCoverAreaDegrees:(double)arg0;
- (void)installModule_VR;
- (void)setSpaceOrientationPitch:(float)arg0;
- (void)setHeadPoseUpdateBlock:(id /* block */)arg0;
- (void)updateBackStickerWithImage:(id)arg0 coverAreaDegrees:(double)arg1;
- (void)setShouldUseDefaultScaleModeForVR:(BOOL)arg0;
- (void)setLongerSideFOVInRadians:(double)arg0;
- (void)setGyroSensitivity:(double)arg0;
- (void)setRequiredInterfaceOrientation:(long long)arg0;
- (void)setZoom:(float)arg0;
- (float)zoom;
- (BOOL)isHeadTrackingEnabled;
- (long long)requiredInterfaceOrientation;
- (BOOL)detectRTCUsability;
- (void)configRTCEngineWithUserInfo:(id)arg0;
- (void)deallocRTCEngine;
- (void)setTVLRTCPlayerWrapper2Class:(id)arg0;
- (id)TVLRTCPlayerWrapper2Class;
- (id)dealWithRealXParam:(id)arg0;
- (void)setRtsRetryMaxCount:(long long)arg0;
- (void)setResetWhenPreloadError:(BOOL)arg0;
- (long long)rtsRetryMaxCount;
- (BOOL)resetWhenPreloadError;
- (BOOL)isRtsChoosenByLOB;
- (id)nodeInfoWithHost:(id)arg0;
- (id)strategyInfoRequest:(id)arg0 userInfo:(id)arg1;
- (id)getConfigAndStrategyByIntKey:(long long)arg0 defaultValue:(id)arg1 sdkInfo:(id)arg2;
- (id)getConfigAndStrategyBundle:(long long)arg0 sdkInfo:(id)arg1;
- (void)configStrategyListInfo;
- (void)runStratgyInStartup;
- (void)runStratgyInPlaying;
- (void)stopStrategyList;
- (void)preconnectWithLSS:(id)arg0;
- (void)setEventInfoLSS:(id)arg0;
- (void)setAppInfoBySessionId;
- (void)removeAppInfoBySessionId;
- (void)handleAlgorithmSEI:(const char *)arg0 size:(int)arg1;
- (void)handleCAECategory:(long long)arg0;
- (id)streamFeatures;
- (void)setCAECategory:(long long)arg0;
- (long long)CAECategory;
- (void)runStratgyByRequest;
- (void)setStreamFeatures:(id)arg0;
- (void)setEnableUseStrategyInLss:(BOOL)arg0;
- (void)setResSwtichCheckType:(long long)arg0;
- (void)setEnableRunStrategyAsync:(BOOL)arg0;
- (BOOL)enableUseStrategyInLss;
- (void)setStrategyList:(id)arg0;
- (id)strategyList;
- (BOOL)enableRunStrategyAsync;
- (id)resolutionStrategyExtraInfo;
- (id)runResponseFromStrategy:(id)arg0 keyType:(long long)arg1;
- (long long)resSwtichCheckType;
- (void)installModule_LSS;
- (id)getConfigAndStrategyByKey:(id)arg0 defaultValue:(id)arg1 sdkInfo:(id)arg2;
- (id)getAppInfoForKey:(id)arg0 defaultValue:(id)arg1;
- (id)callLSSStrategy:(id)arg0;
- (void)generateStrategyLog;
- (void)fallbackToPlayerAbr;
- (void)renderLoop;
- (void)updateExternalRenderVideoFrame:(struct __CVBuffer { } *)arg0;
- (void)deallocExternalRender;
- (id)vicePlayerViews;
- (id)renderViewLock;
- (id)createVicePlayerViewWithRenderingArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)destroyAllVicePlayerView;
- (void)installModule_ExternalRender;
- (id)currentVicePlayerViews;
- (void)setRenderViewLock:(id)arg0;
- (id)createVicePlayerView;
- (void)destroyVicePlayerView:(id)arg0;
- (void)setStallCount:(long long)arg0;
- (void)setImageLayoutType:(unsigned long long)arg0;
- (void)onStreamDryup:(id)arg0;
- (void)setFloatValue:(float)arg0 forKey:(int)arg1;
- (void)recieveError:(id)arg0;
- (void)stallStart;
- (void)stallEnd;
- (void)onMonitorLog:(id)arg0;
- (void)loadStateChanged:(id)arg0;
- (void)preload:(id)arg0;
- (id)initWithOwnPlayer:(BOOL)arg0;
- (BOOL)isSupportMetal;
- (void)setHardwareDecode:(BOOL)arg0;
- (BOOL)isHardwareDecode;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)supportPictureInPictureMode;
- (void)closeAsync;
- (BOOL)firstVideoFrameDidRender;
- (void)setOptionValue:(id)arg0 forIdentifier:(id)arg1;
- (long long)currentVideoBitrate;
- (id)mediaResolutionTypeWithVideoBitrate:(long long)arg0;
- (void)setCurrentVideoBitrate:(long long)arg0;
- (void)switchCurrentItemResolution:(id)arg0;
- (id)neptuneName;
- (id)NEQInfo;
- (void)setShouldUseLiveDNS:(BOOL)arg0;
- (BOOL)shouldUseLiveDNS;
- (id /* block */)optimumNodeInfoRequest;
- (void)setOptimumNodeInfoRequest:(id /* block */)arg0;
- (void)setEnableReplacePauseToStopInRtm:(BOOL)arg0;
- (void)setRtsRetryMaxCount:(long long)arg0;
- (void)setResetWhenPreloadError:(BOOL)arg0;
- (long long)specifiedSceneByLOB;
- (long long)rtsRetryMaxCount;
- (BOOL)resetWhenPreloadError;
- (void)setPlayerViewScaleMode:(long long)arg0;
- (long long)bmfSROpenErrorCode;
- (void)setBmfSROpenErrorCode:(long long)arg0;
- (long long)externalBmfKernalType;
- (long long)externalBmfSrType;
- (void)setSrWorkCondition:(BOOL)arg0;
- (void)setBmfSREnable:(BOOL)arg0;
- (BOOL)bmfSREnable;
- (void)setBmfKernalOriginalType:(long long)arg0;
- (long long)bmfKernalOriginalType;
- (long long)bmfKernalRunningType;
- (void)setBmfKernalRunningType:(long long)arg0;
- (long long)bmfFlexSrType;
- (int)currentSrStreamWidth;
- (int)currentSrStreamHeight;
- (void)setCurrentSrStreamWidth:(int)arg0;
- (void)setCurrentSrStreamHeight:(int)arg0;
- (id)effectLock;
- (void)setBmfFlexSrType:(long long)arg0;
- (BOOL)userOpenBMFSr;
- (BOOL)shouldForbidHDR10Render;
- (id)videoFilterEnableMap;
- (void)setPlayerViewRenderType:(long long)arg0;
- (BOOL)srWorkCondition;
- (void)setExternalBmfSrType:(long long)arg0;
- (void)setExternalBmfKernalType:(long long)arg0;
- (void)installModules;
- (void)playerDidReceivePacketWithStreamType:(long long)arg0 DTS:(long long)arg1 PTS:(long long)arg2 packetInfo:(id)arg3;
- (void)playerWillRenderFrameWithStreamType:(long long)arg0 DTS:(long long)arg1 PTS:(long long)arg2 frameData:(id)arg3;
- (void)tvlManagerDidReceiveBinarySei:(const char *)arg0 length:(int)arg1;
- (void)tvlManagerAbrDecisionInfo:(unsigned long long)arg0 content:(const char *)arg1;
- (const char *)tvlManagerLiveStrategyParams:(const char *)arg0;
- (void)tvlManagerSeiImmediatlyCallback:(int)arg0 content:(const char *)arg1;
- (void)handleVideoBitrateDidChangeNotification:(id)arg0;
- (void)handleRtcTraceInfoDidReceiveNotification:(id)arg0;
- (void)handleAudioDevice:(id)arg0;
- (void)handleLLASHSwitchPerformedNotification:(id)arg0;
- (void)registerBackgroundGPURenderLog;
- (BOOL)shouldReportVideoFrame;
- (BOOL)allowsReleaseVideoWrapperInCallback;
- (void)setShouldReportAudioFrame:(BOOL)arg0;
- (void)setPreloadingState:(BOOL)arg0;
- (id)bizSessionId;
- (BOOL)preloadForRts:(id)arg0;
- (void)internalReplaceItem:(id)arg0;
- (BOOL)mIsPreloading;
- (BOOL)mPreloadFailed;
- (void)setMIsPreloading:(BOOL)arg0;
- (void)setPreloadingStream:(id)arg0;
- (int)getPreloadState;
- (BOOL)mCallPreload;
- (BOOL)mPreloadSuccess;
- (void)playInternal;
- (void)setMPreloadFailed:(BOOL)arg0;
- (void)setMPreloadSuccess:(BOOL)arg0;
- (BOOL)smoothSwitchCurrentItemResolutionInner:(id)arg0;
- (int)isCurrentItemSupportResolutionSwitch:(id)arg0 needSameResCheck:(BOOL)arg1;
- (void)setManualSwitchResolution:(id)arg0;
- (void)resetSmoothSwitch;
- (void)switchCurrentItemResolution:(id)arg0 sourceType:(id)arg1;
- (void)switchCurrentItemPreferencesWithSupportedPreferences:(id)arg0;
- (void)switchCurrentItemPreferencesFrom:(id)arg0 to:(id)arg1 userInfo:(id)arg2;
- (void)setCurrentSmoothResolution:(id)arg0;
- (void)setAllowsAudioRendering:(BOOL)arg0;
- (void)setMCallPreload:(BOOL)arg0;
- (void)setFirstVideoFrameDidRender:(BOOL)arg0;
- (void)setFirstAudioFrameDidRender:(BOOL)arg0;
- (void)requestItemInfo;
- (void)setShouldForbidResolutionDegrade:(BOOL)arg0;
- (id)retryer;
- (void)stopfastModeEnabled:(BOOL)arg0;
- (id)preloadingStream;
- (BOOL)didUseHDR10Render;
- (void)setDidUseHDR10Render:(BOOL)arg0;
- (void)setShouldForbidHDR10Render:(BOOL)arg0;
- (void)setAudioProcessSampleRate:(int)arg0;
- (void)setAudioProcessChannels:(int)arg0;
- (void)setAudioProcessDuration:(int)arg0;
- (id)smoothlySwitchTimer;
- (void)setSmoothlySwitchTimer:(id)arg0;
- (void)stop:(id)arg0 skip:(BOOL)arg1;
- (id)fallbackInfoList;
- (void)stopLiveIoTask;
- (void)removeUserCache;
- (void)resetInitialParams;
- (void)stopStrategyTimer;
- (void)setEnableReportAlgoSei:(int)arg0;
- (BOOL)shouldPlayerCloseWithoutStop;
- (void)closeSync;
- (BOOL)isManagerOfPlayer:(id)arg0;
- (void)videoDidSwitchFromPreviousBitrate:(long long)arg0 toCurrentBitrate:(long long)arg1;
- (void)performABRSWitchActionInUrl:(long long)arg0;
- (id)suggestedPreferencesWithUserInfo:(id)arg0;
- (BOOL)shouldReplaceCurrentPreferencesWithSuggestedPreferences:(id)arg0;
- (id)customizedPreferencesWithUserInfo:(id)arg0;
- (void)handlePlayerItemInfoRequestFailureWithError:(id)arg0;
- (void)processStartUpDeGrade;
- (id)changeDefaultSelectedResolutionIfNeed:(id)arg0;
- (BOOL)canStartUpResolutionDegrade;
- (void)startDegradeTimer;
- (void)setRetryer:(id)arg0;
- (int)startUpResolutionDegradeTimeThreshMs;
- (BOOL)startUpResolutionDegrade;
- (BOOL)enableStartUpResolutionDegrade;
- (int)startUpResolutionDegradeShortEdge;
- (BOOL)replaceCurrentPreferencesWithStartUpResolutionDegrade;
- (void)retryWithCurrentPreferences:(BOOL)arg0;
- (void)retryWithCurrentPreferencesWithMaxRetryTime;
- (void)retryWithCurrentPreferencesWithOriginRetryer;
- (double)retryTimeIntervalInError;
- (void)setRtsRetryTimes:(long long)arg0;
- (long long)rtsRetryTimes;
- (id)rtsError;
- (void)retryWithReplaceCurrentPreferencesWithError:(id)arg0;
- (void)internalRetryWithCurrentPreferences;
- (long long)retryMaximumTimesInError;
- (id)findBackupPreferencesIfPossibleWithPreferences:(id)arg0;
- (void)setRtsError:(id)arg0;
- (id)findFallbackPreferencesWithPreferences:(id)arg0 error:(id)arg1;
- (long long)currentMainToBackCount;
- (void)setCurrentMainToBackCount:(long long)arg0;
- (BOOL)shouldUseMaxRetryTimeInError;
- (void)retryWithCurrentPreferences;
- (id)latestFallbackInfo;
- (id)monitoringUserInfo;
- (void)SEIDidUpdateFrom:(id)arg0 to:(id)arg1;
- (void)onVeLivePlayerStatusUpdate:(long long)arg0;
- (void)didReceiveSEI:(id)arg0;
- (void)autoUpdateCropAreaIfNeededWithSEI:(id)arg0;
- (BOOL)allowsVideoAutoCrop;
- (BOOL)shouldUseVideoFrameInViceView;
- (BOOL)allowsAudioRendering;
- (void)parseCrossTalkInfo:(id)arg0;
- (void)updateAutoStatus;
- (void)setEnableCloseAsync:(BOOL)arg0;
- (void)switchToCellular:(id)arg0;
- (void)switchToDefault:(id)arg0;
- (void)processNetworkSwitchingRequest:(id)arg0;
- (void)setPreferredToHTTPDNS:(BOOL)arg0;
- (BOOL)isPreferredToHTTPDNS;
- (void)setRetryTimeIntervalInError:(double)arg0;
- (BOOL)shouldReportAudioFrame;
- (id)loudnessObserver;
- (long long)previousRenderingAudioFrameDTS;
- (void)renderingAudioFrameDTSDidRollbackWithPreviousDTS:(long long)arg0 latestDTS:(long long)arg1;
- (void)setPreviousRenderingAudioFrameDTS:(long long)arg0;
- (void)setupAudioBalanceBySei:(id)arg0 payLoadType:(int)arg1;
- (BOOL)isAlgoSei:(const char *)arg0 length:(int)arg1;
- (int)enableReportAlgoSei;
- (id)strategyParamRequest:(id)arg0;
- (id /* block */)strategyInfoRequest;
- (long long)previousAudioPacketDTS;
- (void)audioPacketDTSDidRollbackWithPreviousDTS:(long long)arg0 latestDTS:(long long)arg1;
- (void)setPreviousAudioPacketDTS:(long long)arg0;
- (BOOL)shouldDegradeResolutionWhenStallRetryWithLLASH;
- (void)degradeResolutionWhenStallRetryWithLLASH;
- (void)receivePlayerErrorForDebug:(id)arg0;
- (id)manualSwitchResolution;
- (BOOL)fallbackHDR2SDRInCodecError;
- (BOOL)fallbackToOrigin;
- (BOOL)shouldBackupOriginInDecodeError;
- (id)currentSmoothResolution;
- (BOOL)firstAudioFrameDidRender;
- (void)startLiveIoTask;
- (void)autoSmoothSwitchAfterNSeconds;
- (long long)resolutionDegradeConditionStallCount;
- (BOOL)allowsResolutionDegrade;
- (BOOL)shouldForbidResolutionDegrade;
- (void)performABRSwitchAction:(long long)arg0;
- (void)replaceCurrentPreferencesWithResolutionDegrade;
- (void)onEventLog:(id)arg0;
- (id)getApplogEventName:(id)arg0;
- (void)onEventApplog:(id)arg0 params:(id)arg1;
- (void)setPlayerLoadState:(long long)arg0;
- (void)itemStatusChanged:(id)arg0;
- (void)performRequestWithURL:(id)arg0 method:(id)arg1 headerField:(id)arg2 params:(id)arg3 completion:(id /* block */)arg4;
- (void)inValidTaskTimer;
- (void)liveIOSetPlayerRealTimeData;
- (void)playerController:(id)arg0 videoSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)playerController:(id)arg0 playerItemStatusDidChange:(long long)arg1;
- (BOOL)playerController:(id)arg0 shouldRetryWithReason:(long long)arg1 times:(long long)arg2 duration:(double)arg3;
- (void)initLutFilterWhenNeeded;
- (BOOL)shouldTryNextURLs;
- (id)nodeInfoWithHostFromLss:(id)arg0;
- (void)preconnectWithStreamData:(id)arg0;
- (void)playerController:(id)arg0 readyToPlayVideoCodecID:(int)arg1 audioCodecID:(int)arg2;
- (BOOL)isPlaybackInterrupted;
- (void)setStatisticsTimer:(id)arg0;
- (id)statisticsTimer;
- (void)setUserSetOptionOrSettings:(id)arg0;
- (id)userSetOptionOrSettings;
- (void)setAudioDataChannels:(int)arg0;
- (int)audioDataChannels;
- (void)setAudioDataSampleRate:(int)arg0;
- (int)audioDataSampleRate;
- (void)setMaxMainToBackCount:(long long)arg0;
- (long long)maxMainToBackCount;
- (void)setVideoFormatBufferType:(long long)arg0;
- (long long)videoFormatBufferType;
- (void)setVideoFormatPixelFormat:(long long)arg0;
- (long long)videoFormatPixelFormat;
- (void)setEnableAudioFrameObserver:(BOOL)arg0;
- (BOOL)enableAudioFrameObserver;
- (void)setEnableVideoFrameObserver:(BOOL)arg0;
- (BOOL)enableVideoFrameObserver;
- (void)setEnablePopVideoAsync:(BOOL)arg0;
- (BOOL)enablePopVideoAsync;
- (void)replaceCurrentItemWithURL:(id)arg0;
- (BOOL)isPreloadFailed;
- (void)resetPreloadPlayer;
- (void)smoothlySwitchCurrentItemResolution:(id)arg0 switchReason:(long long)arg1 completion:(id /* block */)arg2;
- (int)isCurrentItemSupportResolutionSwitch:(id)arg0;
- (BOOL)videoFrameDidRender;
- (long long)playerViewRenderType;
- (void)switchToByteVC1URLIfPossible;
- (id)currentMetaDataInfo;
- (long long)currentAudioStreamDecibel;
- (long long)currentPlayerDebugState;
- (void)addExtraHttpRequestHeadersByUser:(id)arg0;
- (double)renderingFPS;
- (void)setEnableIgnoreAudioInterruption:(BOOL)arg0;
- (BOOL)enableIgnoreAudioInterruption;
- (BOOL)didVideoProcessingOpened;
- (struct CGSize { double x0; double x1; })setViewPresetSize;
- (void)setNtpTimeDiffByApp:(float)arg0;
- (float)ntpTimeDiffByApp;
- (void)setAllowsVideoRendering:(BOOL)arg0;
- (void)setRetryTimeLimit:(unsigned long long)arg0;
- (void)setRetryTimeInternal:(double)arg0;
- (void)setRetryCountLimit:(long long)arg0;
- (void)initVideoWrapper;
- (void)initVideoWrapperTraitObject;
- (void)degradeFromURL:(id)arg0 toURL:(id)arg1 reason:(long long)arg2;
- (void)onPlayerStaticData;
- (long long)downloadSpeedInKbps;
- (long long)downloadSpeedBasedFLVTagInKbps;
- (long long)estimatedBandwidthInKbps;
- (long long)bandwidthEstimationSamplesAverage;
- (long long)estimatedBandwidthStandardDeviation;
- (long long)bandwidthEstimationSamplesStandardDeviation;
- (void)switchToResolution:(id)arg0 completion:(id /* block */)arg1;
- (long long)playerLoadState;
- (BOOL)allowsVideoRendering;
- (void)setStrategyInfoRequest:(id /* block */)arg0;
- (BOOL)enableReplacePauseToStopInRtm;
- (void)setBizSessionId:(id)arg0;
- (void)setLoudnessObserver:(id)arg0;
- (void)setMonitoringUserInfo:(id)arg0;
- (void)setAllowsResolutionDegrade:(BOOL)arg0;
- (BOOL)allowsByteVC1Degrade;
- (void)setAllowsByteVC1Degrade:(BOOL)arg0;
- (void)setAllowsVideoAutoCrop:(BOOL)arg0;
- (void)setShouldReportVideoFrame:(BOOL)arg0;
- (BOOL)shouldReportAudioFrameToAudioRecord;
- (void)setShouldReportAudioFrameToAudioRecord:(BOOL)arg0;
- (void)setShouldUseVideoFrameInViceView:(BOOL)arg0;
- (void)setResolutionDegradeConditionStallCount:(long long)arg0;
- (id /* block */)playerDidReceivePacketCallback;
- (void)setPlayerDidReceivePacketCallback:(id /* block */)arg0;
- (id /* block */)playerDidReceivePacketWithPacketInfoCallback;
- (void)setPlayerDidReceivePacketWithPacketInfoCallback:(id /* block */)arg0;
- (id /* block */)playerWillRenderFrameCallback;
- (void)setPlayerWillRenderFrameCallback:(id /* block */)arg0;
- (id /* block */)playerDidReceiveBinarySeiCallback;
- (void)setPlayerDidReceiveBinarySeiCallback:(id /* block */)arg0;
- (id /* block */)playerAbrDecisionInfoCallback;
- (void)setPlayerAbrDecisionInfoCallback:(id /* block */)arg0;
- (id /* block */)playerLiveStrategyParamsCallback;
- (void)setPlayerLiveStrategyParamsCallback:(id /* block */)arg0;
- (id /* block */)playerSeiImmediatlyCallback;
- (void)setPlayerSeiImmediatlyCallback:(id /* block */)arg0;
- (void)setShouldPlayerCloseWithoutStop:(BOOL)arg0;
- (void)setShouldDegradeResolutionWhenStallRetryWithLLASH:(BOOL)arg0;
- (void)setShouldUseMaxRetryTimeInError:(BOOL)arg0;
- (void)setRetryMaximumTimesInError:(long long)arg0;
- (long long)stallCounterIntervalInMillSeconds;
- (void)setStallCounterIntervalInMillSeconds:(long long)arg0;
- (BOOL)stallCounterEnable;
- (void)setStallCounterEnable:(BOOL)arg0;
- (void)setSpecifiedSceneByLOB:(long long)arg0;
- (void)setNEQInfo:(id)arg0;
- (void)setShouldBackupOriginInDecodeError:(BOOL)arg0;
- (BOOL)enableCloseAsync;
- (void)setFallbackInfoList:(id)arg0;
- (long long)firstFrameRenderTimestamp;
- (void)setFirstFrameRenderTimestamp:(long long)arg0;
- (void)setEnableStartUpResolutionDegrade:(BOOL)arg0;
- (void)setStartUpResolutionDegradeTimeThreshMs:(int)arg0;
- (void)setStartUpResolutionDegradeShortEdge:(int)arg0;
- (long long)smoothSwitchReason;
- (void)setSmoothSwitchReason:(long long)arg0;
- (long long)targetSmoothBitrate;
- (void)setTargetSmoothBitrate:(long long)arg0;
- (void)setNeptuneName:(id)arg0;
- (int)audioProcessSampleRate;
- (int)audioProcessChannels;
- (int)audioProcessDuration;
- (void)setAllowsReleaseVideoWrapperInCallback:(BOOL)arg0;
- (BOOL)enableRetryFireImmediately;
- (void)setEnableRetryFireImmediately:(BOOL)arg0;
- (float)ntpTimeDiffByUserSet;
- (void)setNtpTimeDiffByUserSet:(float)arg0;
- (BOOL)enableIgnoreVideoRenderWhenAudioStream;
- (void)setEnableIgnoreVideoRenderWhenAudioStream:(BOOL)arg0;
- (BOOL)enableUseRealAutoResolution;
- (void)setEnableUseRealAutoResolution:(BOOL)arg0;
- (void)setEffectLock:(id)arg0;
- (void)setVideoFilterEnableMap:(id)arg0;
- (void)setUserOpenBMFSr:(BOOL)arg0;
- (void)onReceiveSeiMessage:(id)arg0;
- (void)handleRenderStall:(id)arg0;
- (void)startAudioRender;
- (void)startVideoRender;
- (void)registersObservations;
- (BOOL)isAppNTPEnabled;
- (void)setClockSynchronizationEnabled:(BOOL)arg0;
- (void)setAppNTPEnabled:(BOOL)arg0;
- (BOOL)isClockSynchronizationEnabled;
- (void)setOptionValue:(id)arg0 forIdentifier:(id)arg1 shouldCache:(BOOL)arg2;
- (struct __CVBuffer { } *)cropCopyPixelBuffer:(float)arg0 topLeftY:(float)arg1 cropW:(float)arg2 cropH:(float)arg3;
- (long long)playerViewScaleMode;
- (void)setUsingCellular:(id)arg0;
- (id)audioVolumeObserver;
- (void)setAudioVolumeObserver:(id)arg0;
- (long long)stallCount;
- (void)HASSwitchResolutionFrom:(id)arg0 to:(id)arg1 error:(id)arg2;
- (void)setFastOpenDuration:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoCropAreaFrame;
- (void)setVideoCropAreaFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (unsigned long long)audioRenderDeviceType;
- (void)setAudioRenderDeviceType:(unsigned long long)arg0;
- (long long)playerViewAlignMode;
- (void)setPlayerViewAlignMode:(long long)arg0;
- (void)setController:(id)arg0;
- (long long)playbackState;
- (void)updateProgress;
- (id)observer;
- (void)setCurrentItem:(id)arg0;
- (void)setDelay:(long long)arg0;
- (void).cxx_destruct;
- (unsigned long long)state;
- (void)setEffect:(id)arg0;
- (float)volume;
- (void)setState:(unsigned long long)arg0;
- (void)setMuted:(BOOL)arg0;
- (long long)delay;
- (void)close;
- (void)stop;
- (id)currentItem;
- (void)play:(id)arg0;
- (id)controller;
- (id)delegate;
- (id)configuration;
- (void)setObserver:(id)arg0;
- (BOOL)isPlaying;
- (void)setError:(id)arg0;
- (void)setVolume:(float)arg0;
- (id)playerView;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)reset;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)setMute:(BOOL)arg0;
- (id)error;
- (void)resetCache;
- (void)setValue:(int)arg0 forKey:(int)arg1;
- (void)setPlaybackState:(long long)arg0;
- (void)setConfiguration:(id)arg0;
- (void)replaceCurrentItemWithPlayerItem:(id)arg0;
- (BOOL)isPreloading;
- (BOOL)isMute;
- (id)appInfoFetcher;
- (void)setAppInfoFetcher:(id)arg0;
- (id)initWithPlayerType:(unsigned long long)arg0;
- (void)takeScreenShot:(id /* block */)arg0;

@end
