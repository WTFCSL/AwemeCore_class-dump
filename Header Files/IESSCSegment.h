//
//     Generated by private class-dump
//

@class IESSCTransition, NSString, IESSCMedia, IESSCSimpleVolumeProcessingNode;
@protocol IESSCAudioTransition, IESSCAudioProcessingNode, IESSCVideoTransition, ISSCVideoTimeline;

@interface IESSCSegment : NSObject <IESSCContextRealTimeRenderInfoObserver, IESSCTransitionableVideo, IESSCTransitionableAudio, NSCopying, IESSCExportCancellable> {
    float _volume;
    IESSCMedia *_media;
    unsigned long long _contentMode;
    id<ISSCVideoTimeline> _videoFilter;
    id<IESSCAudioProcessingNode> _audioFilter;
    IESSCTransition *_transition;
    IESSCSimpleVolumeProcessingNode *_volumeProcessingNode;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _startTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _duration;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
    struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _transform;
}

@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } duration;
@property (retain, nonatomic) IESSCSimpleVolumeProcessingNode *volumeProcessingNode;
@property (retain, nonatomic) IESSCMedia *media;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } startTime;
@property (readonly, nonatomic) struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } timeRange;
@property (nonatomic) unsigned long long contentMode;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;
@property (nonatomic) struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } transform;
@property (retain, nonatomic) id<ISSCVideoTimeline> videoFilter;
@property (nonatomic) float volume;
@property (retain, nonatomic) id<IESSCAudioProcessingNode> audioFilter;
@property (retain, nonatomic) IESSCTransition *transition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<IESSCVideoTransition> videoTransition;
@property (readonly, nonatomic) id<IESSCAudioTransition> audioTransition;

- (id)audioFilter;
- (void)setAudioFilter:(id)arg0;
- (id)videoTransition;
- (void)applyEffectToBufferListInOut:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x0; unsigned int x1; void *x2; } x1[1]; } *)arg0 renderInfo:(id)arg1;
- (void)audioTapWillDealloc;
- (void)cancelSourceExport;
- (void)contextDidChangeRenderTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)initWithImage:(id)arg0 duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg1;
- (id)volumeProcessingNode;
- (void)applyEffectToSourceImage:(id)arg0 renderInfo:(id)arg1;
- (BOOL)shouldDiscardCurrentItem;
- (id)audioTransition;
- (unsigned long long)numberOfAudioTracks;
- (unsigned long long)numberOfVideoTracks;
- (id)videoCompositionTrackForComposition:(id)arg0 atIndex:(long long)arg1;
- (id)sourceImageAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 renderSize:(struct CGSize { double x0; double x1; })arg1;
- (id)colorSpaceInformation;
- (id)audioCompositionTrackForComposition:(id)arg0 atIndex:(long long)arg1;
- (void)configureWithAudioMixParameters:(id)arg0;
- (void)setVolumeProcessingNode:(id)arg0;
- (id)initEmptyVideoWithDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)initWithEmptyDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)initEmptyAudioWithDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)makeFullRangeCopy;
- (void)setTransition:(id)arg0;
- (id)init;
- (void)setContentMode:(unsigned long long)arg0;
- (void)setStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)transition;
- (void).cxx_destruct;
- (float)volume;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRange;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (id)debugDescription;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })startTime;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (id)media;
- (void)setVolume:(float)arg0;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)initWithAsset:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (unsigned long long)contentMode;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)setDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (BOOL)isHDRVideo;
- (void)setMedia:(id)arg0;
- (id)initWithMedia:(id)arg0;
- (void)setVideoFilter:(id)arg0;
- (id)videoFilter;

@end
