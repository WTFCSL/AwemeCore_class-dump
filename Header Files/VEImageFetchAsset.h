//
//     Generated by private class-dump
//

@class NSArray, NSString;
@protocol VEImageFetchAssetDelegate;

@interface VEImageFetchAsset : NSObject <VEFetchAssetProtocol> {
    id<VEImageFetchAssetDelegate> _delegate;
    NSArray *_images;
    long long _totalDuration;
    long long _fps;
    struct __CVBuffer **_pixelCache;
    struct CGSize { double width; double height; } _previewBounds;
}

@property (nonatomic) struct __CVBuffer **pixelCache;
@property (weak, nonatomic) id<VEImageFetchAssetDelegate> delegate;
@property (readonly, nonatomic) struct CGSize { double width; double height; } previewBounds;
@property (retain, nonatomic, setter=updateImages:) NSArray *images;
@property (readonly, nonatomic) long long totalDuration;
@property (nonatomic) long long fps;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (struct __CVBuffer { } *)fetchImageWithBound:(struct CGSize { double x0; double x1; })arg0 pts:(double)arg1;
- (struct __CVBuffer **)pixelCache;
- (void)setPixelCache:(struct __CVBuffer **)arg0;
- (void)asynFetchImageWithBound:(struct CGSize { double x0; double x1; })arg0 pts:(double)arg1 effectPts:(double)arg2 completeBlock:(id /* block */)arg3;
- (id)initWithImagesPreviewBoundSize:(struct CGSize { double x0; double x1; })arg0 images:(id)arg1 framerate:(long long)arg2;
- (struct __CVBuffer { } *)fetchPreviewImageWithPts:(double)arg0;
- (long long)totalDuration;
- (id)init;
- (id)images;
- (void).cxx_destruct;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (long long)fps;
- (void)dealloc;
- (void)setFps:(long long)arg0;
- (void)updateImages:(id)arg0;
- (struct CGSize { double x0; double x1; })previewBounds;

@end
