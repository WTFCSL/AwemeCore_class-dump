//
//     Generated by private class-dump
//

@class NSString, UIImageView, UIImage, UIView, IESEffectModel, AWEDualCameraTimerLabelAnimationView;
@protocol ACCRecordSwitchModeService, ACCRecordFlowControlService, ACCRecordPropService, ACCRecorderViewContainer, ACCRecordAuthService, ACCRecordUIHiddenStrategyService, ACCRecordDualService, ACCRecordTrackService, ACCRecordFlowService, ACCCameraService, ACCRecordButtonService;

@interface ACCFakeCameraVideoComponent : ACCFeatureComponent <ACCRecordButtonServiceSubscriber, ACCCameraControlEvent, ACCCameraLifeCircleEvent, AWEDualCameraTimerLabelAnimationViewDelegate, ACCRecordVideoEventHandler, ACCRecordFlowServiceSubscriber, ACCRecordFlowHandler> {
    BOOL _isAnimationFinish;
    BOOL _isRecordExport;
    BOOL _hasAddApplicationActiveNotification;
    BOOL _applicationActive;
    BOOL _enterNextPage;
    BOOL _markDevicePosition;
    BOOL _shouldCheckEffect;
    BOOL _fromDelayRecord;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCRecordButtonService> _recordButtonService;
    id<ACCRecordFlowControlService> _flowControlService;
    id<ACCRecordFlowService> _flowService;
    id<ACCCameraService> _cameraService;
    id<ACCRecordAuthService> _authService;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCRecordUIHiddenStrategyService> _hiddenStrategyService;
    id<ACCRecordPropService> _propService;
    id<ACCRecordDualService> _dualService;
    id<ACCRecordTrackService> _trackService;
    unsigned long long _taskModel;
    unsigned long long _takePictureStage;
    unsigned long long _recordStage;
    unsigned long long _markstage;
    UIImage *_minorImage;
    UIImage *_toBeUploadedImage;
    AWEDualCameraTimerLabelAnimationView *_loadingView;
    UIView *_minorBgView;
    UIImageView *_minorImageView;
    UIImageView *_majorImageView;
    IESEffectModel *_effect;
    double _cameraSwitchBeginTime;
}

@property (retain, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCRecordButtonService> recordButtonService;
@property (retain, nonatomic) id<ACCRecordFlowControlService> flowControlService;
@property (retain, nonatomic) id<ACCRecordFlowService> flowService;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (weak, nonatomic) id<ACCRecordAuthService> authService;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCRecordUIHiddenStrategyService> hiddenStrategyService;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (retain, nonatomic) id<ACCRecordDualService> dualService;
@property (retain, nonatomic) id<ACCRecordTrackService> trackService;
@property (nonatomic) unsigned long long taskModel;
@property (nonatomic) unsigned long long takePictureStage;
@property (nonatomic) unsigned long long recordStage;
@property (nonatomic) unsigned long long markstage;
@property (retain, nonatomic) UIImage *minorImage;
@property (retain, nonatomic) UIImage *toBeUploadedImage;
@property (retain, nonatomic) AWEDualCameraTimerLabelAnimationView *loadingView;
@property (retain, nonatomic) UIView *minorBgView;
@property (retain, nonatomic) UIImageView *minorImageView;
@property (retain, nonatomic) UIImageView *majorImageView;
@property (retain, nonatomic) IESEffectModel *effect;
@property (nonatomic) BOOL isAnimationFinish;
@property (nonatomic) BOOL isRecordExport;
@property (nonatomic) BOOL hasAddApplicationActiveNotification;
@property (nonatomic) BOOL applicationActive;
@property (nonatomic) BOOL enterNextPage;
@property (nonatomic) BOOL markDevicePosition;
@property (nonatomic) BOOL shouldCheckEffect;
@property (nonatomic) BOOL fromDelayRecord;
@property (nonatomic) double cameraSwitchBeginTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (unsigned long long)taskModel;
- (void)setTaskModel:(unsigned long long)arg0;
- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)componentDidUnmount;
- (unsigned long long)preferredLoadPhase;
- (void)componentWillAppear;
- (void)bindServices:(id)arg0;
- (void)addApplicationActiveNotification;
- (id)flowService;
- (id)switchModeService;
- (id)trackService;
- (void)removeApplicationActiveNotification;
- (BOOL)hasAddApplicationActiveNotification;
- (void)setHasAddApplicationActiveNotification:(BOOL)arg0;
- (void)animationDidEnd:(id)arg0;
- (void)flowServiceStateDidChanged:(unsigned long long)arg0 preState:(unsigned long long)arg1;
- (void)flowServiceDidMarkDuration:(double)arg0;
- (void)flowServiceDidTakePicture:(id)arg0 error:(id)arg1;
- (void)flowServiceWillEnterNextPageWithMode:(id)arg0;
- (void)flowServiceDidEnterNextPageWithMode:(id)arg0;
- (void)cameraService:(id)arg0 pauseRecordWithError:(id)arg1;
- (void)setFlowService:(id)arg0;
- (void)setTrackService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (void)cameraService:(id)arg0 didTakeAction:(long long)arg1 error:(id)arg2 data:(id)arg3;
- (id)authService;
- (void)setAuthService:(id)arg0;
- (void)p_reset;
- (id)flowControlService;
- (void)setFlowControlService:(id)arg0;
- (id)hiddenStrategyService;
- (void)setHiddenStrategyService:(id)arg0;
- (id)propService;
- (void)setPropService:(id)arg0;
- (id)toBeUploadedImage;
- (void)setToBeUploadedImage:(id)arg0;
- (id)recordVideoEvent;
- (void)completeRecordFlowWithSource:(id)arg0;
- (BOOL)canStartWithSource:(id)arg0;
- (void)startRecordFlowWithSource:(id)arg0;
- (void)stopRecordFlowWithSource:(id)arg0;
- (id)minorImage;
- (void)onDidSwitchToCameraPosition:(long long)arg0;
- (void)onDidStopVideoCapture:(BOOL)arg0;
- (id)dualService;
- (void)setDualService:(id)arg0;
- (id)minorBgView;
- (id)minorImageView;
- (void)setMinorBgView:(id)arg0;
- (void)setMinorImageView:(id)arg0;
- (id)recordButtonService;
- (void)setEnterNextPage:(BOOL)arg0;
- (BOOL)p_shouldHandleStartEvent;
- (unsigned long long)markstage;
- (unsigned long long)recordStage;
- (void)clearDraftData;
- (BOOL)markDevicePosition;
- (void)setMarkDevicePosition:(BOOL)arg0;
- (void)setShouldCheckEffect:(BOOL)arg0;
- (BOOL)shouldCheckEffect;
- (BOOL)enterNextPage;
- (void)p_resetRecordStage;
- (void)p_removeView;
- (void)setIsAnimationFinish:(BOOL)arg0;
- (void)setIsRecordExport:(BOOL)arg0;
- (void)setMinorImage:(id)arg0;
- (void)setFromDelayRecord:(BOOL)arg0;
- (id)majorImageView;
- (void)setMajorImageView:(id)arg0;
- (void)setTakePictureStage:(unsigned long long)arg0;
- (void)setRecordStage:(unsigned long long)arg0;
- (void)setMarkstage:(unsigned long long)arg0;
- (void)p_initStatus;
- (void)p_takePicture;
- (BOOL)fromDelayRecord;
- (unsigned long long)takePictureStage;
- (void)p_startRecord;
- (void)p_pauseRecord;
- (void)p_stopRecord;
- (void)setCameraSwitchBeginTime:(double)arg0;
- (void)p_setuploadingView;
- (void)p_secondTakePicture;
- (void)doNextTask;
- (void)p_setupMinorImageView:(id)arg0;
- (void)p_setupMajorImageView:(id)arg0;
- (BOOL)isRecordExport;
- (void)p_enterNextPage;
- (void)p_doAnimation:(id /* block */)arg0;
- (void)p_switchCameraPositionWithImage:(id)arg0;
- (BOOL)isAnimationFinish;
- (void)p_stopRecordFlow;
- (double)cameraSwitchBeginTime;
- (void)p_startRecordFlow:(BOOL)arg0;
- (void)startRecordButtonEventWithType:(long long)arg0;
- (void)stopRecordButtonEvent;
- (void)startRecordFromCountdown;
- (void)startRecordFromVolumnButton;
- (void)stopRecordFromVolumnButton;
- (void)setRecordButtonService:(id)arg0;
- (void)applicationWillResignActive:(id)arg0;
- (id)effect;
- (void)setApplicationActive:(BOOL)arg0;
- (void).cxx_destruct;
- (void)setEffect:(id)arg0;
- (void)applicationDidBecomeActive:(id)arg0;
- (id)loadingView;
- (void)setLoadingView:(id)arg0;
- (BOOL)applicationActive;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;

@end
