//
//     Generated by private class-dump
//

@class AWEAwemeModel, NSString, NSSet, RTVFeedSharePauseView, AWERTVFeedImpressionTracker, AWERTVFeedCastVideoPanelController, NSMutableArray, UIViewController, RxDeferred;
@protocol RTVFeedSharePlayerProviderInterface, RTVStateMachineInterface, AWERTVFeedContentControllers, AWERTVLongVideoHistoryControllerProtocol, RTVParticipantsObserveController, RTVFeedVolumeSettingController, RTVFeedQosMonitorInterface, RTVFeedRequestSyncCommandControllerInterface, RTVUserProfileManagerInterface, RTVXRControllerInjector, RTVStorageArea, RTVFeedSharePIPControllerProtocol, RTVRoomDistributionGuidePresenterInterface, AFDPlayRemoteFeedContainerViewControllerProtocol, RxInjector, RTVInteractionSendMessageActionControllerInterface, RTVSettingsManager;

@interface AWERTVFeedContentViewController : RTVFeedContentViewController <AWERTVFeedCastVideoPanelControllerDelegate, AFDPlayRemotePlayerInteractionMessage, AFDPlayRemoteFeedContainerViewControllerDelegate, RTVXRRoomSessionControllerObserver, AFDPlayRemoteFeedContainerViewControllerObserver, AWERTVFeedContentLayoutController, AWERTVFeedShareContentCellOperator, RTVInteractionControlViewControllerObserver, RTVStateMachineDelegate, AWERTVFeedContentViewControllerViewDelegate, RTVInteractionMessageListViewControllerDelegate, RTVParticipantsObserveControllerListener> {
    struct unique_ptr<AFDEngineAudioWrapper, std::default_delete<AFDEngineAudioWrapper>> { struct __compressed_pair<AFDEngineAudioWrapper *, std::default_delete<AFDEngineAudioWrapper>> { struct AFDEngineAudioWrapper *__value_; } __ptr_; } _audioWrapper;
    BOOL _isLocalFeedActive;
    BOOL _isRemoteFeedActive;
    BOOL _isPlayPause;
    BOOL _isFirstApply;
    BOOL _hadPreloadFeed;
    BOOL _isShowingSlidingTip;
    BOOL _isLandscape;
    id<RxInjector> _injector;
    UIViewController<AFDPlayRemoteFeedContainerViewControllerProtocol> *_remotePlayViewController;
    AWERTVFeedCastVideoPanelController *_castVideoPanelController;
    id<RTVFeedVolumeSettingController> _volumeSettingController;
    id<RTVSettingsManager> _settingsManager;
    id<RTVUserProfileManagerInterface> _userProfileManager;
    id<RTVInteractionSendMessageActionControllerInterface> _sendMessageActionController;
    RTVFeedSharePauseView *_pauseView;
    id<AWERTVFeedContentControllers> _feedContentControllers;
    id<AWERTVLongVideoHistoryControllerProtocol> _longVideoHistoryController;
    NSString *_firstApplyIdentifier;
    NSSet *_preloadReceivedCMDSet;
    id<RTVFeedSharePlayerProviderInterface> _playerProvider;
    id<RTVFeedRequestSyncCommandControllerInterface> _commandRequester;
    RxDeferred *_roomInfoReadyDeferred;
    long long _pureMode;
    id<RTVStorageArea> _storageArea;
    AWEAwemeModel *_lastAwemeModel;
    AWERTVFeedImpressionTracker *_impressionTracker;
    id<RTVFeedSharePIPControllerProtocol> _pipController;
    id<RTVStateMachineInterface> _stateMachine;
    id<RTVFeedQosMonitorInterface> _qosMonitor;
    id<RTVRoomDistributionGuidePresenterInterface> _distributionGuidePresenter;
    id<RTVParticipantsObserveController> _participantsObserveController;
    NSMutableArray *_stateRecorderTokens;
    struct CGSize { double width; double height; } _contentSize;
}

@property (readonly, weak, nonatomic) id<RxInjector> injector;
@property (readonly, weak, nonatomic) id<RTVXRControllerInjector> controllerInjector;
@property (retain, nonatomic) UIViewController<AFDPlayRemoteFeedContainerViewControllerProtocol> *remotePlayViewController;
@property (readonly, nonatomic) AWERTVFeedCastVideoPanelController *castVideoPanelController;
@property (weak, nonatomic) id<RTVFeedVolumeSettingController> volumeSettingController;
@property (readonly, nonatomic) id<RTVSettingsManager> settingsManager;
@property (readonly, nonatomic) id<RTVUserProfileManagerInterface> userProfileManager;
@property (readonly, nonatomic) id<RTVInteractionSendMessageActionControllerInterface> sendMessageActionController;
@property (retain, nonatomic) RTVFeedSharePauseView *pauseView;
@property (readonly, nonatomic) id<AWERTVFeedContentControllers> feedContentControllers;
@property (retain, nonatomic) id<AWERTVLongVideoHistoryControllerProtocol> longVideoHistoryController;
@property (nonatomic) BOOL isLocalFeedActive;
@property (nonatomic) BOOL isRemoteFeedActive;
@property (nonatomic) BOOL isPlayPause;
@property (nonatomic) BOOL isFirstApply;
@property (copy, nonatomic) NSString *firstApplyIdentifier;
@property (readonly, nonatomic) BOOL hadPreloadFeed;
@property (readonly, copy, nonatomic) NSSet *preloadReceivedCMDSet;
@property (readonly, weak, nonatomic) id<RTVFeedSharePlayerProviderInterface> playerProvider;
@property (readonly, weak, nonatomic) id<RTVFeedRequestSyncCommandControllerInterface> commandRequester;
@property (retain, nonatomic) RxDeferred *roomInfoReadyDeferred;
@property (nonatomic) long long pureMode;
@property (readonly, nonatomic) id<RTVStorageArea> storageArea;
@property (retain, nonatomic) AWEAwemeModel *lastAwemeModel;
@property (readonly, nonatomic) AWERTVFeedImpressionTracker *impressionTracker;
@property (retain, nonatomic) id<RTVFeedSharePIPControllerProtocol> pipController;
@property (readonly, nonatomic) id<RTVStateMachineInterface> stateMachine;
@property (readonly, nonatomic) id<RTVFeedQosMonitorInterface> qosMonitor;
@property (readonly, nonatomic) id<RTVRoomDistributionGuidePresenterInterface> distributionGuidePresenter;
@property (nonatomic) BOOL isShowingSlidingTip;
@property (readonly, weak, nonatomic) id<RTVParticipantsObserveController> participantsObserveController;
@property (nonatomic) struct CGSize { double width; double height; } contentSize;
@property (nonatomic) BOOL isLandscape;
@property (readonly, nonatomic) NSMutableArray *stateRecorderTokens;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (Class)aAWEPadRTVAdapterClass;

- (void)pauseWithAnimation;
- (void)playWithAnimation;
- (void)setPureMode:(long long)arg0;
- (id)currentAwemeModel;
- (void)rtv_awakeFromControllerInjector;
- (void)didOccurredInteractionVideoPausedWithAwemeModel:(id)arg0;
- (void)didOccurredInteractionVideoPlayWithAwemeModel:(id)arg0;
- (void)didOccurEnterLandscapeActionWithAwemeModel:(id)arg0;
- (id)userProfileManager;
- (long long)pureMode;
- (void)playerIsPaused;
- (void)__addObservers;
- (BOOL)isPause;
- (void)__createComponents;
- (id)playerProvider;
- (void)updateContentSize:(struct CGSize { double x0; double x1; })arg0;
- (void)__configComponents;
- (long long)currentAwemeType;
- (long long)feedShareRoomFeatureType;
- (id)storageArea;
- (void)pinQosMonitorType:(unsigned long long)arg0 userInfo:(id)arg1;
- (long long)getSynchronousTime;
- (BOOL)queryFeedSharePIPIsActive;
- (void)logFeedShareInfo:(id)arg0;
- (void)upDataLog:(id)arg0 WithContent:(id)arg1 WithExtra:(id)arg2;
- (BOOL)willChangeToLayoutType:(unsigned long long)arg0;
- (void)updateCurrentPlayItemProgress:(double)arg0 totalTime:(double)arg1;
- (void)willStartNextLoop;
- (void)videoBeginPlayWithModel:(id)arg0;
- (void)playerStartPlay;
- (BOOL)isEnableGuestSliding;
- (BOOL)isEnableHostSliding;
- (BOOL)isEnableShowSwipeUpGuide;
- (BOOL)queryRTVSafeSettingBoolValueForKey:(id)arg0 defaultValue:(BOOL)arg1;
- (id)customWatchTypeForFeed;
- (void)updateHost:(BOOL)arg0 dataController:(id)arg1 currentID:(id)arg2 targetFeedID:(id)arg3 feedType:(long long)arg4 infoDict:(id)arg5 completion:(id /* block */)arg6;
- (void)canEnterLiveRoom:(id)arg0 callback:(id /* block */)arg1;
- (void)__log:(id)arg0;
- (id)rtvFeedContentControllers;
- (id)transitionToInterfaceOrientations:(BOOL)arg0;
- (BOOL)currentInterfaceOrientationLayoutIsPortait;
- (void)hidePauseView:(BOOL)arg0;
- (void)pauseWithIcon:(BOOL)arg0;
- (void)playRemoteFeedContaienrViewController:(id)arg0 didInvokeWithRoomBizInfo:(id)arg1;
- (BOOL)isSupportScrollForFeedType:(long long)arg0;
- (void)updateIsPause:(BOOL)arg0;
- (void)enablePureMode:(long long)arg0;
- (void)feedContainer:(id)arg0 didScrollToAweme:(id)arg1;
- (void)playRemoteFeedContaienrViewControllerFailToSliding:(id)arg0;
- (void)playRemoteFeedContaienrViewControllerDidSwipeToRight:(id)arg0;
- (unsigned long long)currentVideoLayoutType;
- (void)notifyDidChangeActive:(BOOL)arg0;
- (void)notifyChangeToNarrow:(BOOL)arg0;
- (void)notifyDidChangeToNarrow:(BOOL)arg0;
- (void)dismissContentController;
- (BOOL)isWillShowFeedGuide;
- (void)changeToNarrowView;
- (void)viewSizeDidChangeAfterSizeTransition;
- (void)onInteractionControlViewShareButtonClicked;
- (id)aAWEPadRTVAdapter;
- (BOOL)shouldCastFeedType:(long long)arg0;
- (BOOL)shouldCastSearchType:(long long)arg0;
- (void)insertAndScrollToAwemeModel:(id)arg0;
- (id)feedContentControllers;
- (id)currentTopViewController;
- (id)qosMonitor;
- (void)__bindStateRecorder;
- (id)roomInfoReadyDeferred;
- (id)participantsObserveController;
- (id)stateRecorderTokens;
- (void)setIsLocalFeedActive:(BOOL)arg0;
- (void)setIsRemoteFeedActive:(BOOL)arg0;
- (void)__updatePureMode;
- (void)__updateMultiSpeedEnable;
- (void)renderSession:(id)arg0;
- (id)remotePlayViewController;
- (void)setFirstApplyIdentifier:(id)arg0;
- (void)setIsFirstApply:(BOOL)arg0;
- (id)__remotePlayViewControllerInfoDictionary:(id)arg0;
- (id)castVideoPanelController;
- (BOOL)isLocalFeedActive;
- (id)longVideoHistoryController;
- (BOOL)isFirstApply;
- (id)firstApplyIdentifier;
- (unsigned char)__canTrackCoPlayInvite;
- (void)setRoomInfoReadyDeferred:(id)arg0;
- (void)__createCastVideoPanelService;
- (void)__createRemotePlayViewController;
- (void)__createPauseView;
- (void)__createVolumeSettingController;
- (BOOL)hadPreloadFeed;
- (id)commandRequester;
- (BOOL)isSelfSharing;
- (id)preloadReceivedCMDSet;
- (BOOL)__isUseNewReceiveMessageMethod;
- (BOOL)isRemoteFeedActive;
- (id)sendMessageActionController;
- (void)__destoryPIP;
- (id)__currentAwemeModel;
- (id)impressionTracker;
- (id)__applyHostWithNeedRetainCurrentAweme:(BOOL)arg0;
- (void)resumePushAudioMixingStream;
- (id)__currentAwemeMediaTypeString;
- (BOOL)isEnableAutoPlayNext;
- (void)openFeedSharePanel:(id)arg0 hasHotTip:(BOOL)arg1;
- (void)pausePushAudioMixingStream:(BOOL)arg0;
- (BOOL)__isSupportMultiSpeed;
- (long long)__rtvAwemeType:(long long)arg0;
- (long long)__playRemoteFeedType:(long long)arg0;
- (id)volumeSettingController;
- (BOOL)isPlayPause;
- (void)setIsPlayPause:(BOOL)arg0;
- (unsigned long long)__feedShareFeedType:(long long)arg0;
- (void)__backToFeedButtonTap;
- (void)autoPlayNextVideoIfNeeded;
- (id)lastAwemeModel;
- (void)setLastAwemeModel:(id)arg0;
- (void)__showCastTipsIfNeeded;
- (BOOL)isShowingSlidingTip;
- (void)setIsShowingSlidingTip:(BOOL)arg0;
- (id)distributionGuidePresenter;
- (long long)__currentAwemeMediaType;
- (void)feedController:(id)arg0 didChangeToShareModel:(id)arg1;
- (void)interactionControlViewController:(id)arg0 actionTypeTriggered:(unsigned long long)arg1;
- (void)quitFeedContentController;
- (void)rtvSession:(id)arg0 participatorsDidChange:(id)arg1 oldParticipators:(id)arg2;
- (void)voipSessionVoipInfoPrepareReady:(id)arg0;
- (void)voipSession:(id)arg0 newParticipantJoined:(BOOL)arg1;
- (void)stateMachine:(id)arg0 didTransferFrom:(id)arg1 to:(id)arg2 context:(id)arg3;
- (void)updateContentSizeForPiPUpdate:(struct CGSize { double x0; double x1; })arg0;
- (void)interactionMessageListViewController:(id)arg0 willSendMessage:(id)arg1;
- (void)participantsObserveController:(id)arg0 didChangeMultiSpeedFeatureValueFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)feedSession:(id)arg0 didReceiveCommand:(id)arg1;
- (void)feedSession:(id)arg0 shareWillFinishWithReason:(long long)arg1;
- (id)feedSessionTryToShareFeed:(id)arg0;
- (void)insertHotFeedWithModel:(id)arg0;
- (void)showHalfIMPanelOfUserID:(id)arg0;
- (void)enableMiniContainer:(BOOL)arg0;
- (void)__routeToConversationOfType:(unsigned long long)arg0 convID:(id)arg1 anotherUserID:(id)arg2 floatMode:(BOOL)arg3 needRoute:(BOOL)arg4;
- (void)handleBusinessSessionAction:(id)arg0;
- (void)setRemotePlayViewController:(id)arg0;
- (void)setVolumeSettingController:(id)arg0;
- (void)setLongVideoHistoryController:(id)arg0;
- (id)pipController;
- (struct CGSize { double x0; double x1; })contentSize;
- (double)currentPlaybackTime;
- (double)totalTime;
- (void)resume;
- (void)viewDidAppear:(BOOL)arg0;
- (id)stateMachine;
- (void).cxx_destruct;
- (float)volume;
- (void)setContentSize:(struct CGSize { double x0; double x1; })arg0;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })arg0 withTransitionCoordinator:(id)arg1;
- (void)setPipController:(id)arg0;
- (id)observers;
- (void)setIsLandscape:(BOOL)arg0;
- (id)injector;
- (struct CGSize { double x0; double x1; })currentContentSize;
- (BOOL)isLandscape;
- (double)videoDuration;
- (id)settingsManager;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (void)loadView;
- (id).cxx_construct;
- (long long)playState;
- (void)appDidBecomeActive;
- (id)pauseView;
- (void)setPauseView:(id)arg0;
- (void)playNext;
- (void)playLast;
- (void)appWillResignActive;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
