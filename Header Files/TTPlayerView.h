//
//     Generated by private class-dump
//

@class NSString, TTAVPlayer, UIView, TTPlayerViewExtraViews, APOutputView;
@protocol TTPlayerViewDelegate, AVViewBackgroundProtocol, TTAVPlayerProtocol;

@interface TTPlayerView : UIView <TTPlayerViewProtocol> {
    TTAVPlayer *_ttavplayer;
    struct RefPtr<com::ss::ttm::APWindow> { struct APWindow *mValue; } _window;
    UIView<AVViewBackgroundProtocol> *_view;
    APOutputView *_outputView;
    struct CGSize { double width; double height; } _previousValidVideoSize;
    struct CGSize { double width; double height; } _presetValidVideoSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cropAreaFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _normalizeCropArea;
    BOOL _preferSpdl4HDR;
    BOOL _handleBackgroundInAvView;
    BOOL _performBackgroundProtocol;
    BOOL _playerViewHasSet;
    BOOL _useNormalizeCropArea;
    BOOL _dynMtTexSize;
    BOOL _shouldLogMore;
    BOOL _moveViewOpToMain;
    int _curVideoRotation;
    long long _specialFunType;
    TTPlayerViewExtraViews *_extraView;
    BOOL _memoryOptimizeEnabled;
    BOOL _supportPictureInPictureMode;
    id<TTAVPlayerProtocol> _player;
    long long _alignMode;
    double _alignRatio;
    long long _scaleType;
    long long _renderType;
    long long _lastRenderType;
    long long _rotateType;
    long long _innerViewRotateType;
    id<TTPlayerViewDelegate> _playerViewDelegate;
}

@property (retain, nonatomic) id<TTAVPlayerProtocol> player;
@property (nonatomic) long long alignMode;
@property (nonatomic) double alignRatio;
@property (nonatomic) long long scaleType;
@property (nonatomic) long long renderType;
@property (nonatomic) long long lastRenderType;
@property (nonatomic) long long rotateType;
@property (nonatomic) long long innerViewRotateType;
@property (nonatomic) BOOL memoryOptimizeEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropAreaFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizeCropArea;
@property (nonatomic) BOOL useNormalizeCropArea;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic, getter=isSupportPictureInPictureMode) BOOL supportPictureInPictureMode;
@property (weak, nonatomic) id<TTPlayerViewDelegate> playerViewDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)playerViewWithPlayer:(id)arg0 type:(long long)arg1;
+ (id)playerViewWithPlayer:(id)arg0;
+ (id)playerViewWithPlayer:(id)arg0 type:(long long)arg1 specialFunctionType:(long long)arg2;

- (void)setRenderRotation:(int)arg0;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (long long)rotateType;
- (void)setRotateType:(long long)arg0;
- (long long)renderType;
- (void)setOptionForKey:(long long)arg0 value:(id)arg1;
- (long long)alignMode;
- (void)setAlignMode:(long long)arg0;
- (void)setRenderPaused:(BOOL)arg0;
- (void)releaseWindow;
- (id)playerViewDelegate;
- (void)setPlayerViewDelegate:(id)arg0;
- (void)setPlayerViewSpecialFunctionType:(long long)arg0;
- (void)updateVideoFrame;
- (void)createNewWindow:(long long)arg0;
- (void)createOSView:(long long)arg0;
- (void)checkPictureInPictureMode;
- (void)_updateVideoFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropAreaFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })normalizeCropArea;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scaledRectFrom:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 ratio:(double)arg1 scaleType:(long long)arg2;
- (void)updateForAlignMode:(long long)arg0;
- (void)setCropAreaFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setNormalizeCropArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)OpenGLActivityIsActive;
- (BOOL)isSupportPictureInPictureMode;
- (BOOL)internalPlayerShouldStillKeepRunningGPUWhenInBackground;
- (void)configInternalPlayerShouldStillKeepRunningGPUWhenInBackgroundWithValue:(BOOL)arg0;
- (void)activateAVView;
- (void)releaseContents;
- (id)getExtraViewForViewType:(long long)arg0;
- (BOOL)needRemoveView:(id)arg0;
- (double)alignRatio;
- (void)setAlignRatio:(double)arg0;
- (long long)lastRenderType;
- (void)setLastRenderType:(long long)arg0;
- (BOOL)memoryOptimizeEnabled;
- (void)setMemoryOptimizeEnabled:(BOOL)arg0;
- (BOOL)useNormalizeCropArea;
- (void)setUseNormalizeCropArea:(BOOL)arg0;
- (void)resetWhenGivebackToPool;
- (void)refreshParamWhenReuseFromPool;
- (void)setPresetViewSize:(id)arg0;
- (void)setVideoWindowInPresetView;
- (void)setInnerViewRotateType:(long long)arg0;
- (void)updateRenderType:(long long)arg0;
- (long long)toPlayerViewRenderType:(int)arg0;
- (double)getOSViewWidth;
- (double)getOSViewHeight;
- (int)getScaleType;
- (long long)innerViewRotateType;
- (void)applicationWillResignActive:(id)arg0;
- (void).cxx_destruct;
- (void)didMoveToSuperview;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setPlayer:(id)arg0;
- (void)applicationDidEnterBackground:(id)arg0;
- (void)applicationDidBecomeActive:(id)arg0;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)dealloc;
- (void)setPlayerView:(id)arg0;
- (void)setRenderType:(long long)arg0;
- (id).cxx_construct;
- (id)player;
- (void)setColorPrimaries:(int)arg0;
- (long long)scaleType;
- (void)setScaleType:(long long)arg0;

@end
