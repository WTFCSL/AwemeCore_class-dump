//
//     Generated by private class-dump
//

@interface IESSegmentedItemLayoutInfo : NSObject {
    double _horizontalMargin;
    double _titleImageSpacing;
    double _fixedWidth;
    double _itemMinWidth;
    unsigned long long _imagePosition;
    double _itemWidth;
    double _contentWidth;
    double _originX;
    unsigned long long _contentOptions;
    struct CGSize { double width; double height; } _imageSize;
    struct CGSize { double width; double height; } _textSize;
    struct CGSize { double width; double height; } _selectedTextSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _imageFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _labelFrame;
}

@property (nonatomic) double itemWidth;
@property (nonatomic) double contentWidth;
@property (nonatomic) double originX;
@property (nonatomic) struct CGSize { double width; double height; } textSize;
@property (nonatomic) struct CGSize { double width; double height; } selectedTextSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } imageFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } labelFrame;
@property (nonatomic) unsigned long long contentOptions;
@property (nonatomic) double horizontalMargin;
@property (nonatomic) double titleImageSpacing;
@property (nonatomic) struct CGSize { double width; double height; } imageSize;
@property (nonatomic) double fixedWidth;
@property (nonatomic) double itemMinWidth;
@property (nonatomic) unsigned long long imagePosition;

+ (id)defaultConfig;

- (struct CGSize { double x0; double x1; })selectedTextSize;
- (void)calculateItemLayout:(struct CGSize { double x0; double x1; })arg0 widthStyle:(long long)arg1 itemsCount:(unsigned long long)arg2 textSize:(struct CGSize { double x0; double x1; })arg3;
- (void)setTitleImageSpacing:(double)arg0;
- (double)titleImageSpacing;
- (double)itemMinWidth;
- (void)calculateContentFrame:(struct CGSize { double x0; double x1; })arg0 width:(double)arg1 widthStyle:(long long)arg2 textSize:(struct CGSize { double x0; double x1; })arg3;
- (void)setItemMinWidth:(double)arg0;
- (void)setSelectedTextSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setContentOptions:(unsigned long long)arg0;
- (struct CGSize { double x0; double x1; })imageSize;
- (double)contentWidth;
- (unsigned long long)contentOptions;
- (void)setItemWidth:(double)arg0;
- (void)setContentWidth:(double)arg0;
- (double)itemWidth;
- (void)setImageSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })textSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })labelFrame;
- (double)horizontalMargin;
- (void)setHorizontalMargin:(double)arg0;
- (void)setFixedWidth:(double)arg0;
- (double)fixedWidth;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageFrame;
- (void)setImageFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setLabelFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setOriginX:(double)arg0;
- (double)originX;
- (void)setImagePosition:(unsigned long long)arg0;
- (unsigned long long)imagePosition;
- (void)setTextSize:(struct CGSize { double x0; double x1; })arg0;

@end
