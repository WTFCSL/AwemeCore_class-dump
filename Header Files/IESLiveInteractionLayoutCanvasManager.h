//
//     Generated by private class-dump
//

@class NSMapTable, IESLiveInteractionLayoutCanvasView, IESLiveInteractionLayout, IESLiveBigPartyCameraPreviewViewWrapper, UIButton, UIView, NSString, IESLiveInteractionGuestPreviewView, NSHashTable, IESLiveAudioBackgroundViewModel, IESLiveAudioBackgroundView, NSNumber, IESLiveInteractionLayoutCanvasViewModel;
@protocol IESLiveInteractionLayoutCanvasManagerDataSource;

@interface IESLiveInteractionLayoutCanvasManager : NSObject <IESLiveLinkmicSessionViewProvider, IESLiveAutoRotateAction, IESLiveRoomThemeActions, IESLiveLinkmicPreloadPushActions, IESLiveInteractionSingleViewOptimizationDelegate, IESLiveInteractionSingleViewOptimizationCropRegionCalculator, HTSLiveStreamPlayerAction, IESLiveInteractHorizontalAudienceRotationAction, IESLiveInteractionLayoutCanvasFactory> {
    BOOL _isAnchor;
    BOOL _videoEnable;
    BOOL _isDestructing;
    BOOL _isPreloadBgWaiting;
    id<IESLiveInteractionLayoutCanvasManagerDataSource> _dataSource;
    IESLiveInteractionLayout *_layout;
    IESLiveInteractionLayoutCanvasView *_canvasView;
    IESLiveInteractionLayoutCanvasViewModel *_canvasViewModel;
    NSMapTable *_linkMicIDToRTCView;
    NSHashTable *_sessionTable;
    IESLiveBigPartyCameraPreviewViewWrapper *_cameraPreviewWrapper;
    IESLiveInteractionGuestPreviewView *_audienceCameraPreviewView;
    IESLiveInteractionGuestPreviewView *_audienceCameraPreviewResumeFromOthers;
    UIView *_audienceCameraContainer;
    UIButton *_singleViewHint;
    UIButton *_singleViewSwitchBtn;
    IESLiveAudioBackgroundView *_bgView;
    IESLiveAudioBackgroundViewModel *_bgViewModel;
    NSNumber *_preRoomID;
}

@property (retain, nonatomic) IESLiveInteractionLayout *layout;
@property (retain, nonatomic) IESLiveInteractionLayoutCanvasView *canvasView;
@property (retain, nonatomic) IESLiveInteractionLayoutCanvasViewModel *canvasViewModel;
@property (retain, nonatomic) NSMapTable *linkMicIDToRTCView;
@property (retain, nonatomic) NSHashTable *sessionTable;
@property (retain, nonatomic) IESLiveBigPartyCameraPreviewViewWrapper *cameraPreviewWrapper;
@property (retain, nonatomic) IESLiveInteractionGuestPreviewView *audienceCameraPreviewView;
@property (retain, nonatomic) IESLiveInteractionGuestPreviewView *audienceCameraPreviewResumeFromOthers;
@property (weak, nonatomic) UIView *audienceCameraContainer;
@property (retain, nonatomic) UIButton *singleViewHint;
@property (retain, nonatomic) UIButton *singleViewSwitchBtn;
@property (retain, nonatomic) IESLiveAudioBackgroundView *bgView;
@property (retain, nonatomic) IESLiveAudioBackgroundViewModel *bgViewModel;
@property (nonatomic) BOOL isPreloadBgWaiting;
@property (retain, nonatomic) NSNumber *preRoomID;
@property (weak, nonatomic) id<IESLiveInteractionLayoutCanvasManagerDataSource> dataSource;
@property (nonatomic) BOOL isAnchor;
@property (nonatomic) BOOL videoEnable;
@property (nonatomic) BOOL isDestructing;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)roomModel;
- (void)setIsAnchor:(BOOL)arg0;
- (void)didSetAttachingDIContext;
- (id)cameraPreview;
- (void)updateRoomThemeDataWithType:(long long)arg0;
- (void)playerMediaSizeDidChange:(struct CGSize { double x0; double x1; })arg0;
- (void)animationForAutoRotateToOrientation:(long long)arg0 duration:(double)arg1 size:(struct CGSize { double x0; double x1; })arg2;
- (void)orientationTransitionEnd:(long long)arg0;
- (void)onPreloadBgViewSuccessWithBgView:(id)arg0 viewModel:(id)arg1;
- (id)bgViewModel;
- (void)setBgViewModel:(id)arg0;
- (id)singleViewHint;
- (void)setSingleViewHint:(id)arg0;
- (id)singleViewSwitchBtn;
- (void)setSingleViewSwitchBtn:(id)arg0;
- (void)calculateSingleViewOptimizationCropRegionForUILayout:(long long)arg0 completion:(id /* block */)arg1;
- (void)p_switchMixType;
- (void)p_showRenderArea;
- (id)sessionViewWithLinkmicId:(id)arg0;
- (id)linkMicIDToRTCView;
- (void)updateCameraPreview;
- (id)canvasViewModel;
- (void)updateSessionViews;
- (void)updateWithLayout:(id)arg0;
- (void)setLinkMicIDToRTCView:(id)arg0;
- (void)setCanvasViewModel:(id)arg0;
- (void)pr_layoutPlayer;
- (void)setPreviewIsKilledByPKAudienceLinkmic:(BOOL)arg0;
- (void)cleanCameraPreview;
- (void)resumeCameraPreview:(id)arg0;
- (void)singleViewOptimizationDidEnableWithConfig:(id)arg0;
- (void)singleViewOptimizationDidDisableWithConfig:(id)arg0;
- (void)regenerateCameraPreview;
- (void)updateBackgroundViewWithCurrentLayout;
- (void)updateWithUserList:(id)arg0;
- (id)currentCanvasWithLayout:(id)arg0;
- (void)updateBackgroundViewWithLayout:(id)arg0;
- (void)p_addNewBackgroundImageIfNeeded;
- (void)setVideoEnable:(BOOL)arg0;
- (void)startWithPreStreamLayout:(id)arg0 userList:(id)arg1;
- (void)updateBackgroundViewWithRoomThemeData:(id)arg0;
- (void)intializeCameraPreviewIfNeeded;
- (void)adjustHostSessionWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)removeAllInteractSession;
- (void)setIsDestructing:(BOOL)arg0;
- (void)insertSession:(id)arg0 local:(BOOL)arg1 isAnchorSession:(BOOL)arg2;
- (void)removeSessionForUser:(id)arg0;
- (void)insertAnchorBackupSession:(id)arg0 withLinkmicID:(id)arg1 backupLinkmicID:(id)arg2;
- (void)updateWithCurrentLayoutWithCompletion:(id /* block */)arg0;
- (id)cameraPreviewWrapper;
- (id)sessionTable;
- (BOOL)videoEnable;
- (void)initialzieAnchorCameraPreviewIfNeeded;
- (BOOL)enableSingleViewOptimizationPreviewDebugInfo;
- (void)p_removePreviewFakeViewIfNeed:(id)arg0;
- (void)startLayout:(id)arg0;
- (void)updateSessionViewWithUserList:(id)arg0;
- (void)rebindSessionToCurrentLayout;
- (void)updatePublicScreenHeightWithCurrentLayout;
- (void)updateBgHiddenIfNeeded:(long long)arg0;
- (void)updateSingleViewWithLayout:(id)arg0;
- (void)insertRTCSessionView:(id)arg0 linkMicUserID:(id)arg1 isLocalPreview:(BOOL)arg2 preferredFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3;
- (void)p_addBackgroundViewToContainer;
- (void)p_addBgViewWithPreloadBgView:(id)arg0 preloadViewModel:(id)arg1 shouldWait:(BOOL)arg2;
- (BOOL)isPreloadBgWaiting;
- (void)setIsPreloadBgWaiting:(BOOL)arg0;
- (void)addAudienceCameraPreviewToContainer:(id)arg0;
- (void)insertSession:(id)arg0 linkmicID:(id)arg1 local:(BOOL)arg2 isAnchorSession:(BOOL)arg3;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })sessionViewPreferredFrameWithAnchor;
- (id)audienceCameraPreviewView;
- (void)setAudienceCameraPreviewView:(id)arg0;
- (id)audienceCameraPreviewResumeFromOthers;
- (void)setAudienceCameraPreviewResumeFromOthers:(id)arg0;
- (id)audienceCameraContainer;
- (void)setCameraPreviewWrapper:(id)arg0;
- (void)updateAnchorCameraPreview;
- (void)setAudienceCameraContainer:(id)arg0;
- (BOOL)isDestructing;
- (void)setSessionTable:(id)arg0;
- (id)preRoomID;
- (void)setPreRoomID:(id)arg0;
- (id)canvasView;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (id)currentBackgroundView;
- (void)setLayout:(id)arg0;
- (void).cxx_destruct;
- (BOOL)isAnchor;
- (id)layout;
- (id)bgView;
- (void)setBgView:(id)arg0;
- (void)setCanvasView:(id)arg0;
- (id)currentCanvas;
- (void)clean;
- (void)clearCanvas;

@end
