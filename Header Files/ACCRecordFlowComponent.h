//
//     Generated by private class-dump
//

@class ACCRecordMemoryControl, NSString, ACCFlowerRedpacketPropTipView, UIView, ACCGroupedPredicate, UIButton;
@protocol ACCCaptureButtonAnimationProtocol, ACCRecorderViewContainer, ACCRecordUIHiddenStrategyService, ACCScanService, ACCCameraService, ACCRecordAuthService, ACCRecordFlowService, ACCPropRankerService, ACCRecordPropService, ACCRecordFlowControlService, CKBeautyService, ACCTextLoadingViewProtcol, ACCRecordFlowConfigProtocol, ACCShootSourceService, ACCRecordSystemLivePhotoService, ACCRecordSwitchModeService, ACCVideoConfigProtocol, ACCRecordTrackService, ACCRecordButtonService;

@interface ACCRecordFlowComponent : ACCFeatureComponent <ACCRecorderEvent, ACCRecordPropServiceSubscriber, ACCRecorderViewContainerItemsHideShowObserver, ACCRouterServiceSubscriber, ACCCreativePathMessage, AWECaptureButtonAnimationViewDelegate, ACCRecordSwitchModeServiceSubscriber, ACCRecordConfigDurationHandler, ACCRecordFlowServiceSubscriber, ACCCameraLifeCircleEvent> {
    BOOL _isFirstAppear;
    BOOL _hasAddApplicationActiveNotification;
    BOOL _applicationActive;
    BOOL _shouldRemoveLastFragment;
    BOOL _isPreFetchPhotoToVideoMusicList;
    BOOL _isOnCameraDidStartRender;
    BOOL _enableTapToTakePhoto;
    BOOL _editPageDidDisappear;
    BOOL _willEnterNextPage;
    BOOL _isNeedUseMVMuisc;
    BOOL _hasTrackedPOIFirstFrame;
    UIButton *_recordButton;
    UIButton *_recordShowTipButton;
    UIView<ACCCaptureButtonAnimationProtocol> *_captureButtonAnimationView;
    ACCGroupedPredicate *_shouldShowCaptureAnimationView;
    UIView<ACCTextLoadingViewProtcol> *_indicatorView;
    id<ACCCameraService> _cameraService;
    id<ACCRecordFlowService> _flowService;
    id<ACCRecordFlowControlService> _flowControlService;
    id<ACCRecordTrackService> _trackService;
    id<ACCRecordFlowConfigProtocol> _flowConfig;
    id<ACCRecordPropService> _propService;
    id<CKBeautyService> _ckBeautyService;
    id<ACCRecordAuthService> _authService;
    id<ACCScanService> _scanService;
    id<ACCRecordTrackService> _recordTrackService;
    id<ACCRecordUIHiddenStrategyService> _hiddenStrategyService;
    id<ACCRecordButtonService> _buttonService;
    id<ACCShootSourceService> _shootSourceService;
    id<ACCRecordSystemLivePhotoService> _systemLivePhotoService;
    id<ACCPropRankerService> _propRankerService;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCVideoConfigProtocol> _videoConfig;
    ACCRecordMemoryControl *_memoryControl;
    unsigned long long _recordFlowProcess;
    ACCFlowerRedpacketPropTipView *_flowerRedpacketPropTipView;
    double _optDuration;
    long long _systemLivePhotoIsOpt;
}

@property (retain, nonatomic) UIButton *recordButton;
@property (retain, nonatomic) UIView<ACCCaptureButtonAnimationProtocol> *captureButtonAnimationView;
@property (retain, nonatomic) UIButton *recordShowTipButton;
@property (retain, nonatomic) UIView<ACCTextLoadingViewProtcol> *indicatorView;
@property (nonatomic) BOOL isFirstAppear;
@property (nonatomic) BOOL hasAddApplicationActiveNotification;
@property (nonatomic) BOOL applicationActive;
@property (nonatomic) BOOL shouldRemoveLastFragment;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (retain, nonatomic) id<ACCRecordFlowService> flowService;
@property (retain, nonatomic) id<ACCRecordFlowControlService> flowControlService;
@property (retain, nonatomic) id<ACCRecordTrackService> trackService;
@property (retain, nonatomic) id<ACCRecordFlowConfigProtocol> flowConfig;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (weak, nonatomic) id<CKBeautyService> ckBeautyService;
@property (retain, nonatomic) id<ACCRecordAuthService> authService;
@property (retain, nonatomic) id<ACCScanService> scanService;
@property (retain, nonatomic) id<ACCRecordTrackService> recordTrackService;
@property (retain, nonatomic) id<ACCRecordUIHiddenStrategyService> hiddenStrategyService;
@property (retain, nonatomic) id<ACCRecordButtonService> buttonService;
@property (retain, nonatomic) id<ACCShootSourceService> shootSourceService;
@property (retain, nonatomic) id<ACCRecordSystemLivePhotoService> systemLivePhotoService;
@property (weak, nonatomic) id<ACCPropRankerService> propRankerService;
@property (weak, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCVideoConfigProtocol> videoConfig;
@property (nonatomic) BOOL isPreFetchPhotoToVideoMusicList;
@property (nonatomic) BOOL isOnCameraDidStartRender;
@property (retain, nonatomic) ACCRecordMemoryControl *memoryControl;
@property (nonatomic) unsigned long long recordFlowProcess;
@property (nonatomic) BOOL enableTapToTakePhoto;
@property (nonatomic) BOOL editPageDidDisappear;
@property (nonatomic) BOOL willEnterNextPage;
@property (nonatomic) BOOL isNeedUseMVMuisc;
@property (nonatomic) BOOL hasTrackedPOIFirstFrame;
@property (retain, nonatomic) ACCFlowerRedpacketPropTipView *flowerRedpacketPropTipView;
@property (nonatomic) double optDuration;
@property (nonatomic) long long systemLivePhotoIsOpt;
@property (readonly, nonatomic) ACCGroupedPredicate *shouldShowCaptureAnimationView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)videoConfig;
- (void)setVideoConfig:(id)arg0;
- (void)updateItemsHiddenWithAnimation:(BOOL)arg0;
- (void)setIsFirstAppear:(BOOL)arg0;
- (void)bindViewModel;
- (void)pauseRecord;
- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)componentDidUnmount;
- (void)componentDidAppear;
- (unsigned long long)preferredLoadPhase;
- (void)componentWillAppear;
- (void)componentDidDisappear;
- (void)componentWillUnmount;
- (void)loadComponentView;
- (void)bindServices:(id)arg0;
- (void)addApplicationActiveNotification;
- (id)flowService;
- (id)captureButtonAnimationView;
- (id)captureAnimation;
- (id)switchModeService;
- (id)trackService;
- (id)recordShowTipButton;
- (void)updateRecordButtonWithCurrentDuration:(double)arg0;
- (void)updateStandardDurationIndicatorDisplay;
- (void)removeApplicationActiveNotification;
- (void)stopRecordButtonAnimation;
- (id)flowConfig;
- (BOOL)hasAddApplicationActiveNotification;
- (void)setHasAddApplicationActiveNotification:(BOOL)arg0;
- (void)startRecord:(id)arg0 delay:(BOOL)arg1;
- (void)showReachedDurationLimitToast;
- (void)stopRecordButtonAnimationWithIgnoreProgress:(BOOL)arg0;
- (void)p_completeImmediatlyWhenStopRecordIfNeeded;
- (void)updateProgressAndMarksDisplay;
- (void)pauseRecordAfter;
- (void)animationDidEnd:(id)arg0;
- (void)startRecord:(id)arg0;
- (void)trackError:(id)arg0 action:(id)arg1;
- (BOOL)shouldRemoveLastFragment;
- (void)setShouldRemoveLastFragment:(BOOL)arg0;
- (void)trackSuccessRateWithError:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })recordButtonFrame;
- (void)clickRecordTipButton:(id)arg0;
- (id)buildCaptureButton;
- (void)flowServiceStateDidChanged:(unsigned long long)arg0 preState:(unsigned long long)arg1;
- (void)flowServiceDidUpdateDuration:(double)arg0;
- (void)flowServiceDidMarkDuration:(double)arg0;
- (void)flowServiceDidRemoveLastSegment:(BOOL)arg0;
- (void)flowServiceWillAddPictureToVideo:(id)arg0;
- (void)flowServiceDidRemoveAllSegment;
- (void)flowServiceWillBeginTakePicture;
- (void)flowServiceDidTakePicture:(id)arg0 error:(id)arg1;
- (BOOL)flowServcieShouldStartRecord:(BOOL)arg0;
- (void)flowServiceWillEnterNextPageWithMode:(id)arg0;
- (void)shouldItemsShow:(BOOL)arg0 animated:(BOOL)arg1;
- (BOOL)animationShouldBegin:(id)arg0;
- (void)animationDidBegin:(id)arg0;
- (void)touchBeginWithAnimationDisabled:(id)arg0;
- (BOOL)shouldRespondsToAnimationDidEnd:(id)arg0;
- (BOOL)needBlockAnimationTouches:(id)arg0;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (double)getComponentDuration:(id)arg0;
- (void)didSetMaxDuration:(double)arg0;
- (BOOL)isTapAndHoldToRecordCase;
- (void)cameraService:(id)arg0 didRecordReadyWithError:(id)arg1;
- (void)cameraService:(id)arg0 startVideoCaptureWithError:(id)arg1;
- (void)cameraService:(id)arg0 stopVideoCaptureWithError:(id)arg1;
- (void)cameraService:(id)arg0 didChangeDuration:(double)arg1 totalDuration:(double)arg2;
- (void)onCreateCameraCompleteWithCamera:(id)arg0;
- (void)cameraService:(id)arg0 pauseRecordWithError:(id)arg1;
- (void)cameraService:(id)arg0 startRecordWithError:(id)arg1;
- (void)cameraService:(id)arg0 didReachMaxTimeVideoRecordWithError:(id)arg1;
- (void)onFinishExportVideoDataWithData:(id)arg0 error:(id)arg1;
- (void)setRecordShowTipButton:(id)arg0;
- (void)setCaptureButtonAnimationView:(id)arg0;
- (void)setFlowService:(id)arg0;
- (void)setTrackService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (void)setFlowConfig:(id)arg0;
- (void)onCameraFirstFrameDidRender:(id)arg0;
- (void)onCameraDidStartRender:(id)arg0;
- (id)authService;
- (void)setAuthService:(id)arg0;
- (id)flowControlService;
- (void)setFlowControlService:(id)arg0;
- (id)hiddenStrategyService;
- (void)setHiddenStrategyService:(id)arg0;
- (id)ckBeautyService;
- (void)setCkBeautyService:(id)arg0;
- (id)propService;
- (id)recordTrackService;
- (void)setPropService:(id)arg0;
- (void)setRecordTrackService:(id)arg0;
- (void)propServiceDidApplyProp:(id)arg0 success:(BOOL)arg1;
- (void)componentDidChangeStatusBarOrientation;
- (id)shootSourceService;
- (id)systemLivePhotoService;
- (BOOL)systemLivePhoto;
- (void)setShootSourceService:(id)arg0;
- (void)setSystemLivePhotoService:(id)arg0;
- (void)restoreRecordButtonState;
- (void)creativePathPageWillDisappear:(unsigned long long)arg0 controller:(id)arg1;
- (void)prepareForInfiniIfNeededImage:(id)arg0;
- (BOOL)hasTrackedPOIFirstFrame;
- (void)setHasTrackedPOIFirstFrame:(BOOL)arg0;
- (id)processedTargetVCInputDataFromData:(id)arg0;
- (void)preFetchPhotoToVideoMusicList;
- (void)setPropRankerService:(id)arg0;
- (id)propRankerService;
- (id)scanService;
- (BOOL)isModeStory;
- (void)setScanService:(id)arg0;
- (void)onCaptureStillImageWithImage:(id)arg0 error:(id)arg1;
- (void)onStartExportVideoDataWithData:(id)arg0;
- (id)buttonService;
- (void)setButtonService:(id)arg0;
- (void)showRecordButtonIfNeededWithAnimated:(BOOL)arg0;
- (long long)currentModeId;
- (id)lightningAnimation;
- (void)addRecordChangeObserver;
- (void)addMemoryControl;
- (void)setupAudioSessionAllowTapic;
- (void)p_showFlowerRedpacketPropTipIfNeed;
- (BOOL)editPageDidDisappear;
- (void)setWillEnterNextPage:(BOOL)arg0;
- (void)setRecordFlowProcess:(unsigned long long)arg0;
- (void)p_recordProcessCompleted;
- (void)prepareForInfiniIfNeeded;
- (BOOL)p_isPhotoModeAndTapPhotoHoldVideo;
- (void)p_showItemInCase;
- (void)enterNextPageBySystemLivePhoto:(id)arg0;
- (void)enterNextPageByQuickStoryPicture:(id)arg0;
- (void)setSystemLivePhotoIsOpt:(long long)arg0;
- (void)clearSystemLivePhotoData:(id /* block */)arg0;
- (void)trackSystemLivePhoto:(BOOL)arg0 errorType:(long long)arg1;
- (void)flowServiceDidSystemLivePhotoWithPicture:(id)arg0;
- (void)setOptDuration:(double)arg0;
- (double)optDuration;
- (long long)systemLivePhotoIsOpt;
- (void)storeSystemLivephotoFramesImages:(id)arg0;
- (void)setMemoryControl:(id)arg0;
- (id)memoryControl;
- (BOOL)enableTapToTakePhoto;
- (BOOL)isLiteRedPacketVideo;
- (BOOL)isLiteDiaryVideo;
- (void)liteRedPacketCancelRecord;
- (BOOL)shouldCompleteImmediatelyAfterStop;
- (BOOL)willEnterNextPage;
- (void)setIsOnCameraDidStartRender:(BOOL)arg0;
- (void)setIsNeedUseMVMuisc:(BOOL)arg0;
- (BOOL)isOnCameraDidStartRender;
- (BOOL)isNeedUseMVMuisc;
- (BOOL)isPreFetchPhotoToVideoMusicList;
- (void)setIsPreFetchPhotoToVideoMusicList:(BOOL)arg0;
- (unsigned long long)recordFlowProcess;
- (BOOL)p_currentFlowProcessIsTakePhoto;
- (void)setEditPageDidDisappear:(BOOL)arg0;
- (BOOL)p_needShowFlowerRedpacketPropTip;
- (id)flowerRedpacketPropTipView;
- (id)shouldShowCaptureAnimationView;
- (void)setEnableTapToTakePhoto:(BOOL)arg0;
- (void)setFlowerRedpacketPropTipView:(id)arg0;
- (void)applicationWillResignActive:(id)arg0;
- (void)setApplicationActive:(BOOL)arg0;
- (void).cxx_destruct;
- (void)close;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg0;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (id)indicatorView;
- (void)dealloc;
- (void)setIndicatorView:(id)arg0;
- (void)setupUI;
- (BOOL)isFirstAppear;
- (BOOL)applicationActive;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;
- (id)recordButton;
- (void)setRecordButton:(id)arg0;

@end
