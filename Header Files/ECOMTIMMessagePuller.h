//
//     Generated by private class-dump
//

@class ECOMTIMMulticastDelegate, ECOMTIMSimplePullerStatusObserver, NSDictionary, ECOMTIMGCDTimer, NSString, ECOMTIMPBResponseLongConnectionCallback;

@interface ECOMTIMMessagePuller : NSObject <ECOMTIMStartUpTaskProtocol, ECOMTIMHistoryMessagePullerProtocol, ECOMTIMPullerStatusObserver, ECOMTIMMessagePullerProtocol, ECOMTIMAckMessagesProtocol> {
    BOOL _checkingInbox;
    ECOMTIMPBResponseLongConnectionCallback *_longConnectCallback;
    NSDictionary *_inboxPullerGroups;
    ECOMTIMMulticastDelegate *_observerMulticast;
    ECOMTIMSimplePullerStatusObserver *_statusObserver;
    ECOMTIMGCDTimer *_pullTimer;
    long long _lastPullReason;
    ECOMTIMGCDTimer *_wsStatusTimer;
}

@property (retain, nonatomic) ECOMTIMPBResponseLongConnectionCallback *longConnectCallback;
@property (retain) NSDictionary *inboxPullerGroups;
@property (retain, nonatomic) ECOMTIMMulticastDelegate *observerMulticast;
@property (retain, nonatomic) ECOMTIMSimplePullerStatusObserver *statusObserver;
@property (retain, nonatomic) ECOMTIMGCDTimer *pullTimer;
@property BOOL checkingInbox;
@property long long lastPullReason;
@property (retain) ECOMTIMGCDTimer *wsStatusTimer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (long long)startUpOrder;
+ (id)sharedInstance;
+ (void)startUp;

- (void)setNeedPullMessageInInboxType:(int)arg0;
- (void)kickoffPullerInInboxType:(int)arg0;
- (BOOL)couldUseNewPullerRefactor:(id)arg0;
- (void)removeObserverWithIdentifier:(id)arg0;
- (id)addWeakChangesObserver:(id)arg0 onQueue:(id)arg1;
- (long long)currentStatusForInbox:(int)arg0;
- (void)userDidLogin:(id)arg0;
- (void)userDidLogout:(id)arg0;
- (void)appEnterForeground:(id)arg0;
- (void)tokenChanged:(id)arg0;
- (id)pullTimer;
- (void)setPullTimer:(id)arg0;
- (void)loadOlderMsgesRemedialyFromConversationId:(id)arg0 anchorMsgId:(id)arg1 msgesCount:(long long)arg2 priorityUseDB:(BOOL)arg3 forcePullRemote:(BOOL)arg4 currentMinIndexV2:(long long)arg5 currentMaxIndexV2:(long long)arg6 completionBlock:(id /* block */)arg7;
- (void)remoteLoadMessagesBetweenMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 direction:(unsigned long long)arg2 inConversation:(id)arg3 completionBlock:(id /* block */)arg4;
- (BOOL)checkContinousInRangeWithMinIndexV2:(long long)arg0 maxIndexV2:(long long)arg1 inConversation:(id)arg2 emptyRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg3 includeRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)arg4;
- (void)fetchAllMessagesFromConversationIdentifier:(id)arg0 minIndexV2:(long long)arg1 maxIndexV2:(long long)arg2 shouldCancelBlock:(id /* block */)arg3 completion:(id /* block */)arg4;
- (id)observerMulticast;
- (void)loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 visibleLimit:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadHistoryForConversation:(id)arg0 beforeMessage:(id)arg1 limit:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadHistoryForConversation:(id)arg0 beforeIndex:(long long)arg1 totalCount:(unsigned long long)arg2 completionBlock:(id /* block */)arg3;
- (void)loadMessagesForConversation:(id)arg0 anchorMessage:(id)arg1 visibleLimit:(unsigned long long)arg2 direction:(unsigned long long)arg3 shouldContainBoundaryMessage:(BOOL)arg4 completionBlock:(id /* block */)arg5;
- (BOOL)checkContinousInRangeWithMinIndexV1:(long long)arg0 maxIndexV1:(long long)arg1 inConversation:(id)arg2;
- (void)getMessagesCheckInfoInInbox:(int)arg0 conversationShortId:(long long)arg1 conversationId:(id)arg2 conversationType:(int)arg3 cursorReverseBegin:(long long)arg4 cursorReverseEnd:(long long)arg5 expectMsgTotalCount:(int)arg6 completionBlock:(id /* block */)arg7;
- (void)getMessageByMessageServerID:(long long)arg0 conversationShortID:(long long)arg1 completionBlock:(id /* block */)arg2;
- (void)fetchMessagesForConversation:(id)arg0 completionBlock:(id /* block */)arg1;
- (void)getMessagesWithIndexV2s:(id)arg0 Inbox:(int)arg1 conversationShortId:(long long)arg2 conversationId:(id)arg3 conversationType:(int)arg4 completionBlock:(id /* block */)arg5;
- (void)responseServerLongConnectACK:(id)arg0;
- (void)setLongConnectCallback:(id)arg0;
- (id)longConnectCallback;
- (void)setObserverMulticast:(id)arg0;
- (id)inboxPullerGroups;
- (void)setInboxPullerGroups:(id)arg0;
- (void)wsStateChangedToConnected:(id)arg0;
- (void)checkInboxStatusWithReason:(long long)arg0;
- (id)wsStatusTimer;
- (void)setWsStatusTimer:(id)arg0;
- (void)wsStatusTimerFired:(id)arg0;
- (id)_conversationFromDBWithID:(id)arg0;
- (BOOL)_checkIfHasConversation:(id)arg0;
- (void)setLastPullReason:(long long)arg0;
- (void)pullFired:(id)arg0;
- (BOOL)checkingInbox;
- (void)setCheckingInbox:(BOOL)arg0;
- (void)retryCheckInbox;
- (long long)lastPullReason;
- (void)batchAckMessagesLongConnectionWithArrPbMessage:(id)arg0 response:(id)arg1;
- (void)batchAckMessagesRequestWithReportType:(int)arg0 arrPbMessage:(id)arg1 response:(id)arg2;
- (void)batchAckMessagesShowWithArrDbMessage:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)startUp;
- (void)dealloc;
- (id)statusObserver;
- (void)setStatusObserver:(id)arg0;

@end
