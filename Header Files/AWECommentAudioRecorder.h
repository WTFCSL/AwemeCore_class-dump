//
//     Generated by private class-dump
//

@class NSObject, NSString, NSTimer, NSURL, NSDate, NSMutableArray, AVAudioRecorder;
@protocol OS_dispatch_queue, AWECommentAudioRecorderDelegate;

@interface AWECommentAudioRecorder : NSObject <AVAudioRecorderDelegate> {
    BOOL _resignActive;
    BOOL _hasCancelled;
    BOOL _hasDeleted;
    BOOL _overTimeRecordSuccess;
    BOOL _deleteFileAfterStopFlag;
    float _peakPower;
    float _averagePower;
    id<AWECommentAudioRecorderDelegate> _delegate;
    double _minSecond;
    double _limitSecond;
    double _thresholdSecondOfNotification;
    NSURL *_url;
    unsigned long long _status;
    NSMutableArray *_averagePowerArr;
    double _currentTime;
    double _lastNotifyTime;
    double _fireTime;
    NSString *_oldAudioSessionCategory;
    NSTimer *_updatePowerTimer;
    AVAudioRecorder *_recorder;
    NSMutableArray *_peakPowerArr;
    NSDate *_startRecordingDate;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (retain, nonatomic) NSString *oldAudioSessionCategory;
@property (retain, nonatomic) NSURL *url;
@property (retain, nonatomic) NSTimer *updatePowerTimer;
@property (retain, nonatomic) AVAudioRecorder *recorder;
@property (nonatomic) BOOL deleteFileAfterStopFlag;
@property (nonatomic) BOOL overTimeRecordSuccess;
@property (nonatomic) unsigned long long status;
@property (nonatomic) float peakPower;
@property (retain, nonatomic) NSMutableArray *peakPowerArr;
@property (nonatomic) float averagePower;
@property (retain, nonatomic) NSMutableArray *averagePowerArr;
@property (nonatomic) double currentTime;
@property (nonatomic) double lastNotifyTime;
@property (retain, nonatomic) NSDate *startRecordingDate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) id<AWECommentAudioRecorderDelegate> delegate;
@property (nonatomic) double minSecond;
@property (nonatomic) double limitSecond;
@property (nonatomic) double thresholdSecondOfNotification;
@property (nonatomic) BOOL resignActive;
@property (nonatomic) BOOL hasCancelled;
@property (nonatomic) BOOL hasDeleted;
@property (nonatomic) double fireTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)handleDidEnterBackgroundNotification:(id)arg0;
- (void)applicationWillResignActiveNoti:(id)arg0;
- (double)minSecond;
- (void)setMinSecond:(double)arg0;
- (void)setAveragePowerArr:(id)arg0;
- (id)averagePowerArr;
- (void)handleAudioSessionInterruptionNotification:(id)arg0;
- (void)setOverTimeRecordSuccess:(BOOL)arg0;
- (void)setLastNotifyTime:(double)arg0;
- (void)trackCommentAudioAbnormalCaseWithType:(id)arg0 errorCode:(long long)arg1 isActive:(BOOL)arg2;
- (void)setOldAudioSessionCategory:(id)arg0;
- (BOOL)setAudioCategory:(id)arg0 activeAudioSession:(BOOL)arg1;
- (void)audioRecorderDidStartWithError:(id)arg0;
- (void)updatePowerTimerFired:(id)arg0;
- (void)setUpdatePowerTimer:(id)arg0;
- (id)oldAudioSessionCategory;
- (double)p_getRecorderCurrentTime;
- (double)limitSecond;
- (id)updatePowerTimer;
- (void)setDeleteFileAfterStopFlag:(BOOL)arg0;
- (void)recorderDidStoppedWithResult:(BOOL)arg0 error:(id)arg1;
- (BOOL)deleteFileAfterStopFlag;
- (id)startRecordingDate;
- (id)peakPowerArr;
- (void)p_updateAveragePower:(double)arg0 peakPower:(double)arg1;
- (void)setAveragePower:(float)arg0;
- (void)setStartRecordingDate:(id)arg0;
- (double)thresholdSecondOfNotification;
- (double)lastNotifyTime;
- (void)setLimitSecond:(double)arg0;
- (void)setThresholdSecondOfNotification:(double)arg0;
- (BOOL)overTimeRecordSuccess;
- (void)setPeakPowerArr:(id)arg0;
- (void)setFireTime:(double)arg0;
- (double)fireTime;
- (void).cxx_destruct;
- (void)setCurrentTime:(double)arg0;
- (unsigned long long)status;
- (BOOL)resignActive;
- (id)recorder;
- (void)stop;
- (float)peakPower;
- (void)setUrl:(id)arg0;
- (id)initWithURL:(id)arg0;
- (void)record;
- (id)delegate;
- (float)averagePower;
- (void)setStatus:(unsigned long long)arg0;
- (void)cancel;
- (double)currentTime;
- (void)clear;
- (void)setRecorder:(id)arg0;
- (id)queue;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setQueue:(id)arg0;
- (id)url;
- (void)applicationProtectedDataWillBecomeUnavailable:(id)arg0;
- (void)setHasDeleted:(BOOL)arg0;
- (BOOL)hasDeleted;
- (void)setHasCancelled:(BOOL)arg0;
- (BOOL)hasCancelled;
- (void)audioRecorderDidFinishRecording:(id)arg0 successfully:(BOOL)arg1;
- (void)setResignActive:(BOOL)arg0;
- (void)setPeakPower:(float)arg0;
- (void)audioRecorderEncodeErrorDidOccur:(id)arg0 error:(id)arg1;

@end
