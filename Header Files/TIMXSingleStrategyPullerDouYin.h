//
//     Generated by private class-dump
//

@class NSString, TIMXSDKInstance, NSMutableArray, NSNumber;
@protocol TIMXKVStorageProtocol, TIMXCurrentUserCredentialProtocol, TIMXPullerStatusChangeObserverDelegate, TIMXMessageStoreProtocol;

@interface TIMXSingleStrategyPullerDouYin : NSObject <TIMXSingleStrategyPullerCommon> {
    BOOL _fullInitFinished;
    BOOL _cursorInited;
    BOOL _hasInitOver;
    BOOL _isVersionValid;
    BOOL _isRequesting;
    int _inbox;
    long long _userID;
    id<TIMXMessageStoreProtocol> _db;
    id<TIMXKVStorageProtocol> _kvStorage;
    long long _cmdMessageIndex;
    long long _conversationVersion;
    NSMutableArray *_pullVersionRangeList;
    long long _markReadVersion;
    NSNumber *_liveConsultVersion;
    id<TIMXCurrentUserCredentialProtocol> _userCredential;
    NSString *_logMarkerForInit;
    unsigned long long _pullerInitStatus;
    NSString *_pullerInitStatusKey;
    TIMXSDKInstance *_r;
    NSString *_kvCmdMessageIndexKey;
    NSString *_kvConversationVersionKey;
    NSString *_kvConversationVersionRangeKey;
    NSString *_kvMarkReadVersionKey;
    NSString *_kvLiveConsultVersionKey;
    id<TIMXPullerStatusChangeObserverDelegate> _notifier;
    long long _hasFetchedConvCounts;
    NSString *_kvCursorInitedKey;
    NSString *_kvLocationCursorKey;
    double _pullStartTime;
    unsigned long long _retryCount;
    double _netInitPullALLTime;
    double _dbInitPullALLTime;
    long long _netInitPullALLCount;
    long long _hasFetchedMsgCounts;
}

@property (nonatomic) long long userID;
@property (nonatomic) int inbox;
@property (retain, nonatomic) id<TIMXMessageStoreProtocol> db;
@property (retain, nonatomic) id<TIMXKVStorageProtocol> kvStorage;
@property (retain, nonatomic) id<TIMXCurrentUserCredentialProtocol> userCredential;
@property (retain, nonatomic) NSString *logMarkerForInit;
@property (nonatomic) BOOL fullInitFinished;
@property unsigned long long pullerInitStatus;
@property (copy, nonatomic) NSString *pullerInitStatusKey;
@property (copy, nonatomic) NSString *kvCmdMessageIndexKey;
@property (copy, nonatomic) NSString *kvConversationVersionKey;
@property (copy, nonatomic) NSString *kvConversationVersionRangeKey;
@property (copy, nonatomic) NSString *kvMarkReadVersionKey;
@property (copy, nonatomic) NSString *kvLiveConsultVersionKey;
@property (nonatomic) BOOL cursorInited;
@property (readonly, nonatomic) BOOL hasInitSuccess;
@property (nonatomic) BOOL hasInitOver;
@property (nonatomic) BOOL isVersionValid;
@property (retain, nonatomic) id<TIMXPullerStatusChangeObserverDelegate> notifier;
@property long long hasFetchedConvCounts;
@property (copy, nonatomic) NSString *kvCursorInitedKey;
@property (copy, nonatomic) NSString *kvLocationCursorKey;
@property (nonatomic) double pullStartTime;
@property (nonatomic) unsigned long long retryCount;
@property (nonatomic) double netInitPullALLTime;
@property (nonatomic) double dbInitPullALLTime;
@property (nonatomic) long long netInitPullALLCount;
@property (nonatomic) long long hasFetchedMsgCounts;
@property BOOL isRequesting;
@property (nonatomic) long long cmdMessageIndex;
@property (nonatomic) long long conversationVersion;
@property (retain) NSMutableArray *pullVersionRangeList;
@property (nonatomic) long long markReadVersion;
@property (retain, nonatomic) NSNumber *liveConsultVersion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)conversationVersionKeyForInbox:(int)arg0;
+ (id)cmdMessageIndexKeyForInbox:(int)arg0;
+ (id)cmdMessageIndexKeyForInbox:(int)arg0 type:(long long)arg1;
+ (id)conversationVersionKeyForInbox:(int)arg0 type:(long long)arg1;
+ (id)markReadVersionKeyForInbox:(int)arg0 type:(long long)arg1;
+ (id)liveConsultVersionKeyWithType:(long long)arg0;
+ (id)conversationVersionRangeKeyForInbox:(int)arg0 type:(long long)arg1;
+ (id)markReadVersionKeyForInbox:(int)arg0;
+ (id)conversationVersionRangeKeyForInbox:(int)arg0;

- (void)setIsRequesting:(BOOL)arg0;
- (BOOL)isRequesting;
- (id)kvStorage;
- (void)setKvStorage:(id)arg0;
- (double)pullStartTime;
- (void)setPullStartTime:(double)arg0;
- (void)startInit;
- (BOOL)hasInitSuccess;
- (void)setPullerInitStatus:(unsigned long long)arg0;
- (unsigned long long)pullerInitStatus;
- (void)setLogMarkerForInit:(id)arg0;
- (double)netInitPullALLTime;
- (void)setNetInitPullALLTime:(double)arg0;
- (long long)netInitPullALLCount;
- (void)setNetInitPullALLCount:(long long)arg0;
- (long long)hasFetchedConvCounts;
- (long long)hasFetchedMsgCounts;
- (void)setHasFetchedMsgCounts:(long long)arg0;
- (void)setHasFetchedConvCounts:(long long)arg0;
- (double)dbInitPullALLTime;
- (void)setDbInitPullALLTime:(double)arg0;
- (void)finishInitWithError:(id)arg0;
- (id)logMarkerForInit;
- (long long)conversationVersion;
- (long long)cmdMessageIndex;
- (void)setConversationVersion:(long long)arg0;
- (BOOL)cursorInited;
- (void)setCmdMessageIndex:(long long)arg0;
- (void)writeConversationVersion;
- (void)setIsVersionValid:(BOOL)arg0;
- (void)writeCmdMessageIndex;
- (id)kvLocationCursorKey;
- (void)traceInitInfoWithLogID:(id)arg0;
- (void)setKvLocationCursorKey:(id)arg0;
- (void)setKvCursorInitedKey:(id)arg0;
- (void)setPullerInitStatusKey:(id)arg0;
- (void)setKvCmdMessageIndexKey:(id)arg0;
- (void)setKvConversationVersionKey:(id)arg0;
- (void)setupKeys;
- (void)setCursorInited:(BOOL)arg0;
- (id)kvCursorInitedKey;
- (id)pullerInitStatusKey;
- (BOOL)isConversationVersionValid;
- (BOOL)isCmdMessageIndexValid;
- (BOOL)isVersionValid;
- (long long)readCmdMessageIndex;
- (long long)readConversationVersion;
- (void)resetInitPuller;
- (id)kvCmdMessageIndexKey;
- (id)kvConversationVersionKey;
- (unsigned long long)getInitStatus;
- (BOOL)fullInitFinished;
- (void)setFullInitFinished:(BOOL)arg0;
- (id)initWithRootObject:(id)arg0 inbox:(int)arg1 userID:(long long)arg2;
- (void)notifyConversationHasNewMessage:(id)arg0 inboxType:(int)arg1;
- (void)continueFetchPullIfNeedWithCompletion:(id /* block */)arg0;
- (void)setNeedsPullWithContext:(id)arg0;
- (BOOL)hasInitOver;
- (id)liveConsultVersion;
- (long long)markReadVersion;
- (void)setMarkReadVersion:(long long)arg0;
- (void)writeMarkReadVersion;
- (void)setLiveConsultVersion:(id)arg0;
- (void)writeLiveConsultVersion;
- (void)writeRangeList;
- (id)pullVersionRangeList;
- (void)setPullVersionRangeList:(id)arg0;
- (void)updatePullerCursor:(id)arg0 inboxType:(int)arg1 context:(id)arg2;
- (void)fetchInitListWithNextVersion:(long long)arg0 isLoadMore:(BOOL)arg1 withcompletion:(id /* block */)arg2;
- (void)endInitWithLogID:(id)arg0;
- (void)fetchInitListWithNextVersion:(long long)arg0;
- (void)setUserCredential:(id)arg0;
- (void)migrationMsgVersionForSec;
- (void)setKvConversationVersionRangeKey:(id)arg0;
- (void)setKvMarkReadVersionKey:(id)arg0;
- (void)setKvLiveConsultVersionKey:(id)arg0;
- (BOOL)hasMigrateOldVersion;
- (long long)readMarkReadVersion;
- (void)setHasMigrateOldVersion;
- (id)kvMarkReadVersionKey;
- (id)readLiveConsultVersion;
- (id)readRangeList;
- (void)logDBInfo;
- (id)p_msgLinkTrackerDicWithNotify:(id)arg0;
- (void)clearMonitorsWithNotifyIfNeeded:(id)arg0;
- (void)setHasInitOver:(BOOL)arg0;
- (BOOL)p_isCrossUser;
- (void)p_trackCrossUserWithScene:(id)arg0;
- (id)kvConversationVersionRangeKey;
- (id)_log_printRange:(id)arg0;
- (id)kvLiveConsultVersionKey;
- (id)userCredential;
- (long long)userID;
- (void)setDb:(id)arg0;
- (id)db;
- (id)notifier;
- (void).cxx_destruct;
- (void)setRetryCount:(unsigned long long)arg0;
- (unsigned long long)retryCount;
- (void)setUserID:(long long)arg0;
- (void)kickoff;
- (void)setNotifier:(id)arg0;
- (int)inbox;
- (void)setInbox:(int)arg0;

@end
