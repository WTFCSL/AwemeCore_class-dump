//
//     Generated by private class-dump
//

@class NSMutableDictionary, IESLiveKTVSEIOrderInfo, IESLiveKTVResourceSongItem, IESLiveKtvAtmosphereVideoInfo, GPBInt64Array, IESLiveKtvSongStruct_PersonalSongInfo, NSMutableArray, GPBEnumArray, NSString, IESLiveKRCSong, IESLiveKtvSongStruct_WantListenInfo, IESLiveKtvSongStruct_AudioInfo, IESLiveKtvSongStruct_OrderInfo, IESLiveChorusVideoInfo, NSArray, IESLiveKTVMVInfo, IESLiveKtvSongStruct_ChallengeInfo, NSProgress;

@interface IESLiveKtvSongStruct : IESLivePBBaseMessage

@property (copy, nonatomic) NSString *musicCachePath;
@property (copy, nonatomic) NSString *lyricFilePath;
@property (copy, nonatomic) NSString *lyric;
@property (retain, nonatomic) IESLiveKRCSong *krcSong;
@property (copy, nonatomic) NSString *willSingSource;
@property (copy, nonatomic) NSString *midiPath;
@property (retain, nonatomic) IESLiveKtvAtmosphereVideoInfo *videoInfo;
@property (retain, nonatomic) IESLiveKTVMVInfo *mvInfo;
@property (nonatomic) BOOL isMusicAddToListSuccessSync;
@property (nonatomic) BOOL isMusicPlaying;
@property (nonatomic) BOOL isMusicPlayError;
@property (nonatomic) long long playId;
@property (readonly, nonatomic) BOOL scoreEnabled;
@property (retain, nonatomic) IESLiveKTVResourceSongItem *resourceSongItem;
@property (retain, nonatomic) IESLiveKTVSEIOrderInfo *orderSongSeiModel;
@property (retain, nonatomic) NSProgress *preloadDebugProgress;
@property (nonatomic) BOOL hasSwitchToFollow;
@property (nonatomic) BOOL isJoined;
@property (copy, nonatomic) NSArray *multiChorusUsers;
@property (copy, nonatomic) NSArray *multiChorusUserIDs;
@property (copy, nonatomic) NSString *multiChorusID;
@property (copy, nonatomic) NSString *multiChorusClickPosition;
@property (nonatomic) long long id_p;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *author;
@property (nonatomic) long long lyricType;
@property (copy, nonatomic) NSString *songURL;
@property (retain, nonatomic) NSMutableArray *lyricURLListArray;
@property (readonly, nonatomic) unsigned long long lyricURLListArray_Count;
@property (nonatomic) long long duration;
@property (copy, nonatomic) NSString *coverURL;
@property (nonatomic) long long songPattern;
@property (nonatomic) double previewStartTime;
@property (retain, nonatomic) IESLiveKtvSongStruct_AudioInfo *fullTrack;
@property (nonatomic) BOOL hasFullTrack;
@property (retain, nonatomic) IESLiveKtvSongStruct_AudioInfo *accompanimentTrack;
@property (nonatomic) BOOL hasAccompanimentTrack;
@property (copy, nonatomic) NSString *newCoverURL;
@property (copy, nonatomic) NSString *midiURL;
@property (nonatomic) BOOL isFavorite;
@property (retain, nonatomic) IESLiveKtvSongStruct_OrderInfo *orderInfo;
@property (nonatomic) BOOL hasOrderInfo;
@property (retain, nonatomic) NSMutableArray *tagsArray;
@property (readonly, nonatomic) unsigned long long tagsArray_Count;
@property (retain, nonatomic) NSMutableDictionary *ext;
@property (readonly, nonatomic) unsigned long long ext_Count;
@property (retain, nonatomic) NSMutableArray *musicClimaxArray;
@property (readonly, nonatomic) unsigned long long musicClimaxArray_Count;
@property (retain, nonatomic) NSMutableArray *preludesArray;
@property (readonly, nonatomic) unsigned long long preludesArray_Count;
@property (retain, nonatomic) NSMutableArray *interludesArray;
@property (readonly, nonatomic) unsigned long long interludesArray_Count;
@property (retain, nonatomic) NSMutableArray *segmentsArray;
@property (readonly, nonatomic) unsigned long long segmentsArray_Count;
@property (copy, nonatomic) NSString *patternFileURL;
@property (retain, nonatomic) NSMutableArray *bridgeSegmentsArray;
@property (readonly, nonatomic) unsigned long long bridgeSegmentsArray_Count;
@property (retain, nonatomic) NSMutableArray *mainSegmentsArray;
@property (readonly, nonatomic) unsigned long long mainSegmentsArray_Count;
@property (retain, nonatomic) NSMutableArray *finaleSegmentsArray;
@property (readonly, nonatomic) unsigned long long finaleSegmentsArray_Count;
@property (retain, nonatomic) IESLiveChorusVideoInfo *chorusInfo;
@property (nonatomic) BOOL hasChorusInfo;
@property (nonatomic) int songType;
@property (copy, nonatomic) NSString *addSongSource;
@property (nonatomic) long long totalOrderWithCurAnchor;
@property (nonatomic) long long globalTotalOrder;
@property (retain, nonatomic) GPBInt64Array *artistIdsArray;
@property (readonly, nonatomic) unsigned long long artistIdsArray_Count;
@property (copy, nonatomic) NSString *idStr;
@property (retain, nonatomic) GPBEnumArray *songCopyrightArray;
@property (readonly, nonatomic) unsigned long long songCopyrightArray_Count;
@property (nonatomic) BOOL isPriorSong;
@property (nonatomic) BOOL isFragmentSong;
@property (copy, nonatomic) NSString *fragmentLyric;
@property (retain, nonatomic) IESLiveKtvSongStruct_PersonalSongInfo *personalSongInfo;
@property (nonatomic) BOOL hasPersonalSongInfo;
@property (copy, nonatomic) NSString *lyricHash;
@property (copy, nonatomic) NSString *midiHash;
@property (retain, nonatomic) IESLiveKtvSongStruct_WantListenInfo *wantListenInfo;
@property (nonatomic) BOOL hasWantListenInfo;
@property (retain, nonatomic) IESLiveKtvSongStruct_ChallengeInfo *challengeInfo;
@property (nonatomic) BOOL hasChallengeInfo;

+ (BOOL)isValid:(id)arg0 path:(id)arg1;
+ (id)inspectMusicList:(id)arg0 path:(id)arg1;
+ (id)descriptor;

- (BOOL)isMusicPlaying;
- (id)lyric;
- (void)setLyric:(id)arg0;
- (id)videoInfo;
- (void)setVideoInfo:(id)arg0;
- (id)effectTag;
- (BOOL)isJoined;
- (void)setIsJoined:(BOOL)arg0;
- (id)mvInfo;
- (void)setMvInfo:(id)arg0;
- (long long)playId;
- (void)setPlayId:(long long)arg0;
- (BOOL)hasAccompanyUrl;
- (BOOL)isSupportedOriginal;
- (BOOL)isSupportedAccompany;
- (BOOL)originalFileExist;
- (BOOL)accompanyFileExist;
- (void)setIsMusicPlaying:(BOOL)arg0;
- (void)setResourceSongItem:(id)arg0;
- (BOOL)isOrderedByUserWithUserID:(id)arg0;
- (void)setMultiChorusClickPosition:(id)arg0;
- (id)artistIds;
- (BOOL)isOriginalFlag;
- (BOOL)scoreEnabled;
- (BOOL)isAddAllSong;
- (id)willSingSource;
- (id)fromRequestTypeForPermitWantToListen;
- (BOOL)isVideoChorus;
- (BOOL)isClipSing;
- (double)climaxDuration;
- (BOOL)availableWithOrigin:(BOOL)arg0;
- (void)setWillSingSource:(id)arg0;
- (double)climaxStart;
- (id)multiChorusUserIDs;
- (id)midiPath;
- (id)lyricFilePath;
- (BOOL)hasSwitchToFollow;
- (id)multiChorusUsers;
- (void)setMultiChorusUsers:(id)arg0;
- (void)setPreloadDebugProgress:(id)arg0;
- (id)preloadDebugProgress;
- (void)setKrcSong:(id)arg0;
- (id)krcSong;
- (void)setMidiPath:(id)arg0;
- (BOOL)isFromGrab;
- (id)multiChorusID;
- (id)multiChorusClickPosition;
- (BOOL)isUserJoinedMultiChorus:(id)arg0;
- (void)setMultiChorusID:(id)arg0;
- (void)setMultiChorusUserIDs:(id)arg0;
- (void)setLyricFilePath:(id)arg0;
- (id)resourceSongItem;
- (id)orderSongSeiModel;
- (id)musicCachePath;
- (BOOL)isMusicAddToListSuccessSync;
- (BOOL)isMusicPlayError;
- (id)accompanyFilePath;
- (id)originalFilePath;
- (void)setOrderSongSeiModel:(id)arg0;
- (void)setMusicCachePath:(id)arg0;
- (void)setIsMusicAddToListSuccessSync:(BOOL)arg0;
- (void)setHasSwitchToFollow:(BOOL)arg0;
- (double)grabDuration;
- (void)setIsMusicPlayError:(BOOL)arg0;
- (id)mmssTimeString;
- (id)multiChorusUserByUserID:(id)arg0;
- (BOOL)available;
- (id)source;
- (id)debugDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg0;
- (id)description;
- (BOOL)hasOriginalUrl;

@end
