//
//     Generated by private class-dump
//

@class CADisplayLink, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface BDPFrameScheduler : NSObject {
    BOOL _isRunning;
    double _oneFrameDuration;
    NSObject<OS_dispatch_queue> *_taskQueue;
    NSMutableDictionary *_allTasks;
    CADisplayLink *_link;
    long long _runningTick;
    long long _incresingID;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;
@property (retain, nonatomic) NSMutableDictionary *allTasks;
@property (retain, nonatomic) CADisplayLink *link;
@property (nonatomic) double oneFrameDuration;
@property (nonatomic) long long runningTick;
@property (nonatomic) long long incresingID;
@property (nonatomic) BOOL isRunning;

+ (id)sharedInstance;

- (void)startDisplayLink;
- (double)oneFrameDuration;
- (long long)scheduleTask:(id /* block */)arg0 onSerialQueue:(id)arg1 frequency:(long long)arg2 times:(long long)arg3 completion:(id /* block */)arg4;
- (void)removeScheduledTask:(long long)arg0;
- (long long)incresingID;
- (void)setIncresingID:(long long)arg0;
- (void)dispatchSync:(BOOL)arg0 block:(id /* block */)arg1;
- (void)setRunningTick:(long long)arg0;
- (long long)runningTick;
- (void)setOneFrameDuration:(double)arg0;
- (void)setIsRunning:(BOOL)arg0;
- (BOOL)isRunning;
- (id)init;
- (void)setLink:(id)arg0;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (id)taskQueue;
- (void)setAllTasks:(id)arg0;
- (id)allTasks;
- (void)stopDisplayLink;
- (id)link;
- (void)dealloc;
- (void)pauseDisplayLink;
- (void)tick:(id)arg0;

@end
