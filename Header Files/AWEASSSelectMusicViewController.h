//
//     Generated by private class-dump
//

@class NSMutableDictionary, ACCASSMusicBannerView, AWEAudioClipFeatureManager, UIPanGestureRecognizer, UITableView, NSDictionary, UIViewController, ACCMusicCollectionFeedManager, UIButton, UIView, AWEASSMusicNavView, NSMutableArray, ACCVideoMusicCategoryModel, ACCASSCurrentSelectedView, NSString, AWEVideoPublishViewModel, ACCMusicTrimViewSnapShootModel, NSArray, ACCLocalAudioDataController, NSIndexPath;
@protocol ACCLoadingViewProtocol, ACCSelectMusicTabProtocol, ACCAudioPlayerProtocol, ACCMusicModelProtocol, UIViewControllerTransitioningDelegate, ACCInteractiveTransitionProtocol, ACCASSSearchMusicVCProtocol, ACCChallengeModelProtocol, ACCMusicCommonSearchBarProtocol, ACCTransitionViewControllerProtocol;

@interface AWEASSSelectMusicViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, ACCPropRecommendMusicProtocol, UIGestureRecognizerDelegate, ACCSelectMusicComponetCommonProtocol, ACCSelectMusicStudioParamsProtocol, ACCViewControllerEmptyPageHelperProtocol> {
    BOOL _shouldHideCellMoreButton;
    BOOL _shouldHideCancelButton;
    BOOL _needDisableDeselectMusic;
    BOOL _useSuggestClipRange;
    BOOL _enableMusicLoop;
    BOOL _isFixDurationMode;
    BOOL _shouldHideSelectedMusicViewClipActionBtn;
    BOOL _disableCutMusic;
    BOOL _enableUseOriginMusic;
    BOOL shouldAccommodateVideoDurationToMusicDuration;
    BOOL _isEditingLocalState;
    BOOL _hideBanner;
    BOOL _fromSelectedMusicClip;
    BOOL _isFirstEnterSearchPage;
    BOOL _forbidSimuScrollViewPanGesture;
    AWEVideoPublishViewModel *_repository;
    id /* block */ _cancelMusicCompletion;
    id /* block */ _didCloseBlock;
    id<ACCChallengeModelProtocol> _challenge;
    id /* block */ _pickCompletion;
    NSString *_previousPage;
    NSArray *_propBindMusicIdArray;
    NSString *_propId;
    id<ACCMusicModelProtocol> _sameStickerMusic;
    id<ACCMusicModelProtocol> _selectedMusic;
    id<ACCMusicModelProtocol> _mvMusic;
    id<ACCMusicModelProtocol> _uploadRecommendMusic;
    long long _recordServerMode;
    double _videoDuration;
    long long _sceneType;
    double _exsitingVideoDuration;
    id /* block */ _enableClipBlock;
    id /* block */ _didClipWithRange;
    id /* block */ _didSuggestClipRangeChange;
    id /* block */ _setForbidSimultaneousScrollViewPanGesture;
    NSDictionary *_clipTrackInfo;
    double _fixDuration;
    id<ACCMusicModelProtocol> _musicSelectInPanel;
    ACCMusicTrimViewSnapShootModel *_imageMusicTrimStatusModel;
    long long _recordMode;
    double maximumMusicDurationToAccommodate;
    NSString *playlistId;
    id /* block */ didDismissBlock;
    NSString *_createId;
    id /* block */ _updatePublishModelCategoryIdBlock;
    UIView *_emptyView;
    UIView *_contentView;
    AWEASSMusicNavView *_navView;
    id<ACCMusicCommonSearchBarProtocol> _searchBar;
    UIButton *_searchBackBtn;
    ACCASSCurrentSelectedView *_currentSelectedMusicView;
    ACCASSMusicBannerView *_bannerView;
    UIView<ACCSelectMusicTabProtocol> *_musicTabView;
    UIView<ACCLoadingViewProtocol> *_useMusicLoadingView;
    UITableView *_tableView;
    UIView *_tableHeaderView;
    UIView<ACCLoadingViewProtocol> *_feedLoadingView;
    unsigned long long _cellPlayStatus;
    id<ACCAudioPlayerProtocol> _audioPlayer;
    id<ACCMusicModelProtocol> _playingMusic;
    NSIndexPath *_playingMusicIndexPath;
    long long _collectionPlayingMusicRow;
    ACCVideoMusicCategoryModel *_collectionPlayingCategory;
    NSMutableDictionary *_contentOffsetDictionary;
    NSMutableDictionary *_playingStatusDictionary;
    NSMutableDictionary *_playingRowDictionary;
    ACCMusicCollectionFeedManager *_feedManager;
    NSMutableArray *_dataList;
    id<ACCTransitionViewControllerProtocol> _transitionDelegate;
    id<UIViewControllerTransitioningDelegate, ACCInteractiveTransitionProtocol> _transitionDelegateForAlbum;
    UIViewController<ACCASSSearchMusicVCProtocol> *_searchVC;
    AWEAudioClipFeatureManager *_clipManager;
    NSString *_enterMusicSearchPathMethod;
    NSString *_exitPageMethod;
    UIPanGestureRecognizer *_panGesture;
    ACCLocalAudioDataController *_localAudioDataController;
    double _startClickStreamingPlay;
    struct _HTSAudioRange { double location; double length; } _audioRange;
}

@property (class, nonatomic) BOOL hasInstance;

@property (retain, nonatomic) UIView *emptyView;
@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) AWEASSMusicNavView *navView;
@property (copy, nonatomic) id<ACCMusicCommonSearchBarProtocol> searchBar;
@property (retain, nonatomic) UIButton *searchBackBtn;
@property (retain, nonatomic) ACCASSCurrentSelectedView *currentSelectedMusicView;
@property (retain, nonatomic) ACCASSMusicBannerView *bannerView;
@property (retain, nonatomic) UIView<ACCSelectMusicTabProtocol> *musicTabView;
@property (retain, nonatomic) UIView<ACCLoadingViewProtocol> *useMusicLoadingView;
@property (retain, nonatomic) UITableView *tableView;
@property (retain, nonatomic) UIView *tableHeaderView;
@property (retain, nonatomic) UIView<ACCLoadingViewProtocol> *feedLoadingView;
@property (nonatomic) unsigned long long cellPlayStatus;
@property (retain, nonatomic) id<ACCAudioPlayerProtocol> audioPlayer;
@property (retain, nonatomic) id<ACCMusicModelProtocol> playingMusic;
@property (retain, nonatomic) NSIndexPath *playingMusicIndexPath;
@property (nonatomic) BOOL isEditingLocalState;
@property (nonatomic) long long collectionPlayingMusicRow;
@property (copy, nonatomic) ACCVideoMusicCategoryModel *collectionPlayingCategory;
@property (retain, nonatomic) NSMutableDictionary *contentOffsetDictionary;
@property (retain, nonatomic) NSMutableDictionary *playingStatusDictionary;
@property (retain, nonatomic) NSMutableDictionary *playingRowDictionary;
@property (retain, nonatomic) ACCMusicCollectionFeedManager *feedManager;
@property (retain, nonatomic) NSMutableArray *dataList;
@property (retain, nonatomic) id<ACCTransitionViewControllerProtocol> transitionDelegate;
@property (retain, nonatomic) id<UIViewControllerTransitioningDelegate, ACCInteractiveTransitionProtocol> transitionDelegateForAlbum;
@property (retain, nonatomic) UIViewController<ACCASSSearchMusicVCProtocol> *searchVC;
@property (nonatomic) BOOL hideBanner;
@property (retain, nonatomic) AWEAudioClipFeatureManager *clipManager;
@property (nonatomic) BOOL fromSelectedMusicClip;
@property (retain, nonatomic) NSString *enterMusicSearchPathMethod;
@property (nonatomic) BOOL isFirstEnterSearchPage;
@property (retain, nonatomic) NSString *exitPageMethod;
@property (retain, nonatomic) UIPanGestureRecognizer *panGesture;
@property (nonatomic) BOOL forbidSimuScrollViewPanGesture;
@property (retain, nonatomic) ACCLocalAudioDataController *localAudioDataController;
@property (nonatomic) double startClickStreamingPlay;
@property (copy, nonatomic) NSString *createId;
@property (copy, nonatomic) id /* block */ updatePublishModelCategoryIdBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) id<ACCChallengeModelProtocol> challenge;
@property (weak, nonatomic) AWEVideoPublishViewModel *repository;
@property (retain, nonatomic) id<ACCMusicModelProtocol> selectedMusic;
@property (copy, nonatomic) id /* block */ pickCompletion;
@property (copy, nonatomic) id /* block */ cancelMusicCompletion;
@property (copy, nonatomic) id /* block */ didCloseBlock;
@property (copy, nonatomic) id /* block */ didDismissBlock;
@property (nonatomic) long long recordServerMode;
@property (nonatomic) long long recordMode;
@property (nonatomic) double videoDuration;
@property (nonatomic) BOOL disableCutMusic;
@property (retain, nonatomic) id<ACCMusicModelProtocol> musicSelectInPanel;
@property (nonatomic) BOOL shouldHideCellMoreButton;
@property (nonatomic) BOOL needDisableDeselectMusic;
@property (nonatomic) BOOL shouldHideCancelButton;
@property (nonatomic) BOOL isFixDurationMode;
@property (nonatomic) BOOL shouldHideSelectedMusicViewClipActionBtn;
@property (retain, nonatomic) id<ACCMusicModelProtocol> sameStickerMusic;
@property (retain, nonatomic) id<ACCMusicModelProtocol> mvMusic;
@property (retain, nonatomic) id<ACCMusicModelProtocol> uploadRecommendMusic;
@property (copy, nonatomic) NSString *playlistId;
@property (copy, nonatomic) NSString *previousPage;
@property (retain, nonatomic) NSArray *propBindMusicIdArray;
@property (copy, nonatomic) NSString *propId;
@property (nonatomic) long long sceneType;
@property (nonatomic) BOOL useSuggestClipRange;
@property (nonatomic) BOOL enableMusicLoop;
@property (nonatomic) BOOL enableUseOriginMusic;
@property (retain, nonatomic) ACCMusicTrimViewSnapShootModel *imageMusicTrimStatusModel;
@property (nonatomic) struct _HTSAudioRange { double location; double length; } audioRange;
@property (nonatomic) double exsitingVideoDuration;
@property (copy, nonatomic) id /* block */ enableClipBlock;
@property (copy, nonatomic) id /* block */ didClipWithRange;
@property (copy, nonatomic) id /* block */ didSuggestClipRangeChange;
@property (copy, nonatomic) id /* block */ setForbidSimultaneousScrollViewPanGesture;
@property (copy, nonatomic) NSDictionary *clipTrackInfo;
@property (nonatomic) double fixDuration;
@property (nonatomic) BOOL shouldAccommodateVideoDurationToMusicDuration;
@property (nonatomic) double maximumMusicDurationToAccommodate;

+ (BOOL)hasInstance;
+ (void)setHasInstance:(BOOL)arg0;

- (id)aweui_emptyPageConfigForState:(unsigned long long)arg0;
- (void)aweui_emptyPagePrimaryButtonTapped:(id)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })aweui_emptyPageEdgeInsets;
- (id /* block */)didDismissBlock;
- (void)setDidDismissBlock:(id /* block */)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })emptyPageEdgeInsets;
- (void)emptyPagePrimaryButtonTapped;
- (id)aweui_emptyPageBelowView;
- (void)setDataList:(id)arg0;
- (id)playlistId;
- (long long)recordMode;
- (void)setRecordMode:(long long)arg0;
- (BOOL)enableMusicLoop;
- (void)setEnableMusicLoop:(BOOL)arg0;
- (BOOL)useSuggestClipRange;
- (void)setUseSuggestClipRange:(BOOL)arg0;
- (id)propId;
- (void)setPropId:(id)arg0;
- (void)setDidCloseBlock:(id /* block */)arg0;
- (id /* block */)didCloseBlock;
- (void)p_setupUI;
- (void)setPlayingMusic:(id)arg0;
- (id)playingMusic;
- (struct _HTSAudioRange { double x0; double x1; })audioRange;
- (void)setAudioRange:(struct _HTSAudioRange { double x0; double x1; })arg0;
- (void)handleAppWillResignActiveNotification;
- (id)navView;
- (void)setNavView:(id)arg0;
- (id)createId;
- (void)p_loadMoreData;
- (id)searchVC;
- (void)p_clearSearch;
- (void)setSearchVC:(id)arg0;
- (void)setFeedManager:(id)arg0;
- (BOOL)loadMoreHasMore;
- (void)setPlaylistId:(id)arg0;
- (void)reloadTableHeaderView;
- (void)setCreateId:(id)arg0;
- (void)configDelegateViewWithStatus:(unsigned long long)arg0;
- (void)configEmptyPageState:(unsigned long long)arg0;
- (id)emptyPageBelowView;
- (void)setSelectedMusic:(id)arg0;
- (id)mvMusic;
- (void)setDisableCutMusic:(BOOL)arg0;
- (void)setMusicSelectInPanel:(id)arg0;
- (BOOL)enableUseOriginMusic;
- (void)setEnableUseOriginMusic:(BOOL)arg0;
- (id)imageMusicTrimStatusModel;
- (void)setImageMusicTrimStatusModel:(id)arg0;
- (void)setExsitingVideoDuration:(double)arg0;
- (void)setClipTrackInfo:(id)arg0;
- (void)setEnableClipBlock:(id /* block */)arg0;
- (void)setDidClipWithRange:(id /* block */)arg0;
- (void)setDidSuggestClipRangeChange:(id /* block */)arg0;
- (void)setSetForbidSimultaneousScrollViewPanGesture:(id /* block */)arg0;
- (BOOL)shouldHideCellMoreButton;
- (void)setShouldHideCellMoreButton:(BOOL)arg0;
- (BOOL)needDisableDeselectMusic;
- (void)setNeedDisableDeselectMusic:(BOOL)arg0;
- (BOOL)shouldHideCancelButton;
- (void)setShouldHideCancelButton:(BOOL)arg0;
- (BOOL)isFixDurationMode;
- (void)setIsFixDurationMode:(BOOL)arg0;
- (BOOL)shouldHideSelectedMusicViewClipActionBtn;
- (void)setShouldHideSelectedMusicViewClipActionBtn:(BOOL)arg0;
- (id)sameStickerMusic;
- (void)setSameStickerMusic:(id)arg0;
- (void)setMvMusic:(id)arg0;
- (id)uploadRecommendMusic;
- (void)setUploadRecommendMusic:(id)arg0;
- (id)selectedMusic;
- (id)propBindMusicIdArray;
- (void)setPropBindMusicIdArray:(id)arg0;
- (double)exsitingVideoDuration;
- (id /* block */)enableClipBlock;
- (id /* block */)didClipWithRange;
- (id /* block */)didSuggestClipRangeChange;
- (id /* block */)setForbidSimultaneousScrollViewPanGesture;
- (id)clipTrackInfo;
- (double)fixDuration;
- (void)setFixDuration:(double)arg0;
- (BOOL)shouldAccommodateVideoDurationToMusicDuration;
- (void)setShouldAccommodateVideoDurationToMusicDuration:(BOOL)arg0;
- (double)maximumMusicDurationToAccommodate;
- (void)setMaximumMusicDurationToAccommodate:(double)arg0;
- (id)transitionDelegateForAlbum;
- (void)setTransitionDelegateForAlbum:(id)arg0;
- (void)setPickCompletion:(id /* block */)arg0;
- (void)setCancelMusicCompletion:(id /* block */)arg0;
- (BOOL)disableCutMusic;
- (id)musicSelectInPanel;
- (id /* block */)updatePublishModelCategoryIdBlock;
- (void)setUpdatePublishModelCategoryIdBlock:(id /* block */)arg0;
- (void)setCellPlayStatus:(unsigned long long)arg0;
- (unsigned long long)cellPlayStatus;
- (void)p_exitSearch;
- (void)p_enterSearch;
- (void)p_updateLayout;
- (void)searchBarResignFirstResponder;
- (id)p_getCategoryName:(id)arg0;
- (void)trackWhenExitMusicPanel:(id)arg0;
- (id)commonTrackparams;
- (void)setRecordServerMode:(long long)arg0;
- (void)cancelBtnClicked:(id)arg0;
- (id)playingMusicIndexPath;
- (void)setPlayingMusicIndexPath:(id)arg0;
- (void)hideTableHeaderBannerView;
- (void)p_refreshDataWithAnimation:(BOOL)arg0;
- (BOOL)shouldLandingToSearchPath;
- (void)setEnterMusicSearchPathMethod:(id)arg0;
- (void)setIsFirstEnterSearchPage:(BOOL)arg0;
- (void)trackWhenEnterSearch:(id)arg0;
- (void)configForCallBack;
- (BOOL)isFirstEnterSearchPage;
- (id)exitPageMethod;
- (void)p_stopCurrentSelectedViewIfNeeded;
- (void)exitAllPages;
- (double)contentViewTopOffset;
- (BOOL)forbidSimuScrollViewPanGesture;
- (id)searchBackBtn;
- (id)currentSelectedMusicView;
- (void)setExitPageMethod:(id)arg0;
- (void)setCollectionPlayingMusicRow:(long long)arg0;
- (void)setCollectionPlayingCategory:(id)arg0;
- (id)musicTabView;
- (long long)recordServerMode;
- (void)updateDataList;
- (BOOL)shouldOptimizeMusicLoading;
- (void)setFeedLoadingView:(id)arg0;
- (void)addSelectedMusicViewIfNeeded;
- (void)p_endRefreshingWithAnimation:(BOOL)arg0;
- (id)feedLoadingView;
- (void)p_prepareSelectMusicHotData;
- (void)p_prepareSelectMusicLocalData;
- (void)safeAddObjectToDataList:(id)arg0;
- (id)localAudioDataController;
- (id)p_localAudioBasicTrackInfo;
- (BOOL)isEditingLocalState;
- (void)setIsEditingLocalState:(BOOL)arg0;
- (void)p_dismissAlbumViewController;
- (long long)collectionPlayingMusicRow;
- (id)playingStatusDictionary;
- (void)p_makeCurrentPlayingCellPause;
- (id)playingRowDictionary;
- (id /* block */)pickCompletion;
- (id)enterMusicSearchPathMethod;
- (BOOL)shouldAdjustPageHeight;
- (void)setHideBanner:(BOOL)arg0;
- (double)tableHeaderViewHeight;
- (void)setFromSelectedMusicClip:(BOOL)arg0;
- (double)calculateAvailableCutDurationWithMusic:(id)arg0;
- (void)setForbidSimuScrollViewPanGesture:(BOOL)arg0;
- (id /* block */)cancelMusicCompletion;
- (void)tapToClosePage;
- (void)searchBackBtnClicked:(id)arg0;
- (BOOL)shouldShowNewSearchStyle;
- (void)p_changeSearchWord:(id)arg0;
- (BOOL)p_inputIsAllWhitespace:(id)arg0;
- (BOOL)p_correctKeywordWhenStartSearch;
- (void)p_startSearch:(id)arg0;
- (void)trackWhenQuitSearch:(id)arg0;
- (void)didPickAudio:(id)arg0 fromClip:(BOOL)arg1 error:(id)arg2;
- (void)p_showMusicClipViewWithMusic:(id)arg0;
- (void)solveColseGestureWith:(id)arg0;
- (void)searchHistoryBackBtnClickAction:(long long)arg0;
- (id)getFirstDataOfSection:(long long)arg0;
- (id)collectionPlayingCategory;
- (double)startClickStreamingPlay;
- (void)setStartClickStreamingPlay:(double)arg0;
- (void)trackSelectMusicViewShowTime;
- (void)trackMusicPlayTime:(BOOL)arg0;
- (void)pauseForPickAudio;
- (void)enterMusicDetailViewController:(id)arg0 categoryId:(id)arg1 categoryName:(id)arg2;
- (void)p_collectionBtnClickedWithAudio:(id)arg0 tableViewCell:(id)arg1 withDict:(id)arg2 needRefreshTable:(BOOL)arg3;
- (void)p_handleExportAudio:(id)arg0;
- (void)requestLocalAudioAuth;
- (void)localListEditClick;
- (id)contentOffsetDictionary;
- (void)handleForUseMusicOnVideo:(id)arg0;
- (void)setUseMusicLoadingView:(id)arg0;
- (id)useMusicLoadingView;
- (void)p_handleForUseMusicOnVideo:(id)arg0 withError:(id)arg1;
- (void)setSearchBackBtn:(id)arg0;
- (void)setCurrentSelectedMusicView:(id)arg0;
- (void)setMusicTabView:(id)arg0;
- (void)setContentOffsetDictionary:(id)arg0;
- (void)setPlayingStatusDictionary:(id)arg0;
- (void)setPlayingRowDictionary:(id)arg0;
- (BOOL)fromSelectedMusicClip;
- (void)setLocalAudioDataController:(id)arg0;
- (id)searchBar;
- (BOOL)shouldAutorotate;
- (double)tableView:(id)arg0 estimatedHeightForRowAtIndexPath:(id)arg1;
- (id)tableView:(id)arg0 viewForHeaderInSection:(long long)arg1;
- (void)tableView:(id)arg0 willDisplayCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg0;
- (void)setSearchBar:(id)arg0;
- (void)tableView:(id)arg0 didSelectRowAtIndexPath:(id)arg1;
- (double)tableView:(id)arg0 heightForHeaderInSection:(long long)arg1;
- (void)setTableView:(id)arg0;
- (void)viewDidAppear:(BOOL)arg0;
- (long long)tableView:(id)arg0 numberOfRowsInSection:(long long)arg1;
- (void).cxx_destruct;
- (id)tableView;
- (id)initWithNibName:(id)arg0 bundle:(id)arg1;
- (void)tableView:(id)arg0 didEndDisplayingCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (id)challenge;
- (id)tableView:(id)arg0 cellForRowAtIndexPath:(id)arg1;
- (id)audioPlayer;
- (long long)preferredStatusBarUpdateAnimation;
- (void)viewWillDisappear:(BOOL)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)viewDidDisappear:(BOOL)arg0;
- (id)contentView;
- (void)setChallenge:(id)arg0;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setRepository:(id)arg0;
- (double)tableView:(id)arg0 heightForRowAtIndexPath:(id)arg1;
- (id)repository;
- (void)setAudioPlayer:(id)arg0;
- (double)videoDuration;
- (BOOL)prefersStatusBarHidden;
- (id)feedManager;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (void)pause;
- (void)viewDidLoad;
- (id)tableHeaderView;
- (void)setContentView:(id)arg0;
- (double)tableView:(id)arg0 heightForFooterInSection:(long long)arg1;
- (double)tableView:(id)arg0 estimatedHeightForHeaderInSection:(long long)arg1;
- (double)tableView:(id)arg0 estimatedHeightForFooterInSection:(long long)arg1;
- (id)tableView:(id)arg0 viewForFooterInSection:(long long)arg1;
- (id)previousPage;
- (void)setPreviousPage:(id)arg0;
- (id)panGesture;
- (void)setPanGesture:(id)arg0;
- (id)transitionDelegate;
- (void)setTransitionDelegate:(id)arg0;
- (void)setTableHeaderView:(id)arg0;
- (id)emptyView;
- (void)setEmptyView:(id)arg0;
- (long long)sceneType;
- (void)setSceneType:(long long)arg0;
- (id)bannerView;
- (void)setBannerView:(id)arg0;
- (double)bannerHeight;
- (void)handlePanGesture:(id)arg0;
- (void)setVideoDuration:(double)arg0;
- (id)clipManager;
- (void)setClipManager:(id)arg0;
- (BOOL)hideBanner;
- (double)footerInset;
- (void)reloadTableView;
- (id)dataList;

@end
