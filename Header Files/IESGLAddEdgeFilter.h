//
//     Generated by private class-dump
//

@class HTSGLFramebuffer, IESVideoAddEdgeData;

@interface IESGLAddEdgeFilter : HTSGLFilter {
    float _imageVertices[8];
    IESVideoAddEdgeData *_addEdgeInfo;
    HTSGLFramebuffer *_backgroundBuffer;
    struct CGSize { double width; double height; } _outputVideoSize;
    struct CGSize { double width; double height; } _frameSize;
    struct CGSize { double width; double height; } _realVideoSize;
}

@property (retain, nonatomic) HTSGLFramebuffer *backgroundBuffer;
@property (nonatomic) struct CGSize { double width; double height; } frameSize;
@property (nonatomic) struct CGSize { double width; double height; } realVideoSize;
@property (readonly, nonatomic) struct CGSize { double width; double height; } outputVideoSize;
@property (retain, nonatomic) IESVideoAddEdgeData *addEdgeInfo;

- (struct CGSize { double x0; double x1; })outputFrameSize;
- (void)renderToTextureWithVertices:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)setInputSize:(struct CGSize { double x0; double x1; })arg0 atIndex:(long long)arg1;
- (void)initializeRenderer:(id)arg0;
- (void)resetFrameVertices;
- (id)addEdgeInfo;
- (void)setRealVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })realVideoSize;
- (void)setAddEdgeInfo:(id)arg0;
- (void)setBackGroundColor:(float)arg0 g:(float)arg1 b:(float)arg2;
- (struct CGSize { double x0; double x1; })getRealVideoSize;
- (id)initWithContext:(id)arg0;
- (void).cxx_destruct;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })frameSize;
- (struct CGSize { double x0; double x1; })outputVideoSize;
- (id)backgroundBuffer;
- (void)setBackgroundBuffer:(id)arg0;

@end
