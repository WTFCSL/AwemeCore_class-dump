//
//     Generated by private class-dump
//

@class AWEPzDomain, AWEPzEngineConfigModel, NSDictionary, NSHashTable, NSMutableDictionary, NSString, AWEPzContextManager;

@interface AWEPzEngine : NSObject <AWEPzEngineProtocol> {
    BOOL _hasLoadConfig;
    BOOL _hasHotSwitch;
    AWEPzDomain *_domain;
    AWEPzContextManager *_contextManager;
    NSDictionary *_stateReferStringMap;
    NSHashTable *_generateComponents;
    AWEPzEngineConfigModel *_engineConfig;
    NSDictionary *_componentModelMap;
    NSDictionary *_strategyModelMap;
    NSMutableDictionary *_strategyMap;
    long long _configFrom;
    NSString *_dataHash;
}

@property (copy, nonatomic) NSDictionary *stateReferStringMap;
@property (retain, nonatomic) NSHashTable *generateComponents;
@property (retain, nonatomic) AWEPzEngineConfigModel *engineConfig;
@property (nonatomic) BOOL hasLoadConfig;
@property (retain, nonatomic) NSDictionary *componentModelMap;
@property (retain, nonatomic) NSDictionary *strategyModelMap;
@property (retain, nonatomic) NSMutableDictionary *strategyMap;
@property (nonatomic) long long configFrom;
@property (retain, nonatomic) NSString *dataHash;
@property (nonatomic) BOOL hasHotSwitch;
@property (weak, nonatomic) AWEPzDomain *domain;
@property (retain, nonatomic) AWEPzContextManager *contextManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)showComponent:(id)arg0;
- (void)hideComponent:(id)arg0;
- (void)consumeComponent:(id)arg0;
- (id)generateComponentWithConfig:(id)arg0;
- (void)strategyVerifyComponent:(id)arg0 completion:(id /* block */)arg1;
- (void)registerVerifyComponent:(id)arg0 completion:(id /* block */)arg1;
- (id)registerVerifyComponent:(id)arg0;
- (id)strategyVerifyComponent:(id)arg0;
- (BOOL)hasLoadConfig;
- (void)setHasLoadConfig:(BOOL)arg0;
- (void)setConfigFrom:(long long)arg0;
- (void)setComponentModelMap:(id)arg0;
- (void)setStrategyModelMap:(id)arg0;
- (id)initWithDomain:(id)arg0 config:(id)arg1;
- (void)loadComponentAndStrategyMapIfNeed;
- (id)componentModelMap;
- (void)loadComponentAndStrategyMapIfNeedCompletion:(id /* block */)arg0;
- (id)strategyModelMap;
- (long long)configFrom;
- (void)domainConfigDidChangeWithComponentModelMap:(id)arg0 strategyModelMap:(id)arg1;
- (void)setEngineConfig:(id)arg0;
- (void)setContextManager:(id)arg0;
- (void)setGenerateComponents:(id)arg0;
- (void)setStateReferStringMap:(id)arg0;
- (BOOL)hasHotSwitch;
- (void)setStrategyMap:(id)arg0;
- (void)setHasHotSwitch:(BOOL)arg0;
- (id)getComponentModel:(id)arg0;
- (void)trackRegisterVerifyWithResult:(long long)arg0 componentID:(id)arg1 componentType:(id)arg2 startTime:(double)arg3;
- (id)getStrategiesWithStrategyIDList:(id)arg0;
- (void)getComponentModel:(id)arg0 completion:(id /* block */)arg1;
- (void)trackStrategyVerifyWithResult:(long long)arg0 component:(id)arg1 inWhiteList:(BOOL)arg2 strategyID:(id)arg3 startTime:(double)arg4;
- (void)p_strategyVerifyComponent:(id)arg0 completion:(id /* block */)arg1;
- (id)selectComponents:(id)arg0;
- (id)getStrategiesWithComponent:(id)arg0 conformsToProtocol:(id)arg1;
- (BOOL)changeComponent:(id)arg0 toState:(long long)arg1;
- (void)enumerateStrategiesWithComponent:(id)arg0 conformsToProtocol:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)trackComponent:(id)arg0 action:(id)arg1 result:(BOOL)arg2 fromState:(long long)arg3 stayTime:(long long)arg4;
- (BOOL)changeComponentConsumed:(id)arg0;
- (void)reloadWithComponentModelMap:(id)arg0 strategyModelMap:(id)arg1;
- (id)strategyMap;
- (id)getStrategyWithStrategyID:(id)arg0;
- (void)asyncExecuteVerifyStrategyList:(id)arg0 component:(id)arg1 completion:(id /* block */)arg2;
- (void)getStrategiesWithStrategyIDList:(id)arg0 completion:(id /* block */)arg1;
- (void)asyncLoopVerifyStrategyList:(id)arg0 index:(long long)arg1 component:(id)arg2 hitStrategy:(id)arg3 completion:(id /* block */)arg4;
- (id)stateReferStringMap;
- (void)addComponent:(id)arg0;
- (id)dataHash;
- (void).cxx_destruct;
- (id)domain;
- (void)removeComponent:(id)arg0;
- (void)reset;
- (void)setDomain:(id)arg0;
- (id)contextManager;
- (id)engineConfig;
- (id)generateComponents;
- (void)setDataHash:(id)arg0;

@end
