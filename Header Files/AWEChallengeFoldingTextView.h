//
//     Generated by private class-dump
//

@class NSMutableArray, UITapGestureRecognizer, UIButton, NSString, NSAttributedString, NSDataDetector;
@protocol AWEChallengeFoldingTextViewDelegate;

@interface AWEChallengeFoldingTextView : UITextView <UITextViewDelegate, UIGestureRecognizerDelegate> {
    BOOL _disableButtonInteraction;
    BOOL _automaticallyChoosesAlignmentToFitLanguageDirection;
    BOOL _shouldAlwaysShowFoldButton;
    BOOL _textViewIsTruncated;
    BOOL _shouldTrackDisplay;
    BOOL _isDisplayed;
    NSAttributedString *_attributedContentText;
    id<AWEChallengeFoldingTextViewDelegate> _textViewDelegate;
    UITapGestureRecognizer *_tapGestureRecognizer;
    double _preferredMaxLayoutWidth;
    long long _numberOfLinesToFold;
    long long _maximumNumberOfLines;
    unsigned long long _foldingStatus;
    UIButton *_foldButton;
    NSAttributedString *_unfoldingAttributedText;
    NSAttributedString *_foldingAttributedText;
    NSMutableArray *_lineFragmentRects;
    unsigned long long _textCheckingTypes;
    NSDataDetector *_dataDetector;
}

@property (nonatomic) unsigned long long foldingStatus;
@property (copy, nonatomic) NSAttributedString *attributedContentText;
@property (nonatomic) double preferredMaxLayoutWidth;
@property (nonatomic) BOOL textViewIsTruncated;
@property (retain, nonatomic) NSMutableArray *lineFragmentRects;
@property (nonatomic) unsigned long long textCheckingTypes;
@property (nonatomic) BOOL shouldTrackDisplay;
@property (nonatomic) BOOL isDisplayed;
@property (retain, nonatomic) NSDataDetector *dataDetector;
@property (weak, nonatomic) id<AWEChallengeFoldingTextViewDelegate> textViewDelegate;
@property (readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic) BOOL disableButtonInteraction;
@property (nonatomic) long long numberOfLinesToFold;
@property (nonatomic) long long maximumNumberOfLines;
@property (readonly, nonatomic) UIButton *foldButton;
@property (copy, nonatomic) NSAttributedString *unfoldingAttributedText;
@property (copy, nonatomic) NSAttributedString *foldingAttributedText;
@property (nonatomic) BOOL automaticallyChoosesAlignmentToFitLanguageDirection;
@property (nonatomic) BOOL shouldAlwaysShowFoldButton;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (unsigned long long)foldingStatus;
- (void)unfold;
- (unsigned long long)textCheckingTypes;
- (void)setTextCheckingTypes:(unsigned long long)arg0;
- (BOOL)disableButtonInteraction;
- (void)setDisableButtonInteraction:(BOOL)arg0;
- (long long)numberOfLinesToFold;
- (void)setNumberOfLinesToFold:(long long)arg0;
- (id)foldButton;
- (id)unfoldingAttributedText;
- (void)setUnfoldingAttributedText:(id)arg0;
- (id)foldingAttributedText;
- (void)setFoldingAttributedText:(id)arg0;
- (BOOL)automaticallyChoosesAlignmentToFitLanguageDirection;
- (void)setAutomaticallyChoosesAlignmentToFitLanguageDirection:(BOOL)arg0;
- (BOOL)shouldAlwaysShowFoldButton;
- (void)setShouldAlwaysShowFoldButton:(BOOL)arg0;
- (id)lineFragmentRects;
- (void)foldButtonAction:(id)arg0;
- (void)setFoldingStatus:(unsigned long long)arg0;
- (void)updateFoldingStatusIfNeeded;
- (void)layoutFoldButton;
- (id)checkAttributedText:(id)arg0;
- (void)fixBoundsForFoldButton;
- (void)invalidateFoldingStatus;
- (id)initWithContent:(id)arg0 preferredMaxWidth:(double)arg1;
- (void)setShouldTrackDisplay:(BOOL)arg0;
- (void)excuteSearch:(id)arg0;
- (void)trackSearchMenuShow;
- (void)handleDetailVCDisplayNotification:(id)arg0;
- (BOOL)textViewIsTruncated;
- (BOOL)shouldTrackDisplay;
- (BOOL)_shouldTreatAsInteractiveElementForCheckingResult:(id)arg0;
- (id)_attributesForCheckingResult:(id)arg0;
- (void)layoutTextView;
- (struct CGSize { double x0; double x1; })boundingSizeWithConstrainedSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setTextViewIsTruncated:(BOOL)arg0;
- (void)setLineFragmentRects:(id)arg0;
- (void)setPreferredMaxLayoutWidth:(double)arg0;
- (long long)maximumNumberOfLines;
- (void).cxx_destruct;
- (id)dataDetector;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (BOOL)gestureRecognizer:(id)arg0 shouldReceiveTouch:(id)arg1;
- (id)tapGestureRecognizer;
- (BOOL)canPerformAction:(SEL)arg0 withSender:(id)arg1;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)canBecomeFirstResponder;
- (void)setMaximumNumberOfLines:(long long)arg0;
- (void)layoutSubviews;
- (double)preferredMaxLayoutWidth;
- (void)setAttributedContentText:(id)arg0;
- (id)attributedContentText;
- (BOOL)isDisplayed;
- (void)setIsDisplayed:(BOOL)arg0;
- (void)handleTap:(id)arg0;
- (void)setDataDetector:(id)arg0;
- (id)textViewDelegate;
- (void)setTextViewDelegate:(id)arg0;
- (void)fold;

@end
