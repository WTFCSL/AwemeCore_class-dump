//
//     Generated by private class-dump
//

@class NSString, NSArray, IESLivePlaybackComponentContext, HTSLiveEpisode, HTSEventContext, NSDate;
@protocol IESLivePlaybackSeekViewModelReaction;

@interface IESLivePlaybackSeekViewModel : NSObject <IESVSVideoPlayAction, IESLiveAirPlayAction, IESLivePlaybackRoomAction, IESLivePlaybackPaywallFreeTrialAction, IESLivePaidStreamActionAdapter, IESLivePlaybackSeekRouter> {
    BOOL _enableSeek;
    BOOL _needHideProgressIndicator;
    BOOL _hiddenWatchNew;
    BOOL _isSeekingProgress;
    BOOL _receiveRemoteData;
    BOOL _hadReportProgressShowInPortrait;
    BOOL _hadReportProgressShowInLandscape;
    BOOL _hadReportWatchNewShowInPortrait;
    BOOL _hadReportWatchNewShowInLandscape;
    IESLivePlaybackComponentContext *_context;
    unsigned long long _currentSeekAction;
    id<IESLivePlaybackSeekViewModelReaction> _seekVMReaction;
    double _progress;
    NSString *_watchDurationStr;
    NSString *_totalDurationStr;
    NSArray *_signModels;
    double _watchDuration;
    double _duration;
    double _liveStartTime;
    HTSLiveEpisode *_episode;
    HTSEventContext *_eventContext;
    long long _startWatchRecord;
    NSDate *_startSeekTime;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _playerFrame;
}

@property (nonatomic) unsigned long long currentSeekAction;
@property (nonatomic) BOOL enableSeek;
@property (nonatomic) double progress;
@property (nonatomic) double watchDuration;
@property (retain, nonatomic) NSString *watchDurationStr;
@property (retain, nonatomic) NSString *totalDurationStr;
@property (retain, nonatomic) NSArray *signModels;
@property (nonatomic) BOOL hiddenWatchNew;
@property (nonatomic) BOOL isSeekingProgress;
@property (nonatomic) BOOL needHideProgressIndicator;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } playerFrame;
@property (retain, nonatomic) IESLivePlaybackComponentContext *context;
@property (nonatomic) double duration;
@property (nonatomic) double liveStartTime;
@property (retain, nonatomic) HTSLiveEpisode *episode;
@property (retain, nonatomic) HTSEventContext *eventContext;
@property (nonatomic) BOOL receiveRemoteData;
@property (nonatomic) BOOL hadReportProgressShowInPortrait;
@property (nonatomic) BOOL hadReportProgressShowInLandscape;
@property (nonatomic) BOOL hadReportWatchNewShowInPortrait;
@property (nonatomic) BOOL hadReportWatchNewShowInLandscape;
@property (nonatomic) long long startWatchRecord;
@property (retain, nonatomic) NSDate *startSeekTime;
@property (weak, nonatomic) id<IESLivePlaybackSeekViewModelReaction> seekVMReaction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)didSetAttachingDIContext;
- (void)setEventContext:(id)arg0;
- (double)liveStartTime;
- (void)setLiveStartTime:(double)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })playerFrame;
- (void)setPlayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)watchDuration;
- (void)setWatchDuration:(double)arg0;
- (void)startConnectToDevice;
- (void)paidStreamTrialDidStart:(long long)arg0;
- (void)paidStreamTrialDidFinish:(long long)arg0 reason:(unsigned long long)arg1;
- (void)paidStreamTrialDidPromised:(long long)arg0;
- (id)startSeekTime;
- (void)setStartSeekTime:(id)arg0;
- (BOOL)enableSeek;
- (void)setEnableSeek:(BOOL)arg0;
- (void)onOrientationTransitionEnd;
- (BOOL)isHiddenWatchNewBtn;
- (void)updateUIProgress:(double)arg0 withAction:(unsigned long long)arg1 isEndSeek:(BOOL)arg2;
- (unsigned long long)nextSignModelIndex;
- (void)coloringProgressWithModels:(id)arg0;
- (id)signModels;
- (void)onAirplayStart;
- (void)onAirplayProgressUpdate:(double)arg0 duration:(double)arg1;
- (void)startCastWhenComponentDidMount;
- (void)didUpdatePlaybackEpisode:(id)arg0;
- (void)onVideoRenderStart;
- (void)onVideoProgressUpdate:(double)arg0 duration:(double)arg1;
- (void)onVideoFrameChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)freeTrialDidStart;
- (void)freeTrialDidFinish;
- (void)promiseDidSuccess;
- (void)onReceiveRmoteRoomData:(id)arg0;
- (void)setReceiveRemoteData:(BOOL)arg0;
- (BOOL)receiveRemoteData;
- (id)initWithContext:(id)arg0 eventContext:(id)arg1;
- (void)setSeekVMReaction:(id)arg0;
- (BOOL)isStreamVideo;
- (id)watchDurationAccessibilityValue;
- (id)formatDurationWithPortrait:(double)arg0;
- (void)manualUpdateCurrentSeekProgressUI;
- (void)setSignModels:(id)arg0;
- (void)trackProgressShowEvent;
- (void)trackWatchNewShowEvent;
- (BOOL)hiddenWatchNew;
- (id)seekVMReaction;
- (unsigned long long)currentSeekAction;
- (void)setCurrentSeekAction:(unsigned long long)arg0;
- (void)_formatDurationWatch:(double)arg0 total:(double)arg1;
- (BOOL)isSeekingProgress;
- (void)setHiddenWatchNew:(BOOL)arg0;
- (void)setIsSeekingProgress:(BOOL)arg0;
- (void)trackSlideEvent;
- (void)seekVideoWithProgress:(double)arg0;
- (unsigned long long)seekbarType;
- (void)setWatchDurationStr:(id)arg0;
- (id)watchDurationStr;
- (void)setTotalDurationStr:(id)arg0;
- (void)setNeedHideProgressIndicator:(BOOL)arg0;
- (void)onPlayerProgressAutoUpdate:(double)arg0 duration:(double)arg1;
- (void)trackWatchNewClick;
- (BOOL)hadReportWatchNewShowInPortrait;
- (BOOL)hadReportWatchNewShowInLandscape;
- (void)setHadReportWatchNewShowInPortrait:(BOOL)arg0;
- (void)setHadReportWatchNewShowInLandscape:(BOOL)arg0;
- (BOOL)hadReportProgressShowInPortrait;
- (BOOL)hadReportProgressShowInLandscape;
- (void)setHadReportProgressShowInPortrait:(BOOL)arg0;
- (void)setHadReportProgressShowInLandscape:(BOOL)arg0;
- (void)watchNewLive;
- (id)totalDurationStr;
- (BOOL)needHideProgressIndicator;
- (long long)startWatchRecord;
- (void)setStartWatchRecord:(long long)arg0;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (id)formatDuration:(double)arg0;
- (double)duration;
- (id)context;
- (id)eventContext;
- (double)progress;
- (void)setProgress:(double)arg0;
- (void)setDuration:(double)arg0;
- (void)setEpisode:(id)arg0;
- (id)episode;

@end
