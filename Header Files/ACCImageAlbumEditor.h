//
//     Generated by private class-dump
//

@class NSString, ACCImageAlbumEditorRuntimeInfo, UIView, NSObject, ACCImageAlbumItemModel;
@protocol OS_dispatch_queue, ACCImageAlbumEditorProtocol;

@interface ACCImageAlbumEditor : NSObject {
    BOOL _didAddImage;
    BOOL _isLoadingImageLayer;
    BOOL _didInitHDREngine;
    BOOL _didRenderedEffect;
    BOOL _didRenderedLayer;
    BOOL _hasBeenReleased;
    BOOL _skipLayerRenderOnceFlag;
    BOOL _useNLE;
    BOOL _backgroundGPU_opt;
    ACCImageAlbumItemModel *_imageItemModel;
    long long _currentIndex;
    UIView *_containerView;
    UIView *_customerContentView;
    id /* block */ _onStickerRecovered;
    id /* block */ _onRenderedComplete;
    long long _batchUpdateReferenceCount;
    NSString *_lastApplyedFilterPath;
    id<ACCImageAlbumEditorProtocol> _imageEditor;
    NSObject<OS_dispatch_queue> *_operationQueue;
    ACCImageAlbumEditorRuntimeInfo *_runtimeInfo;
    struct CGSize { double width; double height; } _containerSize;
    struct CGPoint { double x; double y; } _previewCenter;
    struct CGSize { double width; double height; } _imageLayerSize;
    struct CGSize { double width; double height; } _originalImageLayerSize;
    struct CGSize { double width; double height; } _targetRenderSize;
}

@property (nonatomic) struct CGSize { double width; double height; } containerSize;
@property (nonatomic) struct CGPoint { double x; double y; } previewCenter;
@property (nonatomic) BOOL isLoadingImageLayer;
@property (nonatomic) long long batchUpdateReferenceCount;
@property (nonatomic) BOOL didAddImage;
@property (nonatomic) BOOL didInitHDREngine;
@property (nonatomic) BOOL didRenderedEffect;
@property (nonatomic) BOOL didRenderedLayer;
@property (copy, nonatomic) NSString *lastApplyedFilterPath;
@property (nonatomic) struct CGSize { double width; double height; } imageLayerSize;
@property (nonatomic) struct CGSize { double width; double height; } originalImageLayerSize;
@property (nonatomic) struct CGSize { double width; double height; } targetRenderSize;
@property (nonatomic) BOOL hasBeenReleased;
@property (nonatomic) BOOL skipLayerRenderOnceFlag;
@property (nonatomic) BOOL useNLE;
@property (nonatomic) BOOL backgroundGPU_opt;
@property (retain, nonatomic) ACCImageAlbumItemModel *imageItemModel;
@property (retain, nonatomic) id<ACCImageAlbumEditorProtocol> imageEditor;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (retain, nonatomic) ACCImageAlbumEditorRuntimeInfo *runtimeInfo;
@property (readonly, nonatomic) long long currentIndex;
@property (readonly, nonatomic) UIView *containerView;
@property (readonly, nonatomic) UIView *customerContentView;
@property (copy, nonatomic) id /* block */ onStickerRecovered;
@property (copy, nonatomic) id /* block */ onRenderedComplete;

+ (struct CGSize { double x0; double x1; })calculateImageLayerSizeWithContainerSize:(struct CGSize { double x0; double x1; })arg0 imageSize:(struct CGSize { double x0; double x1; })arg1 needClip:(BOOL)arg2;
+ (struct CGSize { double x0; double x1; })calculateIpadImageLayerSizeWithContainerSize:(struct CGSize { double x0; double x1; })arg0 imageSize:(struct CGSize { double x0; double x1; })arg1 needClip:(BOOL)arg2;
+ (struct CGSize { double x0; double x1; })calculateTargetRenderSizeWithContainerSize:(struct CGSize { double x0; double x1; })arg0 imageSize:(struct CGSize { double x0; double x1; })arg1;

- (id)runtimeInfo;
- (void)setRuntimeInfo:(id)arg0;
- (int)setRedrawCallback:(id /* block */)arg0 data:(id)arg1;
- (long long)addInfoStickerTemplate:(id)arg0 param:(id)arg1;
- (void)updateInfoStickerTemplateParam:(long long)arg0 json:(id)arg1;
- (id)nativeGetInfoStickerTemplateParam:(long long)arg0;
- (id)imageItemModel;
- (void)setImageItemModel:(id)arg0;
- (id)getOriginalImage;
- (id)getNleWrapper;
- (BOOL)applyTemplateFile:(id)arg0 diffJson:(id)arg1;
- (id)getNeedDownloadedResource;
- (id)getNleImageAlbumEditor;
- (int)addTextSticker:(id)arg0 params:(id)arg1;
- (void)beginCurrentImageEditorBatchUpdate;
- (void)endCurrentImageEditorBatchUpdate;
- (void)setPreviewCenter:(struct CGPoint { double x0; double x1; })arg0;
- (struct CGPoint { double x0; double x1; })previewCenter;
- (id)customerContentView;
- (BOOL)userAddedLayerFlag:(id)arg0;
- (id)nativeGetTextStickerParam:(int)arg0;
- (void)updateTextStickerTextParams:(long long)arg0 textParams:(id)arg1;
- (id)initWithContainerSize:(struct CGSize { double x0; double x1; })arg0 useNLE:(BOOL)arg1;
- (void)p_setupBase;
- (void)onDidCreat;
- (void)onWillDestroy;
- (void)setHasBeenReleased:(BOOL)arg0;
- (BOOL)useNLE;
- (void)setImageEditor:(id)arg0;
- (id)imageEditor;
- (void)reloadWithImageItem:(id)arg0 index:(long long)arg1 isExportMode:(BOOL)arg2 complete:(id /* block */)arg3;
- (BOOL)hasBeenReleased;
- (void)setLastApplyedFilterPath:(id)arg0;
- (void)setIsLoadingImageLayer:(BOOL)arg0;
- (void)setDidRenderedEffect:(BOOL)arg0;
- (void)setDidRenderedLayer:(BOOL)arg0;
- (void)setBatchUpdateReferenceCount:(long long)arg0;
- (void)setSkipLayerRenderOnceFlag:(BOOL)arg0;
- (BOOL)doAddImageLayerTask:(id /* block */)arg0;
- (void)doAdjustAspectFitWidthTask:(id /* block */)arg0;
- (void)doRecoverEditEffectTask;
- (void)p_updateRuntimeStatus;
- (id /* block */)onRenderedComplete;
- (BOOL)isLoadingImageLayer;
- (BOOL)didAddImage;
- (void)p_updateHDRInfo;
- (void)p_updateFilter;
- (void)p_doEditorRenderIfEnable;
- (long long)batchUpdateReferenceCount;
- (void)setTargetRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })targetRenderSize;
- (void)setImageLayerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setOriginalImageLayerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)p_initHDREngine;
- (id)getOriginImageAbsolutePathWithImageItemModel:(id)arg0;
- (void)p_setColorPrimariesByImage:(id)arg0;
- (void)restoreTemplateDownloaderCache:(id)arg0;
- (void)setDidAddImage:(BOOL)arg0;
- (void)p_recoverAllEdits;
- (void)p_recoverAllStickers;
- (void)updateEditWithTypes:(unsigned long long)arg0;
- (void)p_recoverStickerWithSticker:(id)arg0 order:(long long)arg1 addPramas:(id)arg2 setPramas:(id)arg3;
- (void)p_recoverStickerWithSticker:(id)arg0 effectInfo:(id)arg1 order:(long long)arg2;
- (id /* block */)onStickerRecovered;
- (long long)addInfoStickerWithPath:(id)arg0 effectInfo:(id)arg1 orderIndex:(long long)arg2;
- (void)updateInfoStickerWithStickerId:(long long)arg0 updateTypes:(unsigned long long)arg1 props:(id)arg2;
- (BOOL)didInitHDREngine;
- (void)setDidInitHDREngine:(BOOL)arg0;
- (id)lastApplyedFilterPath;
- (BOOL)backgroundGPU_opt;
- (BOOL)isAppOnBackground;
- (BOOL)skipLayerRenderOnceFlag;
- (void)markAsReleased;
- (void)reloadWithImageItem:(id)arg0 index:(long long)arg1;
- (void)reloadWithImageItem:(id)arg0 index:(long long)arg1 complete:(id /* block */)arg2;
- (void)reloadRuntimeInfo:(id)arg0;
- (void)setOnStickerRecovered:(id /* block */)arg0;
- (void)setOnRenderedComplete:(id /* block */)arg0;
- (BOOL)didRenderedEffect;
- (BOOL)didRenderedLayer;
- (struct CGSize { double x0; double x1; })imageLayerSize;
- (struct CGSize { double x0; double x1; })originalImageLayerSize;
- (void)setUseNLE:(BOOL)arg0;
- (void)setBackgroundGPU_opt:(BOOL)arg0;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })getInfoStickerBoundingBoxWithStickerId:(long long)arg0;
- (void)removeInfoStickerWithStickerId:(long long)arg0;
- (void)p_prepareNewExportMaterialWithInputData:(id)arg0 complete:(id /* block */)arg1;
- (void)p_prepareExportMaterialWithInputData:(id)arg0 complete:(id /* block */)arg1;
- (void)p_doExportWithInputData:(id)arg0 outputData:(id)arg1 complete:(id /* block */)arg2;
- (id)getOriginalImageWithImageItemModel:(id)arg0;
- (id)getRenderingImage;
- (unsigned long long)getExportImageTypeWithInputData:(id)arg0;
- (void)p_newExportOriginImageOrEditImageWithInputdata:(id)arg0 outputData:(id)arg1 exportImageType:(unsigned long long)arg2 complete:(id /* block */)arg3;
- (void)p_newExportVERenderImageWithInputdata:(id)arg0 outputData:(id)arg1 complete:(id /* block */)arg2;
- (id)getEditImageWithImageItemModel:(id)arg0;
- (id)writeImage:(id)arg0 toFile:(id)arg1 needImageQualityOpti:(BOOL)arg2 outputData:(id)arg3;
- (void)runExportWithInputData:(id)arg0 complete:(id /* block */)arg1;
- (void)updateImageTemplateInfoIfDownloadSuccess:(BOOL)arg0;
- (struct CGSize { double x0; double x1; })getTemplateCanvasSize;
- (id)saveCurrentImageTemplateInfoOnly;
- (id)exportTemplateInfoOnlyImageFromCanvas;
- (void)setContainerSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setOperationQueue:(id)arg0;
- (struct CGSize { double x0; double x1; })containerSize;
- (void).cxx_destruct;
- (long long)currentIndex;
- (id)operationQueue;
- (id)containerView;
- (void)dealloc;
- (id)initWithContainerSize:(struct CGSize { double x0; double x1; })arg0;

@end
