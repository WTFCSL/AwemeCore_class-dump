//
//     Generated by private class-dump
//

@class NSDictionary, NSString, UIView;
@protocol TVLPlayerController;

@protocol TVLPlayer <NSObject>

@property (weak, nonatomic) id<TVLPlayerController> controller;
@property (readonly, nonatomic) UIView *playerView;
@property (readonly, nonatomic) BOOL isPlaying;
@property (readonly, nonatomic) long long playerItemStatus;
@property (copy, nonatomic) NSDictionary *SEI;
@property (nonatomic) unsigned long long audioRenderDeviceType;
@property (readonly, nonatomic) long long playbackState;
@property (nonatomic, getter=isHardwareDecodeEnabled) BOOL hardwareDecodeEnabled;
@property (nonatomic) BOOL setupPlayerViewInAdvanceEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoCropAreaFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic) float volume;
@property (nonatomic) long long playerViewAlignMode;
@property (nonatomic) long long playerViewScaleMode;
@property (readonly, copy, nonatomic) NSDictionary *requestInfo;
@property (copy, nonatomic) NSString *quicParams;
@property (copy, nonatomic) NSString *httpxParams;
@property (copy, nonatomic) NSString *cmafParams;

- (void)setImageLayoutType:(unsigned long long)arg0;
- (void)setFloatValue:(float)arg0 forKey:(int)arg1;
- (void)setHardwareDecode:(BOOL)arg0;
- (float)getFloatValueForKey:(int)arg0;
- (id)getStringValueForKey:(int)arg0;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (int)getIntValueForKey:(int)arg0;
- (void)setOptionValue:(id)arg0 forIdentifier:(id)arg1;
- (void)setPlayerViewScaleMode:(long long)arg0;
- (void)setOptionValue:(id)arg0 forIdentifier:(id)arg1 shouldCache:(BOOL)arg2;
- (struct __CVBuffer { } *)cropCopyPixelBuffer:(float)arg0 topLeftY:(float)arg1 cropW:(float)arg2 cropH:(float)arg3;
- (long long)playerViewScaleMode;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoCropAreaFrame;
- (void)setVideoCropAreaFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (unsigned long long)audioRenderDeviceType;
- (void)setAudioRenderDeviceType:(unsigned long long)arg0;
- (long long)playerViewAlignMode;
- (void)setPlayerViewAlignMode:(long long)arg0;
- (void)setGlobalValue:(id)arg0 forKey:(int)arg1;
- (id)getGlobalValue:(int)arg0;
- (long long)numberOfBytesPlayed;
- (long long)getInt64ValueForKey:(int)arg0;
- (id)playerCoreVersion;
- (void)setRtsPreloadState:(int)arg0;
- (void)setRecordPath:(id)arg0;
- (id)optionForIdentifier:(id)arg0;
- (int)getDecibelFromAudioStream;
- (void)setViewPreviewSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)setupPlayerViewInAdvanceEnabled;
- (void)setSetupPlayerViewInAdvanceEnabled:(BOOL)arg0;
- (id)quicParams;
- (void)setQuicParams:(id)arg0;
- (id)httpxParams;
- (void)setHttpxParams:(id)arg0;
- (id)cmafParams;
- (void)setCmafParams:(id)arg0;
- (void)replaceCurrentURLWithPlayURL:(id)arg0 options:(id)arg1;
- (void)resetViewPlayer;
- (id)getPlayerVersion;
- (BOOL)isContainerOfPlayerCore:(id)arg0;
- (void)drawBorderViewForTest;
- (id)SEI;
- (void)setSEI:(id)arg0;
- (BOOL)isHardwareDecodeEnabled;
- (void)setHardwareDecodeEnabled:(BOOL)arg0;
- (void)setController:(id)arg0;
- (long long)playbackState;
- (void)setEffect:(id)arg0;
- (float)volume;
- (void)setMuted:(BOOL)arg0;
- (void)close;
- (void)stop;
- (id)controller;
- (id)versionInfo;
- (void)close:(BOOL)arg0;
- (void)prepare;
- (BOOL)isPlaying;
- (void)setVolume:(float)arg0;
- (id)playerView;
- (void)play;
- (void)pause;
- (void)reset;
- (BOOL)isMuted;
- (void)setValue:(int)arg0 forKey:(int)arg1;
- (int)getCurrentTime;
- (void)prepareToPlay;
- (long long)numberOfBytesTransferred;
- (id)requestInfo;
- (long long)playerItemStatus;
- (id)initWithPlayerType:(unsigned long long)arg0;
- (void)takeScreenShot:(id /* block */)arg0;
- (id)getIPAddress;

@end
