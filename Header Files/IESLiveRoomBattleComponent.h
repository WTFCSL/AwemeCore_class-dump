//
//     Generated by private class-dump
//

@class HTSLivePopupNavigationController, IESLiveTeamFightGameInstance, IESLiveTeamFightGameModel, IESLiveTeamFightResourceManager, IESLiveInteractFeedbackAPI, IESLiveTeamFightLogHandler, HTSLiveRoomBattleSettingContent, IESLiveRoomBattleMatchViewModel, NSString, IESLiveInteractFeedbackViewModel, NSNumber, IESLiveRoomBattleBuilder, IESLiveRoomBattleTrackHandler, IESLiveAudienceInteractFinishPopupView;
@protocol IESLiveRoomService;

@interface IESLiveRoomBattleComponent : IESLiveInteractComponentBase <IESLiveRoomBattleProvider, IESLiveRoomBattleRouter, HTSLiveMessageSubscriber, IESLiveTeamFightGameDelegate> {
    BOOL isAnchor;
    id<IESLiveRoomService> roomModel;
    HTSLiveRoomBattleSettingContent *settingContent;
    IESLiveTeamFightGameModel *teamFightModel;
    long long inviteStatus;
    long long teamFightStatus;
    IESLiveTeamFightGameInstance *instance;
    IESLiveRoomBattleMatchViewModel *_matchViewModel;
    IESLiveRoomBattleBuilder *_builder;
    HTSLivePopupNavigationController *_navigationController;
    IESLiveTeamFightResourceManager *_resource;
    IESLiveRoomBattleTrackHandler *_trackHandler;
    IESLiveTeamFightLogHandler *_logHandler;
    long long _lastTeamFightStatus;
    NSNumber *_startLinkTimestamp;
    IESLiveInteractFeedbackViewModel *_feedbackViewModel;
    IESLiveInteractFeedbackAPI *_feedbackAPI;
    IESLiveAudienceInteractFinishPopupView *_finishPopupView;
    IESLiveTeamFightGameModel *_lastTeamFightModel;
}

@property (retain, nonatomic) IESLiveRoomBattleBuilder *builder;
@property (retain, nonatomic) HTSLivePopupNavigationController *navigationController;
@property (retain, nonatomic) IESLiveTeamFightResourceManager *resource;
@property (retain, nonatomic) IESLiveRoomBattleTrackHandler *trackHandler;
@property (retain, nonatomic) IESLiveTeamFightLogHandler *logHandler;
@property (nonatomic) long long lastTeamFightStatus;
@property (retain, nonatomic) NSNumber *startLinkTimestamp;
@property (retain, nonatomic) IESLiveInteractFeedbackViewModel *feedbackViewModel;
@property (retain, nonatomic) IESLiveInteractFeedbackAPI *feedbackAPI;
@property (weak, nonatomic) IESLiveAudienceInteractFinishPopupView *finishPopupView;
@property (retain, nonatomic) IESLiveTeamFightGameModel *lastTeamFightModel;
@property (retain, nonatomic) HTSLiveRoomBattleSettingContent *settingContent;
@property (nonatomic) long long inviteStatus;
@property (retain, nonatomic) IESLiveRoomBattleMatchViewModel *matchViewModel;
@property (retain, nonatomic) IESLiveTeamFightGameInstance *instance;
@property (retain, nonatomic) IESLiveTeamFightGameModel *teamFightModel;
@property (readonly, nonatomic) long long teamFightStatus;
@property (nonatomic) BOOL isAnchor;
@property (retain, nonatomic) id<IESLiveRoomService> roomModel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)roomModel;
- (void)setIsAnchor:(BOOL)arg0;
- (id)trackHandler;
- (void)setTrackHandler:(id)arg0;
- (id)logHandler;
- (id)matchViewModel;
- (void)setRoomModel:(id)arg0;
- (void)popViewControllerWithAnimated:(BOOL)arg0;
- (void)componentMount;
- (void)componentUnmount;
- (void)trackWithEvent:(id)arg0 extra:(id)arg1;
- (void)logInfoWithCategory:(long long)arg0 event:(id)arg1 extra:(id)arg2;
- (void)logErrorWithCategory:(long long)arg0 event:(id)arg1 extra:(id)arg2;
- (void)setLogHandler:(id)arg0;
- (id)feedbackViewModel;
- (void)setFeedbackViewModel:(id)arg0;
- (void)registMessage;
- (BOOL)isProcessingRoomBattle;
- (void)loadNavigationControllerWith:(id)arg0;
- (long long)teamSignWithUserID:(id)arg0;
- (id)teamfightID;
- (id)roomBattleTrackExtra;
- (id)settingContent;
- (void)dealWithRoomBattleJSBEvent:(id)arg0;
- (BOOL)isInRoomBattleMatchingStatus;
- (void)showRoomBattleOperatePanel:(id)arg0 params:(id)arg1;
- (void)setFeedbackAPI:(id)arg0;
- (id)feedbackAPI;
- (id)roomBattleMvpCrownIcon;
- (void)didStatusChangeToPrepare;
- (void)didStatusChangeToFinish;
- (BOOL)enableRoomBattleEntrance:(unsigned long long)arg0;
- (void)monitorWithName:(id)arg0 extra:(id)arg1 eventType:(unsigned long long)arg2;
- (long long)teamFightSignWithPosition:(int)arg0;
- (id)teamFightModel;
- (void)setTeamFightModel:(id)arg0;
- (long long)teamFightStatus;
- (BOOL)isProcessingRoomBattlingOrPunish;
- (BOOL)userCardShouldShowToOtherRoomWithUserID:(id)arg0;
- (id)ownerPlayersScoreMap;
- (void)showCloseDiologWithActionBlock:(id /* block */)arg0;
- (id)finishPopupView;
- (void)setFinishPopupView:(id)arg0;
- (void)registerAutoReportAudienceEnterDuration;
- (void)componentEnterRoom;
- (void)componentDidChangedFromLayout:(id)arg0 toLayout:(id)arg1;
- (void)trackPlayModeLink;
- (void)setStartLinkTimestamp:(id)arg0;
- (id)startLinkTimestamp;
- (void)componentBindContext;
- (void)componentDidJoinChannel;
- (void)componentDidLeaveChannel;
- (void)trackPlaymodeEndWithPlaymodeName:(id)arg0;
- (void)showEntranceNavigationControllerWith:(id)arg0 type:(long long)arg1 completion:(id /* block */)arg2;
- (void)showRoomBattleFeedbackPanel;
- (id)relationshipTrack:(long long)arg0;
- (BOOL)preCheckRoomBattleEnableNeedToast:(BOOL)arg0;
- (id)preCheckRoomBattleEnable;
- (void)setSettingContent:(id)arg0;
- (void)setMatchViewModel:(id)arg0;
- (void)componentLeaveRoom;
- (void)componentWillChangedFromLayout:(id)arg0 toLayout:(id)arg1;
- (void)finishRoomBattleWithFinishType:(long long)arg0 finishReason:(long long)arg1 completion:(id /* block */)arg2;
- (void)trackPlayModeLinkDuration:(long long)arg0;
- (void)didStatusChangeToTeamFighting;
- (void)setLastTeamFightModel:(id)arg0;
- (void)fetchFeedbackListModel;
- (long long)lastTeamFightStatus;
- (void)trackFeedBackPanelOver:(id)arg0;
- (void)trackFeedBackPanelClick:(id)arg0;
- (void)trackFeedBackPanelShow;
- (void)showOneMorePanel;
- (id)getFeedBackPanelCommomTrackParams;
- (id)lastTeamFightModel;
- (BOOL)isAdminPrivilege;
- (void)teamFightGame:(id)arg0 statusDidChange:(long long)arg1 preStatus:(long long)arg2;
- (void)teamFightGame:(id)arg0 receviedTeamFightMessage:(id)arg1;
- (BOOL)teamFightGame:(id)arg0 shouldHandleTeamFightMessage:(id)arg1;
- (void)teamFightGame:(id)arg0 willUpdateTeamFightInfo:(id)arg1 type:(long long)arg2;
- (void)teamFightGame:(id)arg0 didUpdateTeamFightInfo:(id)arg1 type:(long long)arg2;
- (void)teamFightGameDidTeamFightTimeOut:(id)arg0;
- (void)teamFightGameDidPunishTimeOut:(id)arg0;
- (void)teamFightGameDidEnterTeamFightLayout:(id)arg0;
- (void)setLastTeamFightStatus:(long long)arg0;
- (void).cxx_destruct;
- (void)pushViewController:(id)arg0 animated:(BOOL)arg1;
- (id)builder;
- (BOOL)isAnchor;
- (void)setNavigationController:(id)arg0;
- (id)instance;
- (id)navigationController;
- (void)setInstance:(id)arg0;
- (void)setResource:(id)arg0;
- (id)resource;
- (void)messageReceived:(id)arg0;
- (long long)inviteStatus;
- (void)dismissNavigationController;
- (void)setInviteStatus:(long long)arg0;
- (void)setBuilder:(id)arg0;
- (BOOL)isOperator;

@end
