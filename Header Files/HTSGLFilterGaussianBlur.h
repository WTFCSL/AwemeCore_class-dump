//
//     Generated by private class-dump
//

@interface HTSGLFilterGaussianBlur : HTSGLFilterTwoPassSamplingFilter {
    BOOL _shouldResizeBlurRadiusWithImageSize;
    double _blurRadiusInPixels;
    float _verticalPassTexelWidthOffset;
    float _verticalPassTexelHeightOffset;
    float _horizontalPassTexelWidthOffset;
    float _horizontalPassTexelHeightOffset;
    BOOL _enableSubsampling;
    double _texelSpacingMultiplier;
    double _blurRadiusAsFractionOfImageWidth;
    double _blurRadiusAsFractionOfImageHeight;
    unsigned long long _blurPasses;
}

@property (nonatomic) double texelSpacingMultiplier;
@property (nonatomic) double blurRadiusInPixels;
@property (nonatomic) double blurRadiusAsFractionOfImageWidth;
@property (nonatomic) double blurRadiusAsFractionOfImageHeight;
@property (nonatomic) unsigned long long blurPasses;
@property (nonatomic) BOOL enableSubsampling;

+ (id)vertexShaderForOptimizedBlurOfRadius:(unsigned long long)arg0 sigma:(double)arg1;
+ (id)fragmentShaderForOptimizedBlurOfRadius:(unsigned long long)arg0 sigma:(double)arg1;
+ (id)vertexShaderForStandardBlurOfRadius:(unsigned long long)arg0 sigma:(double)arg1;
+ (id)fragmentShaderForStandardBlurOfRadius:(unsigned long long)arg0 sigma:(double)arg1;

- (void)renderToTextureWithVertices:(const float *)arg0 textureCoordinates:(const float *)arg1;
- (void)setupFilterForSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })sizeOfFBO;
- (void)setTexelSpacingMultiplier:(double)arg0;
- (double)blurRadiusAsFractionOfImageWidth;
- (double)blurRadiusAsFractionOfImageHeight;
- (double)blurRadiusInPixels;
- (void)switchToVertexShader:(id)arg0 fragmentShader:(id)arg1;
- (void)setBlurRadiusAsFractionOfImageWidth:(double)arg0;
- (void)setBlurRadiusAsFractionOfImageHeight:(double)arg0;
- (double)texelSpacingMultiplier;
- (unsigned long long)blurPasses;
- (void)setBlurPasses:(unsigned long long)arg0;
- (BOOL)enableSubsampling;
- (void)setEnableSubsampling:(BOOL)arg0;
- (void)setBlurRadiusInPixels:(double)arg0;
- (id)initWithContext:(id)arg0;

@end
