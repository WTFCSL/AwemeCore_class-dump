//
//     Generated by private class-dump
//

@class IESLiveAssetReaderOutput, IESLiveVideoGiftResourceInfo, NSString, MTKView;
@protocol MTLBuffer, IESLiveVideoSRHandlerAction, MTLTexture, MTLCommandQueue, MTLRenderPipelineState;

@interface IESLiveMultiVideoMetalRenderer : NSObject <MTKViewDelegate> {
    BOOL _useDrawTimer;
    BOOL _enableVideoSR;
    BOOL _hasRegenerate;
    int _currentFrame;
    id /* block */ _framePlayDurationCallBack;
    id /* block */ _frameCallBackBeforePlaying;
    id /* block */ _frameCallBackAfterPlaying;
    id /* block */ _frameCallBackAfterCmdBufCommit;
    double _framePlayDuration;
    unsigned long long _numVertices;
    struct __CVMetalTextureCache { } *_textureCache;
    MTKView *_mtkView;
    id /* block */ _process;
    id /* block */ _completion;
    IESLiveAssetReaderOutput *_output;
    IESLiveVideoGiftResourceInfo *_resourceModel;
    id<MTLRenderPipelineState> _videoPipelineState;
    id<MTLRenderPipelineState> _maskPipelineState;
    id<MTLCommandQueue> _commandQueue;
    id<MTLTexture> _texture;
    id<MTLBuffer> _vertices;
    id<MTLBuffer> _convertMatrix;
    id<IESLiveVideoSRHandlerAction> _srHandler;
    unsigned long long _nonFatalErrorReportLimitCount;
    void /* unknown type, empty encoding */ _viewportSize;
    void /* unknown type, empty encoding */ _renderPositionMultiFactor;
}

@property (nonatomic) double framePlayDuration;
@property (nonatomic) int currentFrame;
@property (nonatomic) unsigned long long numVertices;
@property (nonatomic) struct __CVMetalTextureCache { } *textureCache;
@property (nonatomic) void /* unknown type, empty encoding */ viewportSize;
@property (nonatomic) BOOL hasRegenerate;
@property (weak, nonatomic) MTKView *mtkView;
@property (copy, nonatomic) id /* block */ process;
@property (copy, nonatomic) id /* block */ completion;
@property (retain, nonatomic) IESLiveAssetReaderOutput *output;
@property (retain, nonatomic) IESLiveVideoGiftResourceInfo *resourceModel;
@property (retain, nonatomic) id<MTLRenderPipelineState> videoPipelineState;
@property (retain, nonatomic) id<MTLRenderPipelineState> maskPipelineState;
@property (retain, nonatomic) id<MTLCommandQueue> commandQueue;
@property (retain, nonatomic) id<MTLTexture> texture;
@property (retain, nonatomic) id<MTLBuffer> vertices;
@property (retain, nonatomic) id<MTLBuffer> convertMatrix;
@property (retain, nonatomic) id<IESLiveVideoSRHandlerAction> srHandler;
@property (nonatomic) void /* unknown type, empty encoding */ renderPositionMultiFactor;
@property (nonatomic) unsigned long long nonFatalErrorReportLimitCount;
@property (copy, nonatomic) id /* block */ framePlayDurationCallBack;
@property (copy, nonatomic) id /* block */ frameCallBackBeforePlaying;
@property (copy, nonatomic) id /* block */ frameCallBackAfterPlaying;
@property (copy, nonatomic) id /* block */ frameCallBackAfterCmdBufCommit;
@property (nonatomic, getter=isUsingDrawTimer) BOOL useDrawTimer;
@property (nonatomic) BOOL enableVideoSR;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setUseDrawTimer:(BOOL)arg0;
- (void)addNotification;
- (void)setFramePlayDuration:(double)arg0;
- (void)setHasRegenerate:(BOOL)arg0;
- (void)setResourceModel:(id)arg0;
- (void)setupMatrix;
- (void)setupVertex;
- (void)setupMaskResources;
- (void)setNonFatalErrorReportLimitCount:(unsigned long long)arg0;
- (void)drainSampleBufferQueue;
- (double)framePlayDuration;
- (void)setupSR;
- (void)setupVideoPipelineWithLibrary:(id)arg0;
- (void)setupMaskPipelineWithLibrary:(id)arg0;
- (void)setSrHandler:(id)arg0;
- (void)setVideoPipelineState:(id)arg0;
- (void)setMaskPipelineState:(id)arg0;
- (void)setConvertMatrix:(id)arg0;
- (id)resourceModel;
- (id)videoVertexBuffer;
- (id)maskPipelineState;
- (id)vertexBufferWithMask:(id)arg0 resource:(id)arg1;
- (id)convertMatrix;
- (void)_safeCheckRenderPositionMultiFactor;
- (void)didApplicationDidBecomeActive:(id)arg0;
- (id /* block */)frameCallBackBeforePlaying;
- (id)videoPipelineState;
- (BOOL)enableVideoSR;
- (id)srHandler;
- (unsigned long long)nonFatalErrorReportLimitCount;
- (void)drawMasks:(id)arg0 yTexture:(id)arg1 uvTexture:(id)arg2 encoder:(id)arg3;
- (id /* block */)frameCallBackAfterCmdBufCommit;
- (id /* block */)framePlayDurationCallBack;
- (id /* block */)frameCallBackAfterPlaying;
- (BOOL)hasRegenerate;
- (id)initWithMetalKitView:(id)arg0 configuration:(id)arg1;
- (void)renderOutput:(id)arg0 resourceModel:(id)arg1 process:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)renderMTKView;
- (void)setFramePlayDurationCallBack:(id /* block */)arg0;
- (void)setFrameCallBackBeforePlaying:(id /* block */)arg0;
- (void)setFrameCallBackAfterPlaying:(id /* block */)arg0;
- (void)setFrameCallBackAfterCmdBufCommit:(id /* block */)arg0;
- (BOOL)isUsingDrawTimer;
- (void)setEnableVideoSR:(BOOL)arg0;
- (void /* unknown type, empty encoding */)renderPositionMultiFactor;
- (void)setRenderPositionMultiFactor:(SEL)arg0;
- (void)setTexture:(id)arg0;
- (void)drawInMTKView:(id)arg0;
- (void)mtkView:(id)arg0 drawableSizeWillChange:(struct CGSize { double x0; double x1; })arg1;
- (id)texture;
- (id /* block */)completion;
- (void).cxx_destruct;
- (id /* block */)process;
- (void /* unknown type, empty encoding */)viewportSize;
- (void)setCompletion:(id /* block */)arg0;
- (void)setProcess:(id /* block */)arg0;
- (void)setOutput:(id)arg0;
- (id)output;
- (void)setup;
- (void)setTextureCache:(struct __CVMetalTextureCache { } *)arg0;
- (struct __CVMetalTextureCache { } *)textureCache;
- (double)currentTime;
- (void)dealloc;
- (void)seekToTime:(double)arg0;
- (id)commandQueue;
- (void)setCommandQueue:(id)arg0;
- (int)currentFrame;
- (id)mtkView;
- (void)setMtkView:(id)arg0;
- (void)setupPipeline;
- (id)vertices;
- (void)setVertices:(id)arg0;
- (void)setViewportSize:(SEL)arg0;
- (unsigned long long)numVertices;
- (void)setNumVertices:(unsigned long long)arg0;
- (void)setCurrentFrame:(int)arg0;

@end
