//
//     Generated by private class-dump
//

@class AVPlayerItem, LSLiveAudioUnitProcess, AVAudioSession, AVPlayer;
@protocol LSAudioPlayerDelegate;

@interface LSAudioPlayer : NSObject {
    BOOL _isSeeking;
    BOOL _isCanPlay;
    BOOL _needBuffer;
    BOOL _playTaskEnable;
    BOOL _isExpectedPlaying;
    int _type;
    id<LSAudioPlayerDelegate> _delegate;
    double _totalTime;
    double _loadRange;
    long long _index;
    LSLiveAudioUnitProcess *_audioUnitPlayer;
    AVPlayer *_player;
    AVPlayerItem *_currentItem;
    AVAudioSession *_curSession;
    id _timeObser;
    long long _curLoopCount;
    long long _loopCount;
    double _sampleRate;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _pauseTime;
}

@property (retain, nonatomic) AVPlayer *player;
@property (retain, nonatomic) AVPlayerItem *currentItem;
@property (retain, nonatomic) AVAudioSession *curSession;
@property (retain, nonatomic) id timeObser;
@property (nonatomic) BOOL isSeeking;
@property (nonatomic) BOOL isCanPlay;
@property (nonatomic) BOOL needBuffer;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } pauseTime;
@property BOOL playTaskEnable;
@property BOOL isExpectedPlaying;
@property (nonatomic) long long curLoopCount;
@property (nonatomic) long long loopCount;
@property (nonatomic) double sampleRate;
@property (weak, nonatomic) id<LSAudioPlayerDelegate> delegate;
@property (nonatomic) double totalTime;
@property (nonatomic) double loadRange;
@property (nonatomic) long long index;
@property (nonatomic) int type;
@property (retain, nonatomic) LSLiveAudioUnitProcess *audioUnitPlayer;

- (BOOL)isCanPlay;
- (void)videoPlayError:(id)arg0;
- (void)removeNotification;
- (void)setCurLoopCount:(long long)arg0;
- (void)setIsExpectedPlaying:(BOOL)arg0;
- (float)getCurrentPlayTime;
- (long long)curLoopCount;
- (BOOL)isExpectedPlaying;
- (long long)getCurLoop;
- (void)setIsCanPlay:(BOOL)arg0;
- (void)setNeedBuffer:(BOOL)arg0;
- (void)setIsSeeking:(BOOL)arg0;
- (void)setAudioUnitPlayer:(id)arg0;
- (void)useDelegateWith:(long long)arg0;
- (void)creatPlayer:(id)arg0;
- (id)audioUnitPlayer;
- (void)setPlayTaskEnable:(BOOL)arg0;
- (void)setCurSession:(id)arg0;
- (id)curSession;
- (void)startToSeek;
- (void)removeObserverWithPlayItem:(id)arg0;
- (id)getPlayerItem:(id)arg0;
- (void)addObserverWithPlayItem:(id)arg0;
- (void)addNotificatonForPlayer;
- (void)addPlayerObserver;
- (double)loadRange;
- (void)handleStatusWithPlayerItem:(id)arg0;
- (void)handleLoadedTimeRangesWithPlayerItem:(id)arg0;
- (BOOL)needBuffer;
- (void)videoPlayEnd:(id)arg0;
- (void)removePlayerObserver;
- (id)initAUPlayer;
- (void)setupPlayerWith:(id)arg0;
- (void)playOrPause:(id /* block */)arg0;
- (void)seekPlayerTimeTo:(double)arg0;
- (long long)getLoop;
- (float)getTotalPlayTime;
- (void)replacePalyerItem:(id)arg0;
- (void)videoPlayEnterBack:(id)arg0;
- (void)videoPlayBecomeActive:(id)arg0;
- (void)setLoadRange:(double)arg0;
- (id)timeObser;
- (void)setTimeObser:(id)arg0;
- (BOOL)playTaskEnable;
- (void)setIndex:(long long)arg0;
- (id)init;
- (double)totalTime;
- (void)setCurrentItem:(id)arg0;
- (void)resume;
- (void).cxx_destruct;
- (double)sampleRate;
- (void)stop;
- (id)currentItem;
- (int)type;
- (void)setPlayer:(id)arg0;
- (void)setType:(int)arg0;
- (id)delegate;
- (long long)index;
- (void)endSeek;
- (void)restart;
- (BOOL)isPlaying;
- (void)setVolume:(float)arg0;
- (BOOL)isSeeking;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })pauseTime;
- (void)setTotalTime:(double)arg0;
- (id)player;
- (void)setSampleRate:(double)arg0;
- (long long)loopCount;
- (float)getVolume;
- (void)setPauseTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (void)setLoop:(long long)arg0;
- (void)setLoopCount:(long long)arg0;

@end
