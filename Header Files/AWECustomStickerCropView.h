//
//     Generated by private class-dump
//

@class AWECustomStickerCropEditModel, UIView, UIImage, NSString, UIImageView, CAShapeLayer, UIButton, NSMutableArray, UIVisualEffectView;
@protocol AWECustomStickerCropViewDelegate;

@interface AWECustomStickerCropView : UIView <UIScrollViewDelegate, UIGestureRecognizerDelegate> {
    BOOL _isEdited;
    AWECustomStickerCropEditModel *_currentEditModel;
    id<AWECustomStickerCropViewDelegate> _delegate;
    UIImage *_currentImage;
    NSMutableArray *_cancelList;
    NSMutableArray *_redoList;
    UIImageView *_imageView;
    CAShapeLayer *_maskLayer;
    UIVisualEffectView *_effectView;
    CAShapeLayer *_effectLayer;
    UIView *_contentView;
    UIView *_cropView;
    UIImageView *_leftUpArrow;
    UIImageView *_leftDownArrow;
    UIImageView *_rightUpArrow;
    UIImageView *_rightDownArrow;
    UIView *_cropFrameLine;
    UIView *_leftVerticalLine;
    UIView *_rightVerticalLine;
    UIView *_topHorizontalLine;
    UIView *_bottomHorizontalLine;
    UIView *_currentView;
    long long _currentEditType;
    UIButton *_imageFlipBtn;
    UIButton *_imageRotateBtn;
    double _maximumZoomScale;
    struct CGPoint { double x; double y; } _leftUpPoint;
    struct CGPoint { double x; double y; } _leftDownPoint;
    struct CGPoint { double x; double y; } _rightUpPoint;
    struct CGPoint { double x; double y; } _rightDownPoint;
    struct CGPoint { double x; double y; } _prePoint;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _editCompleteRect;
}

@property (retain, nonatomic) UIImageView *imageView;
@property (retain, nonatomic) CAShapeLayer *maskLayer;
@property (retain, nonatomic) UIVisualEffectView *effectView;
@property (retain, nonatomic) CAShapeLayer *effectLayer;
@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) UIView *cropView;
@property (retain, nonatomic) UIImageView *leftUpArrow;
@property (retain, nonatomic) UIImageView *leftDownArrow;
@property (retain, nonatomic) UIImageView *rightUpArrow;
@property (retain, nonatomic) UIImageView *rightDownArrow;
@property (retain, nonatomic) UIView *cropFrameLine;
@property (retain, nonatomic) UIView *leftVerticalLine;
@property (retain, nonatomic) UIView *rightVerticalLine;
@property (retain, nonatomic) UIView *topHorizontalLine;
@property (retain, nonatomic) UIView *bottomHorizontalLine;
@property (retain, nonatomic) UIView *currentView;
@property (nonatomic) long long currentEditType;
@property (nonatomic) struct CGPoint { double x; double y; } leftUpPoint;
@property (nonatomic) struct CGPoint { double x; double y; } leftDownPoint;
@property (nonatomic) struct CGPoint { double x; double y; } rightUpPoint;
@property (nonatomic) struct CGPoint { double x; double y; } rightDownPoint;
@property (nonatomic) struct CGPoint { double x; double y; } prePoint;
@property (retain, nonatomic) UIButton *imageFlipBtn;
@property (retain, nonatomic) UIButton *imageRotateBtn;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } editCompleteRect;
@property (nonatomic) double maximumZoomScale;
@property (nonatomic) BOOL isEdited;
@property (retain, nonatomic) AWECustomStickerCropEditModel *currentEditModel;
@property (weak, nonatomic) id<AWECustomStickerCropViewDelegate> delegate;
@property (retain, nonatomic) UIImage *currentImage;
@property (retain, nonatomic) NSMutableArray *cancelList;
@property (retain, nonatomic) NSMutableArray *redoList;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)pinchGestureHandler:(id)arg0;
- (void)setPrePoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setLeftUpArrow:(id)arg0;
- (id)leftUpArrow;
- (void)setLeftDownArrow:(id)arg0;
- (id)leftDownArrow;
- (void)setRightUpArrow:(id)arg0;
- (id)rightUpArrow;
- (void)setRightDownArrow:(id)arg0;
- (id)rightDownArrow;
- (void)setCropFrameLine:(id)arg0;
- (id)cropFrameLine;
- (void)setLeftVerticalLine:(id)arg0;
- (id)leftVerticalLine;
- (void)setRightVerticalLine:(id)arg0;
- (id)rightVerticalLine;
- (void)setTopHorizontalLine:(id)arg0;
- (id)topHorizontalLine;
- (void)setBottomHorizontalLine:(id)arg0;
- (id)bottomHorizontalLine;
- (id)effectLayer;
- (void)imageSpringBack;
- (void)completeCrop;
- (struct CGPoint { double x0; double x1; })prePoint;
- (void)updateMaskLayerPathWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setEffectLayer:(id)arg0;
- (long long)currentEditType;
- (void)setCurrentEditType:(long long)arg0;
- (void)setEditCompleteRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editCompleteRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getImageFrameWithImage:(id)arg0 andRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)setupCropView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setImageFlipBtn:(id)arg0;
- (id)imageFlipBtn;
- (void)clickOnImageFlipBtn;
- (void)setImageRotateBtn:(id)arg0;
- (id)imageRotateBtn;
- (void)clickOnImageRotateBtn;
- (void)setCurrentEditModel:(id)arg0;
- (id)cancelList;
- (void)setCancelList:(id)arg0;
- (id)redoList;
- (void)setRedoList:(id)arg0;
- (id)currentEditModel;
- (void)saveEditModelWithRotatingAngle:(double)arg0 realAngle:(double)arg1 isFlipped:(BOOL)arg2;
- (void)zoomCropView;
- (void)showEditUI;
- (void)setLeftUpPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setLeftDownPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setRightUpPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)setRightDownPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)hideEditUI;
- (struct CGPoint { double x0; double x1; })leftUpPoint;
- (struct CGPoint { double x0; double x1; })leftDownPoint;
- (struct CGPoint { double x0; double x1; })rightUpPoint;
- (struct CGPoint { double x0; double x1; })rightDownPoint;
- (void)addAnimationToMaskWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)initWithImage:(id)arg0 isFlipped:(BOOL)arg1 rotatingAngle:(double)arg2;
- (id)getCroppedImage;
- (void)cancelLastEdit;
- (void)redoLastEdit;
- (void)resetEditWithImage:(id)arg0;
- (void)setMaximumZoomScale:(double)arg0;
- (id)effectView;
- (void).cxx_destruct;
- (id)currentImage;
- (id)imageView;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (void)setImageView:(id)arg0;
- (id)contentView;
- (id)delegate;
- (void)setEffectView:(id)arg0;
- (double)maximumZoomScale;
- (void)setDelegate:(id)arg0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })arg0 withEvent:(id)arg1;
- (void)setContentView:(id)arg0;
- (id)maskLayer;
- (void)panGestureHandler:(id)arg0;
- (void)setMaskLayer:(id)arg0;
- (void)setCurrentImage:(id)arg0;
- (id)cropView;
- (void)setCropView:(id)arg0;
- (BOOL)isEdited;
- (id)currentView;
- (void)setCurrentView:(id)arg0;
- (void)tapGestureHandler:(id)arg0;
- (void)setIsEdited:(BOOL)arg0;

@end
