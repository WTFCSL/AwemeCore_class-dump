//
//     Generated by private class-dump
//

@interface AWERxStoreManager : NSObject {
    struct unordered_map<AWERxModule *, id<AWERxStoreProtocol>, RxModuleHash, RxModuleEqual, std::allocator<std::pair<AWERxModule *const, id<AWERxStoreProtocol>>>> { struct __hash_table<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, std::__unordered_map_hasher<AWERxModule *, std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleHash, RxModuleEqual>, std::__unordered_map_equal<AWERxModule *, std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleEqual, RxModuleHash>, std::allocator<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> *>>> { void **__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<AWERxModule *, std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleHash, RxModuleEqual>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<AWERxModule *, std::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleEqual, RxModuleHash>> { float __value_; } __p3_; } __table_; } m_map;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } m_lock;
}

+ (id)registerStore:(id)arg0 forModule:(id)arg1;
+ (id)storeOfModule:(id)arg0;

- (void).cxx_destruct;
- (id).cxx_construct;

@end
