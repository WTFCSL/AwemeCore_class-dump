//
//     Generated by private class-dump
//

@class BDPOpenPlatformAlertControllerLogic, BDPBatchPermissionAuthorizer, BDPSubscribe;

@interface BDPPluginAuthorization : BDPBridgeInstancePlugin {
    BDPOpenPlatformAlertControllerLogic *_alertLogic;
    BDPBatchPermissionAuthorizer *_batchPermissionAuthorizer;
    BDPSubscribe *_subs;
}

@property (retain, nonatomic) BDPOpenPlatformAlertControllerLogic *alertLogic;
@property (retain, nonatomic) BDPBatchPermissionAuthorizer *batchPermissionAuthorizer;

- (void)setAlertLogic:(id)arg0;
- (BOOL)shouldUseCombineAuthorizeForAppID:(id)arg0;
- (id)batchPermissionAuthorizer;
- (void)setBatchPermissionAuthorizer:(id)arg0;
- (id)alertLogic;
- (void)authorizeWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)showDouyinOpenAuthWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)openSettingWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)getSettingWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (BOOL)hasUseOpenUserInfo:(id)arg0;
- (BOOL)hasUseWalletAccount:(id)arg0;
- (void)trackRequestOpenAuthWithUniqueID:(id)arg0 Stage:(BOOL)arg1 WithError:(id)arg2;
- (void)p_addLifeServiceInfoForResultDict:(id)arg0 uniqueID:(id)arg1;
- (void)p_addSubscribeInfoForResultDict:(id)arg0 uniqueID:(id)arg1 completion:(id /* block */)arg2;
- (void)innerRecordAuthorizeResultWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)requirePrivacyAuthorizeWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)openPrivacyContractWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)getPrivacySettingWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (void)innerAuthorizePrivacyContractWithParam:(id)arg0 callback:(id /* block */)arg1 instance:(id)arg2;
- (id)init;
- (void).cxx_destruct;

@end
