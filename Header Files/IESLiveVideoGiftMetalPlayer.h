//
//     Generated by private class-dump
//

@class NSError, UIView, IESLiveMultiVideoGiftMetalView, NSString, IESLiveVideoGiftResourceInfo, IESLiveAssetReaderOutput, IESLiveVideoGiftMetalConfiguration, NSObject;
@protocol OS_dispatch_queue, IESLiveVideoGiftMetalPlayerDelegate, IESLiveVideoGiftAudioPlayerProtocol;

@interface IESLiveVideoGiftMetalPlayer : NSObject <IESLiveVideoGiftAudioPlayerDelegate> {
    NSError *_renderError;
    id<IESLiveVideoGiftMetalPlayerDelegate> _delegate;
    unsigned long long _playerType;
    IESLiveAssetReaderOutput *_readerOutput;
    IESLiveVideoGiftResourceInfo *_model;
    IESLiveVideoGiftMetalConfiguration *_config;
    IESLiveMultiVideoGiftMetalView *_videoGiftMetalView;
    id<IESLiveVideoGiftAudioPlayerProtocol> _audioPlayer;
    NSObject<OS_dispatch_queue> *_audioPlaybackQueue;
}

@property (retain, nonatomic) IESLiveVideoGiftResourceInfo *model;
@property (retain, nonatomic) IESLiveVideoGiftMetalConfiguration *config;
@property (retain, nonatomic) IESLiveMultiVideoGiftMetalView *videoGiftMetalView;
@property (retain, nonatomic) NSError *renderError;
@property (retain, nonatomic) id<IESLiveVideoGiftAudioPlayerProtocol> audioPlayer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *audioPlaybackQueue;
@property (readonly, nonatomic) UIView *view;
@property (weak, nonatomic) id<IESLiveVideoGiftMetalPlayerDelegate> delegate;
@property (nonatomic) unsigned long long playerType;
@property (retain, nonatomic) IESLiveAssetReaderOutput *readerOutput;
@property (nonatomic) unsigned long long contentMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)updateWithModel:(id)arg0 config:(id)arg1 delegate:(id)arg2 type:(unsigned long long)arg3 existAudio:(BOOL)arg4;
- (id)renderError;
- (void)startPlayAudioResources;
- (id)readerOutput;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mtkViewFrame;
- (void)renderMTKView;
- (void)audioPlayer:(id)arg0 prepareWithSampleRate:(double)arg1 channels:(unsigned int)arg2;
- (void)audioPlayer:(id)arg0 processAudioFrameWithRawData:(float **)arg1 samples:(int)arg2 timestamp:(long long)arg3;
- (void)audioPlayer:(id)arg0 didOccurError:(id)arg1;
- (void)setPlayerType:(unsigned long long)arg0;
- (void)setVideoGiftMetalView:(id)arg0;
- (id)videoGiftMetalView;
- (void)createAudioPlayBackQueueIfNeeded;
- (void)pr_configRenderViewContentModeFromModel;
- (void)pr_updateWithModel:(BOOL)arg0;
- (void)pauseAudioPlayerIfNeeded;
- (void)resumeAudioPlayerIfNeeded;
- (void)_startPlayAudioResources;
- (void)seekAudioPlayerToTimeIfNeeded:(double)arg0;
- (void)stopAudioPlayerIfNeeded;
- (void)startPlayAudioPlayerFromBeginning;
- (void)setReaderOutput:(id)arg0;
- (void)pr_didFinishPlayingWithError:(id)arg0;
- (id)audioPlaybackQueue;
- (void)reportAt:(unsigned long long)arg0 sceneError:(id)arg1;
- (void)pr_playingWithNonFatalError:(id)arg0;
- (void)setRenderError:(id)arg0;
- (void)setAudioPlaybackQueue:(id)arg0;
- (double)totalDurationOfPlayingEffect;
- (void)setModel:(id)arg0;
- (void)setContentMode:(unsigned long long)arg0;
- (void)setConfig:(id)arg0;
- (void)resume;
- (void).cxx_destruct;
- (id)audioPlayer;
- (id)model;
- (id)config;
- (void)destroy;
- (id)delegate;
- (double)currentTime;
- (void)setAudioPlayer:(id)arg0;
- (void)setDelegate:(id)arg0;
- (void)pause;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (void)seekToTime:(double)arg0;
- (id)view;
- (unsigned long long)contentMode;
- (unsigned long long)playerType;

@end
