//
//     Generated by private class-dump
//

@class XIGDanmakuItemDescriptor, NSMutableArray, XIGDanmakuContainerView;
@protocol XIGDanmakuRenderContext;

@interface XIGDanmakuBaseTrack : NSObject <XIGDanmakuTrack> {
    NSMutableArray *_displayingDanmakusArray;
    id<XIGDanmakuRenderContext> _renderContext;
    XIGDanmakuContainerView *_canvas;
    XIGDanmakuItemDescriptor *_bookedDanmaku;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
}

@property (retain, nonatomic) NSMutableArray *displayingDanmakusArray;
@property (weak, nonatomic) id<XIGDanmakuRenderContext> renderContext;
@property (weak, nonatomic) XIGDanmakuContainerView *canvas;
@property (retain, nonatomic) XIGDanmakuItemDescriptor *bookedDanmaku;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;

- (void)unloadDanmaku:(id)arg0;
- (void)addDanmaku:(id)arg0;
- (void)setBookedDanmaku:(id)arg0;
- (void)removeAllDanmakus;
- (void)updateWithPassingTime:(double)arg0;
- (void)bookDanmakuIfNeed;
- (void)bookingDanmaku:(id)arg0;
- (void)removeDanmaku:(id)arg0;
- (BOOL)containsDanmaku:(id)arg0;
- (void)removeBookDanmaku;
- (void)redisplayDanmakus;
- (BOOL)canBookDanmaku:(id)arg0;
- (void)didDestory;
- (void)setDisplayingDanmakusArray:(id)arg0;
- (id)displayingDanmakusArray;
- (double)calculateLifeTimeForDanmakuDescriptor:(id)arg0;
- (void)layoutDidChanged;
- (void)updateDanmakuDescritor:(id)arg0;
- (id)bookedDanmaku;
- (BOOL)canAddDanmaku:(id)arg0;
- (void)danmakuContentSizeDidChanged:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)didDisappear;
- (id)renderContext;
- (void)setCanvas:(id)arg0;
- (id)trackType;
- (void)didAppear;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)canvas;
- (void)setRenderContext:(id)arg0;

@end
