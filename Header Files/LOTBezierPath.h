//
//     Generated by private class-dump
//

@interface LOTBezierPath : NSObject {
    struct LOT_Subpath { int x0; double x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct LOT_Subpath *x5; } *headSubpath_;
    struct LOT_Subpath { int x0; double x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct LOT_Subpath *x5; } *tailSubpath_;
    struct CGPoint { double x; double y; } subpathStartPoint_;
    double *_lineDashPattern;
    long long _lineDashCount;
    double _lineDashPhase;
    struct CGPath { } *_path;
    BOOL _cacheLengths;
    BOOL _usesEvenOddFillRule;
    int _lineCapStyle;
    int _lineJoinStyle;
    double _length;
    double _lineWidth;
    double _miterLimit;
    double _flatness;
}

@property (readonly, nonatomic) struct LOT_Subpath { int x0; double x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct LOT_Subpath *x5; } *headSubpath;
@property (nonatomic) BOOL cacheLengths;
@property (readonly, nonatomic) double length;
@property (readonly, nonatomic) const struct CGPath { } *CGPath;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } currentPoint;
@property (nonatomic) double lineWidth;
@property (nonatomic) int lineCapStyle;
@property (nonatomic) int lineJoinStyle;
@property (nonatomic) double miterLimit;
@property (nonatomic) double flatness;
@property (nonatomic) BOOL usesEvenOddFillRule;
@property (readonly, getter=isEmpty) BOOL empty;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;

+ (id)newPath;
+ (id)pathWithCGPath:(struct CGPath { } *)arg0;

- (void)LOT_appendPath:(id)arg0;
- (void)setWithCGPath:(struct CGPath { } *)arg0;
- (void)removeAllSubpaths;
- (BOOL)cacheLengths;
- (void)setCacheLengths:(BOOL)arg0;
- (void)addSubpathWithType:(int)arg0 length:(double)arg1 endPoint:(struct CGPoint { double x0; double x1; })arg2 controlPoint1:(struct CGPoint { double x0; double x1; })arg3 controlPoint1:(struct CGPoint { double x0; double x1; })arg4;
- (void)_clearPathData;
- (struct LOT_Subpath { int x0; double x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct LOT_Subpath *x5; } *)headSubpath;
- (void)LOT_removeAllPoints;
- (void)LOT_moveToPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)LOT_addLineToPoint:(struct CGPoint { double x0; double x1; })arg0;
- (void)LOT_addCurveToPoint:(struct CGPoint { double x0; double x1; })arg0 controlPoint1:(struct CGPoint { double x0; double x1; })arg1 controlPoint2:(struct CGPoint { double x0; double x1; })arg2;
- (void)LOT_closePath;
- (void)lot_enumeratePath:(struct CGPath { } *)arg0 elementsUsingBlock:(id /* block */)arg1;
- (void)LOT_applyTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (void)trimPathFromT:(double)arg0 toT:(double)arg1 offset:(double)arg2;
- (id)init;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (double)lineWidth;
- (double)length;
- (void)setLineWidth:(double)arg0;
- (BOOL)isEmpty;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)dealloc;
- (struct CGPoint { double x0; double x1; })currentPoint;
- (BOOL)containsPoint:(struct CGPoint { double x0; double x1; })arg0;
- (double)miterLimit;
- (void)setMiterLimit:(double)arg0;
- (const struct CGPath { } *)CGPath;
- (int)lineCapStyle;
- (void)setLineCapStyle:(int)arg0;
- (int)lineJoinStyle;
- (void)setLineJoinStyle:(int)arg0;
- (double)flatness;
- (void)setFlatness:(double)arg0;
- (BOOL)usesEvenOddFillRule;
- (void)setUsesEvenOddFillRule:(BOOL)arg0;

@end
