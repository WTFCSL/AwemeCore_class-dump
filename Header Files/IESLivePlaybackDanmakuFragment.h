//
//     Generated by private class-dump
//

@class NSString, IESLivePlaybackDanmakuContentView, NSObject;
@protocol IESLivePlaybackDanmakuComponentManagerProtocol, IESLivePlaybackDanmakuStoreProtocol, IESLivePlaybackDanmakuSettingFragmentProtocol, IESLivePlaybackDanmakuEngineAdapter, IESLiveEmojiTextParserAdapter, OS_dispatch_queue, IESLivePlaybackDanmakuFilterSerivce;

@interface IESLivePlaybackDanmakuFragment : IESLivePlaybackComponent <IESLivePlaybackDanmakuActions, IESLivePlaybackDanmakuViewAction, IESLivePlaybackCommentAction, IESLivePlaybackCustomAutoHideAnimService, IESLiveAirPlayAction, IESLivePlaybackAutoRotateAction, IESVSVideoPlayAction, IESLivePlaybackDanmakuProvider, IESLivePlaybackRoomAction, IESLivePlaybackComponentLifeCycle> {
    BOOL _danmakuPaused;
    BOOL _componentDisappear;
    BOOL _componentFirstAppear;
    BOOL _orientationTipsDidShow;
    BOOL _enableDanmakuBeforeScreenCast;
    NSObject<IESLivePlaybackDanmakuStoreProtocol> *_store;
    NSObject<IESLivePlaybackDanmakuEngineAdapter> *_danmukuEngine;
    NSObject<IESLivePlaybackDanmakuSettingFragmentProtocol> *_danmakuSettingFragment;
    IESLivePlaybackDanmakuContentView *_danmakuContainerView;
    NSObject<IESLiveEmojiTextParserAdapter> *_emoticonParser;
    long long _orientation;
    NSObject<OS_dispatch_queue> *_danmuProcessQueue;
    id<IESLivePlaybackDanmakuFilterSerivce> _danmakuFilterService;
    NSObject<IESLivePlaybackDanmakuComponentManagerProtocol> *_componentManager;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _videoFrame;
}

@property (retain, nonatomic) NSObject<IESLivePlaybackDanmakuStoreProtocol> *store;
@property (retain, nonatomic) NSObject<IESLivePlaybackDanmakuEngineAdapter> *danmukuEngine;
@property (retain, nonatomic) NSObject<IESLivePlaybackDanmakuSettingFragmentProtocol> *danmakuSettingFragment;
@property (retain, nonatomic) IESLivePlaybackDanmakuContentView *danmakuContainerView;
@property (retain, nonatomic) NSObject<IESLiveEmojiTextParserAdapter> *emoticonParser;
@property (nonatomic) long long orientation;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } videoFrame;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *danmuProcessQueue;
@property (nonatomic) BOOL danmakuPaused;
@property (nonatomic) BOOL componentDisappear;
@property (nonatomic) BOOL componentFirstAppear;
@property (nonatomic) BOOL orientationTipsDidShow;
@property (weak, nonatomic) id<IESLivePlaybackDanmakuFilterSerivce> danmakuFilterService;
@property (retain, nonatomic) NSObject<IESLivePlaybackDanmakuComponentManagerProtocol> *componentManager;
@property (nonatomic) BOOL enableDanmakuBeforeScreenCast;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setVideoFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setComponentManager:(id)arg0;
- (void)bindViewModel;
- (void)componentDidMount;
- (void)componentDidAppear;
- (void)componentDidDisappear;
- (id)danmakuContainerView;
- (void)componentBindService;
- (id)danmakuView;
- (void)componentOrientationChanged:(long long)arg0;
- (void)setDanmakuContainerView:(id)arg0;
- (void)willAutoRotateToOrientation:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (void)didAutoRotateToOrientation:(long long)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (void)landscapeViewsTransformToHidden:(BOOL)arg0;
- (void)portraitViewsTransformToHidden:(BOOL)arg0;
- (void)airplayStateDidChange:(BOOL)arg0;
- (void)onAirplayPlay;
- (void)onAirplayPause;
- (void)addDanmakuNodeWithMessage:(id)arg0;
- (void)showDanmakuSettingPanel;
- (void)setDanmakuContentViewAlpha:(double)arg0 withAnimation:(BOOL)arg1;
- (void)cleanDanmakuQueue;
- (void)danmakuShowInScreenWithNode:(id)arg0;
- (id)emoticonParser;
- (void)setEmoticonParser:(id)arg0;
- (id)danmukuEngine;
- (void)danmakuDisplayInWeak:(BOOL)arg0;
- (void)setupEmoticonTextParser;
- (void)setDanmuProcessQueue:(id)arg0;
- (id)danmuProcessQueue;
- (void)setDanmukuEngine:(id)arg0;
- (void)cleanDanmaku;
- (void)pauseDanmaku;
- (void)resumeDanmaku;
- (BOOL)isCurrentUserEnableNormalDanmaku;
- (void)danmaku:(id)arg0 didTouch:(id)arg1;
- (void)danmaku:(id)arg0 addMessage:(id)arg1;
- (void)danmaku:(id)arg0 reportMessage:(id)arg1;
- (void)didUpdatePlaybackEpisode:(id)arg0;
- (void)onRotateOrientationTipsShow;
- (void)onRotateOrientationTipsDismiss;
- (void)commentDidStart;
- (void)commentDidEnd;
- (BOOL)usePadNewStyle;
- (void)onVideoPlay;
- (void)onVideoPause;
- (void)onVideoFrameChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setComponentDisappear:(BOOL)arg0;
- (void)setComponentFirstAppear:(BOOL)arg0;
- (id)danmakuSettingFragment;
- (void)resetDanmukuContainer:(long long)arg0;
- (void)prepareForDanmakuSetting;
- (BOOL)danmakuPaused;
- (void)p_updateDanmakuOrientation:(long long)arg0;
- (void)setEnableDanmakuBeforeScreenCast:(BOOL)arg0;
- (BOOL)enableDanmakuBeforeScreenCast;
- (BOOL)p_enableDanmuNode;
- (void)addNormalDanmukuNodeWith:(id)arg0;
- (void)addWelcomeDanmukuNodeWith:(id)arg0;
- (void)setOrientationTipsDidShow:(BOOL)arg0;
- (void)setDanmakuPaused:(BOOL)arg0;
- (BOOL)componentDisappear;
- (void)phone_resetDanmukuContainer:(long long)arg0;
- (void)p_addNormalDanmukuNodeWith:(id)arg0 onQueue:(BOOL)arg1;
- (id)danmakuFilterService;
- (void)componentDidLayout;
- (void)p_addWelcomeDanmukuNodeWith:(id)arg0 onQueue:(BOOL)arg1;
- (void)setDanmakuSettingFragment:(id)arg0;
- (BOOL)componentFirstAppear;
- (BOOL)orientationTipsDidShow;
- (void)setDanmakuFilterService:(id)arg0;
- (void).cxx_destruct;
- (id)store;
- (long long)orientation;
- (void)setup;
- (void)setStore:(id)arg0;
- (void)setOrientation:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoFrame;
- (id)componentManager;

@end
