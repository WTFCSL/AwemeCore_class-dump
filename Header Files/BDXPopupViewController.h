//
//     Generated by private class-dump
//

@class NSTimer, NSString, UIView, BDXContext, BDXPopupViewContainer, BDXSchemaParam, NSDictionary, NSURL, NSMutableArray, NSNumber, UIColor;
@protocol BDXContainerLifecycleProtocol, BDXPopupSchemaParamProtocol, BDXKitViewProtocol, BDXPopupEventProtocol, BDXPoolContainerDelegate;

@interface BDXPopupViewController : UIViewController <UIGestureRecognizerDelegate, BDXContainerLifecycleProtocol, BDXBridgeCloseProtocol, BDXBridgeReloadProtocol, BDXPopupContainerProtocol, BDXPoolContainerProtocol, BDXTopLevelProtocol, BDXBridgeHideLoadingProtocol> {
    NSNumber *_topLevelEnable;
    BOOL _hybridInBackground;
    BOOL _hybridAppeared;
    BOOL _didMount;
    BOOL _destroyed;
    BOOL _isContainerReady;
    BOOL _isPageReady;
    BOOL _hasExecuteOnShow;
    BOOL _isContainerLoadFailed;
    BOOL _preControllerPopGestureRecongnizerEnabled;
    BOOL _frameForKeyboardRecorded;
    BOOL _pauseGestureSizeEvent;
    BOOL _userInteractionEnabled;
    BOOL _animationCompleted;
    BOOL _dragUppingIsValid;
    BOOL _isAnimating;
    BOOL _dragInMaxHeight;
    BOOL _handleTouchFinish;
    BDXContext *_context;
    id<BDXContainerLifecycleProtocol> _containerLifecycleDelegate;
    id<BDXPopupEventProtocol> _popupEventDelegate;
    id<BDXPoolContainerDelegate> _poolContainerDelegate;
    NSString *engineType;
    NSString *sessionID;
    id /* block */ _completion;
    double _alpha;
    long long _statusBarStyle;
    long long _originStatusBarStyle;
    long long _lastTopVCStatusBarStyle;
    UIColor *_originStatusBarBackgroundColor;
    UIView *_statusBarBackgroundView;
    UIView *_clickCloseView;
    UIView *_halfScreenContainerView;
    NSMutableArray *_pageReadyBlockList;
    NSMutableArray *_containerReadyBlockList;
    NSMutableArray *_containerLoadFailedBlockList;
    NSDictionary *_closeParams;
    NSString *_closePopContainerId;
    NSTimer *_timer;
    BDXSchemaParam<BDXPopupSchemaParamProtocol> *_config;
    BDXPopupViewContainer *_viewContainer;
    long long _currentStatus;
    UIView *_maskView;
    double _halfToFullScreenOriginalY;
    double _finalDragUppingSpace;
    double _dragUppingYThreshold;
    double _overDraggedY;
    struct CGSize { double width; double height; } _preferredLayoutSize;
    struct CGPoint { double x; double y; } _panStartLocation;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frameBeforeAdjustKeyboard;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _frame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _initialFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _finalFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _panStartFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _dragHeightFrame;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double alpha;
@property (nonatomic) BOOL destroyed;
@property (nonatomic) BOOL isContainerReady;
@property (nonatomic) BOOL isPageReady;
@property (nonatomic) BOOL hasExecuteOnShow;
@property (nonatomic) BOOL isContainerLoadFailed;
@property (nonatomic) long long statusBarStyle;
@property (nonatomic) long long originStatusBarStyle;
@property (nonatomic) long long lastTopVCStatusBarStyle;
@property (retain, nonatomic) UIColor *originStatusBarBackgroundColor;
@property (retain, nonatomic) UIView *statusBarBackgroundView;
@property (retain, nonatomic) UIView *clickCloseView;
@property (retain, nonatomic) UIView *halfScreenContainerView;
@property (retain, nonatomic) NSMutableArray *pageReadyBlockList;
@property (retain, nonatomic) NSMutableArray *containerReadyBlockList;
@property (retain, nonatomic) NSMutableArray *containerLoadFailedBlockList;
@property (nonatomic) BOOL preControllerPopGestureRecongnizerEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frameBeforeAdjustKeyboard;
@property (nonatomic) BOOL frameForKeyboardRecorded;
@property (copy, nonatomic) NSDictionary *closeParams;
@property (retain, nonatomic) NSString *closePopContainerId;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) BOOL pauseGestureSizeEvent;
@property (retain, nonatomic) BDXSchemaParam<BDXPopupSchemaParamProtocol> *config;
@property (retain, nonatomic) BDXPopupViewContainer *viewContainer;
@property (nonatomic) BOOL userInteractionEnabled;
@property (nonatomic) BOOL animationCompleted;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } initialFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } finalFrame;
@property (nonatomic) long long currentStatus;
@property (retain, nonatomic) UIView *maskView;
@property (nonatomic) struct CGPoint { double x; double y; } panStartLocation;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } panStartFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } dragHeightFrame;
@property (nonatomic) double halfToFullScreenOriginalY;
@property (nonatomic) BOOL dragUppingIsValid;
@property (nonatomic) double finalDragUppingSpace;
@property (nonatomic) double dragUppingYThreshold;
@property (nonatomic) double overDraggedY;
@property (nonatomic) BOOL isAnimating;
@property (nonatomic) BOOL dragInMaxHeight;
@property (nonatomic) BOOL handleTouchFinish;
@property (copy, nonatomic) id /* block */ completion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<BDXPopupEventProtocol> popupEventDelegate;
@property (readonly, nonatomic) long long viewType;
@property (retain, nonatomic) BDXContext *context;
@property (nonatomic) BOOL hybridInBackground;
@property (nonatomic) BOOL hybridAppeared;
@property (weak, nonatomic) id<BDXContainerLifecycleProtocol> containerLifecycleDelegate;
@property (nonatomic) BOOL didMount;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, nonatomic) NSURL *originURL;
@property (readonly, nonatomic) struct CGSize { double width; double height; } preferredLayoutSize;
@property (readonly, copy, nonatomic) NSString *containerID;
@property (readonly, nonatomic) UIView<BDXKitViewProtocol> *kitView;
@property (readonly, copy, nonatomic) NSString *engineType;
@property (weak, nonatomic) id<BDXPoolContainerDelegate> poolContainerDelegate;

+ (id)mainAppWindow;
+ (BOOL)isHitRouterDowngrade:(id)arg0;
+ (id)createWithConfiguration:(id)arg0 context:(id)arg1 url:(id)arg2 completion:(id /* block */)arg3;
+ (id)openWithConfiguration:(id)arg0 context:(id)arg1 completion:(id /* block */)arg2;
+ (void)showContainerWithContext:(id)arg0 config:(id)arg1 vc:(id)arg2 completion:(id /* block */)arg3;
+ (id)findTopVc:(id)arg0;

- (void)container:(id)arg0 didFinishLoadWithURL:(id)arg1;
- (void)container:(id)arg0 didLoadFailedWithUrl:(id)arg1 error:(id)arg2;
- (void)containerDidPageReady:(id)arg0 sourceParam:(id)arg1;
- (void)container:(id)arg0 didChangeIntrinsicContentSize:(struct CGSize { double x0; double x1; })arg1;
- (void)container:(id)arg0 onKeyBoardChange:(id)arg1 eventType:(unsigned long long)arg2;
- (BOOL)hybridInBackground;
- (void)setHybridInBackground:(BOOL)arg0;
- (BOOL)hybridAppeared;
- (void)setHybridAppeared:(BOOL)arg0;
- (id)containerLifecycleDelegate;
- (BOOL)didMount;
- (void)setDidMount:(BOOL)arg0;
- (void)handleViewDidAppear;
- (void)handleBecomeActive;
- (void)handleResignActive;
- (void)registerXBridgeMethod:(id)arg0;
- (id)viewControllerOfContainer;
- (void)showContainerVc;
- (id)getViewContainer;
- (void)removeKitView;
- (void)resetKitView;
- (struct CGSize { double x0; double x1; })preferredLayoutSize;
- (id)kitView;
- (void)loadWithURL:(id)arg0 context:(id)arg1;
- (void)setContainerLifecycleDelegate:(id)arg0;
- (id)popupEventDelegate;
- (void)setPopupEventDelegate:(id)arg0;
- (BOOL)close:(id)arg0 animated:(BOOL)arg1;
- (void)closeWithParams:(id)arg0 animated:(BOOL)arg1 completion:(id /* block */)arg2;
- (BOOL)close:(id)arg0 completion:(id /* block */)arg1;
- (BOOL)close:(id)arg0 animated:(BOOL)arg1 completion:(id /* block */)arg2;
- (void)popupShowAnimationFinished;
- (void)adjustHeightWithHeightPercent:(id)arg0 animated:(BOOL)arg1 draggable:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)popupShow;
- (void)setStatusBarBackgroundColor:(id)arg0;
- (void)__setupNotification;
- (void)setOriginStatusBarStyle:(long long)arg0;
- (long long)originStatusBarStyle;
- (id)hmdPageExtension;
- (void)setTopLevelEnable:(id)arg0;
- (id)topLevelEnable;
- (BOOL)isIpadPortraitMode;
- (BOOL)hasRightOrBottomMargin;
- (double)upStatusBarHeight;
- (void)setIsContainerReady:(BOOL)arg0;
- (BOOL)isContainerReady;
- (void)__resetStatusBarStyle;
- (id)originStatusBarBackgroundColor;
- (void)bdx_closeWithAnimated:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)handleKeyboardWillHideNotification:(id)arg0;
- (BOOL)bdx_shouldUseCustomClose;
- (void)bdx_jsbReloadView;
- (void)handleWhenClosing;
- (void)setPoolContainerDelegate:(id)arg0;
- (void)setPanStartFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })panStartFrame;
- (id)closeParams;
- (void)setCloseParams:(id)arg0;
- (void)handleXBridgeHideLoadingMethod;
- (void)setAnimationCompleted:(BOOL)arg0;
- (void)removeSelf:(id)arg0 completion:(id /* block */)arg1;
- (void)setDragInMaxHeight:(BOOL)arg0;
- (void)panOnContainer:(id)arg0;
- (BOOL)dragInMaxHeight;
- (BOOL)isWebcastBussiness;
- (void)didHalfToFullScreenGesture:(id)arg0;
- (void)handleDragEvent:(id)arg0;
- (void)handleCloseEvent:(id)arg0;
- (struct CGPoint { double x0; double x1; })panStartLocation;
- (void)setPanStartLocation:(struct CGPoint { double x0; double x1; })arg0;
- (BOOL)checkCloseLimit:(id)arg0 offsetX:(double)arg1 offsetY:(double)arg2;
- (void)resizeWithAnimation:(BOOL)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1 completion:(id /* block */)arg2;
- (void)setHandleTouchFinish:(BOOL)arg0;
- (void)setOverDraggedY:(double)arg0;
- (void)handleDragBack;
- (void)handleDragEnd:(id)arg0 offsetY:(double)arg1;
- (void)handleDragChanged:(double)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })dragHeightFrame;
- (void)changeScreenViewsAlpha:(double)arg0 ignoreHalfCloseBtn:(BOOL)arg1;
- (BOOL)handleTouchFinish;
- (BOOL)dragUppingIsValid;
- (double)finalDragUppingSpace;
- (double)overDraggedY;
- (BOOL)enableDragUpping;
- (double)dragUppingYThreshold;
- (void)resize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 fromGesture:(BOOL)arg1;
- (void)setHalfToFullScreenOriginalY:(double)arg0;
- (double)halfToFullScreenOriginalY;
- (BOOL)shouldIgnoreHalfCloseBtnAlpha;
- (void)updateHalfScreenButtonsTopOffset;
- (void)updateBackButtonAlpha;
- (id)iPadRatio;
- (id)ipadConfig;
- (struct CGSize { double x0; double x1; })ipadContainerSize;
- (BOOL)enbleIpadAdapter;
- (void)updateMetrixScreenSize;
- (void)setupIpadConfig;
- (void)layoutIpadIfNeeded;
- (BOOL)isPageReady;
- (id)pageReadyBlockList;
- (id)containerLoadFailedBlockList;
- (void)__createContentViewIfNeeded;
- (BOOL)isContainerLoadFailed;
- (id)initWithConfig:(id)arg0 context:(id)arg1 lastTopVCStatusBarStyle:(long long)arg2;
- (void)setPreControllerPopGestureRecongnizerEnabled:(BOOL)arg0;
- (id)__makeSetContainerMethod;
- (void)setClosePopContainerId:(id)arg0;
- (BOOL)preControllerPopGestureRecongnizerEnabled;
- (void)__setupUIConfig;
- (void)__addLoadingViewIfNeeded;
- (BOOL)__isCachedViewAlreadLoad;
- (void)__setPopUpRadius;
- (id)containerReadyBlockList;
- (BOOL)frameForKeyboardRecorded;
- (void)setFrameBeforeAdjustKeyboard:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setFrameForKeyboardRecorded:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustedFrameWithKeyboardFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setOriginStatusBarBackgroundColor:(id)arg0;
- (void)sendPopupCloseEvent:(id)arg0 params:(id)arg1;
- (void)setHasExecuteOnShow:(BOOL)arg0;
- (void)__updateStatusBarStatusWithConfig:(id)arg0;
- (void)handleTapOnMask;
- (id)clickCloseView;
- (void)addStatusBarContainerView;
- (id)closePopContainerId;
- (void)updateWebcastLayout;
- (void)setDragHeightFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setFinalDragUppingSpace:(double)arg0;
- (void)setDragUppingYThreshold:(double)arg0;
- (void)setDragUppingIsValid:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameBeforeAdjustKeyboard;
- (void)handleTapOnSelf:(id)arg0;
- (void)setIsContainerLoadFailed:(BOOL)arg0;
- (BOOL)isHalfScreenHeight:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)isFullScreenHeight:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)sendSizeChangeEvent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 fromGesture:(BOOL)arg1;
- (BOOL)pauseGestureSizeEvent;
- (void)setPauseGestureSizeEvent:(BOOL)arg0;
- (void)noticeAnimateFrameChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)resizeWithAnimation:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 completion:(id /* block */)arg1;
- (void)notifyWillLeaveStatue:(long long)arg0;
- (void)notifyChangeToPopupStatu:(long long)arg0;
- (id)__buildLoadErrorView;
- (id)__buildLoadingView;
- (double)homeIndicatorHeight;
- (double)viewContainerRightOffset;
- (double)viewContainerBottomOffset;
- (BOOL)hasSafeArea;
- (id)halfScreenContainerView;
- (void)setHalfScreenContainerView:(id)arg0;
- (void)setIsPageReady:(BOOL)arg0;
- (void)__addLoadFailedView:(id)arg0;
- (void)handleKeyboardWillShowOrChangeFrameNotification:(id)arg0;
- (id)poolContainerDelegate;
- (void)allowCloseByGesture:(BOOL)arg0;
- (id)lifeCycleTracker;
- (struct CGSize { double x0; double x1; })screenBoundsSize;
- (BOOL)hasExecuteOnShow;
- (long long)lastTopVCStatusBarStyle;
- (void)setLastTopVCStatusBarStyle:(long long)arg0;
- (void)setClickCloseView:(id)arg0;
- (void)setPageReadyBlockList:(id)arg0;
- (void)setContainerReadyBlockList:(id)arg0;
- (void)setContainerLoadFailedBlockList:(id)arg0;
- (BOOL)isiPad;
- (void)reload;
- (id)timer;
- (BOOL)isAnimating;
- (BOOL)shouldAutorotate;
- (BOOL)conformsToProtocol:(id)arg0;
- (void)updateLayout;
- (long long)statusBarStyle;
- (void)viewDidLayoutSubviews;
- (void)setConfig:(id)arg0;
- (id)engineType;
- (void)viewDidAppear:(BOOL)arg0;
- (id /* block */)completion;
- (void)attachToView:(id)arg0;
- (long long)currentStatus;
- (void).cxx_destruct;
- (void)setUserInteractionEnabled:(BOOL)arg0;
- (double)topMargin;
- (id)statusBarBackgroundView;
- (void)setCompletion:(id /* block */)arg0;
- (id)sessionID;
- (void)setAlpha:(double)arg0;
- (void)setCurrentStatus:(long long)arg0;
- (id)containerID;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setContext:(id)arg0;
- (void)setStatusBarStyle:(long long)arg0;
- (id)config;
- (void)load;
- (void)show;
- (BOOL)gestureRecognizer:(id)arg0 shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (void)viewWillDisappear:(BOOL)arg0;
- (id)maskView;
- (long long)preferredStatusBarStyle;
- (void)viewDidDisappear:(BOOL)arg0;
- (BOOL)destroyed;
- (BOOL)userInteractionEnabled;
- (void)setStatusBarBackgroundView:(id)arg0;
- (BOOL)close:(id)arg0;
- (void)destroy;
- (BOOL)gestureRecognizerShouldBegin:(id)arg0;
- (void)setTimer:(id)arg0;
- (id)context;
- (void)hide;
- (BOOL)isLandscape;
- (double)alpha;
- (long long)viewType;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (void)setMaskView:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setIsAnimating:(BOOL)arg0;
- (BOOL)animationCompleted;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialFrame;
- (void)setInitialFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)originURL;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalFrame;
- (void)setFinalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;
- (void)reloadWithContext:(id)arg0;
- (void)handleViewDidDisappear;
- (void)setDestroyed:(BOOL)arg0;
- (void)initGesture;

@end
