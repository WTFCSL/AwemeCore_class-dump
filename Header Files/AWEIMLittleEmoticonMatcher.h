//
//     Generated by private class-dump
//

@class NSRegularExpression, NSString;

@interface AWEIMLittleEmoticonMatcher : HTSService <AWEIMLittleEmoticonMatcher> {
    NSRegularExpression *_emoticonRegex;
}

@property (retain, nonatomic) NSRegularExpression *emoticonRegex;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)matchEmoticonForAttributedString:(id)arg0 font:(id)arg1;
- (id)mapEmotionTextToYYAttachmentOfSideLength:(double)arg0 forAttriStr:(id)arg1;
- (BOOL)shouldEnlargeEmoticonForAttributedString:(id)arg0;
- (void)matchEmoticonToYYTextAttachmentForAttributedString:(id)arg0 font:(id)arg1;
- (void)matchEmoticonToYYTextAttachmentForAttributedString:(id)arg0 font:(id)arg1 type:(unsigned long long)arg2;
- (void)matchEmoticonToYYTextAttachmentForAttributedString:(id)arg0 font:(id)arg1 emojiSize:(struct CGSize { double x0; double x1; })arg2 type:(unsigned long long)arg3;
- (void)matchEmoticonForAttributedString:(id)arg0 font:(id)arg1 color:(id)arg2;
- (id)mathEmoticonsForString:(id)arg0;
- (void)setBackStringForAttributedString:(id)arg0 backedString:(id)arg1 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })arg2;
- (id)emotionTextAttriStrFor:(id)arg0;
- (id)emotionTextAttriStrFor:(id)arg0 containPureEmoji:(BOOL *)arg1;
- (id)emoticonRegex;
- (void)setEmoticonRegex:(id)arg0;
- (id)init;
- (void).cxx_destruct;

@end
