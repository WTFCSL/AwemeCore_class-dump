//
//     Generated by private class-dump
//

@class NSString, NSDictionary, HTSLiveLinkMicMethod, NSError, NSNumber;
@protocol IESLiveLinkmicLinkerParallelProvider, IESLiveLinkmicLinkerParallelDelegate, IESLiveLinkmicLinkerParallelReaction;

@interface IESLiveLinkmicLinkerParallel : NSObject {
    BOOL _hasInviteLinkmicInfo;
    BOOL _hasPermitLinkmicInfo;
    BOOL _isStartPushStream;
    id<IESLiveLinkmicLinkerParallelDelegate> _delegate;
    unsigned long long _type;
    long long _linkType;
    unsigned long long _inviteSource;
    NSString *_toSecUserId;
    NSNumber *_roomId;
    NSDictionary *_trackParams;
    id<IESLiveLinkmicLinkerParallelProvider> _provider;
    id<IESLiveLinkmicLinkerParallelReaction> _reaction;
    HTSLiveLinkMicMethod *_inviteMessage;
    HTSLiveLinkMicMethod *_permitMessage;
    unsigned long long _linkmicApiResult;
    NSError *_apiError;
    unsigned long long _rtcJoinChannelResult;
    NSError *_rtcError;
}

@property (retain, nonatomic) id<IESLiveLinkmicLinkerParallelProvider> provider;
@property (retain, nonatomic) id<IESLiveLinkmicLinkerParallelReaction> reaction;
@property (retain, nonatomic) HTSLiveLinkMicMethod *inviteMessage;
@property (nonatomic) BOOL hasInviteLinkmicInfo;
@property (retain, nonatomic) HTSLiveLinkMicMethod *permitMessage;
@property (nonatomic) BOOL hasPermitLinkmicInfo;
@property (nonatomic) unsigned long long linkmicApiResult;
@property (retain, nonatomic) NSError *apiError;
@property (nonatomic) unsigned long long rtcJoinChannelResult;
@property (retain, nonatomic) NSError *rtcError;
@property (nonatomic) BOOL isStartPushStream;
@property (weak, nonatomic) id<IESLiveLinkmicLinkerParallelDelegate> delegate;
@property (readonly, nonatomic) unsigned long long type;
@property (readonly, nonatomic) long long linkType;
@property (readonly, nonatomic) unsigned long long inviteSource;
@property (readonly, nonatomic) NSString *toSecUserId;
@property (readonly, nonatomic) NSNumber *roomId;
@property (readonly, nonatomic) NSDictionary *trackParams;

- (id)roomId;
- (id)trackParams;
- (void)startInteract;
- (void)onReceivedPermitAudienceMessage:(id)arg0;
- (void)onReceivedInviteAudienceMessage:(id)arg0;
- (unsigned long long)inviteSource;
- (void)loadMediaService;
- (void)setHasInviteLinkmicInfo:(BOOL)arg0;
- (void)setHasPermitLinkmicInfo:(BOOL)arg0;
- (BOOL)hasInviteLinkmicInfo;
- (BOOL)hasPermitLinkmicInfo;
- (void)setApiError:(id)arg0;
- (id)apiError;
- (void)onJoinChannelResponse:(id)arg0 error:(id)arg1;
- (unsigned long long)rtcJoinChannelResult;
- (void)onRtcJoinChannelResultError;
- (void)setLinkmicApiResult:(unsigned long long)arg0;
- (void)checkErrorResult;
- (id)toSecUserId;
- (void)reportRtcSetupDuration;
- (void)setRtcJoinChannelResult:(unsigned long long)arg0;
- (unsigned long long)linkmicApiResult;
- (void)setRtcError:(id)arg0;
- (void)reportJoinChannelDuration;
- (void)reportAudienceLinkSuccess;
- (id)rtcError;
- (BOOL)canJoinChannelTogether;
- (void)permitStartLinkerWithRoomId:(id)arg0;
- (void)replyStartLinkerWithType:(unsigned long long)arg0 linkType:(long long)arg1 toSecUserId:(id)arg2 roomId:(id)arg3 inviteSource:(unsigned long long)arg4 trackParams:(id)arg5;
- (void)mediaServiceDidStart;
- (void)mediaServiceDidError:(id)arg0;
- (id)permitMessage;
- (void)setPermitMessage:(id)arg0;
- (BOOL)isStartPushStream;
- (void)setIsStartPushStream:(BOOL)arg0;
- (long long)linkType;
- (void)setProvider:(id)arg0;
- (id)provider;
- (void).cxx_destruct;
- (id)initWithDelegate:(id)arg0;
- (unsigned long long)type;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (id)reaction;
- (id)inviteMessage;
- (void)setInviteMessage:(id)arg0;
- (void)setReaction:(id)arg0;

@end
