//
//     Generated by private class-dump
//

@class ACCImageTemplateDownloader, NSString, AWEDavinciWrapper;

@interface AWEImageTemplateResourcesDownloader : NSObject <ACCImageTemplateResourceDownloadProtocol> {
    AWEDavinciWrapper *_davinciWrapper;
    ACCImageTemplateDownloader *_templateDownloader;
}

@property (retain, nonatomic) AWEDavinciWrapper *davinciWrapper;
@property (retain, nonatomic) ACCImageTemplateDownloader *templateDownloader;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)getNeedDownloadedTemplateResourcesFromTemplateInfoModel:(id)arg0 logSubTag:(id)arg1;
+ (id)templateCacheDir;
+ (void)downloadTemplateZIPWithTemplateID:(id)arg0 cacheDir:(id)arg1 callback:(id /* block */)arg2;
+ (id)errorOfTemplateResourcesDownload;
+ (id)fixedResources;
+ (id)JSONToDictionary:(id)arg0 logSubTag:(id)arg1;
+ (BOOL)isValidTemplateResourceTypeWith:(unsigned long long)arg0;
+ (void)predownloadFixedResourcesWithCallback:(id /* block */)arg0;

- (void)downloadTemplateZipWithMediaID:(id)arg0 callback:(id /* block */)arg1;
- (void)downloadTemplateResources:(id)arg0 unzipFilePath:(id)arg1 progressChangeCompletion:(id /* block */)arg2 onCompletion:(id /* block */)arg3;
- (void)setShouldLockTemplateApply:(BOOL)arg0;
- (void)adjustTemplatePositionByBachAlgorithmWithMediaID:(id)arg0 currentImageURI:(id)arg1 cropImageInfo:(id)arg2 originImageSize:(struct CGSize { double x0; double x1; })arg3 callback:(id /* block */)arg4;
- (id)combineDownloadedTemplateResourcesLocalCache:(id)arg0 unzipFilePath:(id)arg1;
- (id)davinciWrapper;
- (id)templateDownloader;
- (id)getResourceFromNleCache:(id)arg0;
- (void)setDavinciWrapper:(id)arg0;
- (void)setTemplateDownloader:(id)arg0;
- (void).cxx_destruct;

@end
