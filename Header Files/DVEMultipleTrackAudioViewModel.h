//
//     Generated by private class-dump
//

@class NSArray, DVEMultipleTrackPanelTracker;
@protocol DVECoreAudioProtocol;

@interface DVEMultipleTrackAudioViewModel : DVEMultipleTrackViewModel {
    BOOL _shouldHandleSelect;
    NSArray *_cachedTracks;
    id<DVECoreAudioProtocol> _audioEditor;
    DVEMultipleTrackPanelTracker *_tracker;
}

@property (copy, nonatomic) NSArray *cachedTracks;
@property (weak, nonatomic) id<DVECoreAudioProtocol> audioEditor;
@property (nonatomic) BOOL shouldHandleSelect;
@property (retain, nonatomic) DVEMultipleTrackPanelTracker *tracker;

- (BOOL)shouldHandleSelect;
- (void)setShouldHandleSelect:(BOOL)arg0;
- (id)calculateAllInSection:(long long)arg0 longPressIndexPath:(id)arg1;
- (id)filterIntersectRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 inRanges:(id)arg1;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })minTimeDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 toTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })attachTimeRangeForGap:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0 currentTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg1;
- (id)audioEditor;
- (void)setCachedTracks:(id)arg0;
- (void)setAudioEditor:(id)arg0;
- (id)registerCellIdentifier;
- (id)draftTracks;
- (void)updateCellViewModel:(id)arg0 timeSpaceNode:(id)arg1 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2;
- (id)buildCellViewModelFromNode:(id)arg0 frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (Class)registerCellClass;
- (id)buildCell;
- (id)selectSegment;
- (BOOL)trackView:(id)arg0 shouldSelectItemAtIndexPath:(id)arg1;
- (void)trackView:(id)arg0 didSelectItemAtIndexPath:(id)arg1 cellViewModel:(id)arg2;
- (void)trackView:(id)arg0 didDeSelectItemAtIndexPath:(id)arg1 cellViewModel:(id)arg2;
- (BOOL)trackViewShouldScrollAfterSelect;
- (id)trackView:(id)arg0 shouldSelectItemAtPoint:(struct CGPoint { double x0; double x1; })arg1;
- (double)trackViewMoveMaxX;
- (long long)maxTargetSection;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })availableInsertTimeRangeWithMovingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 longPressIndexPath:(id)arg1 inSection:(long long)arg2 tapTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg3;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })availableInsertTimeRangeWithMovingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 longPressIndexPath:(id)arg1 inNewSection:(long long)arg2;
- (void)trackView:(id)arg0 didMoveChanged:(id)arg1 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg2 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 hasNoIntersection:(BOOL)arg4;
- (void)trackView:(id)arg0 didMoveEnded:(id)arg1 targetSection:(long long)arg2 targetTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg3 isNewInsert:(BOOL)arg4;
- (id)trackViewTailInsertTipBackgroundColorOf:(id)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackView:(id)arg0 shouldClipChangedRect:(unsigned long long)arg1 cellViewModel:(id)arg2 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg4;
- (void)trackView:(id)arg0 didClipEnded:(unsigned long long)arg1 cellViewModel:(id)arg2 startRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg3 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg4;
- (id)initWithContext:(id)arg0;
- (id)tracker;
- (void)setTracker:(id)arg0;
- (void).cxx_destruct;
- (id)cachedTracks;
- (void)addObservers;

@end
