//
//     Generated by private class-dump
//

@class NSString, NSArray, ALMVideoPlayStrategy, ALMVideoPlayerWrapper, ALMVideoModel;
@protocol ALMVideoPlayerControllerDelegate;

@interface ALMVideoPlayerController : NSObject <ALMVideoPlayerWrapperDelegate> {
    id<ALMVideoPlayerControllerDelegate> _delegate;
    double _speed;
    long long _playerState;
    ALMVideoPlayerWrapper *_innerPlayer;
    NSString *_videoID;
    NSString *_localURL;
    NSString *_urlKey;
    NSArray *_urlList;
    NSArray *_h265UrlList;
    unsigned long long _playerType;
    NSString *_fileCs;
    long long _currentVideoScaleMode;
    double _videoWidth;
    double _videoHeight;
    ALMVideoModel *_videoModel;
    ALMVideoPlayStrategy *_videoPlayStrategy;
}

@property (retain, nonatomic) ALMVideoPlayerWrapper *innerPlayer;
@property (copy, nonatomic) NSString *videoID;
@property (copy, nonatomic) NSString *localURL;
@property (copy, nonatomic) NSString *urlKey;
@property (copy, nonatomic) NSArray *urlList;
@property (copy, nonatomic) NSArray *h265UrlList;
@property (nonatomic) unsigned long long playerType;
@property (copy, nonatomic) NSString *fileCs;
@property (nonatomic) long long currentVideoScaleMode;
@property (nonatomic) long long playerState;
@property (nonatomic) double videoWidth;
@property (nonatomic) double videoHeight;
@property (retain, nonatomic) ALMVideoModel *videoModel;
@property (retain, nonatomic) ALMVideoPlayStrategy *videoPlayStrategy;
@property (weak, nonatomic) id<ALMVideoPlayerControllerDelegate> delegate;
@property (nonatomic, getter=isUseCache) BOOL useCache;
@property (nonatomic, getter=isRepeated) BOOL repeated;
@property (nonatomic) long long scalingMode;
@property (nonatomic) long long rotateType;
@property (nonatomic, getter=isMuted) BOOL muted;
@property (readonly, nonatomic) double volume;
@property (readonly, nonatomic) double videoDuration;
@property (readonly, nonatomic) double speed;
@property (readonly, nonatomic) double currentPlaybackTime;
@property (readonly, nonatomic) long long cacheSize;
@property (readonly, nonatomic) unsigned long long sessionId;
@property (readonly, nonatomic) double playBitrate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)innerPlayer;
- (void)setInnerPlayer:(id)arg0;
- (id)urlList;
- (void)setUrlList:(id)arg0;
- (long long)rotateType;
- (void)setRotateType:(long long)arg0;
- (void)setOwnPlayerPlayWithURLs:(BOOL)arg0;
- (double)playBitrate;
- (void)setLoopPlayerWithLoopState:(BOOL)arg0 loopWay:(long long)arg1 loopStartTime:(double)arg2 loopEndTime:(double)arg3;
- (void)setCacheDuration:(double)arg0;
- (void)setCustomLog:(id)arg0;
- (void)setPlayerDashVideoInfoV2:(id)arg0;
- (void)setPlayerDashVideoInfo:(id)arg0;
- (void)setStartPlayTime:(double)arg0;
- (void)setUpMemoryOptimize:(BOOL)arg0;
- (id)videoModel;
- (void)setVideoModel:(id)arg0;
- (long long)scaleModeForVideo;
- (id)fileCs;
- (void)setPlayerType:(unsigned long long)arg0;
- (id)initWithVideoModel:(id)arg0;
- (void)setFileCs:(id)arg0;
- (void)notifyDelegateVolumeDidChange:(id)arg0;
- (id)initWithVideoModel:(id)arg0 andVideoPlayStrategy:(id)arg1;
- (void)setupInnerPlayer;
- (void)addTimeObserverForInterval:(double)arg0;
- (void)addObserverForNotificationCenter;
- (void)notifyDelegateTimerEventDidCome;
- (void)notifyDelegateApplicationWillBecomeUnavailable;
- (void)notifyDelegateApplicationDidBecomeAvailable;
- (void)notifyDelegateExecuteAction:(long long)arg0;
- (id)__actionDescriptionWithValue:(long long)arg0;
- (void)__syncPlayerStateWithWrapperState:(long long)arg0;
- (void)notifyDelegateBeginStalling;
- (void)notifyDelegateEndStalling;
- (long long)__playerActionWithWrapperPlayBackAction:(long long)arg0;
- (void)notifyDelegateWillPlayNextLoop;
- (void)notifyDelegateDidReadyForDisplay;
- (void)notifyDelegatePlayFailedFinallyWithError:(id)arg0;
- (void)notifyDelegatePlayFailedOnUrlString:(id)arg0 error:(id)arg1;
- (void)notifyDelegateDidFetchVideoModel:(id)arg0;
- (void)notifyDelegateHitCacheOnURL:(id)arg0;
- (void)notifyDelegateDidFetchVideoDataOnURL:(id)arg0;
- (void)setupPlayerDashInfo;
- (void)preparePlayData;
- (void)preparePlayStrategy;
- (void)setVideoScaleMode:(long long)arg0;
- (void)setPlaybackBrightness:(float)arg0;
- (BOOL)isUseCache;
- (id)h265UrlList;
- (void)setH265UrlList:(id)arg0;
- (long long)currentVideoScaleMode;
- (void)setCurrentVideoScaleMode:(long long)arg0;
- (id)videoPlayStrategy;
- (void)setVideoPlayStrategy:(id)arg0;
- (void)playerWrapper:(id)arg0 didChangePlaybackStateWithAction:(long long)arg1;
- (void)playerWrapper:(id)arg0 didChangeStallState:(long long)arg1;
- (void)playerWrapper:(id)arg0 didChangeStallState:(long long)arg1 actionType:(long long)arg2 reason:(unsigned long long)arg3;
- (void)playerWrapperDidReadyForDisplay:(id)arg0;
- (void)playerWrapperWillLoopPlaying:(id)arg0;
- (void)playerWrapper:(id)arg0 playbackFailedForURL:(id)arg1 error:(id)arg2;
- (void)playerWrapper:(id)arg0 playbackFailedWithError:(id)arg1;
- (void)playerWrapper:(id)arg0 didFinishVideoDataDownloadForURL:(id)arg1;
- (void)playerWrapper:(id)arg0 noVideoDataToDownloadForURL:(id)arg1;
- (void)playerWrapper:(id)arg0 didFetchVideoModel:(id)arg1;
- (double)currentPlaybackTime;
- (long long)cacheSize;
- (void).cxx_destruct;
- (double)volume;
- (void)setVideoHeight:(double)arg0;
- (unsigned long long)sessionId;
- (void)setMuted:(BOOL)arg0;
- (BOOL)stop;
- (id)delegate;
- (void)setPlayerState:(long long)arg0;
- (double)videoHeight;
- (long long)playerState;
- (void)setVolume:(double)arg0;
- (id)playerView;
- (void)setVideoWidth:(double)arg0;
- (double)videoWidth;
- (double)videoDuration;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (BOOL)play;
- (BOOL)pause;
- (void)reset;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (BOOL)pause:(BOOL)arg0;
- (void)seekToTime:(double)arg0;
- (double)speed;
- (BOOL)isMuted;
- (void)setUseCache:(BOOL)arg0;
- (double)playbackSpeed;
- (void)setPlaybackSpeed:(float)arg0;
- (void)setRepeated:(BOOL)arg0;
- (void)prepareToPlay;
- (id)localURL;
- (unsigned long long)playerType;
- (void)setLocalURL:(id)arg0;
- (long long)scalingMode;
- (void)setScalingMode:(long long)arg0;
- (BOOL)isRepeated;
- (void)addPeriodicTimeObserverForInterval:(double)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)addBoundaryTimeObserverForTimes:(id)arg0 queue:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)videoID;
- (void)setVideoID:(id)arg0;
- (void)setPlaybackMode:(long long)arg0;
- (void)setPlaybackVolume:(float)arg0;
- (id)urlKey;
- (void)setUrlKey:(id)arg0;
- (void)seekToTime:(double)arg0 completion:(id /* block */)arg1;

@end
