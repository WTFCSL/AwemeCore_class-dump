//
//     Generated by private class-dump
//

@class NSArray, NSDictionary, NSString, UIView;
@protocol IESLiveStreamPlayerLayoutMachineDelegate;

@interface IESLiveStreamPlayerLayoutMachine : IESLiveStreamUnifyBaseLayoutMachine <IESLiveStreamPlayerLayoutMachine> {
    BOOL isInPK;
    BOOL isInMultiLinker;
    BOOL isInBigParty;
    BOOL isInMediaLinkmic;
    BOOL isInDynamicLayout;
    BOOL isInSonicGameLayout;
    BOOL _isNeedUpdateMultiLinkerLayoutParam;
    BOOL isNeedUpdateMediaLinkmicLayoutParam;
    BOOL isInNewPip;
    id<IESLiveStreamPlayerLayoutMachineDelegate> delegate;
    double currentPKStreamRatio;
    double _doubleInterationDistance;
    double bottomOffset;
    double _multiLinkerDistance;
    double multiLinkerSpacing;
    NSArray *_multiLinkerGridRatioFrames;
    double rightOffSet;
    double mediaLinkmicDistance;
    double mediaLinkmicSpacing;
    NSArray *mediaLinkmicGridRatioFrames;
    NSDictionary *_roomTrackParams;
    UIView *_windowView;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkCropSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerCropFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaLinkmicRatioFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaLinkmicCropFrame;
}

@property (retain, nonatomic) NSDictionary *roomTrackParams;
@property (weak, nonatomic) UIView *windowView;
@property (weak, nonatomic) id<IESLiveStreamPlayerLayoutMachineDelegate> delegate;
@property (nonatomic) double bottomOffset;
@property (nonatomic) double doubleInterationDistance;
@property (nonatomic) double currentPKStreamRatio;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } pkCropSize;
@property (nonatomic) double multiLinkerDistance;
@property (nonatomic) double multiLinkerSpacing;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } multiLinkerCropFrame;
@property (copy, nonatomic) NSArray *multiLinkerGridRatioFrames;
@property (nonatomic) BOOL isNeedUpdateMultiLinkerLayoutParam;
@property (nonatomic) double mediaLinkmicDistance;
@property (nonatomic) double mediaLinkmicSpacing;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaLinkmicRatioFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } mediaLinkmicCropFrame;
@property (copy, nonatomic) NSArray *mediaLinkmicGridRatioFrames;
@property (nonatomic) BOOL isNeedUpdateMediaLinkmicLayoutParam;
@property (nonatomic) BOOL isInPK;
@property (nonatomic) BOOL isInMultiLinker;
@property (nonatomic) BOOL isInBigParty;
@property (nonatomic) BOOL isInMediaLinkmic;
@property (nonatomic) BOOL isInDynamicLayout;
@property (nonatomic) BOOL isInSonicGameLayout;
@property (nonatomic) BOOL isInNewPip;
@property (readonly, nonatomic) unsigned long long currentLayout;
@property (nonatomic) double rightOffSet;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)streamPlayer;
- (void)liveComponentDidLoaded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })streamFrameInView:(id)arg0;
- (double)doubleInterationDistance;
- (void)setDoubleInterationDistance:(double)arg0;
- (double)multiLinkerDistance;
- (id)multiLinkerGridRatioFrames;
- (BOOL)isNeedUpdateMultiLinkerLayoutParam;
- (void)setIsNeedUpdateMultiLinkerLayoutParam:(BOOL)arg0;
- (void)setMultiLinkerGridRatioFrames:(id)arg0;
- (id)customLayouts;
- (id)supportSEILayoutTypes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pkCropSize;
- (void)clearPreviousPlayerLayoutParams;
- (void)setCurrentPKStreamRatio:(double)arg0;
- (void)setPkCropSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (double)currentPKStreamRatio;
- (void)setPkRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pkRatioFrame;
- (id)windowView;
- (void)setWindowView:(id)arg0;
- (BOOL)isInBigParty;
- (void)layoutWithSmallWindow:(id)arg0;
- (void)removePreEnterViewWithLayout:(unsigned long long)arg0;
- (void)layoutInitiallyWithRoom:(id)arg0 containerView:(id)arg1;
- (struct CGPoint { double x0; double x1; })playerOffsetWithPlayerFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0 videoSize:(struct CGSize { double x0; double x1; })arg1;
- (void)setIsInNewPip:(BOOL)arg0;
- (id)bizTransparentParams;
- (BOOL)isInMultiLinker;
- (BOOL)isInPK;
- (BOOL)unifyPlayerLayout;
- (void)setIsInPK:(BOOL)arg0;
- (void)setIsInDynamicLayout:(BOOL)arg0;
- (BOOL)isInDynamicLayout;
- (void)setRightOffSet:(double)arg0;
- (double)rightOffSet;
- (id)layoutImpWithRoomScene:(long long)arg0;
- (id)roomTrackParams;
- (void)enumerateLayoutImpWithBlock:(id /* block */)arg0;
- (void)setIsInMediaLinkmic:(BOOL)arg0;
- (void)setMediaLinkmicDistance:(double)arg0;
- (void)setMediaLinkmicRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setMediaLinkmicCropFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setMediaLinkmicGridRatioFrames:(id)arg0;
- (void)setIsInBigParty:(BOOL)arg0;
- (void)setIsInMultiLinker:(BOOL)arg0;
- (void)setMultiLinkerDistance:(double)arg0;
- (void)setMultiLinkerSpacing:(double)arg0;
- (void)setMultiLinkerRatioFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setMultiLinkerCropFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)p_layoutWithImpObj:(id)arg0;
- (double)multiLinkerSpacing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multiLinkerRatioFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multiLinkerCropFrame;
- (double)mediaLinkmicDistance;
- (double)mediaLinkmicSpacing;
- (void)setMediaLinkmicSpacing:(double)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mediaLinkmicRatioFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mediaLinkmicCropFrame;
- (id)mediaLinkmicGridRatioFrames;
- (BOOL)isNeedUpdateMediaLinkmicLayoutParam;
- (void)setIsNeedUpdateMediaLinkmicLayoutParam:(BOOL)arg0;
- (BOOL)isInMediaLinkmic;
- (BOOL)isInSonicGameLayout;
- (void)setIsInSonicGameLayout:(BOOL)arg0;
- (BOOL)isInNewPip;
- (void)setRoomTrackParams:(id)arg0;
- (void).cxx_destruct;
- (void)commonInit;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (double)bottomOffset;
- (void)setBottomOffset:(double)arg0;

@end
