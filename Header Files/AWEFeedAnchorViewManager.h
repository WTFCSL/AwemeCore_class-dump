//
//     Generated by private class-dump
//

@class AWEAwemeModel, NSString, UIView, AWEPageContext, NSArray, AWEFeedAnchorViewCommonLayoutInfo, AWEFeedAnchorContainerView, NSMutableArray, AWEFeedAnchorBaseConfig;
@protocol AWEAwemePlayInteractionPresenterMethodDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionPanelDelegate, AWEPlayInteractionViewControllerProtocol, AWEAwemePlayInteractionUpdateDelegate, AWEAwemePlayInteractionUIDisplayDelegate;

@interface AWEFeedAnchorViewManager : NSObject <AWEFeedAnchorViewManager> {
    AWEFeedAnchorViewCommonLayoutInfo *commonLayoutInfo;
    NSString *_priorityType;
    AWEFeedAnchorContainerView *_containerView;
    AWEFeedAnchorBaseConfig *_currentConfig;
    AWEAwemeModel *_awemeModel;
    UIView *_childView;
    NSMutableArray *_anchorViewConfigs;
    id /* block */ _configAnchorViewBlock;
    id<AWEAwemePlayInteractionPresenterMethodDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEPlayInteractionViewControllerProtocol> _interactionViewController;
    AWEPageContext *_interactionContext;
    NSString *_referString;
}

@property (weak, nonatomic) id<AWEAwemePlayInteractionPresenterMethodDelegate, AWEAwemePlayInteractionPanelDelegate, AWEAwemePlayInteractionCommerceDelegate, AWEAwemePlayInteractionUIDisplayDelegate, AWEAwemePlayInteractionUpdateDelegate, AWEPlayInteractionViewControllerProtocol> interactionViewController;
@property (weak, nonatomic) AWEPageContext *interactionContext;
@property (copy, nonatomic) NSString *referString;
@property (copy, nonatomic) NSString *priorityType;
@property (retain, nonatomic) AWEFeedAnchorContainerView *containerView;
@property (retain, nonatomic) AWEFeedAnchorBaseConfig *currentConfig;
@property (retain, nonatomic) AWEAwemeModel *awemeModel;
@property (weak, nonatomic) UIView *childView;
@property (retain, nonatomic) NSMutableArray *anchorViewConfigs;
@property (copy, nonatomic) id /* block */ configAnchorViewBlock;
@property (readonly, nonatomic) UIView *anchorContainerView;
@property (readonly, copy, nonatomic) NSArray *registerConfigs;
@property (retain, nonatomic) AWEFeedAnchorViewCommonLayoutInfo *commonLayoutInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)shouldOptConfigReuse;
+ (id)componentViewManagerWithAwemeModel:(id)arg0 sceneType:(long long)arg1;
+ (id)anchorInfoLogOfModel:(id)arg0;

- (id)awemeModel;
- (id)referString;
- (void)setInteractionViewController:(id)arg0;
- (void)setAwemeModel:(id)arg0;
- (void)setReferString:(id)arg0;
- (id)priorityType;
- (void)setPriorityType:(id)arg0;
- (id)registerConfigs;
- (id)anchorContainerView;
- (id)commonLayoutInfo;
- (void)setCommonLayoutInfo:(id)arg0;
- (id /* block */)configAnchorViewBlock;
- (void)setConfigAnchorViewBlock:(id /* block */)arg0;
- (void)updateAnchorConfigBusinessInfoWith:(id)arg0;
- (void)configWithAwemeModel:(id)arg0 sceneType:(long long)arg1;
- (void)updateAnchorView:(BOOL)arg0;
- (void)updateAnchorView:(BOOL)arg0 needPerformOnDisplay:(BOOL)arg1;
- (void)layoutAnchorView;
- (BOOL)shouldShowAnchorView;
- (void)tryingShowAnchorView;
- (void)hiddenAnchorIfNeeded;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })childViewFrame;
- (id)currentChildView;
- (void)lokiDowngrade;
- (id)poiAnchorViewManager;
- (id)poiTradeAnchorViewManager;
- (void)refreshWithAwemeModel:(id)arg0 sceneType:(long long)arg1;
- (void)anchorViewWillShowOnSuperview;
- (void)registerDefaultConfigs;
- (id)anchorViewConfigs;
- (void)setupCurrentConfigWithSceneType:(long long)arg0;
- (void)internalRefreshWithAwemeModel:(id)arg0 sceneType:(long long)arg1;
- (BOOL)delayedDisplayAnchor;
- (void)uploadLocalLifeAnchorExceptionIfNeeded;
- (void)setAnchorViewConfigs:(id)arg0;
- (id)init;
- (void).cxx_destruct;
- (void)setContainerView:(id)arg0;
- (id)containerView;
- (id)currentConfig;
- (void)setCurrentConfig:(id)arg0;
- (void)reset;
- (id)interactionContext;
- (void)setInteractionContext:(id)arg0;
- (id)interactionViewController;
- (void)setChildView:(id)arg0;
- (id)childView;

@end
