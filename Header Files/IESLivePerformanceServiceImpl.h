//
//     Generated by private class-dump
//

@class NSArray, NSDictionary, NSHashTable, IESLivePerfSampleContext, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface IESLivePerformanceServiceImpl : NSObject <IESLivePerformanceService> {
    BOOL _enable;
    BOOL _track;
    int _reason;
    IESLivePerfSampleContext *_context;
    NSHashTable *_observers;
    NSObject<OS_dispatch_queue> *_workQueue;
    double _triggerTime;
    double _recoverTime;
    long long _triggerDuration;
    long long _recoverDuration;
    struct IESLivePerformanceAverageValue { int count; float value; } _cpu;
    struct IESLivePerformanceAverageValue { int count; float value; } _gpu;
    struct IESLivePerformanceAverageValue { int count; float value; } _net;
    struct IESLivePerformanceAverageValue { int count; float value; } _stall;
    long long _device;
    long long _currentLevel;
    NSArray *_levels;
    NSDictionary *_configs;
    double _beginDegradeTime;
}

@property (nonatomic) BOOL enable;
@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (nonatomic) double triggerTime;
@property (nonatomic) double recoverTime;
@property (nonatomic) long long triggerDuration;
@property (nonatomic) long long recoverDuration;
@property (nonatomic) struct IESLivePerformanceAverageValue { int count; float value; } cpu;
@property (nonatomic) struct IESLivePerformanceAverageValue { int count; float value; } gpu;
@property (nonatomic) struct IESLivePerformanceAverageValue { int count; float value; } net;
@property (nonatomic) struct IESLivePerformanceAverageValue { int count; float value; } stall;
@property (nonatomic) long long device;
@property (nonatomic) long long currentLevel;
@property (retain, nonatomic) NSArray *levels;
@property (retain, nonatomic) NSDictionary *configs;
@property (nonatomic) BOOL track;
@property (nonatomic) int reason;
@property (nonatomic) double beginDegradeTime;
@property (weak, nonatomic) IESLivePerfSampleContext *context;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;

- (void)setConfigs:(id)arg0;
- (struct IESLivePerformanceAverageValue { int x0; float x1; })gpu;
- (void)setGpu:(struct IESLivePerformanceAverageValue { int x0; float x1; })arg0;
- (void)setRecoverDuration:(long long)arg0;
- (long long)recoverDuration;
- (void)setNet:(struct IESLivePerformanceAverageValue { int x0; float x1; })arg0;
- (void)setTriggerTime:(double)arg0;
- (double)triggerTime;
- (void)setTriggerDuration:(long long)arg0;
- (void)receivePerformaceInfo:(id)arg0;
- (void)setCpu:(struct IESLivePerformanceAverageValue { int x0; float x1; })arg0;
- (id)transformConfigData:(id)arg0;
- (void)setRecoverTime:(double)arg0;
- (void)savePerformanceInfo:(id)arg0;
- (void)checkPerformance;
- (struct IESLivePerformanceAverageValue { int x0; float x1; })stall;
- (void)setStall:(struct IESLivePerformanceAverageValue { int x0; float x1; })arg0;
- (long long)getLatestPerformanceLevel;
- (void)notifyPerformanceLevelChangeIfNeeded:(long long)arg0;
- (double)recoverTime;
- (BOOL)validateEveryPerformanceLevel:(id)arg0;
- (void)trackEventWithLevel:(long long)arg0;
- (id)generatePerformanceData;
- (double)beginDegradeTime;
- (void)setBeginDegradeTime:(double)arg0;
- (BOOL)enable;
- (id)init;
- (void)setWorkQueue:(id)arg0;
- (id)workQueue;
- (void).cxx_destruct;
- (void)setContext:(id)arg0;
- (int)reason;
- (id)observers;
- (void)setObservers:(id)arg0;
- (id)context;
- (long long)currentLevel;
- (void)setReason:(int)arg0;
- (void)addObserver:(id)arg0;
- (void)setDevice:(long long)arg0;
- (void)setEnable:(BOOL)arg0;
- (void)setCurrentLevel:(long long)arg0;
- (void)removeObserver:(id)arg0;
- (long long)device;
- (struct IESLivePerformanceAverageValue { int x0; float x1; })net;
- (id)levels;
- (void)setLevels:(id)arg0;
- (BOOL)track;
- (long long)triggerDuration;
- (struct IESLivePerformanceAverageValue { int x0; float x1; })cpu;
- (id)configs;
- (void)setupConfig;
- (void)setTrack:(BOOL)arg0;

@end
