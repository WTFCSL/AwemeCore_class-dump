//
//     Generated by private class-dump
//

@class NSSet, NSMutableDictionary, IESForestConfig, IESForestRequestOperationManager, NSMutableArray, NSLock;
@protocol IESForestEventMonitor;

@interface IESForestKit : NSObject {
    IESForestConfig *_forestConfig;
    BOOL _isSharedInstance;
    id<IESForestEventMonitor> _eventMonitor;
    IESForestRequestOperationManager *_operationManager;
    NSMutableArray *_interceptors;
    NSMutableDictionary *_sessionIDToChannelList;
    NSLock *_operationLock;
}

@property (class, retain, nonatomic) id<IESForestEventMonitor> eventMonitor;

@property (nonatomic) NSSet *web_allowResourceExtensions;
@property (retain, nonatomic) IESForestRequestOperationManager *operationManager;
@property (retain, nonatomic) NSMutableArray *interceptors;
@property (retain, nonatomic) NSMutableDictionary *sessionIDToChannelList;
@property (nonatomic) BOOL isSharedInstance;
@property (retain, nonatomic) NSLock *operationLock;
@property (retain, nonatomic) IESForestConfig *forestConfig;
@property (retain, nonatomic) id<IESForestEventMonitor> eventMonitor;

+ (BOOL)isCDNMultiVersionResource:(id)arg0;
+ (id)cdnMultiVersionCommonParameters;
+ (id)addCommonParamsForCDNMultiVersionURLString:(id)arg0;
+ (BOOL)isGeckoResource:(id)arg0;
+ (id)urlStringWithoutQueryAndFragment:(id)arg0;
+ (id)urlStringWithoutFragment:(id)arg0;
+ (void)addPreloadResource:(id)arg0 isMainResource:(BOOL)arg1;
+ (BOOL)isPreloadResource:(id)arg0;
+ (id)extractGeckoResourceInfo:(id)arg0;
+ (id)defalutCDNMultiVersionDomains;
+ (id)fetcherDictionary;
+ (id)globalInterceptors;
+ (id)generateCdnMultiVersionCommonParams;
+ (id)generateBucketWithDeviceID:(id)arg0;
+ (id)forestWithBlock:(id /* block */)arg0;
+ (id)geckoResourcePathForURLString:(id)arg0;
+ (BOOL)isSuitableForForest:(id)arg0;
+ (void)addDefaultCDNMultiVersionDomains:(id)arg0;
+ (long long)registerCustomFetcher:(Class)arg0;
+ (void)updateMemoryCacheLimit:(long long)arg0;
+ (void)updatePreloadMemoryCacheLimit:(long long)arg0;
+ (void)registerGlobalInterceptor:(id)arg0;
+ (void)unregisterGlobalInterceptor:(id)arg0;
+ (id)sharedInstance;
+ (id)eventMonitor;
+ (void)setEventMonitor:(id)arg0;
+ (id)preloadResources;

- (void)preload:(id)arg0;
- (id)initWithForestConfig:(id)arg0;
- (id)fetchResourceSync:(id)arg0 parameters:(id)arg1;
- (void)setOperationLock:(id)arg0;
- (id)fetchResourceAsync:(id)arg0 parameters:(id)arg1 completion:(id /* block */)arg2;
- (id)fetchResourceSync:(id)arg0 parameters:(id)arg1 error:(id *)arg2;
- (void)registerInterceptor:(id)arg0;
- (id)interceptors;
- (void)setInterceptors:(id)arg0;
- (id)createRequestWithURLString:(id)arg0 parameters:(id)arg1;
- (id)openSession:(id)arg0;
- (id)fetchLocalResourceSync:(id)arg0 parameters:(id)arg1;
- (void)preloadWithUrlString:(id)arg0 parameters:(id)arg1 needSubResources:(BOOL)arg2;
- (id)getPreloadConfig:(id)arg0 parameters:(id)arg1;
- (void)preloadSubResources:(id)arg0 parameters:(id)arg1;
- (id)fetchImageWithURL:(id)arg0 size:(struct CGSize { double x0; double x1; })arg1 downsampling:(BOOL)arg2 parameters:(id)arg3 completion:(id /* block */)arg4;
- (void)setForestConfig:(id)arg0;
- (id)forestConfig;
- (void)updateForestConfig:(id)arg0;
- (void)unregisterInterceptor:(id)arg0;
- (BOOL)containsChannelInChannelListWithSessionID:(id)arg0 andAccessKey:(id)arg1 andChannel:(id)arg2;
- (BOOL)addChannelToChannelListWithSessionID:(id)arg0 andAccessKey:(id)arg1 andChannel:(id)arg2;
- (void)preload:(id)arg0 parameters:(id)arg1;
- (void)preloadWithUrlString:(id)arg0 parameters:(id)arg1 isMainResource:(BOOL)arg2;
- (long long)resourceSceneWithUrlString:(id)arg0 isMainResource:(BOOL)arg1;
- (id)web_allowResourceExtensions;
- (void)setWeb_allowResourceExtensions:(id)arg0;
- (void)setIsSharedInstance:(BOOL)arg0;
- (void)setSessionIDToChannelList:(id)arg0;
- (id)mergedInterceptors;
- (id)fetchResourceAsyncWithRequest:(id)arg0 completion:(id /* block */)arg1;
- (void)completeWithRequest:(id)arg0 response:(id)arg1 error:(id)arg2;
- (void)reportFullLinkTrackData:(id)arg0;
- (void)invokeDidFetchWithRequest:(id)arg0 response:(id)arg1 error:(id)arg2;
- (void)monitorEvent:(id)arg0;
- (id)sessionIDToChannelList;
- (void)reportPreloadTrackData:(id)arg0 withRequest:(id)arg1;
- (void)reportComponentTrackData:(id)arg0;
- (id)fetchLocalResourceSync:(id)arg0;
- (id)fetchLocalResourceSync:(id)arg0 skipMonitor:(BOOL)arg1;
- (void)clearMemoryCacheFor:(id)arg0;
- (BOOL)isSharedInstance;
- (id)init;
- (void).cxx_destruct;
- (id)eventMonitor;
- (void)setEventMonitor:(id)arg0;
- (void)closeSession:(id)arg0;
- (id)operationLock;
- (id)resolveURL:(id)arg0;
- (void)setOperationManager:(id)arg0;
- (id)operationManager;

@end
