//
//     Generated by private class-dump
//

@class LVMediaDraft, NSString, LVResourceDownloader, LVDataBridge;
@protocol LVPlayerItemSourceDelegate, LVPlayerItemSourceDataSource;

@interface LVPlayerItemSource : NSObject <_LVTemplateSourceDelegate, _LVNLETemplateSourceDelegate> {
    struct shared_ptr<cut::TemplateSource> { struct TemplateSource *__ptr_; struct __shared_weak_count *__cntrl_; } m_src;
    struct shared_ptr<cut::LVResourceFetcher> { struct LVResourceFetcher *__ptr_; struct __shared_weak_count *__cntrl_; } m_resourceFetcher;
    struct shared_ptr<cut::_LVTemplateSourceOberser> { struct _LVTemplateSourceOberser *__ptr_; struct __shared_weak_count *__cntrl_; } m_observer;
    struct shared_ptr<cut::NLETemplateSource> { struct NLETemplateSource *__ptr_; struct __shared_weak_count *__cntrl_; } m_src_nle_template;
    struct shared_ptr<cut::_LVNLETemplateSourceOberser> { struct _LVNLETemplateSourceOberser *__ptr_; struct __shared_weak_count *__cntrl_; } m_observer_nle_template;
    NSString *_workspace;
    NSString *_region;
    id<LVPlayerItemSourceDelegate> _delegate;
    id<LVPlayerItemSourceDataSource> _dataSource;
    id /* block */ _progress;
    id /* block */ _completion;
    LVMediaDraft *_draft;
    LVDataBridge *_bridge;
    LVResourceDownloader *_downloader;
}

@property (copy, nonatomic) id /* block */ progress;
@property (copy, nonatomic) id /* block */ completion;
@property (copy, nonatomic) NSString *workspace;
@property (retain, nonatomic) LVMediaDraft *draft;
@property (retain, nonatomic) LVDataBridge *bridge;
@property (retain, nonatomic) LVResourceDownloader *downloader;
@property (readonly, copy, nonatomic) NSString *region;
@property (weak, nonatomic) id<LVPlayerItemSourceDelegate> delegate;
@property (weak, nonatomic) id<LVPlayerItemSourceDataSource> dataSource;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)workspacePath;
+ (id)transDraftToJson:(id)arg0;
+ (id)transJsonToDraft:(id)arg0;
+ (BOOL)isDownloadZipFailedErrorCode:(long long)arg0;
+ (BOOL)isUnzipFailedErrorCode:(long long)arg0;
+ (BOOL)isFetchEffectFailedErrorCode:(long long)arg0;

- (void)setDownloader:(id)arg0;
- (struct TemplateSourceConfig { BOOL x0; BOOL x1; })defaultSourceConfig;
- (void)configCore;
- (void)clearRsourceFetcher;
- (void)sourcePreSuccessProject:(struct shared_ptr<CutSame::TemplateModel> { struct TemplateModel *x0; struct __shared_weak_count *x1; })arg0;
- (void)sourceDidSuccessProject:(struct shared_ptr<CutSame::TemplateModel> { struct TemplateModel *x0; struct __shared_weak_count *x1; })arg0;
- (void)sourceDidFailedCode:(int)arg0 subCode:(int)arg1 message:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg2;
- (void)sourceDidUpdateProgress:(long long)arg0;
- (void)sourcePreSuccessNLETemplateProject:(struct shared_ptr<cut::model::NLETemplateModel> { struct NLETemplateModel *x0; struct __shared_weak_count *x1; })arg0;
- (void)sourceDidSuccessNLETemplateProject:(struct shared_ptr<cut::model::NLETemplateModel> { struct NLETemplateModel *x0; struct __shared_weak_count *x1; })arg0;
- (void)sourceDidFailedNLETemplateCode:(int)arg0 subCode:(int)arg1 message:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })arg2;
- (void)sourceDidUpdateNLETemplateProgress:(long long)arg0;
- (struct NLETemplateSourceConfig { BOOL x0; BOOL x1; })defaultNLETemplateSourceConfig;
- (void)configNLETemplateEffectDownloaderParams;
- (void)configNLETemplateCore;
- (id)initWithDownloadUrl:(id)arg0 templateID:(id)arg1 workspace:(id)arg2 region:(id)arg3;
- (id)initWithDownloadUrl:(id)arg0 templateID:(id)arg1 workspace:(id)arg2;
- (void)setupAsyncWithProgress:(id /* block */)arg0 completion:(id /* block */)arg1;
- (id)resultDraft;
- (id)resultNLEDraft;
- (void)downloadEffects:(id)arg0 completion:(id /* block */)arg1;
- (void)replaceFragments:(id)arg0;
- (id)region;
- (void)setDataSource:(id)arg0;
- (id)workspace;
- (id)dataSource;
- (id /* block */)completion;
- (void).cxx_destruct;
- (void)setCompletion:(id /* block */)arg0;
- (void)setup;
- (id)delegate;
- (void)cancel;
- (id /* block */)progress;
- (void)setDelegate:(id)arg0;
- (id)bridge;
- (void)dealloc;
- (void)setProgress:(id /* block */)arg0;
- (id)downloader;
- (id).cxx_construct;
- (void)setWorkspace:(id)arg0;
- (id)initWithWorkspace:(id)arg0;
- (id)draft;
- (void)setBridge:(id)arg0;
- (void)setDraft:(id)arg0;

@end
