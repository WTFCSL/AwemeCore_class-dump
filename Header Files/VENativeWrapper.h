//
//     Generated by private class-dump
//

@class NSDictionary, NLEEditor_OC, NSHashTable, AVAsset, VEEditorSessionConfig, NSMutableArray, NSString, NSMutableSet, IESMMImageMovieInfo, IESMMCanvasConfig, NSError, NSArray, IESMMMVModel, NSRecursiveLock, NSObject, VEEditorSession, NLEVEDataCache, IESMMTranscoderParam, HTSVideoData, NLEEditorConfiguration, IESVideoAddEdgeData, NSCondition;
@protocol OS_dispatch_queue, NLEResourceFinderProtocol, NLEVECallBackProtocol;

@interface VENativeWrapper : NSObject <NLEEditor_iOSListenerProtocol, NLEMediaProtocol> {
    struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *__ptr_; struct __shared_weak_count *__cntrl_; } _prevModel;
    BOOL _bCompleteCommit;
    BOOL _disableAutoUpdateCanvasSize;
    BOOL _stopRenderWhenNotActive;
    BOOL _isPlay;
    BOOL _enableHighFrameRateRender;
    BOOL _alwaysEnableHighFrameRateRender;
    HTSVideoData *_veVideoData;
    VEEditorSession *_veEditor;
    unsigned long long _videoDurationMode;
    NLEEditor_OC *_editor;
    NSArray *_arrViews;
    id /* block */ _stickerChangeEvent;
    id /* block */ _nleConvertUserInfoBlock;
    unsigned long long _compileType;
    long long _renderingCount;
    NSCondition *_runtimeControlCond;
    NSMutableSet *_videoDataUpdateInfos;
    id<NLEResourceFinderProtocol> _resourceFinder;
    NLEVEDataCache *_dataCache;
    id<NLEVECallBackProtocol> _listener;
    NSError *_renderError;
    id /* block */ _keyFrameJsonBlock;
    NLEEditorConfiguration *_nleConfig;
    NSObject<OS_dispatch_queue> *_updateVideoDataQueue;
    id /* block */ _beforeRender;
    id /* block */ _afterUpdateVideoData;
    VEEditorSessionConfig *_veConfig;
    NSMutableArray *_updateCompletions;
    NSRecursiveLock *_updateCompletionLock;
    NSObject<OS_dispatch_queue> *_keyframeSerialQueue;
    NSHashTable *_keyFrameListeners;
    struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *__ptr_; struct __shared_weak_count *__cntrl_; } _pStageModel;
}

@property (retain, nonatomic) VEEditorSession *veEditor;
@property (retain, nonatomic) HTSVideoData *veVideoData;
@property (retain, nonatomic) VEEditorSessionConfig *veConfig;
@property (retain, nonatomic) NSMutableArray *updateCompletions;
@property (retain, nonatomic) NSRecursiveLock *updateCompletionLock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *keyframeSerialQueue;
@property (retain, nonatomic) NSHashTable *keyFrameListeners;
@property (readonly, nonatomic) struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *__ptr_; struct __shared_weak_count *__cntrl_; } pStageModel;
@property (readonly, nonatomic) struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; } prevStageModel;
@property long long renderingCount;
@property (retain, nonatomic) NSCondition *runtimeControlCond;
@property (copy, nonatomic) NSArray *arrViews;
@property (retain, nonatomic) NSMutableSet *videoDataUpdateInfos;
@property (retain, nonatomic) id<NLEResourceFinderProtocol> resourceFinder;
@property (nonatomic) BOOL disableAutoUpdateCanvasSize;
@property (copy, nonatomic) id /* block */ nleConvertUserInfoBlock;
@property (nonatomic) BOOL isPlay;
@property (retain, nonatomic) NLEVEDataCache *dataCache;
@property (weak, nonatomic) id<NLEVECallBackProtocol> listener;
@property (retain, nonatomic) NSError *renderError;
@property (copy, nonatomic) id /* block */ stickerChangeEvent;
@property (copy, nonatomic) id /* block */ keyFrameJsonBlock;
@property (nonatomic) BOOL enableHighFrameRateRender;
@property (nonatomic) BOOL alwaysEnableHighFrameRateRender;
@property (retain, nonatomic) NLEEditorConfiguration *nleConfig;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *updateVideoDataQueue;
@property (copy, nonatomic) id /* block */ beforeRender;
@property (copy, nonatomic) id /* block */ afterUpdateVideoData;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL enableMultiTrack;
@property (nonatomic) unsigned long long videoDurationMode;
@property (copy, nonatomic) id /* block */ reverseBlock;
@property (retain, nonatomic) IESVideoAddEdgeData *previewEdge;
@property (readonly, copy, nonatomic) id /* block */ normalizeConverter;
@property (retain, nonatomic) IESVideoAddEdgeData *infoStickerAddEdgeData;
@property (retain, nonatomic) NLEEditor_OC *editor;
@property (nonatomic) long long status;
@property (readonly, nonatomic) double currentPlayerTime;
@property (nonatomic) double realVideoFramePts;
@property (retain, nonatomic) IESMMMVModel *veMVModel;
@property (retain, nonatomic) IESMMImageMovieInfo *imageMovieInfo;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } videoSize;
@property (nonatomic) unsigned long long compileType;
@property (nonatomic) long long colorSpace;
@property (copy, nonatomic) id /* block */ mixPlayerCompleteBlock;
@property (copy, nonatomic) id /* block */ playToEndBlock;
@property (readonly) BOOL isInited;
@property (readonly, nonatomic) BOOL shouldPrepare;
@property (readonly, nonatomic) double totalVideoDuration;
@property (readonly, nonatomic) double totalVideoDurationAddTimeMachine;
@property (readonly, nonatomic) double maxTrackDuration;
@property (readonly, nonatomic) double totalBGAudioDuration;
@property (copy, nonatomic) id /* block */ effectPathBlock;
@property (nonatomic) BOOL isFastImport;
@property (nonatomic) BOOL isRecordFromCamera;
@property (nonatomic) BOOL isMicMuted;
@property (copy, nonatomic) NSDictionary *metaRecordInfo;
@property (copy, nonatomic) NSDictionary *dataInfo;
@property (retain, nonatomic) IESMMCanvasConfig *preferCanvasConfig;
@property (nonatomic) struct CGSize { double x0; double x1; } normalizeSize;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSDictionary *extraInfo;
@property (nonatomic) BOOL notSupportCrossplat;
@property (nonatomic) BOOL crossplatCompile;
@property (nonatomic) BOOL crossplatInput;
@property (nonatomic) BOOL crossplatMultiTrack;
@property (nonatomic) BOOL disableMetadataInfo;
@property (nonatomic) int previewFrameRate;
@property (nonatomic) long long contentSource;
@property (copy, nonatomic) NSString *extraMetaInfo;
@property (nonatomic) struct CGSize { double x0; double x1; } canvasSize;
@property (copy, nonatomic) NSString *musicID;
@property (nonatomic) BOOL isDetectMode;
@property (readonly, copy, nonatomic) NSArray *effect_timeRange;
@property (readonly, copy, nonatomic) NSArray *effect_operationTimeRange;
@property (retain, nonatomic) AVAsset *effect_reverseAsset;
@property (readonly, copy, nonatomic) NSDictionary *effect_dictionary;
@property (readonly, nonatomic) double effect_videoDuration;
@property (retain, nonatomic) AVAsset *videoHeader;
@property (retain, nonatomic) AVAsset *endingWaterMarkAudio;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } importTransform;
@property (retain, nonatomic) IESMMTranscoderParam *transParam;
@property (nonatomic) BOOL bCompleteCommit;
@property (nonatomic) BOOL stopRenderWhenNotActive;

+ (id)fadeConfigOfSegment:(struct shared_ptr<cut::model::NLESegmentAudio> { struct NLESegmentAudio *x0; struct __shared_weak_count *x1; })arg0 targetDuration:(double)arg1;

- (void)setExtraInfo:(id)arg0;
- (void)setIsPlay:(BOOL)arg0;
- (BOOL)isPlay;
- (unsigned long long)getEffectHandle;
- (BOOL)getColorFilterIntensity:(id)arg0 outIntensity:(float *)arg1;
- (BOOL)updateComposerNode:(id)arg0 key:(id)arg1 value:(double)arg2;
- (BOOL)updateMutipleComposerNodes:(id)arg0 keys:(id)arg1 values:(id)arg2;
- (long long)setStickerPreviewMode:(id)arg0 previewMode:(int)arg1;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSizeNormaliz:(long long)arg0;
- (id)getInfoStickers;
- (struct CGSize { double x0; double x1; })getstickerEditBoxSize:(long long)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getstickerEditBoundBox:(long long)arg0;
- (struct CGSize { double x0; double x1; })getInfoStickerSize:(long long)arg0;
- (double)getStickerRotation:(long long)arg0;
- (struct CGPoint { double x0; double x1; })getStickerPosition:(long long)arg0;
- (BOOL)getStickerVisible:(long long)arg0;
- (BOOL)getInfoStickerIsDynamic:(long long)arg0;
- (BOOL)isInfoStickerOutOfBounds;
- (void)cancelPin:(long long)arg0;
- (long long)getStickerPinStatus:(long long)arg0;
- (id)getTemplateStickerTextParams:(long long)arg0;
- (BOOL)isAnimationSticker:(long long)arg0;
- (void)startChangeStickerDuration:(long long)arg0;
- (void)stopChangeStickerDuration:(long long)arg0;
- (void)setInfoStickerRestoreMode:(long long)arg0;
- (void)updateSticker:(long long)arg0;
- (void)setStickerLayer:(long long)arg0 layer:(long long)arg1;
- (void)setSticker:(long long)arg0 startTime:(double)arg1 duration:(double)arg2;
- (void)setTextStickerAnim:(long long)arg0 animType:(unsigned long long)arg1 animPath:(id)arg2 duration:(double)arg3;
- (id)musicID;
- (BOOL)isFastImport;
- (void)appendComposerNodesWithTags:(id)arg0;
- (void)removeComposerNodesWithTags:(id)arg0;
- (BOOL)replaceComposerNodesWithNewTag:(id)arg0 old:(id)arg1;
- (void)setEffectLoadStatusBlock:(id /* block */)arg0;
- (void)setDataInfo:(id)arg0;
- (double)maxTrackDuration;
- (void)resetPlayerWithViews:(id)arg0;
- (double)currentPlayerTime;
- (void)setMusicID:(id)arg0;
- (unsigned long long)getEffectHandle:(BOOL)arg0;
- (long long)exportResource:(id)arg0 isGlobal:(BOOL)arg1;
- (BOOL)isInited;
- (id)resourceFinder;
- (void)setResourceFinder:(id)arg0;
- (id)renderError;
- (void)setRenderError:(id)arg0;
- (void)setPlayerVolume:(float)arg0;
- (void)setDisableAutoUpdateCanvasSize:(BOOL)arg0;
- (id)assetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)getAbsolutePathWithResource:(struct shared_ptr<const cut::model::NLEResourceNode> { struct NLEResourceNode *x0; struct __shared_weak_count *x1; })arg0;
- (id)getBrushStickerInfoWithSlotId:(id)arg0;
- (void)saveBrushStickerToPNGWithSlotId:(id)arg0 savePath:(id)arg1 completion:(id /* block */)arg2;
- (void)setStickerEditMode:(BOOL)arg0;
- (void)editor:(id)arg0 doRenderWithCurrentModel:(id)arg1 completion:(id /* block */)arg2;
- (long long)stickerIdForSlot:(id)arg0;
- (id)veVideoData;
- (id)getVideoProcess;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setMixPlayerCompleteBlock:(id /* block */)arg0;
- (void)setFirstRenderBlk:(id /* block */)arg0;
- (void)setUserInfo:(id)arg0 forStickerSlot:(id)arg1;
- (unsigned long long)compileType;
- (void)setCompileType:(unsigned long long)arg0;
- (void)setFailedToPlayBlk:(id /* block */)arg0;
- (void)setAutoRepeatPlay:(BOOL)arg0;
- (id)arrViews;
- (void)pauseAsync;
- (void)syncRefreshCurrentFrame;
- (BOOL)shouldPrepare;
- (BOOL)stopRenderWhenNotActive;
- (void)setStopRenderWhenNotActive:(BOOL)arg0;
- (void)activeEditor:(id /* block */)arg0;
- (id)previewEdge;
- (id)getUserInfoForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)veConfig;
- (BOOL)enableMultiTrack;
- (void)setBCompleteCommit:(BOOL)arg0;
- (void)setNleConfig:(id)arg0;
- (BOOL)isRecordFromCamera;
- (void)setIsRecordFromCamera:(BOOL)arg0;
- (id)imageMovieInfo;
- (void)setImageMovieInfo:(id)arg0;
- (void)setVideoDurationMode:(unsigned long long)arg0;
- (void)resetPlayerWithViews:(id)arg0 opaque:(BOOL)arg1;
- (void)setArrViews:(id)arg0;
- (id)nleConfig;
- (void)pauseAsync:(BOOL)arg0;
- (long long)renderingCount;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })mapOriginalPositionToTimeEffectPosition:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (double)totalVideoDuration;
- (id)transParam;
- (void)setTransParam:(id)arg0;
- (id)extraMetaInfo;
- (id /* block */)beforeRender;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })mapTimeEffectPositionToOriginalPosition:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (BOOL)autoRepeatPlay;
- (id /* block */)mixPlayerCompleteBlock;
- (id /* block */)playToEndBlock;
- (void)setRenderingCount:(long long)arg0;
- (id)videoDataUpdateInfos;
- (unsigned long long)videoDurationMode;
- (double)totalVideoDuration:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0;
- (void)setCanvasMinDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 needPrepare:(BOOL)arg1;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 seekMode:(unsigned long long)arg1;
- (struct CGSize { double x0; double x1; })getVideoSize;
- (void)setEditBoxSizeCache:(struct CGSize { double x0; double x1; })arg0 scale:(double)arg1 forStickerSlot:(id)arg2;
- (id)slotIdForSticker:(long long)arg0;
- (id)userInfoForStickerSlot:(id)arg0;
- (double)totalVideoDurationAddTimeMachine;
- (void)clearEditoReverseAsset;
- (void)resetPreModel;
- (void)setNLEEditor:(id)arg0;
- (void)clearVideoData;
- (void)resetPlayerViewSize:(struct CGSize { double x0; double x1; })arg0;
- (double)getLastPlayFramRate;
- (double)nleTotalVideoDuration:(id)arg0;
- (id)getFirstRenderTime;
- (BOOL)useGlobalEffectGroup;
- (id)slotNameForEffectRangID:(id)arg0;
- (id)effectRangIDForSlot:(id)arg0;
- (void)startEffectWithPathId:(id)arg0 withTime:(double)arg1;
- (void)stopEffectwithTime:(double)arg0;
- (void)saveBrushStickerContextWithSlotName:(id)arg0 draftPath:(id)arg1 completion:(id /* block */)arg2;
- (void)updateBrushStickerToSnapshotWithSlotId:(id)arg0;
- (void)preparePin;
- (void)beginInfoStickerPin:(long long)arg0;
- (id)getInfoStickerPinDataFile:(long long)arg0;
- (void)syncForceModeRefreshCurrentFrame;
- (void)removeUserInfo:(id)arg0;
- (void)setVEOperateCallback:(id)arg0;
- (void)updateStickerAnimation:(id)arg0;
- (void)disableStickerAnimation:(id)arg0;
- (void)addStickerByUIImage:(id)arg0 letterInfo:(id)arg1 duration:(double)arg2;
- (void)getStickerId:(long long)arg0 props:(id)arg1;
- (void)setCaptionStickerImageBlock:(id /* block */)arg0;
- (id)assetFromSlotOC:(id)arg0;
- (void)setHighFrameRateRender:(BOOL)arg0;
- (long long)getPreviewModeType:(id)arg0;
- (void)setPreviewModeType:(long long)arg0 toView:(id)arg1;
- (void)setAutoPlayWhenAppBecomeActive:(BOOL)arg0;
- (BOOL)autoPlayWhenAppBecomeActive;
- (void)setMixPlayerDisableAutoResume:(BOOL)arg0;
- (void)startEditMode:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)lockSeekVideoClip:(id)arg0;
- (void)unLockSeekVideoClip;
- (void)seekToTimeMachineTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (struct CGSize { double x0; double x1; })getNewFrameSize;
- (void)updateVideoData:(id)arg0 completeBlock:(id /* block */)arg1;
- (void)updateVideoData:(id)arg0 completeBlock:(id /* block */)arg1;
- (BOOL)updateMutipleComposerNodes:(id)arg0 keys:(id)arg1 values:(id)arg2 track:(id)arg3;
- (BOOL)switchColorFilterIntensity:(id)arg0 inFilterPath:(id)arg1 inPosition:(float)arg2 inLeftIntensity:(float)arg3 inRightIntensity:(float)arg4 track:(id)arg5;
- (void)refreshAudioPlayer;
- (void)effect_cleanOperation;
- (void)effect_reCalculateEffectiveTimeRange;
- (double)effect_currentTimeMachineDurationWithType:(long long)arg0;
- (void)setMetaData:(id)arg0 recordInfo:(long long)arg1 MD5:(id)arg2 needStore:(BOOL)arg3;
- (long long)effect_TimeRepeatCount;
- (double)effect_TimeSlowSpeed;
- (void)activeEffectMessageCenter;
- (void)inactiveEffectMessageCenter;
- (void)observerEffectMessageCenterVePublicCallback:(id /* block */)arg0 veOcCallback:(id)arg1;
- (void)removeObserverEffectMessageCenterCallback:(id)arg0;
- (void)setEffectMessageCallback:(id /* block */)arg0 flag:(unsigned char)arg1;
- (void)removeEffectMessageCallback;
- (void)setCompileTargetFileInfoCallback:(id /* block */)arg0;
- (void)setInvalidMetaDataCallBack:(id /* block */)arg0;
- (void)setInvalidMetadataTimeCallBack:(id /* block */)arg0;
- (int)addMetadata:(id)arg0 value:(id)arg1;
- (void)setAssetRotationInfo:(id)arg0 forSlot:(id)arg1;
- (id)assetRotationInfoOfSlot:(id)arg0;
- (void)setBingoKey:(id)arg0 forSlot:(id)arg1;
- (id)bingoKeyOfSlot:(id)arg0;
- (void)setMovieInputFillType:(id)arg0 forSlot:(id)arg1;
- (id)movieInputFillTypeOfSlot:(id)arg0;
- (id)movieFillTypeOfSlot:(id)arg0;
- (BOOL)isNewImageMovie;
- (void)setImageMovieInfoWithUIImages:(id)arg0 imageShowDuration:(id)arg1;
- (void)setPhotoAssetsImageInfoWithImage:(id)arg0 slot:(id)arg1;
- (void)clearPhotoAssetsImageInfo;
- (int)applyLensOneKeyHdrDetect;
- (void)setNthRenderBlk:(id /* block */)arg0;
- (void)setTemplateFirstRenderBlk:(id /* block */)arg0;
- (void)setPrepareDoneBlk:(id /* block */)arg0;
- (void)completeConfigTemplate;
- (void)enableKeyFrameCallback;
- (void)addKeyFrameListener:(id)arg0;
- (void)setAfterUpdateVideoDataBlock:(id /* block */)arg0;
- (id)getAllKeyFramesAtPts:(unsigned long long)arg0;
- (double)getaudioVolumeKeyFrameAtPts:(unsigned long long)arg0 withAVAsset:(id)arg1;
- (id)maskCacheForSlot:(id)arg0;
- (id)getCachedFeaturesForVideoSlotOC:(id)arg0;
- (id)getCachedChromaForVideoSlot:(id)arg0;
- (id /* block */)getNLEStickerRecoverActionBlock;
- (void)setImageResizeWidth:(int)arg0 height:(int)arg1 resFillMode:(long long)arg2 resizeAlgorithm:(long long)arg3;
- (int)setPreviewFps:(int)arg0 isDynamicAdjust:(BOOL)arg1;
- (long long)exportResource:(id)arg0;
- (long long)sendEffectMsg:(long long)arg0 arg1:(long long)arg1 arg2:(long long)arg2 arg3:(id)arg3;
- (long long)sendEffectMsg:(long long)arg0 isGlobal:(BOOL)arg1 arg1:(long long)arg2 arg2:(long long)arg3 arg3:(id)arg4;
- (long long)setRenderCachePath:(id)arg0 path:(id)arg1;
- (id)veEditor;
- (void)setReverseBlock:(id /* block */)arg0;
- (void)setPreviewEdge:(id)arg0;
- (id /* block */)normalizeConverter;
- (id)infoStickerAddEdgeData;
- (void)setInfoStickerAddEdgeData:(id)arg0;
- (void)setPlayToEndBlock:(id /* block */)arg0;
- (double)totalBGAudioDuration;
- (id /* block */)stickerChangeEvent;
- (void)setStickerChangeEvent:(id /* block */)arg0;
- (id /* block */)nleConvertUserInfoBlock;
- (void)setNleConvertUserInfoBlock:(id /* block */)arg0;
- (id /* block */)effectPathBlock;
- (void)setEffectPathBlock:(id /* block */)arg0;
- (BOOL)disableAutoUpdateCanvasSize;
- (void)setIsFastImport:(BOOL)arg0;
- (BOOL)isMicMuted;
- (void)setIsMicMuted:(BOOL)arg0;
- (id)metaRecordInfo;
- (void)setMetaRecordInfo:(id)arg0;
- (id)dataInfo;
- (id)preferCanvasConfig;
- (void)setPreferCanvasConfig:(id)arg0;
- (struct CGSize { double x0; double x1; })normalizeSize;
- (void)setNormalizeSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)notSupportCrossplat;
- (void)setNotSupportCrossplat:(BOOL)arg0;
- (BOOL)crossplatCompile;
- (void)setCrossplatCompile:(BOOL)arg0;
- (BOOL)crossplatInput;
- (void)setCrossplatInput:(BOOL)arg0;
- (BOOL)crossplatMultiTrack;
- (void)setCrossplatMultiTrack:(BOOL)arg0;
- (BOOL)disableMetadataInfo;
- (void)setDisableMetadataInfo:(BOOL)arg0;
- (void)setExtraMetaInfo:(id)arg0;
- (BOOL)isDetectMode;
- (void)setIsDetectMode:(BOOL)arg0;
- (id)effect_timeRange;
- (id)effect_operationTimeRange;
- (id)effect_reverseAsset;
- (void)setEffect_reverseAsset:(id)arg0;
- (id)effect_dictionary;
- (double)effect_videoDuration;
- (id)videoHeader;
- (void)setVideoHeader:(id)arg0;
- (id)endingWaterMarkAudio;
- (void)setEndingWaterMarkAudio:(id)arg0;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })importTransform;
- (void)setImportTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })arg0;
- (BOOL)bCompleteCommit;
- (struct shared_ptr<cut::model::NLEEditor> { struct NLEEditor *x0; struct __shared_weak_count *x1; })pCurNLEEditor;
- (struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })pStageModel;
- (void)removeAssetFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addForceUpdateWithType:(long long)arg0 tag:(id)arg1;
- (void)setVideoDataUpdateInfos:(id)arg0;
- (void)setBeforeRender:(id /* block */)arg0;
- (id /* block */)afterUpdateVideoData;
- (void)setAfterUpdateVideoData:(id /* block */)arg0;
- (void)addAudioAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addAudioKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateAudioAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)syncAudioKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 withKeyFrameChange:(void *)arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeAudioAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)audioFilterCacheKeyForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)p_updateClipRangeForAsset:(id)arg0 WithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)p_updateVolumForAsset:(id)arg0 isVideo:(BOOL)arg1 withSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg3;
- (void)p_updatePitchFilterForAsset:(id)arg0 isVideo:(BOOL)arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg3;
- (void)p_updateAudioFadeConfigForAsset:(id)arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)p_updateAudioSpeedForAsset:(id)arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (id)p_applySoundFilterForAsset:(id)arg0 type:(int)arg1 config:(id)arg2 isVideo:(BOOL)arg3 regenerate:(BOOL)arg4;
- (void)removeAudioFilterForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 type:(int)arg1;
- (void)p_updatePitchV2FilterForAsset:(id)arg0 isVideo:(BOOL)arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg3;
- (void)p_updateLocalPitchFilterForAsset:(id)arg0 isVideo:(BOOL)arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg3;
- (id)samiPitchConfigForAudioEffectAdjustFilter:(struct shared_ptr<cut::model::NLESegmentAudioEffectAdjustFilter> { struct NLESegmentAudioEffectAdjustFilter *x0; struct __shared_weak_count *x1; })arg0;
- (id)pitchConfigForSegment:(struct shared_ptr<cut::model::NLESegmentAudio> { struct NLESegmentAudio *x0; struct __shared_weak_count *x1; })arg0;
- (id)pitchConfigV2ForSegment:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateAudioKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeAudioKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeAudioFilterForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)p_getClipRangeForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addBrushStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateBrushStickerWithPrevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 slot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeBrushStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (struct shared_ptr<cut::model::NLESegmentBrushSticker> { struct NLESegmentBrushSticker *x0; struct __shared_weak_count *x1; })brushStickerSegmentWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)makeVEBrushStickerParamWithSegment:(struct shared_ptr<cut::model::NLESegmentBrushSticker> { struct NLESegmentBrushSticker *x0; struct __shared_weak_count *x1; })arg0 prevSegment:(struct shared_ptr<cut::model::NLESegmentBrushSticker> { struct NLESegmentBrushSticker *x0; struct __shared_weak_count *x1; })arg1;
- (unsigned long long)makeVEBrushStickerOptionWithNLEBrushOption:(int)arg0;
- (void)addNewChromaForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateChromaForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeChromaForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)p_generateChromaFromSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addColorForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateColorForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeColorForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)nle_color_imageWithColor:(id)arg0 size:(struct CGSize { double x0; double x1; })arg1;
- (void)syncVideoForCover:(const void *)arg0 completion:(id /* block */)arg1;
- (void)updateImageAssetForCoverWithPath:(id)arg0 completion:(id /* block */)arg1;
- (void)rebuildOriginTracksForCover:(id /* block */)arg0;
- (void)syncEffectAssets:(void *)arg0;
- (void)addGlobalEffectForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateGlobalEffectForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeGlobalEffectForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)SaveRangIDWithSlotID:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)configAdjustParamsIfNeededForVEAmazingFeature:(id)arg0 withSegmentEffect:(struct shared_ptr<cut::model::NLESegmentEffect> { struct NLESegmentEffect *x0; struct __shared_weak_count *x1; })arg1;
- (void)configAdjustParamsIfNeededForVEAmazingFeature:(id)arg0 withSegmentEffect:(struct shared_ptr<cut::model::NLESegmentEffect> { struct NLESegmentEffect *x0; struct __shared_weak_count *x1; })arg1;
- (id)effectRangIDForSlotName:(id)arg0;
- (void)RemoveRangIDWithSlotID:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)effectErrorDomain;
- (void)addNewFilterForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateFilterForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0 prevNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg1 diffContext:(id)arg2;
- (void)removeFilterForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0;
- (void)syncFilterKeyFrame:(void *)arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)addNewFilterForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0;
- (void)addGlobalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addNewFilterForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateFilterForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 preTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 diffContext:(id)arg2;
- (void)updateGlobalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateFilterForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeFilterForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)removeGlobalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)addNormalFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addAmazingFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addHSLFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateNormalFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateAmazingFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeNormalFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeAmazingFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 prevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (int)p_getResourceTag:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addGlobalNormalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addGlobalAmazingFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateGlobalNormalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateGlobalAmazingFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeGlobalNormalFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)removeGlobalAmazingFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateHSLFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeHSLFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (id)p_generateFilterFromSegmentFilter:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0 StartTime:(double)arg1 EndTime:(double)arg2 Order:(int)arg3;
- (void)cacheFilterFeature:(id)arg0 forSegmentFilter:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg1 withSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (id)getCachedFeature:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)p_updateFilterParamWithVEFilter:(id)arg0 NLESegmentFilter:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg1 StartTime:(double)arg2 EndTime:(double)arg3 Order:(int)arg4;
- (void)removeCachedFilterAmazingFeatures:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (struct vector<std::shared_ptr<cut::model::NLEFilter>, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLEFilter> *, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; } x2; })p_getFiltersfromMainSegmentOrSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addGlobalAmazingFilterWithNLEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateGlobalAmazingFilterWithNLEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (id)p_generateBeautyParamsWithNLESegmentBeauty:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0;
- (id)p_generateHSLParamsWithNLESegmentHSL:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0;
- (id)getCachedFeaturesForVideoSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateAudioPitchFilterForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 preTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)addAudioPitchFilterToTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 filter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)updateAudioPitchFilterToTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 filter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)audioFilterWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 filter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 resourcePath:(id)arg2 completion:(id /* block */)arg3;
- (id)nonPitchAudioFiltersInFilters:(id)arg0;
- (void)p_updateHSLFilterParamWithVEFilter:(id)arg0 NLESegmentFilter:(struct shared_ptr<cut::model::NLESegmentHSLFilter> { struct NLESegmentHSLFilter *x0; struct __shared_weak_count *x1; })arg1 StartTime:(double)arg2 EndTime:(double)arg3;
- (void)cacheHSLFilterFeature:(id)arg0 forSegmentFilter:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg1 withSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (id)getCachedHSLFeature:(struct shared_ptr<cut::model::NLESegmentFilter> { struct NLESegmentFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeCachedFilterHSLFeatures:(struct shared_ptr<cut::model::NLESegmentHSLFilter> { struct NLESegmentHSLFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (struct vector<std::shared_ptr<cut::model::NLEFilter>, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; void *x1; struct __compressed_pair<std::shared_ptr<cut::model::NLEFilter> *, std::allocator<std::shared_ptr<cut::model::NLEFilter>>> { void *x0; } x2; })p_getHSLFiltersfromMainSegmentOrSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addGlobalHSLFilterWithNLEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateGlobalHSLFilterWithNLEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (int)p_convertColorToVEFromNLE:(int)arg0;
- (void)addGlobalHSLFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateGlobalHSLFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeGlobalHSLFilter:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (id)getCachedHSLFeaturesForVideoSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)addFilterKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)checkKeyFrameForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 withTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)syncFilterKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 track:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 withKeyFrameChange:(void *)arg2;
- (void)updateFilterKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeFilterKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)addDSPFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addBalanceFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addVolumeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addFadeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateDSPFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateBalanceFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateVolumeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateFadeFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 withPrevFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (id)p_removeCachedVEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)handleRenderCache:(struct shared_ptr<cut::model::NLESegmentComposerFilter> { struct NLESegmentComposerFilter *x0; struct __shared_weak_count *x1; })arg0;
- (void)p_cacheNormalFilter:(id)arg0 withFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg1 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg2;
- (id)p_getCachedVEFilter:(struct shared_ptr<cut::model::NLEFilter> { struct NLEFilter *x0; struct __shared_weak_count *x1; })arg0 forSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)p_removeNoneRangeVEFilter:(int)arg0 forAudioSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)addVideoAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (BOOL)updateVideoAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeVideoAssetForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 isInMainTrack:(BOOL)arg1;
- (void)reArrangeVideoAssetsForMainTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0;
- (void)removeCacheFeatureForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)p_updateVideoCanvasWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2;
- (void)p_reconfigVideoSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg3;
- (void)p_updateCropWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2;
- (void)p_updateClipWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg3;
- (void)p_updateSpeedWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2;
- (void)p_updatePitchWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2;
- (void)p_updateCanvasSourceWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 asset:(id)arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)p_updateVideoMixWithPrevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 curSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)p_updateMovieInputFillTypeWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 asset:(id)arg2 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg3;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x0; unsigned long long x1; unsigned long long x2; } x0; struct __short { char x0[23]; struct { unsigned char x0; } x1; } x1; struct __raw { unsigned long long x0[3]; } x2; } x0; } x0; } x0; })p_getMovieInputFillTypeKey;
- (id)canvasConfigForCanvasMaterial:(struct shared_ptr<cut::model::NLEStyCanvas> { struct NLEStyCanvas *x0; struct __shared_weak_count *x1; })arg0;
- (void)checkKeyFrameForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 withChangeInfo:(struct SlotChangeInfo { struct NodeChangeInfo { int x0; int x1; struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; } x2; struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; } x3; } x0; struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; } x1; })arg2;
- (void)syncVideoKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 withKeyFrameChange:(struct vector<NodeChangeInfo, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; struct NodeChangeInfo *x1; struct __compressed_pair<NodeChangeInfo *, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; } x2; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (BOOL)p_checkFiltersForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (BOOL)p_checkChromaChannelsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateVideoKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2 keyframesFromTrack:(BOOL)arg3;
- (void)removeVideoKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atTime:(unsigned long long)arg1;
- (void)addVideoKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)addNewStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateStickerAnimationForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 oriSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)syncStickerKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 withKeyFrameChange:(void *)arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (long long)addNewInfoStickerInRandomPositionWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (long long)addNewTextStickerInRandomPositionWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (long long)addNewSubtitleStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (long long)addTextTemplateWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (long long)addNewImageStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateBaseStickerInfoWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateTextStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateSubtitleStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateTextTemplateWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateImageStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeAllStickerAnimationForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)removeInfoStickerWithSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (long long)p_stickerIDForNLETrackSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)setSticker:(long long)arg0 layer:(long long)arg1;
- (void)setSticker:(long long)arg0 FlipX:(BOOL)arg1 FlipY:(BOOL)arg2;
- (void)setSticker:(long long)arg0 Alpha:(double)arg1;
- (void)setSticker:(long long)arg0 offsetX:(double)arg1 offsetY:(double)arg2 angle:(double)arg3 scale:(double)arg4 updateForce:(BOOL)arg5;
- (void)p_removeStickerCache:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateNewRelationForSticker:(id)arg0 prevStickerId:(long long)arg1;
- (void)p_updateStickerAnimationWithStickerId:(long long)arg0 StickerAnim:(struct shared_ptr<cut::model::NLEStyStickerAnim> { struct NLEStyStickerAnim *x0; struct __shared_weak_count *x1; })arg1 oriStickerAnim:(struct shared_ptr<cut::model::NLEStyStickerAnim> { struct NLEStyStickerAnim *x0; struct __shared_weak_count *x1; })arg2 animationType:(unsigned long long)arg3 duration:(double)arg4;
- (BOOL)p_stickerAnimationChanged:(struct shared_ptr<cut::model::NLEStyStickerAnim> { struct NLEStyStickerAnim *x0; struct __shared_weak_count *x1; })arg0 oriStickerAnim:(struct shared_ptr<cut::model::NLEStyStickerAnim> { struct NLEStyStickerAnim *x0; struct __shared_weak_count *x1; })arg1 type:(unsigned long long)arg2;
- (void)addStickerKeyFramesForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)updateStickerKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)removeStickerKeyFramsForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 atKeyFrame:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg2;
- (void)addSlotInfo:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 inUserInfo:(id)arg1;
- (void)updatePinForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removePinForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateAudioData:(id)arg0;
- (void)addTimeEffectWithNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0 completion:(id /* block */)arg1;
- (void)updateTimeEffectWithNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0 prevNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)removeTimeEffectWithNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0;
- (void)addTimeEffectWithTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 completion:(id /* block */)arg1;
- (void)updateTimeEffectForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0 prevTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)removeTimeEffectForTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg0;
- (void)addTimeEffectWithMainSegment:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 completion:(id /* block */)arg1;
- (void)addTimeEffect:(struct shared_ptr<cut::model::NLESegmentTimeEffect> { struct NLESegmentTimeEffect *x0; struct __shared_weak_count *x1; })arg0 withTimeSpaceNode:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (BOOL)shouldApplyTimeEffect:(struct shared_ptr<const cut::model::NLESegmentTimeEffect> { struct NLESegmentTimeEffect *x0; struct __shared_weak_count *x1; })arg0 withTimeSpaceNode:(struct shared_ptr<const cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1;
- (void)p_addForceUpdateTimeEffectWithTag:(id)arg0;
- (void)updateTimeEffectForMainSegment:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)updateTimeEffect:(struct shared_ptr<cut::model::NLESegmentTimeEffect> { struct NLESegmentTimeEffect *x0; struct __shared_weak_count *x1; })arg0 timeSpaceNode:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1 prevTimeEffect:(struct shared_ptr<cut::model::NLESegmentTimeEffect> { struct NLESegmentTimeEffect *x0; struct __shared_weak_count *x1; })arg2 prevTimeSpaceNode:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg3 completion:(id /* block */)arg4;
- (void)removeTimeEffect:(struct shared_ptr<const cut::model::NLESegmentTimeEffect> { struct NLESegmentTimeEffect *x0; struct __shared_weak_count *x1; })arg0 withTimeSpaceNode:(struct shared_ptr<const cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeTimeEffectForMainSegment:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateTransitionForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)updateTransitionComparePrevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 newSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeTransitionForSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateVideoAnimationForSlot:(void *)arg0 prevSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeVideoAnimationForSlot:(void *)arg0;
- (struct vector<NodeChangeInfo, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; struct NodeChangeInfo *x1; struct __compressed_pair<NodeChangeInfo *, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; } x2; })diffVideoAnimation:(const void *)arg0 prevVideoAnimation:(const void *)arg1;
- (void)addVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)updateVideoAnimation:(void *)arg0 prevVideoAnimation:(void *)arg1 forSlot:(void *)arg2;
- (void)removeVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)addImageVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)addNormalVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (BOOL)equalVideoAnimation:(void *)arg0 prevVideoAnimation:(void *)arg1;
- (void)updateImageVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)updateNormalVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)removeImageVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)removeNormalVideoAnimation:(void *)arg0 forSlot:(void *)arg1;
- (void)addVideoEffectForNode:(void *)arg0;
- (void)updateVideoEffectForNode:(void *)arg0 prevNode:(void *)arg1;
- (void)removeVideoEffectForNode:(void *)arg0;
- (void)addVideoEffectForTrack:(void *)arg0;
- (void)addVideoEffectForSlot:(void *)arg0;
- (void)updateVideoEffectForTrack:(void *)arg0 prevTrack:(void *)arg1;
- (void)updateVideoEffectForSlot:(void *)arg0 prevSlot:(void *)arg1;
- (void)removeVideoEffectForTrack:(void *)arg0;
- (void)removeVideoEffectForSlot:(void *)arg0;
- (void)addVideoEffect:(void *)arg0 forTrack:(void *)arg1;
- (struct vector<NodeChangeInfo, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; struct NodeChangeInfo *x1; struct __compressed_pair<NodeChangeInfo *, std::allocator<NodeChangeInfo>> { struct NodeChangeInfo *x0; } x2; })difVideoEffect:(const void *)arg0 curFilter:(const void *)arg1;
- (void)updateVideoEffect:(void *)arg0 forTrack:(void *)arg1;
- (void)removeVideoEffect:(void *)arg0 forTrack:(void *)arg1;
- (void)addVideoEffectSlot:(void *)arg0 forSlot:(void *)arg1;
- (void)updateVideoEffectSlot:(struct shared_ptr<cut::model::NLETrackSlot> { struct NLETrackSlot *x0; struct __shared_weak_count *x1; })arg0 forSlot:(void *)arg1;
- (void)removeVideoEffectSlot:(void *)arg0 forSlot:(void *)arg1;
- (void)addVideoEffect:(void *)arg0 inTimeSpace:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1 forSlot:(void *)arg2;
- (id)getCacheFeatureForSegmentEffect:(void *)arg0 withSlot:(void *)arg1;
- (void)removeCacheFeatureForSegmentEffect:(void *)arg0 withSlot:(void *)arg1;
- (void)syncPartialVideoEffectsForSlot:(void *)arg0 withVideoEffectChange:(void *)arg1;
- (void)addVideoEffect:(void *)arg0 forSlot:(void *)arg1;
- (void)updateVideoEffect:(struct shared_ptr<cut::model::NLEVideoEffect> { struct NLEVideoEffect *x0; struct __shared_weak_count *x1; })arg0 forSlot:(void *)arg1;
- (void)removeVideoEffect:(void *)arg0 forSlot:(void *)arg1;
- (void)cacheFeature:(id)arg0 forSegmentEffect:(void *)arg1 withSlot:(void *)arg2;
- (void)updateVideoEffect:(void *)arg0 inTimeSpace:(struct shared_ptr<cut::model::NLETimeSpaceNode> { struct NLETimeSpaceNode *x0; struct __shared_weak_count *x1; })arg1 forSlot:(void *)arg2;
- (void)removeSegmentEffect:(void *)arg0 forSlot:(void *)arg1;
- (void)addVideoMaskForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0;
- (void)updateVideoMaskForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0 prevNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg1;
- (void)removeVideoMaskForNode:(struct shared_ptr<cut::model::NLENode> { struct NLENode *x0; struct __shared_weak_count *x1; })arg0;
- (void)addNewVideoMaskForMainSegment:(void *)arg0;
- (void)addNewVideoMaskForSlot:(void *)arg0;
- (id)p_generateGlobalVideoMaskFromMaskSlot:(void *)arg0;
- (void)p_saveGlobalMask:(void *)arg0 withFeature:(id)arg1;
- (id)p_generateVideoMaskFromSlot:(void *)arg0;
- (id)maskCacheKeyForSlot:(const void *)arg0;
- (void)updateVideoMaskForMainSegment:(void *)arg0 prevSlot:(void *)arg1;
- (void)updateVideoMaskForSlot:(void *)arg0 prevSlot:(void *)arg1;
- (void)removeVideoMaskForMainSegment:(void *)arg0;
- (void)removeVideoMaskForSlot:(void *)arg0;
- (id)p_removeCachedGlobalMaskFeature:(void *)arg0;
- (id)p_getCachedGlobalMaskFeature:(void *)arg0;
- (id)p_globalMaskCacheKeyForMaskSlot:(void *)arg0;
- (void)incrementBuildWithPrevModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0 curModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)updateCanvasConfig:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0 prevModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1;
- (void)incrementBuildWithPrevCoverModel:(struct shared_ptr<cut::model::NLEVideoFrameModel> { struct NLEVideoFrameModel *x0; struct __shared_weak_count *x1; })arg0 curCoverModel:(struct shared_ptr<cut::model::NLEVideoFrameModel> { struct NLEVideoFrameModel *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)incrementBuildWithChangeTracks:(void *)arg0 prevModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1 curModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg2 isMVMode:(BOOL)arg3 completion:(id /* block */)arg4;
- (id)runtimeControlCond;
- (void)updateVideoDataIfNeedWithPreModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg0 curModel:(struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })arg1 completion:(id /* block */)arg2;
- (void)syncVideos:(void *)arg0 diffContext:(id)arg1 completion:(id /* block */)arg2;
- (void)syncTransitions:(void *)arg0;
- (void)syncChroma:(void *)arg0;
- (void)syncVideoMask:(void *)arg0;
- (void)syncVideoEffectsWithSlotChangeInfo:(void *)arg0;
- (void)syncVideoAnimation:(void *)arg0;
- (void)syncVideoKeyFrames:(struct vector<SlotChangeInfo, std::allocator<SlotChangeInfo>> { struct SlotChangeInfo *x0; struct SlotChangeInfo *x1; struct __compressed_pair<SlotChangeInfo *, std::allocator<SlotChangeInfo>> { struct SlotChangeInfo *x0; } x2; })arg0;
- (void)syncFilters:(void *)arg0 diffContext:(id)arg1;
- (void)syncColor:(void *)arg0;
- (void)syncAudios:(void *)arg0;
- (void)syncStickers:(void *)arg0;
- (void)syncPinSticker:(void *)arg0;
- (void)syncBrushStickers:(void *)arg0;
- (void)syncEffects:(void *)arg0;
- (void)syncVideoEffects:(void *)arg0;
- (void)syncTimeEffects:(void *)arg0 completion:(id /* block */)arg1;
- (void)syncFilters:(void *)arg0 forTrack:(struct shared_ptr<cut::model::NLETrack> { struct NLETrack *x0; struct __shared_weak_count *x1; })arg1 diffContext:(id)arg2;
- (void)syncAudioPitchFilters:(void *)arg0 completion:(id /* block */)arg1;
- (void)syncTimeEffectsInTrack:(void *)arg0 completion:(id /* block */)arg1;
- (void)updateVideoData:(id)arg0 updateType:(long long)arg1 completion:(id /* block */)arg2;
- (void)updateVideoData:(id)arg0 updateType:(long long)arg1 forMV:(BOOL)arg2 completion:(id /* block */)arg3;
- (void)updateVideoData:(id)arg0 updateType:(long long)arg1 forMV:(BOOL)arg2 updateInMainThread:(BOOL)arg3 completion:(id /* block */)arg4;
- (id)updateCompletionLock;
- (id)updateCompletions;
- (void)p_recoverVECallBack;
- (void)generateSlotAndStickerRelationshipWithOriginMap:(id)arg0;
- (void)updateVideoData:(id)arg0 completeBlock:(id /* block */)arg1 updateType:(long long)arg2;
- (BOOL)alwaysEnableHighFrameRateRender;
- (BOOL)enableHighFrameRateRender;
- (void)setEnableHighFrameRateRender:(BOOL)arg0;
- (long long)NLEModeToVEMode:(long long)arg0;
- (void)setVeVideoData:(id)arg0;
- (id /* block */)keyFrameJsonBlock;
- (id)keyFrameListeners;
- (id)keyframeSerialQueue;
- (void)setKeyFrameJsonBlock:(id /* block */)arg0;
- (void)setVEEditorSession:(id)arg0 videoData:(id)arg1;
- (struct shared_ptr<const cut::model::NLEModel> { struct NLEModel *x0; struct __shared_weak_count *x1; })prevStageModel;
- (void)setMovieInputFillTypeInfo:(id)arg0 forSlot:(id)arg1;
- (void)setVeEditor:(id)arg0;
- (void)setRuntimeControlCond:(id)arg0;
- (void)setAlwaysEnableHighFrameRateRender:(BOOL)arg0;
- (id)updateVideoDataQueue;
- (void)setUpdateVideoDataQueue:(id)arg0;
- (void)setVeConfig:(id)arg0;
- (void)setUpdateCompletions:(id)arg0;
- (void)setUpdateCompletionLock:(id)arg0;
- (void)setKeyframeSerialQueue:(id)arg0;
- (void)setKeyFrameListeners:(id)arg0;
- (id)dataCache;
- (void)refresh;
- (id)init;
- (void).cxx_destruct;
- (id)listener;
- (void)setContentSource:(long long)arg0;
- (long long)contentSource;
- (void)stop;
- (void)setListener:(id)arg0;
- (id)identifier;
- (void)setCanvasSize:(struct CGSize { double x0; double x1; })arg0;
- (BOOL)isHDR;
- (int)setMetadata:(id)arg0;
- (void)prepare;
- (void)setMessageHandler:(id /* block */)arg0;
- (void)start;
- (void)dealloc;
- (void)pause;
- (struct CGSize { double x0; double x1; })canvasSize;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id).cxx_construct;
- (id)editor;
- (void)setIdentifier:(id)arg0;
- (void)setEditor:(id)arg0;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0 completionHandler:(id /* block */)arg1;
- (id)extraInfo;
- (id /* block */)reverseBlock;
- (void)setPreviewModeType:(long long)arg0;
- (void)setDataCache:(id)arg0;
- (int)previewFrameRate;
- (void)setPreviewFrameRate:(int)arg0;

@end
