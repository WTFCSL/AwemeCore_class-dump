//
//     Generated by private class-dump
//

@class NSString, NSDictionary, NSArray;
@protocol XPlayHoverBallConfig, XPlayCustomResolution, XPlayAgreementConfig, XPlayResolution, XPlayResolutionConfig, XPlayDataConfig;

@protocol XPlayConfigurationProtocol <NSObject>

@property (copy, nonatomic) NSString *gameId;
@property (copy, nonatomic) NSString *xToken;
@property (copy, nonatomic) NSString *channel;
@property (copy, nonatomic) NSString *gameName;
@property (nonatomic) unsigned long long displayWidth;
@property (nonatomic) unsigned long long displayHeight;
@property (nonatomic) long long originX;
@property (nonatomic) long long originY;
@property (nonatomic) unsigned long long pcDisplayWidthRatio;
@property (nonatomic) unsigned long long pcDisplayHeightRatio;
@property (copy, nonatomic) NSString *expectCore;
@property (nonatomic) BOOL pcVirtualHandle;
@property (nonatomic) BOOL enableRTCMulti;
@property (nonatomic) BOOL muteAudioPlayback;
@property (nonatomic) BOOL enablePixelBuffer;
@property (nonatomic) BOOL enableAudioFrame;
@property (nonatomic) BOOL useDefaultShouldAutorotate;
@property (nonatomic) BOOL shouldAutorotate;
@property (copy, nonatomic) NSDictionary *extra;
@property (copy, nonatomic) NSDictionary *appExtra;
@property (copy, nonatomic) NSDictionary *innerExtra;
@property (nonatomic) BOOL useNativeKeyboardIfSupported;
@property (nonatomic) BOOL useGameOrientation;
@property (nonatomic) BOOL useNativeShockIfSupported;
@property (nonatomic) long long supportLiveType;
@property (nonatomic) long long trialTimeUpStatus;
@property (readonly, copy, nonatomic) NSString *core;
@property (readonly, nonatomic) unsigned long long gameOrientation;
@property (readonly, nonatomic) unsigned short gameOrientationAngle;
@property (readonly, nonatomic) unsigned long long playTime;
@property (readonly, nonatomic) unsigned long long remainingPlayTime;
@property (readonly, nonatomic) unsigned long long requestId;
@property (readonly, nonatomic) BOOL useNativeMotion;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly, nonatomic) id<XPlayResolution> currentResolution;
@property (readonly, nonatomic) id<XPlayCustomResolution> currentCustomResolution;
@property (readonly, copy, nonatomic) NSArray *supportResolutions;
@property (readonly, nonatomic) long long preload;
@property (readonly, nonatomic) long long podType;
@property (readonly, nonatomic) long long platformType;
@property (readonly, nonatomic) id<XPlayResolutionConfig> resolutionConfig;
@property (readonly, nonatomic) id<XPlayDataConfig> dataConfig;
@property (readonly, nonatomic) id<XPlayAgreementConfig> agreementConfig;
@property (readonly, copy, nonatomic) NSString *debugInfo;
@property (readonly, copy, nonatomic) NSString *itemId;
@property (readonly, copy, nonatomic) NSDictionary *openInfo;
@property (readonly, copy, nonatomic) NSString *uniGameId;
@property (readonly, nonatomic) BOOL isArchivedGame;
@property (readonly, nonatomic) BOOL needAuthorized;
@property (readonly, nonatomic) BOOL needRealNameAuth;
@property (readonly, nonatomic) BOOL hideHoverBall;
@property (readonly, nonatomic) id<XPlayHoverBallConfig> hoverBallConfig;

- (void)setExtra:(id)arg0;
- (id)gameName;
- (void)setGameName:(id)arg0;
- (id)dataConfig;
- (void)setShouldAutorotate:(BOOL)arg0;
- (id)supportResolutions;
- (BOOL)configurationSetWithDictionary:(id)arg0;
- (BOOL)examineConfiguration;
- (long long)supportLiveType;
- (BOOL)enableRTCMulti;
- (BOOL)enablePixelBuffer;
- (BOOL)enableAudioFrame;
- (BOOL)muteAudioPlayback;
- (id)gameId;
- (id)xToken;
- (void)setGameId:(id)arg0;
- (void)setXToken:(id)arg0;
- (unsigned long long)pcDisplayWidthRatio;
- (void)setPcDisplayWidthRatio:(unsigned long long)arg0;
- (unsigned long long)pcDisplayHeightRatio;
- (void)setPcDisplayHeightRatio:(unsigned long long)arg0;
- (id)expectCore;
- (void)setExpectCore:(id)arg0;
- (BOOL)pcVirtualHandle;
- (void)setPcVirtualHandle:(BOOL)arg0;
- (void)setEnableRTCMulti:(BOOL)arg0;
- (void)setMuteAudioPlayback:(BOOL)arg0;
- (void)setEnablePixelBuffer:(BOOL)arg0;
- (void)setEnableAudioFrame:(BOOL)arg0;
- (BOOL)useDefaultShouldAutorotate;
- (void)setUseDefaultShouldAutorotate:(BOOL)arg0;
- (id)appExtra;
- (void)setAppExtra:(id)arg0;
- (id)innerExtra;
- (void)setInnerExtra:(id)arg0;
- (BOOL)useNativeKeyboardIfSupported;
- (void)setUseNativeKeyboardIfSupported:(BOOL)arg0;
- (BOOL)useGameOrientation;
- (void)setUseGameOrientation:(BOOL)arg0;
- (BOOL)useNativeShockIfSupported;
- (void)setUseNativeShockIfSupported:(BOOL)arg0;
- (void)setSupportLiveType:(long long)arg0;
- (long long)trialTimeUpStatus;
- (void)setTrialTimeUpStatus:(long long)arg0;
- (unsigned long long)gameOrientation;
- (unsigned short)gameOrientationAngle;
- (unsigned long long)remainingPlayTime;
- (BOOL)useNativeMotion;
- (id)currentCustomResolution;
- (long long)podType;
- (id)resolutionConfig;
- (id)agreementConfig;
- (id)openInfo;
- (id)uniGameId;
- (BOOL)isArchivedGame;
- (BOOL)needAuthorized;
- (BOOL)needRealNameAuth;
- (BOOL)hideHoverBall;
- (id)hoverBallConfig;
- (BOOL)shouldAutorotate;
- (id)channel;
- (void)setChannel:(id)arg0;
- (long long)preload;
- (unsigned long long)playTime;
- (id)debugInfo;
- (id)extra;
- (unsigned long long)requestId;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (long long)platformType;
- (id)itemId;
- (id)core;
- (unsigned long long)displayHeight;
- (void)setOriginX:(long long)arg0;
- (void)setOriginY:(long long)arg0;
- (long long)originX;
- (long long)originY;
- (id)currentResolution;
- (unsigned long long)displayWidth;
- (void)setDisplayWidth:(unsigned long long)arg0;
- (void)setDisplayHeight:(unsigned long long)arg0;

@end
