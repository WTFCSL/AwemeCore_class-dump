//
//     Generated by private class-dump
//

@class NSString, NSTimer, LBLelinkPlayerConnection, LBInnerNewLelinkConnection, NSArray;
@protocol LBLelinkPlayerItemInterface, LBInnerNewLelinkPlayerDelegate;

@interface LBInnerNewLelinkPlayer : NSObject <LBLelinkPlayerConnectionDelegate, LBLelinkReverseSocketControlDelegate, LBLelinkPositiveSocketControlDelegate, LBLelinkPassthPositiveSocketControlDelegate, LBLelinkPassthReverseSocketControlDelegate> {
    BOOL _wrongPassth;
    id<LBInnerNewLelinkPlayerDelegate> _delegate;
    LBInnerNewLelinkConnection *_connection;
    id<LBLelinkPlayerItemInterface> _item;
    NSArray *_itemArray;
    long long _period;
    NSString *_mediaId;
    NSArray *_monitorActions;
    NSString *_urlId;
    LBLelinkPlayerConnection *_lelinkPlayerConnection;
    NSTimer *_playInfoTimer;
    NSString *_sm;
    NSString *_tid;
    NSString *_vuuid;
    NSString *_vsession;
    double _lastStopReportTime;
    NSString *_currentMediaId;
    NSString *_statPlayingMediaId;
}

@property (copy, nonatomic) NSString *urlId;
@property (retain, nonatomic) LBLelinkPlayerConnection *lelinkPlayerConnection;
@property (retain, nonatomic) NSTimer *playInfoTimer;
@property (copy, nonatomic) NSString *sm;
@property (copy, nonatomic) NSString *tid;
@property (copy, nonatomic) NSString *vuuid;
@property (copy, nonatomic) NSString *vsession;
@property (nonatomic) double lastStopReportTime;
@property (copy, nonatomic) NSString *currentMediaId;
@property (copy, nonatomic) NSString *statPlayingMediaId;
@property (weak, nonatomic) id<LBInnerNewLelinkPlayerDelegate> delegate;
@property (retain, nonatomic) LBInnerNewLelinkConnection *connection;
@property (retain, nonatomic) id<LBLelinkPlayerItemInterface> item;
@property (retain, nonatomic) NSArray *itemArray;
@property (nonatomic) long long period;
@property (retain, nonatomic) NSString *mediaId;
@property (retain, nonatomic) NSArray *monitorActions;
@property (nonatomic) BOOL wrongPassth;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setBackgroundPlay:(BOOL)arg0;
- (void)getPlaySpeed;
- (id)itemArray;
- (void)setItemArray:(id)arg0;
- (void)setTid:(id)arg0;
- (void)playWithItem:(id)arg0;
- (void)resumePlay;
- (void)addVolume;
- (void)reduceVolume;
- (BOOL)canChangePlaySpeed;
- (void)setPlaySpeedWithRate:(double)arg0;
- (BOOL)canSupportPlaySpeedSync;
- (BOOL)canPassthThirdPartyData;
- (BOOL)canPassthLeBoData;
- (void)setMonitorActions:(id)arg0;
- (id)currentMediaId;
- (void)setCurrentMediaId:(id)arg0;
- (id)vsession;
- (void)setVsession:(id)arg0;
- (id)sm;
- (void)setSm:(id)arg0;
- (id)initWithInnerLelinkConnection:(id)arg0;
- (void)playWithItem:(id)arg0 authorizedCode:(id)arg1;
- (void)leLinkPlayerErrorWithReport:(id)arg0 et:(id)arg1;
- (void)playStatusStoppedOrCommpletedStatisticalClickAndError:(id)arg0 statu:(id)arg1 sn:(id)arg2 et:(id)arg3;
- (void)setStatPlayingMediaId:(id)arg0;
- (void)disPlayerConnection;
- (id)lelinkPlayerConnection;
- (BOOL)supportWithMessageType:(int)arg0;
- (void)showAlertNeedAuthorizeOkAction:(id /* block */)arg0 cancelAction:(id /* block */)arg1;
- (void)startPlayInfoAndTimer;
- (void)playStatisticalClick;
- (id)playInfoTimer;
- (void)setPlayInfoTimer:(id)arg0;
- (void)playInfoTimerSelector;
- (void)playStatusErrorUpload:(id)arg0 et:(id)arg1;
- (double)lastStopReportTime;
- (void)setLastStopReportTime:(double)arg0;
- (id)statPlayingMediaId;
- (id)appRootTopViewController;
- (void)setLelinkPlayerConnection:(id)arg0;
- (BOOL)wrongPassth;
- (void)lelinkPassthPositiveSocket:(id)arg0 onError:(id)arg1;
- (void)passthLeBoInternalUseDataDic:(id)arg0 handlerType:(int)arg1;
- (void)passthThirdPartyExternalUseDataDic:(id)arg0 handlerType:(int)arg1 targetAppId:(id)arg2;
- (void)setWrongPassth:(BOOL)arg0;
- (void)lelinkPassthReverseSocket:(id)arg0 harassInfo:(struct { long long x0; long long x1; long long x2; id x3; })arg1;
- (void)lelinkPassthReverseSocket:(id)arg0 responseError:(id)arg1;
- (void)lelinkPassthReverseSocket:(id)arg0 receivedDataError:(id)arg1;
- (void)lelinkPassthReverseSocket:(id)arg0 internalData:(id)arg1 handlerType:(int)arg2;
- (void)lelinkPassthReverseSocket:(id)arg0 externalData:(id)arg1 handlerType:(int)arg2;
- (void)lelinkPassthReverseSocket:(id)arg0 PlaySpeedWithRate:(id)arg1;
- (void)lelinkPassthReverseSocket:(id)arg0 PlaySpeedResponseError:(id)arg1;
- (void)lelinkPassthReverseSocket:(id)arg0 sm:(id)arg1;
- (void)lelinkPlayerConnection:(id)arg0 disConnectToDevice:(id)arg1;
- (void)lelinkPlayerConnection:(id)arg0 onError:(id)arg1;
- (void)lelinkPlayerConnection:(id)arg0 didConnectToDevice:(id)arg1;
- (void)lelinkPositiveSocketPlayResponse:(id)arg0;
- (void)lelinkPositiveSocket:(id)arg0 progress:(id)arg1;
- (void)lelinkPositiveSocketLelinkActionSetPlaylistResponse:(id)arg0;
- (void)lelinkReverseSocket:(id)arg0 currentMediaId:(id)arg1;
- (void)lelinkReverseSocket:(id)arg0 playState:(unsigned long long)arg1 reason:(unsigned long long)arg2;
- (void)setUrlId:(id)arg0;
- (id)urlId;
- (void)playStatusPlayingStatisticalClick;
- (id)monitorActions;
- (void)setVuuid:(id)arg0;
- (long long)period;
- (id)item;
- (id)init;
- (void).cxx_destruct;
- (id)vuuid;
- (void)setConnection:(id)arg0;
- (void)stop;
- (id)delegate;
- (id)connection;
- (void)setVolume:(long long)arg0;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)play;
- (void)pause;
- (void)setItem:(id)arg0;
- (id)tid;
- (void)setPeriod:(long long)arg0;
- (void)seekTo:(long long)arg0;
- (id)mediaId;
- (void)setMediaId:(id)arg0;

@end
