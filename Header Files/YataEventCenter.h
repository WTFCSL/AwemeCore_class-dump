//
//     Generated by private class-dump
//

@class NSString, NSMutableDictionary, NSMutableArray;

@interface YataEventCenter : YataModule {
    NSString *_currentTrigger;
    NSString *_currentTriggerNodeName;
    NSMutableDictionary *_eventImplMap;
    NSMutableArray *_eventQueue;
}

@property (copy, nonatomic) NSString *currentTrigger;
@property (copy, nonatomic) NSString *currentTriggerNodeName;
@property (retain, nonatomic) NSMutableDictionary *eventImplMap;
@property (retain, nonatomic) NSMutableArray *eventQueue;

+ (BOOL)containsNullAdjust:(id)arg0;

- (void)unregisterSubscriber:(id)arg0;
- (id)initWithYataInstance:(id)arg0;
- (void)dispatchAutoExposureEvent:(id)arg0 activeView:(id)arg1;
- (id)currentTrigger;
- (id)currentTriggerNodeName;
- (void)registerInnerEvent;
- (id)eventImplMap;
- (id)subscriberForRegisterKey:(id)arg0;
- (void)registerSubscriberWith:(id)arg0 eventImpl:(id)arg1;
- (void)dispatchEventTrigger:(id)arg0 renderNode:(id)arg1 params:(id)arg2 activeView:(id)arg3 source:(long long)arg4;
- (void)enqueueWithTrigger:(id)arg0 eventArray:(id)arg1 previousEventID:(id)arg2 triggerRenderNode:(id)arg3 params:(id)arg4 activeView:(id)arg5 cachedProtocol:(id)arg6;
- (void)checkEventSameLevelSettings:(id)arg0 nodeName:(id)arg1 events:(id)arg2 renderObject:(id)arg3;
- (void)startDispatchEvent;
- (void)executeEventWithEventData:(id)arg0;
- (void)setCurrentTrigger:(id)arg0;
- (void)setCurrentTriggerNodeName:(id)arg0;
- (void)checkMissEventFields:(id)arg0 renderObject:(id)arg1;
- (void)triggerNextEventWithPreEventData:(id)arg0 renderNodeKey:(id)arg1 activeView:(id)arg2 nextEvent:(id)arg3 success:(BOOL)arg4 isBizEvent:(BOOL)arg5;
- (void)registerLifeCycleTrigger:(id)arg0 events:(id)arg1 renderObject:(id)arg2;
- (void)dispatchTriggerByBiz:(id)arg0 renderNode:(id)arg1 params:(id)arg2 activeView:(id)arg3;
- (void)dispatchTriggerByRenderEngine:(id)arg0 renderNode:(id)arg1 params:(id)arg2 activeView:(id)arg3;
- (void)dispatchAfterRenderEvent;
- (void)dispatchPopUpEvent;
- (void)enqueueAfterRenderWithEventArray:(id)arg0 renderNode:(id)arg1 eventData:(id)arg2;
- (BOOL)isEmptyEventForLifeCycleTrigger:(id)arg0;
- (void)setEventImplMap:(id)arg0;
- (void)setEventQueue:(id)arg0;
- (void).cxx_destruct;
- (id)eventQueue;

@end
