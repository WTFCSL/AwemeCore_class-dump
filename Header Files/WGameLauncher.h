//
//     Generated by private class-dump
//

@class IWGameLauncherInfo;
@protocol IWGameLauncherProtocol;

@interface WGameLauncher : NSObject {
    BOOL _renderOnMultiView;
    long long _currentState;
    IWGameLauncherInfo *_launcherInfo;
    id<IWGameLauncherProtocol> _delegate;
    struct CGSize { double width; double height; } _cameraViewSingleSize;
    struct CGSize { double width; double height; } _cameraOutputSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cameraViewFrame;
}

@property (readonly, nonatomic) long long currentState;
@property (readonly, nonatomic) IWGameLauncherInfo *launcherInfo;
@property (nonatomic) BOOL renderOnMultiView;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } cameraViewFrame;
@property (nonatomic) struct CGSize { double width; double height; } cameraViewSingleSize;
@property (nonatomic) struct CGSize { double width; double height; } cameraOutputSize;
@property (weak, nonatomic) id<IWGameLauncherProtocol> delegate;

+ (void)monitorEventName:(id)arg0 param:(id)arg1;

- (void)setCameraOutputSize:(struct CGSize { double x0; double x1; })arg0;
- (void)sendMessage:(id)arg0 callback:(id /* block */)arg1;
- (id)initWithVC:(id)arg0 withView:(id)arg1 withLiveCore:(id)arg2;
- (void)onCountdownStart:(id)arg0;
- (void)onCountdownEnd:(id)arg0;
- (void)onCountdownCancel:(id)arg0;
- (void)startWGame:(id)arg0 gameEvent:(id /* block */)arg1 progress:(id /* block */)arg2 finish:(id /* block */)arg3;
- (void)preloadWGameResource:(id)arg0 progress:(id /* block */)arg1 finish:(id /* block */)arg2;
- (void)quitGame;
- (void)showLoadingViewWithLaunchInfo:(id)arg0 error:(id)arg1;
- (id)launcherInfo;
- (BOOL)renderOnMultiView;
- (void)setRenderOnMultiView:(BOOL)arg0;
- (void)setCameraViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (struct CGSize { double x0; double x1; })cameraViewSingleSize;
- (void)setCameraViewSingleSize:(struct CGSize { double x0; double x1; })arg0;
- (struct CGSize { double x0; double x1; })cameraOutputSize;
- (void)resume;
- (void).cxx_destruct;
- (long long)currentState;
- (void)invalidate;
- (id)delegate;
- (void)setDelegate:(id)arg0;
- (void)pause;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cameraViewFrame;

@end
