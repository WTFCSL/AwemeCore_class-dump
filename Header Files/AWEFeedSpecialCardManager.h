//
//     Generated by private class-dump
//

@class NSMapTable, NSDictionary, AWEFeedSpecialCardFrequencyControlModel, NSLock, NSNumber;

@interface AWEFeedSpecialCardManager : NSObject {
    BOOL _isNewNetWorkRequest;
    BOOL _didShow;
    unsigned long long _currentVVCount;
    unsigned long long _notShowVVCount;
    NSMapTable *_dispatchControllers;
    NSDictionary *_currentRecommendStatusDict;
    NSLock *_recommendStatusLock;
    NSDictionary *_cardManagerConfig;
    NSNumber *_vvLimit;
    NSNumber *_timeHoursLimit;
    NSNumber *_timeHoursLimitCounter;
    AWEFeedSpecialCardFrequencyControlModel *_frequencyControlModel;
    long long _lastExemptIndex;
}

@property (retain, nonatomic) NSMapTable *dispatchControllers;
@property (copy, nonatomic) NSDictionary *currentRecommendStatusDict;
@property (retain, nonatomic) NSLock *recommendStatusLock;
@property (retain, nonatomic) NSDictionary *cardManagerConfig;
@property (retain, nonatomic) NSNumber *vvLimit;
@property (retain, nonatomic) NSNumber *timeHoursLimit;
@property (retain, nonatomic) NSNumber *timeHoursLimitCounter;
@property (retain, nonatomic) AWEFeedSpecialCardFrequencyControlModel *frequencyControlModel;
@property (nonatomic) long long lastExemptIndex;
@property (nonatomic) BOOL didShow;
@property (nonatomic) unsigned long long currentVVCount;
@property (nonatomic) unsigned long long notShowVVCount;
@property (nonatomic) BOOL isNewNetWorkRequest;

+ (id)shareInstance;

- (BOOL)shouldCancelInsertCardForReversalWithType:(long long)arg0;
- (BOOL)shouldCancelInsertCardForReversalWithReferString:(id)arg0;
- (BOOL)forbidSpecialCardForLowPowerDowngrade:(id)arg0;
- (BOOL)isFeedSpecialCardShowStrategyEnableWithType:(long long)arg0;
- (BOOL)isFeedSpecialCardShowStrategyEnableWithReferString:(id)arg0;
- (BOOL)canBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1 cardName:(id)arg2;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1 cardName:(id)arg2;
- (void)didExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1;
- (void)setDidShow:(BOOL)arg0;
- (void)setIsNewNetWorkRequest:(BOOL)arg0;
- (id)vvLimit;
- (void)setVvLimit:(id)arg0;
- (id)timeHoursLimit;
- (void)setTimeHoursLimit:(id)arg0;
- (void)setDispatchControllers:(id)arg0;
- (void)setRecommendStatusLock:(id)arg0;
- (BOOL)isFeedSpecialCardReverseEnable;
- (BOOL)interceptFeedCardByRecommendWithBusinessID:(id)arg0 withAwemeType:(long long)arg1;
- (BOOL)canBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1 model:(id)arg2 cardName:(id)arg3;
- (BOOL)isFeedSpecialCardShowStrategyEnable;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 dataSource:(id)arg1 index:(long long)arg2 model:(id)arg3 cardName:(id)arg4 trackEvent:(BOOL)arg5;
- (BOOL)isFeedSpecialCardShowStrategyV2Enable;
- (BOOL)judgeCanBeExemptForShowStrategyV2WithSourceFromDataList:(BOOL)arg0 dataSource:(id)arg1 index:(long long)arg2 model:(id)arg3 cardName:(id)arg4 trackEvent:(BOOL)arg5;
- (BOOL)canBeExemptOfVVForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1;
- (BOOL)canBeExemptOfTimeForShowStrategy;
- (void)trackCardFrequencyControlForVV:(BOOL)arg0 forTime:(BOOL)arg1 cardName:(id)arg2 model:(id)arg3;
- (long long)lastExemptIndex;
- (unsigned long long)currentVVCount;
- (unsigned long long)notShowVVCount;
- (id)timeHoursLimitCounter;
- (void)didExemptOfVVForShowStrategyV2WithSourceFromDataList:(BOOL)arg0 index:(long long)arg1;
- (void)didExemptOfTimeForShowStrategyV2;
- (void)didExemptOfVVForShowStrategyWithSourceFromDataList:(BOOL)arg0 index:(long long)arg1;
- (void)didExemptOfTimeForShowStrategy;
- (void)setCurrentVVCount:(unsigned long long)arg0;
- (void)setNotShowVVCount:(unsigned long long)arg0;
- (void)setLastExemptIndex:(long long)arg0;
- (BOOL)canBeExemptOfVVForShowStrategyV2WithSourceFromDataList:(BOOL)arg0 dataSource:(id)arg1 index:(long long)arg2 model:(id)arg3;
- (BOOL)canBeExemptOfTimeForShowStrategyV2ForModel:(id)arg0;
- (id)frequencyControlModel;
- (id)recommendStatusLock;
- (id)currentRecommendStatusDict;
- (void)setCurrentRecommendStatusDict:(id)arg0;
- (id)dispatchControllers;
- (long long)frequencyControlTypeForFeedTemplateCard:(id)arg0 index:(long long)arg1 awemeType:(long long)arg2 commitToPitaya:(BOOL)arg3;
- (BOOL)judgeCanBeExemptForShowStrategyWithSourceFromDataList:(BOOL)arg0 dataSource:(id)arg1 index:(long long)arg2 model:(id)arg3 cardName:(id)arg4;
- (double)lastShowCardTimeInterval;
- (long long)lastShowCardTimeCount;
- (void)updateRecommendStatusWithParams:(id)arg0;
- (id)currentRecommendStatus;
- (void)registerCardDispatchController:(id)arg0 withAwemeType:(long long)arg1;
- (BOOL)callShouldCancelInsertCardForBusinessID:(id)arg0 withAweme:(id)arg1 isFromFeed:(BOOL)arg2 willInsertForRowAtIndexPath:(id)arg3 withAwemeType:(long long)arg4;
- (void)callCardDidInsertForBusinessID:(id)arg0 withAweme:(id)arg1 isFromFeed:(BOOL)arg2 forRowAtIndexPath:(id)arg3 withAwemeType:(long long)arg4;
- (void)callCardFrequencyControlForBusinessID:(id)arg0 withAweme:(id)arg1 isFromFeed:(BOOL)arg2 withAwemeType:(long long)arg3 frequencyControlType:(long long)arg4;
- (BOOL)isValidSpecialCardTemplateWithModel:(id)arg0 withAwemeType:(long long)arg1;
- (BOOL)commitCardToPitaya:(id)arg0 index:(long long)arg1 pullType:(long long)arg2 withAwemeType:(long long)arg3;
- (void)trackFeedCardActionButtonClicked:(id)arg0 enterFrom:(id)arg1 enterMethod:(id)arg2 extraDict:(id)arg3;
- (void)trackFeedCardDislikeButtonClicked:(id)arg0 enterFrom:(id)arg1 enterMethod:(id)arg2 extraDict:(id)arg3;
- (void)trackFeedCardTemplateInsert:(id)arg0 insertType:(id)arg1 enterFrom:(id)arg2;
- (void)trackFeedCardTemplateDistributePitaya:(id)arg0;
- (void)trackFeedCardTemplateDelete:(id)arg0 deleteType:(id)arg1 enterFrom:(id)arg2;
- (void)trackFeedCardTemplateFetch:(id)arg0 enterFrom:(id)arg1;
- (void)trackFeedCardTemplateGetCard:(id)arg0 enterFrom:(id)arg1;
- (void)trackFeedCardTemplateBulletLoadStatus:(id)arg0 loadStatus:(id)arg1 enterFrom:(id)arg2;
- (void)trackFeedCardTemplateLynxLoadResult:(id)arg0 loadResult:(BOOL)arg1 errorCode:(long long)arg2 errorMsg:(id)arg3 enterFrom:(id)arg4;
- (void)trackFeedBulletGetCard:(id)arg0 enterFrom:(id)arg1;
- (void)trackFeedCardTemplateFilter:(id)arg0 businessID:(id)arg1 reason:(id)arg2 enterFrom:(id)arg3;
- (BOOL)isNewNetWorkRequest;
- (id)cardManagerConfig;
- (void)setCardManagerConfig:(id)arg0;
- (void)setTimeHoursLimitCounter:(id)arg0;
- (void)setFrequencyControlModel:(id)arg0;
- (void).cxx_destruct;
- (BOOL)didShow;

@end
