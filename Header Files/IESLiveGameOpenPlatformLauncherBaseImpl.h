//
//     Generated by private class-dump
//

@class IESLiveGameOpenPlatformBootConfigCache, NSString, NSArray, IESLiveGameOpenPlatformCryptor, IESLiveAnchorAudienceInteractiveGameModel, NSOperationQueue, NSDictionary, NSObject, IESLiveComponentContext;
@protocol OS_dispatch_group, IESLiveGameOpenPlatformResourceLoader, IESLiveGameOpenPlatformEmulator, OS_dispatch_semaphore, BDLiveOpenContainerInstance;

@interface IESLiveGameOpenPlatformLauncherBaseImpl : NSObject <IESLiveGameOpenPlatformLauncher, IESLiveGameOpenPlatformResourceLoaderDelegate> {
    BOOL _preloadFlag;
    BOOL _isResourceReady;
    BOOL _enableConnectIMChannel;
    NSString *_appID;
    NSString *_appName;
    NSString *_iconUrl;
    NSString *_schema;
    IESLiveComponentContext *_componentContext;
    IESLiveAnchorAudienceInteractiveGameModel *_gameModel;
    unsigned long long _resourceDownloadState;
    unsigned long long _bootConfigRequestState;
    id /* block */ _launchCallback;
    NSArray *_openCapabilityList;
    NSDictionary *_resourceLoaderInitializationParams;
    id<IESLiveGameOpenPlatformResourceLoader> _resourceLoader;
    IESLiveGameOpenPlatformBootConfigCache *_bootConfigCache;
    id<BDLiveOpenContainerInstance> _containerInstance;
    NSString *_resourceIndexPath;
    IESLiveGameOpenPlatformCryptor *_cryptor;
    NSObject<OS_dispatch_group> *_launchTaskGroup;
    NSOperationQueue *_launchTaskQueue;
    NSObject<OS_dispatch_semaphore> *_loadResourceSemaphore;
}

@property (retain, nonatomic) IESLiveGameOpenPlatformCryptor *cryptor;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *launchTaskGroup;
@property (retain, nonatomic) NSOperationQueue *launchTaskQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *loadResourceSemaphore;
@property (nonatomic) BOOL preloadFlag;
@property (nonatomic) unsigned long long resourceDownloadState;
@property (nonatomic) unsigned long long bootConfigRequestState;
@property (copy, nonatomic) id /* block */ launchCallback;
@property (copy, nonatomic) NSArray *openCapabilityList;
@property (copy, nonatomic) NSDictionary *resourceLoaderInitializationParams;
@property (readonly, nonatomic) id<IESLiveGameOpenPlatformResourceLoader> resourceLoader;
@property (readonly, nonatomic) IESLiveGameOpenPlatformBootConfigCache *bootConfigCache;
@property (retain, nonatomic) id<BDLiveOpenContainerInstance> containerInstance;
@property (copy, nonatomic) NSString *resourceIndexPath;
@property (nonatomic) BOOL isResourceReady;
@property (nonatomic) BOOL enableConnectIMChannel;
@property (readonly, copy, nonatomic) NSString *appID;
@property (readonly, copy, nonatomic) NSString *appName;
@property (readonly, copy, nonatomic) NSString *iconUrl;
@property (readonly, copy, nonatomic) NSString *schema;
@property (readonly, nonatomic) IESLiveComponentContext *componentContext;
@property (readonly, nonatomic) IESLiveAnchorAudienceInteractiveGameModel *gameModel;
@property (readonly, nonatomic) id<IESLiveGameOpenPlatformEmulator> currentEmulator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)componentContext;
- (id)iconUrl;
- (void)launchWithCallback:(id /* block */)arg0 reuse:(BOOL)arg1;
- (void)loadPanelContainer;
- (void)loadPanelContainerWithCompletion:(id /* block */)arg0;
- (unsigned long long)resourceLoaderType;
- (void)preloadGame;
- (void)realRequestBootConfigWithCompletion:(id /* block */)arg0;
- (BOOL)bootConfigIsReady;
- (id)containerInstance;
- (id)currentEmulator;
- (id)resourceIndexPath;
- (void)setResourceIndexPath:(id)arg0;
- (id)initWithAppID:(id)arg0 appName:(id)arg1 iconUrl:(id)arg2 schema:(id)arg3 componentContext:(id)arg4 gameModel:(id)arg5 DIContext:(id)arg6;
- (void)formatLogIWithEvent:(id)arg0 extraInfo:(id)arg1;
- (void)setLaunchCallback:(id /* block */)arg0;
- (id /* block */)launchCallback;
- (void)formatLogEWithEvent:(id)arg0 extraInfo:(id)arg1;
- (void)setLaunchTaskQueue:(id)arg0;
- (void)setLaunchTaskGroup:(id)arg0;
- (id)loadResourceSemaphore;
- (void)finishLaunchTask:(id)arg0 withSemaphore:(id)arg1;
- (void)setResourceDownloadState:(unsigned long long)arg0;
- (BOOL)isResourceReady;
- (unsigned long long)resourceDownloadState;
- (unsigned long long)bootConfigRequestState;
- (BOOL)checkLaunchTaskIsExist;
- (id)launchTaskGroup;
- (void)setupLaunchTaskQueue;
- (void)setLoadResourceSemaphore:(id)arg0;
- (void)setContainerInstance:(id)arg0;
- (void)startLaunchTask:(id /* block */)arg0 withTaskDescription:(id)arg1;
- (id)openCapabilityList;
- (void)startLaunchBarrierTask:(id /* block */)arg0;
- (void)realRequestBootConfigWithSemaphore:(id)arg0 completion:(id /* block */)arg1;
- (void)setBootConfigRequestState:(unsigned long long)arg0;
- (void)didFinishRequestingBootConfigWithResponse:(id)arg0 error:(id)arg1 semaphore:(id)arg2 completion:(id /* block */)arg3;
- (void)containerInstance:(id)arg0 didGetOpenCapabilityList:(id)arg1;
- (void)handleBootConfigResponse:(id)arg0;
- (id)bootConfigCache;
- (void)setOpenCapabilityList:(id)arg0;
- (void)requestSecretKey;
- (void)setEnableConnectIMChannel:(BOOL)arg0;
- (id)launchTaskQueue;
- (void)_startLaunchTaskByOperationQueue:(id /* block */)arg0 withTaskDescription:(id)arg1;
- (void)_startLaunchTaskByGroup:(id /* block */)arg0 withTaskDescription:(id)arg1;
- (void)_finishLaunchTaskByOperationQueue:(id)arg0 withSemaphore:(id)arg1;
- (void)_finishLaunchTaskByGroup:(id)arg0;
- (void)_startLaunchBarrierTaskByOperationQueue:(id /* block */)arg0;
- (void)_startLaunchBarrierTaskByGroup:(id /* block */)arg0;
- (BOOL)preloadFlag;
- (void)setPreloadFlag:(BOOL)arg0;
- (void)willBeginLaunchingWithResult:(BOOL)arg0;
- (void)didFinishLaunchingWithResult:(BOOL)arg0 error:(id)arg1;
- (void)didLoadResourceInProgress:(unsigned long long)arg0 total:(unsigned long long)arg1;
- (void)didFinishLoadingResource:(id)arg0 error:(id)arg1;
- (id)resourceLoaderInitializationParams;
- (void)setResourceLoaderInitializationParams:(id)arg0;
- (void)setIsResourceReady:(BOOL)arg0;
- (BOOL)enableConnectIMChannel;
- (id)appName;
- (void).cxx_destruct;
- (id)cryptor;
- (id)initWithConfiguration:(id)arg0;
- (id)appID;
- (void)dealloc;
- (id)resourceLoader;
- (id)schema;
- (void)retry;
- (id)loadResources;
- (void)setCryptor:(id)arg0;
- (id)gameModel;

@end
