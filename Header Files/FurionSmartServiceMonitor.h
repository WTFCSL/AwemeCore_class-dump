//
//     Generated by private class-dump
//

@class NSCache, NSString, FurionCostRecord, NSMutableArray, FurionSmartTruthInjectCondition;
@protocol FurionPredictTruthInjector;

@interface FurionSmartServiceMonitor : NSObject <FurionSmartServiceMonitor> {
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _rwLock;
    BOOL _shouldSaveCache;
    BOOL _enable;
    BOOL _hasInitEnd;
    BOOL _hasReportInited;
    float _initRate;
    float _runRate;
    id<FurionPredictTruthInjector> truthInjector;
    NSString *_runDataCachesSaveKey;
    FurionSmartTruthInjectCondition *_condition;
    NSMutableArray *_runDataCaches;
    FurionCostRecord *_costInitTotal;
    long long _initRetCode;
    long long _runCount;
    NSString *_scene;
    NSString *_modelName;
    NSCache *_runDataItemMap;
}

@property (copy, nonatomic) NSString *runDataCachesSaveKey;
@property (retain, nonatomic) FurionSmartTruthInjectCondition *condition;
@property (nonatomic) BOOL enable;
@property (nonatomic) BOOL hasInitEnd;
@property (nonatomic) BOOL hasReportInited;
@property (retain, nonatomic) NSMutableArray *runDataCaches;
@property (retain, nonatomic) FurionCostRecord *costInitTotal;
@property (nonatomic) long long initRetCode;
@property (nonatomic) long long runCount;
@property (nonatomic) float initRate;
@property (nonatomic) float runRate;
@property (copy, nonatomic) NSString *scene;
@property (copy, nonatomic) NSString *modelName;
@property (retain, nonatomic) NSCache *runDataItemMap;
@property (weak, nonatomic) id<FurionPredictTruthInjector> truthInjector;
@property (nonatomic) BOOL shouldSaveCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)setServiceConfig:(id)arg0;
- (void)onCheckReportTruth:(long long)arg0 ext:(id)arg1;
- (void)setTruthInjector:(id)arg0;
- (void)setRunCount:(long long)arg0;
- (void)recordPrepareDataBeginWithKey:(id)arg0;
- (void)recordPrepareDataEndWithKey:(id)arg0;
- (void)recordRunEndWithKey:(id)arg0 input:(id)arg1 output:(id)arg2 ext:(id)arg3;
- (void)recordRunBeginWithKey:(id)arg0;
- (id)truthInjector;
- (id)runDataCaches;
- (BOOL)shouldSaveCache;
- (void)clearSaveCache;
- (BOOL)hasInitEnd;
- (id)costInitTotal;
- (void)setHasInitEnd:(BOOL)arg0;
- (void)setInitRetCode:(long long)arg0;
- (id)runDataItemMap;
- (id)_getRunDataItemWithKey:(id)arg0 forceCreate:(BOOL)arg1;
- (void)onSmartServiceRunEndWithKey:(id)arg0 input:(id)arg1 output:(id)arg2;
- (long long)initRetCode;
- (void)setRunDataCaches:(id)arg0;
- (void)checkAndSaveCache:(id)arg0;
- (BOOL)hasReportInited;
- (void)setHasReportInited:(BOOL)arg0;
- (float)initRate;
- (id)buildInitMonitorData;
- (float)runRate;
- (id)buildRunMonitorDataWithKey:(id)arg0 output:(id)arg1;
- (void)buildAndSaveMonitorCacheDataWithInput:(id)arg0 runMonitorData:(id)arg1;
- (id)runDataCachesSaveKey;
- (void)checkAndLoadCache;
- (void)setShouldSaveCache:(BOOL)arg0;
- (void)recordInitBegin;
- (void)recordInitEnd:(long long)arg0;
- (void)setRunDataCachesSaveKey:(id)arg0;
- (void)setCostInitTotal:(id)arg0;
- (void)setInitRate:(float)arg0;
- (void)setRunRate:(float)arg0;
- (void)setRunDataItemMap:(id)arg0;
- (id)initWithScene:(id)arg0;
- (id)condition;
- (BOOL)enable;
- (void)setScene:(id)arg0;
- (void).cxx_destruct;
- (void)setModelName:(id)arg0;
- (id)modelName;
- (void)setEnable:(BOOL)arg0;
- (void)setCondition:(id)arg0;
- (void)dealloc;
- (id)scene;
- (long long)runCount;

@end
