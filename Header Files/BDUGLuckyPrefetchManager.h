//
//     Generated by private class-dump
//

@class NSString, IESPrefetchThreadSafeDictionary, BDUGLuckyPrefetchCache, NSHashTable, NSArray, BDUGLuckyPrefetchConfig;
@protocol IESPrefetchLoaderProtocol;

@interface BDUGLuckyPrefetchManager : NSObject <IESPrefetchCapability, IESPrefetchLoaderEventDelegate, BDUGLuckyPrefetchCacheDelegate> {
    BOOL _isH5Prefetch;
    BOOL _isPrefetching;
    Class _capability;
    BDUGLuckyPrefetchConfig *_config;
    NSString *_loaderBiz;
    id<IESPrefetchLoaderProtocol> _prefetchLoader;
    BDUGLuckyPrefetchCache *_storage;
    IESPrefetchThreadSafeDictionary *_requestDic;
    NSHashTable *_delegates;
    NSString *_accessKey;
    NSArray *_channels;
}

@property (copy, nonatomic) NSString *loaderBiz;
@property (nonatomic) BOOL isH5Prefetch;
@property (retain, nonatomic) id<IESPrefetchLoaderProtocol> prefetchLoader;
@property (retain, nonatomic) BDUGLuckyPrefetchCache *storage;
@property (retain, nonatomic) IESPrefetchThreadSafeDictionary *requestDic;
@property (nonatomic) BOOL isPrefetching;
@property (retain, nonatomic) NSHashTable *delegates;
@property (copy, nonatomic) NSString *accessKey;
@property (retain, nonatomic) NSArray *channels;
@property (weak, nonatomic) Class capability;
@property (retain, nonatomic) BDUGLuckyPrefetchConfig *config;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)prefetchManagerForContainer:(unsigned long long)arg0;
+ (id)prefetchStatusString:(unsigned long long)arg0;
+ (id)sharedInstance;

- (void)bindGeckoAccessKey:(id)arg0 channels:(id)arg1;
- (void)cache:(id)arg0 didSaveObjectForKey:(id)arg1;
- (BOOL)prefetchEnable;
- (id)initWithLoaderBiz:(id)arg0;
- (void)setLoaderBiz:(id)arg0;
- (void)setIsH5Prefetch:(BOOL)arg0;
- (id)loaderBiz;
- (void)setIsPrefetching:(BOOL)arg0;
- (id)requestDic;
- (void)prefetchDataWithWebUrl:(id)arg0;
- (BOOL)paramValid:(id)arg0;
- (id)prefetchLoader;
- (BOOL)isH5Prefetch;
- (BOOL)isPrefetching;
- (id)currentPrefetchScript;
- (void)networkForRequest:(id)arg0 completion:(id /* block */)arg1;
- (id)customCacheStorage;
- (id)customConfigForProject:(id)arg0 version:(id)arg1;
- (void)loader:(id)arg0 didFinishLoadConfig:(id)arg1 withError:(id)arg2;
- (void)loader:(id)arg0 didFinishPrefetchOccasion:(id)arg1 withError:(id)arg2;
- (void)loader:(id)arg0 didFinishPrefetchSchema:(id)arg1 withError:(id)arg2;
- (void)loader:(id)arg0 didFinishPrefetchApi:(id)arg1 withCacheStatus:(unsigned long long)arg2;
- (void)loader:(id)arg0 didFinishFetchData:(id)arg1 withStatus:(unsigned long long)arg2 error:(id)arg3;
- (void)loader:(id)arg0 logInfo:(id)arg1;
- (void)requestDataWithParam:(id)arg0 completion:(id /* block */)arg1;
- (void)setPrefetchLoader:(id)arg0;
- (void)setRequestDic:(id)arg0;
- (id)delegates;
- (void)setStorage:(id)arg0;
- (id)channels;
- (void)setDelegates:(id)arg0;
- (id)init;
- (void)addDelegate:(id)arg0;
- (void)setConfig:(id)arg0;
- (void)setChannels:(id)arg0;
- (void).cxx_destruct;
- (id)storage;
- (id)config;
- (void)dealloc;
- (id)accessKey;
- (void)setAccessKey:(id)arg0;
- (Class)capability;
- (void)setCapability:(Class)arg0;

@end
