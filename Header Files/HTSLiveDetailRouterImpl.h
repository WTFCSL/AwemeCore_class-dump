//
//     Generated by private class-dump
//

@class IESLiveEnterRoomAisle, NSMapTable, NSString;
@protocol IESLiveRoomService, IESLiveReturnBackRouter;

@interface HTSLiveDetailRouterImpl : NSObject <HTSLiveDetailRouter> {
    BOOL _enableRoomChange;
    BOOL _canPauseRoom;
    id<IESLiveRoomService> _room;
    IESLiveEnterRoomAisle *_roomAisle;
    id /* block */ _onClose;
    id /* block */ _onCloseAudienceVC;
    id /* block */ _onPause;
    id /* block */ _onUnwind;
    id /* block */ _onResum;
    id /* block */ _onRequestReuseRoomPlayer;
    id /* block */ _changePauseState;
    id<IESLiveReturnBackRouter> _returnRouter;
    NSMapTable *_allRouterDict;
}

@property (retain, nonatomic) id<IESLiveReturnBackRouter> returnRouter;
@property (retain, nonatomic) NSMapTable *allRouterDict;
@property (nonatomic) BOOL enableRoomChange;
@property (nonatomic) BOOL canPauseRoom;
@property (retain, nonatomic) id<IESLiveRoomService> room;
@property (retain, nonatomic) IESLiveEnterRoomAisle *roomAisle;
@property (copy, nonatomic) id /* block */ onClose;
@property (copy, nonatomic) id /* block */ onCloseAudienceVC;
@property (copy, nonatomic) id /* block */ onPause;
@property (copy, nonatomic) id /* block */ onUnwind;
@property (copy, nonatomic) id /* block */ onResum;
@property (copy, nonatomic) id /* block */ onRequestReuseRoomPlayer;
@property (copy, nonatomic) id /* block */ changePauseState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id /* block */)onPause;
- (id)attachingDIContext;
- (id)roomAisle;
- (void)setRoomAisle:(id)arg0;
- (BOOL)closeRoomByForce:(BOOL)arg0 reason:(long long)arg1 trace:(id)arg2 completion:(id /* block */)arg3 callTrace:(id)arg4;
- (BOOL)closeRoomByForce:(BOOL)arg0 callTrace:(id)arg1;
- (BOOL)closeRoomByForce:(BOOL)arg0 reason:(long long)arg1 callTrace:(id)arg2;
- (BOOL)closeRoomByType:(unsigned long long)arg0 preferOptions:(id)arg1 callTrace:(id)arg2;
- (BOOL)closeRoomWithSegue:(id)arg0 callTrace:(id)arg1;
- (BOOL)closeRoomWithoutConditionCallTrace:(id)arg0;
- (BOOL)canChangeToRoom:(id)arg0;
- (BOOL)canChangeToRoom:(id)arg0 isAllowEnterSameRoomID:(BOOL)arg1;
- (BOOL)isAcquaintanceRoom;
- (BOOL)isOwnedByAnchor:(id)arg0;
- (BOOL)isCurrentRoom:(id)arg0;
- (BOOL)unwindToRoom:(BOOL)arg0 callTrace:(id)arg1;
- (BOOL)canPauseRoomCallTrace:(id)arg0;
- (void)pauseRoomCallTrace:(id)arg0;
- (void)resumRoom:(BOOL)arg0 callTrace:(id)arg1;
- (id)askForRoomChange:(id)arg0 withOwnerID:(id)arg1 andPrompts:(id)arg2 callTrace:(id)arg3;
- (id)askForRoomChange:(id)arg0 withOwnerID:(id)arg1 andPrompts:(id)arg2 canReEnter:(BOOL)arg3 invitedChannelID:(id)arg4 callTrace:(id)arg5;
- (void)setEnableRoomChange:(BOOL)arg0;
- (BOOL)canEnterNewRoom:(id)arg0;
- (void)closeRoomWithRoomAisle:(id)arg0 callTrace:(id)arg1;
- (long long)currentFeedTabType;
- (void)requestReuseRoomPlayer:(id)arg0 callTrace:(id)arg1;
- (BOOL)canEnterRoomWithRoomID:(id)arg0 anchorID:(id)arg1 isAllowEnterSameRoomID:(BOOL)arg2 callTrace:(id)arg3;
- (void)changeCurrentLiveState:(BOOL)arg0 callTrace:(id)arg1;
- (void)forceUpdateToPortraitWith:(id /* block */)arg0;
- (id)returnRouter;
- (void)setReturnRouter:(id)arg0;
- (void)setCanPauseRoom:(BOOL)arg0;
- (void)setOnCloseAudienceVC:(id /* block */)arg0;
- (void)pauseRoom;
- (void)setOnPause:(id /* block */)arg0;
- (void)setOnUnwind:(id /* block */)arg0;
- (void)setOnResum:(id /* block */)arg0;
- (void)setOnRequestReuseRoomPlayer:(id /* block */)arg0;
- (void)setChangePauseState:(id /* block */)arg0;
- (void)logEvent:(id)arg0 callTrace:(id)arg1 params:(id)arg2;
- (id /* block */)onCloseAudienceVC;
- (void)roomChangeConfirmedWithResult:(id)arg0;
- (void)pr_trackAlertClick:(id)arg0;
- (void)pr_trackAlertShow;
- (BOOL)forceUpdateToPortraitIfNeeded;
- (BOOL)canEnterNewRoom:(id)arg0 onlyCheck:(BOOL)arg1;
- (void)joinLiveChannelIfNeed:(id)arg0;
- (id /* block */)onRequestReuseRoomPlayer;
- (void)forbidSelector:(SEL)arg0;
- (BOOL)closeRoomByForce:(BOOL)arg0;
- (BOOL)closeRoomByForce:(BOOL)arg0 reason:(long long)arg1;
- (BOOL)closeRoomByForce:(BOOL)arg0 reason:(long long)arg1 trace:(id)arg2 completion:(id /* block */)arg3;
- (BOOL)closeRoomWithSegue:(id)arg0;
- (BOOL)closeRoomWithoutCondition;
- (BOOL)unwindToRoom:(BOOL)arg0;
- (BOOL)canPauseRoom;
- (void)resumRoom:(BOOL)arg0;
- (id)askForRoomChange:(id)arg0 withOwnerID:(id)arg1 andPrompts:(id)arg2;
- (id)askForRoomChange:(id)arg0 withOwnerID:(id)arg1 andPrompts:(id)arg2 canReEnter:(BOOL)arg3 invitedChannelID:(id)arg4;
- (void)closeRoomWithRoomAisle:(id)arg0;
- (void)requestReuseRoomPlayer:(id)arg0;
- (BOOL)canEnterRoomWithRoomID:(id)arg0 anchorID:(id)arg1 isAllowEnterSameRoomID:(BOOL)arg2;
- (BOOL)enableRoomChange;
- (id /* block */)onUnwind;
- (id /* block */)onResum;
- (id /* block */)changePauseState;
- (id)allRouterDict;
- (void)setAllRouterDict:(id)arg0;
- (void).cxx_destruct;
- (id)room;
- (void)setRoom:(id)arg0;
- (id /* block */)onClose;
- (void)setOnClose:(id /* block */)arg0;

@end
