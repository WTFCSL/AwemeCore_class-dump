//
//     Generated by private class-dump
//

@class NSString;

@interface BDPQJValue : NSObject <BDPValueProtocol> {
    union LEPUSValue { long long as_int64; void *ptr; double as_double; } value;
    struct LEPUSContext { } *context;
}

@property (readonly) BOOL isUndefined;
@property (readonly) BOOL isNull;
@property (readonly) BOOL isBoolean;
@property (readonly) BOOL isNumber;
@property (readonly) BOOL isString;
@property (readonly) BOOL isObject;
@property (readonly) BOOL isArray;
@property (readonly) BOOL isArrayBuffer;
@property (readonly, nonatomic) id value;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)bootstrapLaunch;
+ (id)valueWithData:(void *)arg0 size:(unsigned long long)arg1 inContext:(id)arg2;
+ (id)valueWithLEPUSValue:(union LEPUSValue { long long x0; void *x1; double x2; })arg0 inContext:(id)arg1;
+ (id)valueWithJSValueRef:(struct OpaqueJSValue { } *)arg0 inContext:(id)arg1;
+ (id)valueWithBool:(BOOL)arg0 inContext:(id)arg1;
+ (id)valueWithObject:(id)arg0 inContext:(id)arg1;
+ (id)valueWithInt32:(int)arg0 inContext:(id)arg1;
+ (id)valueWithDouble:(double)arg0 inContext:(id)arg1;
+ (id)valueWithUndefinedInContext:(id)arg0;

- (id)bdp_object;
- (unsigned long long)arrayBufferLength;
- (char *)arrayBufferData;
- (long long)toInt;
- (BOOL)isArrayBuffer;
- (BOOL)isUndefined;
- (id)valueForProperty:(id)arg0;
- (id)init;
- (id)value;
- (BOOL)isBoolean;
- (id)objectForKeyedSubscript:(id)arg0;
- (BOOL)isObject;
- (void)setObject:(id)arg0 forKeyedSubscript:(id)arg1;
- (id)toDictionary;
- (BOOL)isNull;
- (BOOL)isNumber;
- (id)objectAtIndexedSubscript:(unsigned long long)arg0;
- (void)dealloc;
- (id)toObject;
- (id)toNumber;
- (id)toString;
- (BOOL)isString;
- (BOOL)isArray;
- (id)callWithArguments:(id)arg0;
- (id)initWithValue:(union LEPUSValue { long long x0; void *x1; double x2; })arg0 inContext:(struct LEPUSContext { } *)arg1;

@end
