//
//     Generated by private class-dump
//

@class NSArray, NSTimer, NSString, AWELightMissionModel;

@interface AWELightMissionManager : HTSService <AWEGokuPluginTargetProtocol, AWEGokuBridgePlayVideoViewControllerMessage, AWELightMissionManagerProtocol> {
    BOOL _isFromHomepage;
    BOOL _isFromTopic;
    BOOL _isPlayVideo;
    BOOL _isInSearch;
    BOOL _isSuspendReported;
    BOOL _isFromLightMission;
    BOOL _hasAlreadyEnterGoodsPage;
    double _duration;
    AWELightMissionModel *_lightMissionModel;
    NSTimer *_timer;
    long long _maxReportTime;
    long long _minReportTime;
    long long _playState;
    double _realWatchTime;
    NSArray *_requirements;
    NSString *_authorIdWhenLeaveVideo;
    double _stayWatchTime;
    long long _idleThreshold;
    long long _curLoopTime;
    long long _reportTimesBetweenIdleThreshold;
}

@property (nonatomic) double duration;
@property (nonatomic) BOOL isFromHomepage;
@property (nonatomic) BOOL isFromTopic;
@property (retain, nonatomic) AWELightMissionModel *lightMissionModel;
@property (retain, nonatomic) NSTimer *timer;
@property (nonatomic) long long maxReportTime;
@property (nonatomic) long long minReportTime;
@property (nonatomic) long long playState;
@property (nonatomic) double realWatchTime;
@property (nonatomic) BOOL isPlayVideo;
@property (nonatomic) BOOL isInSearch;
@property (copy, nonatomic) NSArray *requirements;
@property (copy, nonatomic) NSString *authorIdWhenLeaveVideo;
@property (nonatomic) double stayWatchTime;
@property (nonatomic) BOOL isSuspendReported;
@property (nonatomic) long long idleThreshold;
@property (nonatomic) long long curLoopTime;
@property (nonatomic) BOOL isFromLightMission;
@property (nonatomic) long long reportTimesBetweenIdleThreshold;
@property (nonatomic) BOOL hasAlreadyEnterGoodsPage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)onServiceInit;
- (void)stopWith:(id)arg0;
- (void)playerDidUpdateWith:(id)arg0;
- (void)playerWillLoopPlayingWith:(id)arg0;
- (void)didChangePlaybackStateWithAction:(id)arg0;
- (void)setIsFromHomepage:(BOOL)arg0;
- (BOOL)isFromHomepage;
- (void)setIsFromTopic:(BOOL)arg0;
- (void)setIsPlayVideo:(BOOL)arg0;
- (void)setIsInSearch:(BOOL)arg0;
- (void)setIsFromLightMission:(BOOL)arg0;
- (void)setReportTimesBetweenIdleThreshold:(long long)arg0;
- (void)setMaxReportTime:(long long)arg0;
- (void)setMinReportTime:(long long)arg0;
- (BOOL)canReportLightMission;
- (void)reportMissionStayPageDuration;
- (void)forceReportLightMission;
- (void)setIdleThreshold:(long long)arg0;
- (void)handleRequirementModel:(id)arg0;
- (id)lightMissionModel;
- (void)setAuthorIdWhenLeaveVideo:(id)arg0;
- (BOOL)isSuspendReported;
- (void)resetReportedStatus;
- (void)setRealWatchTime:(double)arg0;
- (void)reportMissionWatchVideoTime:(id)arg0;
- (void)setCurLoopTime:(long long)arg0;
- (double)realWatchTime;
- (BOOL)handleDifferentRequirementID:(unsigned long long)arg0;
- (void)reportLightMissionWithSourceType:(long long)arg0;
- (long long)maxReportTime;
- (BOOL)handleDifferentScene;
- (void)reportLightMission;
- (void)setStayWatchTime:(double)arg0;
- (double)stayWatchTime;
- (long long)minReportTime;
- (long long)reportTimesBetweenIdleThreshold;
- (long long)idleThreshold;
- (void)reportAntiSpammngInfoWithSourceType:(long long)arg0;
- (long long)curLoopTime;
- (void)setIsSuspendReported:(BOOL)arg0;
- (BOOL)isInLightMissionPeriod;
- (BOOL)isInSearch;
- (BOOL)isFromTopic;
- (id)authorIdWhenLeaveVideo;
- (void)setLightMissionModel:(id)arg0;
- (BOOL)isFromLightMission;
- (BOOL)hasAlreadyEnterGoodsPage;
- (void)setHasAlreadyEnterGoodsPage:(BOOL)arg0;
- (BOOL)isParticipateMission:(id)arg0;
- (void)destroyLightMissionModel;
- (BOOL)isInLightMissionPeriod:(id)arg0;
- (BOOL)lightMissionWillEnterSearchScene;
- (BOOL)continueLightMissionWithParam:(id)arg0;
- (void)scrollViewChanged;
- (BOOL)isLightMissionStyle;
- (void)forceReportLightMission:(id)arg0;
- (BOOL)isPlayVideo;
- (id)timer;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void).cxx_destruct;
- (double)duration;
- (void)setTimer:(id)arg0;
- (unsigned long long)moduleNames;
- (void)setRequirements:(id)arg0;
- (id)requirements;
- (void)setDuration:(double)arg0;
- (long long)playState;
- (void)setPlayState:(long long)arg0;

@end
