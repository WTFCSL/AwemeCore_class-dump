//
//     Generated by private class-dump
//

@class NSString, IESLiveInteractPureRTCstreamConfig, RtcExtInfo;
@protocol IESLiveLinkmicMediaServiceSessions, IESLiveLinkmicMediaServiceSignal, IESLiveLinkmicMediaServiceCrossRoom, IESLiveLinkmicMediaServiceVideo, IESLiveLinkmicMediaServiceKTV, IESLiveLinkmicMediaServiceExtra, IESLiveLinkmicMediaServiceDelegate, IESLiveChatChannelLinkmicMonitor, IESLiveLinkmicMediaServiceConfig, IESLiveLinkmicMediaServiceAudio, IESLiveInteractPureRTCStreamClient, IESLiveLinkmicMediaServiceInfoUpdatable;

@interface IESLiveChatChannelLinkmicRTCService : NSObject <IESLiveLinkmicMediaServiceAudio, IESLiveInteractPureRTCStreamDelegate, HTSLiveStreamPlayerAction, IESLiveChatChannelLinkmicRTCServiceInterface, IESLiveLinkmicMediaServiceInterface> {
    BOOL enableVolumReport;
    BOOL _isPublicStreamEnabled;
    BOOL _isAudioMixEnable;
    BOOL _isAudioDataFirstFrameReceived;
    BOOL _isMute;
    int _streamPlayerSampleRate;
    int _streamPlayerChannels;
    id<IESLiveLinkmicMediaServiceSignal> signal;
    id<IESLiveLinkmicMediaServiceSessions> sessions;
    id<IESLiveLinkmicMediaServiceVideo> video;
    id<IESLiveLinkmicMediaServiceDelegate> delegate;
    id<IESLiveLinkmicMediaServiceInfoUpdatable> mediaInfo;
    id<IESLiveLinkmicMediaServiceCrossRoom> crossRoom;
    id<IESLiveLinkmicMediaServiceExtra> extra;
    id<IESLiveLinkmicMediaServiceKTV> ktv;
    RtcExtInfo *_rtcExtInfo;
    long long _state;
    IESLiveInteractPureRTCstreamConfig *_rtcConfig;
    id<IESLiveLinkmicMediaServiceConfig> _mediaConfig;
    id<IESLiveInteractPureRTCStreamClient> _rtcClient;
    NSString *_publicStreamId;
    id<IESLiveChatChannelLinkmicMonitor> _monitor;
}

@property (retain, nonatomic) RtcExtInfo *rtcExtInfo;
@property (nonatomic) long long state;
@property (retain, nonatomic) IESLiveInteractPureRTCstreamConfig *rtcConfig;
@property (retain, nonatomic) id<IESLiveLinkmicMediaServiceConfig> mediaConfig;
@property (retain, nonatomic) id<IESLiveInteractPureRTCStreamClient> rtcClient;
@property (nonatomic) BOOL isPublicStreamEnabled;
@property (copy, nonatomic) NSString *publicStreamId;
@property (nonatomic) BOOL isAudioMixEnable;
@property (nonatomic) BOOL isAudioDataFirstFrameReceived;
@property (nonatomic) int streamPlayerSampleRate;
@property (nonatomic) int streamPlayerChannels;
@property (nonatomic) BOOL isMute;
@property (retain, nonatomic) id<IESLiveChatChannelLinkmicMonitor> monitor;
@property (readonly, nonatomic) BOOL mute;
@property (nonatomic) BOOL enableVolumReport;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isInLinkmic;
@property (weak, nonatomic) id<IESLiveLinkmicMediaServiceDelegate> delegate;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceInfoUpdatable> mediaInfo;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceAudio> audio;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceVideo> video;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceSessions> sessions;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceSignal> signal;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceCrossRoom> crossRoom;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceKTV> ktv;
@property (readonly, nonatomic) id<IESLiveLinkmicMediaServiceExtra> extra;

- (void)setupWithConfig:(id)arg0;
- (void)setEnableNoiseSuppression:(BOOL)arg0 param:(float)arg1;
- (void)didSetAttachingDIContext;
- (void)setIsMute:(BOOL)arg0;
- (int)adjustPlaybackSignalVolume:(long long)arg0;
- (BOOL)isInteractRunning;
- (id)rtcExtInfo;
- (void)setupWithRTCExtInfo:(id)arg0;
- (id)ktv;
- (void)stopInteract;
- (void)startInteract;
- (void)setRtcExtInfo:(id)arg0;
- (void)muteAllRemoteAudioStreams:(BOOL)arg0 reason:(id)arg1;
- (void)setEnableVolumeBalance:(BOOL)arg0 balancedLoudnessValue:(double)arg1;
- (void)enterLinkmic;
- (void)setIsAudioMixEnable:(BOOL)arg0;
- (void)setStreamPlayerSampleRate:(int)arg0;
- (void)setStreamPlayerChannels:(int)arg0;
- (BOOL)isAudioMixEnable;
- (int)streamPlayerSampleRate;
- (int)streamPlayerChannels;
- (BOOL)isEnterLinkmic;
- (void)setPlayerAudioMixVolume:(long long)arg0;
- (id)linkmicID;
- (void)enableAudioCapture:(BOOL)arg0 reason:(id)arg1;
- (void)enableStreamPlayerAudioMix:(BOOL)arg0 completion:(id /* block */)arg1;
- (void)cleanState;
- (id)rtcConfig;
- (id)publicStreamId;
- (id)rtcClient;
- (void)setRtcClient:(id)arg0;
- (void)joinChatChannelRTCRoom;
- (void)joinChatChannelRTCLinkmic;
- (void)leaveChatChannelRTCLinkmic;
- (void)leaveChatChannelRTCRoom;
- (void)setPublicStreamId:(id)arg0;
- (void)setIsPublicStreamEnabled:(BOOL)arg0;
- (id)rtcStreamer;
- (void)setRtcConfig:(id)arg0;
- (BOOL)isPublicStreamEnabled;
- (id)mediaConfig;
- (void)setIsAudioDataFirstFrameReceived:(BOOL)arg0;
- (BOOL)isAudioDataFirstFrameReceived;
- (void)startReportAudioVolume;
- (BOOL)muteRemoteAudioStreamWithLinkmicID:(id)arg0 mute:(BOOL)arg1 reason:(id)arg2;
- (void)muteLocalAudio:(BOOL)arg0 reason:(id)arg1;
- (BOOL)enableVolumReport;
- (void)setEnableVolumReport:(BOOL)arg0;
- (void)rtcStreamClient:(id)arg0 onError:(id)arg1;
- (void)rtcStreamClient:(id)arg0 onJoinRoomFinish:(id)arg1;
- (void)rtcStreamClientOnLeaveRoomFinish:(id)arg0;
- (void)rtcStreamClient:(id)arg0 onUserJoined:(id)arg1;
- (void)rtcStreamClient:(id)arg0 onUserLeaved:(id)arg1 reason:(unsigned long long)arg2;
- (void)rtcStreamClient:(id)arg0 onStreamPublishSuccess:(id)arg1;
- (void)rtcStreamClient:(id)arg0 onUserMuteAudio:(id)arg1 isMute:(BOOL)arg2;
- (void)rtcStreamClient:(id)arg0 onUserAudioCaptureChanged:(id)arg1 isCapturing:(BOOL)arg2 error:(id)arg3;
- (void)rtcStreamClient:(id)arg0 onFirstRemoteAudioFrameOfUid:(id)arg1 roomID:(id)arg2;
- (void)rtcStreamClientOnFirstLocalAudioFrame:(id)arg0;
- (void)rtcStreamClient:(id)arg0 onUserAudioVolumeIndication:(id)arg1 volume:(long long)arg2 totalVolume:(long long)arg3;
- (void)rtcStreamClient:(id)arg0 onPlayPublicStreamResult:(id)arg1;
- (void)rtcStreamClient:(id)arg0 onPublicStreamSystemSEIReceived:(id)arg1 error:(id)arg2;
- (void)leaveChatChannelRTCRoomAndDestroy;
- (BOOL)isInLinkmic;
- (void)exitLinkmic;
- (id)crossRoom;
- (void)setMediaConfig:(id)arg0;
- (BOOL)mute;
- (id)signal;
- (id)sessions;
- (void).cxx_destruct;
- (id)monitor;
- (long long)state;
- (void)setState:(long long)arg0;
- (void)setMonitor:(id)arg0;
- (id)extra;
- (id)delegate;
- (id)video;
- (void)setDelegate:(id)arg0;
- (id)audio;
- (void)setPlaybackVolume:(long long)arg0;
- (BOOL)isMute;
- (id)mediaInfo;
- (void)clean;

@end
