//
//     Generated by private class-dump
//

@class NSEnumerator, NSString, NSError, AFHTTPBodyPart, NSOutputStream, NSInputStream, NSMutableArray, NSMutableData;
@protocol NSStreamDelegate;

@interface AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate> {
    id<NSStreamDelegate> delegate;
    unsigned long long streamStatus;
    NSError *streamError;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
    NSInputStream *_inputStream;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    AFHTTPBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property (nonatomic) unsigned long long stringEncoding;
@property (retain, nonatomic) NSMutableArray *HTTPBodyParts;
@property (retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator;
@property (retain, nonatomic) AFHTTPBodyPart *currentHTTPBodyPart;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (retain, nonatomic) NSMutableData *buffer;
@property (nonatomic) unsigned long long numberOfBytesInPacket;
@property (nonatomic) double delay;
@property (retain, nonatomic) NSInputStream *inputStream;
@property (readonly, nonatomic) unsigned long long contentLength;
@property (readonly, nonatomic, getter=isEmpty) BOOL empty;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)initWithStringEncoding:(unsigned long long)arg0;
- (void)appendHTTPBodyPart:(id)arg0;
- (void)setNumberOfBytesInPacket:(unsigned long long)arg0;
- (void)setInitialAndFinalBoundaries;
- (void)setHTTPBodyParts:(id)arg0;
- (id)HTTPBodyParts;
- (unsigned long long)numberOfBytesInPacket;
- (id)currentHTTPBodyPart;
- (id)HTTPBodyPartEnumerator;
- (void)setCurrentHTTPBodyPart:(id)arg0;
- (void)setStreamStatus:(unsigned long long)arg0;
- (void)setHTTPBodyPartEnumerator:(id)arg0;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop { } *)arg0 forMode:(struct __CFString { } *)arg1;
- (void)scheduleInRunLoop:(id)arg0 forMode:(id)arg1;
- (long long)read:(char *)arg0 maxLength:(unsigned long long)arg1;
- (void)removeFromRunLoop:(id)arg0 forMode:(id)arg1;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop { } *)arg0 forMode:(struct __CFString { } *)arg1;
- (void)setDelay:(double)arg0;
- (BOOL)getBuffer:(char **)arg0 length:(unsigned long long *)arg1;
- (BOOL)_setCFClientFlags:(unsigned long long)arg0 callback:(void /* function */ *)arg1 context:(struct { long long x0; void *x1; void /* function */ *x2; void /* function */ *x3; void /* function */ *x4; } *)arg2;
- (void).cxx_destruct;
- (BOOL)hasBytesAvailable;
- (void)open;
- (void)setInputStream:(id)arg0;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (double)delay;
- (void)close;
- (void)setOutputStream:(id)arg0;
- (id)delegate;
- (id)outputStream;
- (void)setBuffer:(id)arg0;
- (unsigned long long)streamStatus;
- (BOOL)isEmpty;
- (unsigned long long)contentLength;
- (id)propertyForKey:(id)arg0;
- (id)streamError;
- (id)inputStream;
- (void)setDelegate:(id)arg0;
- (BOOL)setProperty:(id)arg0 forKey:(id)arg1;
- (id)buffer;
- (unsigned long long)stringEncoding;
- (void)setStringEncoding:(unsigned long long)arg0;
- (void)setStreamError:(id)arg0;

@end
