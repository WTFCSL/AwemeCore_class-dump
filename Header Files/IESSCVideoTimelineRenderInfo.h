//
//     Generated by private class-dump
//

@class AVVideoComposition, IESSCMetalRenderingDevice, IESSCMetalImage;

@interface IESSCVideoTimelineRenderInfo : NSObject {
    IESSCMetalRenderingDevice *_renderingDevice;
    IESSCMetalImage *_targetImage;
    AVVideoComposition *_videoComposition;
    struct CGSize { double width; double height; } _renderSize;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _time;
    struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } _timeRange;
}

@property (retain, nonatomic) AVVideoComposition *videoComposition;
@property (nonatomic) struct { long long value; int timescale; unsigned int flags; long long epoch; } time;
@property (nonatomic) struct CGSize { double width; double height; } renderSize;
@property (nonatomic) struct { struct { long long value; int timescale; unsigned int flags; long long epoch; } start; struct { long long value; int timescale; unsigned int flags; long long epoch; } duration; } timeRange;
@property (retain, nonatomic) IESSCMetalRenderingDevice *renderingDevice;
@property (retain, nonatomic) IESSCMetalImage *targetImage;

- (id)renderingDevice;
- (void)setRenderingDevice:(id)arg0;
- (void)setTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })arg0;
- (void).cxx_destruct;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (struct CGSize { double x0; double x1; })renderSize;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRange;
- (void)setTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })arg0;
- (id)targetImage;
- (void)setTargetImage:(id)arg0;
- (id)videoComposition;
- (void)setVideoComposition:(id)arg0;
- (void)setRenderSize:(struct CGSize { double x0; double x1; })arg0;
- (id)initWithVideoComposition:(id)arg0;

@end
