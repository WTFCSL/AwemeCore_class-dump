//
//     Generated by private class-dump
//

@class PTYSetupInfo, NSObject;
@protocol OS_dispatch_queue;

@interface Pitaya : NSObject {
    BOOL _isHost;
    struct _opaque_pthread_rwlock_t { long long __sig; char __opaque[192]; } _init_lock;
    PTYSetupInfo *_setupInfo;
    struct shared_ptr<pitaya::PitayaCore> { struct PitayaCore *__ptr_; struct __shared_weak_count *__cntrl_; } _core;
    NSObject<OS_dispatch_queue> *_packQueue;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSObject<OS_dispatch_queue> *_featureQueue;
    NSObject<OS_dispatch_queue> *_flTaskQueue;
    NSObject<OS_dispatch_queue> *_inputQueue;
    NSObject<OS_dispatch_queue> *_taskQueue;
    NSObject<OS_dispatch_queue> *_globalQueue;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    NSObject<OS_dispatch_queue> *_databaseQueue;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *packQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *ioQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *featureQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *flTaskQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *inputQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *globalQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *concurrentQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *databaseQueue;

+ (id)createCustomInstance;
+ (id)dictValueForSettingKey:(id)arg0;
+ (id)sharedInstance;
+ (BOOL)isReady;

- (void)requestUpdate:(id)arg0 config:(id)arg1 callback:(id /* block */)arg2;
- (void)queryPackage:(id)arg0 callback:(id /* block */)arg1;
- (void)runTask:(id)arg0 input:(id)arg1 config:(id)arg2 callback:(id /* block */)arg3;
- (id)globalQueue;
- (void)setup:(id)arg0 callback:(id /* block */)arg1;
- (void)registerAppLogRunEventCallback:(id)arg0 callback:(id /* block */)arg1;
- (void)removeAppLogRunEventCallback:(id)arg0;
- (void)registerMessageHandler:(id)arg0 callback:(id /* block */)arg1;
- (void)removeMessageHandler:(id)arg0;
- (float)getDeepCleanSize;
- (void)deepClean:(id)arg0 callback:(id /* block */)arg1;
- (BOOL)connectSocket:(id)arg0 startCallback:(id /* block */)arg1 stateCallback:(id /* block */)arg2;
- (void)setInputQueue:(id)arg0;
- (void)downloadPackage:(id)arg0 callback:(id /* block */)arg1;
- (BOOL)requestUpdateAll;
- (void)networkNotification:(id)arg0;
- (void)releaseEngine:(id)arg0;
- (void)releaseAllEngines;
- (void)downloadPakcage:(id)arg0 callback:(id /* block */)arg1;
- (id)dictValueForSettingKey:(id)arg0;
- (id)packQueue;
- (id)featureQueue;
- (id)flTaskQueue;
- (id)loadSetupInfo;
- (void)setupInternal:(id)arg0 callback:(id /* block */)arg1;
- (void)loadModules:(id)arg0;
- (BOOL)isByteNNCoreMLSupported;
- (void)deepCleanWithStrategy:(unsigned long long)arg0 callback:(id /* block */)arg1;
- (void)runTaskInternal:(id)arg0 input:(id)arg1 config:(id)arg2 poolStart:(double)arg3 poolEnd:(double)arg4 callback:(id /* block */)arg5;
- (void)preDownloadAllPackage;
- (void)stopAllDownloadTask;
- (void)socketLogInfo:(id)arg0;
- (void)socketLogWarn:(id)arg0;
- (void)socketLogError:(id)arg0;
- (void)appDidEnterForground:(id)arg0;
- (void)setPackQueue:(id)arg0;
- (void)setFeatureQueue:(id)arg0;
- (void)setFlTaskQueue:(id)arg0;
- (void)setGlobalQueue:(id)arg0;
- (id)concurrentQueue;
- (id)databaseQueue;
- (void)appDidEnterBackground:(id)arg0;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (BOOL)isReady;
- (id)taskQueue;
- (void)setDatabaseQueue:(id)arg0;
- (void)setConcurrentQueue:(id)arg0;
- (id)initWithHost:(BOOL)arg0;
- (id).cxx_construct;
- (id)ioQueue;
- (void)setIoQueue:(id)arg0;
- (id)inputQueue;

@end
