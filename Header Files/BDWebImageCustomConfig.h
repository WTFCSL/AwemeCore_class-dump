//
//     Generated by private class-dump
//

@class BDWebImageTTNetConfig, NSString, BDWebImageDecodeConfig, BDWebImageAllowLogTypeConfig, BDWebImageAdaptiveConfig, BDWebImageLoadConfig, BDWebImageCacheConfig, NSDictionary, BDWebImageHTTPDNSConfig, BDWebImageLargeImageConfig;

@interface BDWebImageCustomConfig : NSObject <BDModelCustom> {
    BOOL _enabledSR;
    BOOL _enabledHeifDecode;
    BOOL _enabledHeifEncode;
    BDWebImageAllowLogTypeConfig *_allowLogTypeConfig;
    BDWebImageHTTPDNSConfig *_httpDNSConfig;
    BDWebImageTTNetConfig *_ttnetConfig;
    BDWebImageAdaptiveConfig *_adaptiveConfig;
    BDWebImageCacheConfig *_cacheConfig;
    BDWebImageDecodeConfig *_decodeConfig;
    BDWebImageLoadConfig *_loadConfig;
    BDWebImageLargeImageConfig *_largeImageConfig;
}

@property (retain, nonatomic) BDWebImageAllowLogTypeConfig *allowLogTypeConfig;
@property (retain, nonatomic) BDWebImageHTTPDNSConfig *httpDNSConfig;
@property (retain, nonatomic) BDWebImageTTNetConfig *ttnetConfig;
@property (nonatomic) BOOL enabledSR;
@property (nonatomic) BOOL enabledHeifDecode;
@property (nonatomic) BOOL enabledHeifEncode;
@property (retain, nonatomic) BDWebImageAdaptiveConfig *adaptiveConfig;
@property (retain, nonatomic) BDWebImageCacheConfig *cacheConfig;
@property (retain, nonatomic) BDWebImageDecodeConfig *decodeConfig;
@property (retain, nonatomic) BDWebImageLoadConfig *loadConfig;
@property (retain, nonatomic) BDWebImageLargeImageConfig *largeImageConfig;
@property (readonly, copy, nonatomic) NSDictionary *ttNetSettingDictionary;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)modelCustomPropertyMapper;

- (void)setCacheConfig:(id)arg0;
- (id)cacheConfig;
- (id)adaptiveConfig;
- (id)ttnetConfig;
- (id)ttNetSettingDictionary;
- (id)allowLogTypeConfig;
- (void)setAllowLogTypeConfig:(id)arg0;
- (id)httpDNSConfig;
- (void)setHttpDNSConfig:(id)arg0;
- (void)setTtnetConfig:(id)arg0;
- (BOOL)enabledSR;
- (void)setEnabledSR:(BOOL)arg0;
- (BOOL)enabledHeifDecode;
- (void)setEnabledHeifDecode:(BOOL)arg0;
- (BOOL)enabledHeifEncode;
- (void)setEnabledHeifEncode:(BOOL)arg0;
- (void)setAdaptiveConfig:(id)arg0;
- (id)decodeConfig;
- (void)setDecodeConfig:(id)arg0;
- (id)loadConfig;
- (void)setLoadConfig:(id)arg0;
- (id)largeImageConfig;
- (void)setLargeImageConfig:(id)arg0;
- (void).cxx_destruct;

@end
