//
//     Generated by private class-dump
//

@class ACCLightningRecordHandsFreeView, UIBezierPath, ACCLightningRecordAnimationView, RACSubject, NSString;
@protocol ACCRecordSwitchModeService, ACCRecordFlowConfigProtocol, ACCRecordFlowControlService, ACCRecorderViewContainer, ACCRecordConfigService, ACCRecordDualService, ACCRecordPropService, ACCQuickStoryRecorderTipsService, ACCVideoConfigProtocol, ACCRecordFlowService, ACCCameraService, ACCRecordButtonService;

@interface ACCLightningStyleRecordFlowComponent : ACCRecordFlowComponent <ACCRecordConfigDurationHandler, ACCCaptureButtonAnimationViewDelegate, ACCRecordAnimationViewTouchesPlugin, ACCRecordButtonServiceSubscriber> {
    BOOL _firstFrameHasRendered;
    BOOL _hasTakePictureAction;
    ACCLightningRecordAnimationView *_recordAnimationView;
    ACCLightningRecordHandsFreeView *_handsFreeView;
    UIBezierPath *_handsFreeHotAera;
    id<ACCVideoConfigProtocol> _videoConfig;
    id<ACCRecordFlowService> _flowService;
    id<ACCRecordFlowConfigProtocol> _flowConfig;
    id<ACCRecordSwitchModeService> _switchModeService;
    id<ACCCameraService> _cameraService;
    id<ACCRecordConfigService> _configService;
    id<ACCQuickStoryRecorderTipsService> _quickStoryTipsService;
    RACSubject *_switchModelSubject;
    id<ACCRecordButtonService> _recordButtonService;
    id<ACCRecordFlowControlService> _recordFlowControlService;
    id<ACCRecorderViewContainer> _viewContainer;
    id<ACCRecordDualService> _dualService;
    id<ACCRecordPropService> _propService;
}

@property (retain, nonatomic) ACCLightningRecordAnimationView *recordAnimationView;
@property (retain, nonatomic) ACCLightningRecordHandsFreeView *handsFreeView;
@property (retain, nonatomic) UIBezierPath *handsFreeHotAera;
@property (retain, nonatomic) id<ACCVideoConfigProtocol> videoConfig;
@property (retain, nonatomic) id<ACCRecordFlowService> flowService;
@property (retain, nonatomic) id<ACCRecordFlowConfigProtocol> flowConfig;
@property (retain, nonatomic) id<ACCRecordSwitchModeService> switchModeService;
@property (retain, nonatomic) id<ACCCameraService> cameraService;
@property (retain, nonatomic) id<ACCRecordConfigService> configService;
@property (retain, nonatomic) id<ACCQuickStoryRecorderTipsService> quickStoryTipsService;
@property (retain, nonatomic) RACSubject *switchModelSubject;
@property (retain, nonatomic) id<ACCRecordButtonService> recordButtonService;
@property (retain, nonatomic) id<ACCRecordFlowControlService> recordFlowControlService;
@property (weak, nonatomic) id<ACCRecorderViewContainer> viewContainer;
@property (retain, nonatomic) id<ACCRecordDualService> dualService;
@property (retain, nonatomic) id<ACCRecordPropService> propService;
@property (nonatomic) BOOL firstFrameHasRendered;
@property (nonatomic) BOOL hasTakePictureAction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)videoConfig;
- (void)setVideoConfig:(id)arg0;
- (id)cameraService;
- (void)setCameraService:(id)arg0;
- (void)componentDidMount;
- (void)loadComponentView;
- (id)flowService;
- (id)switchModeService;
- (void)updateStandardDurationIndicatorDisplay;
- (void)updateLightingStyleRecordButtonLightingViewWithMode:(id)arg0;
- (id)flowConfig;
- (id)lightningProgressView;
- (id)recordAnimationView;
- (void)stopRecordButtonAnimationWithIgnoreProgress:(BOOL)arg0;
- (void)updateProgressAndMarksDisplay;
- (id)buildCaptureButton;
- (void)flowServiceStateDidChanged:(unsigned long long)arg0 preState:(unsigned long long)arg1;
- (void)flowServiceDidMarkDuration:(double)arg0;
- (void)flowServiceDidRemoveLastSegment:(BOOL)arg0;
- (void)flowServiceDidRemoveAllSegment;
- (void)flowServiceDurationHasRestored;
- (BOOL)needBlockAnimationTouches:(id)arg0;
- (void)switchModeServiceDidChangeMode:(id)arg0 oldMode:(id)arg1;
- (void)didSetMaxDuration:(double)arg0;
- (BOOL)shouldAnimationViewSwitchToHoldSubtype;
- (void)animationViewDidSwitchToHoldSubtype;
- (void)animationViewDidReceiveTap;
- (BOOL)canTakePhotoWithTap;
- (BOOL)isSupportPressToVideo;
- (void)animationViewSubtypeDidChange;
- (void)cameraService:(id)arg0 stopVideoCaptureWithError:(id)arg1;
- (void)setRecordAnimationView:(id)arg0;
- (void)setFlowService:(id)arg0;
- (void)setSwitchModeService:(id)arg0;
- (void)setFlowConfig:(id)arg0;
- (void)onCameraFirstFrameDidRender:(id)arg0;
- (id)propService;
- (void)setPropService:(id)arg0;
- (id)configService;
- (void)setConfigService:(id)arg0;
- (id)dualService;
- (void)setDualService:(id)arg0;
- (id)recordButtonService;
- (void)executePropPanelRecordBeganTask;
- (void)setRecordButtonService:(id)arg0;
- (void)animationView:(id)arg0 touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)animationView:(id)arg0 touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)animationView:(id)arg0 touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)animationView:(id)arg0 touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (id)switchModelSubject;
- (void)setSwitchModelSubject:(id)arg0;
- (void)setHandsFreeHotAera:(id)arg0;
- (id)handsFreeHotAera;
- (id)handsFreeView;
- (void)updateHandsFreeViewHidden;
- (void)setFirstFrameHasRendered:(BOOL)arg0;
- (BOOL)hasTakePictureAction;
- (void)tryTakePicture;
- (BOOL)firstFrameHasRendered;
- (void)setHasTakePictureAction:(BOOL)arg0;
- (id)handsFreeTrackModeName;
- (void)showRecordButtonIfNeededWithAnimated:(BOOL)arg0;
- (id)quickStoryTipsService;
- (void)trackPauseButtonClicked:(BOOL)arg0;
- (void)updateAssistantButtonState:(id)arg0;
- (BOOL)disableTouchEvent;
- (void)animationViewHandsFreeEnd:(id)arg0;
- (id)recordFlowControlService;
- (id)switchModelSignal;
- (void)pauseButtonDidClicked;
- (void)setHandsFreeView:(id)arg0;
- (void)setQuickStoryTipsService:(id)arg0;
- (void)setRecordFlowControlService:(id)arg0;
- (void).cxx_destruct;
- (void)dealloc;
- (id)viewContainer;
- (void)setViewContainer:(id)arg0;
- (void)updateProgressBar;

@end
