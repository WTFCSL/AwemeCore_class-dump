//
//     Generated by private class-dump
//

@class NSObject, NSMutableDictionary, NSMutableArray;
@protocol OS_dispatch_queue;

@interface EcTaskExecute : NSObject {
    long long _concurrentTask;
    NSMutableDictionary *_runngingTask;
    NSMutableArray *_heightLevelTask;
    NSMutableArray *_defaultLevelTask;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_taskQueue;
}

@property (nonatomic) long long concurrentTask;
@property (retain, nonatomic) NSMutableDictionary *runngingTask;
@property (retain, nonatomic) NSMutableArray *heightLevelTask;
@property (retain, nonatomic) NSMutableArray *defaultLevelTask;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue;

+ (void)postTask:(id)arg0 level:(long long)arg1;

- (void)setConcurrentTask:(long long)arg0;
- (void)setRunngingTask:(id)arg0;
- (void)setHeightLevelTask:(id)arg0;
- (void)setDefaultLevelTask:(id)arg0;
- (void)handleAddTask:(id)arg0;
- (id)heightLevelTask;
- (id)defaultLevelTask;
- (void)weakUp;
- (id)runngingTask;
- (long long)concurrentTask;
- (void)clearTaskKey:(id)arg0;
- (id)init;
- (void)setWorkQueue:(id)arg0;
- (id)workQueue;
- (void).cxx_destruct;
- (void)setTaskQueue:(id)arg0;
- (id)taskQueue;

@end
