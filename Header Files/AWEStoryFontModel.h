//
//     Generated by private class-dump
//

@class NSString, NSArray, NSValue;

@interface AWEStoryFontModel : MTLModel <MTLJSONSerializing> {
    BOOL _hasBgColor;
    BOOL _hasShadeColor;
    NSString *_title;
    NSString *_fontName;
    NSString *_fontFileName;
    NSString *_localUrl;
    NSArray *_coverURLs;
    NSString *_resourceId;
    long long _defaultFontSize;
    NSString *_effectId;
    NSString *_iconURLString;
    double _lineSpacing;
    double _baselineOffset;
    NSValue *_titleSize;
    NSValue *_collectionCellSize;
    unsigned long long _textStyle;
    long long _downloadState;
}

@property (nonatomic) BOOL isFakeModel;
@property (copy, nonatomic) NSString *iconURLString;
@property (nonatomic) double lineSpacing;
@property (nonatomic) double baselineOffset;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *fontName;
@property (copy, nonatomic) NSString *fontFileName;
@property (copy, nonatomic) NSString *localUrl;
@property (copy, nonatomic) NSArray *coverURLs;
@property (nonatomic) BOOL hasBgColor;
@property (nonatomic) BOOL hasShadeColor;
@property (copy, nonatomic) NSString *resourceId;
@property (nonatomic) long long defaultFontSize;
@property (copy, nonatomic) NSString *effectId;
@property (retain, nonatomic) NSValue *titleSize;
@property (retain, nonatomic) NSValue *collectionCellSize;
@property (nonatomic) unsigned long long textStyle;
@property (readonly, nonatomic) BOOL download;
@property (readonly, nonatomic) BOOL supportStroke;
@property (nonatomic) long long downloadState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (BOOL)isValidEffectModel:(id)arg0;
+ (id)defaultFakeModel;
+ (id)JSONKeyPathsByPropertyKey;

- (id)resourceId;
- (void)setIsFakeModel:(BOOL)arg0;
- (BOOL)isFakeModel;
- (void)setLocalUrl:(id)arg0;
- (id)localUrl;
- (void)setResourceId:(id)arg0;
- (id)initWithEffectModel:(id)arg0;
- (id)coverURLs;
- (void)setCoverURLs:(id)arg0;
- (id)collectionCellSize;
- (BOOL)hasBgColor;
- (void)setTitleSize:(id)arg0;
- (BOOL)supportStroke;
- (BOOL)hasShadeColor;
- (id)fontFileName;
- (void)setFontFileName:(id)arg0;
- (void)setHasBgColor:(BOOL)arg0;
- (void)setHasShadeColor:(BOOL)arg0;
- (void)setCollectionCellSize:(id)arg0;
- (id)p_realLocalURLStringWithString:(id)arg0;
- (void)setBaselineOffset:(double)arg0;
- (unsigned long long)textStyle;
- (void)setDownloadState:(long long)arg0;
- (double)baselineOffset;
- (BOOL)download;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { } *)arg0;
- (void)setTextStyle:(unsigned long long)arg0;
- (id)fontName;
- (void)setFontName:(id)arg0;
- (id)title;
- (long long)downloadState;
- (void)setTitle:(id)arg0;
- (double)lineSpacing;
- (void)setLineSpacing:(double)arg0;
- (long long)defaultFontSize;
- (void)setDefaultFontSize:(long long)arg0;
- (id)titleSize;
- (id)iconURLString;
- (void)setIconURLString:(id)arg0;
- (id)effectId;
- (void)setEffectId:(id)arg0;

@end
