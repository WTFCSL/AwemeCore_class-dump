//
//     Generated by private class-dump
//

@class NSURL, IESLivePlayerSEIMetaInfo, NSDictionary, NSObject, IESLivePlayerAttachment, IESLivePlayerMiddlewarePropertyContainer, UIView, IESLivePlayerAudioLoudness, NSString, IESLiveNewPlayerTVLTracker, TVLManager, NSMutableSet, NSArray, NSError, UIImage;
@protocol OS_dispatch_queue, IESLivePlayerControllerDelegate, IESLivePlayerControllerConfigProtocol;

@interface IESLivePlayerController : NSObject <IESLivePlayerEffectProtocol, TVLAppInfoFetcher, VeLivePlayerObserver, TVLLoudnessObserver, IESLivePlayerProtocol, TVLDelegate, TVLSettingsManagerDataSource> {
    BOOL _shouldUseVideoFrameInViceView;
    BOOL _enableAudioRecording;
    BOOL _interrputed;
    BOOL _registeredObservers;
    BOOL _stopPlayerOnApplicationBackground;
    BOOL _openSEI;
    BOOL _muted;
    BOOL _shouldMuted;
    BOOL _shouldReportAudioFrame;
    BOOL _playStarted;
    BOOL _playPaused;
    BOOL _isNeedCropVice;
    BOOL _rendered;
    BOOL _isInteractRunning;
    BOOL _supportsTimeShift;
    BOOL _enableForbidVideoProcess;
    BOOL _enableEyesProtect;
    BOOL _prepareForReuse;
    BOOL _enableReplacePauseToStopInRtm;
    BOOL _shouldOptLargeStreamSuperReso;
    BOOL _enablePresetPlayerSize;
    BOOL _enableBackgroundPlay;
    BOOL _enableBMFSR;
    BOOL _shouldDisableVRMode;
    BOOL _disableVideoProcessByUser;
    BOOL _disablesdr2hdrByUser;
    BOOL _hasManualSetSRType;
    BOOL _audioRenderingEnable;
    float _volumeEffectTargetLufs;
    long long _scaleType;
    TVLManager *_tvlManager;
    NSMutableSet *_observerSet;
    NSDictionary *_tvlSettings;
    NSDictionary *_tvlCommonParams;
    long long _tvlLoadState;
    IESLivePlayerMiddlewarePropertyContainer *_middlewareProperties;
    id<IESLivePlayerControllerDelegate> _delegate;
    IESLivePlayerSEIMetaInfo *_binarySEIInfo;
    NSDictionary *_receiveMetaInfo;
    NSDictionary *_receiveStreamMetaInfo;
    NSDictionary *_receiveImmidiatelyMetaInfo;
    UIView *_playerView;
    NSURL *_contentURL;
    NSString *_sdkParams;
    NSString *_currentStreamData;
    NSString *_streamIDStr;
    unsigned long long _loadState;
    unsigned long long _playbackState;
    NSError *_error;
    NSDictionary *_reportParam;
    NSDictionary *_debugInfo;
    NSDictionary *_safeReportParam;
    double _timeShiftLowerBoundInSeconds;
    double _iesLiveInvalidTimeShiftLowerBound;
    NSString *_resolutionType;
    NSString *_meidiaSourceType;
    long long _renderingFPS;
    id /* block */ _nodeOptimizer;
    IESLivePlayerAttachment *_playerAttachment;
    id /* block */ _appInfoFetchBlock;
    id /* block */ _reportStateBlock;
    id /* block */ _trackBlock;
    id /* block */ _assertBlock;
    id /* block */ _imageDownLoad;
    id /* block */ _strategyInfo;
    id /* block */ _eyesProtectLutImageBlock;
    double _eyesProtectValue;
    UIView *_decorationView;
    long long _pullStreamSuccessCount;
    double _playStartTime;
    double _pullStreamTimeCost;
    IESLivePlayerAudioLoudness *_sourceLoudness;
    NSObject<OS_dispatch_queue> *_audioSessionQueue;
    NSDictionary *_srTypeMap;
    NSString *_sessionID;
    long long _specifyScene;
    NSDictionary *_wholeVolumeEffectParam;
    NSDictionary *_streamRenderAudioVolume;
    struct CGSize { double width; double height; } _videoSize;
    struct CGSize { double width; double height; } _streamSize;
    struct CGSize { double width; double height; } _cropSize;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _renderViewFrame;
    struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _roiRegion;
}

@property (nonatomic) unsigned long long superViewHash;
@property (retain, nonatomic) NSString *topResponderChainStr;
@property (nonatomic) double totalInRoomTimeCost;
@property (nonatomic) double enterRoomStartTime;
@property (nonatomic) BOOL hasPreviewPullDuration;
@property (nonatomic) BOOL effectConfigured;
@property (nonatomic) BOOL effectEnable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) UIImage *coverImage;
@property (nonatomic) long long imageType;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *audioSessionQueue;
@property (nonatomic) BOOL enableBMFSR;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } roiRegion;
@property (nonatomic) BOOL shouldDisableVRMode;
@property (nonatomic) BOOL disableVideoProcessByUser;
@property (nonatomic) BOOL disablesdr2hdrByUser;
@property (nonatomic) long long pullStreamSuccessCount;
@property (nonatomic) double playStartTime;
@property (nonatomic) double pullStreamTimeCost;
@property (nonatomic) BOOL hasManualSetSRType;
@property (copy, nonatomic) NSDictionary *srTypeMap;
@property (copy, nonatomic) NSString *sessionID;
@property (nonatomic) float volumeEffectTargetLufs;
@property (nonatomic) long long specifyScene;
@property (copy, nonatomic) NSDictionary *wholeVolumeEffectParam;
@property (retain, nonatomic) NSDictionary *streamRenderAudioVolume;
@property (nonatomic) BOOL audioRenderingEnable;
@property (retain, nonatomic) TVLManager *tvlManager;
@property (retain, nonatomic) NSMutableSet *observerSet;
@property (copy, nonatomic) NSDictionary *tvlSettings;
@property (copy, nonatomic) NSDictionary *tvlCommonParams;
@property (nonatomic) BOOL interrputed;
@property (nonatomic) long long tvlLoadState;
@property (nonatomic) BOOL registeredObservers;
@property (retain, nonatomic) IESLivePlayerMiddlewarePropertyContainer *middlewareProperties;
@property (nonatomic) long long renderType;
@property (weak, nonatomic) id<IESLivePlayerControllerDelegate> delegate;
@property (nonatomic) float volume;
@property (nonatomic) BOOL stopPlayerOnApplicationBackground;
@property (nonatomic) long long scaleType;
@property (nonatomic) BOOL hardwareDecode;
@property (nonatomic) BOOL openSEI;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL shouldMuted;
@property (nonatomic) BOOL shouldReportAudioFrame;
@property (retain, nonatomic) IESLivePlayerSEIMetaInfo *binarySEIInfo;
@property (retain, nonatomic) NSDictionary *receiveMetaInfo;
@property (retain, nonatomic) NSDictionary *receiveStreamMetaInfo;
@property (retain, nonatomic) NSDictionary *receiveImmidiatelyMetaInfo;
@property (retain, nonatomic) UIView *playerView;
@property (retain, nonatomic) NSURL *contentURL;
@property (retain, nonatomic) NSString *sdkParams;
@property (copy, nonatomic) NSString *currentStreamData;
@property (nonatomic) struct CGSize { double width; double height; } videoSize;
@property (nonatomic) struct CGSize { double width; double height; } streamSize;
@property (copy, nonatomic) NSString *streamIDStr;
@property (nonatomic) struct CGSize { double width; double height; } cropSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoCropAreaSize;
@property (nonatomic) BOOL playStarted;
@property (nonatomic) BOOL playPaused;
@property (nonatomic) BOOL isNeedCropVice;
@property (nonatomic) BOOL rendered;
@property (nonatomic) BOOL isInteractRunning;
@property (nonatomic) unsigned long long loadState;
@property (nonatomic) unsigned long long playbackState;
@property (nonatomic) long long alignMode;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSDictionary *reportParam;
@property (retain, nonatomic) NSDictionary *debugInfo;
@property (copy) NSDictionary *safeReportParam;
@property (nonatomic) BOOL supportsTimeShift;
@property (nonatomic) double timeShiftLowerBoundInSeconds;
@property (nonatomic) double iesLiveInvalidTimeShiftLowerBound;
@property (retain, nonatomic) NSString *resolutionType;
@property (retain, nonatomic) NSString *meidiaSourceType;
@property (nonatomic) long long renderingFPS;
@property (nonatomic) BOOL enableForbidVideoProcess;
@property (nonatomic) BOOL enableSupportPictureInPictureMode;
@property (nonatomic) BOOL enableAudioRecording;
@property (nonatomic) BOOL enableVideoRecording;
@property (readonly, copy, nonatomic) NSString *videoCodecType;
@property (copy, nonatomic) id /* block */ nodeOptimizer;
@property (retain, nonatomic) IESLivePlayerAttachment *playerAttachment;
@property (copy, nonatomic) id /* block */ appInfoFetchBlock;
@property (copy, nonatomic) id /* block */ reportStateBlock;
@property (copy, nonatomic) id /* block */ trackBlock;
@property (copy, nonatomic) id /* block */ assertBlock;
@property (copy, nonatomic) id /* block */ imageDownLoad;
@property (copy, nonatomic) id /* block */ strategyInfo;
@property (copy, nonatomic) id /* block */ eyesProtectLutImageBlock;
@property (nonatomic) BOOL enableEyesProtect;
@property (nonatomic) double eyesProtectValue;
@property (nonatomic) BOOL prepareForReuse;
@property (nonatomic) BOOL shouldUseVideoFrameInViceView;
@property (readonly, nonatomic) NSArray *currentVicePlayerViews;
@property (readonly, nonatomic) UIView *decorationView;
@property (nonatomic) BOOL enableReplacePauseToStopInRtm;
@property (nonatomic) BOOL shouldOptLargeStreamSuperReso;
@property (nonatomic) struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } renderViewFrame;
@property (nonatomic) BOOL enablePresetPlayerSize;
@property (nonatomic) BOOL enableBackgroundPlay;
@property (retain, nonatomic) IESLivePlayerAudioLoudness *sourceLoudness;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *view;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoAreaFrame;
@property (nonatomic) BOOL supportPictureInPictureMode;
@property (readonly, nonatomic) BOOL enableVideoProcess;
@property (readonly, nonatomic) BOOL didROIBMFSROpened;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } videoRoiRegion;
@property (readonly, copy, nonatomic) NSString *sdkKey;
@property (readonly, nonatomic) BOOL smoothSwitching;
@property (retain, nonatomic) id<IESLivePlayerControllerConfigProtocol> config;
@property (retain, nonatomic) IESLiveNewPlayerTVLTracker *tvlTracker;
@property (readonly, nonatomic) BOOL isVRMode;
@property (copy, nonatomic) id /* block */ headPoseUpdateBlock;
@property (readonly, nonatomic) BOOL effectConfigured;
@property (nonatomic) BOOL effectEnable;

- (void)onStreamDryup:(id)arg0;
- (void)onLoudness:(float)arg0 soucePeak:(float)arg1 targetLufs:(float)arg2 isEnableExternalAETargetLufs:(BOOL)arg3;
- (void)setupWithConfig:(id)arg0;
- (void)recieveError:(id)arg0;
- (void)stallStart;
- (void)stallEnd;
- (void)onMonitorLog:(id)arg0;
- (void)loadStateChanged:(id)arg0;
- (void)setHardwareDecode:(BOOL)arg0;
- (BOOL)hardwareDecode;
- (struct __CVBuffer { } *)copyPixelBuffer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoAreaFrame;
- (void)setSupportPictureInPictureMode:(BOOL)arg0;
- (void)recenter;
- (void)rotateWithPitch:(double)arg0 andYaw:(double)arg1 andRoll:(double)arg2;
- (void)setHeadTrackingEnabled:(BOOL)arg0;
- (id)createVicePlayerViewWithRenderingArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (id)currentVicePlayerViews;
- (id)createVicePlayerView;
- (void)destroyVicePlayerView:(id)arg0;
- (void)setEnableReplacePauseToStopInRtm:(BOOL)arg0;
- (id /* block */)headPoseUpdateBlock;
- (void)setSpaceOrientationPitch:(float)arg0;
- (void)setHeadPoseUpdateBlock:(id /* block */)arg0;
- (void)updateBackStickerWithImage:(id)arg0 coverAreaDegrees:(double)arg1;
- (void)setGyroSensitivity:(double)arg0;
- (void)setRequiredInterfaceOrientation:(long long)arg0;
- (id)getComposerNodes;
- (void)removeComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)setComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)appendComposerNodes:(id)arg0 withTag:(id)arg1;
- (void)setRenderCacheStringValue:(id)arg0 withKey:(id)arg1;
- (id)getEffectTrackData:(long long)arg0;
- (BOOL)enableVideoProcess;
- (void)setEnableVideoProcess:(BOOL)arg0;
- (void)setShouldReportAudioFrame:(BOOL)arg0;
- (BOOL)shouldUseVideoFrameInViceView;
- (BOOL)shouldReportAudioFrame;
- (long long)currentAudioStreamDecibel;
- (long long)renderingFPS;
- (BOOL)enableIgnoreAudioInterruption;
- (BOOL)enableReplacePauseToStopInRtm;
- (void)setShouldUseVideoFrameInViceView:(BOOL)arg0;
- (void)setEnableAudioRecording:(BOOL)arg0;
- (void)setCommonTag:(id)arg0;
- (BOOL)enableAudioRecording;
- (struct __CVBuffer { } *)cropCopyPixelBuffer:(float)arg0 topLeftY:(float)arg1 cropW:(float)arg2 cropH:(float)arg3;
- (long long)renderType;
- (void)setCoverImage:(id)arg0;
- (id)currentStreamData;
- (void)updateLivePlayersEyesProtectState:(BOOL)arg0 intensityValue:(double)arg1;
- (BOOL)playStarted;
- (void)trackWithEvent:(id)arg0 params:(id)arg1;
- (double)playStartTime;
- (void)setPlayStartTime:(double)arg0;
- (id)currentCommonParams;
- (id)sdkParams;
- (void)setSdkParams:(id)arg0;
- (long long)alignMode;
- (void)setAlignMode:(long long)arg0;
- (void)setObserverSet:(id)arg0;
- (void)videoBmfFlexSrUpdate:(id)arg0 srType:(long long)arg1;
- (id)getEffectModel:(long long)arg0 modelName:(id)arg1;
- (void)onResolutionSwitch:(id)arg0 resolution:(long long)arg1 error:(id)arg2 reason:(long long)arg3;
- (void)manager:(id)arg0 didAutomaticallySwitchFromPreviousResolution:(id)arg1 toCurrentResolution:(id)arg2 userInfo:(id)arg3;
- (void)playerItem:(id)arg0 willSwitchFromPreferences:(id)arg1 toPreferences:(id)arg2;
- (void)manager:(id)arg0 didReceiveSEI:(id)arg1;
- (void)manager:(id)arg0 videoCropAreaDidChange:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg1;
- (void)manager:(id)arg0 didReceiveBinarySei:(const char *)arg1 length:(int)arg2;
- (void)manager:(id)arg0 didReceiveImmidiatlySei:(id)arg1;
- (void)manager:(id)arg0 videoSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)onVideoSizeChanged:(id)arg0 width:(int)arg1 height:(int)arg2;
- (void)onReceiveSeiMessage:(id)arg0 message:(id)arg1;
- (void)onFirstVideoFrameRender:(id)arg0 isFirstFrame:(BOOL)arg1;
- (void)onStallStart:(id)arg0;
- (void)onStallEnd:(id)arg0;
- (void)onNetworkQualityChanged:(id)arg0 behavior:(int)arg1 detail:(id)arg2;
- (void)manager:(id)arg0 playerItemStatusDidChange:(long long)arg1;
- (void)manager:(id)arg0 willOpenAudioRenderWithSampleRate:(int)arg1 channels:(int)arg2 duration:(int)arg3;
- (void)manager:(id)arg0 willOpenAudioProcessInAudioRecord:(int)arg1 channels:(int)arg2 duration:(int)arg3;
- (void)onAudioVolume:(id)arg0;
- (void)manager:(id)arg0 willProcessAudioFrameWithRawData:(float **)arg1 samples:(int)arg2 timeStamp:(long long)arg3;
- (void)manager:(id)arg0 willProcessAudioFrameInAudioRecord:(float **)arg1 samples:(int)arg2 timeStamp:(long long)arg3;
- (BOOL)supportsTimeShift;
- (void)setStrategyInfo:(id /* block */)arg0;
- (id /* block */)strategyInfo;
- (double)timeShiftLowerBoundInSeconds;
- (void)onRenderAudioFrame:(id)arg0 audioFrame:(id)arg1;
- (void)onRenderVideoFrame:(id)arg0 videoFrame:(id)arg1;
- (struct CGSize { double x0; double x1; })cropSize;
- (id)generateSessionID;
- (id)bizTrackParams;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1;
- (void)setMuted:(BOOL)arg0 callTrace:(id)arg1;
- (void)setPrepareForReuse:(BOOL)arg0 callTrace:(id)arg1;
- (void)updateStainedTrackInfo:(id)arg0;
- (void)playWithCallTrace:(id)arg0;
- (void)pauseWithCallTrace:(id)arg0;
- (void)stopWithCallTrace:(id)arg0;
- (id)sdkKey;
- (void)resetWithCallTrace:(id)arg0;
- (void)updateSDKKey:(id)arg0 callTrace:(id)arg1;
- (void)updateTVLSettings:(id)arg0;
- (void)reloadURL:(id)arg0 callTrace:(id)arg1 sdkParams:(id)arg2;
- (void)setCurrentStreamData:(id)arg0;
- (void)closeWithCallTrace:(id)arg0;
- (id)playerLogInfoWithBizLogInfo:(id)arg0;
- (void)trackLatency:(double)arg0 vendor:(id)arg1 sourcePlatform:(id)arg2;
- (void)trackWithEvent:(id)arg0 params:(id)arg1 logContent:(id)arg2 logLevel:(unsigned long long)arg3;
- (long long)livePlayerDebugState;
- (id)tvlTracker;
- (void)setTvlTracker:(id)arg0;
- (void)recordEnterRoomTimeFromPreview:(BOOL)arg0 callTrace:(id)arg1;
- (void)recordLeaveRoomTimeWithCallTrace:(id)arg0;
- (void)recordLeaveRoomTimeForceToPreviewWithCallTrace:(id)arg0;
- (void)resetEnterLeaveRoomTimeWithCallTrace:(id)arg0;
- (void)setHeadTrackingEnabledOnceByLifeCycle:(BOOL)arg0;
- (void)vrZoom:(float)arg0;
- (float)getVRZoom;
- (BOOL)isHalfPanoramaStream;
- (void)updateBackStickerWithVrType:(long long)arg0 extra:(id)arg1 eventParams:(id)arg2;
- (void)updateBackStickerWithPicoInfo:(id)arg0 eventParams:(id)arg1;
- (BOOL)isVRMode;
- (void)sendMessage:(long long)arg0 param1:(long long)arg1 param2:(long long)arg2 param3:(id)arg3;
- (BOOL)effectConfigured;
- (BOOL)effectEnable;
- (void)setEffectEnable:(BOOL)arg0;
- (BOOL)shouldReportByPlayerSDKApplog;
- (id)initWithURL:(id)arg0 sdkParams:(id)arg1;
- (BOOL)supportResolutionSDKKey:(id)arg0;
- (void)switchCurrentItemResolution:(id)arg0 callTrace:(id)arg1;
- (void)smoothlySwitchCurrentItemResolution:(id)arg0 switchReason:(long long)arg1 callTrace:(id)arg2 completion:(id /* block */)arg3;
- (void)updateSDKKey:(id)arg0 useTSL:(BOOL)arg1 callTrace:(id)arg2;
- (BOOL)tryUpdateSDKKey:(id)arg0 useTSL:(BOOL)arg1 callTrace:(id)arg2;
- (void)preparePlayerItemWithStreamData:(id)arg0 preferenceInfo:(id)arg1 callTrace:(id)arg2;
- (void)reloadURL:(id)arg0 callTrace:(id)arg1 sdkParams:(id)arg2 force:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 useTLS:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 force:(BOOL)arg2;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 force:(BOOL)arg2 skipReset:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 skipReset:(BOOL)arg4;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 preferenceInfo:(id)arg3;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 useTLS:(BOOL)arg4 preferenceInfo:(id)arg5;
- (void)clearSEIInfoWithCallTrace:(id)arg0;
- (void)setShouldMuted:(BOOL)arg0 callTrace:(id)arg1;
- (void)enableAudioProcessorInPlaying:(BOOL)arg0 callTrace:(id)arg1;
- (void)setPlayerMutedInAudioProcessing:(BOOL)arg0 callTrace:(id)arg1;
- (void)playWithCallTrace:(id)arg0 triggerReason:(id)arg1;
- (void)stopWithCallTrace:(id)arg0 forceOnMainThread:(BOOL)arg1;
- (void)removePlayerViewFromSuperViewWithCallTrace:(id)arg0;
- (void)preloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2;
- (void)resetPreloadWithCallTrace:(id)arg0;
- (void)startVideoRenderingWithCallTrace:(id)arg0;
- (void)stopVideoRenderingWithCallTrace:(id)arg0;
- (void)startAudioRenderingWithCallTrace:(id)arg0;
- (void)stopAudioRenderingWithCallTrace:(id)arg0;
- (void)updateTVLCommonParams:(id)arg0;
- (void)setTimeShift:(long long)arg0;
- (BOOL)isBufferFull;
- (void)setEnableForbidVideoProcess:(BOOL)arg0;
- (BOOL)isPlayerValid;
- (void)setSuperResolutionSwitchIfNeeded:(BOOL)arg0;
- (void)setSuperResolutionType:(long long)arg0;
- (void)setSuperResolutionTypeWithString:(id)arg0;
- (BOOL)queryPlayerVideoFrameDidRender;
- (id)middlewareProperties;
- (id)playerAttachment;
- (BOOL)openSEI;
- (void)setOpenSEI:(BOOL)arg0;
- (BOOL)stopPlayerOnApplicationBackground;
- (void)setStopPlayerOnApplicationBackground:(BOOL)arg0;
- (id /* block */)nodeOptimizer;
- (void)setNodeOptimizer:(id /* block */)arg0;
- (id /* block */)eyesProtectLutImageBlock;
- (void)setEyesProtectLutImageBlock:(id /* block */)arg0;
- (id)binarySEIInfo;
- (id)receiveMetaInfo;
- (id)receiveStreamMetaInfo;
- (id)receiveImmidiatelyMetaInfo;
- (struct CGSize { double x0; double x1; })streamSize;
- (id)streamIDStr;
- (BOOL)isNeedCropVice;
- (void)setIsNeedCropVice:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoCropAreaSize;
- (void)setVideoCropAreaSize:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)playPaused;
- (BOOL)isInteractRunning;
- (void)setIsInteractRunning:(BOOL)arg0;
- (double)iesLiveInvalidTimeShiftLowerBound;
- (void)setIesLiveInvalidTimeShiftLowerBound:(double)arg0;
- (BOOL)enableSupportPictureInPictureMode;
- (void)setEnableSupportPictureInPictureMode:(BOOL)arg0;
- (BOOL)enableForbidVideoProcess;
- (BOOL)enableVideoRecording;
- (void)setEnableVideoRecording:(BOOL)arg0;
- (void)setPrepareForReuse:(BOOL)arg0;
- (BOOL)enablePresetPlayerSize;
- (void)setEnablePresetPlayerSize:(BOOL)arg0;
- (BOOL)enableBackgroundPlay;
- (void)setEnableBackgroundPlay:(BOOL)arg0;
- (BOOL)shouldOptLargeStreamSuperReso;
- (void)setShouldOptLargeStreamSuperReso:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderViewFrame;
- (void)setRenderViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)didROIBMFSROpened;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoRoiRegion;
- (id)reportParam;
- (id)streamRenderAudioVolume;
- (id /* block */)appInfoFetchBlock;
- (void)setAppInfoFetchBlock:(id /* block */)arg0;
- (id /* block */)reportStateBlock;
- (void)setReportStateBlock:(id /* block */)arg0;
- (id /* block */)trackBlock;
- (id /* block */)trackBlock;
- (void)setTrackBlock:(id /* block */)arg0;
- (void)setTrackBlock:(id /* block */)arg0;
- (id /* block */)assertBlock;
- (void)setAssertBlock:(id /* block */)arg0;
- (id /* block */)imageDownLoad;
- (void)setImageDownLoad:(id /* block */)arg0;
- (BOOL)smoothSwitching;
- (void)setEnableVideoProcess:(BOOL)arg0 callTrace:(id)arg1;
- (void)setEnableVideoSDR2HDR:(BOOL)arg0 callTrace:(id)arg1;
- (BOOL)currentPlayeItemIsRTM;
- (void)adjustVolumeEffectTargetLufs:(float)arg0 callTrace:(id)arg1;
- (void)setWholeVolumeEffectParam:(id)arg0 callTrace:(id)arg1;
- (void)choosePlayerSpecifySceneForLOB:(long long)arg0 callTrace:(id)arg1;
- (void)setRoiBMFSR:(BOOL)arg0 xInRate:(float)arg1 yInRate:(float)arg2 wInRate:(float)arg3 hInRate:(float)arg4;
- (void)setOptionValue:(id)arg0 forOptionKey:(unsigned long long)arg1;
- (void)setShouldMuted:(BOOL)arg0;
- (id)sourceLoudness;
- (void)setSourceLoudness:(id)arg0;
- (BOOL)shouldMuted;
- (void)logWithEventKey:(id)arg0 callTrace:(id)arg1 content:(id)arg2;
- (BOOL)interrputed;
- (void)setInterrputed:(BOOL)arg0;
- (void)setRegisteredObservers:(BOOL)arg0;
- (BOOL)registeredObservers;
- (void)setRendered:(BOOL)arg0;
- (void)setEnterRoomStartTime:(double)arg0;
- (double)enterRoomStartTime;
- (void)deviceOrientChange;
- (id)basePlayerTrackParam;
- (void)setReportParam:(id)arg0;
- (id)plainTrackerParams;
- (void)detectCrossTalkWhenPlayerInActiveState:(BOOL)arg0;
- (BOOL)enableALogUplinkOptimize;
- (id)tvlManager;
- (unsigned long long)superViewHash;
- (id)topResponderChainStr;
- (void)setTrackerWithConfig:(id)arg0;
- (double)totalInRoomTimeCost;
- (BOOL)hasPreviewPullDuration;
- (BOOL)shouldUseAtomicReportParams;
- (void)setSafeReportParam:(id)arg0;
- (id)managerReportLogDic;
- (id)topResponderChain;
- (id)meidiaSourceType;
- (void)setSuperViewHash:(unsigned long long)arg0;
- (void)setTopResponderChainStr:(id)arg0;
- (double)pullStreamTimeCost;
- (long long)pullStreamSuccessCount;
- (void)setHasPreviewPullDuration:(BOOL)arg0;
- (void)setTotalInRoomTimeCost:(double)arg0;
- (void)logWithEventKey:(id)arg0 content:(id)arg1;
- (void)trackWithEvent:(id)arg0 callTrace:(id)arg1 paramObj:(id)arg2;
- (void)trackPullEndEvent:(id)arg0 callTrace:(id)arg1;
- (void)trackPlayStartEvent;
- (void)setEffectConfigured:(BOOL)arg0;
- (id)tvlSettings;
- (BOOL)enableVideoProcessWhenViewWillDisappear;
- (BOOL)enableCloseSDR2HDR;
- (BOOL)enableVolumeEffectTargetLufs;
- (BOOL)enableStreamAudioBalance;
- (BOOL)enableLiveSourceStreamAudioParam;
- (BOOL)enableMockCrossTalkInTestMode;
- (BOOL)enableSessionIDReport;
- (BOOL)enableSpecifySceneForLOB;
- (BOOL)disableHeadTrackingEnabled;
- (void)setDisableHeadTrackingEnabled:(BOOL)arg0;
- (BOOL)vrRenderException;
- (void)clearBackSticker;
- (void)getCoverImageWithImageName:(id)arg0 eventParams:(id)arg1;
- (void)getCoverImageWithImageUrl:(id)arg0 eventParams:(id)arg1 complete:(id /* block */)arg2;
- (void)updateVRConfig;
- (void)clearVRConfig;
- (BOOL)picoResolutionEnable;
- (id)resolutionPrioritys;
- (BOOL)vrFunctionSwtich;
- (void)pr_removeObservers;
- (void)setupDecorationView;
- (void)setAudioRenderingEnable:(BOOL)arg0;
- (void)setTvlManager:(id)arg0;
- (BOOL)shouldDisableVRMode;
- (void)setTvlLoadState:(long long)arg0;
- (void)setRoiRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)setVolumeEffectTargetLufs:(float)arg0;
- (void)setEnableBMFSR:(BOOL)arg0;
- (void)setSpecifyScene:(long long)arg0;
- (void)setWholeVolumeEffectParam:(id)arg0;
- (void)setStreamRenderAudioVolume:(id)arg0;
- (void)pr_registerObserver;
- (void)setMiddlewareProperties:(id)arg0;
- (void)setStreamIDStr:(id)arg0;
- (void)setReceiveMetaInfo:(id)arg0;
- (void)setReceiveStreamMetaInfo:(id)arg0;
- (void)setBinarySEIInfo:(id)arg0;
- (void)findBackupPreferenceIfNeed:(id)arg0 withSDKKey:(id)arg1;
- (id)p_findMainPreference:(id)arg0 with:(id)arg1;
- (void)p_finalSetMute:(BOOL)arg0;
- (void)reloadWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 useTLS:(BOOL)arg4;
- (id)buildPlayerItemWithStreamData:(id)arg0 callTrace:(id)arg1 defaultSDKKey:(id)arg2 force:(BOOL)arg3 useTLS:(BOOL)arg4 preferenceInfo:(id)arg5;
- (id)p_findMainTLSPreference:(id)arg0 with:(id)arg1;
- (void)setSupportsTimeShift:(BOOL)arg0;
- (void)setTimeShiftLowerBoundInSeconds:(double)arg0;
- (BOOL)audioRenderingEnable;
- (BOOL)enableEyesProtect;
- (double)eyesProtectValue;
- (void)setPlayStarted:(BOOL)arg0;
- (void)setPlayPaused:(BOOL)arg0;
- (void)setBackgroundAudioSessionIfNeed;
- (void)playActionNotificationSend;
- (BOOL)disablesdr2hdrByUser;
- (float)volumeEffectTargetLufs;
- (BOOL)isValidVolumeTarget:(float)arg0;
- (id)wholeVolumeEffectParam;
- (void)realAdjustWholeVolumeEffectParam:(id)arg0;
- (long long)specifyScene;
- (id)p_findTLSPreferenceByUpdate:(id)arg0;
- (id)p_findMainPreferenceByUpdate:(id)arg0;
- (id)safeReportParam;
- (BOOL)p_enableSetOption:(unsigned long long)arg0;
- (void)setBackgroundAudioSession;
- (id)audioSessionQueue;
- (void)setAudioSesionIfNeeded;
- (void)setDisableVideoProcessByUser:(BOOL)arg0;
- (void)setDisablesdr2hdrByUser:(BOOL)arg0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roiRegion;
- (BOOL)enableBMFSR;
- (unsigned long long)getTVLManagerPlaybackState;
- (long long)tvlLoadState;
- (void)addPlayerLoadStateObserver;
- (void)addPlaybackStateObserver;
- (BOOL)shouldEnableVideoProcess;
- (BOOL)shouldCloseLargeSizeStreamSuperReso;
- (BOOL)disableVideoProcessByUser;
- (BOOL)useActiveModeSkipInterrupt;
- (void)removePlaybackStateObserver;
- (void)removePlayerLoadStateObserver;
- (void)p_onStallStart:(id)arg0;
- (void)p_onStallEnd:(id)arg0;
- (void)handleTVPlayerItemStatusChanged:(long long)arg0;
- (void)p_onVideoSizeChanged:(id)arg0 videoSizeDidChange:(struct CGSize { double x0; double x1; })arg1;
- (void)setStreamSize:(struct CGSize { double x0; double x1; })arg0;
- (void)changeVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setCropSize:(struct CGSize { double x0; double x1; })arg0;
- (void)p_onReceiveSeiMessage:(id)arg0 seiInfo:(id)arg1;
- (void)didReceiveMetaInfo:(id)arg0;
- (void)setReceiveImmidiatelyMetaInfo:(id)arg0;
- (long long)getIESLiveSRType:(long long)arg0;
- (BOOL)hasManualSetSRType;
- (id)srTypeMap;
- (void)setTvlCommonParams:(id)arg0;
- (void)setTvlSettings:(id)arg0;
- (void)setHasManualSetSRType:(BOOL)arg0;
- (void)setPullStreamSuccessCount:(long long)arg0;
- (void)setPullStreamTimeCost:(double)arg0;
- (void)setEnableEyesProtect:(BOOL)arg0;
- (void)setEyesProtectValue:(double)arg0;
- (void)setShouldDisableVRMode:(BOOL)arg0;
- (id)tvlCommonParams;
- (long long)convertSRTypeFromString:(id)arg0;
- (void)resetPlayerPropertyForReuseWithCallTrace:(id)arg0;
- (void)setMeidiaSourceType:(id)arg0;
- (void)setRenderingFPS:(long long)arg0;
- (void)setPlayerAttachment:(id)arg0;
- (void)setAudioSessionQueue:(id)arg0;
- (void)setSrTypeMap:(id)arg0;
- (unsigned long long)playbackState;
- (id)init;
- (void)_clear;
- (void)setConfig:(id)arg0;
- (void).cxx_destruct;
- (void)setSessionID:(id)arg0;
- (BOOL)muted;
- (id)sessionID;
- (unsigned long long)loadState;
- (id)observerSet;
- (float)volume;
- (id)config;
- (void)setMuted:(BOOL)arg0;
- (id)contentURL;
- (long long)imageType;
- (id)debugInfo;
- (id)initWithConfig:(id)arg0;
- (id)delegate;
- (void)setImageType:(long long)arg0;
- (BOOL)prepareForReuse;
- (void)setError:(id)arg0;
- (void)setVolume:(float)arg0;
- (id)playerView;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setPlayerView:(id)arg0;
- (void)setRenderType:(long long)arg0;
- (void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(void *)arg3;
- (id)currentSettings;
- (id)view;
- (void)viewWillAppear;
- (id)error;
- (void)setValue:(int)arg0 forKey:(int)arg1;
- (void)setPlaybackState:(unsigned long long)arg0;
- (id)decorationView;
- (void)setContentURL:(id)arg0;
- (void)setDebugInfo:(id)arg0;
- (id)videoCodecType;
- (id)coverImage;
- (id)resolutionType;
- (void)setResolutionType:(id)arg0;
- (id)getAppInfo;
- (long long)scaleType;
- (void)setScaleType:(long long)arg0;
- (struct CGSize { double x0; double x1; })videoSize;
- (void)releaseEffect;
- (void)setVideoSize:(struct CGSize { double x0; double x1; })arg0;
- (unsigned long long)managerState;
- (BOOL)rendered;
- (void)setLoadState:(unsigned long long)arg0;
- (void)viewWillDisappear;

@end
