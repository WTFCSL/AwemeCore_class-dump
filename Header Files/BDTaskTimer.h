//
//     Generated by private class-dump
//

@class NSMutableDictionary, NSTimer, NSString, NSMutableArray;
@protocol BDTimerTaskExecuteDelegate;

@interface BDTaskTimer : NSObject <BDTimerRuleServiceProtocol> {
    NSTimer *_timer;
    NSMutableArray *_allRules;
    NSMutableArray *_validRules;
    NSMutableDictionary *_ruleCurrentCount;
    NSMutableDictionary *_ruleTimeLimit;
    NSString *_recentStartedRuleID;
    NSMutableDictionary *_currentProductID;
    NSMutableDictionary *_watchedProducts;
    id<BDTimerTaskExecuteDelegate> _delegate;
}

@property (retain, nonatomic) NSTimer *timer;
@property (retain, nonatomic) NSMutableArray *allRules;
@property (retain, nonatomic) NSMutableArray *validRules;
@property (retain, nonatomic) NSMutableDictionary *ruleCurrentCount;
@property (retain, nonatomic) NSMutableDictionary *ruleTimeLimit;
@property (copy, nonatomic) NSString *recentStartedRuleID;
@property (retain, nonatomic) NSMutableDictionary *currentProductID;
@property (retain, nonatomic) NSMutableDictionary *watchedProducts;
@property (weak, nonatomic) id<BDTimerTaskExecuteDelegate> delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void)initTaskTimer;
- (void)__countTime;
- (id)__virtulProductIDWithRuleID:(id)arg0;
- (void)startCountingForRule:(id)arg0 productID:(id)arg1 timeLimit:(double)arg2;
- (void)__startCountingWithProductID:(id)arg0 timeLimit:(double)arg1 ruleID:(id)arg2;
- (void)pauseCountingTimeForRule:(id)arg0 productID:(id)arg1;
- (void)__stopCountingWithProductID:(id)arg0 hasLimitedReached:(BOOL)arg1 resetCountTime:(BOOL)arg2 ruleID:(id)arg3;
- (void)stopCountingTimeForRule:(id)arg0 productID:(id)arg1 isReachProductLimit:(BOOL)arg2;
- (id)ruleCurrentCount;
- (BOOL)__checkTimerStatus;
- (id)validRules;
- (BOOL)__hasReachedLimit:(id)arg0;
- (id)currentProductID;
- (void)resetRuleCurrentCount:(id)arg0;
- (id)ruleTimeLimit;
- (void)setRecentStartedRuleID:(id)arg0;
- (id)watchedProducts;
- (void)__markWatchedProduct:(id)arg0 ruleID:(id)arg1;
- (void)startCountingForRule:(id)arg0;
- (void)startCountingForRule:(id)arg0 productID:(id)arg1;
- (void)pauseCountingTimeForRule:(id)arg0;
- (void)stopCountingTimeForRule:(id)arg0;
- (void)stopCountingTimeForRule:(id)arg0 productID:(id)arg1;
- (void)delloc;
- (void)setAllRules:(id)arg0;
- (void)setValidRules:(id)arg0;
- (void)setRuleCurrentCount:(id)arg0;
- (void)setRuleTimeLimit:(id)arg0;
- (id)recentStartedRuleID;
- (void)setCurrentProductID:(id)arg0;
- (void)setWatchedProducts:(id)arg0;
- (void)setTaskExecuteDelegate:(id)arg0;
- (id)timer;
- (id)init;
- (void).cxx_destruct;
- (id)delegate;
- (void)setTimer:(id)arg0;
- (void)setDelegate:(id)arg0;
- (id)allRules;

@end
