//
//     Generated by private class-dump
//

@class AVAsset, AVAssetImageGenerator, NLETrackSlot_OC, NSMutableArray;
@protocol DVEVideoThumbnailLoaderDataSource, DVEImageCacheProtocol;

@interface DVEVideoThumbnailLoader : NSObject {
    BOOL _allowFrameAmendMent;
    id<DVEVideoThumbnailLoaderDataSource> _dataSource;
    NLETrackSlot_OC *_slot;
    AVAssetImageGenerator *_generator;
    AVAsset *_asset;
    id<DVEImageCacheProtocol> _imageCache;
    NSMutableArray *_thumbnails;
    double _previousSpeed;
    double _previousTimeScale;
    long long _frameTotalCount;
    struct CGSize { double width; double height; } _thumbnailSize;
}

@property (retain, nonatomic) NLETrackSlot_OC *slot;
@property (retain, nonatomic) AVAssetImageGenerator *generator;
@property (retain, nonatomic) AVAsset *asset;
@property (retain, nonatomic) id<DVEImageCacheProtocol> imageCache;
@property (retain, nonatomic) NSMutableArray *thumbnails;
@property (nonatomic) double previousSpeed;
@property (nonatomic) double previousTimeScale;
@property (nonatomic) struct CGSize { double width; double height; } thumbnailSize;
@property (nonatomic) long long frameTotalCount;
@property (nonatomic) BOOL allowFrameAmendMent;
@property (weak, nonatomic) id<DVEVideoThumbnailLoaderDataSource> dataSource;

- (long long)calculateCount;
- (void)setFrameTotalCount:(long long)arg0;
- (id)getImageForKey:(id)arg0;
- (long long)frameTotalCount;
- (double)previousSpeed;
- (double)previousTimeScale;
- (id)timesOfSpeed:(double)arg0 scale:(double)arg1;
- (void)setPreviousSpeed:(double)arg0;
- (void)setPreviousTimeScale:(double)arg0;
- (id)thumbnailsOfSpeed:(double)arg0 scale:(double)arg1;
- (id)pathForThumbnail:(id)arg0;
- (id)imageFromCGImage:(struct CGImage { } *)arg0;
- (BOOL)allowFrameAmendMent;
- (id)initWithSlot:(id)arg0 dataSource:(id)arg1;
- (void)updateSlot:(id)arg0;
- (id)thumbnailAtIndex:(long long)arg0;
- (long long)countConsiderSpeed:(BOOL)arg0;
- (id)imageBaseKeyForSlot:(id)arg0;
- (id)taskKeyForThumbnail:(id)arg0;
- (void)imageOfThumbnail:(id)arg0 completion:(id /* block */)arg1;
- (id)closestThumbnailInCache:(id)arg0;
- (long long)p_getClosestIndexWithIndex1:(long long)arg0 index2:(long long)arg1 targetIndex:(long long)arg2;
- (id)taskOfThumbnail:(id)arg0 completion:(id /* block */)arg1;
- (void)setAllowFrameAmendMent:(BOOL)arg0;
- (id)slot;
- (struct CGSize { double x0; double x1; })thumbnailSize;
- (void)setThumbnailSize:(struct CGSize { double x0; double x1; })arg0;
- (void)setDataSource:(id)arg0;
- (id)dataSource;
- (void).cxx_destruct;
- (id)generator;
- (void)setImageCache:(id)arg0;
- (id)imageCache;
- (void)setSlot:(id)arg0;
- (id)asset;
- (void)setAsset:(id)arg0;
- (void)setGenerator:(id)arg0;
- (void)cancelAllTasks;
- (id)thumbnails;
- (void)setThumbnails:(id)arg0;

@end
