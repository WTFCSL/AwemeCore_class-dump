//
//     Generated by private class-dump
//

@class IESLiveAnchorActionContext, HTSLiveMessageActionCreator, HTSLiveRoom, HTSLive4LayerContainerView, HTSLivMediaPreviewRoomStatusManager, IESLiveMediaAuditView, HTSLiveAnchorActionCreator, IESLiveDI, IESLiveComponentContext, IESLiveAnchorStore, HTSEventContext, NSString, IESLiveAnchorPerfTrackImpl, IESLiveRoomExtraConfigModel, HTSLiveRecordCameraProcesser;
@protocol HTSLivePluginLayoutMachineProvider, IESLiveGeneralService, IESLiveRecoder, IESLiveComponentBootLoaderProtocol, HTSLiveDetailRouter, IESLiveTapAction, IESLiveFinishViewFactory;

@interface IESLiveMediaPreviewViewController : UIViewController <UIGestureRecognizerDelegate, IESLiveAnchorReaction, IESLiveAnchorPreviewActions, IESLiveAnchorCloseAction, IESLiveComponentLifeCycleNotifier> {
    BOOL _pluginLoaded;
    BOOL _needStartLive;
    BOOL __liveAnchorCheckFakeAudioState;
    IESLiveComponentContext *_componentContext;
    HTSEventContext *_pageContext;
    IESLiveAnchorStore *_store;
    HTSLiveRoom *_roomModel;
    IESLiveRoomExtraConfigModel *_extraConfig;
    IESLiveDI *_roomDI;
    id<IESLiveRecoder> _recoder;
    id<IESLiveComponentBootLoaderProtocol> _componentLoader;
    HTSLiveMessageActionCreator *_messageActionCreator;
    HTSLive4LayerContainerView *_containerView;
    HTSLiveAnchorActionCreator *_anchorActionCreator;
    HTSLivMediaPreviewRoomStatusManager *_roomStatusManager;
    id<IESLiveTapAction> _tapAction;
    id<HTSLiveDetailRouter> _router;
    id<IESLiveFinishViewFactory> _finishViewFactory;
    id<HTSLivePluginLayoutMachineProvider> _pluginLayoutMachine;
    HTSLiveRecordCameraProcesser *_cameraProcessor;
    IESLiveAnchorActionContext *_actionContext;
    double _appResignActiveTime;
    IESLiveMediaAuditView *_mediaAuditView;
    id<IESLiveGeneralService> _generalServiceManager;
    IESLiveAnchorPerfTrackImpl *_anchorPerfTrack;
}

@property (retain, nonatomic) IESLiveDI *roomDI;
@property (retain, nonatomic) id<IESLiveComponentBootLoaderProtocol> componentLoader;
@property (retain, nonatomic) HTSLiveMessageActionCreator *messageActionCreator;
@property (weak, nonatomic) HTSLive4LayerContainerView *containerView;
@property (retain, nonatomic) HTSLiveAnchorActionCreator *anchorActionCreator;
@property (retain, nonatomic) HTSLivMediaPreviewRoomStatusManager *roomStatusManager;
@property (retain, nonatomic) id<IESLiveTapAction> tapAction;
@property (retain, nonatomic) id<HTSLiveDetailRouter> router;
@property (retain, nonatomic) id<IESLiveFinishViewFactory> finishViewFactory;
@property (retain, nonatomic) id<HTSLivePluginLayoutMachineProvider> pluginLayoutMachine;
@property (retain, nonatomic) HTSLiveRecordCameraProcesser *cameraProcessor;
@property (retain, nonatomic) IESLiveAnchorActionContext *actionContext;
@property (nonatomic) double appResignActiveTime;
@property (retain, nonatomic) IESLiveMediaAuditView *mediaAuditView;
@property (retain, nonatomic) id<IESLiveGeneralService> generalServiceManager;
@property (retain, nonatomic) IESLiveAnchorPerfTrackImpl *anchorPerfTrack;
@property (retain, nonatomic) IESLiveComponentContext *componentContext;
@property (retain, nonatomic) HTSEventContext *pageContext;
@property (retain, nonatomic) IESLiveAnchorStore *store;
@property (retain, nonatomic) HTSLiveRoom *roomModel;
@property (retain, nonatomic) IESLiveRoomExtraConfigModel *extraConfig;
@property (retain, nonatomic) id<IESLiveRecoder> recoder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (id)componentContext;
- (id)roomModel;
- (void)setComponentContext:(id)arg0;
- (void)onAppBecomeActive;
- (void)onAppWillResignActive;
- (void)didClickCloseButton;
- (void)setRoomModel:(id)arg0;
- (void)setActionContext:(id)arg0;
- (id)componentLoader;
- (void)setComponentLoader:(id)arg0;
- (id)roomDI;
- (void)setRoomDI:(id)arg0;
- (void)setMessageActionCreator:(id)arg0;
- (id)messageActionCreator;
- (void)willStopLive;
- (void)clickCloseButton:(id)arg0;
- (void)forceCloseRoomByMediaAudit;
- (id)extraConfig;
- (void)setExtraConfig:(id)arg0;
- (void)componentFirstFrameDidFinishWithCost:(double)arg0;
- (void)closeAnchorRoomByForce:(BOOL)arg0 reason:(long long)arg1 trace:(id)arg2 completion:(id /* block */)arg3;
- (void)setAnchorPerfTrack:(id)arg0;
- (id)anchorPerfTrack;
- (void)setAppResignActiveTime:(double)arg0;
- (double)appResignActiveTime;
- (void)didClickContainerView:(id)arg0;
- (id)anchorActionCreator;
- (id)generalServiceManager;
- (id)recoder;
- (void)setAnchorActionCreator:(id)arg0;
- (void)loadVideoEffectProcesser;
- (void)setGeneralServiceManager:(id)arg0;
- (id)startLiveType;
- (BOOL)_closeRoomByForce:(BOOL)arg0 reason:(long long)arg1;
- (void)setPluginLayoutMachine:(id)arg0;
- (void)_clearAndQuit;
- (void)preloadPluginComponents;
- (void)loadTapGuestureRecognizer;
- (id)pluginLayoutMachine;
- (void)setCameraProcessor:(id)arg0;
- (id)cameraProcessor;
- (void)showFinishViewController:(id)arg0;
- (id)finishViewFactory;
- (id)createFinishViewControllerWithRoom:(id)arg0 forbiddenUrl:(id)arg1 title:(id)arg2 violationReason:(id)arg3 displayText:(id)arg4;
- (void)clearControllerAndShowFinish:(id)arg0;
- (void)closeRoomWithAccountExited;
- (id)initWithAnchorStore:(id)arg0;
- (void)setRecoder:(id)arg0;
- (void)setFinishViewFactory:(id)arg0;
- (void)realStartLive;
- (void)setRoomStatusManager:(id)arg0;
- (void)loadMediaAudit;
- (void)pr_gotoAnchorLivePageWithRoomModel:(id)arg0;
- (id)pr_createAnchorViewControllerWithRoom:(id)arg0;
- (id)mediaAuditView;
- (id)roomStatusManager;
- (void)setMediaAuditView:(id)arg0;
- (BOOL)shouldAutorotate;
- (void)_clear;
- (void)viewDidAppear:(BOOL)arg0;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (id)store;
- (void)viewWillDisappear:(BOOL)arg0;
- (void)setContainerView:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)viewDidDisappear:(BOOL)arg0;
- (void)setStore:(id)arg0;
- (BOOL)gestureRecognizer:(id)arg0 shouldReceiveTouch:(id)arg1;
- (id)containerView;
- (BOOL)prefersStatusBarHidden;
- (void)viewWillAppear:(BOOL)arg0;
- (void)dealloc;
- (void)viewDidLoad;
- (id)router;
- (void)setRouter:(id)arg0;
- (id)actionContext;
- (id)pageContext;
- (void)setPageContext:(id)arg0;
- (void)prepareForClose;
- (id)tapAction;
- (void)setTapAction:(id)arg0;

@end
