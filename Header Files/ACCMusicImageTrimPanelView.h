//
//     Generated by private class-dump
//

@class UIView, NSTimer, CADisplayLink, ACCMusicTrimSegmentClipView, ACCMusicTrimCheckBoxView, NSString, UIButton, ACCMusicTrimViewSnapShootModel, DUXPopover, ACCMusicTrimBubbleView, UILabel, ACCMusicTrimAudioWaveView;
@protocol ACCMusicCutPanelViewDelegate, ACCMusicModelProtocol;

@interface ACCMusicImageTrimPanelView : UIView <DVESegmentClipViewDelegate, ACCMusicTrimAudioWaveDelegate, ACCMusicTrimSegmentClipViewAccessibilityDelegate, ACCMusicTrimCheckBoxViewDelegate, ACCMusicCutPanelViewProtocol> {
    BOOL hasModifedMusicLoop;
    BOOL _isUserScrollAudioWaveViewManually;
    BOOL _isAnimating;
    BOOL _currentPanGestureReachMaxEdge;
    id<ACCMusicCutPanelViewDelegate> _delegate;
    id<ACCMusicModelProtocol> _music;
    unsigned long long _functionType;
    UIView *_maskView;
    UIView *_clickToSaveResultView;
    UIView *_contentView;
    UILabel *_musicTitleLabel;
    UIButton *_cancelButton;
    UIButton *_confirmButton;
    UILabel *_hintLabel;
    ACCMusicTrimCheckBoxView *_useOriginMusicCheckBox;
    ACCMusicTrimBubbleView *_bubbleView;
    ACCMusicTrimSegmentClipView *_segmentClipView;
    ACCMusicTrimAudioWaveView *_audioWaveView;
    UIView *_audioWaveBackgroundView;
    DUXPopover *_panHandlerTip;
    NSTimer *_panHandlerTipAutoDismissTimer;
    CADisplayLink *_handlerDisplayLink;
    double _currentPanTranslationScale;
    unsigned long long _currentPanPosition;
}

@property (retain, nonatomic) id<ACCMusicModelProtocol> music;
@property (nonatomic) unsigned long long functionType;
@property (retain, nonatomic) UIView *maskView;
@property (retain, nonatomic) UIView *clickToSaveResultView;
@property (retain, nonatomic) UIView *contentView;
@property (retain, nonatomic) UILabel *musicTitleLabel;
@property (retain, nonatomic) UIButton *cancelButton;
@property (retain, nonatomic) UIButton *confirmButton;
@property (retain, nonatomic) UILabel *hintLabel;
@property (retain, nonatomic) ACCMusicTrimCheckBoxView *useOriginMusicCheckBox;
@property (retain, nonatomic) ACCMusicTrimBubbleView *bubbleView;
@property (retain, nonatomic) ACCMusicTrimSegmentClipView *segmentClipView;
@property (retain, nonatomic) ACCMusicTrimAudioWaveView *audioWaveView;
@property (retain, nonatomic) UIView *audioWaveBackgroundView;
@property (retain, nonatomic) DUXPopover *panHandlerTip;
@property (nonatomic) BOOL isUserScrollAudioWaveViewManually;
@property (retain, nonatomic) NSTimer *panHandlerTipAutoDismissTimer;
@property (nonatomic) BOOL isAnimating;
@property (retain, nonatomic) CADisplayLink *handlerDisplayLink;
@property (nonatomic) BOOL currentPanGestureReachMaxEdge;
@property (nonatomic) double currentPanTranslationScale;
@property (nonatomic) unsigned long long currentPanPosition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isMusicLoopOpen;
@property (readonly, nonatomic) BOOL hasModifedMusicLoop;
@property (readonly, nonatomic) BOOL isUseOriginMusicOpen;
@property (readonly, nonatomic) BOOL isSelectSuggestOpen;
@property (readonly, nonatomic) struct _HTSAudioRange { double x0; double x1; } currentRange;
@property (readonly, nonatomic) ACCMusicTrimViewSnapShootModel *imageMusicTrimStatusModel;
@property (readonly, nonatomic) long long repeatCount;
@property (readonly, nonatomic) double currentTime;
@property (weak, nonatomic) id<ACCMusicCutPanelViewDelegate> delegate;

- (void)didClickConfirmButton;
- (id)segmentClipView;
- (void)setSegmentClipView:(id)arg0;
- (void)segmentClipView:(id)arg0 gesture:(id)arg1 position:(unsigned long long)arg2;
- (void)setupConfirmButton;
- (void)didClickCancelButton;
- (id)initWithConfigModel:(id)arg0;
- (id)imageMusicTrimStatusModel;
- (id)musicTitleLabel;
- (void)setMusicTitleLabel:(id)arg0;
- (void)updateHandlerFrame:(id)arg0 position:(unsigned long long)arg1;
- (void)configInitialViewStatusWithConfigModel:(id)arg0;
- (void)dismissPanelAnimatedWithCompletion:(id /* block */)arg0;
- (BOOL)hasModifedMusicLoop;
- (BOOL)isMusicLoopOpen;
- (void)showPanelAnimatedInView:(id)arg0 withCompletion:(id /* block */)arg1;
- (void)updateCurrentTimeStamp:(double)arg0;
- (BOOL)isUseOriginMusicOpen;
- (BOOL)isSelectSuggestOpen;
- (void)setupUIWithConfigModel:(id)arg0;
- (void)removeHandlerPanGestureTimer;
- (void)removePanHandlerTipAutoDismissTimer;
- (void)showPanHandlerTip;
- (void)setClickToSaveResultView:(id)arg0;
- (id)clickToSaveResultView;
- (id)audioWaveView;
- (void)dismissPanHandlerTip;
- (void)addHandlerPanGestureTimer;
- (void)setCurrentPanPosition:(unsigned long long)arg0;
- (void)setCurrentPanTranslationScale:(double)arg0;
- (void)setCurrentPanGestureReachMaxEdge:(BOOL)arg0;
- (id)useOriginMusicCheckBox;
- (void)updateHintLabelTitle;
- (BOOL)checkIfHandlersArriveMinimumEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateHandlerToMinimumEdgeWithPanPosition:(unsigned long long)arg0;
- (void)updateHandlerWithSegmentTranslation:(double)arg0 panPosition:(unsigned long long)arg1;
- (BOOL)checkIfRightHandlerArriveMaximumEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (BOOL)checkIfLeftHandlerArriveMaximumEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })arg0;
- (void)updateHandlerWhenBothHandlersDidReachMaximumEdgeWithScaleMusicDuration:(double)arg0 panPosition:(unsigned long long)arg1;
- (void)updateHandlerWhenCurrentHandlerDidReachMaximumEdgeButAnotherNotWithScrollMusicDuration:(double)arg0 panPosition:(unsigned long long)arg1;
- (void)updateHandlerToMaximumEdgeWithPanPosition:(unsigned long long)arg0;
- (BOOL)isUserScrollAudioWaveViewManually;
- (void)setIsUserScrollAudioWaveViewManually:(BOOL)arg0;
- (void)didClickUseWholeMusicSwitch;
- (double)calculateAudioLengthEachPointStandForWithMusicDurationInSelectedContentView:(double)arg0;
- (double)audioWaveWidthInSelectedContentView;
- (id)audioWaveBackgroundView;
- (void)didReceiveHandlerPanTimer;
- (void)setHandlerDisplayLink:(id)arg0;
- (id)handlerDisplayLink;
- (BOOL)currentPanGestureReachMaxEdge;
- (double)currentPanTranslationScale;
- (unsigned long long)currentPanPosition;
- (double)audioWaveMaxScaleDurationPerInterval;
- (double)handlersMaxScrollDurationPerInterval;
- (void)setupMusicTitleLabel;
- (void)setupHintLabel;
- (void)setupUseOriginMusicCheckBox;
- (void)setupAudioWaveBackgroundView;
- (void)setupAudioWaveViewWithInitialAudioLengthEachPointStandFor:(double)arg0;
- (void)setupSegmentClipView;
- (void)setupBubbleView;
- (double)audioWaveViewLeftGap;
- (void)setUseOriginMusicCheckBox:(id)arg0;
- (void)setAudioWaveView:(id)arg0;
- (void)setAudioWaveBackgroundView:(id)arg0;
- (void)setPanHandlerTip:(id)arg0;
- (id)panHandlerTip;
- (void)addPanHandlerTipAutoDismissTimer;
- (void)setPanHandlerTipAutoDismissTimer:(id)arg0;
- (id)panHandlerTipAutoDismissTimer;
- (void)audioWaveViewDidScrollWithAudioClipStartTime:(double)arg0;
- (void)userWillBeginScrollAudioWaveView;
- (void)userDidEndScrollAudioWaveView;
- (void)accessibilityIncrementWithPanPosition:(unsigned long long)arg0;
- (void)accessibilityDecrementWithPanPosition:(unsigned long long)arg0;
- (id)configAccessibilityValueWithPanPosition:(unsigned long long)arg0;
- (void)didSelectCheckBoxButtonWith:(id)arg0;
- (id)music;
- (BOOL)isAnimating;
- (long long)repeatCount;
- (void)setCancelButton:(id)arg0;
- (void).cxx_destruct;
- (id)cancelButton;
- (struct _HTSAudioRange { double x0; double x1; })currentRange;
- (void)setMusic:(id)arg0;
- (id)maskView;
- (id)contentView;
- (id)delegate;
- (double)currentTime;
- (unsigned long long)functionType;
- (void)setDelegate:(id)arg0;
- (void)dealloc;
- (void)setMaskView:(id)arg0;
- (void)setIsAnimating:(BOOL)arg0;
- (void)setContentView:(id)arg0;
- (id)confirmButton;
- (void)setConfirmButton:(id)arg0;
- (id)hintLabel;
- (void)setHintLabel:(id)arg0;
- (id)bubbleView;
- (void)setBubbleView:(id)arg0;
- (void)setupCancelButton;
- (void)setupContentView;
- (void)setFunctionType:(unsigned long long)arg0;

@end
